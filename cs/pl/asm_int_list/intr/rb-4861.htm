<HTML>
<HEAD>
<TITLE>Int 2F/AX=4B01h
</TITLE>
<META NAME="Description" CONTENT="
Int 2F/AX=4B01h - DOS 5+ TASK SWITCHER - BUILD CALLOUT CHAIN - 
AX = 4B01h
CX:DX - task switcher entry point (see #02819)
ES:BX = 0000h:0000h
Return: ES:BX - callback info structure (see #02817) or 0000h:0000h
Notes: called by the task switcher
this function is hooked by clients which require notification of task
switcher activities; the call must first be passed on to the prior
handler with registers unchanged using a simulated interrupt. On
return, the client must build a callback info structure and store
the returned ES:BX in the next field, then return the address of
">
<META NAME="robots" CONTENT="none">
</HEAD>
<BODY BGCOLOR="#FFD0A0">
<center>
<h2>Int 2F/AX=4B01h
</h2>
</center><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-4860.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-4862.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>
<p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<h3><font color=#C00040>DOS 5+ TASK SWITCHER - BUILD CALLOUT CHAIN</font></h3>
<PRE>
AX = 4B01h
CX:DX -> task switcher entry point <a href="rb-4862.htm#Table2819">(see #02819)</a>
ES:BX = 0000h:0000h<br>
<p><b>Return:</b><br>ES:BX -> callback info structure (see #02817) or 0000h:0000h
</PRE>
<p><b>Notes:</b>
Called by the task switcher.
This function is hooked by clients which require notification of task
switcher activities; the call must first be passed on to the prior
handler with registers unchanged using a simulated interrupt.  On
return, the client must build a callback info structure and store
the returned ES:BX in the "next" field, then return the address of
its own callback info structure..
A client program must add itself to the notification chain if it
provides services to other programs; before terminating, it must
remove itself from the chain by calling the task switcher's entry
point with AX=0005h <a href="rb-4862.htm#Table2819">(see #02819)</a>.
The task switcher entry point should not be saved, as it is subject to
change and will be provided on any notification call.
The Windows 3.1 Standard Mode supports this API
<p><b>See Also:</b>
<a href="rb-4520.htm">AX=160Bh</a> - <a href="rb-4862.htm">AX=4B02h</a>
<PRE>
<p>
Format of task switcher callback info structure:
<a name=table2817></a>
Offset  Size    Description     (Table 02817)
00h    DWORD   pointer to next callback info structure
04h    DWORD   pointer to notification function <a href="rb-4861.htm#Table2818">(see #02818)</a>
08h    DWORD   reserved
0Ch    DWORD   address of zero-terminated list of API info structures
<a href="rb-4862.htm#Table2821">(see #02821)</a>
<p>
<a name=table2818></a>
(Table 02818)
Values task switcher notification function is called with:.
AX = function
0000h switcher initialization
<p><b>Return:</b><br>AX = status
0000h if OK to load
nonzero to abort task switcher
0001h query suspend
BX = session ID
<p><b>Return:</b><br>AX = status
0000h if OK to switch session
0001h if not
0002h suspend session
BX = session ID
interrupts disabled
<p><b>Return:</b><br>AX = 0000h if OK to switch session
= 0001h if not
0003h activate session
BX = session ID
CX = session status flags
<p><b>bit 0:</b><br>Set if first activation of session
<p><b>bits 1-15:</b><br>Reserved (0)
interrupts disabled
<p><b>Return:</b><br>AX = 0000h
0004h session active
BX = session ID
CX = session status flags
<p><b>bit 0:</b><br>Set if first activation of session
<p><b>bits 1-15:</b><br>Reserved (0)
<p><b>Return:</b><br>AX = 0000h
0005h create session
BX = session ID
<p><b>Return:</b><br>AX = 0000h if OK to create session
= 0001h if not
0006h destroy session
BX = session ID
<p><b>Return:</b><br>AX = 0000h
0007h switcher termination
BX = flags
<p><b>bit 0:</b><br>Set if calling switcher is only switcher loaded
<p><b>bits 1-15:</b><br>Reserved (0)
<p><b>Return:</b><br>AX = 0000h.
ES:DI -> task switcher entry point <a href="rb-4862.htm#Table2819">(see #02819)</a>
</PRE>
<p><b>Notes:</b>
Function 0000h is generally called by the program which controls or
invokes the task switcher, rather than by the task switcher itself;
the entry point supplied to this function is not necessarily the
entry point to the task switcher itself, and may be 0000h:0000h.  If
any client indicates that loading is not possible, all clients will
be called with function 0007h; thus it is possible for a client to
receive a termination notice without a corresponding initialization
notice..
Except for functions 0002h and 0003h, the notification handler is
called with interrupts enabled and may make any INT 21h function
call; interrupts must not be enabled in functions 0002h and 0003h.
Function 0007h may be called with ES:DI = 0000h:0000h if the entry
point is no longer valid
<p>
<b>Category: <a href="cat-011.htm">
DOS-Based Task Switchers/Multitaskers</a>
- <a href="int-2F.htm">
Int 2Fh</a>
- <a href="alpha-d.htm">
D</a>
</b><p><p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-4860.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-4862.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>



</BODY>
</HTML>
