<HTML>
<HEAD>
<TITLE>Int 2F/AH=EEh
</TITLE>
<META NAME="Description" CONTENT="
Int 2F/AH=EEh - WEB v4.02 - WEB MODULE INSTALLATION CHECK - 
AH = EEh
AL = module ID (see #03114)
Return: AX = 0000h if installed
ES:DI - far entry point for module-specific API calls
(see #03115,#03116,#03117,#03118,#03119)
Program: WEB is an IPX-based peer-to-peer network by Webcorp.
SeeAlso: AX=EE00hWEB
(Table 03114)
Values for WEB module ID:
">
<META NAME="robots" CONTENT="none">
</HEAD>
<BODY BGCOLOR="#FFD0A0">
<center>
<h2>Int 2F/AH=EEh
</h2>
</center><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-5670.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-5672.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>
<p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<h3><font color=#C00040>WEB v4.02 - WEB MODULE INSTALLATION CHECK</font></h3>
<PRE>
AH = EEh
AL = module ID <a href="rb-5671.htm#Table3114">(see #03114)</a><br>
<p><b>Return:</b><br>AX = 0000h if installed
ES:DI -> far entry point for module-specific API calls
<a href="rb-0000.htm#Table0"></a>(see #03115,#03116,#03117,#03118,#03119)
</PRE>
<p><b>Program:</b>
WEB is an IPX-based peer-to-peer network by Webcorp.
<p><b>See Also:</b>
<a href="rb-5664.htm">AX=EE00h"WEB"</a>
<PRE>
<p>
<a name=table3114></a>
(Table 03114)
Values for WEB module ID:
10h    server module (SERVER.EXE)
20h    client module (CLIENT.EXE)
30h    mail module (MAIL.EXE)
40h    spooler (PCSPOOL.EXE)
50h    kernel module (KERNEL.EXE)
60h    SAP module (KERNEL.EXE)
70h    resident station manager (SM.EXE)
90h    router module (ROUTER.EXE)
<p>
<a name=table3115></a>
(Table 03115)
Call server module entry point with:.
BX = function
0000h remove server module
<p><b>Return:</b><br>AX = status (0000h if successful, else WEB error code)
0001h create SYSINFO file
</PRE>
<p><b>Note:</b>
The SYSINFO file is used by the station manager when
displaying info for a particular station
0002h get server object table
<PRE>
<p><b>Return:</b><br>CX = number of server objects
ES:DI -> server object table
</PRE>
<p><b>Note:</b>
Server objects include drives and devices that the
server module controls
0003h get server variables
<PRE>
<p><b>Return:</b><br>ES:DI -> server variables
<p>
<a name=table3116></a>
(Table 03116)
Call client module entry point with:.
BX = function
0000h remove client module
<p><b>Return:</b><br>AX = status (0000h if successful, else WEB error code)
0001h decrement client-only flag
0002h increment client-only flag
0005h set device capture
</PRE>
<p><b>Note:</b>
Decrements DeviceOutput flag, telling the spooler that
it may trap device output again
0006h clear device capture
<p><b>Note:</b>
Increments DeviceOutput flag, telling the spooler that
it should not trap device output (this is used
internally by the spooler to prevent it from trapping
its own output)
0007h get client debug pointer
<PRE>
<p><b>Return:</b><br>ES:DI -> client debug data structure (see #03120)
0008h get root drive
<p><b>Return:</b><br>AL = WEB startup drive
0009h get maximum possible drive/device redirections
<p><b>Return:</b><br>AL = maximum drive redirections
CH = maximum LPTx redirections
CL = maximum COMx redirections
000Ah suspend client
<p><b>Return:</b><br>AX = previous value of Suspend flag
000Bh resume client
<p><b>Return:</b><br>AX = previous value of Suspend flag
000Ch get instance data
CX = maximum number of structures in array
ES:DI -> buffer for array of WIN_INSTANCE_DATA structures
<a href="rb-5671.htm#Table3121">(see #03121)</a>
<p><b>Return:</b><br>CX = number of structures actually returned
</PRE>
<p><b>Note:</b>
Used internally by WEB4WIN
<PRE>
<p>
<a name=table3117></a>
(Table 03117)
Call mail module entry point with:.
BX = function
0000h remove mail module
<p><b>Return:</b><br>AX = status (0000h successful, else WEB error code)
0001h set mail poll
</PRE>
<p><b>Note:</b>
Schedules the WEB mail module
0002h set mail notify
<p><b>Note:</b>
Sets the Notify flag, which determines whether the
user will be notified when mail is received
0003h clear mail notify
<p><b>Note:</b>
Clears the Notify flag, which determines whether the
user will be notified when mail is received
0004h check whether new mail has arrived
<PRE>
<p><b>Return:</b><br>AL = new mail status
00h no new mail since last call
else new mail has arrived
</PRE>
<p><b>Note:</b>
Also clears the new-mail flag after retrieving it
0005h send notify
ES:DI -> name of WEB user to be notified
0006h get post office
<PRE>
<p><b>Return:</b><br>ES:DI -> full network path of Post Office subdirectory
<p>
<a name=table3118></a>
(Table 03118)
Call spooler entry point with:.
BX = function
0000h remove PCSpool module
<p><b>Return:</b><br>AX = status (0000h successful, else WEB error code)
0001h set spooler poll
</PRE>
<p><b>Note:</b>
Schedules the WEB spooler
0002h check spooler changed
<PRE>
<p><b>Return:</b><br>AX = 0000h
</PRE>
<p><b>Note:</b>
This call is a NOP in current versions of WEB
<PRE>
<p>
<a name=table3119></a>
(Table 03119)
Call kernel entry point with:.
BX = function
0000h remove kernel module
<p><b>Return:</b><br>AX = status (0000h successful, else WEB error code)
0001h set kernel ^S filter
DL = new state (00h don't filter ^S, nonzero do filter)
0002h get kernel data area
<p><b>Return:</b><br>ES:DI -> kernel data area
0003h display dialog box
CL = dialog box type
00h password
01h E-Note received notification
02h Novell login
03h general notification
DL = number of rows to display
ES:SI -> array of far pointers to rows to be displayed
ES:DI -> Pascal-style input buffer
<p><b>Return:</b><br>AX = status (0000h successful, else error code)
0004h kernel service events
0005h get kernel's in-critical-section flag
<p><b>Return:</b><br>ES:DI -> kernel InCriticalSection flag
0006h schedule DOS event
AL = directive
00h do not ignore WEB ExtraBusy flag
01h ignore ExtraBusy flag
02h (WEB4WIN) check that current Windows VM is foregrnd VM
ES:SI -> WEB AES Event Control Block (ECB) <a href="rb-5671.htm#Table3122">(see #03122)</a>
</PRE>
<p><b>Notes:</b>
The WEB Asynchronous Event Scheduler is similar to the
one used by IPX; this call schedules a special ECB
to be executed at a later time.  Unlike IPX ECBs,
the timeout must be set explicitly by the caller
this function also calls function 0004h
0007h check busy
AL = directive
00h do not ignore WEB ExtraBusy flag
01h ignore ExtraBusy flag
02h (WEB4WIN) check that current Windows VM is foregrnd VM
<PRE>
<p><b>Return:</b><br>AX = status (0000h not busy, else busy)
0008h set keyboard intercept
</PRE>
<p><b>Note:</b>
Currently a NOP which returns immediately
0009h get keyboard intercept
<p><b>Note:</b>
Currently a NOP which returns immediately
000Ah get dialog flags
<PRE>
<p><b>Return:</b><br>ES:DI -> kernel dialog flags (see #03123)
000Bh get network path
<p><b>Return:</b><br>ES:DI -> fully-qualified network path of file where
the screen is stored on Dialog calls
000Ch kernel alternate dialog
CL = dialog box type
00h password
01h E-Note received notification
02h Novell login
03h general notification
DL = number of rows to display
ES:SI -> array of far pointers to rows to be displayed
ES:DI -> Pascal-style input buffer
<p><b>Return:</b><br>AX = status (0000h successful, else error code)
</PRE>
<p><b>Note:</b>
This function is identical to function 0003h except
that it does not notify WEB4WIN of the impending
dialog request
000Dh get machine/operating system type
<PRE>
<p><b>Return:</b><br>AX = machine/operating system type
01h IBM PC, MS-DOS
02h IBM PC, DOSV (Japanese)
03h NEC PC-9800, JDOS (Japanese)
04h IBM PC, Korean DBC DOS
<p>
Format of client debug data structure:
<a name=table3120></a>
Offset  Size    Description     (Table 03120)
00h    WORD    total files
02h    WORD    files free
04h    WORD    no files
06h    WORD    minimum files
08h    WORD    total FCBs
0Ah    WORD    total safe FCBs
0Ch    WORD    FCBs in use
0Eh    WORD    wrong FCB
10h    WORD    compressed
12h    WORD    retransmits
<p>
Format of WIN_INSTANCE_DATA structure:
<a name=table3121></a>
Offset  Size    Description     (Table 03121)
00h    DWORD   real-mode pointer to data to be instanced
04h    WORD    size of data to be instanced
<p>
Format of WEB AES Event Control Block:
<a name=table3122></a>
Offset  Size    Description     (Table 03122)
00h    DWORD   link address
04h    WORD    ESR address
08h    BYTE    InUse flag
09h    BYTE    completion code
0Ah  3 BYTEs   reserved
0Dh    WORD    timeout
0Fh    BYTE    IgnoreExtra flag
10h    WORD    PSP
12h    DWORD   DTA
16h    WORD    AX value for DOS critical information
18h    WORD    BX value for DOS critical information
1Ah    WORD    CX value for DOS critical information
1Ch    WORD    DX value for DOS critical information
<p>
<a name=table3123></a>
(Table 03123)
Values for kernel dialog flags:
01h    dialog will timeout
02h    display stars instead of entered keystrokes
</PRE>
<p>
<b>Category: <a href="cat-027.htm">
Network</a>
- <a href="int-2F.htm">
Int 2Fh</a>
- <a href="alpha-w.htm">
W</a>
</b><p><p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-5670.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-5672.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>



</BODY>
</HTML>
