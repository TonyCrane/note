<HTML>
<HEAD>
<TITLE>Int 21/AX=4402h
</TITLE>
<META NAME="Description" CONTENT="
Int 21/AX=4402h - Novell DOS 7+ EMM386.EXE - GET STATE RECORD - 
AX = 4402h
BX = file handle for device EMMXXXX0 or EMMQXXX0
CX = 003Eh (size of state record)
DS:DX - buffer for state record (see #01511)
Return: CF clear if successful
buffer filled (see #03603 at INT 67/AH=3Fh)
CF set on error
AX = error code (01h,05h,06h,0Dh) (see #01680 at AH=59h/BX=0000h)
Note:  This function is called by the Novell DOS 7+ MEM utility.
">
<META NAME="robots" CONTENT="none">
</HEAD>
<BODY BGCOLOR="#FFD0A0">
<center>
<h2>Int 21/AX=4402h
</h2>
</center><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-2845.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-2847.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>
<p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<h3><font color=#C00040>Novell DOS 7+ EMM386.EXE - GET STATE RECORD</font></h3>
<PRE>
AX = 4402h
BX = file handle for device "EMMXXXX0" or "EMMQXXX0"
CX = 003Eh (size of state record)
DS:DX -> buffer for state record <a href="rb-2846.htm#Table1511">(see #01511)</a><br>
<p><b>Return:</b><br>CF clear if successful
buffer filled <a href="rb-0000.htm#Table0"></a>(see #03603 at INT 67/AH=3Fh)
CF set on error
AX = error code (01h,05h,06h,0Dh) <a href="rb-0000.htm#Table0"></a>(see #01680 at AH=59h/BX=0000h)
</PRE>
<p><b>Note:</b>
This function is called by the Novell DOS 7+ MEM utility.
<PRE>
<p>
Format of Novell DOS 7 - DR-DOS 7.03 EMM386.EXE state record:
<a name=table1511></a>
Offset  Size    Description     (Table 01511)
00h    WORD    signature EDC0h
02h 12 BYTEs   (ret) bitmap for include range
0Eh 12 BYTEs   (ret) bitmap for auto range
1Ah 12 BYTEs   (ret) bitmap for BIOS range
26h 12 BYTEs   (ret) bitmap for ROM range
32h 12 BYTEs   (ret) bitmap for map range
</PRE>
<p><b>Note:</b>
Each bitmap covers the upper-memory address range A000h-FFFFh, where
offset X bit B within the bitmap indicates the state of the 4K page
starting at segment A000h + (8X + B) * 100h
<p>
<b>Category: <a href="cat-024.htm">
Memory Management</a>
- <a href="int-21.htm">
Int 21h</a>
- <a href="alpha-n.htm">
N</a>
</b><p><p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-2845.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-2847.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>



</BODY>
</HTML>
