<HTML>
<HEAD>
<TITLE>Int 15/AH=89h
</TITLE>
<META NAME="Description" CONTENT="
Int 15/AH=89h - SYSTEM - SWITCH TO PROTECTED MODE - 
AH = 89h
BL = interrupt number of IRQ0 (IRQ1-7 use next 7 interrupts)
BH = interrupt number of IRQ8 (IRQ9-F use next 7 interrupts)
ES:SI - GDT for protected mode (see #00500)
Return: CF set on error
AH = FFh error enabling address line 20
CF clear if successful
AH = 00h
in protected mode at specified address
BP may be destroyed; all segment registers change
">
<META NAME="robots" CONTENT="none">
</HEAD>
<BODY BGCOLOR="#FFD0A0">
<center>
<h2>Int 15/AH=89h
</h2>
</center><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-1530.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-1532.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>
<p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<h3><font color=#C00040>SYSTEM - SWITCH TO PROTECTED MODE</font></h3>
<PRE>
AH = 89h
BL = interrupt number of IRQ0 (IRQ1-7 use next 7 interrupts)
BH = interrupt number of IRQ8 (IRQ9-F use next 7 interrupts)
ES:SI -> GDT for protected mode <a href="rb-1531.htm#Table500">(see #00500)</a><br>
<p><b>Return:</b><br>CF set on error
AH = FFh  error enabling address line 20
CF clear if successful
AH = 00h
in protected mode at specified address
BP may be destroyed; all segment registers change
</PRE>
<p><b>Notes:</b>
BL and BH must be multiples of 8.
The protected-mode CS must reference the same memory as the CS this
function is called from because execution continues with the address
following the interrupt call
<p><b>See Also:</b>
<a href="rb-1527.htm">AH=87h</a> - <a href="rb-1529.htm">AH=88h</a> - <a href="rb-7503.htm">INT 67/AX=DE0Ch</a>
<PRE>
<p>
Format of BIOS switch-to-protected-mode Global Descriptor Table:
<a name=table500></a>
Offset  Size    Description     (Table 00500)
00h  8 BYTEs   null descriptor (initialize to zeros)
08h  8 BYTEs   GDT descriptor <a href="rb-1531.htm#Table501">(see #00501)</a>
10h  8 BYTEs   IDT descriptor
18h  8 BYTEs   DS descriptor
20h  8 BYTEs   ES
28h  8 BYTEs   SS
30h  8 BYTEs   CS
38h  8 BYTEs   uninitialized, used to build descriptor for BIOS CS
<p>
Format of segment descriptor table entry:
<a name=table501></a>
Offset  Size    Description     (Table 00501)
00h    WORD    segment limit, low word
02h  3 BYTEs   segment base address, low 24 bits
05h    BYTE    access mode <a href="rb-1531.htm#Table502">(see #00502)</a>
06h    BYTE    386+ extended access mode <a href="rb-1531.htm#Table505">(see #00505)</a>
07h    BYTE    386+ segment base address, high 8 bits
</PRE>
<p><b>See Also:</b>
#00500 - <a href="rb-4173.htm">INT 2C/AX=0002h</a> - <a href="rb-5811.htm">INT 31/AX=0009h</a>
<PRE>
<p>
Bitfields for segment descriptor table access mode field:
<a name=table502></a>
Bit(s)  Description     (Table 00502)
3-0    segment type <a href="rb-0000.htm#Table0"></a>(see #00503,#00504)
4      descriptor type (1 = application, 0 = system)
6-5    descriptor privilege level
7      segment is present in RAM
</PRE>
<p><b>See Also:</b>
#00501 - #00505
<PRE>
<p>
<a name=table503></a>
(Table 00503)
Values for system segment descriptor type:
0      reserved
1      available 16-bit TSS
2      LDT
3      busy 16-bit TSS
4      16-bit call gate
5      task gate
6      16-bit interrupt gate
7      16-bit trap gate
8      reserved
9      available 32-bit TSS
10     reserved
11     busy 32-bit TSS
12     32-bit call gate
13     reserved
14     32-bit interrupt gate
15     32-bit trap gate
</PRE>
<p><b>See Also:</b>
#00502 - #00504
<PRE>
<p>
Bitfields for application segment descriptor type:
<a name=table504></a>
Bit(s)  Description     (Table 00504)
3      code/data.
0 date.
1 code
---data segments---
2      expand down
1      writeable
---code segments---
2      conforming
1      readable
------
0      accessed
</PRE>
<p><b>See Also:</b>
#00502 - #00503
<PRE>
<p>
Bitfields for 386+ segment descriptor table extended access mode field:
<a name=table505></a>
Bit(s)  Description     (Table 00505)
3-0    high 4 bits of segment limit
4      available
5      reserved (0)
6      default operation size (1 = 32 bits, 0 = 16 bits)
7      granularity (1 = 4K, 0 = byte)
</PRE>
<p><b>See Also:</b>
#00501 - #00502 - #02557
<p>
<b>Category: <a href="cat-003.htm">
Bios</a>
- <a href="int-15.htm">
Int 15h</a>
- <a href="alpha-s.htm">
S</a>
</b><p><p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-1530.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-1532.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>



</BODY>
</HTML>
