<HTML>
<HEAD>
<TITLE>Int 2F/AX=1607h/BX=0015h
</TITLE>
<META NAME="Description" CONTENT="
Int 2F/AX=1607h/BX=0015h - MS Windows - DOSMGR VIRTUAL DEVICE API - 
AX = 1607h
BX = 0015h (VxD identifier of DOSMGR)
CX = function
0000h query instance processing
DX = 0000h
Return: CX = state
0000h not instanced
other instanced (DOS 5+ kernel returns 0001h)
DX = segment of DOS drivers or 0000h for
default of 0070h
">
<META NAME="robots" CONTENT="none">
</HEAD>
<BODY BGCOLOR="#FFD0A0">
<center>
<h2>Int 2F/AX=1607h/BX=0015h
</h2>
</center><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-4505.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-4507.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>
<p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<h3><font color=#C00040>MS Windows - DOSMGR VIRTUAL DEVICE API</font></h3>
<PRE>
AX = 1607h
BX = 0015h (VxD identifier of "DOSMGR")
CX = function
0000h query instance processing
DX = 0000h
<p><b>Return:</b><br>CX = state
0000h not instanced
other instanced (DOS 5+ kernel returns 0001h)
DX = segment of DOS drivers or 0000h for
default of 0070h
ES:BX -> patch table <a href="rb-4506.htm#Table2637">(see #02637)</a>
0001h set patches in DOS
DX = bit mask of patch requests <a href="rb-4506.htm#Table2636">(see #02636)</a>
<p><b>Return:</b><br>AX = B97Ch
BX = bit mask of patches applied <a href="rb-4506.htm#Table2636">(see #02636)</a>
DX = A2ABh
0002h remove patches in DOS (ignored by DOS 5.0 kernel)
DX = bit mask of patch requests <a href="rb-4506.htm#Table2636">(see #02636)</a>
<p><b>Return:</b><br>CX = 0000h (DOS 5-6)
</PRE>
<p><b>Note:</b>
Return values are ignored by DOSMGR in Windows 3.1
0003h get size of DOS data structures
DX = bit mask of request (only one bit can be set)
<PRE>
<p><b>bit 0:</b><br>Current Directory Structure size
<p><b>Return:</b><br>If supported request:
AX = B97Ch
CX = size in bytes of requested structure
DX = A2ABh
else:
CX = 0000h
all other registers preserved
0004h determine instanced data structures
<p><b>Return:</b><br>AX = B97Ch if supported
DX = A2ABh if supported (DOS 5+ kernel returns 0000h)
BX = bit mask of instanced items
<p><b>bit 0:</b><br>CDS
<p><b>bit 1:</b><br>SFT
<p><b>bit 2:</b><br>Device list
<p><b>bit 3:</b><br>DOS swappable data area
0005h get device driver size
ES = segment of device driver
<p><b>Return:</b><br>DX:AX = 0000h:0000h on error (not dev. driver segment)
DX:AX = A2ABh:B97Ch if successful
BX:CX = size of device driver in bytes
</PRE>
<p><b>Notes:</b>
DOSMGR (DOS Manager) will check whether the OEM DOS/BIOS data has
been instanced via this API and will not perform its own default
instancing of the normal DOS/BIOS data if so; if this API is not
supported, DOSMGR will also try to access instancing data through
INT 2F/AX=1603h.
These functions are supported by the DOS 5+ kernel; DOSMGR contains
tables of instancing information for earlier versions of DOS.
See Geoff Chappell's book _DOS_Internals_ for additional discussions of
DOSMGR's behavior and instancing in general
<p><b>See Also:</b>
<a href="rb-4497.htm">AX=1603h</a> - <a href="rb-4498.htm">AX=1605h</a> - <a href="rb-4502.htm">AX=1607h/BX=000Ch</a> - <a href="rb-4505.htm">AX=16
<p><b>See Also:</b>
<a href="rb-4501.htm">AX=1684h"DEVICE API"</a>
<PRE>
<p>
Bitfields for DOSMGR patch requests:
<a name=table2636></a>
Bit(s)  Description     (Table 02636)
0      enable critical sections
1      NOP setting/checking user ID
2      turn INT 21/AH=3Fh on STDIN into polling loop
3      trap stack fault in "SYSINIT" to WIN386
4      BIOS patch to trap "Insert disk X:" to WIN386
<p>
Format of DOSMGR patch table:
<a name=table2637></a>
Offset  Size    Description     (Table 02637)
00h  2 BYTEs   DOS version (major, minor)
02h    WORD    offset in DOS data segment of "SAVEDS"
04h    WORD    offset in DOS data segment of "SAVEBX"
06h    WORD    offset in DOS data segment of InDOS flag
08h    WORD    offset in DOS data segment of User ID word
0Ah    WORD    offset in DOS data segment of "CritPatch" table to enable
critical section calls (see INT 2A/AH=80h)
0Ch    WORD    (DOS 5+ only) offset in DOS data segment of "UMB_HEAD",
containing segment of last MCB in conventional memory
</PRE>
<p>
<b>Category: <a href="cat-010.htm">
DOS Kernel</a>
- <a href="int-2F.htm">
Int 2Fh</a>
- <a href="alpha-m.htm">
M</a>
</b><p><p><img src=./gif/rbline.gif width="100%" alt="------"><p>
<table border=1 cellpadding=3 cellspacing=1>
<td>
<a href="rb-4505.htm">
<img src=./gif/lup.gif border=0 alt=Prev></a>
<a href="rb-4507.htm">
<img src=./gif/ldown.gif border=0 alt=Next></a>
<a href="../rbrown.htm">
<img src=./gif/lhome.gif border=0 alt=Ralf Brown Page></a>
<td><a href="int.htm">Interrups</a></td>
<td><a href="cat.htm">Categories</a></td>
<td><a href="alpha.htm">Contents</a></td>
</td></table><p>



</BODY>
</HTML>
